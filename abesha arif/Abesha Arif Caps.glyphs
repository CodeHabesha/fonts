{
.appVersion = "1141";
DisplayStrings = (
"/la-ethiopic",
"/de-ethiopic",
"",
"",
"/ko-ethiopic",
"",
"",
"",
"/ha-ethiopic/hu-ethiopic/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic/la-ethiopic/lu-ethiopic/li-ethiopic/laa-ethiopic/lee-ethiopic/le-ethiopic/lo-ethiopic/lwa-ethiopic/hha-ethiopic/hhu-ethiopic/hhi-ethiopic/hhaa-ethiopic/hhee-ethiopic/hhe-ethiopic/hho-ethiopic/hhwa-ethiopic/ma-ethiopic/mu-ethiopic/mi-ethiopic/maa-ethiopic/mee-ethiopic/me-ethiopic/mo-ethiopic/mwa-ethiopic/sza-ethiopic/szu-ethiopic/szi-ethiopic/szaa-ethiopic/szee-ethiopic/sze-ethiopic/szo-ethiopic/szwa-ethiopic/ra-ethiopic/ru-ethiopic/ri-ethiopic/raa-ethiopic/ree-ethiopic/re-ethiopic/ro-ethiopic/rwa-ethiopic/sa-ethiopic/su-ethiopic/si-ethiopic/saa-ethiopic/see-ethiopic/se-ethiopic/so-ethiopic/swa-ethiopic/sha-ethiopic/shu-ethiopic/shi-ethiopic/shaa-ethiopic/shee-ethiopic/she-ethiopic/sho-ethiopic/shwa-ethiopic/qa-ethiopic/qu-ethiopic/qi-ethiopic/qaa-ethiopic/qee-ethiopic/qe-ethiopic/qo-ethiopic/qoa-ethiopic/qwaa-ethiopic/ba-ethiopic/bu-ethiopic/bi-ethiopic/baa-ethiopic/bee-ethiopic/be-ethiopic/bo-ethiopic/bwa-ethiopic/va-ethiopic/vu-ethiopic/vi-ethiopic/vaa-ethiopic/vee-ethiopic/ve-ethiopic/vo-ethiopic/vwa-ethiopic/ta-ethiopic/tu-ethiopic/ti-ethiopic/taa-ethiopic/tee-ethiopic/te-ethiopic/to-ethiopic/twa-ethiopic/ca-ethiopic/cu-ethiopic/ci-ethiopic/caa-ethiopic/cee-ethiopic/ce-ethiopic/co-ethiopic/cwa-ethiopic/xa-ethiopic/xu-ethiopic/xi-ethiopic/xaa-ethiopic/xee-ethiopic/xe-ethiopic/xo-ethiopic/xoa-ethiopic/na-ethiopic/nu-ethiopic/ni-ethiopic/naa-ethiopic/nee-ethiopic/ne-ethiopic/no-ethiopic/nwa-ethiopic/nya-ethiopic/nyu-ethiopic/nyi-ethiopic/nyaa-ethiopic/nyee-ethiopic/nye-ethiopic/nyo-ethiopic/nywa-ethiopic/aGlottal-ethiopic/uGlottal-ethiopic/iGlottal-ethiopic/aaGlottal-ethiopic/eeGlottal-ethiopic/eGlottal-ethiopic/oGlottal-ethiopic/waGlottal-ethiopic/ka-ethiopic/ku-ethiopic/ki-ethiopic/kaa-ethiopic/kee-ethiopic/ke-ethiopic/ko-ethiopic/koa-ethiopic/kwaa-ethiopic/kxa-ethiopic/kxu-ethiopic/kxi-ethiopic/kxaa-ethiopic/kxee-ethiopic/kxe-ethiopic/kxo-ethiopic/kxwaa-ethiopic/wa-ethiopic/wu-ethiopic/wi-ethiopic/waa-ethiopic/wee-ethiopic/we-ethiopic/wo-ethiopic/woa-ethiopic/aPharyngeal-ethiopic/uPharyngeal-ethiopic/iPharyngeal-ethiopic/aaPharyngeal-ethiopic/eePharyngeal-ethiopic/ePharyngeal-ethiopic/oPharyngeal-ethiopic/za-ethiopic/zu-ethiopic/zi-ethiopic/zaa-ethiopic/zee-ethiopic/ze-ethiopic/zo-ethiopic/zwa-ethiopic/zha-ethiopic/zhu-ethiopic/zhi-ethiopic/zhaa-ethiopic/zhee-ethiopic/zhe-ethiopic/zho-ethiopic/zhwa-ethiopic/ya-ethiopic/yu-ethiopic/yi-ethiopic/yaa-ethiopic/yee-ethiopic/ye-ethiopic/yo-ethiopic/yoa-ethiopic/da-ethiopic/du-ethiopic/di-ethiopic/daa-ethiopic/dee-ethiopic/de-ethiopic/do-ethiopic/dwa-ethiopic/dda-ethiopic/ddu-ethiopic/ddi-ethiopic/ddaa-ethiopic/ddee-ethiopic/dde-ethiopic/ddo-ethiopic/ddwa-ethiopic/ja-ethiopic/ju-ethiopic/ji-ethiopic/jaa-ethiopic/jee-ethiopic/je-ethiopic/jo-ethiopic/jwa-ethiopic/ga-ethiopic/gu-ethiopic/gi-ethiopic/gaa-ethiopic/gee-ethiopic/ge-ethiopic/go-ethiopic/goa-ethiopic/gga-ethiopic/ggu-ethiopic/ggi-ethiopic/ggaa-ethiopic/ggee-ethiopic/gge-ethiopic/ggo-ethiopic/tha-ethiopic/thu-ethiopic/thi-ethiopic/thaa-ethiopic/thee-ethiopic/the-ethiopic/tho-ethiopic/thwa-ethiopic/cha-ethiopic/chu-ethiopic/chi-ethiopic/chaa-ethiopic/chee-ethiopic/che-ethiopic/cho-ethiopic/chwa-ethiopic/pha-ethiopic/phu-ethiopic/phi-ethiopic/phaa-ethiopic/phee-ethiopic/phe-ethiopic/pho-ethiopic/phwa-ethiopic/tsa-ethiopic/tsu-ethiopic/tsi-ethiopic/tsaa-ethiopic/tsee-ethiopic/tse-ethiopic/tso-ethiopic/tswa-ethiopic/tza-ethiopic/tzu-ethiopic/tzi-ethiopic/tzaa-ethiopic/tzee-ethiopic/tze-ethiopic/tzo-ethiopic/tzoa-ethiopic/fa-ethiopic/fu-ethiopic/fi-ethiopic/faa-ethiopic/fee-ethiopic/fe-ethiopic/fo-ethiopic/fwa-ethiopic/pa-ethiopic/pu-ethiopic/pi-ethiopic/paa-ethiopic/pee-ethiopic/pe-ethiopic/po-ethiopic/pwa-ethiopic/rya-ethiopic/mya-ethiopic/fya-ethiopic"
);
copyright = "Copyright Â© 2018 by fasil Fikreab. All rights reserved.";
customParameters = (
{
name = description;
value = "Abesha font: style:Arif \012";
},
{
name = trademark;
value = "codeHabesha\012";
},
{
name = panose;
value = (
2,
0,
6,
3,
8,
0,
0,
9,
0,
4
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
5,
31
);
},
{
name = codePageRanges;
value = (
1252,
1254,
1258,
857,
850
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
controlCR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
AE,
Oslash,
plusminus,
yen,
mu,
ordfeminine,
ordmasculine,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
florin,
guillemotleft,
guillemotright,
ellipsis,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
ydieresis,
Ydieresis,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
divisionslash,
uni2216,
currency,
Lslash,
lslash,
onesuperior,
Eth,
onehalf,
Thorn,
onequarter,
brokenbar,
thorn,
threequarters,
twosuperior,
minus,
eth,
multiply,
threesuperior,
Scaron,
Yacute,
Zcaron,
scaron,
yacute,
zcaron,
commaturnedmod,
apostrophemod,
zerowidthspace,
zerowidthnonjoiner,
zerowidthjoiner,
secondtonechinese,
fourthtonechinese,
firsttonechinese,
macronlowmod,
gravelowmod,
acutelowmod,
gravecmb,
acutecmb,
circumflexcmb,
tildecmb,
macroncmb,
brevecmb,
dotaccentcmb,
dieresiscmb,
ringcmb,
hungarumlautcmb,
caroncmb,
breveinvertedcmb,
commaturnedabovecmb,
commaabovecmb,
gravebelowcmb,
acutebelowcmb,
dotbelowcmb,
dieresisbelowcmb,
ringbelowcmb,
commaaccent,
cedillacmb,
ogonekcmb,
caronbelowcmb,
circumflexbelowcmb,
brevebelowcmb,
breveinvertedbelowcmb,
tildebelowcmb,
macronbelowcmb,
soliduslongoverlaycmb,
angstrom,
combininggraphemejoiner,
Euro,
stroke.start,
divisionslash.clone,
uni29F5,
quotesinglbase.clone,
quotesinglbase.mirror,
quotedblbase.clone,
quotedblbase.mirror,
uni2216.clone,
uni2216.mirror,
uni115F,
uni1160,
hangulfiller,
clickdental,
clicklateral,
centigrade,
fahrenheit,
kelvin,
Oneroman,
Tworoman,
Threeroman,
Fourroman,
Fiveroman,
Sixroman,
Sevenroman,
Eightroman,
Nineroman,
Tenroman,
Elevenroman,
Twelveroman,
uni216C,
uni216D,
uni216E,
uni216F,
oneroman,
tworoman,
threeroman,
fourroman,
fiveroman,
sixroman,
sevenroman,
eightroman,
nineroman,
tenroman,
elevenroman,
twelveroman,
uni217C,
uni217D,
uni217E,
thousandroman,
Dcroat,
Ibreve,
ibreve,
Idotaccent,
IJ,
ij,
Jcircumflex,
napostrophe,
clickretroflex,
DZcaron,
Dzcaron,
dzcaron,
LJ,
Lj,
lj,
NJ,
Nj,
nj,
Acaron,
acaron,
Icaron,
icaron,
Ocaron,
ocaron,
Ucaron,
ucaron,
Udieresismacron,
udieresismacron,
Udieresisacute,
udieresisacute,
Udieresiscaron,
udieresiscaron,
Udieresisgrave,
udieresisgrave,
Adieresismacron,
adieresismacron,
Adotmacron,
adotmacron,
AEmacron,
aemacron,
Gcaron,
gcaron,
Kcaron,
kcaron,
Oogonek,
oogonek,
Oogonekmacron,
oogonekmacron,
DZ,
Dz,
dz,
Gacute,
gacute,
Ngrave,
ngrave,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Ainvertedbreve,
ainvertedbreve,
Einvertedbreve,
einvertedbreve,
Iinvertedbreve,
iinvertedbreve,
Oinvertedbreve,
oinvertedbreve,
Rinvertedbreve,
rinvertedbreve,
Uinvertedbreve,
uinvertedbreve,
Scommaaccent,
scommaaccent,
Tcommaaccent,
tcommaaccent,
Hcaron,
hcaron,
Adotaccent,
adotaccent,
Ecedilla,
ecedilla,
Odieresismacron,
odieresismacron,
Otildemacron,
otildemacron,
Odotaccent,
odotaccent,
Odotaccentmacron,
odotaccentmacron,
Ymacron,
ymacron,
uni02EE,
palochkacyrillic,
Aringbelow,
aringbelow,
Bdotaccent,
bdotaccent,
Bdotbelow,
bdotbelow,
Blinebelow,
blinebelow,
Ccedillaacute,
ccedillaacute,
Ddotaccent,
ddotaccent,
Ddotbelow,
ddotbelow,
Dlinebelow,
dlinebelow,
Dcommaaccent,
dcommaaccent,
Dcircumflexbelow,
dcircumflexbelow,
Emacrongrave,
emacrongrave,
Emacronacute,
emacronacute,
Ecircumflexbelow,
ecircumflexbelow,
Etildebelow,
etildebelow,
Ecedillabreve,
ecedillabreve,
Fdotaccent,
fdotaccent,
Gmacron,
gmacron,
Hdotaccent,
hdotaccent,
Hdotbelow,
hdotbelow,
Hdieresis,
hdieresis,
Hcedilla,
hcedilla,
Hbrevebelow,
hbrevebelow,
Itildebelow,
itildebelow,
Idieresisacute,
idieresisacute,
Kacute,
kacute,
Kdotbelow,
kdotbelow,
Klinebelow,
klinebelow,
Ldotbelow,
ldotbelow,
Ldotbelowmacron,
ldotbelowmacron,
Llinebelow,
llinebelow,
Lcircumflexbelow,
lcircumflexbelow,
Macute,
macute,
Mdotaccent,
mdotaccent,
Mdotbelow,
mdotbelow,
Ndotaccent,
ndotaccent,
Ndotbelow,
ndotbelow,
Nlinebelow,
nlinebelow,
Ncircumflexbelow,
ncircumflexbelow,
Otildeacute,
otildeacute,
Otildedieresis,
otildedieresis,
Omacrongrave,
omacrongrave,
Omacronacute,
omacronacute,
Pacute,
pacute,
Pdotaccent,
pdotaccent,
Rdotaccent,
rdotaccent,
Rdotbelow,
rdotbelow,
Rdotbelowmacron,
rdotbelowmacron,
Rlinebelow,
rlinebelow,
Sdotaccent,
sdotaccent,
Sdotbelow,
sdotbelow,
Sacutedotaccent,
sacutedotaccent,
Scarondotaccent,
scarondotaccent,
Sdotbelowdotaccent,
sdotbelowdotaccent,
Tdotaccent,
tdotaccent,
Tdotbelow,
tdotbelow,
Tlinebelow,
tlinebelow,
Tcircumflexbelow,
tcircumflexbelow,
Udieresisbelow,
udieresisbelow,
Utildebelow,
utildebelow,
Ucircumflexbelow,
ucircumflexbelow,
Utildeacute,
utildeacute,
Umacrondieresis,
umacrondieresis,
Vtilde,
vtilde,
Vdotbelow,
vdotbelow,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Wdotaccent,
wdotaccent,
Wdotbelow,
wdotbelow,
Xdotaccent,
xdotaccent,
Xdieresis,
xdieresis,
Ydotaccent,
ydotaccent,
Zcircumflex,
zcircumflex,
Zdotbelow,
zdotbelow,
Zlinebelow,
zlinebelow,
hlinebelow,
tdieresis,
wring,
yring,
Adotbelow,
adotbelow,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Udotbelow,
udotbelow,
Ygrave,
ygrave,
Ydotbelow,
ydotbelow,
Ytilde,
ytilde,
Ecircumflexmacron,
ecircumflexmacron,
Ecircumflexcaron,
ecircumflexcaron,
Aiecyrillic,
aiecyrillic,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Iogonek,
iogonek,
Kcommaaccent,
kcommaaccent,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Nacute,
nacute,
Ncommaaccent,
ncedilla,
Ncaron,
ncaron,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
gravetonecmb,
acutetonecmb,
koroniscmb,
dialytikatonoscmb,
dialytikatonos,
anoteleia,
Amacrongrave,
amacrongrave,
aacuteogonek,
Imacrongrave,
imacrongrave,
idotaboveacute,
Umacrongrave,
umacrongrave,
xdotbelow,
Mgrave,
mgrave,
Rbreve,
rbreve,
u0384,
u0386,
u0388,
u0389,
u038A,
u038C,
u038E,
u038F,
u0390,
u0391,
u0392,
u0393,
u0394,
u0395,
u0396,
u0397,
u0398,
u0399,
u039A,
u039B,
u039C,
u039D,
u039E,
u039F,
u03A0,
u03A1,
u03A3,
u03A4,
u03A5,
u03A6,
u03A7,
u03A8,
u03A9,
u03AA,
u03AB,
u03AC,
u03AD,
u03AE,
u03AF,
u03B0,
u03B1,
u03B2,
u03B3,
u03B4,
u03B5,
u03B6,
u03B7,
u03B8,
u03B9,
u03BA,
u03BB,
u03BC,
u03BD,
u03BE,
u03BF,
u03C0,
u03C1,
u03C2,
u03C3,
u03C4,
u03C5,
u03C6,
u03C7,
u03C8,
u03C9,
u03CA,
u03CB,
u03CC,
u03CD,
u03CE,
u0401,
u0402,
u0403,
u0404,
u0405,
u0406,
u0407,
u0408,
u0409,
u040A,
u040B,
u040C,
u040E,
u040F,
u0410,
u0411,
u0412,
u0413,
u0414,
u0415,
u0416,
u0417,
u0418,
u0419,
u041A,
u041B,
u041C,
u041D,
u041E,
u041F,
u0420,
u0421,
u0422,
u0423,
u0424,
u0425,
u0426,
u0427,
u0428,
u0429,
u042A,
u042B,
u042C,
u042D,
u042E,
u042F,
u0430,
u0431,
u0432,
u0433,
u0434,
u0435,
u0436,
u0437,
u0438,
u0439,
u043A,
u043B,
u043C,
u043D,
u043E,
u043F,
u0440,
u0441,
u0442,
u0443,
u0444,
u0445,
u0446,
u0447,
u0448,
u0449,
u044A,
u044B,
u044C,
u044D,
u044E,
u044F,
u0451,
u0452,
u0453,
u0454,
u0455,
u0456,
u0457,
u0458,
u0459,
u045A,
u045B,
u045C,
u045E,
u045F,
u0490,
u0491,
u1D2C,
u1D0B,
u1D0C,
u1D0D,
u1D0E,
u1D0F,
u1D10,
u1D11,
u1D12,
u1D13,
u1D14,
u1D2D,
u1D2B,
u1D15,
u1D16,
u1D17,
u1D2F,
u1D18,
u1D19,
u1DA7,
u0250,
u0251,
u0252,
u0253,
u0254,
u0255,
u0256,
u0257,
u0258,
u0259,
u025A,
u025B,
u025C,
u025D,
u025E,
u025F,
u0260,
u0261,
u0262,
u0263,
u0264,
u0265,
u0266,
u0267,
u0268,
u0269,
u026A,
u026B,
u026C,
u026D,
u026E,
u026F,
u0270,
u0271,
u0272,
u0273,
u0274,
u0275,
u0276,
u0277,
u0278,
u0279,
u027A,
u027B,
u027C,
u027D,
u027E,
u027F,
u0280,
u0281,
u0282,
u0283,
u0284,
u0285,
u0286,
u0287,
u0288,
u0289,
u028A,
u028B,
u028C,
u028D,
u028E,
u028F,
u0290,
u0291,
u0292,
u0293,
u0294,
u0295,
u0296,
u0297,
u0298,
u0299,
u029A,
u029B,
u029C,
u029D,
u029E,
u029F,
u02A0,
u02A1,
u02A2,
u02A3,
u02A4,
u02A5,
u02A6,
u02A7,
u02A8,
u02A9,
u02AA,
u02AB,
u02AC,
u02AD,
u02AE,
u02AF,
u0370,
u0371,
u0372,
u0373,
u0374,
u0375,
u0376,
u0377,
u037A,
u037B,
u037C,
u037D,
u03CF,
u03D0,
u03D1,
u03D2,
u03D3,
u03D4,
u03D5,
u03D6,
u03D7,
u03D8,
u03D9,
u03DA,
u03DB,
u03DC,
u03DD,
u03DE,
u03DF,
u03E0,
u03E1,
u03E2,
u03E3,
u03E4,
u03E5,
u03E6,
u03E7,
u03E8,
u03E9,
u03EA,
u03EB,
u03EC,
u03ED,
u03EE,
u03EF,
u03F0,
u03F1,
u03F2,
u03F3,
u03F4,
u03F5,
u03F6,
u03F7,
u03F8,
u03F9,
u03FA,
u03FB,
u03FC,
u03FD,
u03FE,
u03FF,
u0400,
u040D,
u0450,
u045D,
u0460,
u0461,
u0462,
u0463,
u0464,
u0465,
u0466,
u0467,
u0468,
u0469,
u046A,
u046B,
u046C,
u046D,
u046E,
u046F,
u0470,
u0471,
u0472,
u0473,
u0474,
u0475,
u0476,
u0477,
u0478,
u0479,
u047A,
u047B,
u047C,
u047D,
u047E,
u047F,
u0480,
u0481,
u0482,
u0483,
u0484,
u0485,
u0486,
u0487,
u0488,
u0489,
u048A,
u048B,
u048C,
u048D,
u048E,
u048F,
u0492,
u0493,
u0494,
u0495,
u0496,
u0497,
u0498,
u0499,
u049A,
u049B,
u049C,
u049D,
u049E,
u049F,
u04A0,
u04A1,
u04A2,
u04A3,
u04A4,
u04A5,
u04A6,
u04A7,
u04A8,
u04A9,
u04AA,
u04AB,
u04AC,
u04AD,
u04AE,
u04AF,
u04B0,
u04B1,
u04B2,
u04B3,
u04B4,
u04B5,
u04B6,
u04B7,
u04B8,
u04B9,
u04BA,
u04BB,
u04BC,
u04BD,
u04BE,
u04BF,
u04C1,
u04C2,
u04C3,
u04C4,
u04C5,
u04C6,
u04C7,
u04C8,
u04C9,
u04CA,
u04CB,
u04CC,
u04CD,
u04CE,
u04CF,
u04D0,
u04D1,
u04D2,
u04D3,
u04D6,
u04D7,
u04D8,
u04D9,
u04DA,
u04DB,
u04DC,
u04DD,
u04DE,
u04DF,
u04E0,
u04E1,
u04E2,
u04E3,
u04E4,
u04E5,
u04E6,
u04E7,
u04E8,
u04E9,
u04EA,
u04EB,
u04EC,
u04ED,
u04EE,
u04EF,
u04F0,
u04F1,
u04F2,
u04F3,
u04F4,
u04F5,
u04F6,
u04F7,
u04F8,
u04F9,
u04FA,
u04FB,
u04FC,
u04FD,
u04FE,
u04FF,
u0500,
u0501,
u0502,
u0503,
u0504,
u0505,
u0506,
u0507,
u0508,
u0509,
u050A,
u050B,
u050C,
u050D,
u050E,
u050F,
u0510,
u0511,
u0512,
u0513,
u0514,
u0515,
u0516,
u0517,
u0518,
u0519,
u051A,
u051B,
u051C,
u051D,
u051E,
u051F,
u0520,
u0521,
u0522,
u0523,
u0524,
u0525,
u0526,
u0527,
u1D30,
u1D31,
u1D32,
u1D33,
u1D34,
u1D35,
u1D36,
u1D37,
u1D38,
u1D39,
u1D3A,
u1D3B,
u1D3C,
u1D3D,
u1D3E,
u1D3F,
u1D40,
u1D41,
u1D42,
u1D43,
u1D44,
u1D45,
u1D46,
u1D47,
u1D48,
u1D49,
u1D4A,
u1D4B,
u1D4C,
u1D4D,
u1D4E,
u1D4F,
u1D50,
u1D51,
u1D52,
u1D53,
u1D54,
u1D55,
u1D56,
u1D57,
u1D58,
u1D59,
u1D5A,
u1D5B,
u1D5C,
u1D5D,
u1D5E,
u1D5F,
u1D60,
u1D61,
u1D62,
u1D63,
u1D64,
u1D65,
u1D66,
u1D67,
u1D68,
u1D69,
u1D6A,
u1D6B,
u1D6C,
u1D6D,
u1D6E,
u1D6F,
u1D70,
u1D71,
u1D72,
u1D73,
u1D74,
u1D75,
u1D76,
u1D77,
u1D78,
u1D79,
u1D7A,
u1D7B,
u1D7C,
u1D7D,
u1D7E,
u1D7F,
u1D80,
u1D81,
u1D82,
u1D83,
u1D84,
u1D85,
u1D86,
u1D87,
u1D88,
u1D89,
u1D8A,
u1D8B,
u1D8C,
u1D8D,
u1D8E,
u1D8F,
u1D90,
u1D91,
u1D92,
u1D93,
u1D94,
u1D95,
u1D96,
u1D97,
u1D98,
u1D99,
u1D9A,
u1D9B,
u1D9C,
u1D9D,
u1D9E,
u1D9F,
u1DA0,
u1DA1,
u1DA2,
u1DA3,
u1DA4,
u1DA5,
u1DA6,
u1D2E,
u1DA8,
u1DA9,
u1DAA,
u1DAB,
u1DAC,
u1DAD,
u1DAE,
u1DAF,
u1DB0,
u1DB1,
u1DB2,
u1DB3,
u1DB4,
u1DB5,
u1DB6,
u1DB7,
u1DB8,
u1DB9,
u1DBA,
u1DBB,
u1DBC,
u1DBD,
u1DBE,
u1DBF,
u2DE0,
u2DE1,
u2DE2,
u2DE3,
u2DE4,
u2DE5,
u2DE6,
u2DE7,
u2DE8,
u2DE9,
u2DEA,
u2DEB,
u2DEC,
u2DED,
u2DEE,
u2DEF,
u2DF0,
u2DF1,
u2DF2,
u2DF3,
u2DF4,
u2DF5,
u2DF6,
u2DF7,
u2DF8,
u2DF9,
u2DFA,
u2DFB,
u2DFC,
u2DFD,
u2DFE,
u2DFF,
u1D00,
u1D01,
u1D02,
u1D03,
u1D04,
u1D05,
u1D06,
u1D07,
u1D08,
u1D09,
u1D0A,
uA640,
uA641,
uA642,
uA643,
uA644,
uA645,
uA646,
uA647,
uA648,
uA649,
uA64A,
uA64B,
uA64C,
uA64D,
uA64E,
uA64F,
uA650,
uA651,
uA652,
uA653,
uA654,
uA655,
uA656,
uA657,
uA658,
uA659,
uA65A,
uA65B,
uA65C,
uA65D,
uA65E,
uA65F,
uA660,
uA661,
uA662,
uA663,
uA664,
uA665,
uA666,
uA667,
uA668,
uA669,
uA66A,
uA66B,
uA66C,
uA66D,
uA66E,
uA66F,
uA670,
uA671,
uA672,
uA673,
uA674,
uA675,
uA676,
uA677,
uA678,
uA679,
uA67A,
uA67B,
uA67C,
uA67D,
uA67E,
uA67F,
uA680,
uA681,
uA682,
uA683,
uA684,
uA685,
uA686,
uA687,
uA688,
uA689,
uA68A,
uA68B,
uA68C,
uA68D,
uA68E,
uA68F,
uA690,
uA691,
uA692,
uA693,
uA694,
uA695,
uA696,
uA697,
u1D1A,
uA69F,
u1D1B,
u1D1C,
u1D1D,
u1D1E,
u1D1F,
u1D20,
u1D21,
u1D22,
u1D23,
u1D24,
u1D25,
u1D26,
u1D27,
u1D28,
u1D29,
u1D2A,
u1F00,
u1F01,
u1F02,
u1F03,
u1F04,
u1F05,
u1F06,
u1F07,
u1F08,
u1F09,
u1F0A,
u1F0B,
u1F0C,
u1F0D,
u1F0E,
u1F0F,
u1F10,
u1F11,
u1F12,
u1F13,
u1F14,
u1F15,
u1F18,
u1F19,
u1F1A,
u1F1B,
u1F1C,
u1F1D,
u1F20,
u1F21,
u1F22,
u1F23,
u1F24,
u1F25,
u1F26,
u1F27,
u1F28,
u1F29,
u1F2A,
u1F2B,
u1F2C,
u1F2D,
u1F2E,
u1F2F,
u1F30,
u1F31,
u1F32,
u1F33,
u1F34,
u1F35,
u1F36,
u1F37,
u1F38,
u1F39,
u1F3A,
u1F3B,
u1F3C,
u1F3D,
u1F3E,
u1F3F,
u1F40,
u1F41,
u1F42,
u1F43,
u1F44,
u1F45,
u1F48,
u1F49,
u1F4A,
u1F4B,
u1F4C,
u1F4D,
u1F50,
u1F51,
u1F52,
u1F53,
u1F54,
u1F55,
u1F56,
u1F57,
u1F59,
u1F5B,
u1F5D,
u1F5F,
u1F60,
u1F61,
u1F62,
u1F63,
u1F64,
u1F65,
u1F66,
u1F67,
u1F68,
u1F69,
u1F6A,
u1F6B,
u1F6C,
u1F6D,
u1F6E,
u1F6F,
u1F70,
u1F71,
u1F72,
u1F73,
u1F74,
u1F75,
u1F76,
u1F77,
u1F78,
u1F79,
u1F7A,
u1F7B,
u1F7C,
u1F7D,
u1F80,
u1F81,
u1F82,
u1F83,
u1F84,
u1F85,
u1F86,
u1F87,
u1F88,
u1F89,
u1F8A,
u1F8B,
u1F8C,
u1F8D,
u1F8E,
u1F8F,
u1F90,
u1F91,
u1F92,
u1F93,
u1F94,
u1F95,
u1F96,
u1F97,
u1F98,
u1F99,
u1F9A,
u1F9B,
u1F9C,
u1F9D,
u1F9E,
u1F9F,
u1FA0,
u1FA1,
u1FA2,
u1FA3,
u1FA4,
u1FA5,
u1FA6,
u1FA7,
u1FA8,
u1FA9,
u1FAA,
u1FAB,
u1FAC,
u1FAD,
u1FAE,
u1FAF,
u1FB0,
u1FB1,
u1FB2,
u1FB3,
u1FB4,
u1FB6,
u1FB7,
u1FB8,
u1FB9,
u1FBA,
u1FBB,
u1FBC,
u1FBD,
u1FBE,
u1FBF,
u1FC0,
u1FC1,
u1FC2,
u1FC3,
u1FC4,
u1FC6,
u1FC7,
u1FC8,
u1FC9,
u1FCA,
u1FCB,
u1FCC,
u1FCD,
u1FCE,
u1FCF,
u1FD0,
u1FD1,
u1FD2,
u1FD3,
u1FD6,
u1FD7,
u1FD8,
u1FD9,
u1FDA,
u1FDB,
u1FDD,
u1FDE,
u1FDF,
u1FE0,
u1FE1,
u1FE2,
u1FE3,
u1FE4,
u1FE5,
u1FE6,
u1FE7,
u1FE8,
u1FE9,
u1FEA,
u1FEB,
u1FEC,
u1FED,
u1FEE,
u1FEF,
u1FF2,
u1FF3,
u1FF4,
u1FF6,
u1FF7,
u1FF8,
u1FF9,
u1FFA,
u1FFB,
u1FFC,
u1FFD,
u1FFE,
u03BC.001,
Tonos,
hookabovecmb,
a.smcp,
b.smcp,
c.smcp,
d.smcp,
e.smcp,
f.smcp,
g.smcp,
h.smcp,
i.smcp,
j.smcp,
k.smcp,
l.smcp,
m.smcp,
n.smcp,
o.smcp,
p.smcp,
q.smcp,
r.smcp,
s.smcp,
t.smcp,
u.smcp,
v.smcp,
w.smcp,
x.smcp,
y.smcp,
z.smcp,
germandbls.smcp,
agrave.smcp,
aacute.smcp,
acircumflex.smcp,
atilde.smcp,
adieresis.smcp,
aring.smcp,
ae.smcp,
ccedilla.smcp,
egrave.smcp,
eacute.smcp,
ecircumflex.smcp,
edieresis.smcp,
igrave.smcp,
iacute.smcp,
icircumflex.smcp,
idieresis.smcp,
ntilde.smcp,
ograve.smcp,
oacute.smcp,
ocircumflex.smcp,
otilde.smcp,
odieresis.smcp,
oslash.smcp,
ugrave.smcp,
uacute.smcp,
ucircumflex.smcp,
udieresis.smcp,
yacute.smcp,
ydieresis.smcp,
amacron.smcp,
abreve.smcp,
aogonek.smcp,
cacute.smcp,
ccaron.smcp,
dcaron.smcp,
dcroat.smcp,
emacron.smcp,
edotaccent.smcp,
eogonek.smcp,
ecaron.smcp,
gbreve.smcp,
gcommaaccent.smcp,
itilde.smcp,
imacron.smcp,
iogonek.smcp,
dotlessi.smcp,
ij.smcp,
kcommaaccent.smcp,
lacute.smcp,
lcommaaccent.smcp,
lcaron.smcp,
ldot.smcp,
lslash.smcp,
nacute.smcp,
ncommaaccent.smcp,
ncaron.smcp,
omacron.smcp,
ohungarumlaut.smcp,
oe.smcp,
racute.smcp,
rcommaaccent.smcp,
rcaron.smcp,
sacute.smcp,
scedilla.smcp,
scaron.smcp,
tcedilla.smcp,
tcaron.smcp,
utilde.smcp,
umacron.smcp,
uring.smcp,
uhungarumlaut.smcp,
uogonek.smcp,
zacute.smcp,
zdotaccent.smcp,
zcaron.smcp,
u01A1.smcp,
u01B0.smcp,
acaron.smcp,
u0390.smcp,
u03AC.smcp,
u03AD.smcp,
u03AE.smcp,
u03AF.smcp,
u03B0.smcp,
u03B1.smcp,
u03B2.smcp,
u03B3.smcp,
u03B4.smcp,
u03B5.smcp,
u03B6.smcp,
u03B7.smcp,
u03B8.smcp,
u03B9.smcp,
u03BA.smcp,
u03BB.smcp,
u03BC.smcp,
u03BD.smcp,
u03BE.smcp,
u03BF.smcp,
u03C0.smcp,
u03C1.smcp,
u03C2.smcp,
u03C3.smcp,
u03C4.smcp,
u03C5.smcp,
u03C6.smcp,
u03C7.smcp,
u03C8.smcp,
u03C9.smcp,
u03CA.smcp,
u03CB.smcp,
u03CC.smcp,
u03CD.smcp,
u03CE.smcp,
u0430.smcp,
u0431.smcp,
u0432.smcp,
u0433.smcp,
u0434.smcp,
u0435.smcp,
u0436.smcp,
u0437.smcp,
u0438.smcp,
u0439.smcp,
u043A.smcp,
u043B.smcp,
u043C.smcp,
u043D.smcp,
u043E.smcp,
u043F.smcp,
u0440.smcp,
u0441.smcp,
u0442.smcp,
u0443.smcp,
u0444.smcp,
u0445.smcp,
u0446.smcp,
u0447.smcp,
u0448.smcp,
u0449.smcp,
u044A.smcp,
u044B.smcp,
u044C.smcp,
u044D.smcp,
u044E.smcp,
u044F.smcp,
u0450.smcp,
u0451.smcp,
u0453.smcp,
u0454.smcp,
u0455.smcp,
u0456.smcp,
u0457.smcp,
u0458.smcp,
u0459.smcp,
u045A.smcp,
u045C.smcp,
u045D.smcp,
u045F.smcp,
u0463.smcp,
u046B.smcp,
u0473.smcp,
u0475.smcp,
u0491.smcp,
u1EA1.smcp,
u1EA3.smcp,
u1EA5.smcp,
u1EA7.smcp,
u1EA9.smcp,
u1EAB.smcp,
u1EAD.smcp,
u1EAF.smcp,
u1EB1.smcp,
u1EB3.smcp,
u1EB5.smcp,
u1EB7.smcp,
u1EB9.smcp,
u1EBB.smcp,
u1EBD.smcp,
u1EBF.smcp,
u1EC1.smcp,
u1EC3.smcp,
u1EC5.smcp,
u1EC7.smcp,
u1EC9.smcp,
u1ECB.smcp,
u1ECD.smcp,
u1ECF.smcp,
u1ED1.smcp,
u1ED3.smcp,
u1ED5.smcp,
u1ED7.smcp,
u1ED9.smcp,
u1EDB.smcp,
u1EDD.smcp,
u1EDF.smcp,
u1EE1.smcp,
u1EE3.smcp,
u1EE5.smcp,
u1EE7.smcp,
u1EE9.smcp,
u1EEB.smcp,
u1EED.smcp,
u1EEF.smcp,
u1EF1.smcp,
u1EF3.smcp,
u1EF5.smcp,
u1EF7.smcp,
u1EF9.smcp,
uni031B,
uni01B0,
uni01AF,
uni01A1,
uni01A0,
afii301,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
ezhcaron,
questiongreek,
Ohm,
uF74BE,
uF74BF,
uF74EC,
uF74ED,
uF74EE,
uF74EF,
uF74F0,
uF74F1,
uF74F2,
uF74F3,
uF74F4,
uF74F5,
uF74F6,
uF74F7,
uF74F8,
uF74F9,
uF74FA,
uF74FB,
uF74FC,
uF74FD,
uF74FE,
uF74FF,
uF7500,
uF7501,
uF7502,
uF7503,
uF7504,
uF7505,
uF7506,
uF7507,
uF7508,
uF7509,
uF750A,
uF750B,
uF750C,
uF750D,
uF750E,
uF750F,
uF7510,
uF7511,
uF7512,
uF7513,
uF7514,
uF7515,
uF7516,
uF7517,
uF7518,
uF7519,
uF751A,
uF751B,
uF751C,
uF751D,
uF751E,
uF751F,
uF7520,
uF7521,
uF7522,
uF7523,
uF7524,
uF7525,
uF7526,
uF7527,
uF7528,
uF7529,
uF752A,
uF752B,
uF752C,
uF752D,
uF752E,
uF752F,
uF7530,
uF7531,
uF7532,
uF7533,
uF7534,
uF7535,
uF7536,
uF7537,
uF7538,
uF7539,
uF753A,
uF753B,
uF753C,
uF753D,
uF753E,
uF753F,
uF7540,
uF7541,
uF7542,
uF7543,
uF7544,
uF7545,
uF7546,
uF7547,
uF7548,
uF7549,
uF754A,
uF754B,
uF754C,
uF754D,
uF754E,
uF754F,
uF7550,
uF7551,
uF7552,
uF7553,
uF7556,
uF7555,
uF7559,
uF7558,
uF755C,
uF755B,
uF755F,
uF755E,
uF7562,
uF7561,
uF7565,
uF7564,
uniFE10,
uniFE13,
uniFE14,
uniFE15,
uniFE16,
uniFE19,
emdashvertical,
endashvertical,
underscorevertical,
wavyunderscorevertical,
parenleftvertical,
parenrightvertical,
braceleftvertical,
bracerightvertical,
uniFE47,
uniFE48,
uni030F.doublegravecmb,
uni0326.commabelowcmb,
Adblgrave,
adblgrave,
Edblgrave,
edblgrave,
Idblgrave,
idblgrave,
Odblgrave,
odblgrave,
Rdblgrave,
rdblgrave,
Udblgrave,
udblgrave,
Ahookabove,
ahookabove,
Acircumflexhookabove,
acircumflexhookabove,
Abrevehookabove,
abrevehookabove,
Ehookabove,
ehookabove,
Ecircumflexhookabove,
ecircumflexhookabove,
Ihookabove,
ihookabove,
Ohookabove,
ohookabove,
Ocircumflexhookabove,
ocircumflexhookabove,
Ohornhookabove,
ohornhookabove,
Uhookabove,
uhookabove,
Uhornhookabove,
uhornhookabove,
Yhookabove,
yhookabove,
dstroke,
u0140,
u013F,
u0127,
u021B,
u021A
);
}
);
date = "2018-11-18 06:01:34 +0000";
designer = "fasil Fikreab";
disablesNiceNames = 1;
familyName = "Abesha Arif Caps";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 700;
capHeight = 722;
custom = Medium;
customParameters = (
{
name = typoAscender;
value = 700;
},
{
name = typoDescender;
value = -200;
},
{
name = typoLineGap;
value = 68;
},
{
name = winAscent;
value = 894;
},
{
name = winDescent;
value = 324;
},
{
name = hheaAscender;
value = 937;
},
{
name = hheaDescender;
value = -324;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 3 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0124 6 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0124 102 89 73 52 25 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0125 138 108 96 69 38 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0126 125 108 73 52 38 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0127 115 89 73 52 38 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0128 92 70 54 39 25 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0129 86 70 54 39 25 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 77 70 54 39 25 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 230 188 146 105 63 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0123 162 133 96 69 38 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01210 4 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0120 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
72,
24,
34,
54,
40,
44,
48,
60,
64,
0,
16,
-324,
0,
360,
0,
722,
0
);
}
);
descender = -200;
guideLines = (
{
position = "{387, 182}";
}
);
id = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
italicAngle = 40;
userData = {
GSCornerRadius = 100;
};
weightValue = 500;
widthValue = 5;
xHeight = 360;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"58 8 LINE",
"58 504 LINE",
"442 504 LINE",
"442 8 LINE"
);
},
{
closed = 1;
nodes = (
"50 0 LINE",
"450 0 LINE",
"450 512 LINE",
"50 512 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 0;
}
);
note = .null;
},
{
glyphname = controlCR;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 500;
}
);
note = controlCR;
},
{
glyphname = space;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 250;
}
);
note = space;
unicode = 0020;
},
{
glyphname = quotedbl;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"324.236 643.73 OFFCURVE",
"338.546 678.072 OFFCURVE",
"312 694 CURVE",
"284.861 708.803 OFFCURVE",
"262.273 676.729 OFFCURVE",
"253 652 CURVE SMOOTH",
"222.827 568.444 OFFCURVE",
"212.32 526.607 OFFCURVE",
"169 452 CURVE",
"179 446 LINE",
"224.678 524.668 OFFCURVE",
"250.307 546.48 OFFCURVE",
"308 621 CURVE"
);
},
{
closed = 1;
nodes = (
"481.236 643.73 OFFCURVE",
"495.546 678.072 OFFCURVE",
"469 694 CURVE",
"441.861 708.803 OFFCURVE",
"419.273 676.729 OFFCURVE",
"410 652 CURVE SMOOTH",
"379.827 568.444 OFFCURVE",
"369.32 526.607 OFFCURVE",
"326 452 CURVE",
"336 446 LINE",
"381.678 524.668 OFFCURVE",
"407.307 546.48 OFFCURVE",
"465 621 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"331 192 LINE",
"457 192 LINE",
"466 206 LINE",
"339 206 LINE",
"431 346 LINE",
"557 346 LINE",
"566 360 LINE",
"439 360 LINE",
"553 532 LINE",
"495 524 LINE",
"387 360 LINE",
"279 360 LINE",
"393 532 LINE",
"335 524 LINE",
"227 360 LINE",
"115 360 LINE",
"106 346 LINE",
"219 346 LINE",
"127 206 LINE",
"15 206 LINE",
"6 192 LINE",
"119 192 LINE",
"-9 0 LINE",
"52 13 LINE",
"171 192 LINE",
"279 192 LINE",
"151 0 LINE",
"212 13 LINE"
);
},
{
closed = 1;
nodes = (
"287 206 LINE",
"179 206 LINE",
"271 346 LINE",
"379 346 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
21 1 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 16 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"394 314 LINE",
"378 340.667 OFFCURVE",
"364 364.667 OFFCURVE",
"364 398 CURVE SMOOTH",
"364 469.11 OFFCURVE",
"411.398 526 OFFCURVE",
"481 526 CURVE SMOOTH",
"499.667 526 OFFCURVE",
"512.333 525 OFFCURVE",
"527 521 CURVE"
);
},
{
closed = 1;
nodes = (
"370 259 LINE",
"395.333 227 OFFCURVE",
"416 182 OFFCURVE",
"416 146 CURVE SMOOTH",
"416 65.516 OFFCURVE",
"358.922 12 OFFCURVE",
"277 12 CURVE SMOOTH",
"258.333 12 OFFCURVE",
"236.667 14 OFFCURVE",
"218 22 CURVE"
);
},
{
closed = 1;
nodes = (
"578 600 LINE",
"535 533 LINE",
"521.667 535.667 OFFCURVE",
"509.667 538 OFFCURVE",
"491 538 CURVE SMOOTH",
"388.881 538 OFFCURVE",
"316 469.762 OFFCURVE",
"316 380 CURVE SMOOTH",
"316 346.667 OFFCURVE",
"337.333 299.333 OFFCURVE",
"364 266 CURVE",
"209 26 LINE",
"175.667 42 OFFCURVE",
"154 77.333 OFFCURVE",
"154 120 CURVE SMOOTH",
"154 160 OFFCURVE",
"171.333 198.333 OFFCURVE",
"214 225 CURVE",
"203.333 227 OFFCURVE",
"194.667 228 OFFCURVE",
"188 228 CURVE SMOOTH",
"134.667 228 OFFCURVE",
"100 188 OFFCURVE",
"100 128 CURVE SMOOTH",
"100 74.667 OFFCURVE",
"140.333 31 OFFCURVE",
"199 11 CURVE",
"170 -35 LINE",
"178 -40 LINE",
"209 8 LINE",
"227.667 1.333 OFFCURVE",
"248 0 OFFCURVE",
"276 0 CURVE SMOOTH",
"368.157 0 OFFCURVE",
"464 69.859 OFFCURVE",
"464 170 CURVE SMOOTH",
"464 220.462 OFFCURVE",
"437.686 253.64 OFFCURVE",
"401 305 CURVE",
"400 306 LINE",
"536 518 LINE",
"566.667 506 OFFCURVE",
"584 482.333 OFFCURVE",
"584 441 CURVE SMOOTH",
"584 414.333 OFFCURVE",
"577.333 383.667 OFFCURVE",
"556 365 CURVE",
"562 363 OFFCURVE",
"568.333 362 OFFCURVE",
"575 362 CURVE SMOOTH",
"605.667 362 OFFCURVE",
"632 391.333 OFFCURVE",
"632 434 CURVE SMOOTH",
"632 488.667 OFFCURVE",
"591.667 519 OFFCURVE",
"545 531 CURVE",
"586 595 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
68 4 60 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 7 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 7 20 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 7 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 8 22 8 38 8 54 8 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 8 85 8 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
11 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 20 90 20 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 20 169 20 185 20 201 20 217 20 233 20 249 20 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 20 25 20 41 20 57 20 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
23 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
33 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 36 90 36 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 36 169 36 185 36 201 36 217 36 233 36 249 36 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 36 25 36 41 36 57 36 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
65 60 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 68 166 68 182 68 198 68 214 68 230 68 246 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 68 22 68 38 68 54 68 70 68 86 68 102 68 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 68 133 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
23 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
33 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
65 55 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"630.348 298 OFFCURVE",
"505 194.853 OFFCURVE",
"505 92 CURVE SMOOTH",
"505 29.333 OFFCURVE",
"537.333 0 OFFCURVE",
"596 0 CURVE SMOOTH",
"700.38 0 OFFCURVE",
"816 128.645 OFFCURVE",
"816 215 CURVE SMOOTH",
"816 257.667 OFFCURVE",
"791 298 OFFCURVE",
"731 298 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"757 286 OFFCURVE",
"772 275 OFFCURVE",
"772 247 CURVE SMOOTH",
"772 167.091 OFFCURVE",
"678.068 12 OFFCURVE",
"595 12 CURVE SMOOTH",
"568.333 12 OFFCURVE",
"549 23.667 OFFCURVE",
"549 53 CURVE SMOOTH",
"549 138.369 OFFCURVE",
"647.47 286 OFFCURVE",
"729 286 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"641 460 LINE",
"519.667 308 OFFCURVE",
"421 184.333 OFFCURVE",
"353 99 CURVE SMOOTH",
"306.909 41.16 OFFCURVE",
"247 -32.313 OFFCURVE",
"247 -36 CURVE SMOOTH",
"247 -39.333 OFFCURVE",
"248.667 -41 OFFCURVE",
"252 -41 CURVE SMOOTH",
"268.529 -41 OFFCURVE",
"342.841 65.63 OFFCURVE",
"366 93 CURVE SMOOTH",
"402.745 136.426 OFFCURVE",
"467.502 215.023 OFFCURVE",
"506.5 261.5 CURVE SMOOTH",
"530.833 290.5 OFFCURVE",
"554 318 OFFCURVE",
"576 344 CURVE SMOOTH",
"587.046 357.255 OFFCURVE",
"636.065 414.131 OFFCURVE",
"659.5 442 CURVE SMOOTH",
"678.903 465.074 OFFCURVE",
"729 523.222 OFFCURVE",
"729 532 CURVE SMOOTH",
"729 541.333 OFFCURVE",
"725.333 546 OFFCURVE",
"718 546 CURVE SMOOTH",
"710 546 OFFCURVE",
"703.167 544 OFFCURVE",
"697.5 540 CURVE SMOOTH",
"691.833 536 OFFCURVE",
"684 526.333 OFFCURVE",
"674 511 CURVE",
"654.161 483.225 OFFCURVE",
"609.196 438 OFFCURVE",
"552 438 CURVE SMOOTH",
"469.352 438 OFFCURVE",
"491.813 532 OFFCURVE",
"393 532 CURVE SMOOTH",
"292.215 532 OFFCURVE",
"168 417.232 OFFCURVE",
"168 317 CURVE SMOOTH",
"168 261 OFFCURVE",
"201.333 228 OFFCURVE",
"256 228 CURVE SMOOTH",
"306.692 228 OFFCURVE",
"365.774 263.356 OFFCURVE",
"408 306.5 CURVE SMOOTH",
"449.368 348.768 OFFCURVE",
"484.031 409.236 OFFCURVE",
"482 460 CURVE",
"484 462 LINE",
"498.667 442 OFFCURVE",
"522.333 426 OFFCURVE",
"549 426 CURVE SMOOTH",
"585 426 OFFCURVE",
"617.667 443.333 OFFCURVE",
"639 462 CURVE"
);
},
{
closed = 1;
nodes = (
"212 378.748 OFFCURVE",
"311.739 520 OFFCURVE",
"396 520 CURVE SMOOTH",
"424 520 OFFCURVE",
"438 503.667 OFFCURVE",
"438 477 CURVE SMOOTH",
"438 394.717 OFFCURVE",
"337.58 240 OFFCURVE",
"251 240 CURVE SMOOTH",
"221.667 240 OFFCURVE",
"212 259.667 OFFCURVE",
"212 285 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
91 6 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 6 99 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 6 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 6 29 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 11 90 11 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 11 169 11 185 11 201 11 217 11 233 11 249 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 11 25 11 41 11 57 11 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 29 90 29 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 29 169 29 185 29 201 29 217 29 233 29 249 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 29 25 29 41 29 57 29 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 39 166 39 182 39 198 39 214 39 230 39 246 39 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 39 22 39 38 39 54 39 70 39 86 39 102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 39 22 39 38 39 54 39 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 39 85 39 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 91 166 91 182 91 198 91 214 91 230 91 246 91 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 91 22 91 38 91 54 91 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 91 85 91 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
54 1 35 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
59 16 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
39 35 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"735 125 LINE",
"690.402 59.415 OFFCURVE",
"607.319 8 OFFCURVE",
"527 8 CURVE SMOOTH",
"468.333 8 OFFCURVE",
"409 40 OFFCURVE",
"369 80 CURVE",
"393.667 103.333 OFFCURVE",
"421 132.667 OFFCURVE",
"451 168 CURVE",
"486.203 213.262 OFFCURVE",
"524.398 258 OFFCURVE",
"574 258 CURVE SMOOTH",
"608.667 258 OFFCURVE",
"633.333 240.667 OFFCURVE",
"644 218 CURVE",
"653.333 227.333 OFFCURVE",
"660 242.333 OFFCURVE",
"660 253 CURVE SMOOTH",
"660 283.667 OFFCURVE",
"633.667 304 OFFCURVE",
"599 304 CURVE SMOOTH",
"557.667 304 OFFCURVE",
"522.167 271.833 OFFCURVE",
"485.5 228.5 CURVE SMOOTH",
"454.976 192.426 OFFCURVE",
"401.712 123.311 OFFCURVE",
"361 87 CURVE",
"298.333 151 OFFCURVE",
"258.333 236.333 OFFCURVE",
"257 327 CURVE",
"324.124 365.861 OFFCURVE",
"442 409.523 OFFCURVE",
"442 478 CURVE SMOOTH",
"442 516.667 OFFCURVE",
"415 538 OFFCURVE",
"379 538 CURVE SMOOTH",
"283.681 538 OFFCURVE",
"203 406.385 OFFCURVE",
"203 317 CURVE",
"126.818 284.351 OFFCURVE",
"55 211.109 OFFCURVE",
"55 126 CURVE SMOOTH",
"55 49.24 OFFCURVE",
"112.748 -8 OFFCURVE",
"198 -8 CURVE SMOOTH",
"255.69 -8 OFFCURVE",
"299.652 18.687 OFFCURVE",
"330 46 CURVE",
"377.11 9.359 OFFCURVE",
"449.656 -8 OFFCURVE",
"504 -8 CURVE SMOOTH",
"594.667 -8 OFFCURVE",
"684 37 OFFCURVE",
"740 121 CURVE"
);
},
{
closed = 1;
nodes = (
"402 409.264 OFFCURVE",
"334.426 372.708 OFFCURVE",
"257 338 CURVE",
"257 364.667 OFFCURVE",
"258 399.333 OFFCURVE",
"278 446 CURVE SMOOTH",
"300.667 498 OFFCURVE",
"336.667 526 OFFCURVE",
"366 526 CURVE SMOOTH",
"390 526 OFFCURVE",
"402 511.667 OFFCURVE",
"402 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 208.551 OFFCURVE",
"142.292 279.605 OFFCURVE",
"203 306 CURVE",
"203 210 OFFCURVE",
"247.667 114.333 OFFCURVE",
"321 53 CURVE",
"295.667 33 OFFCURVE",
"262.333 16 OFFCURVE",
"213 16 CURVE SMOOTH",
"150.387 16 OFFCURVE",
"109 76.785 OFFCURVE",
"109 142 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
82 4 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 4 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 5 69 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 36 166 36 182 36 198 36 214 36 230 36 246 36 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 36 22 36 38 36 54 36 70 36 86 36 102 36 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 36 133 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 69 90 69 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 69 169 69 185 69 201 69 217 69 233 69 249 69 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 69 25 69 41 69 57 69 73 69 89 69 105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 69 25 69 41 69 57 69 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 82 166 82 182 82 198 82 214 82 230 82 246 82 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 82 22 82 38 82 54 82 70 82 86 82 102 82 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 82 133 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
44 3 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
50 3 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
77 3 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
87 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 87 167 87 183 87 199 87 215 87 231 87 247 87 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 87 23 87 39 87 55 87 71 87 87 87 103 87 119 87 135 87 151 87 167 87 183 87 199 87 215 87 231 87 247 87 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 87 23 87 39 87 55 87 71 87 87 87 103 87 119 87 135 87 151 87 167 87 183 87 199 87 215 87 231 87 247 87 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
93 3 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 611;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"324.236 643.73 OFFCURVE",
"338.546 678.072 OFFCURVE",
"312 694 CURVE",
"284.861 708.803 OFFCURVE",
"262.273 676.729 OFFCURVE",
"253 652 CURVE SMOOTH",
"222.827 568.444 OFFCURVE",
"212.32 526.607 OFFCURVE",
"169 452 CURVE",
"179 446 LINE",
"224.678 524.668 OFFCURVE",
"250.307 546.48 OFFCURVE",
"308 621 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"661 696 LINE",
"477 616 OFFCURVE",
"328 502 OFFCURVE",
"228 354 CURVE SMOOTH",
"162.667 256.667 OFFCURVE",
"115.667 172.5 OFFCURVE",
"85 74.5 CURVE SMOOTH",
"54.333 -23.5 OFFCURVE",
"39.333 -134 OFFCURVE",
"38 -286 CURVE",
"50 -286 LINE",
"50 -176.667 OFFCURVE",
"71.833 -67.667 OFFCURVE",
"108.5 35 CURVE SMOOTH",
"145.167 137.667 OFFCURVE",
"196.333 235 OFFCURVE",
"255 319 CURVE SMOOTH",
"364.333 476.333 OFFCURVE",
"505 606 OFFCURVE",
"661 686 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-229 -286 LINE",
"-45 -206 OFFCURVE",
"104 -92 OFFCURVE",
"204 56 CURVE SMOOTH",
"269.333 153.333 OFFCURVE",
"316.333 237.5 OFFCURVE",
"347 335.5 CURVE SMOOTH",
"377.667 433.5 OFFCURVE",
"392.667 544 OFFCURVE",
"394 696 CURVE",
"382 696 LINE",
"382 586.667 OFFCURVE",
"360.167 477.667 OFFCURVE",
"323.5 375 CURVE SMOOTH",
"286.833 272.333 OFFCURVE",
"235.667 175 OFFCURVE",
"177 91 CURVE SMOOTH",
"67.667 -66.333 OFFCURVE",
"-73 -196 OFFCURVE",
"-229 -276 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = plus;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"279 179 LINE",
"137 179 LINE",
"128 165 LINE",
"271 165 LINE",
"161 0 LINE",
"230 13 LINE",
"331 165 LINE",
"472 165 LINE",
"481 179 LINE",
"339 179 LINE",
"448 344 LINE",
"382 336 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
3 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 546;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-32 -124 LINE",
"52.646 -113.078 OFFCURVE",
"144 -51.556 OFFCURVE",
"144 28 CURVE SMOOTH",
"144 50.667 OFFCURVE",
"130.333 74 OFFCURVE",
"105 74 CURVE SMOOTH",
"81 74 OFFCURVE",
"66 57 OFFCURVE",
"66 33 CURVE SMOOTH",
"66 10.333 OFFCURVE",
"85.333 0 OFFCURVE",
"100 0 CURVE SMOOTH",
"106 0 OFFCURVE",
"110 0.667 OFFCURVE",
"112 2 CURVE",
"106.821 -65.321 OFFCURVE",
"32.435 -106.794 OFFCURVE",
"-32 -118 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 9 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
122 10 138 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 10 169 10 185 10 201 10 217 10 233 10 249 10 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 10 25 10 41 10 57 10 73 10 89 10 105 10 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 250;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2018-11-16 05:21:30 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"85 186 LINE",
"74 158 LINE",
"304 158 LINE",
"316 186 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 1 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = slash;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"145 -16 LINE",
"428 712 LINE",
"391 712 LINE",
"108 -16 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 278;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"110 46 OFFCURVE",
"146.333 -8 OFFCURVE",
"225 -8 CURVE SMOOTH",
"278.333 -8 OFFCURVE",
"336.333 18.5 OFFCURVE",
"391 60.5 CURVE SMOOTH",
"418.333 81.5 OFFCURVE",
"444.333 105.5 OFFCURVE",
"469 132.5 CURVE SMOOTH",
"518.333 186.5 OFFCURVE",
"555.5 247.667 OFFCURVE",
"577.5 309 CURVE SMOOTH",
"588.5 339.667 OFFCURVE",
"594 368.667 OFFCURVE",
"594 396 CURVE SMOOTH",
"594 475.86 OFFCURVE",
"558.698 530 OFFCURVE",
"476 530 CURVE SMOOTH",
"422.667 530 OFFCURVE",
"364.667 505.167 OFFCURVE",
"310 464.5 CURVE SMOOTH",
"282.667 444.167 OFFCURVE",
"257 420.5 OFFCURVE",
"233 393.5 CURVE SMOOTH",
"185 339.5 OFFCURVE",
"147.333 277.833 OFFCURVE",
"126 214.5 CURVE SMOOTH",
"115.333 182.833 OFFCURVE",
"110 152 OFFCURVE",
"110 122 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 210 OFFCURVE",
"210.333 309 OFFCURVE",
"265 385 CURVE SMOOTH",
"319.667 461 OFFCURVE",
"389.333 514 OFFCURVE",
"448 514 CURVE SMOOTH",
"509.665 514 OFFCURVE",
"534 463.388 OFFCURVE",
"534 403 CURVE SMOOTH",
"534 307 OFFCURVE",
"493.167 207.667 OFFCURVE",
"436.5 133 CURVE SMOOTH",
"379.833 58.333 OFFCURVE",
"307.333 8 OFFCURVE",
"242 8 CURVE SMOOTH",
"187.377 8 OFFCURVE",
"170 59.538 OFFCURVE",
"170 118 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 32 138 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 32 169 32 185 32 201 32 217 32 233 32 249 32 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 32 25 32 41 32 57 32 73 32 89 32 105 32 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 22 166 22 182 22 198 22 214 22 230 22 246 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 22 22 22 38 22 54 22 70 22 86 22 102 22 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 22 133 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"108 -8 LINE",
"190 8 LINE",
"226 77.333 OFFCURVE",
"285.667 173.167 OFFCURVE",
"347 268.5 CURVE SMOOTH",
"398.617 348.731 OFFCURVE",
"475.841 465.153 OFFCURVE",
"516 526 CURVE",
"512 530 LINE",
"417.333 456.667 OFFCURVE",
"307.333 387 OFFCURVE",
"186 359 CURVE",
"190 348 LINE",
"257.448 366.159 OFFCURVE",
"343.373 403.582 OFFCURVE",
"398 440 CURVE",
"400 438 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 17 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 17 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 370;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"497 165 LINE",
"471.129 113.257 OFFCURVE",
"417.037 32 OFFCURVE",
"357 32 CURVE SMOOTH",
"335.667 32 OFFCURVE",
"303 46.667 OFFCURVE",
"271 60 CURVE SMOOTH",
"237.667 73.333 OFFCURVE",
"204.667 87 OFFCURVE",
"182 87 CURVE SMOOTH",
"156.667 87 OFFCURVE",
"136 75.667 OFFCURVE",
"116 65 CURVE",
"114 69 LINE",
"167.333 105 OFFCURVE",
"236 132.833 OFFCURVE",
"304 161.5 CURVE SMOOTH",
"338 175.833 OFFCURVE",
"371.167 190.833 OFFCURVE",
"403.5 206.5 CURVE SMOOTH",
"468.167 237.833 OFFCURVE",
"519.5 276.5 OFFCURVE",
"549.5 326.5 CURVE SMOOTH",
"564.5 351.5 OFFCURVE",
"572 380.333 OFFCURVE",
"572 413 CURVE SMOOTH",
"572 481.203 OFFCURVE",
"515.85 538 OFFCURVE",
"420 538 CURVE SMOOTH",
"309.73 538 OFFCURVE",
"232 454.541 OFFCURVE",
"232 376 CURVE SMOOTH",
"232 329.333 OFFCURVE",
"258.667 300 OFFCURVE",
"300 300 CURVE SMOOTH",
"332 300 OFFCURVE",
"358.333 317.333 OFFCURVE",
"373 344 CURVE",
"369 347 LINE",
"354.333 340.333 OFFCURVE",
"347 336 OFFCURVE",
"331 336 CURVE SMOOTH",
"296.333 336 OFFCURVE",
"272 368.333 OFFCURVE",
"272 403 CURVE SMOOTH",
"272 474.606 OFFCURVE",
"342.011 522 OFFCURVE",
"404 522 CURVE SMOOTH",
"472 522 OFFCURVE",
"508 475 OFFCURVE",
"508 407 CURVE SMOOTH",
"508 365.667 OFFCURVE",
"498 327.833 OFFCURVE",
"466 288.5 CURVE SMOOTH",
"434 249.167 OFFCURVE",
"378.667 211.333 OFFCURVE",
"288 170 CURVE SMOOTH",
"192.667 126.667 OFFCURVE",
"121.833 90.5 OFFCURVE",
"75.5 61.5 CURVE SMOOTH",
"29.167 32.5 OFFCURVE",
"6 12.667 OFFCURVE",
"6 2 CURVE SMOOTH",
"6 -3.333 OFFCURVE",
"5.333 -8 OFFCURVE",
"12 -8 CURVE SMOOTH",
"25.653 -8 OFFCURVE",
"77.349 55 OFFCURVE",
"124 55 CURVE SMOOTH",
"179.836 55 OFFCURVE",
"243.848 -8 OFFCURVE",
"301 -8 CURVE SMOOTH",
"398.084 -8 OFFCURVE",
"461.86 82.53 OFFCURVE",
"504 164 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
34 5 47 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 9 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 47 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 26 138 26 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 26 169 26 185 26 201 26 217 26 233 26 249 26 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 26 25 26 41 26 57 26 73 26 89 26 105 26 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 34 166 34 182 34 198 34 214 34 230 34 246 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 34 22 34 38 34 54 34 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 34 85 34 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
41 47 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
68 3 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 3 44 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 44 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
65 10 68 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
74 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 74 167 74 183 74 199 74 215 74 231 74 247 74 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 74 23 74 39 74 55 74 71 74 87 74 103 74 119 74 135 74 151 74 167 74 183 74 199 74 215 74 231 74 247 74 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
7 74 23 74 39 74 55 74 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
70 74 86 74 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"272 264 LINE",
"290.667 266.667 OFFCURVE",
"310.333 268 OFFCURVE",
"329 268 CURVE SMOOTH",
"389 268 OFFCURVE",
"424 234 OFFCURVE",
"424 174 CURVE SMOOTH",
"424 71.776 OFFCURVE",
"327.671 4 OFFCURVE",
"226 4 CURVE SMOOTH",
"158 4 OFFCURVE",
"107 35.667 OFFCURVE",
"107 101 CURVE SMOOTH",
"107 161 OFFCURVE",
"141 194 OFFCURVE",
"181 194 CURVE SMOOTH",
"185 194 OFFCURVE",
"189.667 193.333 OFFCURVE",
"195 192 CURVE",
"196 196 LINE",
"182.667 209.333 OFFCURVE",
"160.667 218 OFFCURVE",
"142 218 CURVE SMOOTH",
"86 218 OFFCURVE",
"53 172.333 OFFCURVE",
"53 119 CURVE SMOOTH",
"53 38.634 OFFCURVE",
"137.575 -8 OFFCURVE",
"225 -8 CURVE SMOOTH",
"353.288 -8 OFFCURVE",
"484 63.003 OFFCURVE",
"484 172 CURVE SMOOTH",
"484 241.333 OFFCURVE",
"439.333 276 OFFCURVE",
"374 280 CURVE",
"374 282 LINE",
"481.671 295.459 OFFCURVE",
"598 334.482 OFFCURVE",
"598 429 CURVE SMOOTH",
"598 493.07 OFFCURVE",
"552.771 538 OFFCURVE",
"471 538 CURVE SMOOTH",
"384.864 538 OFFCURVE",
"308 476.97 OFFCURVE",
"308 402 CURVE SMOOTH",
"308 367.333 OFFCURVE",
"330.333 338 OFFCURVE",
"369 338 CURVE SMOOTH",
"399.667 338 OFFCURVE",
"428.667 356.667 OFFCURVE",
"430 382 CURVE",
"416.667 375.333 OFFCURVE",
"409.667 374 OFFCURVE",
"395 374 CURVE SMOOTH",
"363 374 OFFCURVE",
"348 403.667 OFFCURVE",
"348 433 CURVE SMOOTH",
"348 487.956 OFFCURVE",
"402.145 522 OFFCURVE",
"455 522 CURVE SMOOTH",
"511 522 OFFCURVE",
"538 481 OFFCURVE",
"538 429 CURVE SMOOTH",
"538 362.5 OFFCURVE",
"497.754 324.41 OFFCURVE",
"441.5 306 CURVE SMOOTH",
"392.076 289.825 OFFCURVE",
"326.345 286.793 OFFCURVE",
"272 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
68 4 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 5 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 8 76 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 8 7 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 7 138 7 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 7 169 7 185 7 201 7 217 7 233 7 249 7 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 7 25 7 41 7 57 7 73 7 89 7 105 7 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 76 138 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 76 169 76 185 76 201 76 217 76 233 76 249 76 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 76 25 76 41 76 57 76 73 76 89 76 105 76 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 27 90 27 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 27 169 27 185 27 201 27 217 27 233 27 249 27 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 27 25 27 41 27 57 27 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
43 56 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
63 56 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 68 166 68 182 68 198 68 214 68 230 68 246 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 68 22 68 38 68 54 68 70 68 86 68 102 68 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 68 133 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
18 3 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
21 24 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
79 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
43 18 79 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 59 167 59 183 59 199 59 215 59 231 59 247 59 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 59 118 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
63 51 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
65 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"616 516 LINE",
"559 510 LINE",
"354 199 LINE",
"110 199 LINE",
"110 203 LINE",
"602 609 LINE",
"576 609 LINE",
"78 187 LINE",
"347 187 LINE",
"224 0 LINE",
"294 10 LINE",
"407 187 LINE",
"529 187 LINE",
"536 199 LINE",
"414 199 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"226 273 LINE",
"231 269 LINE",
"264.333 287.667 OFFCURVE",
"300.333 302 OFFCURVE",
"339 302 CURVE SMOOTH",
"397.667 302 OFFCURVE",
"426 267 OFFCURVE",
"426 211 CURVE SMOOTH",
"426 100.473 OFFCURVE",
"346.434 4 OFFCURVE",
"234 4 CURVE SMOOTH",
"167.333 4 OFFCURVE",
"125 42.667 OFFCURVE",
"125 108 CURVE SMOOTH",
"125 157.333 OFFCURVE",
"156 194 OFFCURVE",
"200 194 CURVE SMOOTH",
"206.667 194 OFFCURVE",
"212.333 193.333 OFFCURVE",
"219 192 CURVE",
"220 196 LINE",
"204 213.333 OFFCURVE",
"184.667 222 OFFCURVE",
"162 222 CURVE SMOOTH",
"107.333 222 OFFCURVE",
"71 178.667 OFFCURVE",
"71 124 CURVE SMOOTH",
"71 37.19 OFFCURVE",
"150.18 -8 OFFCURVE",
"236 -8 CURVE SMOOTH",
"358.345 -8 OFFCURVE",
"486 94.738 OFFCURVE",
"486 204 CURVE SMOOTH",
"486 280 OFFCURVE",
"438 318 OFFCURVE",
"358 318 CURVE SMOOTH",
"322 318 OFFCURVE",
"298.667 309.667 OFFCURVE",
"272 299 CURVE",
"270 301 LINE",
"442 473 LINE",
"475.333 458.333 OFFCURVE",
"493.333 448 OFFCURVE",
"524 448 CURVE SMOOTH",
"561.883 448 OFFCURVE",
"619.545 483.817 OFFCURVE",
"641 516 CURVE",
"638 520 LINE",
"616.667 504 OFFCURVE",
"591.333 492 OFFCURVE",
"558 492 CURVE SMOOTH",
"531.333 492 OFFCURVE",
"500.667 504.667 OFFCURVE",
"478 530 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 53 138 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 53 169 53 185 53 201 53 217 53 233 53 249 53 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 53 25 53 41 53 57 53 73 53 89 53 105 53 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
17 33 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 45 166 45 182 45 198 45 214 45 230 45 246 45 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 45 22 45 38 45 54 45 70 45 86 45 102 45 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 45 133 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
3 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 28 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 28 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 36 167 36 183 36 199 36 215 36 231 36 247 36 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 36 23 36 39 36 55 36 71 36 87 36 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 36 118 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
42 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"468 179.335 OFFCURVE",
"358.958 4 OFFCURVE",
"255 4 CURVE SMOOTH",
"203.087 4 OFFCURVE",
"191 51.953 OFFCURVE",
"191 99 CURVE SMOOTH",
"191 233.497 OFFCURVE",
"314.774 390 OFFCURVE",
"406 390 CURVE SMOOTH",
"457.207 390 OFFCURVE",
"468 346.164 OFFCURVE",
"468 300 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 301 LINE",
"289 373 OFFCURVE",
"350.833 465.5 OFFCURVE",
"427.5 539.5 CURVE SMOOTH",
"504.167 613.5 OFFCURVE",
"596.667 670 OFFCURVE",
"694 670 CURVE SMOOTH",
"774.744 670 OFFCURVE",
"810 611.026 OFFCURVE",
"810 560 CURVE SMOOTH",
"810 549.333 OFFCURVE",
"809.333 546.667 OFFCURVE",
"808 536 CURVE",
"824 548 OFFCURVE",
"842 568.667 OFFCURVE",
"842 598 CURVE SMOOTH",
"842 650.311 OFFCURVE",
"793.72 686 OFFCURVE",
"711 686 CURVE SMOOTH",
"631 686 OFFCURVE",
"541.333 651 OFFCURVE",
"456 595 CURVE SMOOTH",
"413.333 567 OFFCURVE",
"372.833 534.5 OFFCURVE",
"334.5 497.5 CURVE SMOOTH",
"257.833 423.5 OFFCURVE",
"197.667 339.667 OFFCURVE",
"163 253 CURVE SMOOTH",
"145.667 209.667 OFFCURVE",
"137 167.667 OFFCURVE",
"137 127 CURVE SMOOTH",
"137 56.848 OFFCURVE",
"171.244 -8 OFFCURVE",
"245 -8 CURVE SMOOTH",
"371.764 -8 OFFCURVE",
"528 173.211 OFFCURVE",
"528 297 CURVE SMOOTH",
"528 366.333 OFFCURVE",
"494 406 OFFCURVE",
"426 406 CURVE SMOOTH",
"353.619 406 OFFCURVE",
"295.831 354.237 OFFCURVE",
"251 301 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
10 4 38 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 8 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 5 56 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 0 138 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 0 169 0 185 0 201 0 217 0 233 0 249 0 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 10 166 10 182 10 198 10 214 10 230 10 246 10 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 10 22 10 38 10 54 10 70 10 86 10 102 10 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 10 133 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 56 90 56 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 56 169 56 185 56 201 56 217 56 233 56 249 56 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 56 25 56 41 56 57 56 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
53 33 45 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"176 -96 LINE",
"670 540 LINE",
"664 544 LINE",
"637.333 516 OFFCURVE",
"605.333 496 OFFCURVE",
"564 496 CURVE SMOOTH",
"536 496 OFFCURVE",
"514.667 506.333 OFFCURVE",
"492 517 CURVE SMOOTH",
"470.667 527.667 OFFCURVE",
"451.333 538 OFFCURVE",
"426 538 CURVE SMOOTH",
"379.333 538 OFFCURVE",
"357.667 519.667 OFFCURVE",
"323 493 CURVE",
"321 495 LINE",
"334.333 513.667 OFFCURVE",
"347.333 536.333 OFFCURVE",
"358 559 CURVE",
"350 562 LINE",
"344 550.667 OFFCURVE",
"337.333 538 OFFCURVE",
"330 524 CURVE SMOOTH",
"322.667 510 OFFCURVE",
"315.667 498.333 OFFCURVE",
"309 489 CURVE",
"300.14 474.233 OFFCURVE",
"250 431.535 OFFCURVE",
"250 420 CURVE SMOOTH",
"250 414.667 OFFCURVE",
"252 412 OFFCURVE",
"256 412 CURVE SMOOTH",
"277.904 412 OFFCURVE",
"323.441 502 OFFCURVE",
"368 502 CURVE SMOOTH",
"394.667 502 OFFCURVE",
"416.333 491.667 OFFCURVE",
"439 481 CURVE SMOOTH",
"463 470.333 OFFCURVE",
"486.333 460 OFFCURVE",
"513 460 CURVE SMOOTH",
"567.667 460 OFFCURVE",
"602.333 481.667 OFFCURVE",
"641 515 CURVE",
"643 513 LINE",
"88 -106 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
34 3 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 11 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
31 40 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"494 295 LINE",
"579.944 317.179 OFFCURVE",
"662 380.295 OFFCURVE",
"662 471 CURVE SMOOTH",
"662 561.667 OFFCURVE",
"609 620 OFFCURVE",
"517 620 CURVE SMOOTH",
"418.747 620 OFFCURVE",
"330 550.379 OFFCURVE",
"330 450 CURVE SMOOTH",
"330 415.333 OFFCURVE",
"340 384 OFFCURVE",
"352 352 CURVE",
"231.815 352 OFFCURVE",
"114 272.888 OFFCURVE",
"114 151 CURVE SMOOTH",
"114 60.242 OFFCURVE",
"184.696 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"382.68 -8 OFFCURVE",
"469 67.567 OFFCURVE",
"469 170 CURVE SMOOTH",
"469 275.039 OFFCURVE",
"384 357.641 OFFCURVE",
"384 468 CURVE SMOOTH",
"384 552 OFFCURVE",
"431 608 OFFCURVE",
"499 608 CURVE SMOOTH",
"568.333 608 OFFCURVE",
"614 548 OFFCURVE",
"614 460 CURVE SMOOTH",
"614 377.333 OFFCURVE",
"573.333 322.667 OFFCURVE",
"492 304 CURVE"
);
},
{
closed = 1;
nodes = (
"168 287 OFFCURVE",
"232 338.667 OFFCURVE",
"356 340 CURVE",
"382.667 282.667 OFFCURVE",
"415 223.667 OFFCURVE",
"415 157 CURVE SMOOTH",
"415 75.934 OFFCURVE",
"391.246 8 OFFCURVE",
"304 8 CURVE SMOOTH",
"219.546 8 OFFCURVE",
"168 81.285 OFFCURVE",
"168 163 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
46 4 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 4 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 4 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 7 3 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 3 90 3 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 3 169 3 185 3 201 3 217 3 233 3 249 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 3 25 3 41 3 57 3 73 3 89 3 105 3 121 3 137 3 153 3 169 3 185 3 201 3 217 3 233 3 249 3 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 3 25 3 41 3 57 3 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 9 166 9 182 9 198 9 214 9 230 9 246 9 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 102 9 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 9 133 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
29 32 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 46 166 46 182 46 198 46 214 46 230 46 246 46 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 46 22 46 38 46 54 46 70 46 86 46 102 46 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 46 133 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 56 138 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 56 169 56 185 56 201 56 217 56 233 56 249 56 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 56 25 56 41 56 57 56 73 56 89 56 105 56 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
29 19 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"488 288.645 OFFCURVE",
"370.175 144 OFFCURVE",
"279 144 CURVE SMOOTH",
"239.667 144 OFFCURVE",
"220 175.667 OFFCURVE",
"220 239 CURVE SMOOTH",
"220 352.407 OFFCURVE",
"319.326 526 OFFCURVE",
"425 526 CURVE SMOOTH",
"471.667 526 OFFCURVE",
"488 487.667 OFFCURVE",
"488 437 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"439 245 LINE",
"413.667 189 OFFCURVE",
"374 120.5 OFFCURVE",
"326 54.5 CURVE SMOOTH",
"302 21.5 OFFCURVE",
"275.833 -10.333 OFFCURVE",
"247.5 -41 CURVE SMOOTH",
"190.833 -102.333 OFFCURVE",
"127.667 -151 OFFCURVE",
"61 -179 CURVE SMOOTH",
"27.667 -193 OFFCURVE",
"-6.333 -200 OFFCURVE",
"-41 -200 CURVE SMOOTH",
"-127.212 -200 OFFCURVE",
"-196 -147.995 OFFCURVE",
"-196 -68 CURVE SMOOTH",
"-196 -53.333 OFFCURVE",
"-195.667 -46.667 OFFCURVE",
"-193 -36 CURVE",
"-226.333 -46.667 OFFCURVE",
"-240 -72.667 OFFCURVE",
"-240 -102 CURVE SMOOTH",
"-240 -171.737 OFFCURVE",
"-160.525 -216 OFFCURVE",
"-69 -216 CURVE SMOOTH",
"23 -216 OFFCURVE",
"123.167 -172.5 OFFCURVE",
"214.5 -106.5 CURVE SMOOTH",
"260.167 -73.5 OFFCURVE",
"303.167 -35.167 OFFCURVE",
"343.5 8.5 CURVE SMOOTH",
"424.167 95.833 OFFCURVE",
"486.167 191.167 OFFCURVE",
"521.5 286.5 CURVE SMOOTH",
"539.167 334.167 OFFCURVE",
"548 379 OFFCURVE",
"548 421 CURVE SMOOTH",
"548 489 OFFCURVE",
"514 538 OFFCURVE",
"438 538 CURVE SMOOTH",
"323.868 538 OFFCURVE",
"160 368.533 OFFCURVE",
"160 235 CURVE SMOOTH",
"160 171 OFFCURVE",
"191.667 128 OFFCURVE",
"253 128 CURVE SMOOTH",
"329.583 128 OFFCURVE",
"396.038 184.922 OFFCURVE",
"437 245 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
49 6 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 8 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 8 0 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 0 138 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 0 169 0 185 0 201 0 217 0 233 0 249 0 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 23 138 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 23 169 23 185 23 201 23 217 23 233 23 249 23 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 23 25 23 41 23 57 23 73 23 89 23 105 23 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
46 43 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 49 166 49 182 49 198 49 214 49 230 49 246 49 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 49 22 49 38 49 54 49 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 49 85 49 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
46 38 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"66 16.667 OFFCURVE",
"81.667 2 OFFCURVE",
"103 2 CURVE SMOOTH",
"121.667 2 OFFCURVE",
"140 19.333 OFFCURVE",
"140 38 CURVE SMOOTH",
"140 56.667 OFFCURVE",
"122.667 76 OFFCURVE",
"104 76 CURVE SMOOTH",
"81.333 76 OFFCURVE",
"66 60.667 OFFCURVE",
"66 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 284.333 OFFCURVE",
"260.333 270 OFFCURVE",
"283 270 CURVE SMOOTH",
"303 270 OFFCURVE",
"320 284.667 OFFCURVE",
"320 306 CURVE SMOOTH",
"320 324.667 OFFCURVE",
"305 344 OFFCURVE",
"285 344 CURVE SMOOTH",
"263.667 344 OFFCURVE",
"246 329.667 OFFCURVE",
"246 307 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 6 166 6 182 6 198 6 214 6 230 6 246 6 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 6 22 6 38 6 54 6 70 6 86 6 102 6 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 6 133 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 12 138 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 12 169 12 185 12 201 12 217 12 233 12 249 12 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 1 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 3 167 3 183 3 199 3 215 3 231 3 247 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 103 3 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 3 134 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 250;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-32 -124 LINE",
"52.646 -113.078 OFFCURVE",
"144 -51.556 OFFCURVE",
"144 28 CURVE SMOOTH",
"144 50.667 OFFCURVE",
"130.333 74 OFFCURVE",
"105 74 CURVE SMOOTH",
"81 74 OFFCURVE",
"66 57 OFFCURVE",
"66 33 CURVE SMOOTH",
"66 10.333 OFFCURVE",
"85.333 0 OFFCURVE",
"100 0 CURVE SMOOTH",
"106 0 OFFCURVE",
"110 0.667 OFFCURVE",
"112 2 CURVE",
"106.821 -65.321 OFFCURVE",
"32.435 -106.794 OFFCURVE",
"-32 -118 CURVE"
);
},
{
closed = 1;
nodes = (
"246 284.333 OFFCURVE",
"260.333 270 OFFCURVE",
"283 270 CURVE SMOOTH",
"304.333 270 OFFCURVE",
"320 290 OFFCURVE",
"320 310 CURVE SMOOTH",
"320 327.333 OFFCURVE",
"302.333 344 OFFCURVE",
"285 344 CURVE SMOOTH",
"263.667 344 OFFCURVE",
"246 328.333 OFFCURVE",
"246 307 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 9 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 9 22 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 16 166 16 182 16 198 16 214 16 230 16 246 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 16 133 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
122 22 138 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 22 169 22 185 22 201 22 217 22 233 22 249 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 22 25 22 41 22 57 22 73 22 89 22 105 22 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 1 31 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 250;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"625 367 LINE",
"573 340.333 OFFCURVE",
"498.333 306.667 OFFCURVE",
"417 272 CURVE SMOOTH",
"335.667 237.333 OFFCURVE",
"249 202 OFFCURVE",
"173 174 CURVE",
"173 166 LINE",
"466 22 LINE",
"497 46 LINE",
"217 183 LINE",
"303.262 212.575 OFFCURVE",
"524.182 306.938 OFFCURVE",
"628 360 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 7 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 7 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"581 255 LINE",
"237 255 LINE",
"230 244 LINE",
"574 244 LINE"
);
},
{
closed = 1;
nodes = (
"495 123 LINE",
"151 123 LINE",
"144 112 LINE",
"488 112 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 1 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
1 4 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"238 358 LINE",
"211 327 LINE",
"544 179 LINE",
"93 -5 LINE",
"97 -13 LINE",
"589 188 LINE",
"589 200 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 2 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"157 129 LINE",
"181.774 178.547 OFFCURVE",
"262.776 211.37 OFFCURVE",
"325 241 CURVE SMOOTH",
"401.615 277.986 OFFCURVE",
"479 338.141 OFFCURVE",
"479 415 CURVE SMOOTH",
"479 499 OFFCURVE",
"420 538 OFFCURVE",
"340 538 CURVE SMOOTH",
"249.656 538 OFFCURVE",
"144 465.81 OFFCURVE",
"144 379 CURVE SMOOTH",
"144 323 OFFCURVE",
"178 288 OFFCURVE",
"234 288 CURVE SMOOTH",
"270 288 OFFCURVE",
"304.333 308.333 OFFCURVE",
"323 335 CURVE",
"316 340 LINE",
"294.667 313.333 OFFCURVE",
"264 300 OFFCURVE",
"236 300 CURVE SMOOTH",
"187.699 300 OFFCURVE",
"174 342.825 OFFCURVE",
"174 384 CURVE SMOOTH",
"174 461.167 OFFCURVE",
"254.63 526 OFFCURVE",
"326 526 CURVE SMOOTH",
"388.667 526 OFFCURVE",
"425 486 OFFCURVE",
"425 422 CURVE SMOOTH",
"425 363.333 OFFCURVE",
"406.667 316.667 OFFCURVE",
"360 278 CURVE SMOOTH",
"281.171 212.309 OFFCURVE",
"198.69 213.667 OFFCURVE",
"148 132 CURVE"
);
},
{
closed = 1;
nodes = (
"87 74 OFFCURVE",
"70 57 OFFCURVE",
"70 37 CURVE SMOOTH",
"70 17 OFFCURVE",
"87 0 OFFCURVE",
"107 0 CURVE SMOOTH",
"127 0 OFFCURVE",
"144 17 OFFCURVE",
"144 37 CURVE SMOOTH",
"144 57 OFFCURVE",
"127 74 OFFCURVE",
"107 74 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
53 9 59 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 4 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 53 166 53 182 53 198 53 214 53 230 53 246 53 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 53 22 53 38 53 54 53 70 53 86 53 102 53 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 53 133 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
36 28 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
50 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 50 167 50 183 50 199 50 215 50 231 50 247 50 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 103 50 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 50 134 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"868 381.667 OFFCURVE",
"863.5 455.5 OFFCURVE",
"821.5 509.5 CURVE SMOOTH",
"779.5 563.5 OFFCURVE",
"701 596 OFFCURVE",
"605 596 CURVE SMOOTH",
"501 596 OFFCURVE",
"401 572.167 OFFCURVE",
"313 523.5 CURVE SMOOTH",
"225 474.833 OFFCURVE",
"149.667 401.333 OFFCURVE",
"99 300 CURVE SMOOTH",
"72.333 245.333 OFFCURVE",
"59.5 183 OFFCURVE",
"65.5 123 CURVE SMOOTH",
"68.5 93 OFFCURVE",
"76.167 64.167 OFFCURVE",
"88.5 36.5 CURVE SMOOTH",
"113.167 -18.833 OFFCURVE",
"159.833 -61.833 OFFCURVE",
"228.5 -86.5 CURVE SMOOTH",
"262.833 -98.833 OFFCURVE",
"303.333 -105 OFFCURVE",
"350 -105 CURVE SMOOTH",
"483.333 -105 OFFCURVE",
"610 -52.333 OFFCURVE",
"714 21 CURVE SMOOTH",
"818 94.333 OFFCURVE",
"899 187.333 OFFCURVE",
"943 266 CURVE",
"936 270 LINE",
"884 182 OFFCURVE",
"799.333 91.333 OFFCURVE",
"698 22 CURVE SMOOTH",
"596.667 -47.333 OFFCURVE",
"477.333 -95 OFFCURVE",
"356 -95 CURVE SMOOTH",
"282.667 -95 OFFCURVE",
"228.333 -69.167 OFFCURVE",
"191 -28.5 CURVE SMOOTH",
"172.333 -8.167 OFFCURVE",
"158.167 15.5 OFFCURVE",
"148.5 42.5 CURVE SMOOTH",
"129.167 96.5 OFFCURVE",
"127.167 158.667 OFFCURVE",
"142.5 224 CURVE SMOOTH",
"150.167 256.667 OFFCURVE",
"162 288.333 OFFCURVE",
"178 319 CURVE SMOOTH",
"218 395 OFFCURVE",
"271.167 461 OFFCURVE",
"338.5 509 CURVE SMOOTH",
"405.833 557 OFFCURVE",
"486.667 586 OFFCURVE",
"580 586 CURVE SMOOTH",
"684 586 OFFCURVE",
"748.167 544.5 OFFCURVE",
"775.5 486.5 CURVE SMOOTH",
"802.833 428.5 OFFCURVE",
"792 353.333 OFFCURVE",
"748 288 CURVE SMOOTH",
"685.527 196.694 OFFCURVE",
"587.913 104 OFFCURVE",
"514 104 CURVE SMOOTH",
"499.333 104 OFFCURVE",
"492 111 OFFCURVE",
"492 125 CURVE SMOOTH",
"492 164.763 OFFCURVE",
"583.973 292.162 OFFCURVE",
"646 379 CURVE",
"593 379 LINE",
"566 331 LINE",
"564 331 LINE",
"557.333 359 OFFCURVE",
"541.333 386 OFFCURVE",
"496 386 CURVE SMOOTH",
"449.264 386 OFFCURVE",
"391.733 346.345 OFFCURVE",
"352 303 CURVE SMOOTH",
"313.341 260.827 OFFCURVE",
"277 197.88 OFFCURVE",
"277 153 CURVE SMOOTH",
"277 121 OFFCURVE",
"292 92 OFFCURVE",
"332 92 CURVE SMOOTH",
"377.477 92 OFFCURVE",
"438.63 145.96 OFFCURVE",
"468 178 CURVE",
"470 177 LINE",
"463.333 161 OFFCURVE",
"458 146.667 OFFCURVE",
"458 132 CURVE SMOOTH",
"458 109.333 OFFCURVE",
"472 92 OFFCURVE",
"504 92 CURVE SMOOTH",
"596.827 92 OFFCURVE",
"758.64 207.746 OFFCURVE",
"816 299 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"330 245.601 OFFCURVE",
"428.325 372 OFFCURVE",
"497 372 CURVE SMOOTH",
"518.333 372 OFFCURVE",
"538 363.333 OFFCURVE",
"538 338 CURVE SMOOTH",
"538 256.764 OFFCURVE",
"416.862 116 OFFCURVE",
"357 116 CURVE SMOOTH",
"341 116 OFFCURVE",
"330 126.333 OFFCURVE",
"330 153 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
90 4 20 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 5 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 38 166 38 182 38 198 38 214 38 230 38 246 38 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 38 22 38 38 38 54 38 70 38 86 38 102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 38 22 38 38 38 54 38 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 38 85 38 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
12 8 38 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 90 166 90 182 90 198 90 214 90 230 90 246 90 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 90 22 90 38 90 54 90 70 90 86 90 102 90 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 90 133 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
98 6 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
40 73 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
93 2 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
85 101 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
33 101 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 800;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"734 311 LINE",
"707.333 243 OFFCURVE",
"682 174 OFFCURVE",
"682 98 CURVE SMOOTH",
"682 39.738 OFFCURVE",
"709.935 -8 OFFCURVE",
"771 -8 CURVE SMOOTH",
"869.788 -8 OFFCURVE",
"989.9 155.639 OFFCURVE",
"1074 262 CURVE",
"1067 265 LINE",
"1044.904 234.87 OFFCURVE",
"981.273 157.911 OFFCURVE",
"943.5 118 CURVE SMOOTH",
"898.733 70.699 OFFCURVE",
"834.529 16 OFFCURVE",
"795 16 CURVE SMOOTH",
"752.333 16 OFFCURVE",
"742 48.667 OFFCURVE",
"742 90 CURVE SMOOTH",
"742 150 OFFCURVE",
"762.833 223.5 OFFCURVE",
"795.5 301.5 CURVE SMOOTH",
"811.833 340.5 OFFCURVE",
"830.667 379.667 OFFCURVE",
"852 419 CURVE SMOOTH",
"894.667 497.667 OFFCURVE",
"942.667 569.667 OFFCURVE",
"992 631 CURVE SMOOTH",
"1016.667 661.667 OFFCURVE",
"1040.333 687.333 OFFCURVE",
"1063 708 CURVE",
"1060 712 LINE",
"988 692 OFFCURVE",
"918 649.667 OFFCURVE",
"854 599 CURVE SMOOTH",
"822 573.667 OFFCURVE",
"791.833 546.833 OFFCURVE",
"763.5 518.5 CURVE SMOOTH",
"706.833 461.833 OFFCURVE",
"658.5 405.667 OFFCURVE",
"620.5 359 CURVE SMOOTH",
"601.5 335.667 OFFCURVE",
"585.667 316 OFFCURVE",
"573 300 CURVE SMOOTH",
"514.333 228 OFFCURVE",
"449.167 156.5 OFFCURVE",
"384.5 102.5 CURVE SMOOTH",
"319.833 48.5 OFFCURVE",
"255.333 12 OFFCURVE",
"198 12 CURVE SMOOTH",
"175.333 12 OFFCURVE",
"152 16.333 OFFCURVE",
"140 35 CURVE",
"152 37.667 OFFCURVE",
"159 52 OFFCURVE",
"159 64 CURVE SMOOTH",
"159 84 OFFCURVE",
"146.333 101 OFFCURVE",
"125 101 CURVE SMOOTH",
"101 101 OFFCURVE",
"87 82.667 OFFCURVE",
"87 60 CURVE SMOOTH",
"87 25.816 OFFCURVE",
"113.864 -8 OFFCURVE",
"187 -8 CURVE SMOOTH",
"251 -8 OFFCURVE",
"321.5 30.167 OFFCURVE",
"391.5 89.5 CURVE SMOOTH",
"461.5 148.833 OFFCURVE",
"531.667 228.333 OFFCURVE",
"597 311 CURVE"
);
},
{
closed = 1;
nodes = (
"605 323 LINE",
"662.333 396.333 OFFCURVE",
"723 466.667 OFFCURVE",
"787 528 CURVE SMOOTH",
"851 589.333 OFFCURVE",
"918.333 641.333 OFFCURVE",
"989 676 CURVE",
"991 674 LINE",
"879 567.333 OFFCURVE",
"799 447 OFFCURVE",
"739 323 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 16 166 16 182 16 198 16 214 16 230 16 246 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 16 133 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
19 10 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 63 138 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 63 169 63 185 63 201 63 217 63 233 63 249 63 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 63 25 63 41 63 57 63 73 63 89 63 105 63 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
66 63 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 13 167 13 183 13 199 13 215 13 231 13 247 13 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 13 134 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
19 5 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 22 167 22 183 22 199 22 215 22 231 22 247 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
35 5 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
53 5 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
66 5 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
71 5 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
76 5 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 944;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"453 448 LINE",
"455.667 426.667 OFFCURVE",
"457 406.333 OFFCURVE",
"457 385 CURVE SMOOTH",
"457 265.717 OFFCURVE",
"391.112 172 OFFCURVE",
"289 172 CURVE SMOOTH",
"211.15 172 OFFCURVE",
"172 254.424 OFFCURVE",
"172 330 CURVE SMOOTH",
"172 424.667 OFFCURVE",
"224.333 516.833 OFFCURVE",
"307 585.5 CURVE SMOOTH",
"389.667 654.167 OFFCURVE",
"504 700 OFFCURVE",
"628 700 CURVE SMOOTH",
"696 700 OFFCURVE",
"760.333 689.667 OFFCURVE",
"803 655 CURVE",
"743 617.667 OFFCURVE",
"694.667 563.333 OFFCURVE",
"648 498 CURVE SMOOTH",
"609.964 444.75 OFFCURVE",
"545.897 337.083 OFFCURVE",
"504 269 CURVE SMOOTH",
"453.333 185 OFFCURVE",
"412.167 116.833 OFFCURVE",
"367.5 69.5 CURVE SMOOTH",
"322.833 22.167 OFFCURVE",
"274.667 -4 OFFCURVE",
"208 -4 CURVE SMOOTH",
"184.338 -4 OFFCURVE",
"144.339 5.303 OFFCURVE",
"139 32 CURVE",
"157.667 32 OFFCURVE",
"172 46.333 OFFCURVE",
"172 65 CURVE SMOOTH",
"172 86.333 OFFCURVE",
"160.667 102 OFFCURVE",
"138 102 CURVE SMOOTH",
"115.333 102 OFFCURVE",
"98 85.667 OFFCURVE",
"98 59 CURVE SMOOTH",
"98 17.667 OFFCURVE",
"140.667 -16 OFFCURVE",
"210 -16 CURVE SMOOTH",
"310 -16 OFFCURVE",
"389.833 38.333 OFFCURVE",
"458.5 117 CURVE SMOOTH",
"492.833 156.333 OFFCURVE",
"524.833 200.333 OFFCURVE",
"554.5 249 CURVE SMOOTH",
"602.324 327.453 OFFCURVE",
"679.355 460.896 OFFCURVE",
"726.5 533 CURVE SMOOTH",
"754.833 576.333 OFFCURVE",
"785 612 OFFCURVE",
"817 640 CURVE",
"838.333 617.333 OFFCURVE",
"851 586.667 OFFCURVE",
"851 556 CURVE SMOOTH",
"851 439.485 OFFCURVE",
"769.703 355 OFFCURVE",
"652 355 CURVE",
"652 343 LINE",
"732.408 343 OFFCURVE",
"792 316.164 OFFCURVE",
"792 232 CURVE SMOOTH",
"792 113.801 OFFCURVE",
"728.027 4 OFFCURVE",
"608 4 CURVE SMOOTH",
"566.667 4 OFFCURVE",
"537 31 OFFCURVE",
"537 67 CURVE SMOOTH",
"537 100.333 OFFCURVE",
"545.333 124 OFFCURVE",
"568 128 CURVE",
"560 136 OFFCURVE",
"550.667 140 OFFCURVE",
"540 140 CURVE SMOOTH",
"505.333 140 OFFCURVE",
"483 112.333 OFFCURVE",
"483 79 CURVE SMOOTH",
"483 28.333 OFFCURVE",
"533 -8 OFFCURVE",
"609 -8 CURVE SMOOTH",
"721.798 -8 OFFCURVE",
"852 98.585 OFFCURVE",
"852 225 CURVE SMOOTH",
"852 307.009 OFFCURVE",
"794.739 350.25 OFFCURVE",
"715 353 CURVE",
"715 355 LINE",
"809.364 371.653 OFFCURVE",
"905 437.62 OFFCURVE",
"905 536 CURVE SMOOTH",
"905 592 OFFCURVE",
"882.667 626.333 OFFCURVE",
"840 661 CURVE",
"882.667 689 OFFCURVE",
"921.333 699.333 OFFCURVE",
"964 706 CURVE",
"964 718 LINE",
"921.333 711.333 OFFCURVE",
"878.333 699.333 OFFCURVE",
"825 670 CURVE",
"777 696.667 OFFCURVE",
"710.333 712 OFFCURVE",
"633 712 CURVE SMOOTH",
"537 712 OFFCURVE",
"450.5 688.5 OFFCURVE",
"376.5 650.5 CURVE SMOOTH",
"339.5 631.5 OFFCURVE",
"306.167 609.333 OFFCURVE",
"276.5 584 CURVE SMOOTH",
"217.167 533.333 OFFCURVE",
"175.667 475.333 OFFCURVE",
"153 414 CURVE SMOOTH",
"141.667 383.333 OFFCURVE",
"136 353.333 OFFCURVE",
"136 324 CURVE SMOOTH",
"136 234.404 OFFCURVE",
"192.991 160 OFFCURVE",
"289 160 CURVE SMOOTH",
"400.32 160 OFFCURVE",
"469 263.499 OFFCURVE",
"469 383 CURVE SMOOTH",
"469 404.333 OFFCURVE",
"468 421 OFFCURVE",
"464 449 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
98 9 92 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 9 134 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 8 68 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
134 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 15 values pushed */
150 98 166 98 182 98 198 98 214 98 230 98 246 98 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 98 22 98 38 98 54 98 70 98 86 98 102 98 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 98 133 98 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
122 68 138 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 68 169 68 185 68 201 68 217 68 233 68 249 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 68 25 68 41 68 57 68 73 68 89 68 105 68 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
30 68 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 92 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 60 166 60 182 60 198 60 214 60 230 60 246 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 60 133 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
57 92 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
116 68 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
124 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
134 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
137 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
137 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
139 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
106 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
106 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
89 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
30 89 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 89 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 55 167 55 183 55 199 55 215 55 231 55 247 55 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 55 23 55 39 55 55 55 71 55 87 55 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 55 118 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
129 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 129 167 129 183 129 199 129 215 129 231 129 247 129 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 129 23 129 39 129 55 129 71 129 87 129 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 129 118 129 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
57 89 129 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
95 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 95 167 95 183 95 199 95 215 95 231 95 247 95 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 95 23 95 39 95 55 95 71 95 87 95 103 95 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 95 134 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
116 89 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 889;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"534 556 LINE",
"533.333 552 OFFCURVE",
"533 547.333 OFFCURVE",
"533 542 CURVE SMOOTH",
"533 537.333 OFFCURVE",
"533 533 OFFCURVE",
"533 529 CURVE",
"535.667 469 OFFCURVE",
"578 447 OFFCURVE",
"630 447 CURVE SMOOTH",
"728.961 447 OFFCURVE",
"825 517.297 OFFCURVE",
"825 610 CURVE SMOOTH",
"825 676.667 OFFCURVE",
"784 712 OFFCURVE",
"700 712 CURVE SMOOTH",
"632 712 OFFCURVE",
"546.5 679.167 OFFCURVE",
"464.5 626.5 CURVE SMOOTH",
"423.5 600.167 OFFCURVE",
"383.667 569.167 OFFCURVE",
"345 533.5 CURVE SMOOTH",
"267.667 462.167 OFFCURVE",
"207 379.833 OFFCURVE",
"171 292.5 CURVE SMOOTH",
"153 248.833 OFFCURVE",
"144 206 OFFCURVE",
"144 164 CURVE SMOOTH",
"144 77.713 OFFCURVE",
"203.724 -16 OFFCURVE",
"330 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"494 21.5 OFFCURVE",
"542 71.5 CURVE SMOOTH",
"590 121.5 OFFCURVE",
"615 183.333 OFFCURVE",
"615 230 CURVE SMOOTH",
"615 310 OFFCURVE",
"575 340 OFFCURVE",
"491 340 CURVE",
"492 328 LINE",
"545.333 328 OFFCURVE",
"579 299.333 OFFCURVE",
"579 246 CURVE SMOOTH",
"579 125.461 OFFCURVE",
"461.454 -4 OFFCURVE",
"334 -4 CURVE SMOOTH",
"247.213 -4 OFFCURVE",
"208 70.856 OFFCURVE",
"208 152 CURVE SMOOTH",
"208 244 OFFCURVE",
"242.5 334.667 OFFCURVE",
"296.5 416 CURVE SMOOTH",
"323.5 456.667 OFFCURVE",
"354.167 494.333 OFFCURVE",
"388.5 529 CURVE SMOOTH",
"457.167 598.333 OFFCURVE",
"533 649.833 OFFCURVE",
"605 678.5 CURVE SMOOTH",
"641 692.833 OFFCURVE",
"674 700 OFFCURVE",
"704 700 CURVE SMOOTH",
"756 700 OFFCURVE",
"789 685 OFFCURVE",
"789 629 CURVE SMOOTH",
"789 541.028 OFFCURVE",
"706.396 459 OFFCURVE",
"631 459 CURVE SMOOTH",
"584.842 459 OFFCURVE",
"545 478.581 OFFCURVE",
"545 532 CURVE SMOOTH",
"545 536.667 OFFCURVE",
"545 540.667 OFFCURVE",
"545 544 CURVE SMOOTH",
"545 548 OFFCURVE",
"545.333 552 OFFCURVE",
"546 556 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 9 51 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 5 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 5 14 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 14 90 14 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 14 169 14 185 14 201 14 217 14 233 14 249 14 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 14 25 14 41 14 57 14 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 24 166 24 182 24 198 24 214 24 230 24 246 24 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 24 133 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 34 90 34 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 34 169 34 185 34 201 34 217 34 233 34 249 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 34 25 34 41 34 57 34 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
9 1 37 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 667;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"992 738 LINE",
"921.333 727.333 OFFCURVE",
"859 693.667 OFFCURVE",
"803 651 CURVE",
"747 693.667 OFFCURVE",
"678.333 718 OFFCURVE",
"601 718 CURVE SMOOTH",
"470.333 718 OFFCURVE",
"354.667 663.833 OFFCURVE",
"272 588.5 CURVE SMOOTH",
"189.333 513.167 OFFCURVE",
"139 418.667 OFFCURVE",
"139 336 CURVE SMOOTH",
"139 239.979 OFFCURVE",
"191.257 160 OFFCURVE",
"290 160 CURVE SMOOTH",
"427.789 160 OFFCURVE",
"520 287.335 OFFCURVE",
"520 447 CURVE SMOOTH",
"520 476 LINE",
"508 476 LINE",
"508 442 LINE SMOOTH",
"508 302.308 OFFCURVE",
"426.969 176 OFFCURVE",
"305 176 CURVE SMOOTH",
"211.73 176 OFFCURVE",
"179 244.859 OFFCURVE",
"179 334 CURVE SMOOTH",
"179 440.667 OFFCURVE",
"231.167 533.333 OFFCURVE",
"310.5 600 CURVE SMOOTH",
"389.833 666.667 OFFCURVE",
"496 706 OFFCURVE",
"604 706 CURVE SMOOTH",
"661.333 706 OFFCURVE",
"736 688.667 OFFCURVE",
"792 642 CURVE",
"721.333 583.333 OFFCURVE",
"663.167 499.833 OFFCURVE",
"610.5 412.5 CURVE SMOOTH",
"584.167 368.833 OFFCURVE",
"558.667 325 OFFCURVE",
"534 281 CURVE SMOOTH",
"484.667 193 OFFCURVE",
"434.167 118.333 OFFCURVE",
"377.5 65 CURVE SMOOTH",
"349.167 38.333 OFFCURVE",
"318 20.667 OFFCURVE",
"284 12 CURVE",
"231.866 20.021 OFFCURVE",
"186.208 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"135.333 32 OFFCURVE",
"120 27 OFFCURVE",
"120 11 CURVE SMOOTH",
"120 3 OFFCURVE",
"124.333 -2.5 OFFCURVE",
"133 -5.5 CURVE SMOOTH",
"141.667 -8.5 OFFCURVE",
"154 -10 OFFCURVE",
"170 -10 CURVE SMOOTH",
"223.193 -10 OFFCURVE",
"235.953 -4.007 OFFCURVE",
"285 3 CURVE",
"331.433 -7.925 OFFCURVE",
"380.382 -16 OFFCURVE",
"453 -16 CURVE SMOOTH",
"562.333 -16 OFFCURVE",
"673.833 30.167 OFFCURVE",
"758.5 105.5 CURVE SMOOTH",
"843.167 180.833 OFFCURVE",
"900 287 OFFCURVE",
"900 407 CURVE SMOOTH",
"900 487.497 OFFCURVE",
"876.021 582.589 OFFCURVE",
"816 640 CURVE",
"865.333 686.667 OFFCURVE",
"927.333 718 OFFCURVE",
"994 730 CURVE"
);
},
{
closed = 1;
nodes = (
"382.667 -4 OFFCURVE",
"343.333 -2 OFFCURVE",
"302 6 CURVE",
"302 8 LINE",
"390 36 OFFCURVE",
"457 94.333 OFFCURVE",
"513 165 CURVE SMOOTH",
"541 200.333 OFFCURVE",
"567 238.333 OFFCURVE",
"591 279 CURVE SMOOTH",
"629.467 344.179 OFFCURVE",
"691.667 458.397 OFFCURVE",
"729.5 522 CURVE SMOOTH",
"752.5 560.667 OFFCURVE",
"777.667 595.333 OFFCURVE",
"805 626 CURVE",
"838.333 590 OFFCURVE",
"852 531.333 OFFCURVE",
"852 478 CURVE SMOOTH",
"852 407.333 OFFCURVE",
"836.667 329.833 OFFCURVE",
"806 258.5 CURVE SMOOTH",
"790.667 222.833 OFFCURVE",
"771.667 189 OFFCURVE",
"749 157 CURVE SMOOTH",
"703.667 93 OFFCURVE",
"641.333 45 OFFCURVE",
"564 17 CURVE SMOOTH",
"525.333 3 OFFCURVE",
"482.667 -4 OFFCURVE",
"436 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
105 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 91 90 91 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 91 169 91 185 91 201 91 217 91 233 91 249 91 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 91 25 91 41 91 57 91 73 91 89 91 105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 91 25 91 41 91 57 91 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
105 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
49 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 49 166 49 182 49 198 49 214 49 230 49 246 49 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 49 22 49 38 49 54 49 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 49 85 49 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
102 72 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
106 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
84 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 29 167 29 183 29 199 29 215 29 231 29 247 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 103 29 119 29 135 29 151 29 167 29 183 29 199 29 215 29 231 29 247 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
7 29 23 29 39 29 55 29 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
70 29 86 29 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 54 167 54 183 54 199 54 215 54 231 54 247 54 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 54 23 54 39 54 55 54 71 54 87 54 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 54 118 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
102 23 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 889;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"342 180 LINE",
"372.529 224.405 OFFCURVE",
"426.811 268 OFFCURVE",
"481 268 CURVE SMOOTH",
"534.333 268 OFFCURVE",
"557 236.667 OFFCURVE",
"557 178 CURVE SMOOTH",
"557 63.271 OFFCURVE",
"433.853 0 OFFCURVE",
"330 0 CURVE SMOOTH",
"229.843 0 OFFCURVE",
"154 76.911 OFFCURVE",
"154 164 CURVE SMOOTH",
"154 307.85 OFFCURVE",
"250.869 344.401 OFFCURVE",
"367 398 CURVE SMOOTH",
"413.667 419.333 OFFCURVE",
"434 453.333 OFFCURVE",
"434 504 CURVE SMOOTH",
"434 594.476 OFFCURVE",
"480.34 700 OFFCURVE",
"590 700 CURVE SMOOTH",
"654 700 OFFCURVE",
"692 673.333 OFFCURVE",
"692 612 CURVE SMOOTH",
"692 559.861 OFFCURVE",
"645.47 483 OFFCURVE",
"572 483 CURVE SMOOTH",
"551.333 483 OFFCURVE",
"536.667 484.667 OFFCURVE",
"528 488 CURVE",
"527 477 LINE",
"533.667 474.333 OFFCURVE",
"553.333 471 OFFCURVE",
"572 471 CURVE SMOOTH",
"650.778 471 OFFCURVE",
"736 524.267 OFFCURVE",
"736 610 CURVE SMOOTH",
"736 680.682 OFFCURVE",
"666.371 712 OFFCURVE",
"600 712 CURVE SMOOTH",
"452.533 712 OFFCURVE",
"370 616.657 OFFCURVE",
"370 492 CURVE SMOOTH",
"370 419.959 OFFCURVE",
"366.024 407.599 OFFCURVE",
"318 385 CURVE SMOOTH",
"198.412 332.159 OFFCURVE",
"90 278.319 OFFCURVE",
"90 148 CURVE SMOOTH",
"90 45.033 OFFCURVE",
"184.301 -16 OFFCURVE",
"320 -16 CURVE SMOOTH",
"445.875 -16 OFFCURVE",
"611 86.142 OFFCURVE",
"611 185 CURVE SMOOTH",
"611 238.333 OFFCURVE",
"575 280 OFFCURVE",
"503 280 CURVE SMOOTH",
"431 280 OFFCURVE",
"376.333 242.333 OFFCURVE",
"335 185 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
68 9 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 9 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
6 4 78 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 6 52 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
45 16 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 52 90 52 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 52 169 52 185 52 201 52 217 52 233 52 249 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 52 25 52 41 52 57 52 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 60 166 60 182 60 198 60 214 60 230 60 246 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 60 133 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 68 166 68 182 68 198 68 214 68 230 68 246 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 68 22 68 38 68 54 68 70 68 86 68 102 68 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 68 133 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 78 138 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 78 169 78 185 78 201 78 217 78 233 78 249 78 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 78 25 78 41 78 57 78 73 78 89 78 105 78 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
31 41 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
47 81 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
45 41 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 667;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"602 323 LINE",
"563.333 261.667 OFFCURVE",
"516.667 181 OFFCURVE",
"458 117 CURVE SMOOTH",
"399.333 53 OFFCURVE",
"327.667 4 OFFCURVE",
"241 4 CURVE SMOOTH",
"137.109 4 OFFCURVE",
"102 55.075 OFFCURVE",
"102 99 CURVE",
"104.667 98.333 OFFCURVE",
"108 98 OFFCURVE",
"112 98 CURVE SMOOTH",
"130.667 98 OFFCURVE",
"140 114.333 OFFCURVE",
"140 133 CURVE SMOOTH",
"140 153 OFFCURVE",
"128.333 168 OFFCURVE",
"107 168 CURVE SMOOTH",
"77.667 168 OFFCURVE",
"62 140.667 OFFCURVE",
"62 114 CURVE SMOOTH",
"62 32.09 OFFCURVE",
"158.87 -8 OFFCURVE",
"236 -8 CURVE SMOOTH",
"341.333 -8 OFFCURVE",
"424 35.167 OFFCURVE",
"492 98.5 CURVE SMOOTH",
"560 161.833 OFFCURVE",
"614 244 OFFCURVE",
"662 324 CURVE",
"671.178 325.147 OFFCURVE",
"753.213 332.417 OFFCURVE",
"770 335 CURVE",
"760.667 317.667 OFFCURVE",
"751.333 300.5 OFFCURVE",
"742 283.5 CURVE SMOOTH",
"732.667 266.5 OFFCURVE",
"724.667 248.667 OFFCURVE",
"718 230 CURVE",
"724 227 LINE",
"762.667 288.333 OFFCURVE",
"811.333 342.333 OFFCURVE",
"866 389 CURVE",
"858 391.667 OFFCURVE",
"849.667 393 OFFCURVE",
"841 393 CURVE SMOOTH",
"813 393 OFFCURVE",
"798 373 OFFCURVE",
"786 357 CURVE",
"775.973 341.96 OFFCURVE",
"697.612 342.102 OFFCURVE",
"667 337 CURVE",
"696.644 377.623 OFFCURVE",
"737.008 456.17 OFFCURVE",
"767.5 499.5 CURVE SMOOTH",
"805.5 553.5 OFFCURVE",
"854.667 602 OFFCURVE",
"932 630 CURVE",
"1036.101 630 OFFCURVE",
"1122 618.147 OFFCURVE",
"1122 664 CURVE SMOOTH",
"1122 684 OFFCURVE",
"1100.667 684 OFFCURVE",
"1074 684 CURVE SMOOTH",
"1064 684 OFFCURVE",
"1052.833 683.333 OFFCURVE",
"1040.5 682 CURVE SMOOTH",
"1028.167 680.667 OFFCURVE",
"1014.333 680 OFFCURVE",
"999 680 CURVE SMOOTH",
"977.667 680 OFFCURVE",
"945.167 680.667 OFFCURVE",
"901.5 682 CURVE SMOOTH",
"857.833 683.333 OFFCURVE",
"806.667 684 OFFCURVE",
"748 684 CURVE SMOOTH",
"572 684 OFFCURVE",
"432.667 651 OFFCURVE",
"338 599 CURVE SMOOTH",
"243.333 547 OFFCURVE",
"192 477.333 OFFCURVE",
"192 404 CURVE SMOOTH",
"192 332 OFFCURVE",
"247.667 290 OFFCURVE",
"337 290 CURVE SMOOTH",
"464.393 290 OFFCURVE",
"592 383.483 OFFCURVE",
"592 485 CURVE SMOOTH",
"592 505 OFFCURVE",
"588.333 524.333 OFFCURVE",
"581 543 CURVE",
"571 541 LINE",
"575 526.333 OFFCURVE",
"580 508.667 OFFCURVE",
"580 486 CURVE SMOOTH",
"580 379.227 OFFCURVE",
"448.818 302 OFFCURVE",
"338 302 CURVE SMOOTH",
"254 302 OFFCURVE",
"201.333 343 OFFCURVE",
"204 407 CURVE SMOOTH",
"206.667 473.667 OFFCURVE",
"250.833 529.667 OFFCURVE",
"327.5 571 CURVE SMOOTH",
"404.167 612.333 OFFCURVE",
"514 636 OFFCURVE",
"646 636 CURVE SMOOTH",
"743.404 636 OFFCURVE",
"860.117 632 OFFCURVE",
"915 632 CURVE",
"915 630 LINE",
"769.696 593.013 OFFCURVE",
"685.926 455.92 OFFCURVE",
"608 335 CURVE",
"565 335 LINE",
"563 323 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
102 9 96 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 102 166 102 182 102 198 102 214 102 230 102 246 102 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 102 22 102 38 102 54 102 70 102 86 102 102 102 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 102 133 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
91 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
45 3 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 99 167 99 183 99 199 99 215 99 231 99 247 99 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 99 23 99 39 99 55 99 71 99 87 99 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 99 118 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"454 799 LINE",
"424.667 773.667 OFFCURVE",
"401 735 OFFCURVE",
"401 691 CURVE SMOOTH",
"401 662.333 OFFCURVE",
"409.333 636 OFFCURVE",
"426 612 CURVE",
"331.411 550.795 OFFCURVE",
"206 426.502 OFFCURVE",
"206 312 CURVE SMOOTH",
"206 237.333 OFFCURVE",
"252.333 190 OFFCURVE",
"327 190 CURVE SMOOTH",
"391 190 OFFCURVE",
"451.333 219.333 OFFCURVE",
"498 258 CURVE",
"500 256 LINE",
"428.748 144.846 OFFCURVE",
"330.248 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"124.009 -4 OFFCURVE",
"60 31.851 OFFCURVE",
"60 92 CURVE SMOOTH",
"60 95.333 OFFCURVE",
"60 98.667 OFFCURVE",
"60 102 CURVE SMOOTH",
"60 106 OFFCURVE",
"60.667 110.333 OFFCURVE",
"62 115 CURVE",
"66 112.333 OFFCURVE",
"75 112 OFFCURVE",
"79 112 CURVE",
"100.333 110.667 OFFCURVE",
"114 125.667 OFFCURVE",
"114 147 CURVE SMOOTH",
"114 165.667 OFFCURVE",
"97.667 182 OFFCURVE",
"79 182 CURVE SMOOTH",
"41.667 182 OFFCURVE",
"26 150.667 OFFCURVE",
"26 116 CURVE SMOOTH",
"26 36.184 OFFCURVE",
"98.888 -16 OFFCURVE",
"188 -16 CURVE SMOOTH",
"282.667 -16 OFFCURVE",
"362.667 26.833 OFFCURVE",
"428 87.5 CURVE SMOOTH",
"493.333 148.167 OFFCURVE",
"545.667 228.667 OFFCURVE",
"587 302 CURVE",
"601 320 OFFCURVE",
"614.667 336.667 OFFCURVE",
"628 352 CURVE SMOOTH",
"641.333 367.333 OFFCURVE",
"648 378.667 OFFCURVE",
"648 386 CURVE SMOOTH",
"648 398 OFFCURVE",
"639 401 OFFCURVE",
"631 401 CURVE SMOOTH",
"570.3 401 OFFCURVE",
"554.545 356.744 OFFCURVE",
"528 301 CURVE",
"515.052 268.63 OFFCURVE",
"416.045 206 OFFCURVE",
"352 206 CURVE SMOOTH",
"288.593 206 OFFCURVE",
"270 248.3 OFFCURVE",
"270 307 CURVE SMOOTH",
"270 398.362 OFFCURVE",
"367.851 536.484 OFFCURVE",
"444 589 CURVE",
"494.667 538.333 OFFCURVE",
"566.667 524 OFFCURVE",
"628 524 CURVE SMOOTH",
"725.181 524 OFFCURVE",
"836 554.781 OFFCURVE",
"836 642 CURVE SMOOTH",
"836 696.266 OFFCURVE",
"778.502 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"622 712 OFFCURVE",
"521.667 673.333 OFFCURVE",
"435 620 CURVE",
"421.667 636 OFFCURVE",
"413 665 OFFCURVE",
"413 693 CURVE SMOOTH",
"413 726.333 OFFCURVE",
"429.333 766.333 OFFCURVE",
"460 793 CURVE"
);
},
{
closed = 1;
nodes = (
"796 576.261 OFFCURVE",
"711.943 536 OFFCURVE",
"629 536 CURVE SMOOTH",
"550.333 536 OFFCURVE",
"485.333 558.333 OFFCURVE",
"452 597 CURVE",
"516.462 648.57 OFFCURVE",
"624.519 700 OFFCURVE",
"708 700 CURVE SMOOTH",
"748.708 700 OFFCURVE",
"796 695.708 OFFCURVE",
"796 651 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
72 5 58 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 9 91 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 5 102 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 27 166 27 182 27 198 27 214 27 230 27 246 27 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 27 22 27 38 27 54 27 70 27 86 27 102 27 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 27 133 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 72 166 72 182 72 198 72 214 72 230 72 246 72 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 72 22 72 38 72 54 72 70 72 86 72 102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 72 22 72 38 72 54 72 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 72 85 72 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
85 58 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 102 90 102 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 102 169 102 185 102 201 102 217 102 233 102 249 102 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 102 25 102 41 102 57 102 73 102 89 102 105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 102 25 102 41 102 57 102 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 19 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 32 167 32 183 32 199 32 215 32 231 32 247 32 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 32 23 32 39 32 55 32 71 32 87 32 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 32 118 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 61 167 61 183 61 199 61 215 61 231 61 247 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 61 23 61 39 61 55 61 71 61 87 61 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 61 118 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
85 53 101 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 611;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"456 531 LINE",
"462.667 517.667 OFFCURVE",
"467 506.333 OFFCURVE",
"467 485 CURVE SMOOTH",
"467 409.09 OFFCURVE",
"381.239 353 OFFCURVE",
"310 353 CURVE SMOOTH",
"256.612 353 OFFCURVE",
"227 392.412 OFFCURVE",
"227 436 CURVE SMOOTH",
"227 513.333 OFFCURVE",
"288.333 578.667 OFFCURVE",
"395 624 CURVE SMOOTH",
"501.667 669.333 OFFCURVE",
"653.333 696 OFFCURVE",
"836 696 CURVE",
"836 694 LINE",
"741.333 672.667 OFFCURVE",
"670.5 622 OFFCURVE",
"612.5 558 CURVE SMOOTH",
"554.5 494 OFFCURVE",
"507 415.667 OFFCURVE",
"459 341 CURVE SMOOTH",
"435.691 304.372 OFFCURVE",
"394.773 236.276 OFFCURVE",
"368 195 CURVE SMOOTH",
"352 170.333 OFFCURVE",
"335.333 146.333 OFFCURVE",
"318 123 CURVE SMOOTH",
"281.495 73.859 OFFCURVE",
"199.636 4 OFFCURVE",
"146 4 CURVE SMOOTH",
"115.333 4 OFFCURVE",
"87.667 15 OFFCURVE",
"81 35 CURVE",
"99.667 35 OFFCURVE",
"112 45.667 OFFCURVE",
"112 67 CURVE SMOOTH",
"112 85.667 OFFCURVE",
"99 99 OFFCURVE",
"79 99 CURVE SMOOTH",
"56.333 99 OFFCURVE",
"38 82.667 OFFCURVE",
"38 60 CURVE SMOOTH",
"38 11.865 OFFCURVE",
"97.135 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"229 -8 OFFCURVE",
"305.167 45.667 OFFCURVE",
"368.5 115 CURVE SMOOTH",
"431.833 184.333 OFFCURVE",
"483 271 OFFCURVE",
"523 335 CURVE",
"667 335 LINE",
"624.13 263.551 OFFCURVE",
"570 171.741 OFFCURVE",
"570 78 CURVE SMOOTH",
"570 24.373 OFFCURVE",
"595.189 -16 OFFCURVE",
"654 -16 CURVE SMOOTH",
"707.396 -16 OFFCURVE",
"795.319 50.961 OFFCURVE",
"836 96 CURVE SMOOTH",
"876 140.286 OFFCURVE",
"937.275 226.494 OFFCURVE",
"957 262 CURVE",
"948 266 LINE",
"884.115 160.344 OFFCURVE",
"755.947 0 OFFCURVE",
"668 0 CURVE SMOOTH",
"645.333 0 OFFCURVE",
"634 28.333 OFFCURVE",
"634 59 CURVE SMOOTH",
"634 132.333 OFFCURVE",
"668.167 226.833 OFFCURVE",
"719.5 319.5 CURVE SMOOTH",
"745.167 365.833 OFFCURVE",
"774.167 411.167 OFFCURVE",
"806.5 455.5 CURVE SMOOTH",
"871.167 544.167 OFFCURVE",
"939.333 614.5 OFFCURVE",
"1002 656.5 CURVE SMOOTH",
"1033.333 677.5 OFFCURVE",
"1060.667 688 OFFCURVE",
"1084 688 CURVE SMOOTH",
"1122.356 688 OFFCURVE",
"1125.08 632 OFFCURVE",
"1158 632 CURVE SMOOTH",
"1176.667 632 OFFCURVE",
"1190 646.333 OFFCURVE",
"1190 665 CURVE SMOOTH",
"1190 694.333 OFFCURVE",
"1161 712 OFFCURVE",
"1133 712 CURVE SMOOTH",
"1074.333 712 OFFCURVE",
"1013.667 686.667 OFFCURVE",
"955 648 CURVE SMOOTH",
"925.667 628.667 OFFCURVE",
"897.333 606.5 OFFCURVE",
"870 581.5 CURVE SMOOTH",
"815.333 531.5 OFFCURVE",
"766.167 475.5 OFFCURVE",
"725.5 421.5 CURVE SMOOTH",
"705.167 394.5 OFFCURVE",
"687.333 369.667 OFFCURVE",
"672 347 CURVE",
"528 347 LINE",
"597.333 465 OFFCURVE",
"661.167 552.667 OFFCURVE",
"719.5 610 CURVE SMOOTH",
"777.833 667.333 OFFCURVE",
"833 696 OFFCURVE",
"885 696 CURVE SMOOTH",
"902.333 696 OFFCURVE",
"915.333 696.667 OFFCURVE",
"924 698 CURVE SMOOTH",
"932.667 699.333 OFFCURVE",
"937 704 OFFCURVE",
"937 712 CURVE SMOOTH",
"937 720 OFFCURVE",
"928.667 722 OFFCURVE",
"922 722 CURVE SMOOTH",
"910.667 722 OFFCURVE",
"899 719.667 OFFCURVE",
"887 715 CURVE SMOOTH",
"875 710.333 OFFCURVE",
"860 708 OFFCURVE",
"842 708 CURVE SMOOTH",
"739.333 708 OFFCURVE",
"629.833 701.167 OFFCURVE",
"530.5 684.5 CURVE SMOOTH",
"480.833 676.167 OFFCURVE",
"434.333 665.333 OFFCURVE",
"391 652 CURVE SMOOTH",
"304.333 625.333 OFFCURVE",
"238.333 587 OFFCURVE",
"201 535 CURVE SMOOTH",
"182.333 509 OFFCURVE",
"173 479.667 OFFCURVE",
"173 447 CURVE SMOOTH",
"173 388.333 OFFCURVE",
"221.333 341 OFFCURVE",
"304 341 CURVE SMOOTH",
"386.113 341 OFFCURVE",
"479 402.135 OFFCURVE",
"479 487 CURVE SMOOTH",
"479 504.333 OFFCURVE",
"475.333 519.333 OFFCURVE",
"468 532 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
98 9 92 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
122 4 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 132 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 55 166 55 182 55 198 55 214 55 230 55 246 55 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
6 55 22 55 38 55 54 55 70 55 86 55 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
101 55 117 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
29 132 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
76 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 98 166 98 182 98 198 98 214 98 230 98 246 98 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 98 22 98 38 98 54 98 70 98 86 98 102 98 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 98 133 98 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
101 92 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 122 166 122 182 122 198 122 214 122 230 122 246 122 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 122 22 122 38 122 54 122 70 122 86 122 102 122 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 122 133 122 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
135 92 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
137 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 16 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
71 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
104 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
87 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
37 1 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
29 71 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
81 71 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
95 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 95 167 95 183 95 199 95 215 95 231 95 247 95 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 95 23 95 39 95 55 95 71 95 87 95 103 95 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 95 134 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
101 87 95 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
117 43 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
135 71 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 833;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-15 23.743 OFFCURVE",
"75.016 -16 OFFCURVE",
"154 -16 CURVE SMOOTH",
"250 -16 OFFCURVE",
"331.333 21.5 OFFCURVE",
"402 83.5 CURVE SMOOTH",
"472.667 145.5 OFFCURVE",
"535 232.333 OFFCURVE",
"591 331 CURVE SMOOTH",
"648.333 431 OFFCURVE",
"703 516.333 OFFCURVE",
"751 575 CURVE SMOOTH",
"799 633.667 OFFCURVE",
"841.667 668 OFFCURVE",
"875 668 CURVE SMOOTH",
"910.333 668 OFFCURVE",
"934 669.167 OFFCURVE",
"946 671.5 CURVE SMOOTH",
"958 673.833 OFFCURVE",
"964 678.333 OFFCURVE",
"964 685 CURVE SMOOTH",
"964 695.667 OFFCURVE",
"956.333 696 OFFCURVE",
"947 696 CURVE SMOOTH",
"939.667 696 OFFCURVE",
"923 693 OFFCURVE",
"897 687 CURVE SMOOTH",
"871 681 OFFCURVE",
"836 678 OFFCURVE",
"792 678 CURVE SMOOTH",
"718.667 679.333 OFFCURVE",
"630 673.833 OFFCURVE",
"546 658.5 CURVE SMOOTH",
"504 650.833 OFFCURVE",
"463.667 640.667 OFFCURVE",
"425 628 CURVE SMOOTH",
"347.667 602.667 OFFCURVE",
"285.833 566.667 OFFCURVE",
"250.5 520 CURVE SMOOTH",
"232.833 496.667 OFFCURVE",
"224 470.333 OFFCURVE",
"224 441 CURVE SMOOTH",
"224 365 OFFCURVE",
"277.333 325 OFFCURVE",
"356 325 CURVE SMOOTH",
"444.975 325 OFFCURVE",
"525 392.216 OFFCURVE",
"525 472 CURVE SMOOTH",
"525 482.667 OFFCURVE",
"521.667 502 OFFCURVE",
"519 510 CURVE",
"508 508 LINE",
"511.333 498 OFFCURVE",
"513 485.333 OFFCURVE",
"513 470 CURVE SMOOTH",
"513 401.412 OFFCURVE",
"432.389 337 OFFCURVE",
"359 337 CURVE SMOOTH",
"305.667 337 OFFCURVE",
"272 369 OFFCURVE",
"272 425 CURVE SMOOTH",
"272 497 OFFCURVE",
"314.167 548 OFFCURVE",
"377.5 584 CURVE SMOOTH",
"409.167 602 OFFCURVE",
"445.167 616.333 OFFCURVE",
"485.5 627 CURVE SMOOTH",
"566.167 648.333 OFFCURVE",
"651.333 659 OFFCURVE",
"730 663 CURVE SMOOTH",
"769.333 665 OFFCURVE",
"804 666 OFFCURVE",
"834 666 CURVE",
"834 664 LINE",
"772.667 641.333 OFFCURVE",
"713.667 586.167 OFFCURVE",
"663 525.5 CURVE SMOOTH",
"620.461 474.566 OFFCURVE",
"567.073 393.397 OFFCURVE",
"538 351 CURVE SMOOTH",
"520.012 323.418 OFFCURVE",
"483.604 260.881 OFFCURVE",
"454.5 217.5 CURVE SMOOTH",
"436.833 191.167 OFFCURVE",
"417.5 164.833 OFFCURVE",
"396.5 138.5 CURVE SMOOTH",
"354.5 85.833 OFFCURVE",
"304.333 42.667 OFFCURVE",
"247 16 CURVE SMOOTH",
"218.333 2.667 OFFCURVE",
"188 -4 OFFCURVE",
"156 -4 CURVE SMOOTH",
"78.634 -4 OFFCURVE",
"22.509 38.289 OFFCURVE",
"34 90 CURVE",
"55.333 86 OFFCURVE",
"71 103.667 OFFCURVE",
"71 125 CURVE SMOOTH",
"71 146.333 OFFCURVE",
"56.667 160 OFFCURVE",
"34 160 CURVE SMOOTH",
"3.333 160 OFFCURVE",
"-15 136 OFFCURVE",
"-15 108 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 9 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 7 56 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 6 166 6 182 6 198 6 214 6 230 6 246 6 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 6 22 6 38 6 54 6 70 6 86 6 102 6 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 6 133 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 34 166 34 182 34 198 34 214 34 230 34 246 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 34 22 34 38 34 54 34 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 34 85 34 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 3 167 3 183 3 199 3 215 3 231 3 247 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 3 118 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
27 82 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 611;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"499 500 LINE",
"503 485.333 OFFCURVE",
"505 472.333 OFFCURVE",
"505 461 CURVE SMOOTH",
"505 385.021 OFFCURVE",
"429.416 325 OFFCURVE",
"350 325 CURVE SMOOTH",
"290 325 OFFCURVE",
"263 366.333 OFFCURVE",
"263 413 CURVE SMOOTH",
"263 483.667 OFFCURVE",
"307.5 535.667 OFFCURVE",
"373.5 573 CURVE SMOOTH",
"406.5 591.667 OFFCURVE",
"443.833 606.833 OFFCURVE",
"485.5 618.5 CURVE SMOOTH",
"568.833 641.833 OFFCURVE",
"655.5 654.667 OFFCURVE",
"733.5 660 CURVE SMOOTH",
"772.5 662.667 OFFCURVE",
"806 664 OFFCURVE",
"834 664 CURVE",
"834 662 LINE",
"763.333 630 OFFCURVE",
"700.5 571.5 OFFCURVE",
"642.5 501.5 CURVE SMOOTH",
"613.5 466.5 OFFCURVE",
"586 428.833 OFFCURVE",
"560 388.5 CURVE SMOOTH",
"508 307.833 OFFCURVE",
"459.167 224.833 OFFCURVE",
"414.5 145.5 CURVE SMOOTH",
"392.167 105.833 OFFCURVE",
"370.333 69.333 OFFCURVE",
"349 36 CURVE",
"278.645 21.709 OFFCURVE",
"160.675 6.906 OFFCURVE",
"95.5 -3.5 CURVE SMOOTH",
"55.833 -9.833 OFFCURVE",
"18.833 -17 OFFCURVE",
"-15.5 -25 CURVE SMOOTH",
"-84.167 -41 OFFCURVE",
"-135.833 -66.167 OFFCURVE",
"-164.5 -105.5 CURVE SMOOTH",
"-178.833 -125.167 OFFCURVE",
"-186 -149.667 OFFCURVE",
"-186 -179 CURVE SMOOTH",
"-186 -253.304 OFFCURVE",
"-107.717 -298 OFFCURVE",
"-30 -298 CURVE SMOOTH",
"66 -298 OFFCURVE",
"149.833 -254 OFFCURVE",
"222.5 -190 CURVE SMOOTH",
"295.167 -126 OFFCURVE",
"356 -42.667 OFFCURVE",
"408 36 CURVE",
"574.359 82.069 OFFCURVE",
"651.832 136.622 OFFCURVE",
"737 263 CURVE",
"729 268 LINE",
"644.952 145.995 OFFCURVE",
"573.869 97.028 OFFCURVE",
"423 51 CURVE",
"421 53 LINE",
"454.703 100.434 OFFCURVE",
"513.78 204.789 OFFCURVE",
"557.5 279.5 CURVE SMOOTH",
"583.833 324.5 OFFCURVE",
"610.833 369.833 OFFCURVE",
"638.5 415.5 CURVE SMOOTH",
"693.833 506.833 OFFCURVE",
"747.667 583.5 OFFCURVE",
"797 629.5 CURVE SMOOTH",
"821.667 652.5 OFFCURVE",
"844 664 OFFCURVE",
"864 664 CURVE SMOOTH",
"900.285 664 OFFCURVE",
"956 664.147 OFFCURVE",
"956 684 CURVE SMOOTH",
"956 693.333 OFFCURVE",
"945.667 696 OFFCURVE",
"939 696 CURVE SMOOTH",
"925.667 696 OFFCURVE",
"907.833 692.667 OFFCURVE",
"885.5 686 CURVE SMOOTH",
"863.167 679.333 OFFCURVE",
"838.333 676 OFFCURVE",
"811 676 CURVE SMOOTH",
"757.667 676 OFFCURVE",
"674 672.333 OFFCURVE",
"586 659 CURVE SMOOTH",
"542 652.333 OFFCURVE",
"497.833 643.167 OFFCURVE",
"453.5 631.5 CURVE SMOOTH",
"364.833 608.167 OFFCURVE",
"292 571.167 OFFCURVE",
"248 518.5 CURVE SMOOTH",
"226 492.167 OFFCURVE",
"215 461 OFFCURVE",
"215 425 CURVE SMOOTH",
"215 358.333 OFFCURVE",
"264.667 313 OFFCURVE",
"350 313 CURVE SMOOTH",
"434.138 313 OFFCURVE",
"517 377.928 OFFCURVE",
"517 460 CURVE SMOOTH",
"517 472 OFFCURVE",
"515.333 487.667 OFFCURVE",
"510 501 CURVE"
);
},
{
closed = 1;
nodes = (
"-92 -286 OFFCURVE",
"-138 -255.667 OFFCURVE",
"-138 -181 CURVE SMOOTH",
"-138 -115.769 OFFCURVE",
"-52.644 -49.965 OFFCURVE",
"12.5 -33.5 CURVE SMOOTH",
"73.167 -18.167 OFFCURVE",
"144.5 -7.667 OFFCURVE",
"222.5 3 CURVE SMOOTH",
"261.5 8.333 OFFCURVE",
"300.667 15 OFFCURVE",
"340 23 CURVE",
"265.065 -96.896 OFFCURVE",
"128.724 -286 OFFCURVE",
"-32 -286 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
106 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 11 90 11 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 11 169 11 185 11 201 11 217 11 233 11 249 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 11 25 11 41 11 57 11 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 7 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 103 166 103 182 103 198 103 214 103 230 103 246 103 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 103 22 103 38 103 54 103 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 103 85 103 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
21 3 29 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 611;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1008 266 LINE",
"982.639 230.885 OFFCURVE",
"907.143 149.296 OFFCURVE",
"863 108 CURVE SMOOTH",
"819.037 66.873 OFFCURVE",
"732.241 4 OFFCURVE",
"689 4 CURVE SMOOTH",
"670.333 4 OFFCURVE",
"658 12.333 OFFCURVE",
"658 39 CURVE SMOOTH",
"658 85.193 OFFCURVE",
"728 184.349 OFFCURVE",
"728 246 CURVE SMOOTH",
"728 299.333 OFFCURVE",
"711 330.333 OFFCURVE",
"667 353 CURVE",
"667 355 LINE",
"757.667 360.333 OFFCURVE",
"827.333 398.5 OFFCURVE",
"886 448.5 CURVE SMOOTH",
"915.333 473.5 OFFCURVE",
"942 500.167 OFFCURVE",
"966 528.5 CURVE SMOOTH",
"1017.898 589.768 OFFCURVE",
"1097.458 692 OFFCURVE",
"1152 692 CURVE SMOOTH",
"1185.333 692 OFFCURVE",
"1203 674.333 OFFCURVE",
"1203 649 CURVE SMOOTH",
"1203 634.333 OFFCURVE",
"1199.667 622 OFFCURVE",
"1189 614 CURVE",
"1190.333 608.667 OFFCURVE",
"1196 606 OFFCURVE",
"1206 606 CURVE SMOOTH",
"1226 606 OFFCURVE",
"1243 626.333 OFFCURVE",
"1243 649 CURVE SMOOTH",
"1243 683.667 OFFCURVE",
"1206.333 704 OFFCURVE",
"1153 704 CURVE SMOOTH",
"1087.667 704 OFFCURVE",
"1032 665.5 OFFCURVE",
"980 615.5 CURVE SMOOTH",
"954 590.5 OFFCURVE",
"928.5 563.167 OFFCURVE",
"903.5 533.5 CURVE SMOOTH",
"853.5 474.167 OFFCURVE",
"803 422.5 OFFCURVE",
"747 388.5 CURVE SMOOTH",
"719 371.5 OFFCURVE",
"689 363 OFFCURVE",
"657 363 CURVE SMOOTH",
"651 363 OFFCURVE",
"644.5 363.5 OFFCURVE",
"637.5 364.5 CURVE SMOOTH",
"630.5 365.5 OFFCURVE",
"624.333 366 OFFCURVE",
"619 366 CURVE SMOOTH",
"616.333 366 OFFCURVE",
"609 364.667 OFFCURVE",
"609 358 CURVE SMOOTH",
"609 352 OFFCURVE",
"613.667 349 OFFCURVE",
"623 349 CURVE SMOOTH",
"626.333 349 OFFCURVE",
"630 349.333 OFFCURVE",
"634 350 CURVE SMOOTH",
"638 350.667 OFFCURVE",
"641.667 351 OFFCURVE",
"645 351 CURVE SMOOTH",
"665 351 OFFCURVE",
"692 338.667 OFFCURVE",
"692 300 CURVE SMOOTH",
"692 228.622 OFFCURVE",
"604 125.861 OFFCURVE",
"604 56 CURVE SMOOTH",
"604 13.333 OFFCURVE",
"640.333 -8 OFFCURVE",
"679 -8 CURVE SMOOTH",
"727.435 -8 OFFCURVE",
"818.89 54.914 OFFCURVE",
"864 96.5 CURVE SMOOTH",
"908.834 137.831 OFFCURVE",
"985.741 224.321 OFFCURVE",
"1014 262 CURVE"
);
},
{
closed = 1;
nodes = (
"453 495 LINE",
"455.667 484.333 OFFCURVE",
"460 467.667 OFFCURVE",
"460 453 CURVE SMOOTH",
"460 386.183 OFFCURVE",
"383.95 322 OFFCURVE",
"301 322 CURVE SMOOTH",
"258.333 322 OFFCURVE",
"221 354.667 OFFCURVE",
"221 408 CURVE SMOOTH",
"221 485.333 OFFCURVE",
"273 541 OFFCURVE",
"349 581 CURVE SMOOTH",
"387 601 OFFCURVE",
"429.5 617.5 OFFCURVE",
"476.5 630.5 CURVE SMOOTH",
"570.5 656.5 OFFCURVE",
"666.167 670.333 OFFCURVE",
"749.5 677 CURVE SMOOTH",
"791.167 680.333 OFFCURVE",
"825.333 682 OFFCURVE",
"852 682 CURVE",
"852 680 LINE",
"778.667 660 OFFCURVE",
"720.333 619.667 OFFCURVE",
"667 561 CURVE SMOOTH",
"613.667 502.333 OFFCURVE",
"565 426.667 OFFCURVE",
"509 336 CURVE SMOOTH",
"485.931 298.65 OFFCURVE",
"445.667 230.056 OFFCURVE",
"419 189.5 CURVE SMOOTH",
"403 165.167 OFFCURVE",
"386.5 141.667 OFFCURVE",
"369.5 119 CURVE SMOOTH",
"333.338 70.783 OFFCURVE",
"252.862 4 OFFCURVE",
"202 4 CURVE SMOOTH",
"168.667 4 OFFCURVE",
"140 18.333 OFFCURVE",
"140 37 CURVE",
"154.667 37 OFFCURVE",
"165 53.667 OFFCURVE",
"165 67 CURVE SMOOTH",
"165 85.667 OFFCURVE",
"152 101 OFFCURVE",
"132 101 CURVE SMOOTH",
"109.333 101 OFFCURVE",
"93 83.667 OFFCURVE",
"93 61 CURVE SMOOTH",
"93 11.683 OFFCURVE",
"149.015 -8 OFFCURVE",
"196 -8 CURVE SMOOTH",
"278.667 -8 OFFCURVE",
"350.5 42.333 OFFCURVE",
"412.5 109 CURVE SMOOTH",
"474.5 175.667 OFFCURVE",
"526.667 258.667 OFFCURVE",
"568 324 CURVE SMOOTH",
"610.171 390.585 OFFCURVE",
"677.296 505.819 OFFCURVE",
"725.5 566.5 CURVE SMOOTH",
"782.167 637.833 OFFCURVE",
"847 688 OFFCURVE",
"927 688 CURVE SMOOTH",
"943.667 688 OFFCURVE",
"956.5 688.833 OFFCURVE",
"965.5 690.5 CURVE SMOOTH",
"974.5 692.167 OFFCURVE",
"979 696 OFFCURVE",
"979 702 CURVE SMOOTH",
"979 708.667 OFFCURVE",
"972 712 OFFCURVE",
"964 712 CURVE SMOOTH",
"960 712 OFFCURVE",
"954.333 710.833 OFFCURVE",
"947 708.5 CURVE SMOOTH",
"939.667 706.167 OFFCURVE",
"930.333 703.333 OFFCURVE",
"919 700 CURVE",
"901.667 696 OFFCURVE",
"879 690 OFFCURVE",
"855 690 CURVE SMOOTH",
"736.333 690 OFFCURVE",
"619.333 680 OFFCURVE",
"518 660 CURVE SMOOTH",
"467.333 650 OFFCURVE",
"420.5 637.5 OFFCURVE",
"377.5 622.5 CURVE SMOOTH",
"291.5 592.5 OFFCURVE",
"227.667 553.167 OFFCURVE",
"193 504.5 CURVE SMOOTH",
"175.667 480.167 OFFCURVE",
"167 453.667 OFFCURVE",
"167 425 CURVE SMOOTH",
"167 357.527 OFFCURVE",
"226.592 310 OFFCURVE",
"294 310 CURVE SMOOTH",
"396.219 310 OFFCURVE",
"472 382.478 OFFCURVE",
"472 451 CURVE SMOOTH",
"472 467.667 OFFCURVE",
"469 483.333 OFFCURVE",
"463 498 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
129 9 123 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 4 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 5 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 5 47 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 15 90 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 15 25 15 41 15 57 15 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 47 90 47 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 47 169 47 185 47 201 47 217 47 233 47 249 47 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 47 25 47 41 47 57 47 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
58 123 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 66 166 66 182 66 198 66 214 66 230 66 246 66 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 66 22 66 38 66 54 66 70 66 86 66 102 66 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 66 133 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 129 166 129 182 129 198 129 214 129 230 129 246 129 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 129 22 129 38 129 54 129 70 129 86 129 102 129 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 129 133 129 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
129 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
148 123 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
129 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
155 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
168 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
102 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
118 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
118 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 2 148 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
58 7 102 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
148 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
118 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
126 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 126 167 126 183 126 199 126 215 126 231 126 247 126 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 126 23 126 39 126 55 126 71 126 87 126 103 126 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 126 134 126 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 889;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"676 265 LINE",
"627.363 220.784 OFFCURVE",
"541.283 143.837 OFFCURVE",
"489 97 CURVE SMOOTH",
"425 39.667 OFFCURVE",
"362.333 -19 OFFCURVE",
"309 -79 CURVE",
"299.667 -15 OFFCURVE",
"257.667 35 OFFCURVE",
"167 35 CURVE SMOOTH",
"149.667 35 OFFCURVE",
"137.667 33.333 OFFCURVE",
"127 32 CURVE",
"125 34 LINE",
"217 70 OFFCURVE",
"286.167 134.5 OFFCURVE",
"345.5 208.5 CURVE SMOOTH",
"394.348 269.423 OFFCURVE",
"461.006 380.74 OFFCURVE",
"502 445 CURVE",
"519.333 443.667 OFFCURVE",
"533.333 443 OFFCURVE",
"556 443 CURVE SMOOTH",
"650.667 443 OFFCURVE",
"735.833 470.167 OFFCURVE",
"796.5 509.5 CURVE SMOOTH",
"857.167 548.833 OFFCURVE",
"894 598 OFFCURVE",
"894 642 CURVE SMOOTH",
"894 690 OFFCURVE",
"861.667 712 OFFCURVE",
"811 712 CURVE SMOOTH",
"670.54 712 OFFCURVE",
"528.186 581 OFFCURVE",
"452 464 CURVE",
"373.174 469.255 OFFCURVE",
"300 531.984 OFFCURVE",
"300 607 CURVE SMOOTH",
"300 654.991 OFFCURVE",
"340.628 700 OFFCURVE",
"394 700 CURVE SMOOTH",
"419.333 700 OFFCURVE",
"441 694 OFFCURVE",
"457 686 CURVE",
"461 697 LINE",
"445 705 OFFCURVE",
"420.333 712 OFFCURVE",
"395 712 CURVE SMOOTH",
"336.196 712 OFFCURVE",
"288 664.486 OFFCURVE",
"288 607 CURVE SMOOTH",
"288 521.813 OFFCURVE",
"359.186 465.518 OFFCURVE",
"443 452 CURVE",
"396.798 378.937 OFFCURVE",
"326.769 255.97 OFFCURVE",
"283 192 CURVE SMOOTH",
"231 116 OFFCURVE",
"176.667 57.333 OFFCURVE",
"110 36 CURVE",
"98.934 34.77 OFFCURVE",
"20.536 30.959 OFFCURVE",
"-1.5 29 CURVE SMOOTH",
"-33.634 26.144 OFFCURVE",
"-86 17.183 OFFCURVE",
"-86 0 CURVE SMOOTH",
"-86 -10.667 OFFCURVE",
"-73 -16 OFFCURVE",
"-57 -16 CURVE SMOOTH",
"-1.962 -16 OFFCURVE",
"81.134 24 OFFCURVE",
"110 24 CURVE SMOOTH",
"192.175 24 OFFCURVE",
"254 -23.639 OFFCURVE",
"254 -108 CURVE SMOOTH",
"254 -131.035 OFFCURVE",
"230 -139.05 OFFCURVE",
"230 -157 CURVE SMOOTH",
"230 -164.333 OFFCURVE",
"234.333 -168 OFFCURVE",
"243 -168 CURVE SMOOTH",
"265.667 -168 OFFCURVE",
"292.333 -135.667 OFFCURVE",
"307 -97 CURVE",
"347 -50.333 OFFCURVE",
"416.833 17.333 OFFCURVE",
"489.5 84 CURVE SMOOTH",
"550.965 140.39 OFFCURVE",
"638.534 219.032 OFFCURVE",
"681 259 CURVE"
);
},
{
closed = 1;
nodes = (
"838.667 700 OFFCURVE",
"860 679.667 OFFCURVE",
"860 641 CURVE SMOOTH",
"860 522.121 OFFCURVE",
"681.553 455 OFFCURVE",
"558 455 CURVE SMOOTH",
"536.667 455 OFFCURVE",
"521.667 455.667 OFFCURVE",
"507 457 CURVE",
"565.388 557.093 OFFCURVE",
"681.59 700 OFFCURVE",
"800 700 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
75 5 114 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 114 90 114 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 114 169 114 185 114 201 114 217 114 233 114 249 114 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 114 25 114 41 114 57 114 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
118 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
92 8 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
40 25 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
95 8 92 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
106 25 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 556;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1115 271 LINE",
"1033.667 96.333 OFFCURVE",
"893.667 8 OFFCURVE",
"691 8 CURVE",
"691 10 LINE",
"776.333 47.333 OFFCURVE",
"833.667 104.5 OFFCURVE",
"875 166.5 CURVE SMOOTH",
"916.333 228.5 OFFCURVE",
"942.667 295.667 OFFCURVE",
"964 353 CURVE",
"981.006 393.388 OFFCURVE",
"1038.825 520.072 OFFCURVE",
"1058 554.5 CURVE SMOOTH",
"1089.658 611.34 OFFCURVE",
"1153.822 698 OFFCURVE",
"1197 698 CURVE SMOOTH",
"1207 698 OFFCURVE",
"1217.167 696.833 OFFCURVE",
"1227.5 694.5 CURVE SMOOTH",
"1237.833 692.167 OFFCURVE",
"1247.667 691 OFFCURVE",
"1257 691 CURVE SMOOTH",
"1267.667 691 OFFCURVE",
"1277 692.333 OFFCURVE",
"1277 703 CURVE SMOOTH",
"1277 716.333 OFFCURVE",
"1254 722 OFFCURVE",
"1234 722 CURVE SMOOTH",
"1182 722 OFFCURVE",
"1122.333 709.833 OFFCURVE",
"1049 662.5 CURVE SMOOTH",
"975.667 615.167 OFFCURVE",
"890 532.667 OFFCURVE",
"786 390 CURVE SMOOTH",
"753.484 345.15 OFFCURVE",
"693.767 259.971 OFFCURVE",
"654 207.5 CURVE SMOOTH",
"606 144.167 OFFCURVE",
"555.333 83.667 OFFCURVE",
"506 41 CURVE",
"504 43 LINE",
"558.667 116.333 OFFCURVE",
"591.5 205.5 OFFCURVE",
"621.5 295.5 CURVE SMOOTH",
"636.5 340.5 OFFCURVE",
"651.167 385 OFFCURVE",
"665.5 429 CURVE SMOOTH",
"694.167 517 OFFCURVE",
"732.333 593.167 OFFCURVE",
"787 648.5 CURVE SMOOTH",
"814.333 676.167 OFFCURVE",
"848.667 696.333 OFFCURVE",
"890 709 CURVE",
"889 718 LINE",
"781 696.667 OFFCURVE",
"698.667 648.833 OFFCURVE",
"628 581.5 CURVE SMOOTH",
"557.333 514.167 OFFCURVE",
"498.333 427.333 OFFCURVE",
"437 330 CURVE SMOOTH",
"394.782 261.801 OFFCURVE",
"330.746 155.916 OFFCURVE",
"289.5 104.5 CURVE SMOOTH",
"240.833 43.833 OFFCURVE",
"191.667 4 OFFCURVE",
"133 4 CURVE SMOOTH",
"119.667 4 OFFCURVE",
"101.333 10 OFFCURVE",
"100 18 CURVE",
"110.667 20.667 OFFCURVE",
"115 35.333 OFFCURVE",
"115 46 CURVE SMOOTH",
"115 63.333 OFFCURVE",
"103.333 79 OFFCURVE",
"86 79 CURVE SMOOTH",
"66 79 OFFCURVE",
"51 64 OFFCURVE",
"51 44 CURVE SMOOTH",
"51 3.361 OFFCURVE",
"86.699 -8 OFFCURVE",
"123 -8 CURVE SMOOTH",
"191 -8 OFFCURVE",
"244 28.833 OFFCURVE",
"292 85.5 CURVE SMOOTH",
"332.71 133.561 OFFCURVE",
"392.848 234.889 OFFCURVE",
"433 300 CURVE SMOOTH",
"482.333 380 OFFCURVE",
"534.333 463.5 OFFCURVE",
"597 533.5 CURVE SMOOTH",
"659.667 603.5 OFFCURVE",
"732 661.667 OFFCURVE",
"820 691 CURVE",
"822 689 LINE",
"732.667 643.667 OFFCURVE",
"676.833 576.333 OFFCURVE",
"637.5 499 CURVE SMOOTH",
"617.833 460.333 OFFCURVE",
"601.667 419.667 OFFCURVE",
"589 377 CURVE SMOOTH",
"568.737 308.747 OFFCURVE",
"534.855 188.434 OFFCURVE",
"511.5 120 CURVE SMOOTH",
"497.167 78 OFFCURVE",
"478.333 38.667 OFFCURVE",
"455 2 CURVE",
"462 -8 LINE",
"530 41.333 OFFCURVE",
"586.333 101.167 OFFCURVE",
"637 164.5 CURVE SMOOTH",
"687.667 227.833 OFFCURVE",
"734.667 296 OFFCURVE",
"780 360 CURVE SMOOTH",
"838.667 441.333 OFFCURVE",
"904.5 520.5 OFFCURVE",
"970.5 582.5 CURVE SMOOTH",
"1036.5 644.5 OFFCURVE",
"1103.667 688.667 OFFCURVE",
"1161 698 CURVE",
"1163 696 LINE",
"1076.333 660 OFFCURVE",
"1019.5 584.167 OFFCURVE",
"973.5 495.5 CURVE SMOOTH",
"950.5 451.167 OFFCURVE",
"929.5 404.333 OFFCURVE",
"910.5 355 CURVE SMOOTH",
"872.5 256.333 OFFCURVE",
"830 164.167 OFFCURVE",
"774 91.5 CURVE SMOOTH",
"746 55.167 OFFCURVE",
"712 27.333 OFFCURVE",
"672 8 CURVE",
"662.667 9.333 OFFCURVE",
"653.667 10.667 OFFCURVE",
"645 12 CURVE SMOOTH",
"636.333 13.333 OFFCURVE",
"627.333 14 OFFCURVE",
"618 14 CURVE SMOOTH",
"611.333 14 OFFCURVE",
"596 13.667 OFFCURVE",
"596 3 CURVE SMOOTH",
"596 -5 OFFCURVE",
"605 -8 OFFCURVE",
"617 -8 CURVE SMOOTH",
"628.576 -8 OFFCURVE",
"670.487 0 OFFCURVE",
"702 0 CURVE SMOOTH",
"792.667 0 OFFCURVE",
"878 21 OFFCURVE",
"950 65 CURVE SMOOTH",
"1022 109 OFFCURVE",
"1081.667 177 OFFCURVE",
"1123 269 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
66 9 60 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 66 166 66 182 66 198 66 214 66 230 66 246 66 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 66 22 66 38 66 54 66 70 66 86 66 102 66 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 66 133 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 16 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
101 16 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
72 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
55 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
152 27 168 27 184 27 200 27 216 27 232 27 248 27 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 27 24 27 40 27 56 27 72 27 88 27 104 27 120 27 136 27 152 27 168 27 184 27 200 27 216 27 232 27 248 27 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 27 24 27 40 27 56 27 72 27 88 27 104 27 120 27 136 27 152 27 168 27 184 27 200 27 216 27 232 27 248 27 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
46 10 101 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
63 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 63 167 63 183 63 199 63 215 63 231 63 247 63 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 63 23 63 39 63 55 63 71 63 87 63 103 63 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 63 134 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
91 55 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
107 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
123 55 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1000;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1004 543 LINE",
"1044.848 556.616 OFFCURVE",
"1088 593.668 OFFCURVE",
"1088 639 CURVE SMOOTH",
"1088 676.333 OFFCURVE",
"1058.333 704 OFFCURVE",
"1013 704 CURVE SMOOTH",
"921.358 704 OFFCURVE",
"819.727 588.757 OFFCURVE",
"738 465 CURVE SMOOTH",
"670.55 361.015 OFFCURVE",
"595.254 204.676 OFFCURVE",
"545 93 CURVE",
"543 95 LINE",
"556.333 143 OFFCURVE",
"561 183.333 OFFCURVE",
"561 222 CURVE SMOOTH",
"561 351.899 OFFCURVE",
"523 464.681 OFFCURVE",
"523 574 CURVE SMOOTH",
"523 654.242 OFFCURVE",
"531.385 649.951 OFFCURVE",
"550 712 CURVE",
"512.505 712 OFFCURVE",
"498.011 662.053 OFFCURVE",
"492 632 CURVE",
"458.667 556 OFFCURVE",
"415.167 461 OFFCURVE",
"366.5 369 CURVE SMOOTH",
"342.167 323 OFFCURVE",
"316.5 278.167 OFFCURVE",
"289.5 234.5 CURVE SMOOTH",
"235.5 147.167 OFFCURVE",
"177.167 79.167 OFFCURVE",
"116.5 38.5 CURVE SMOOTH",
"86.167 18.167 OFFCURVE",
"55.667 8 OFFCURVE",
"25 8 CURVE SMOOTH",
"12.333 8 OFFCURVE",
"3 10.333 OFFCURVE",
"-3 15 CURVE SMOOTH",
"-9 19.667 OFFCURVE",
"-12.333 23.667 OFFCURVE",
"-13 27 CURVE",
"-2.333 29.667 OFFCURVE",
"0 41.667 OFFCURVE",
"0 51 CURVE SMOOTH",
"0 68.333 OFFCURVE",
"-12.667 81 OFFCURVE",
"-30 81 CURVE SMOOTH",
"-51.333 81 OFFCURVE",
"-68 65.333 OFFCURVE",
"-68 44 CURVE SMOOTH",
"-68 8.198 OFFCURVE",
"-25.983 -8 OFFCURVE",
"9 -8 CURVE SMOOTH",
"81 -8 OFFCURVE",
"147.833 38.833 OFFCURVE",
"208.5 107.5 CURVE SMOOTH",
"238.833 141.833 OFFCURVE",
"267.5 180.333 OFFCURVE",
"294.5 223 CURVE SMOOTH",
"348.5 308.333 OFFCURVE",
"393.167 397.5 OFFCURVE",
"428.5 475.5 CURVE SMOOTH",
"446.167 514.5 OFFCURVE",
"461.333 547.333 OFFCURVE",
"474 574 CURVE",
"476 574 LINE",
"476 561.333 OFFCURVE",
"475.833 549.167 OFFCURVE",
"475.5 537.5 CURVE SMOOTH",
"475.167 525.833 OFFCURVE",
"475 514 OFFCURVE",
"475 502 CURVE SMOOTH",
"475 435.333 OFFCURVE",
"484.667 370.333 OFFCURVE",
"494 305 CURVE SMOOTH",
"503.333 238.333 OFFCURVE",
"513 173.667 OFFCURVE",
"513 107 CURVE SMOOTH",
"513 69.667 OFFCURVE",
"509 31.333 OFFCURVE",
"501 -8 CURVE",
"508 -8 LINE",
"582.667 162.667 OFFCURVE",
"662 327.333 OFFCURVE",
"746 458 CURVE SMOOTH",
"799.068 537.601 OFFCURVE",
"902.329 670 OFFCURVE",
"991 670 CURVE SMOOTH",
"1020.333 670 OFFCURVE",
"1040 651.667 OFFCURVE",
"1040 625 CURVE SMOOTH",
"1040 598.333 OFFCURVE",
"1029.333 563.667 OFFCURVE",
"1004 549 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
45 9 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
68 7 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 7 3 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 3 90 3 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 3 169 3 185 3 201 3 217 3 233 3 249 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 3 25 3 41 3 57 3 73 3 89 3 105 3 121 3 137 3 153 3 169 3 185 3 201 3 217 3 233 3 249 3 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 3 25 3 41 3 57 3 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 68 166 68 182 68 198 68 214 68 230 68 246 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 68 22 68 38 68 54 68 70 68 86 68 102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 68 22 68 38 68 54 68 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 68 85 68 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
17 23 68 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 17 90 17 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 17 169 17 185 17 201 17 217 17 233 17 249 17 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 17 25 17 41 17 57 17 73 17 89 17 105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 17 25 17 41 17 57 17 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
27 39 90 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 45 166 45 182 45 198 45 214 45 230 45 246 45 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 45 22 45 38 45 54 45 70 45 86 45 102 45 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 45 133 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
73 7 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
63 17 73 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
77 17 73 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
87 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 14 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 42 167 42 183 42 199 42 215 42 231 42 247 42 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 42 23 42 39 42 55 42 71 42 87 42 103 42 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 42 134 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
77 14 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 722;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"698 583 LINE",
"698 637.105 OFFCURVE",
"678.66 679 OFFCURVE",
"616 679 CURVE SMOOTH",
"602 679 LINE",
"600 681 LINE",
"614.667 691.667 OFFCURVE",
"640 700 OFFCURVE",
"664 700 CURVE SMOOTH",
"727.181 700 OFFCURVE",
"736 638.774 OFFCURVE",
"736 581 CURVE SMOOTH",
"736 459.667 OFFCURVE",
"695 337.667 OFFCURVE",
"631 235 CURVE",
"548.333 286.333 OFFCURVE",
"507 363.667 OFFCURVE",
"507 467 CURVE SMOOTH",
"507 541.78 OFFCURVE",
"545.287 622.45 OFFCURVE",
"585 665 CURVE",
"589 666.333 OFFCURVE",
"593 667 OFFCURVE",
"597 667 CURVE SMOOTH",
"601.667 667 OFFCURVE",
"605.667 667 OFFCURVE",
"609 667 CURVE SMOOTH",
"669.283 667 OFFCURVE",
"686 633.276 OFFCURVE",
"686 583 CURVE"
);
},
{
closed = 1;
nodes = (
"232 254 OFFCURVE",
"273.5 370 OFFCURVE",
"335.5 466 CURVE SMOOTH",
"397.5 562 OFFCURVE",
"480 636.667 OFFCURVE",
"564 662 CURVE",
"566 660 LINE",
"514.555 603.656 OFFCURVE",
"491 518.548 OFFCURVE",
"491 459 CURVE SMOOTH",
"491 360.333 OFFCURVE",
"537 277 OFFCURVE",
"625 225 CURVE",
"574.226 136.813 OFFCURVE",
"437.638 8 OFFCURVE",
"340 8 CURVE SMOOTH",
"269.589 8 OFFCURVE",
"232 78.801 OFFCURVE",
"232 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"897 270 LINE",
"854.333 231.333 OFFCURVE",
"800.333 205 OFFCURVE",
"747 205 CURVE SMOOTH",
"709.667 205 OFFCURVE",
"680.667 211 OFFCURVE",
"654 223 CURVE",
"713.689 306.045 OFFCURVE",
"784 453.621 OFFCURVE",
"784 558 CURVE SMOOTH",
"784 659.333 OFFCURVE",
"748.333 712 OFFCURVE",
"667 712 CURVE SMOOTH",
"632.333 712 OFFCURVE",
"601 695.667 OFFCURVE",
"581 677 CURVE",
"533 669 OFFCURVE",
"471.333 636.333 OFFCURVE",
"410 587 CURVE SMOOTH",
"379.333 562.333 OFFCURVE",
"349.5 534 OFFCURVE",
"320.5 502 CURVE SMOOTH",
"262.5 438 OFFCURVE",
"215.833 363.167 OFFCURVE",
"188.5 282.5 CURVE SMOOTH",
"174.833 242.167 OFFCURVE",
"168 201.333 OFFCURVE",
"168 160 CURVE SMOOTH",
"168 57.333 OFFCURVE",
"220.667 -8 OFFCURVE",
"326 -8 CURVE SMOOTH",
"443.713 -8 OFFCURVE",
"582.705 117.778 OFFCURVE",
"648 213 CURVE",
"674.667 202.333 OFFCURVE",
"703.333 193 OFFCURVE",
"746 193 CURVE SMOOTH",
"796.108 193 OFFCURVE",
"864.635 222.078 OFFCURVE",
"903 263 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
35 9 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
34 48 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 7 19 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 19 90 19 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 19 169 19 185 19 201 19 217 19 233 19 249 19 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 19 25 19 41 19 57 19 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
28 48 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 35 166 35 182 35 198 35 214 35 230 35 246 35 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 35 133 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
54 48 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
72 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
85 3 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 5 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"977 727 LINE",
"939.667 717.667 OFFCURVE",
"904.333 705.667 OFFCURVE",
"871 691 CURVE",
"840.333 704.333 OFFCURVE",
"806.667 712 OFFCURVE",
"756 712 CURVE SMOOTH",
"657.333 712 OFFCURVE",
"560 687.833 OFFCURVE",
"476 648.5 CURVE SMOOTH",
"434 628.833 OFFCURVE",
"395.333 605.833 OFFCURVE",
"360 579.5 CURVE SMOOTH",
"289.333 526.833 OFFCURVE",
"238.167 465.833 OFFCURVE",
"209.5 402.5 CURVE SMOOTH",
"195.167 370.833 OFFCURVE",
"188 339.667 OFFCURVE",
"188 309 CURVE SMOOTH",
"188 240.397 OFFCURVE",
"236.13 184 OFFCURVE",
"305 184 CURVE SMOOTH",
"414.55 184 OFFCURVE",
"502 302.068 OFFCURVE",
"502 406 CURVE SMOOTH",
"502 444 LINE",
"490 444 LINE",
"490 406 LINE SMOOTH",
"490 309.32 OFFCURVE",
"408.325 196 OFFCURVE",
"309 196 CURVE SMOOTH",
"250.333 196 OFFCURVE",
"220 232 OFFCURVE",
"220 296 CURVE SMOOTH",
"220 376 OFFCURVE",
"254.333 448.167 OFFCURVE",
"309 507.5 CURVE SMOOTH",
"336.333 537.167 OFFCURVE",
"367.833 564 OFFCURVE",
"403.5 588 CURVE SMOOTH",
"474.833 636 OFFCURVE",
"554.833 668.5 OFFCURVE",
"635.5 686.5 CURVE SMOOTH",
"675.833 695.5 OFFCURVE",
"714 700 OFFCURVE",
"750 700 CURVE SMOOTH",
"782 700 OFFCURVE",
"827 696.333 OFFCURVE",
"855 683 CURVE",
"773.667 647 OFFCURVE",
"700.833 565.833 OFFCURVE",
"633.5 470.5 CURVE SMOOTH",
"599.833 422.833 OFFCURVE",
"567.167 373.5 OFFCURVE",
"535.5 322.5 CURVE SMOOTH",
"472.167 220.5 OFFCURVE",
"411.667 130.333 OFFCURVE",
"353 69 CURVE SMOOTH",
"323.667 38.333 OFFCURVE",
"294.333 19.667 OFFCURVE",
"265 13 CURVE",
"185.383 28.923 OFFCURVE",
"112.434 42 OFFCURVE",
"52 42 CURVE SMOOTH",
"32 42 OFFCURVE",
"18 39.333 OFFCURVE",
"10 34 CURVE SMOOTH",
"2 28.667 OFFCURVE",
"-2 21.667 OFFCURVE",
"-2 13 CURVE SMOOTH",
"-2 4.333 OFFCURVE",
"5 -2.667 OFFCURVE",
"19 -8 CURVE SMOOTH",
"33 -13.333 OFFCURVE",
"56.667 -16 OFFCURVE",
"90 -16 CURVE SMOOTH",
"142 -16 OFFCURVE",
"183 -12.667 OFFCURVE",
"213 -6 CURVE SMOOTH",
"243 0.667 OFFCURVE",
"261 4 OFFCURVE",
"267 4 CURVE",
"317.667 -6.667 OFFCURVE",
"386.667 -16 OFFCURVE",
"440 -16 CURVE SMOOTH",
"552 -16 OFFCURVE",
"636.667 5.833 OFFCURVE",
"710 50.5 CURVE SMOOTH",
"783.333 95.167 OFFCURVE",
"843 162.333 OFFCURVE",
"903 253 CURVE",
"895 257 LINE",
"789.667 94.333 OFFCURVE",
"647.667 -4 OFFCURVE",
"449 -4 CURVE SMOOTH",
"389 -4 OFFCURVE",
"341.667 -1.333 OFFCURVE",
"283 8 CURVE",
"283 10 LINE",
"383 44.667 OFFCURVE",
"458.167 116.833 OFFCURVE",
"521.5 201.5 CURVE SMOOTH",
"553.167 243.833 OFFCURVE",
"582.667 288.5 OFFCURVE",
"610 335.5 CURVE SMOOTH",
"664.667 429.5 OFFCURVE",
"717.667 519 OFFCURVE",
"775 591 CURVE SMOOTH",
"803.667 627 OFFCURVE",
"835.333 655 OFFCURVE",
"870 675 CURVE",
"899.333 655 OFFCURVE",
"913 626 OFFCURVE",
"913 578 CURVE SMOOTH",
"913 480.439 OFFCURVE",
"846.264 362 OFFCURVE",
"774 362 CURVE SMOOTH",
"752.667 362 OFFCURVE",
"738 372.333 OFFCURVE",
"738 395 CURVE SMOOTH",
"738 405.667 OFFCURVE",
"743.333 413 OFFCURVE",
"750 421 CURVE",
"746 430.333 OFFCURVE",
"733.333 437 OFFCURVE",
"724 437 CURVE SMOOTH",
"704 437 OFFCURVE",
"690 420.667 OFFCURVE",
"690 402 CURVE SMOOTH",
"690 371.333 OFFCURVE",
"715.333 350 OFFCURVE",
"762 350 CURVE SMOOTH",
"853.796 350 OFFCURVE",
"967 441.214 OFFCURVE",
"967 539 CURVE SMOOTH",
"967 603 OFFCURVE",
"943.667 650.667 OFFCURVE",
"885 684 CURVE",
"911.667 700 OFFCURVE",
"948.333 712.333 OFFCURVE",
"979 723 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 4 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 7 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 5 109 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 109 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 14 90 14 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 14 169 14 185 14 201 14 217 14 233 14 249 14 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 14 25 14 41 14 57 14 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 31 138 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 31 169 31 185 31 201 31 217 31 233 31 249 31 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 105 31 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
42 109 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
78 109 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 88 166 88 182 88 198 88 214 88 230 88 246 88 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 88 22 88 38 88 54 88 70 88 86 88 102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 88 22 88 38 88 54 88 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 88 85 88 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
121 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
45 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 1 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 54 121 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
66 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 66 167 66 183 66 199 66 215 66 231 66 247 66 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 66 23 66 39 66 55 66 71 66 87 66 103 66 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 66 134 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
42 60 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
78 54 121 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 91 167 91 183 91 199 91 215 91 231 91 247 91 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 91 23 91 39 91 55 91 71 91 87 91 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 91 118 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"608 415 LINE",
"558.085 367.858 OFFCURVE",
"519.788 338 OFFCURVE",
"442 338 CURVE SMOOTH",
"371.333 338 OFFCURVE",
"335 379 OFFCURVE",
"335 447 CURVE SMOOTH",
"335 580.111 OFFCURVE",
"471.83 700 OFFCURVE",
"602 700 CURVE SMOOTH",
"680.876 700 OFFCURVE",
"729 643.597 OFFCURVE",
"729 567 CURVE SMOOTH",
"729 488.333 OFFCURVE",
"694.667 413.5 OFFCURVE",
"644 347.5 CURVE SMOOTH",
"618.667 314.5 OFFCURVE",
"590 283.667 OFFCURVE",
"558 255 CURVE SMOOTH",
"494 197.667 OFFCURVE",
"425 149.167 OFFCURVE",
"361 112.5 CURVE SMOOTH",
"329 94.167 OFFCURVE",
"300.667 78.667 OFFCURVE",
"276 66 CURVE",
"228 76.667 OFFCURVE",
"166.667 85 OFFCURVE",
"116 85 CURVE SMOOTH",
"72.667 85 OFFCURVE",
"37.5 80.667 OFFCURVE",
"10.5 72 CURVE SMOOTH",
"-16.5 63.333 OFFCURVE",
"-30 48.667 OFFCURVE",
"-30 28 CURVE SMOOTH",
"-30 4 OFFCURVE",
"4 -8 OFFCURVE",
"48 -8 CURVE SMOOTH",
"108 -8 OFFCURVE",
"165.667 3.667 OFFCURVE",
"231 33 CURVE",
"274.453 11.273 OFFCURVE",
"361.536 -26 OFFCURVE",
"432 -26 CURVE SMOOTH",
"522.667 -26 OFFCURVE",
"603.5 13.833 OFFCURVE",
"673.5 70.5 CURVE SMOOTH",
"743.5 127.167 OFFCURVE",
"802.333 200.667 OFFCURVE",
"849 266 CURVE",
"843 270 LINE",
"758.388 163.452 OFFCURVE",
"659.397 26 OFFCURVE",
"494 26 CURVE SMOOTH",
"415.333 26 OFFCURVE",
"349 42.333 OFFCURVE",
"289 61 CURVE",
"346.333 86.333 OFFCURVE",
"422.333 128.167 OFFCURVE",
"497 179.5 CURVE SMOOTH",
"534.333 205.167 OFFCURVE",
"570.667 233 OFFCURVE",
"606 263 CURVE SMOOTH",
"676.667 323 OFFCURVE",
"733.5 389.833 OFFCURVE",
"767.5 458.5 CURVE SMOOTH",
"784.5 492.833 OFFCURVE",
"793 527 OFFCURVE",
"793 561 CURVE SMOOTH",
"793 665.517 OFFCURVE",
"724.585 712 OFFCURVE",
"622 712 CURVE SMOOTH",
"461.696 712 OFFCURVE",
"303 586.419 OFFCURVE",
"303 458 CURVE SMOOTH",
"303 379.333 OFFCURVE",
"359.333 326 OFFCURVE",
"442 326 CURVE SMOOTH",
"512.667 326 OFFCURVE",
"566 356 OFFCURVE",
"614 408 CURVE"
);
},
{
closed = 1;
nodes = (
"6 61.206 OFFCURVE",
"48.335 69 OFFCURVE",
"75 69 CURVE SMOOTH",
"124.333 69 OFFCURVE",
"175.333 57.667 OFFCURVE",
"218 39 CURVE",
"192.188 27.528 OFFCURVE",
"115.719 4 OFFCURVE",
"73 4 CURVE SMOOTH",
"28.333 4 OFFCURVE",
"6 13.667 OFFCURVE",
"6 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
80 5 48 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
71 5 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 9 61 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 48 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 61 138 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 61 169 61 185 61 201 61 217 61 233 61 249 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 61 25 61 41 61 57 61 73 61 89 61 105 61 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 71 166 71 182 71 198 71 214 71 230 71 246 71 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 71 22 71 38 71 54 71 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 71 85 71 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 80 166 80 182 80 198 80 214 80 230 80 246 80 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 80 22 80 38 80 54 80 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 80 85 80 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
87 48 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
45 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
26 3 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 51 167 51 183 51 199 51 215 51 231 51 247 51 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 51 23 51 39 51 55 51 71 51 87 51 103 51 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 51 134 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
23 45 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
87 45 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 722;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"464 434 LINE",
"464 333.542 OFFCURVE",
"387.536 220 OFFCURVE",
"277 220 CURVE SMOOTH",
"211.667 220 OFFCURVE",
"174 265.667 OFFCURVE",
"174 339 CURVE SMOOTH",
"174 415 OFFCURVE",
"205.667 479.5 OFFCURVE",
"255 533.5 CURVE SMOOTH",
"279.667 560.5 OFFCURVE",
"308.333 584.333 OFFCURVE",
"341 605 CURVE SMOOTH",
"406.333 646.333 OFFCURVE",
"478.5 674.333 OFFCURVE",
"552.5 689 CURVE SMOOTH",
"589.5 696.333 OFFCURVE",
"624.667 700 OFFCURVE",
"658 700 CURVE SMOOTH",
"710 700 OFFCURVE",
"768 693.667 OFFCURVE",
"812 671 CURVE",
"717.333 625.667 OFFCURVE",
"640.833 536 OFFCURVE",
"573.5 436 CURVE SMOOTH",
"539.833 386 OFFCURVE",
"508.167 335 OFFCURVE",
"478.5 283 CURVE SMOOTH",
"419.167 179 OFFCURVE",
"360.167 90.5 OFFCURVE",
"299.5 36.5 CURVE SMOOTH",
"269.167 9.5 OFFCURVE",
"236.667 -4 OFFCURVE",
"202 -4 CURVE SMOOTH",
"171.333 -4 OFFCURVE",
"144 12.667 OFFCURVE",
"140 30 CURVE",
"158.667 28.667 OFFCURVE",
"168 47 OFFCURVE",
"168 63 CURVE SMOOTH",
"168 80.333 OFFCURVE",
"155.667 94 OFFCURVE",
"137 94 CURVE SMOOTH",
"111.667 94 OFFCURVE",
"96 78 OFFCURVE",
"96 54 CURVE SMOOTH",
"96 6.61 OFFCURVE",
"146.134 -16 OFFCURVE",
"191 -16 CURVE SMOOTH",
"287 -16 OFFCURVE",
"367 45.167 OFFCURVE",
"439 132.5 CURVE SMOOTH",
"475 176.167 OFFCURVE",
"509.167 224.333 OFFCURVE",
"541.5 277 CURVE SMOOTH",
"606.167 382.333 OFFCURVE",
"667.5 486.5 OFFCURVE",
"729.5 568.5 CURVE SMOOTH",
"760.5 609.5 OFFCURVE",
"793 640 OFFCURVE",
"827 660 CURVE",
"852.333 641.333 OFFCURVE",
"865 608.333 OFFCURVE",
"865 575 CURVE SMOOTH",
"865 459.361 OFFCURVE",
"785.992 366 OFFCURVE",
"670 366 CURVE SMOOTH",
"655.333 366 OFFCURVE",
"642.667 367.333 OFFCURVE",
"628 370 CURVE",
"624 360 LINE",
"668 353.333 OFFCURVE",
"698 343.667 OFFCURVE",
"698 293 CURVE SMOOTH",
"698 224.579 OFFCURVE",
"625 113.163 OFFCURVE",
"625 52 CURVE SMOOTH",
"625 6.667 OFFCURVE",
"654.333 -16 OFFCURVE",
"701 -16 CURVE SMOOTH",
"757 -16 OFFCURVE",
"818 18.667 OFFCURVE",
"884 88 CURVE SMOOTH",
"944 149.333 OFFCURVE",
"984.333 211 OFFCURVE",
"1015 259 CURVE",
"1006 263 LINE",
"960.667 191 OFFCURVE",
"912.333 130 OFFCURVE",
"861 80 CURVE SMOOTH",
"802.333 22.667 OFFCURVE",
"748 -4 OFFCURVE",
"708 -4 CURVE SMOOTH",
"688.667 -4 OFFCURVE",
"679 6.667 OFFCURVE",
"679 28 CURVE SMOOTH",
"679 54.667 OFFCURVE",
"695 98 OFFCURVE",
"711 142 CURVE SMOOTH",
"727 187.333 OFFCURVE",
"742 232.667 OFFCURVE",
"742 262 CURVE SMOOTH",
"742 307.333 OFFCURVE",
"721.333 334.667 OFFCURVE",
"680 352 CURVE",
"680 354 LINE",
"807.029 354 OFFCURVE",
"919 412.701 OFFCURVE",
"919 550 CURVE SMOOTH",
"919 604 OFFCURVE",
"893.667 645.333 OFFCURVE",
"843 674 CURVE",
"869.667 688.667 OFFCURVE",
"902 702 OFFCURVE",
"934 706 CURVE",
"933 712 LINE",
"903.997 709.583 OFFCURVE",
"852.929 690.971 OFFCURVE",
"828 681 CURVE",
"784 703.667 OFFCURVE",
"718.333 712 OFFCURVE",
"661 712 CURVE SMOOTH",
"581 712 OFFCURVE",
"495.333 694 OFFCURVE",
"418 662 CURVE SMOOTH",
"379.333 646 OFFCURVE",
"343 626.833 OFFCURVE",
"309 604.5 CURVE SMOOTH",
"241 559.833 OFFCURVE",
"189.333 504.667 OFFCURVE",
"160 442 CURVE SMOOTH",
"145.333 410.667 OFFCURVE",
"138 378.333 OFFCURVE",
"138 345 CURVE SMOOTH",
"138 261 OFFCURVE",
"192 208 OFFCURVE",
"276 208 CURVE SMOOTH",
"390.373 208 OFFCURVE",
"476 320.176 OFFCURVE",
"476 434 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
121 9 92 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 4 60 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 6 65 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 4 77 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 121 166 121 182 121 198 121 214 121 230 121 246 121 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 121 22 121 38 121 54 121 70 121 86 121 102 121 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 121 133 121 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
27 92 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
35 92 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 60 138 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 60 169 60 185 60 201 60 217 60 233 60 249 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 60 25 60 41 60 57 60 73 60 89 60 105 60 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 65 90 65 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 65 169 65 185 65 201 65 217 65 233 65 249 65 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 65 25 65 41 65 57 65 73 65 89 65 105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 65 25 65 41 65 57 65 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 77 138 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 77 169 77 185 77 201 77 217 77 233 77 249 77 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
101 92 121 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
111 92 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
131 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
104 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
87 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
27 57 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
35 57 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
95 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 95 167 95 183 95 199 95 215 95 231 95 247 95 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 95 23 95 39 95 55 95 71 95 87 95 103 95 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 95 134 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
101 87 95 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
111 57 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
124 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 124 167 124 183 124 199 124 215 124 231 124 247 124 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 124 23 124 39 124 55 124 71 124 87 124 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 124 118 124 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 889;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-2.667 257 OFFCURVE",
"-26 222.667 OFFCURVE",
"-26 176 CURVE SMOOTH",
"-26 63.544 OFFCURVE",
"57.243 -16 OFFCURVE",
"177 -16 CURVE SMOOTH",
"251.667 -16 OFFCURVE",
"324.667 2.667 OFFCURVE",
"382 56 CURVE SMOOTH",
"439.333 109.333 OFFCURVE",
"481.667 196.667 OFFCURVE",
"491 334 CURVE SMOOTH",
"495 390 OFFCURVE",
"498.667 448.5 OFFCURVE",
"508 502.5 CURVE SMOOTH",
"512.667 529.5 OFFCURVE",
"518.833 555 OFFCURVE",
"526.5 579 CURVE SMOOTH",
"549.397 650.679 OFFCURVE",
"594.255 700 OFFCURVE",
"670 700 CURVE SMOOTH",
"708.667 700 OFFCURVE",
"741 677 OFFCURVE",
"741 629 CURVE SMOOTH",
"741 597 OFFCURVE",
"733.667 578.667 OFFCURVE",
"719 556 CURVE",
"760.333 556 OFFCURVE",
"795 577.333 OFFCURVE",
"795 620 CURVE SMOOTH",
"795 674.667 OFFCURVE",
"746.667 712 OFFCURVE",
"676 712 CURVE SMOOTH",
"597.333 712 OFFCURVE",
"536.167 674.5 OFFCURVE",
"495.5 608.5 CURVE SMOOTH",
"454.833 542.5 OFFCURVE",
"432.333 446.667 OFFCURVE",
"431 328 CURVE SMOOTH",
"428.08 167.401 OFFCURVE",
"358.724 -4 OFFCURVE",
"184 -4 CURVE SMOOTH",
"83.208 -4 OFFCURVE",
"6 53.661 OFFCURVE",
"6 128 CURVE SMOOTH",
"6 153.333 OFFCURVE",
"9.333 177 OFFCURVE",
"24 193 CURVE",
"28 186.333 OFFCURVE",
"38.333 183 OFFCURVE",
"45 183 CURVE SMOOTH",
"65 183 OFFCURVE",
"78 199 OFFCURVE",
"78 219 CURVE SMOOTH",
"78 241.667 OFFCURVE",
"62.667 257 OFFCURVE",
"32 257 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 5 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 8 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 4 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 12 166 12 182 12 198 12 214 12 230 12 246 12 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 12 22 12 38 12 54 12 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 12 85 12 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 22 138 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 22 169 22 185 22 201 22 217 22 233 22 249 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 22 25 22 41 22 57 22 73 22 89 22 105 22 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
33 56 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 36 138 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 36 169 36 185 36 201 36 217 36 233 36 249 36 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 36 25 36 41 36 57 36 73 36 89 36 105 36 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
33 51 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 556;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"639 494 LINE",
"639.667 487.333 OFFCURVE",
"640 480.667 OFFCURVE",
"640 474 CURVE SMOOTH",
"640 468 OFFCURVE",
"640 461.667 OFFCURVE",
"640 455 CURVE SMOOTH",
"640 355.52 OFFCURVE",
"534.179 272 OFFCURVE",
"405 272 CURVE SMOOTH",
"306.333 272 OFFCURVE",
"250 313 OFFCURVE",
"250 393 CURVE SMOOTH",
"250 461 OFFCURVE",
"296.667 521.167 OFFCURVE",
"386 564.5 CURVE SMOOTH",
"475.333 607.833 OFFCURVE",
"606 634 OFFCURVE",
"774 634 CURVE SMOOTH",
"804 634 OFFCURVE",
"836.667 632.667 OFFCURVE",
"872 630 CURVE SMOOTH",
"907.333 627.333 OFFCURVE",
"940 626 OFFCURVE",
"970 626 CURVE",
"970 624 LINE",
"896.667 610.667 OFFCURVE",
"837.333 564.333 OFFCURVE",
"784 503 CURVE SMOOTH",
"730.667 441.667 OFFCURVE",
"683.833 364.833 OFFCURVE",
"636.5 289.5 CURVE SMOOTH",
"589.167 214.167 OFFCURVE",
"542.5 141.667 OFFCURVE",
"488.5 87 CURVE SMOOTH",
"434.5 32.333 OFFCURVE",
"372.667 -4 OFFCURVE",
"298 -4 CURVE SMOOTH",
"219.333 -4 OFFCURVE",
"160.667 30 OFFCURVE",
"154 94 CURVE",
"157.333 92.667 OFFCURVE",
"161.333 92 OFFCURVE",
"166 92 CURVE SMOOTH",
"183.333 92 OFFCURVE",
"199 105 OFFCURVE",
"199 125 CURVE SMOOTH",
"199 146.333 OFFCURVE",
"183.333 162 OFFCURVE",
"162 162 CURVE SMOOTH",
"131.333 162 OFFCURVE",
"114 138.333 OFFCURVE",
"114 109 CURVE SMOOTH",
"114 19.593 OFFCURVE",
"205.239 -16 OFFCURVE",
"288 -16 CURVE SMOOTH",
"386.667 -16 OFFCURVE",
"464.667 23.333 OFFCURVE",
"526 74 CURVE SMOOTH",
"587.333 124.667 OFFCURVE",
"631.667 186.667 OFFCURVE",
"661 232 CURVE SMOOTH",
"724.785 330.668 OFFCURVE",
"806.995 475.044 OFFCURVE",
"851 529.5 CURVE SMOOTH",
"904.333 595.5 OFFCURVE",
"960.667 628 OFFCURVE",
"1054 628 CURVE SMOOTH",
"1132.829 628 OFFCURVE",
"1176 624.488 OFFCURVE",
"1176 653 CURVE SMOOTH",
"1176 671.667 OFFCURVE",
"1160 682 OFFCURVE",
"1144 682 CURVE SMOOTH",
"1134.667 682 OFFCURVE",
"1123.5 681 OFFCURVE",
"1110.5 679 CURVE SMOOTH",
"1097.5 677 OFFCURVE",
"1081.333 676 OFFCURVE",
"1062 676 CURVE SMOOTH",
"1040 676 OFFCURVE",
"1013.667 677 OFFCURVE",
"983 679 CURVE SMOOTH",
"952.333 681 OFFCURVE",
"918.333 682 OFFCURVE",
"881 682 CURVE SMOOTH",
"638.333 682 OFFCURVE",
"478 641 OFFCURVE",
"378 585 CURVE SMOOTH",
"278 529 OFFCURVE",
"238 457 OFFCURVE",
"238 393 CURVE SMOOTH",
"238 314.333 OFFCURVE",
"291.667 260 OFFCURVE",
"401 260 CURVE SMOOTH",
"539.451 260 OFFCURVE",
"652 346.689 OFFCURVE",
"652 457 CURVE SMOOTH",
"652 463 OFFCURVE",
"652 469 OFFCURVE",
"652 475 CURVE SMOOTH",
"652 481 OFFCURVE",
"651.667 487.333 OFFCURVE",
"651 494 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
52 9 46 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 52 166 52 182 52 198 52 214 52 230 52 246 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 52 22 52 38 52 54 52 70 52 86 52 102 52 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 52 133 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
57 46 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 3 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 49 167 49 183 49 199 49 215 49 231 49 247 49 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 49 23 49 39 49 55 49 71 49 87 49 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 49 118 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
57 41 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"909 696 LINE",
"838.333 584 OFFCURVE",
"778.333 488.833 OFFCURVE",
"729 410.5 CURVE SMOOTH",
"679.667 332.167 OFFCURVE",
"639 271.333 OFFCURVE",
"607 228 CURVE SMOOTH",
"556.151 157.377 OFFCURVE",
"402.39 8 OFFCURVE",
"310 8 CURVE SMOOTH",
"291.333 8 OFFCURVE",
"272 20 OFFCURVE",
"272 52 CURVE SMOOTH",
"272 93.333 OFFCURVE",
"307.333 156.167 OFFCURVE",
"354 227.5 CURVE SMOOTH",
"377.333 263.167 OFFCURVE",
"402.667 300.167 OFFCURVE",
"430 338.5 CURVE SMOOTH",
"484.667 415.167 OFFCURVE",
"533.167 489.167 OFFCURVE",
"564.5 552.5 CURVE SMOOTH",
"580.167 584.167 OFFCURVE",
"588 611 OFFCURVE",
"588 633 CURVE SMOOTH",
"588 685 OFFCURVE",
"549 712 OFFCURVE",
"493 712 CURVE SMOOTH",
"340.566 712 OFFCURVE",
"181 565.804 OFFCURVE",
"181 439 CURVE SMOOTH",
"181 383 OFFCURVE",
"213 354 OFFCURVE",
"265 354 CURVE SMOOTH",
"316.193 354 OFFCURVE",
"367.709 396.849 OFFCURVE",
"393 439 CURVE",
"382 441 LINE",
"359.995 405.242 OFFCURVE",
"316.088 366 OFFCURVE",
"266 366 CURVE SMOOTH",
"212.667 366 OFFCURVE",
"193 397.333 OFFCURVE",
"193 440 CURVE SMOOTH",
"193 562.941 OFFCURVE",
"350.643 700 OFFCURVE",
"482 700 CURVE SMOOTH",
"512.667 700 OFFCURVE",
"540 689.333 OFFCURVE",
"540 656 CURVE SMOOTH",
"540 612 OFFCURVE",
"503.833 547.333 OFFCURVE",
"456.5 474 CURVE SMOOTH",
"432.833 437.333 OFFCURVE",
"407 399.5 OFFCURVE",
"379 360.5 CURVE SMOOTH",
"323 282.5 OFFCURVE",
"274 208 OFFCURVE",
"242 144 CURVE SMOOTH",
"226 112 OFFCURVE",
"218 84.667 OFFCURVE",
"218 62 CURVE SMOOTH",
"218 16.667 OFFCURVE",
"247.333 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"389.734 -8 OFFCURVE",
"507.663 99.218 OFFCURVE",
"573 170 CURVE",
"575 168 LINE",
"560.333 145.333 OFFCURVE",
"543 108.333 OFFCURVE",
"543 79 CURVE SMOOTH",
"543 27 OFFCURVE",
"567 -8 OFFCURVE",
"623 -8 CURVE SMOOTH",
"680.333 -8 OFFCURVE",
"738.667 26.167 OFFCURVE",
"796 77.5 CURVE SMOOTH",
"853.333 128.833 OFFCURVE",
"909 196.333 OFFCURVE",
"961 263 CURVE",
"953 266 LINE",
"870.997 164.117 OFFCURVE",
"734.504 4 OFFCURVE",
"636 4 CURVE SMOOTH",
"604 4 OFFCURVE",
"591 23.667 OFFCURVE",
"591 53 CURVE SMOOTH",
"591 97 OFFCURVE",
"630.833 167.833 OFFCURVE",
"699.5 272.5 CURVE SMOOTH",
"733.833 324.833 OFFCURVE",
"774.5 386 OFFCURVE",
"821.5 456 CURVE SMOOTH",
"868.5 526 OFFCURVE",
"920 606 OFFCURVE",
"976 696 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
81 9 66 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 7 41 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 74 166 74 182 74 198 74 214 74 230 74 246 74 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 74 22 74 38 74 54 74 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 74 85 74 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
26 41 74 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 81 166 81 182 81 198 81 214 81 230 81 246 81 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 81 22 81 38 81 54 81 70 81 86 81 102 81 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 81 133 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
58 66 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 19 71 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 19 71 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 19 71 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
58 19 71 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 833;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"699 712 LINE",
"631.522 652.619 OFFCURVE",
"533.202 646.062 OFFCURVE",
"442 618 CURVE SMOOTH",
"341.457 590.579 OFFCURVE",
"206 543.198 OFFCURVE",
"206 424 CURVE SMOOTH",
"206 366.667 OFFCURVE",
"249 332 OFFCURVE",
"305 332 CURVE SMOOTH",
"365.589 332 OFFCURVE",
"416 382.764 OFFCURVE",
"416 439 CURVE SMOOTH",
"416 453.667 OFFCURVE",
"414.333 465.333 OFFCURVE",
"413 476 CURVE",
"402 476 LINE",
"403.333 470 OFFCURVE",
"404 464.333 OFFCURVE",
"404 459 CURVE SMOOTH",
"404 453.667 OFFCURVE",
"404 447.667 OFFCURVE",
"404 441 CURVE SMOOTH",
"404 386.954 OFFCURVE",
"359.184 344 OFFCURVE",
"308 344 CURVE SMOOTH",
"268 344 OFFCURVE",
"234 370.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"234 524.83 OFFCURVE",
"360.94 582.347 OFFCURVE",
"455 608 CURVE SMOOTH",
"489 617.333 OFFCURVE",
"522.333 625.833 OFFCURVE",
"555 633.5 CURVE SMOOTH",
"587.667 641.167 OFFCURVE",
"618 652.333 OFFCURVE",
"646 667 CURVE",
"648 665 LINE",
"572 615.667 OFFCURVE",
"520.667 547.167 OFFCURVE",
"482 470.5 CURVE SMOOTH",
"462.667 432.167 OFFCURVE",
"445.5 392.333 OFFCURVE",
"430.5 351 CURVE SMOOTH",
"406.106 283.78 OFFCURVE",
"366.283 170.237 OFFCURVE",
"338.5 106.5 CURVE SMOOTH",
"321.5 67.5 OFFCURVE",
"301.333 31 OFFCURVE",
"278 -3 CURVE",
"283 -8 LINE",
"325.667 17.333 OFFCURVE",
"366.667 42 OFFCURVE",
"406 66 CURVE SMOOTH",
"445.333 90 OFFCURVE",
"484.667 114 OFFCURVE",
"524 138 CURVE SMOOTH",
"590.667 179.333 OFFCURVE",
"662.833 231 OFFCURVE",
"727.5 287 CURVE SMOOTH",
"759.833 315 OFFCURVE",
"790.333 344 OFFCURVE",
"819 374 CURVE SMOOTH",
"876.333 434 OFFCURVE",
"920.833 493.5 OFFCURVE",
"945.5 551.5 CURVE SMOOTH",
"957.833 580.5 OFFCURVE",
"964 608 OFFCURVE",
"964 634 CURVE SMOOTH",
"964 672.667 OFFCURVE",
"953.667 698 OFFCURVE",
"919 698 CURVE SMOOTH",
"896.333 698 OFFCURVE",
"880 681.667 OFFCURVE",
"880 659 CURVE SMOOTH",
"880 641.667 OFFCURVE",
"884.667 629.333 OFFCURVE",
"902 624 CURVE",
"902 593.333 OFFCURVE",
"894.333 529.5 OFFCURVE",
"845 447.5 CURVE SMOOTH",
"795.667 365.5 OFFCURVE",
"704 265 OFFCURVE",
"536 157 CURVE SMOOTH",
"472 115.667 OFFCURVE",
"402.667 72.667 OFFCURVE",
"324 26 CURVE",
"322 28 LINE",
"383.333 93.333 OFFCURVE",
"421.833 171.667 OFFCURVE",
"454.5 253 CURVE SMOOTH",
"470.833 293.667 OFFCURVE",
"486.333 335 OFFCURVE",
"501 377 CURVE SMOOTH",
"530.333 461 OFFCURVE",
"565.667 540.167 OFFCURVE",
"615 611.5 CURVE SMOOTH",
"639.667 647.167 OFFCURVE",
"670 679 OFFCURVE",
"706 707 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
52 5 76 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 9 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 76 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 76 68 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
122 19 138 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 19 169 19 185 19 201 19 217 19 233 19 249 19 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 19 25 19 41 19 57 19 73 19 89 19 105 19 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
44 76 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 52 166 52 182 52 198 52 214 52 230 52 246 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 52 22 52 38 52 54 52 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 52 85 52 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 35 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 35 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
44 35 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 722;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"671 704 LINE",
"667.532 699.375 OFFCURVE",
"650.192 690.702 OFFCURVE",
"632 684 CURVE SMOOTH",
"606.667 674.667 OFFCURVE",
"565.667 662 OFFCURVE",
"495 642 CURVE SMOOTH",
"409.667 618 OFFCURVE",
"331 592.333 OFFCURVE",
"275 559 CURVE SMOOTH",
"219 525.667 OFFCURVE",
"184 484 OFFCURVE",
"184 424 CURVE SMOOTH",
"184 364 OFFCURVE",
"225 331 OFFCURVE",
"281 331 CURVE SMOOTH",
"347.23 331 OFFCURVE",
"398 379.807 OFFCURVE",
"398 448 CURVE SMOOTH",
"398 456 OFFCURVE",
"397.333 464 OFFCURVE",
"396 472 CURVE",
"384 472 LINE",
"385.333 464 OFFCURVE",
"386 456 OFFCURVE",
"386 448 CURVE SMOOTH",
"386 393.88 OFFCURVE",
"344.33 343 OFFCURVE",
"284 343 CURVE SMOOTH",
"241.333 343 OFFCURVE",
"212 370.667 OFFCURVE",
"212 420 CURVE SMOOTH",
"212 473.333 OFFCURVE",
"243.167 513.167 OFFCURVE",
"290.5 544.5 CURVE SMOOTH",
"314.167 560.167 OFFCURVE",
"341 574 OFFCURVE",
"371 586 CURVE SMOOTH",
"431 610 OFFCURVE",
"494.333 630.667 OFFCURVE",
"553 648 CURVE SMOOTH",
"582.333 656.667 OFFCURVE",
"608 666 OFFCURVE",
"630 676 CURVE",
"632 674 LINE",
"554.667 622 OFFCURVE",
"504.167 557.333 OFFCURVE",
"467.5 488 CURVE SMOOTH",
"449.167 453.333 OFFCURVE",
"433.333 417.5 OFFCURVE",
"420 380.5 CURVE SMOOTH",
"399.007 322.244 OFFCURVE",
"365.491 218.002 OFFCURVE",
"343.5 159 CURVE SMOOTH",
"329.833 122.333 OFFCURVE",
"313.333 87.333 OFFCURVE",
"294 54 CURVE SMOOTH",
"283.355 35.372 OFFCURVE",
"241 16.384 OFFCURVE",
"241 2 CURVE SMOOTH",
"241 -4.667 OFFCURVE",
"245.667 -8 OFFCURVE",
"255 -8 CURVE SMOOTH",
"281.861 -8 OFFCURVE",
"306.093 33.287 OFFCURVE",
"339 64 CURVE SMOOTH",
"408.333 126.667 OFFCURVE",
"484.333 201.5 OFFCURVE",
"555 275.5 CURVE SMOOTH",
"625.667 349.5 OFFCURVE",
"689 421.333 OFFCURVE",
"733 476 CURVE",
"735 475 LINE",
"697.667 399 OFFCURVE",
"669.333 312.833 OFFCURVE",
"640 229.5 CURVE SMOOTH",
"610.667 146.167 OFFCURVE",
"578 66.667 OFFCURVE",
"530 0 CURVE",
"536 -8 LINE",
"568.795 24.795 OFFCURVE",
"666.39 89.26 OFFCURVE",
"729 131 CURVE SMOOTH",
"774.333 161.667 OFFCURVE",
"840.167 210 OFFCURVE",
"907.5 266 CURVE SMOOTH",
"941.167 294 OFFCURVE",
"974.5 324.167 OFFCURVE",
"1007.5 356.5 CURVE SMOOTH",
"1073.5 421.167 OFFCURVE",
"1126.833 486.667 OFFCURVE",
"1159.5 552 CURVE SMOOTH",
"1175.833 584.667 OFFCURVE",
"1184 615.667 OFFCURVE",
"1184 645 CURVE SMOOTH",
"1184 673.219 OFFCURVE",
"1171.87 704 OFFCURVE",
"1140 704 CURVE SMOOTH",
"1117.333 704 OFFCURVE",
"1100 688.333 OFFCURVE",
"1100 667 CURVE SMOOTH",
"1100 649.667 OFFCURVE",
"1107.333 633 OFFCURVE",
"1122 625 CURVE",
"1114 543.667 OFFCURVE",
"1074 467.5 OFFCURVE",
"1018 397.5 CURVE SMOOTH",
"990 362.5 OFFCURVE",
"958.5 329 OFFCURVE",
"923.5 297 CURVE SMOOTH",
"853.5 233 OFFCURVE",
"778.333 176.333 OFFCURVE",
"705 127 CURVE SMOOTH",
"668.333 102.333 OFFCURVE",
"634.667 79.667 OFFCURVE",
"604 59 CURVE",
"602 61 LINE",
"651.333 121 OFFCURVE",
"681.5 189.5 OFFCURVE",
"707.5 259.5 CURVE SMOOTH",
"720.5 294.5 OFFCURVE",
"732.667 329.5 OFFCURVE",
"744 364.5 CURVE SMOOTH",
"766.667 434.5 OFFCURVE",
"794.667 502.167 OFFCURVE",
"832 561.5 CURVE SMOOTH",
"850.667 591.167 OFFCURVE",
"874 618.333 OFFCURVE",
"902 643 CURVE SMOOTH",
"916.363 654.969 OFFCURVE",
"947 682.609 OFFCURVE",
"947 698 CURVE SMOOTH",
"947 707.333 OFFCURVE",
"940.667 712 OFFCURVE",
"934 712 CURVE SMOOTH",
"905.811 712 OFFCURVE",
"861.003 665.06 OFFCURVE",
"832 628 CURVE SMOOTH",
"805.789 594.509 OFFCURVE",
"764.805 534.707 OFFCURVE",
"753 517 CURVE SMOOTH",
"727.667 481 OFFCURVE",
"687.5 433.667 OFFCURVE",
"641.5 383 CURVE SMOOTH",
"618.5 357.667 OFFCURVE",
"594.333 331.667 OFFCURVE",
"569 305 CURVE SMOOTH",
"518.333 251.667 OFFCURVE",
"466.167 199 OFFCURVE",
"417.5 151 CURVE SMOOTH",
"393.167 127 OFFCURVE",
"370.667 105.333 OFFCURVE",
"350 86 CURVE",
"348 88 LINE",
"389.333 150.667 OFFCURVE",
"419 223.167 OFFCURVE",
"447 298.5 CURVE SMOOTH",
"461 336.167 OFFCURVE",
"475.167 373.667 OFFCURVE",
"489.5 411 CURVE SMOOTH",
"518.167 485.667 OFFCURVE",
"553 555.833 OFFCURVE",
"597 616.5 CURVE SMOOTH",
"619 646.833 OFFCURVE",
"645 673.333 OFFCURVE",
"675 696 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
107 5 130 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 9 48 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
122 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 130 122 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
38 130 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 48 138 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 48 169 48 185 48 201 48 217 48 233 48 249 48 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 48 25 48 41 48 57 48 73 48 89 48 105 48 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
75 130 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
100 130 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 107 166 107 182 107 198 107 214 107 230 107 246 107 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 214 107 230 107 246 107 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 107 22 107 38 107 54 107 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 107 85 107 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
142 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
68 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
85 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 68 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
38 68 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
75 68 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
100 68 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 944;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"518 421 LINE",
"488.863 357.428 OFFCURVE",
"424.357 290 OFFCURVE",
"358 290 CURVE SMOOTH",
"293.57 290 OFFCURVE",
"260 348.483 OFFCURVE",
"260 410 CURVE SMOOTH",
"260 564.252 OFFCURVE",
"383.859 700 OFFCURVE",
"507 700 CURVE SMOOTH",
"585.014 700 OFFCURVE",
"621 642.272 OFFCURVE",
"621 568 CURVE SMOOTH",
"621 496 OFFCURVE",
"593.167 409 OFFCURVE",
"548.5 325 CURVE SMOOTH",
"526.167 283 OFFCURVE",
"499.833 242.667 OFFCURVE",
"469.5 204 CURVE SMOOTH",
"408.833 126.667 OFFCURVE",
"339.333 65.833 OFFCURVE",
"266 30.5 CURVE SMOOTH",
"229.333 12.833 OFFCURVE",
"193 4 OFFCURVE",
"157 4 CURVE SMOOTH",
"122.333 4 OFFCURVE",
"96.667 16.333 OFFCURVE",
"94 31 CURVE",
"100.667 36.333 OFFCURVE",
"110 42.333 OFFCURVE",
"110 61 CURVE SMOOTH",
"110 83.667 OFFCURVE",
"95.667 100 OFFCURVE",
"73 100 CURVE SMOOTH",
"53 100 OFFCURVE",
"36 82.667 OFFCURVE",
"36 56 CURVE SMOOTH",
"36 16 OFFCURVE",
"87 -8 OFFCURVE",
"155 -8 CURVE SMOOTH",
"287.641 -8 OFFCURVE",
"450.507 120.612 OFFCURVE",
"518 234 CURVE",
"520 232 LINE",
"508 193.333 OFFCURVE",
"501 156 OFFCURVE",
"501 120 CURVE SMOOTH",
"501 48.565 OFFCURVE",
"535.486 -8 OFFCURVE",
"617 -8 CURVE SMOOTH",
"673 -8 OFFCURVE",
"732.5 23.5 OFFCURVE",
"790.5 73.5 CURVE SMOOTH",
"848.5 123.5 OFFCURVE",
"906.333 191 OFFCURVE",
"957 263 CURVE",
"950 266 LINE",
"884.404 174.737 OFFCURVE",
"746.358 8 OFFCURVE",
"633 8 CURVE SMOOTH",
"571.579 8 OFFCURVE",
"561 75.179 OFFCURVE",
"561 138 CURVE SMOOTH",
"561 208.667 OFFCURVE",
"588 292.667 OFFCURVE",
"632 374 CURVE SMOOTH",
"654 414.667 OFFCURVE",
"679.5 453.833 OFFCURVE",
"708.5 491.5 CURVE SMOOTH",
"766.5 566.833 OFFCURVE",
"832.167 627.333 OFFCURVE",
"899.5 662 CURVE SMOOTH",
"933.167 679.333 OFFCURVE",
"966 688 OFFCURVE",
"998 688 CURVE SMOOTH",
"1123.396 688 OFFCURVE",
"968.068 623 OFFCURVE",
"1092 623 CURVE SMOOTH",
"1110.667 623 OFFCURVE",
"1122 637.667 OFFCURVE",
"1122 655 CURVE SMOOTH",
"1122 693.667 OFFCURVE",
"1086.667 704 OFFCURVE",
"1036 704 CURVE SMOOTH",
"986.667 704 OFFCURVE",
"928 692.167 OFFCURVE",
"864 655.5 CURVE SMOOTH",
"800 618.833 OFFCURVE",
"730.667 558.333 OFFCURVE",
"664 461 CURVE",
"662 463 LINE",
"672.667 493.667 OFFCURVE",
"681 529.333 OFFCURVE",
"681 564 CURVE SMOOTH",
"681 668 OFFCURVE",
"619 712 OFFCURVE",
"527 712 CURVE SMOOTH",
"436.333 712 OFFCURVE",
"361.167 667.167 OFFCURVE",
"308.5 606.5 CURVE SMOOTH",
"255.833 545.833 OFFCURVE",
"226 468.667 OFFCURVE",
"226 406 CURVE SMOOTH",
"226 330 OFFCURVE",
"273.667 278 OFFCURVE",
"351 278 CURVE SMOOTH",
"431.572 278 OFFCURVE",
"494.074 346.917 OFFCURVE",
"527 421 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
82 9 76 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
105 5 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 8 64 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 8 95 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 43 166 43 182 43 198 43 214 43 230 43 246 43 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 43 22 43 38 43 54 43 70 43 86 43 102 43 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 43 133 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 64 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 95 138 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 95 169 95 185 95 201 95 217 95 233 95 249 95 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 95 25 95 41 95 57 95 73 95 89 95 105 95 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
20 95 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
68 64 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 82 166 82 182 82 198 82 214 82 230 82 246 82 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 82 22 82 38 82 54 82 70 82 86 82 102 82 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 82 133 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 105 166 105 182 105 198 105 214 105 230 105 246 105 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 105 22 105 38 105 54 105 70 105 86 105 102 105 118 105 134 105 150 105 166 105 182 105 198 105 214 105 230 105 246 105 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 105 22 105 38 105 54 105 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 105 85 105 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
117 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
59 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 1 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 59 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 59 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
68 59 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
79 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 79 167 79 183 79 199 79 215 79 231 79 247 79 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 79 23 79 39 79 55 79 71 79 87 79 103 79 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 79 134 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 833;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"944 696 LINE",
"683 296 LINE SMOOTH",
"631 217.333 OFFCURVE",
"563.5 144.333 OFFCURVE",
"497.5 91 CURVE SMOOTH",
"431.5 37.667 OFFCURVE",
"366.667 4 OFFCURVE",
"324 4 CURVE SMOOTH",
"306.667 4 OFFCURVE",
"287 13.333 OFFCURVE",
"287 48 CURVE SMOOTH",
"287 86.667 OFFCURVE",
"323.833 151 OFFCURVE",
"372.5 223 CURVE SMOOTH",
"396.833 259 OFFCURVE",
"423.333 296.5 OFFCURVE",
"452 335.5 CURVE SMOOTH",
"509.333 413.5 OFFCURVE",
"559.833 487.333 OFFCURVE",
"592.5 550 CURVE SMOOTH",
"608.833 581.333 OFFCURVE",
"617 607.333 OFFCURVE",
"617 628 CURVE SMOOTH",
"617 688 OFFCURVE",
"584 712 OFFCURVE",
"520 712 CURVE SMOOTH",
"385.144 712 OFFCURVE",
"199 563.073 OFFCURVE",
"199 440 CURVE SMOOTH",
"199 396 OFFCURVE",
"221 354 OFFCURVE",
"277 354 CURVE SMOOTH",
"341 354 OFFCURVE",
"388.333 394.333 OFFCURVE",
"419 441 CURVE",
"411 442 LINE",
"376.55 398.937 OFFCURVE",
"341.967 366 OFFCURVE",
"281 366 CURVE SMOOTH",
"239.667 366 OFFCURVE",
"221 396.667 OFFCURVE",
"221 438 CURVE SMOOTH",
"221 567.152 OFFCURVE",
"396.666 700 OFFCURVE",
"514 700 CURVE SMOOTH",
"546 700 OFFCURVE",
"563 681.667 OFFCURVE",
"563 655 CURVE SMOOTH",
"563 611 OFFCURVE",
"526.167 544.333 OFFCURVE",
"477.5 471 CURVE SMOOTH",
"453.167 434.333 OFFCURVE",
"426.667 396.667 OFFCURVE",
"398 358 CURVE SMOOTH",
"340.667 280.667 OFFCURVE",
"290.167 208.333 OFFCURVE",
"257.5 147 CURVE SMOOTH",
"241.167 116.333 OFFCURVE",
"233 90.667 OFFCURVE",
"233 70 CURVE SMOOTH",
"233 19.333 OFFCURVE",
"258.333 -8 OFFCURVE",
"317 -8 CURVE SMOOTH",
"418.652 -8 OFFCURVE",
"554.448 116.817 OFFCURVE",
"630 208 CURVE",
"632 206 LINE",
"600.811 164.015 OFFCURVE",
"545.886 75.328 OFFCURVE",
"507 17 CURVE SMOOTH",
"483 -19 OFFCURVE",
"457.5 -54.667 OFFCURVE",
"430.5 -90 CURVE SMOOTH",
"376.5 -160.667 OFFCURVE",
"319.333 -219.333 OFFCURVE",
"258 -254 CURVE SMOOTH",
"227.333 -271.333 OFFCURVE",
"196.333 -280 OFFCURVE",
"165 -280 CURVE SMOOTH",
"89 -280 OFFCURVE",
"37 -236.667 OFFCURVE",
"37 -166 CURVE SMOOTH",
"37 -94 OFFCURVE",
"74.333 -60 OFFCURVE",
"113 -60 CURVE SMOOTH",
"137 -60 OFFCURVE",
"161.333 -69.667 OFFCURVE",
"184 -79 CURVE",
"188 -71 LINE",
"165.333 -56.333 OFFCURVE",
"130.667 -44 OFFCURVE",
"100 -44 CURVE SMOOTH",
"37.884 -44 OFFCURVE",
"-17 -89.753 OFFCURVE",
"-17 -159 CURVE SMOOTH",
"-17 -247.923 OFFCURVE",
"62.296 -292 OFFCURVE",
"152 -292 CURVE SMOOTH",
"240 -292 OFFCURVE",
"318.333 -252.333 OFFCURVE",
"389 -191 CURVE SMOOTH",
"459.667 -129.667 OFFCURVE",
"523 -48 OFFCURVE",
"583 36 CURVE",
"1012 696 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 5 75 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 4 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
83 4 52 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 26 166 26 182 26 198 26 214 26 230 26 246 26 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 26 22 26 38 26 54 26 70 26 86 26 102 26 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 26 133 26 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 52 138 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 52 169 52 185 52 201 52 217 52 233 52 249 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 52 25 52 41 52 57 52 73 52 89 52 105 52 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
150 60 166 60 182 60 198 60 214 60 230 60 246 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 60 22 60 38 60 54 60 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 60 85 60 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
69 11 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 90 166 90 182 90 198 90 214 90 230 90 246 90 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 90 22 90 38 90 54 90 70 90 86 90 102 90 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 90 133 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
16 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 42 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
37 42 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
69 42 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 778;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"783 265 LINE",
"717.199 157.086 OFFCURVE",
"620.41 36 OFFCURVE",
"507 36 CURVE SMOOTH",
"432.588 36 OFFCURVE",
"333.797 108 OFFCURVE",
"265 108 CURVE SMOOTH",
"209 108 OFFCURVE",
"166.333 85.333 OFFCURVE",
"125 64 CURVE",
"123 66 LINE",
"180.333 107.333 OFFCURVE",
"267 177.167 OFFCURVE",
"359 256.5 CURVE SMOOTH",
"405 296.167 OFFCURVE",
"451.5 336.667 OFFCURVE",
"498.5 378 CURVE SMOOTH",
"574.187 444.562 OFFCURVE",
"685.38 543.155 OFFCURVE",
"739 590.5 CURVE SMOOTH",
"770.333 618.167 OFFCURVE",
"793 637.333 OFFCURVE",
"807 648 CURVE SMOOTH",
"830.051 664.765 OFFCURVE",
"876 690.365 OFFCURVE",
"876 702 CURVE SMOOTH",
"876 708.667 OFFCURVE",
"872 712 OFFCURVE",
"864 712 CURVE SMOOTH",
"830.85 712 OFFCURVE",
"773.066 626 OFFCURVE",
"692 626 CURVE SMOOTH",
"594.307 626 OFFCURVE",
"507.327 696 OFFCURVE",
"415 696 CURVE SMOOTH",
"311.648 696 OFFCURVE",
"219 633.999 OFFCURVE",
"219 527 CURVE SMOOTH",
"219 455 OFFCURVE",
"267.333 415 OFFCURVE",
"326 415 CURVE SMOOTH",
"351.333 415 OFFCURVE",
"375 424 OFFCURVE",
"391 432 CURVE",
"389 443 LINE",
"370.333 433.667 OFFCURVE",
"350.333 427 OFFCURVE",
"325 427 CURVE SMOOTH",
"274.333 427 OFFCURVE",
"231 463.667 OFFCURVE",
"231 529 CURVE SMOOTH",
"231 607.45 OFFCURVE",
"289.893 668 OFFCURVE",
"366 668 CURVE SMOOTH",
"442.148 668 OFFCURVE",
"526.717 588 OFFCURVE",
"625 588 CURVE SMOOTH",
"674.333 588 OFFCURVE",
"729.667 611.333 OFFCURVE",
"767 634 CURVE",
"769 632 LINE",
"691.667 566.667 OFFCURVE",
"598.333 486.167 OFFCURVE",
"505 405.5 CURVE SMOOTH",
"458.333 365.167 OFFCURVE",
"412.167 325.333 OFFCURVE",
"366.5 286 CURVE SMOOTH",
"293.746 223.336 OFFCURVE",
"187.731 131.695 OFFCURVE",
"135.5 87.5 CURVE SMOOTH",
"105.167 61.833 OFFCURVE",
"82 42.333 OFFCURVE",
"66 29 CURVE SMOOTH",
"54 18.333 OFFCURVE",
"40 7.333 OFFCURVE",
"40 -6 CURVE SMOOTH",
"40 -10 OFFCURVE",
"40 -16 OFFCURVE",
"48 -16 CURVE SMOOTH",
"68.533 -16 OFFCURVE",
"149.933 80 OFFCURVE",
"210 80 CURVE SMOOTH",
"284.878 80 OFFCURVE",
"359.613 -8 OFFCURVE",
"446 -8 CURVE SMOOTH",
"583.152 -8 OFFCURVE",
"711.768 123.79 OFFCURVE",
"790 262 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
60 2 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 3 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
29 15 70 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
48 15 70 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
85 15 70 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
93 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 93 167 93 183 93 199 93 215 93 231 93 247 93 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 93 23 93 39 93 55 93 71 93 87 93 103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
7 93 23 93 39 93 55 93 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
70 93 86 93 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 667;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-164 -289 LINE",
"49 -289 LINE",
"53 -277 LINE",
"-110 -277 LINE",
"509 687 LINE",
"668 687 LINE",
"673 699 LINE",
"469 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
4 6 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 6 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"23 563 LINE",
"3 564 LINE",
"279 5 LINE",
"299 5 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 311;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"373 699 LINE",
"368 687 LINE",
"531 687 LINE",
"-90 -277 LINE",
"-249 -277 LINE",
"-253 -289 LINE",
"-48 -289 LINE",
"585 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"248 166 LINE",
"402 472 LINE",
"557 166 LINE",
"596 166 LINE",
"412 530 LINE",
"392 530 LINE",
"208 166 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"500 -125 LINE",
"500 -75 LINE",
"0 -75 LINE",
"0 -125 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
1 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"81.333 572 OFFCURVE",
"74 555.667 OFFCURVE",
"74 545 CURVE SMOOTH",
"74 508.251 OFFCURVE",
"175.251 406 OFFCURVE",
"206 406 CURVE SMOOTH",
"209.333 406 OFFCURVE",
"211 407.333 OFFCURVE",
"211 410 CURVE SMOOTH",
"211 422.629 OFFCURVE",
"137.265 480.612 OFFCURVE",
"134 510 CURVE SMOOTH",
"131.333 544.667 OFFCURVE",
"118.667 572 OFFCURVE",
"96 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"354 285 LINE",
"352 285 LINE",
"343.034 323.855 OFFCURVE",
"319.528 352 OFFCURVE",
"268 352 CURVE SMOOTH",
"157.097 352 OFFCURVE",
"0 177.21 OFFCURVE",
"0 67 CURVE SMOOTH",
"0 28.333 OFFCURVE",
"17.667 -8 OFFCURVE",
"67 -8 CURVE SMOOTH",
"124.767 -8 OFFCURVE",
"196.991 57.144 OFFCURVE",
"234 97 CURVE",
"236 96 LINE",
"229.333 77.333 OFFCURVE",
"222 59.667 OFFCURVE",
"222 41 CURVE SMOOTH",
"222 14.333 OFFCURVE",
"239.333 -8 OFFCURVE",
"278 -8 CURVE SMOOTH",
"370.653 -8 OFFCURVE",
"506.177 163.528 OFFCURVE",
"573 265 CURVE",
"567 267 LINE",
"519 195 OFFCURVE",
"463.667 129 OFFCURVE",
"413 81 CURVE SMOOTH",
"362.333 33 OFFCURVE",
"317 4 OFFCURVE",
"289 4 CURVE SMOOTH",
"271 4 OFFCURVE",
"262 12.667 OFFCURVE",
"262 30 CURVE SMOOTH",
"262 79.541 OFFCURVE",
"374.747 235.428 OFFCURVE",
"452 344 CURVE",
"387 344 LINE"
);
},
{
closed = 1;
nodes = (
"60 177.716 OFFCURVE",
"190.442 340 OFFCURVE",
"275 340 CURVE SMOOTH",
"300.333 340 OFFCURVE",
"320 323.667 OFFCURVE",
"320 293 CURVE SMOOTH",
"320 235.832 OFFCURVE",
"277.48 159.865 OFFCURVE",
"233.5 110.5 CURVE SMOOTH",
"192.8 64.817 OFFCURVE",
"132.431 16 OFFCURVE",
"96 16 CURVE SMOOTH",
"73.333 16 OFFCURVE",
"60 33.333 OFFCURVE",
"60 64 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
46 8 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
6 5 22 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 6 166 6 182 6 198 6 214 6 230 6 246 6 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 6 22 6 38 6 54 6 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 6 85 6 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
26 22 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 46 166 46 182 46 198 46 214 46 230 46 246 46 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 46 22 46 38 46 54 46 70 46 86 46 102 46 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 46 133 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 8 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 19 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 19 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 19 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
45 19 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
49 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 49 167 49 183 49 199 49 215 49 231 49 247 49 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2018-11-16 05:15:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"384 690 LINE",
"332 611.333 OFFCURVE",
"286.667 542.833 OFFCURVE",
"248 484.5 CURVE SMOOTH",
"209.333 426.167 OFFCURVE",
"176.333 375.833 OFFCURVE",
"149 333.5 CURVE",
"170.667 367.833 OFFCURVE",
"116.833 284.333 OFFCURVE",
"81.5 227 CURVE SMOOTH",
"43.471 165.292 OFFCURVE",
"13 99.76 OFFCURVE",
"13 71 CURVE SMOOTH",
"13 20.333 OFFCURVE",
"50.333 -8 OFFCURVE",
"97 -8 CURVE SMOOTH",
"211.265 -8 OFFCURVE",
"350.903 119.309 OFFCURVE",
"386 230 CURVE",
"408.667 211.333 OFFCURVE",
"435.333 199 OFFCURVE",
"466 199 CURVE SMOOTH",
"510 199 OFFCURVE",
"547.667 227.333 OFFCURVE",
"569 254 CURVE",
"562 261 LINE",
"539.333 231.667 OFFCURVE",
"505.667 209 OFFCURVE",
"467 209 CURVE SMOOTH",
"432.333 209 OFFCURVE",
"402 227 OFFCURVE",
"390 243 CURVE",
"392.667 256.333 OFFCURVE",
"394 271 OFFCURVE",
"394 287 CURVE SMOOTH",
"394 325.667 OFFCURVE",
"380.667 352 OFFCURVE",
"358 352 CURVE SMOOTH",
"338 352 OFFCURVE",
"330 337.667 OFFCURVE",
"330 319 CURVE SMOOTH",
"330 311 OFFCURVE",
"331.667 303.5 OFFCURVE",
"335 296.5 CURVE SMOOTH",
"338.333 289.5 OFFCURVE",
"340 282.333 OFFCURVE",
"340 275 CURVE SMOOTH",
"340 185.289 OFFCURVE",
"197.438 4 OFFCURVE",
"104 4 CURVE SMOOTH",
"78.667 4 OFFCURVE",
"61 22.333 OFFCURVE",
"61 49 CURVE SMOOTH",
"61 75.211 OFFCURVE",
"87.022 132.016 OFFCURVE",
"125.5 193 CURVE SMOOTH",
"160.833 249 OFFCURVE",
"218.167 336.167 OFFCURVE",
"301.5 463.5 CURVE",
"224.5 345.833 OFFCURVE",
"259.833 399.833 OFFCURVE",
"301.5 463.5 CURVE SMOOTH",
"343.167 527.167 OFFCURVE",
"392.667 603.333 OFFCURVE",
"450 692 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 7 166 7 182 7 198 7 214 7 230 7 246 7 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 7 22 7 38 7 54 7 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 7 85 7 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
39 15 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
44 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
21 36 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
39 36 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"448 257 LINE",
"410.667 199.667 OFFCURVE",
"352 134.667 OFFCURVE",
"292 88 CURVE SMOOTH",
"234.667 42.667 OFFCURVE",
"169.667 8 OFFCURVE",
"123 8 CURVE SMOOTH",
"88.333 8 OFFCURVE",
"72 37 OFFCURVE",
"72 73 CURVE SMOOTH",
"72 181.536 OFFCURVE",
"199.659 340 OFFCURVE",
"276 340 CURVE SMOOTH",
"299.333 340 OFFCURVE",
"311 327.667 OFFCURVE",
"311 303 CURVE SMOOTH",
"311 288.333 OFFCURVE",
"306.333 274.333 OFFCURVE",
"301 261 CURVE",
"328.865 264.096 OFFCURVE",
"365 274.138 OFFCURVE",
"365 305 CURVE SMOOTH",
"365 339.667 OFFCURVE",
"331.667 352 OFFCURVE",
"293 352 CURVE SMOOTH",
"174.283 352 OFFCURVE",
"12 195.456 OFFCURVE",
"12 69 CURVE SMOOTH",
"12 18.333 OFFCURVE",
"49.667 -8 OFFCURVE",
"99 -8 CURVE SMOOTH",
"168.333 -8 OFFCURVE",
"241 32 OFFCURVE",
"313 92 CURVE SMOOTH",
"371.667 141.333 OFFCURVE",
"424.333 201.667 OFFCURVE",
"455 251 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 25 138 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 25 169 25 185 25 201 25 217 25 233 25 249 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 105 25 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 9 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 32 166 32 182 32 198 32 214 32 230 32 246 32 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 32 22 32 38 32 54 32 70 32 86 32 102 32 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 32 133 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
22 6 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"611 692 LINE",
"353 281 LINE",
"350 281 LINE",
"351.333 322.333 OFFCURVE",
"323.667 352 OFFCURVE",
"281 352 CURVE SMOOTH",
"167.708 352 OFFCURVE",
"-7 177.731 OFFCURVE",
"-7 66 CURVE SMOOTH",
"-7 26 OFFCURVE",
"20 -8 OFFCURVE",
"68 -8 CURVE SMOOTH",
"135.837 -8 OFFCURVE",
"197.555 59.999 OFFCURVE",
"242 110 CURVE",
"244 109 LINE",
"233.333 90.333 OFFCURVE",
"220 65.333 OFFCURVE",
"220 40 CURVE SMOOTH",
"220 12 OFFCURVE",
"240.333 -8 OFFCURVE",
"283 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"380.667 31.333 OFFCURVE",
"434 86 CURVE SMOOTH",
"482.049 134.049 OFFCURVE",
"543.759 215.906 OFFCURVE",
"568 259 CURVE",
"560 263 LINE",
"524 203 OFFCURVE",
"472 137.667 OFFCURVE",
"420 87 CURVE SMOOTH",
"360 29.667 OFFCURVE",
"319.333 4 OFFCURVE",
"286 4 CURVE SMOOTH",
"271.333 4 OFFCURVE",
"264 13.333 OFFCURVE",
"264 28 CURVE SMOOTH",
"264 75.842 OFFCURVE",
"373.05 235.052 OFFCURVE",
"411.5 292.5 CURVE SMOOTH",
"457.698 361.526 OFFCURVE",
"541.956 485.934 OFFCURVE",
"592 561 CURVE SMOOTH",
"622.667 607 OFFCURVE",
"651 650.667 OFFCURVE",
"677 692 CURVE"
);
},
{
closed = 1;
nodes = (
"322 237.275 OFFCURVE",
"273.729 166.405 OFFCURVE",
"232 118 CURVE SMOOTH",
"190.87 70.289 OFFCURVE",
"126.862 16 OFFCURVE",
"90 16 CURVE SMOOTH",
"62 16 OFFCURVE",
"53 37 OFFCURVE",
"53 65 CURVE SMOOTH",
"53 112.14 OFFCURVE",
"94.056 185.73 OFFCURVE",
"134.5 236.5 CURVE SMOOTH",
"174.441 286.639 OFFCURVE",
"234.662 340 OFFCURVE",
"277 340 CURVE SMOOTH",
"315.667 340 OFFCURVE",
"322 312 OFFCURVE",
"322 280 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
61 8 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
7 6 28 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 7 166 7 182 7 198 7 214 7 230 7 246 7 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 7 22 7 38 7 54 7 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 7 85 7 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
32 28 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 61 166 61 182 61 198 61 214 61 230 61 246 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 61 22 61 38 61 54 61 70 61 86 61 102 61 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 61 133 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
32 25 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 25 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
64 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 64 167 64 183 64 199 64 215 64 231 64 247 64 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 64 23 64 39 64 55 64 71 64 87 64 103 64 119 64 135 64 151 64 167 64 183 64 199 64 215 64 231 64 247 64 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 64 23 64 39 64 55 64 71 64 87 64 103 64 119 64 135 64 151 64 167 64 183 64 199 64 215 64 231 64 247 64 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"300 245.096 OFFCURVE",
"171.116 191.657 OFFCURVE",
"107 180 CURVE",
"133.642 238.612 OFFCURVE",
"218.376 340 OFFCURVE",
"274 340 CURVE SMOOTH",
"288.667 340 OFFCURVE",
"300 330.667 OFFCURVE",
"300 312 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"454 264 LINE",
"380.611 144.131 OFFCURVE",
"222.953 8 OFFCURVE",
"126 8 CURVE SMOOTH",
"90.395 8 OFFCURVE",
"77 40.465 OFFCURVE",
"77 74 CURVE SMOOTH",
"77 107.333 OFFCURVE",
"87.333 142.333 OFFCURVE",
"102 169 CURVE",
"187.894 187.22 OFFCURVE",
"348 247.126 OFFCURVE",
"348 311 CURVE SMOOTH",
"348 337.667 OFFCURVE",
"328.333 352 OFFCURVE",
"295 352 CURVE SMOOTH",
"175.726 352 OFFCURVE",
"17 191.692 OFFCURVE",
"17 75 CURVE SMOOTH",
"17 21.667 OFFCURVE",
"49 -8 OFFCURVE",
"105 -8 CURVE SMOOTH",
"162.901 -8 OFFCURVE",
"265.208 47.484 OFFCURVE",
"312.5 87.5 CURVE SMOOTH",
"359.041 126.881 OFFCURVE",
"435.171 214.285 OFFCURVE",
"462 259 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 0 90 0 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 0 169 0 185 0 201 0 217 0 233 0 249 0 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 0 25 0 41 0 57 0 73 0 89 0 105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 0 25 0 41 0 57 0 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 7 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 23 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 39 166 39 182 39 198 39 214 39 230 39 246 39 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 39 22 39 38 39 54 39 70 39 86 39 102 39 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 39 133 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 20 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"143 332 LINE",
"93.686 253.74 OFFCURVE",
"13.416 118.852 OFFCURVE",
"-34.5 44.5 CURVE SMOOTH",
"-63.5 -0.5 OFFCURVE",
"-92.5 -42.333 OFFCURVE",
"-121.5 -81 CURVE SMOOTH",
"-179.5 -158.333 OFFCURVE",
"-239.667 -216.833 OFFCURVE",
"-305 -249.5 CURVE SMOOTH",
"-337.667 -265.833 OFFCURVE",
"-372 -274 OFFCURVE",
"-408 -274 CURVE SMOOTH",
"-482.667 -274 OFFCURVE",
"-522 -230.333 OFFCURVE",
"-522 -161 CURVE SMOOTH",
"-522 -111.667 OFFCURVE",
"-490 -82.667 OFFCURVE",
"-450 -80 CURVE",
"-450 -72 LINE",
"-459 -72 LINE SMOOTH",
"-536.333 -72 OFFCURVE",
"-566 -114 OFFCURVE",
"-566 -166 CURVE SMOOTH",
"-566 -245.02 OFFCURVE",
"-492.951 -286 OFFCURVE",
"-413 -286 CURVE SMOOTH",
"-299.667 -286 OFFCURVE",
"-211.333 -241 OFFCURVE",
"-118 -141 CURVE SMOOTH",
"-24.667 -41 OFFCURVE",
"72 113.333 OFFCURVE",
"200 332 CURVE",
"432 332 LINE",
"432 344 LINE",
"206 344 LINE",
"243.181 404.42 OFFCURVE",
"303.348 507.313 OFFCURVE",
"346.5 566 CURVE SMOOTH",
"396.5 634 OFFCURVE",
"448.667 684 OFFCURVE",
"498 684 CURVE SMOOTH",
"528.667 684 OFFCURVE",
"540 666.667 OFFCURVE",
"540 640 CURVE SMOOTH",
"540 617.333 OFFCURVE",
"536.333 602.667 OFFCURVE",
"531 584 CURVE",
"561.667 586.667 OFFCURVE",
"584 609 OFFCURVE",
"584 641 CURVE SMOOTH",
"584 678.333 OFFCURVE",
"554.667 696 OFFCURVE",
"512 696 CURVE SMOOTH",
"440 696 OFFCURVE",
"375 649.833 OFFCURVE",
"315 582.5 CURVE SMOOTH",
"255 515.167 OFFCURVE",
"201 426.667 OFFCURVE",
"149 344 CURVE",
"72 344 LINE",
"72 332 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
10 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
13 37 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 37 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
45 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 45 166 45 182 45 198 45 214 45 230 45 246 45 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 45 22 45 38 45 54 45 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 45 85 45 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
55 37 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 32 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"390 344 LINE",
"353 287 LINE",
"350 287 LINE",
"350 321.667 OFFCURVE",
"328 352 OFFCURVE",
"276 352 CURVE SMOOTH",
"227.667 352 OFFCURVE",
"134.005 296.384 OFFCURVE",
"93 257.5 CURVE SMOOTH",
"51.771 218.404 OFFCURVE",
"-7 123.563 OFFCURVE",
"-7 70 CURVE SMOOTH",
"-7 30.247 OFFCURVE",
"17.439 -8 OFFCURVE",
"66 -8 CURVE SMOOTH",
"131.588 -8 OFFCURVE",
"196.713 53.784 OFFCURVE",
"239 104 CURVE",
"241 102 LINE",
"217.67 69.338 OFFCURVE",
"172.036 -0.904 OFFCURVE",
"137.5 -47.5 CURVE SMOOTH",
"116.5 -75.833 OFFCURVE",
"94.167 -104 OFFCURVE",
"70.5 -132 CURVE SMOOTH",
"23.167 -188 OFFCURVE",
"-28.833 -234.167 OFFCURVE",
"-85.5 -261.5 CURVE SMOOTH",
"-113.833 -275.167 OFFCURVE",
"-142.667 -282 OFFCURVE",
"-172 -282 CURVE SMOOTH",
"-241.724 -282 OFFCURVE",
"-294 -252.254 OFFCURVE",
"-294 -182 CURVE SMOOTH",
"-294 -127.333 OFFCURVE",
"-269 -92 OFFCURVE",
"-217 -92 CURVE SMOOTH",
"-209 -92 LINE",
"-209 -84 LINE",
"-218.333 -81.333 OFFCURVE",
"-225.667 -80 OFFCURVE",
"-239 -80 CURVE SMOOTH",
"-301.667 -80 OFFCURVE",
"-348 -122.667 OFFCURVE",
"-348 -180 CURVE SMOOTH",
"-348 -252.446 OFFCURVE",
"-272.005 -294 OFFCURVE",
"-180 -294 CURVE SMOOTH",
"-98.667 -294 OFFCURVE",
"-27.5 -262.5 OFFCURVE",
"30.5 -220.5 CURVE SMOOTH",
"59.5 -199.5 OFFCURVE",
"85.5 -176.667 OFFCURVE",
"108.5 -152 CURVE SMOOTH",
"140.656 -117.514 OFFCURVE",
"206.532 -12.881 OFFCURVE",
"228 0 CURVE",
"250.667 2.667 OFFCURVE",
"306.667 19 OFFCURVE",
"372 59 CURVE SMOOTH",
"437.333 99 OFFCURVE",
"511.333 164 OFFCURVE",
"570 264 CURVE",
"566 270 LINE",
"497.566 152.293 OFFCURVE",
"366.994 41.039 OFFCURVE",
"235 12 CURVE",
"273 67.333 OFFCURVE",
"309.833 123 OFFCURVE",
"345.5 179 CURVE SMOOTH",
"381.167 235 OFFCURVE",
"419 290 OFFCURVE",
"459 344 CURVE"
);
},
{
closed = 1;
nodes = (
"304.667 340 OFFCURVE",
"316 319.667 OFFCURVE",
"316 297 CURVE SMOOTH",
"316 241.452 OFFCURVE",
"262.034 146.037 OFFCURVE",
"227 107.5 CURVE SMOOTH",
"185.865 62.251 OFFCURVE",
"127.759 16 OFFCURVE",
"94 16 CURVE SMOOTH",
"70 16 OFFCURVE",
"53 35.667 OFFCURVE",
"53 65 CURVE SMOOTH",
"53 172.607 OFFCURVE",
"183.345 340 OFFCURVE",
"274 340 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 37 166 37 182 37 198 37 214 37 230 37 246 37 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 102 37 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 37 133 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 60 138 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 60 169 60 185 60 201 60 217 60 233 60 249 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 60 25 60 41 60 57 60 73 60 89 60 105 60 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 8 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
55 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
29 21 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 55 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 3 167 3 183 3 199 3 215 3 231 3 247 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 103 3 119 3 135 3 151 3 167 3 183 3 199 3 215 3 231 3 247 3 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 103 3 119 3 135 3 151 3 167 3 183 3 199 3 215 3 231 3 247 3 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
8 55 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
50 55 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
71 55 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"387 689 LINE",
"321.667 585 OFFCURVE",
"247.167 469.333 OFFCURVE",
"170.5 352 CURVE SMOOTH",
"93.833 234.667 OFFCURVE",
"15.333 114.667 OFFCURVE",
"-58 0 CURVE",
"7 0 LINE",
"30.153 46.307 OFFCURVE",
"104.212 150.671 OFFCURVE",
"151 205.5 CURVE SMOOTH",
"196.952 259.35 OFFCURVE",
"286.362 340 OFFCURVE",
"334 340 CURVE SMOOTH",
"351.333 340 OFFCURVE",
"365 333.333 OFFCURVE",
"365 312 CURVE SMOOTH",
"365 286.539 OFFCURVE",
"318.13 231.635 OFFCURVE",
"287 193.5 CURVE SMOOTH",
"252.678 151.455 OFFCURVE",
"209 92.659 OFFCURVE",
"209 52 CURVE SMOOTH",
"209 14.667 OFFCURVE",
"233.333 -8 OFFCURVE",
"268 -8 CURVE SMOOTH",
"313.268 -8 OFFCURVE",
"397.798 55.798 OFFCURVE",
"439.5 97.5 CURVE SMOOTH",
"481.807 139.807 OFFCURVE",
"549.684 223.181 OFFCURVE",
"571 260 CURVE",
"565 262 LINE",
"546.644 229.368 OFFCURVE",
"479.118 149.118 OFFCURVE",
"439 109 CURVE SMOOTH",
"396.992 66.992 OFFCURVE",
"315.804 4 OFFCURVE",
"273 4 CURVE SMOOTH",
"258.333 4 OFFCURVE",
"249 15.333 OFFCURVE",
"249 30 CURVE SMOOTH",
"249 58.28 OFFCURVE",
"295.395 117.494 OFFCURVE",
"327 157 CURVE SMOOTH",
"359.541 197.677 OFFCURVE",
"405 258.905 OFFCURVE",
"405 291 CURVE SMOOTH",
"405 331.667 OFFCURVE",
"384.667 352 OFFCURVE",
"344 352 CURVE SMOOTH",
"251.493 352 OFFCURVE",
"157.946 233.933 OFFCURVE",
"102 164 CURVE",
"100 166 LINE",
"454 692 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 44 90 44 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 44 169 44 185 44 201 44 217 44 233 44 249 44 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 44 25 44 41 44 57 44 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
9 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 16 166 16 182 16 198 16 214 16 230 16 246 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 16 22 16 38 16 54 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 16 85 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 34 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
55 34 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"168 344 LINE",
"121.71 274.072 OFFCURVE",
"56.483 180.02 OFFCURVE",
"33 142 CURVE SMOOTH",
"5 96.667 OFFCURVE",
"-7 68 OFFCURVE",
"-7 40 CURVE SMOOTH",
"-7 16 OFFCURVE",
"10 -8 OFFCURVE",
"46 -8 CURVE SMOOTH",
"90.135 -8 OFFCURVE",
"174.151 53.151 OFFCURVE",
"216 95 CURVE SMOOTH",
"257.219 136.219 OFFCURVE",
"327.167 220.945 OFFCURVE",
"350 259 CURVE",
"342 264 LINE",
"323.823 229.666 OFFCURVE",
"254.489 148.489 OFFCURVE",
"214 108 CURVE SMOOTH",
"172.736 66.736 OFFCURVE",
"92.885 4 OFFCURVE",
"54 4 CURVE SMOOTH",
"40 4 OFFCURVE",
"33 12.667 OFFCURVE",
"33 30 CURVE SMOOTH",
"33 47.54 OFFCURVE",
"53.224 83.811 OFFCURVE",
"77.5 121 CURVE SMOOTH",
"104.071 161.704 OFFCURVE",
"177.705 266.013 OFFCURVE",
"232 344 CURVE"
);
},
{
closed = 1;
nodes = (
"271.333 530 OFFCURVE",
"258 515.667 OFFCURVE",
"258 497 CURVE SMOOTH",
"258 478.333 OFFCURVE",
"271.333 464 OFFCURVE",
"290 464 CURVE SMOOTH",
"308.667 464 OFFCURVE",
"322 478.333 OFFCURVE",
"322 497 CURVE SMOOTH",
"322 515.667 OFFCURVE",
"308.667 530 OFFCURVE",
"290 530 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 5 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 9 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 25 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 5 166 5 182 5 198 5 214 5 230 5 246 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 5 22 5 38 5 54 5 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 5 85 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 40 138 40 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 40 169 40 185 40 201 40 217 40 233 40 249 40 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 105 40 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
31 1 37 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"156 344 LINE",
"-17 65 LINE SMOOTH",
"-63.667 -11 OFFCURVE",
"-118.333 -97 OFFCURVE",
"-181 -165 CURVE SMOOTH",
"-243.667 -233 OFFCURVE",
"-316.333 -282 OFFCURVE",
"-399 -282 CURVE SMOOTH",
"-473.667 -282 OFFCURVE",
"-523 -250.667 OFFCURVE",
"-523 -172 CURVE SMOOTH",
"-523 -132 OFFCURVE",
"-495.667 -92 OFFCURVE",
"-441 -92 CURVE SMOOTH",
"-434 -92 LINE",
"-434 -83 LINE",
"-440.667 -81.667 OFFCURVE",
"-450.333 -80 OFFCURVE",
"-461 -80 CURVE SMOOTH",
"-516.606 -80 OFFCURVE",
"-571 -118.217 OFFCURVE",
"-571 -176 CURVE SMOOTH",
"-571 -255.861 OFFCURVE",
"-489.846 -294 OFFCURVE",
"-405 -294 CURVE SMOOTH",
"-314.333 -294 OFFCURVE",
"-234.833 -256 OFFCURVE",
"-167.5 -200 CURVE SMOOTH",
"-100.167 -144 OFFCURVE",
"-44 -70.667 OFFCURVE",
"0 0 CURVE",
"145.097 21.105 OFFCURVE",
"269.461 137.86 OFFCURVE",
"352 263 CURVE",
"343 267 LINE",
"256.259 136.888 OFFCURVE",
"134.004 30.756 OFFCURVE",
"7 11 CURVE",
"218 344 LINE"
);
},
{
closed = 1;
nodes = (
"261.333 530 OFFCURVE",
"248 515.667 OFFCURVE",
"248 497 CURVE SMOOTH",
"248 478.333 OFFCURVE",
"261.333 464 OFFCURVE",
"280 464 CURVE SMOOTH",
"298.667 464 OFFCURVE",
"312 478.333 OFFCURVE",
"312 497 CURVE SMOOTH",
"312 515.667 OFFCURVE",
"298.667 530 OFFCURVE",
"280 530 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 54 138 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 54 169 54 185 54 201 54 217 54 233 54 249 54 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 54 25 54 41 54 57 54 73 54 89 54 105 54 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 22 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1 22 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 35 166 35 182 35 198 35 214 35 230 35 246 35 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 35 22 35 38 35 54 35 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 35 85 35 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
27 17 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 1 51 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"384 689 LINE",
"309.333 572.333 OFFCURVE",
"235.167 457.167 OFFCURVE",
"161.5 343.5 CURVE SMOOTH",
"87.833 229.833 OFFCURVE",
"14 115.333 OFFCURVE",
"-60 0 CURVE",
"6 0 LINE",
"28.667 44 OFFCURVE",
"61.833 95.5 OFFCURVE",
"98.5 145.5 CURVE SMOOTH",
"116.833 170.5 OFFCURVE",
"135.833 194.5 OFFCURVE",
"155.5 217.5 CURVE SMOOTH",
"198.209 267.448 OFFCURVE",
"273.234 336 OFFCURVE",
"311 336 CURVE SMOOTH",
"329.667 336 OFFCURVE",
"345 323 OFFCURVE",
"345 295 CURVE SMOOTH",
"345 229.259 OFFCURVE",
"282.594 192 OFFCURVE",
"205 192 CURVE SMOOTH",
"197.667 192 OFFCURVE",
"191.5 192.333 OFFCURVE",
"186.5 193 CURVE SMOOTH",
"181.5 193.667 OFFCURVE",
"177 194 OFFCURVE",
"173 194 CURVE SMOOTH",
"163 194 OFFCURVE",
"158 191 OFFCURVE",
"158 185 CURVE SMOOTH",
"158 179 OFFCURVE",
"163 176 OFFCURVE",
"173 176 CURVE SMOOTH",
"184.333 176 OFFCURVE",
"194.5 177.333 OFFCURVE",
"203.5 180 CURVE SMOOTH",
"212.5 182.667 OFFCURVE",
"220.333 184 OFFCURVE",
"227 184 CURVE SMOOTH",
"238.333 184 OFFCURVE",
"244 177.667 OFFCURVE",
"244 165 CURVE SMOOTH",
"244 141.611 OFFCURVE",
"200 79.707 OFFCURVE",
"200 45 CURVE SMOOTH",
"200 9 OFFCURVE",
"223 -8 OFFCURVE",
"263 -8 CURVE SMOOTH",
"309.667 -8 OFFCURVE",
"366.333 24.333 OFFCURVE",
"429 87 CURVE SMOOTH",
"494.333 152.333 OFFCURVE",
"544.667 221 OFFCURVE",
"570 257 CURVE",
"561 263 LINE",
"510.333 189.667 OFFCURVE",
"467.667 140.667 OFFCURVE",
"425 98 CURVE SMOOTH",
"363.667 36.667 OFFCURVE",
"306 4 OFFCURVE",
"270 4 CURVE SMOOTH",
"259.333 4 OFFCURVE",
"254 10.333 OFFCURVE",
"254 23 CURVE SMOOTH",
"254 55.644 OFFCURVE",
"284 100.382 OFFCURVE",
"284 130 CURVE SMOOTH",
"284 154 OFFCURVE",
"271 179 OFFCURVE",
"255 187 CURVE",
"255 189 LINE",
"315.476 200.519 OFFCURVE",
"399 233.41 OFFCURVE",
"399 297 CURVE SMOOTH",
"399 327.667 OFFCURVE",
"381 352 OFFCURVE",
"337 352 CURVE SMOOTH",
"250.19 352 OFFCURVE",
"183.977 265.052 OFFCURVE",
"114 187 CURVE",
"112 189 LINE",
"229.333 351.667 OFFCURVE",
"336.667 518.667 OFFCURVE",
"446 692 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 44 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 4 66 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 26 166 26 182 26 198 26 214 26 230 26 246 26 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 26 22 26 38 26 54 26 70 26 86 26 102 26 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 26 133 26 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
49 44 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 49 90 49 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 49 169 49 185 49 201 49 217 49 233 49 249 49 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 49 25 49 41 49 57 49 73 49 89 49 105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 49 25 49 41 49 57 49 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
21 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
18 49 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 66 138 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 66 169 66 185 66 201 66 217 66 233 66 249 66 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 66 25 66 41 66 57 66 73 66 89 66 105 66 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 54 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 17 167 17 183 17 199 17 215 17 231 17 247 17 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 17 23 17 39 17 55 17 71 17 87 17 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 17 118 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
4 41 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
77 41 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"385 696 LINE",
"282.333 533.333 OFFCURVE",
"204.5 414.833 OFFCURVE",
"146.5 327.5 CURVE SMOOTH",
"117.5 283.833 OFFCURVE",
"93.167 247 OFFCURVE",
"73.5 217 CURVE SMOOTH",
"30.685 151.689 OFFCURVE",
"-7 79.277 OFFCURVE",
"-7 43 CURVE SMOOTH",
"-7 12.333 OFFCURVE",
"9.667 -8 OFFCURVE",
"51 -8 CURVE SMOOTH",
"89.667 -8 OFFCURVE",
"134.667 18.667 OFFCURVE",
"200 80 CURVE SMOOTH",
"249.333 126.667 OFFCURVE",
"305 193 OFFCURVE",
"353 261 CURVE",
"342 265 LINE",
"291.333 193 OFFCURVE",
"236.833 127.833 OFFCURVE",
"185.5 80.5 CURVE SMOOTH",
"134.167 33.167 OFFCURVE",
"88.333 4 OFFCURVE",
"55 4 CURVE SMOOTH",
"40.333 4 OFFCURVE",
"33 12.333 OFFCURVE",
"33 29 CURVE SMOOTH",
"33 53.703 OFFCURVE",
"77.737 129.568 OFFCURVE",
"110 178.5 CURVE SMOOTH",
"144.539 230.884 OFFCURVE",
"233.119 362.685 OFFCURVE",
"300 462.5 CURVE SMOOTH",
"344 528.167 OFFCURVE",
"395.667 606 OFFCURVE",
"455 696 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
7 5 24 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 7 166 7 182 7 198 7 214 7 230 7 246 7 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 7 22 7 38 7 54 7 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 7 85 7 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
15 21 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"7 0 LINE",
"30.095 46.19 OFFCURVE",
"102.161 152.259 OFFCURVE",
"147 206.5 CURVE SMOOTH",
"190.689 259.349 OFFCURVE",
"281.453 340 OFFCURVE",
"329 340 CURVE SMOOTH",
"347.667 340 OFFCURVE",
"357 331 OFFCURVE",
"357 313 CURVE SMOOTH",
"357 291.295 OFFCURVE",
"320.613 237.449 OFFCURVE",
"291 192.5 CURVE SMOOTH",
"253.667 135.833 OFFCURVE",
"207.333 66.667 OFFCURVE",
"170 0 CURVE",
"234 0 LINE",
"259.333 54.667 OFFCURVE",
"295.167 111.5 OFFCURVE",
"334.5 161.5 CURVE SMOOTH",
"354.167 186.5 OFFCURVE",
"374.333 209.833 OFFCURVE",
"395 231.5 CURVE SMOOTH",
"439.493 278.146 OFFCURVE",
"520.228 340 OFFCURVE",
"559 340 CURVE SMOOTH",
"573.667 340 OFFCURVE",
"585 333.667 OFFCURVE",
"585 315 CURVE SMOOTH",
"585 291.443 OFFCURVE",
"537.551 232.189 OFFCURVE",
"507 194 CURVE SMOOTH",
"473.223 151.779 OFFCURVE",
"429 90.893 OFFCURVE",
"429 53 CURVE SMOOTH",
"429 18.333 OFFCURVE",
"448.667 -8 OFFCURVE",
"490 -8 CURVE SMOOTH",
"530 -8 OFFCURVE",
"578.167 21 OFFCURVE",
"629.5 69 CURVE SMOOTH",
"680.833 117 OFFCURVE",
"736.333 183.333 OFFCURVE",
"791 258 CURVE",
"783 262 LINE",
"727 186 OFFCURVE",
"671.5 121.333 OFFCURVE",
"621.5 76 CURVE SMOOTH",
"571.5 30.667 OFFCURVE",
"527 4 OFFCURVE",
"495 4 CURVE SMOOTH",
"480.333 4 OFFCURVE",
"469 14 OFFCURVE",
"469 30 CURVE SMOOTH",
"469 57.78 OFFCURVE",
"515.647 118.241 OFFCURVE",
"547 159 CURVE SMOOTH",
"579.727 201.545 OFFCURVE",
"625 265.065 OFFCURVE",
"625 299 CURVE SMOOTH",
"625 332.333 OFFCURVE",
"605.667 352 OFFCURVE",
"567 352 CURVE SMOOTH",
"480.228 352 OFFCURVE",
"370.713 234.162 OFFCURVE",
"316 156 CURVE",
"314 158 LINE",
"340.025 197.038 OFFCURVE",
"397 267.764 OFFCURVE",
"397 303 CURVE SMOOTH",
"397 335 OFFCURVE",
"374 352 OFFCURVE",
"342 352 CURVE SMOOTH",
"290 352 OFFCURVE",
"239.833 318.333 OFFCURVE",
"196.5 277 CURVE SMOOTH",
"159.494 241.702 OFFCURVE",
"115.066 185.133 OFFCURVE",
"91 156 CURVE",
"89 158 LINE",
"221 344 LINE",
"160 344 LINE",
"108.543 256.747 OFFCURVE",
"-8.082 83.953 OFFCURVE",
"-58 0 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 5 77 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 5 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 5 61 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 54 90 54 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 54 169 54 185 54 201 54 217 54 233 54 249 54 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 54 25 54 41 54 57 54 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 61 90 61 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 61 169 61 185 61 201 61 217 61 233 61 249 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 61 25 61 41 61 57 61 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 77 90 77 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 77 169 77 185 77 201 77 217 77 233 77 249 77 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 77 25 77 41 77 57 77 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
71 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 51 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 51 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 51 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
72 51 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 667;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"155 341 LINE",
"122.196 287.888 OFFCURVE",
"-21.972 67.74 OFFCURVE",
"-62 0 CURVE",
"0 0 LINE",
"21.603 45.169 OFFCURVE",
"98.065 152.075 OFFCURVE",
"143.5 204.5 CURVE SMOOTH",
"190.146 258.322 OFFCURVE",
"280.251 340 OFFCURVE",
"328 340 CURVE SMOOTH",
"345.333 340 OFFCURVE",
"357 332 OFFCURVE",
"357 316 CURVE SMOOTH",
"357 248.12 OFFCURVE",
"203 129.815 OFFCURVE",
"203 52 CURVE SMOOTH",
"203 14.667 OFFCURVE",
"231.333 -8 OFFCURVE",
"270 -8 CURVE SMOOTH",
"329.716 -8 OFFCURVE",
"396.225 52.245 OFFCURVE",
"451 112 CURVE SMOOTH",
"500.333 165.333 OFFCURVE",
"544.333 225 OFFCURVE",
"571 265 CURVE",
"564 269 LINE",
"540.759 232.848 OFFCURVE",
"469.604 142.604 OFFCURVE",
"425 98 CURVE SMOOTH",
"358.333 30 OFFCURVE",
"313.667 4 OFFCURVE",
"271 4 CURVE SMOOTH",
"252.333 4 OFFCURVE",
"243 13.333 OFFCURVE",
"243 32 CURVE SMOOTH",
"243 56.512 OFFCURVE",
"289.928 117.906 OFFCURVE",
"320 157 CURVE SMOOTH",
"351.636 198.126 OFFCURVE",
"397 262.097 OFFCURVE",
"397 293 CURVE SMOOTH",
"397 327.667 OFFCURVE",
"374 352 OFFCURVE",
"334 352 CURVE SMOOTH",
"246.196 352 OFFCURVE",
"157.822 239.741 OFFCURVE",
"90 159 CURVE",
"88 161 LINE",
"220 344 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
17 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 17 166 17 182 17 198 17 214 17 230 17 246 17 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 17 22 17 38 17 54 17 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 17 85 17 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
0 39 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 44 90 44 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 44 169 44 185 44 201 44 217 44 233 44 249 44 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 44 25 44 41 44 57 44 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 36 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
2 36 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
55 36 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"561 258 LINE",
"530.333 226 OFFCURVE",
"495 204 OFFCURVE",
"455 204 CURVE SMOOTH",
"409.667 204 OFFCURVE",
"382.667 235.333 OFFCURVE",
"380 266 CURVE SMOOTH",
"377.333 316.667 OFFCURVE",
"346.667 352 OFFCURVE",
"292 352 CURVE SMOOTH",
"233.556 352 OFFCURVE",
"137.395 292.255 OFFCURVE",
"99.5 251.5 CURVE SMOOTH",
"53.029 201.522 OFFCURVE",
"12 133.024 OFFCURVE",
"12 84 CURVE SMOOTH",
"12 28 OFFCURVE",
"41.667 -8 OFFCURVE",
"99 -8 CURVE SMOOTH",
"219.222 -8 OFFCURVE",
"347.104 129.997 OFFCURVE",
"375 236 CURVE",
"377 236 LINE",
"391.667 213.333 OFFCURVE",
"418.667 194 OFFCURVE",
"456 194 CURVE SMOOTH",
"494.667 194 OFFCURVE",
"537 217 OFFCURVE",
"569 253 CURVE"
);
},
{
closed = 1;
nodes = (
"66 115.904 OFFCURVE",
"102.336 186.397 OFFCURVE",
"143 240 CURVE SMOOTH",
"180.761 289.776 OFFCURVE",
"240.244 340 OFFCURVE",
"283 340 CURVE SMOOTH",
"312.333 340 OFFCURVE",
"326 318 OFFCURVE",
"326 290 CURVE SMOOTH",
"326 239.791 OFFCURVE",
"293.177 163.11 OFFCURVE",
"256 110 CURVE SMOOTH",
"218.023 55.748 OFFCURVE",
"159.968 4 OFFCURVE",
"106 4 CURVE SMOOTH",
"79.333 4 OFFCURVE",
"66 25.333 OFFCURVE",
"66 60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 42 138 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 42 169 42 185 42 201 42 217 42 233 42 249 42 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 42 25 42 41 42 57 42 73 42 89 42 105 42 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
25 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
7 42 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
32 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 32 166 32 182 32 198 32 214 32 230 32 246 32 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 32 22 32 38 32 54 32 70 32 86 32 102 32 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 32 133 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
22 3 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 3 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 28 167 28 183 28 199 28 215 28 231 28 247 28 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 28 118 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"292 538 LINE",
"200.667 392.667 OFFCURVE",
"108.167 248.833 OFFCURVE",
"14.5 106.5 CURVE SMOOTH",
"-79.167 -35.833 OFFCURVE",
"-171 -179.333 OFFCURVE",
"-261 -324 CURVE",
"-199 -324 LINE",
"-177.667 -286.667 OFFCURVE",
"-148.667 -238.5 OFFCURVE",
"-118 -188.5 CURVE SMOOTH",
"-102.667 -163.5 OFFCURVE",
"-87.167 -138.667 OFFCURVE",
"-71.5 -114 CURVE SMOOTH",
"-38.242 -61.636 OFFCURVE",
"17.684 22.098 OFFCURVE",
"37 50 CURVE",
"60.775 81.7 OFFCURVE",
"134.361 191.833 OFFCURVE",
"154.5 217.5 CURVE SMOOTH",
"191.064 264.102 OFFCURVE",
"263.587 336 OFFCURVE",
"306 336 CURVE SMOOTH",
"315.333 336 OFFCURVE",
"323.333 332.5 OFFCURVE",
"330 325.5 CURVE SMOOTH",
"336.667 318.5 OFFCURVE",
"340 303.333 OFFCURVE",
"340 280 CURVE SMOOTH",
"340 222.589 OFFCURVE",
"298.774 141.124 OFFCURVE",
"264 101 CURVE",
"200.069 95.188 OFFCURVE",
"78 79.112 OFFCURVE",
"78 24 CURVE SMOOTH",
"78 1.333 OFFCURVE",
"100.333 -8 OFFCURVE",
"119 -8 CURVE SMOOTH",
"186.5 -8 OFFCURVE",
"248.225 52.819 OFFCURVE",
"306 97 CURVE",
"335.722 104.133 OFFCURVE",
"384.051 113.615 OFFCURVE",
"420 130.5 CURVE SMOOTH",
"464 151.167 OFFCURVE",
"516 189.667 OFFCURVE",
"576 263 CURVE",
"568 267 LINE",
"490.667 171 OFFCURVE",
"417 127.333 OFFCURVE",
"321 110 CURVE",
"319 112 LINE",
"360.782 153.782 OFFCURVE",
"400 208.417 OFFCURVE",
"400 276 CURVE SMOOTH",
"400 332 OFFCURVE",
"366.667 352 OFFCURVE",
"324 352 CURVE SMOOTH",
"250.433 352 OFFCURVE",
"183.285 273.38 OFFCURVE",
"141 217 CURVE",
"139 219 LINE",
"173.667 273.667 OFFCURVE",
"210 327 OFFCURVE",
"248 379 CURVE SMOOTH",
"286 431 OFFCURVE",
"322.667 484 OFFCURVE",
"358 538 CURVE"
);
},
{
closed = 1;
nodes = (
"118.333 4 OFFCURVE",
"104 12 OFFCURVE",
"104 28 CURVE SMOOTH",
"104 73.574 OFFCURVE",
"196.381 79.185 OFFCURVE",
"252 89 CURVE",
"254 87 LINE",
"234.218 63.921 OFFCURVE",
"171.695 4 OFFCURVE",
"133 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
78 5 35 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 8 45 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 45 138 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 45 169 45 185 45 201 45 217 45 233 45 249 45 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 45 25 45 41 45 57 45 73 45 89 45 105 45 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 45 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
4 35 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
18 35 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
73 35 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 78 166 78 182 78 198 78 214 78 230 78 246 78 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 78 22 78 38 78 54 78 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 78 85 78 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 12 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
66 48 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"386 344 LINE",
"352 287 LINE",
"350 287 LINE",
"350 317.667 OFFCURVE",
"323 352 OFFCURVE",
"279 352 CURVE SMOOTH",
"230.331 352 OFFCURVE",
"135.758 295.12 OFFCURVE",
"93 254.5 CURVE SMOOTH",
"50.438 214.066 OFFCURVE",
"-11 122.67 OFFCURVE",
"-11 73 CURVE SMOOTH",
"-11 26.333 OFFCURVE",
"12.333 -8 OFFCURVE",
"63 -8 CURVE SMOOTH",
"141.033 -8 OFFCURVE",
"186.342 50.25 OFFCURVE",
"242 109 CURVE",
"244 107 LINE",
"192 37 OFFCURVE",
"142.333 -34.333 OFFCURVE",
"95 -107 CURVE SMOOTH",
"47.667 -179.667 OFFCURVE",
"-0.667 -252 OFFCURVE",
"-50 -324 CURVE",
"14 -324 LINE",
"82 -213.333 OFFCURVE",
"152 -105.667 OFFCURVE",
"224 1 CURVE",
"375.864 28.842 OFFCURVE",
"501.257 142.982 OFFCURVE",
"572 259 CURVE",
"566 264 LINE",
"493.534 156.75 OFFCURVE",
"386.188 42.529 OFFCURVE",
"231 12 CURVE",
"446 344 LINE"
);
},
{
closed = 1;
nodes = (
"308.667 340 OFFCURVE",
"318 318.667 OFFCURVE",
"318 288 CURVE SMOOTH",
"318 245.081 OFFCURVE",
"264.496 155.596 OFFCURVE",
"229 113 CURVE SMOOTH",
"187.411 63.093 OFFCURVE",
"127.891 8 OFFCURVE",
"89 8 CURVE SMOOTH",
"62.333 8 OFFCURVE",
"49 24.333 OFFCURVE",
"49 57 CURVE SMOOTH",
"49 104.472 OFFCURVE",
"86.409 179.509 OFFCURVE",
"125.5 232.5 CURVE SMOOTH",
"165.33 286.492 OFFCURVE",
"224.184 340 OFFCURVE",
"274 340 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
48 8 28 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 48 166 48 182 48 198 48 214 48 230 48 246 48 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 48 22 48 38 48 54 48 70 48 86 48 102 48 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 48 133 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 12 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 15 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1 15 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 15 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 15 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"161 344 LINE",
"85 226.667 OFFCURVE",
"14 114.667 OFFCURVE",
"-58 0 CURVE",
"7 0 LINE",
"28.333 50.667 OFFCURVE",
"59.333 102.667 OFFCURVE",
"86 132 CURVE SMOOTH",
"159.333 214.667 OFFCURVE",
"225.333 275.667 OFFCURVE",
"280 313 CURVE",
"282 311 LINE",
"274.667 298.333 OFFCURVE",
"271 284 OFFCURVE",
"271 268 CURVE SMOOTH",
"271 221.333 OFFCURVE",
"299.333 194 OFFCURVE",
"342 194 CURVE SMOOTH",
"387.892 194 OFFCURVE",
"431.525 231.525 OFFCURVE",
"460 260 CURVE",
"454 264 LINE",
"428.401 241.246 OFFCURVE",
"388.244 206 OFFCURVE",
"351 206 CURVE SMOOTH",
"328.333 206 OFFCURVE",
"311 224.333 OFFCURVE",
"311 255 CURVE SMOOTH",
"311 293.667 OFFCURVE",
"337.333 327.333 OFFCURVE",
"360 350 CURVE",
"348 351.333 OFFCURVE",
"337.667 352 OFFCURVE",
"323 352 CURVE SMOOTH",
"299 352 OFFCURVE",
"294.667 343.333 OFFCURVE",
"288 330 CURVE",
"222.938 286.625 OFFCURVE",
"134.906 203.028 OFFCURVE",
"97 157 CURVE",
"95 159 LINE",
"222 344 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 5 33 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 33 90 33 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 33 169 33 185 33 201 33 217 33 233 33 249 33 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 33 25 33 41 33 57 33 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
36 33 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 30 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 30 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
36 30 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"453 261 LINE",
"379.298 146.353 OFFCURVE",
"256.632 17.515 OFFCURVE",
"117 2 CURVE",
"115 4 LINE",
"163.436 12.073 OFFCURVE",
"213 61.006 OFFCURVE",
"213 110 CURVE SMOOTH",
"213 144.667 OFFCURVE",
"201 171.333 OFFCURVE",
"189 198 CURVE",
"175.667 224.667 OFFCURVE",
"164 250.667 OFFCURVE",
"164 280 CURVE SMOOTH",
"164 313.333 OFFCURVE",
"182.333 340 OFFCURVE",
"221 340 CURVE SMOOTH",
"251.667 340 OFFCURVE",
"269 319.667 OFFCURVE",
"269 293 CURVE SMOOTH",
"269 275.667 OFFCURVE",
"262 252.667 OFFCURVE",
"254 238 CURVE",
"286 238 OFFCURVE",
"317 253.333 OFFCURVE",
"317 288 CURVE SMOOTH",
"317 326.667 OFFCURVE",
"280.333 352 OFFCURVE",
"227 352 CURVE SMOOTH",
"167.32 352 OFFCURVE",
"116 315.858 OFFCURVE",
"116 258 CURVE SMOOTH",
"116 212.579 OFFCURVE",
"159 151.906 OFFCURVE",
"159 102 CURVE SMOOTH",
"159 51.733 OFFCURVE",
"130.592 4 OFFCURVE",
"76 4 CURVE SMOOTH",
"32 4 OFFCURVE",
"-10 27.333 OFFCURVE",
"-10 74 CURVE SMOOTH",
"-10 90 OFFCURVE",
"-5.667 107 OFFCURVE",
"9 115 CURVE",
"11.667 103 OFFCURVE",
"20.333 94 OFFCURVE",
"35 94 CURVE SMOOTH",
"53.667 94 OFFCURVE",
"63 109.333 OFFCURVE",
"63 128 CURVE SMOOTH",
"63 148 OFFCURVE",
"49 158 OFFCURVE",
"29 158 CURVE SMOOTH",
"-9.667 158 OFFCURVE",
"-34 124.667 OFFCURVE",
"-34 90 CURVE SMOOTH",
"-34 24.71 OFFCURVE",
"18.071 -8 OFFCURVE",
"82 -8 CURVE SMOOTH",
"166 -8 OFFCURVE",
"240.333 26.333 OFFCURVE",
"303 77 CURVE SMOOTH",
"365.667 127.667 OFFCURVE",
"419 194 OFFCURVE",
"459 258 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
25 5 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 7 38 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 7 52 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 10 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 25 166 25 182 25 198 25 214 25 230 25 246 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 25 22 25 38 25 54 25 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 25 85 25 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 58 166 58 182 58 198 58 214 58 230 58 246 58 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 58 22 58 38 58 54 58 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 58 85 58 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
49 10 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 52 90 52 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 52 169 52 185 52 201 52 217 52 233 52 249 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 52 25 52 41 52 57 52 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
64 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
70 38 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 13 167 13 183 13 199 13 215 13 231 13 247 13 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 13 118 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
19 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 5 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 5 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
70 5 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"236 460 LINE",
"158 344 LINE",
"102 344 LINE",
"96 332 LINE",
"150 332 LINE",
"90.779 238.938 OFFCURVE",
"1 124.913 OFFCURVE",
"1 64 CURVE SMOOTH",
"1 18.667 OFFCURVE",
"35.667 -8 OFFCURVE",
"77 -8 CURVE SMOOTH",
"183.454 -8 OFFCURVE",
"319.09 153.614 OFFCURVE",
"404 261 CURVE",
"398 265 LINE",
"329.476 173.635 OFFCURVE",
"179.335 4 OFFCURVE",
"84 4 CURVE SMOOTH",
"61.333 4 OFFCURVE",
"41 12.667 OFFCURVE",
"41 38 CURVE SMOOTH",
"41 62 OFFCURVE",
"55.833 91.5 OFFCURVE",
"84.5 137.5 CURVE SMOOTH",
"108.168 175.479 OFFCURVE",
"168.113 265.559 OFFCURVE",
"209 332 CURVE",
"343 332 LINE",
"349 344 LINE",
"217 344 LINE",
"296 460 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 5 26 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 9 166 9 182 9 198 9 214 9 230 9 246 9 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 9 22 9 38 9 54 9 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 9 85 9 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 1 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 278;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"166 344 LINE",
"124.559 283.91 OFFCURVE",
"61.245 199.368 OFFCURVE",
"35 160 CURVE SMOOTH",
"3 112 OFFCURVE",
"-16 74.333 OFFCURVE",
"-16 41 CURVE SMOOTH",
"-16 14.333 OFFCURVE",
"1.333 -8 OFFCURVE",
"44 -8 CURVE SMOOTH",
"105.121 -8 OFFCURVE",
"175.035 53.612 OFFCURVE",
"227 113 CURVE",
"229 111 LINE",
"225 104.333 OFFCURVE",
"213 75.667 OFFCURVE",
"213 49 CURVE SMOOTH",
"213 14.333 OFFCURVE",
"236.667 -8 OFFCURVE",
"274 -8 CURVE SMOOTH",
"319.568 -8 OFFCURVE",
"403.235 58.184 OFFCURVE",
"443 101.5 CURVE SMOOTH",
"482.603 144.639 OFFCURVE",
"549.449 227.636 OFFCURVE",
"573 261 CURVE",
"563 264 LINE",
"540.926 231.893 OFFCURVE",
"474.353 151.179 OFFCURVE",
"435.5 109.5 CURVE SMOOTH",
"396.126 67.262 OFFCURVE",
"318.709 4 OFFCURVE",
"280 4 CURVE SMOOTH",
"262.667 4 OFFCURVE",
"253 17 OFFCURVE",
"253 33 CURVE SMOOTH",
"253 55.667 OFFCURVE",
"265.167 83 OFFCURVE",
"296.5 131 CURVE SMOOTH",
"327.833 179 OFFCURVE",
"377 245.333 OFFCURVE",
"449 344 CURVE",
"380 344 LINE",
"292 210 LINE SMOOTH",
"277.75 187.607 OFFCURVE",
"229.757 129.041 OFFCURVE",
"194.5 93 CURVE SMOOTH",
"155.966 53.61 OFFCURVE",
"99.253 8 OFFCURVE",
"61 8 CURVE SMOOTH",
"43.667 8 OFFCURVE",
"32 17.667 OFFCURVE",
"32 39 CURVE SMOOTH",
"32 85.559 OFFCURVE",
"154.617 238.839 OFFCURVE",
"232 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 43 90 43 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 43 169 43 185 43 201 43 217 43 233 43 249 43 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 43 25 43 41 43 57 43 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
22 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 43 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 5 166 5 182 5 198 5 214 5 230 5 246 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 5 22 5 38 5 54 5 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 5 85 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
47 43 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
33 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
47 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"166 344 LINE",
"146.715 312.661 OFFCURVE",
"100.753 254.019 OFFCURVE",
"73 213.5 CURVE SMOOTH",
"39.667 164.833 OFFCURVE",
"11 116 OFFCURVE",
"11 76 CURVE SMOOTH",
"11 16 OFFCURVE",
"42 -8 OFFCURVE",
"98 -8 CURVE SMOOTH",
"211.266 -8 OFFCURVE",
"353.483 121.321 OFFCURVE",
"386 227 CURVE",
"404.667 211 OFFCURVE",
"432.667 196 OFFCURVE",
"462 196 CURVE SMOOTH",
"505.337 196 OFFCURVE",
"556.583 221.534 OFFCURVE",
"575 261 CURVE",
"567 266 LINE",
"541.667 224.667 OFFCURVE",
"497.667 208 OFFCURVE",
"463 208 CURVE SMOOTH",
"436.333 208 OFFCURVE",
"404.667 222 OFFCURVE",
"390 242 CURVE",
"390.667 248 OFFCURVE",
"391.5 254.167 OFFCURVE",
"392.5 260.5 CURVE SMOOTH",
"393.5 266.833 OFFCURVE",
"394 273.667 OFFCURVE",
"394 281 CURVE SMOOTH",
"394 307 OFFCURVE",
"390.5 325.333 OFFCURVE",
"383.5 336 CURVE SMOOTH",
"376.5 346.667 OFFCURVE",
"368.333 352 OFFCURVE",
"359 352 CURVE SMOOTH",
"341.667 352 OFFCURVE",
"332 336 OFFCURVE",
"332 320 CURVE SMOOTH",
"332 312.667 OFFCURVE",
"333.333 306 OFFCURVE",
"336 300 CURVE SMOOTH",
"338.667 294 OFFCURVE",
"340 288.333 OFFCURVE",
"340 283 CURVE SMOOTH",
"340 190.882 OFFCURVE",
"206.731 4 OFFCURVE",
"107 4 CURVE SMOOTH",
"72.333 4 OFFCURVE",
"59 24 OFFCURVE",
"59 48 CURVE SMOOTH",
"59 88 OFFCURVE",
"89.833 146.167 OFFCURVE",
"126.5 201.5 CURVE SMOOTH",
"158.05 249.112 OFFCURVE",
"206.379 311.604 OFFCURVE",
"231 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 13 138 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 13 169 13 185 13 201 13 217 13 233 13 249 13 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 13 25 13 41 13 57 13 73 13 89 13 105 13 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 48 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 5 166 5 182 5 198 5 214 5 230 5 246 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 5 22 5 38 5 54 5 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 5 85 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
40 13 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
45 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
19 37 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 37 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
40 37 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"169 344 LINE",
"90.97 240.61 OFFCURVE",
"-2 130.667 OFFCURVE",
"-2 64 CURVE SMOOTH",
"-2 20 OFFCURVE",
"23.333 -8 OFFCURVE",
"74 -8 CURVE SMOOTH",
"136.341 -8 OFFCURVE",
"195.654 54.551 OFFCURVE",
"246 120 CURVE",
"248 118 LINE",
"246.667 113.333 OFFCURVE",
"244.333 106.167 OFFCURVE",
"241 96.5 CURVE SMOOTH",
"237.667 86.833 OFFCURVE",
"236 75.667 OFFCURVE",
"236 63 CURVE SMOOTH",
"236 16.333 OFFCURVE",
"271 -8 OFFCURVE",
"315 -8 CURVE SMOOTH",
"419.725 -8 OFFCURVE",
"565.591 118.301 OFFCURVE",
"607 227 CURVE",
"627 208.333 OFFCURVE",
"653.667 196 OFFCURVE",
"683 196 CURVE SMOOTH",
"734.333 196 OFFCURVE",
"771.333 216.333 OFFCURVE",
"794 257 CURVE",
"785 263 LINE",
"766.333 228.333 OFFCURVE",
"733 208 OFFCURVE",
"685 208 CURVE SMOOTH",
"649 208 OFFCURVE",
"627.333 225 OFFCURVE",
"610 241 CURVE",
"612.667 255.667 OFFCURVE",
"616 272.667 OFFCURVE",
"616 290 CURVE SMOOTH",
"616 324.667 OFFCURVE",
"608 352 OFFCURVE",
"580 352 CURVE SMOOTH",
"560 352 OFFCURVE",
"550 341.333 OFFCURVE",
"550 320 CURVE SMOOTH",
"550 309.333 OFFCURVE",
"552.667 295.333 OFFCURVE",
"562 282 CURVE",
"551.468 168.785 OFFCURVE",
"422.949 4 OFFCURVE",
"325 4 CURVE SMOOTH",
"298.333 4 OFFCURVE",
"284 21.333 OFFCURVE",
"284 48 CURVE SMOOTH",
"284 119.702 OFFCURVE",
"408.331 281.774 OFFCURVE",
"455 344 CURVE",
"386 344 LINE",
"332.667 260 OFFCURVE",
"277.833 175 OFFCURVE",
"226.5 111 CURVE SMOOTH",
"175.167 47 OFFCURVE",
"125 4 OFFCURVE",
"81 4 CURVE SMOOTH",
"57.667 4 OFFCURVE",
"46 18 OFFCURVE",
"46 46 CURVE SMOOTH",
"46 82 OFFCURVE",
"64.667 118.5 OFFCURVE",
"98 164.5 CURVE SMOOTH",
"125.247 202.101 OFFCURVE",
"191.764 284.293 OFFCURVE",
"235 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 7 69 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 7 57 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 9 29 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 69 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 5 166 5 182 5 198 5 214 5 230 5 246 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 5 22 5 38 5 54 5 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 5 85 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
13 69 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 18 166 18 182 18 198 18 214 18 230 18 246 18 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 18 22 18 38 18 54 18 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 18 85 18 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 29 138 29 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 29 169 29 185 29 201 29 217 29 233 29 249 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 105 29 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
49 29 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
61 57 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
66 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
31 46 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 46 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 46 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 46 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 667;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"620 269 LINE",
"596.169 226.837 OFFCURVE",
"521.563 142.516 OFFCURVE",
"479 103.5 CURVE SMOOTH",
"435.754 63.858 OFFCURVE",
"354.035 8 OFFCURVE",
"313 8 CURVE SMOOTH",
"278.333 8 OFFCURVE",
"264 29.333 OFFCURVE",
"264 68 CURVE SMOOTH",
"264 116.228 OFFCURVE",
"302.347 189.591 OFFCURVE",
"343.5 239.5 CURVE SMOOTH",
"385.044 289.883 OFFCURVE",
"443.17 340 OFFCURVE",
"492 340 CURVE SMOOTH",
"510.667 340 OFFCURVE",
"520 330 OFFCURVE",
"520 310 CURVE SMOOTH",
"520 296.667 OFFCURVE",
"513.667 281.667 OFFCURVE",
"507 263 CURVE",
"513.667 261.667 OFFCURVE",
"518.333 261 OFFCURVE",
"521 261 CURVE SMOOTH",
"549 261 OFFCURVE",
"568 280.333 OFFCURVE",
"568 299 CURVE SMOOTH",
"568 328.333 OFFCURVE",
"541.667 352 OFFCURVE",
"499 352 CURVE SMOOTH",
"435.976 352 OFFCURVE",
"371.882 306.789 OFFCURVE",
"337 269 CURVE",
"337 319.127 OFFCURVE",
"303.033 360 OFFCURVE",
"247 360 CURVE SMOOTH",
"183.486 360 OFFCURVE",
"151.071 315.363 OFFCURVE",
"118 263 CURVE",
"127 257 LINE",
"150.906 292.858 OFFCURVE",
"186.054 348 OFFCURVE",
"236 348 CURVE SMOOTH",
"268 348 OFFCURVE",
"283 323 OFFCURVE",
"283 291 CURVE SMOOTH",
"283 246.827 OFFCURVE",
"235.99 153.696 OFFCURVE",
"202 110.5 CURVE SMOOTH",
"159.623 56.645 OFFCURVE",
"96.198 4 OFFCURVE",
"42 4 CURVE SMOOTH",
"-4.667 4 OFFCURVE",
"-38 24.667 OFFCURVE",
"-38 62 CURVE SMOOTH",
"-38 72.667 OFFCURVE",
"-34 81.333 OFFCURVE",
"-26 88 CURVE",
"-22 78.667 OFFCURVE",
"-13.667 74 OFFCURVE",
"-1 74 CURVE SMOOTH",
"17.667 74 OFFCURVE",
"28 87.667 OFFCURVE",
"28 105 CURVE SMOOTH",
"28 122.333 OFFCURVE",
"18.333 138 OFFCURVE",
"-7 138 CURVE SMOOTH",
"-35 138 OFFCURVE",
"-58 110.667 OFFCURVE",
"-58 76 CURVE SMOOTH",
"-58 25.333 OFFCURVE",
"-20.667 -8 OFFCURVE",
"42 -8 CURVE SMOOTH",
"112.537 -8 OFFCURVE",
"182 44.562 OFFCURVE",
"225 101 CURVE",
"227 99 LINE",
"219.667 84.333 OFFCURVE",
"216 68.667 OFFCURVE",
"216 52 CURVE SMOOTH",
"216 17.333 OFFCURVE",
"242 -8 OFFCURVE",
"290 -8 CURVE SMOOTH",
"401.939 -8 OFFCURVE",
"569.031 161.465 OFFCURVE",
"628 266 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
32 5 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 7 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 4 42 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 7 77 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 86 166 86 182 86 198 86 214 86 230 86 246 86 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 86 22 86 38 86 54 86 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 86 85 86 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
11 8 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 19 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 32 166 32 182 32 198 32 214 32 230 32 246 32 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 32 22 32 38 32 54 32 70 32 86 32 102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 32 22 32 38 32 54 32 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 32 85 32 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
122 42 138 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 42 169 42 185 42 201 42 217 42 233 42 249 42 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 42 25 42 41 42 57 42 73 42 89 42 105 42 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 77 90 77 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 77 169 77 185 77 201 77 217 77 233 77 249 77 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 77 25 77 41 77 57 77 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 1 72 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 22 167 22 183 22 199 22 215 22 231 22 247 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
102 22 118 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
11 16 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
28 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 16 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
61 72 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"165 344 LINE",
"115.219 271.32 OFFCURVE",
"45.813 175.68 OFFCURVE",
"21 139 CURVE SMOOTH",
"-9.667 93.667 OFFCURVE",
"-23 66.667 OFFCURVE",
"-23 40 CURVE SMOOTH",
"-23 10.667 OFFCURVE",
"-5.667 -8 OFFCURVE",
"37 -8 CURVE SMOOTH",
"120.899 -8 OFFCURVE",
"201.972 84.154 OFFCURVE",
"249 140 CURVE",
"251 138 LINE",
"223.895 96.213 OFFCURVE",
"173.088 12.538 OFFCURVE",
"137 -40.5 CURVE SMOOTH",
"115 -72.833 OFFCURVE",
"91.667 -104.167 OFFCURVE",
"67 -134.5 CURVE SMOOTH",
"17.667 -195.167 OFFCURVE",
"-36.333 -244.667 OFFCURVE",
"-95 -274 CURVE SMOOTH",
"-124.333 -288.667 OFFCURVE",
"-154.667 -296 OFFCURVE",
"-186 -296 CURVE SMOOTH",
"-245.829 -296 OFFCURVE",
"-301 -256.077 OFFCURVE",
"-301 -192 CURVE SMOOTH",
"-301 -142.667 OFFCURVE",
"-279 -108.667 OFFCURVE",
"-231 -98 CURVE",
"-231 -95 LINE",
"-296.333 -95 OFFCURVE",
"-349 -125.667 OFFCURVE",
"-349 -195 CURVE SMOOTH",
"-349 -262.262 OFFCURVE",
"-270.932 -308 OFFCURVE",
"-187 -308 CURVE SMOOTH",
"-89.667 -308 OFFCURVE",
"-14.167 -267.5 OFFCURVE",
"50.5 -209.5 CURVE SMOOTH",
"115.167 -151.5 OFFCURVE",
"167 -74.667 OFFCURVE",
"219 -4 CURVE",
"344.333 16 OFFCURVE",
"472 107.333 OFFCURVE",
"568 254 CURVE",
"561 257 LINE",
"471.667 125 OFFCURVE",
"352.667 30.667 OFFCURVE",
"226 8 CURVE",
"263.333 64 OFFCURVE",
"299 120.5 OFFCURVE",
"333 177.5 CURVE SMOOTH",
"367 234.5 OFFCURVE",
"403.667 290 OFFCURVE",
"443 344 CURVE",
"381 344 LINE",
"326.333 256 OFFCURVE",
"265.333 172.5 OFFCURVE",
"208 110.5 CURVE SMOOTH",
"150.667 48.5 OFFCURVE",
"97.667 8 OFFCURVE",
"59 8 CURVE SMOOTH",
"40.333 8 OFFCURVE",
"31 17.667 OFFCURVE",
"31 37 CURVE SMOOTH",
"31 84.253 OFFCURVE",
"159.385 239.111 OFFCURVE",
"232 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 61 138 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 61 169 61 185 61 201 61 217 61 233 61 249 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 61 25 61 41 61 57 61 73 61 89 61 105 61 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
5 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
37 33 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 7 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 40 166 40 182 40 198 40 214 40 230 40 246 40 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 40 22 40 38 40 54 40 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 40 85 40 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
36 28 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
16 58 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
53 58 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"514 267 LINE",
"452.048 162.158 OFFCURVE",
"338.887 24 OFFCURVE",
"262 24 CURVE SMOOTH",
"231.821 24 OFFCURVE",
"182.98 66 OFFCURVE",
"134 66 CURVE SMOOTH",
"111.333 66 OFFCURVE",
"86.667 58.667 OFFCURVE",
"60 48 CURVE",
"58 50 LINE",
"87.333 68.667 OFFCURVE",
"140.5 107 OFFCURVE",
"198.5 151 CURVE SMOOTH",
"227.5 173 OFFCURVE",
"256.667 195.833 OFFCURVE",
"286 219.5 CURVE SMOOTH",
"315.881 243.609 OFFCURVE",
"448 335.167 OFFCURVE",
"448 360 CURVE SMOOTH",
"448 365.333 OFFCURVE",
"446 368 OFFCURVE",
"442 368 CURVE SMOOTH",
"427.484 368 OFFCURVE",
"393.885 320 OFFCURVE",
"355 320 CURVE SMOOTH",
"324.866 320 OFFCURVE",
"279.205 352 OFFCURVE",
"229 352 CURVE SMOOTH",
"168.493 352 OFFCURVE",
"146.627 309.347 OFFCURVE",
"115 254 CURVE",
"122 251 LINE",
"142.391 280.13 OFFCURVE",
"162.096 320 OFFCURVE",
"193 320 CURVE SMOOTH",
"225.686 320 OFFCURVE",
"277.947 288 OFFCURVE",
"304 288 CURVE SMOOTH",
"332 288 OFFCURVE",
"363 298.667 OFFCURVE",
"379 312 CURVE",
"381 310 LINE",
"289 234 OFFCURVE",
"191.667 160 OFFCURVE",
"117 104 CURVE SMOOTH",
"63.253 63.69 OFFCURVE",
"-10 11.164 OFFCURVE",
"-10 1 CURVE SMOOTH",
"-10 -3.667 OFFCURVE",
"-8 -6 OFFCURVE",
"-4 -6 CURVE SMOOTH",
"12.185 -6 OFFCURVE",
"44.927 40 OFFCURVE",
"72 40 CURVE SMOOTH",
"129.063 40 OFFCURVE",
"166.937 -8 OFFCURVE",
"224 -8 CURVE SMOOTH",
"325.719 -8 OFFCURVE",
"464.367 158.936 OFFCURVE",
"519 263 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
65 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 3 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
26 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 47 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
62 10 65 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 70 167 70 183 70 199 70 215 70 231 70 247 70 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 70 23 70 39 70 55 70 71 70 87 70 103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
7 70 23 70 39 70 55 70 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
70 70 86 70 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"408 543 LINE SMOOTH",
"463.469 632.232 OFFCURVE",
"508.855 684 OFFCURVE",
"579 684 CURVE",
"587 696 LINE",
"496.432 696 OFFCURVE",
"430.619 659.111 OFFCURVE",
"354 537 CURVE SMOOTH",
"226 335 LINE SMOOTH",
"181.503 264.328 OFFCURVE",
"142.7 225.607 OFFCURVE",
"68 205 CURVE",
"89.333 195.667 OFFCURVE",
"101 184.667 OFFCURVE",
"101 162 CURVE SMOOTH",
"101 139.333 OFFCURVE",
"88.667 113.667 OFFCURVE",
"62 75 CURVE",
"-65 -127 LINE SMOOTH",
"-91.667 -169.667 OFFCURVE",
"-111 -207.333 OFFCURVE",
"-111 -234 CURVE SMOOTH",
"-111 -260.667 OFFCURVE",
"-90.333 -286 OFFCURVE",
"-33 -286 CURVE",
"-24 -274 LINE",
"-46.667 -274 OFFCURVE",
"-65 -254.667 OFFCURVE",
"-65 -236 CURVE SMOOTH",
"-65 -213.333 OFFCURVE",
"-49.667 -182.333 OFFCURVE",
"-19 -133 CURVE SMOOTH",
"102 58 LINE SMOOTH",
"131.333 104.667 OFFCURVE",
"147 132 OFFCURVE",
"147 160 CURVE SMOOTH",
"147 182 OFFCURVE",
"135.667 196.667 OFFCURVE",
"113 204 CURVE",
"114 206 LINE",
"197.247 227.483 OFFCURVE",
"236.145 271.703 OFFCURVE",
"287 352 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 29 90 29 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 29 169 29 185 29 201 29 217 29 233 29 249 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 29 25 29 41 29 57 29 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 2 values pushed */
8 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
6 29 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 15 166 15 182 15 198 15 214 15 230 15 246 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 15 22 15 38 15 54 15 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 15 85 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
18 22 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 22 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
6 19 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
18 19 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
32 19 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-13 -133 LINE SMOOTH",
"-68.469 -222.232 OFFCURVE",
"-113.855 -274 OFFCURVE",
"-184 -274 CURVE",
"-192 -286 LINE",
"-101.432 -286 OFFCURVE",
"-35.619 -249.111 OFFCURVE",
"41 -127 CURVE SMOOTH",
"169 75 LINE SMOOTH",
"214.065 146.574 OFFCURVE",
"251.481 183.423 OFFCURVE",
"327 205 CURVE",
"305.667 214.333 OFFCURVE",
"294 225.333 OFFCURVE",
"294 248 CURVE SMOOTH",
"294 270.667 OFFCURVE",
"306.333 296.333 OFFCURVE",
"333 335 CURVE",
"460 537 LINE SMOOTH",
"486.667 579.667 OFFCURVE",
"506 617.333 OFFCURVE",
"506 644 CURVE SMOOTH",
"506 670.667 OFFCURVE",
"485.333 696 OFFCURVE",
"428 696 CURVE",
"419 684 LINE",
"441.667 684 OFFCURVE",
"460 664.667 OFFCURVE",
"460 646 CURVE SMOOTH",
"460 623.333 OFFCURVE",
"444.667 592.333 OFFCURVE",
"414 543 CURVE SMOOTH",
"293 352 LINE SMOOTH",
"263.667 305.333 OFFCURVE",
"248 278 OFFCURVE",
"248 250 CURVE SMOOTH",
"248 228 OFFCURVE",
"259.333 213.333 OFFCURVE",
"282 206 CURVE",
"281 204 LINE",
"199.967 185.702 OFFCURVE",
"156.693 134.884 OFFCURVE",
"108 58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
29 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 29 166 29 182 29 198 29 214 29 230 29 246 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 29 22 29 38 29 54 29 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 29 85 29 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
6 8 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 15 90 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 15 25 15 41 15 57 15 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
18 8 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 8 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
6 43 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
18 43 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
32 43 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"103 147 LINE",
"110.333 157 OFFCURVE",
"118.667 165.667 OFFCURVE",
"128 173 CURVE SMOOTH",
"144 186.333 OFFCURVE",
"164.333 200 OFFCURVE",
"191 200 CURVE SMOOTH",
"274.248 200 OFFCURVE",
"364.567 123 OFFCURVE",
"439 123 CURVE SMOOTH",
"484.333 123 OFFCURVE",
"522.667 146.667 OFFCURVE",
"552 172 CURVE SMOOTH",
"568.667 186 OFFCURVE",
"584 202.333 OFFCURVE",
"598 221 CURVE",
"590 227 LINE",
"580.667 213.667 OFFCURVE",
"570.667 201.667 OFFCURVE",
"560 191 CURVE SMOOTH",
"541.333 172.333 OFFCURVE",
"518.333 156 OFFCURVE",
"493 156 CURVE SMOOTH",
"419.984 156 OFFCURVE",
"330.354 236 OFFCURVE",
"248 236 CURVE SMOOTH",
"205.333 236 OFFCURVE",
"168 215.333 OFFCURVE",
"140 194 CURVE SMOOTH",
"123.333 182 OFFCURVE",
"108.333 168.333 OFFCURVE",
"95 153 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
10 3 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 3 26 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = dagger;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"456 472 LINE",
"565 648 LINE",
"575.667 662.667 OFFCURVE",
"584 678 OFFCURVE",
"584 690 CURVE SMOOTH",
"584 702 OFFCURVE",
"576.667 712 OFFCURVE",
"562 712 CURVE SMOOTH",
"552 712 OFFCURVE",
"542.667 707 OFFCURVE",
"534 697 CURVE SMOOTH",
"525.333 687 OFFCURVE",
"515.333 671.333 OFFCURVE",
"504 650 CURVE SMOOTH",
"405 472 LINE",
"207 472 LINE",
"201 460 LINE",
"397 460 LINE",
"90 -74 LINE",
"117 -74 LINE",
"447 460 LINE",
"652 460 LINE",
"658 472 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
0 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
19 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"425.268 252 OFFCURVE",
"488 314.932 OFFCURVE",
"488 395 CURVE SMOOTH",
"488 475.068 OFFCURVE",
"425.268 538 OFFCURVE",
"346 538 CURVE SMOOTH",
"266.732 538 OFFCURVE",
"204 475.068 OFFCURVE",
"204 395 CURVE SMOOTH",
"204 314.932 OFFCURVE",
"266.732 252 OFFCURVE",
"346 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"407.103 510 OFFCURVE",
"456 457.32 OFFCURVE",
"456 395 CURVE SMOOTH",
"456 334.166 OFFCURVE",
"407.555 280 OFFCURVE",
"346 280 CURVE SMOOTH",
"284.445 280 OFFCURVE",
"236 334.166 OFFCURVE",
"236 395 CURVE SMOOTH",
"236 457.32 OFFCURVE",
"284.897 510 OFFCURVE",
"346 510 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 35 90 35 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 35 169 35 185 35 201 35 217 35 233 35 249 35 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 35 25 35 41 35 57 35 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 25 166 25 182 25 198 25 214 25 230 25 246 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 25 22 25 38 25 54 25 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 25 85 25 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
30 2 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 2 20 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 400;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"448 458 LINE",
"389 352 LINE",
"262.147 344.072 OFFCURVE",
"110 193.691 OFFCURVE",
"110 72 CURVE SMOOTH",
"110 20 OFFCURVE",
"136.667 -6.667 OFFCURVE",
"190 -8 CURVE",
"124 -126 LINE",
"132 -128 LINE",
"199 -8 LINE",
"266.747 -8 OFFCURVE",
"367.03 48.552 OFFCURVE",
"420 99 CURVE",
"415 105 LINE",
"378.324 73.967 OFFCURVE",
"288.072 12 OFFCURVE",
"231 12 CURVE SMOOTH",
"224.333 12 OFFCURVE",
"218 13 OFFCURVE",
"212 15 CURVE",
"391 338 LINE",
"404.333 335.333 OFFCURVE",
"410 320.667 OFFCURVE",
"410 302 CURVE SMOOTH",
"410 288.667 OFFCURVE",
"406.667 278.667 OFFCURVE",
"404 268 CURVE",
"409.333 266.667 OFFCURVE",
"414 266 OFFCURVE",
"418 266 CURVE SMOOTH",
"444.667 266 OFFCURVE",
"464 288 OFFCURVE",
"464 308 CURVE SMOOTH",
"464 336 OFFCURVE",
"437.667 350.667 OFFCURVE",
"399 352 CURVE",
"456 456 LINE"
);
},
{
closed = 1;
nodes = (
"204 18 LINE",
"184 28.667 OFFCURVE",
"174 50.333 OFFCURVE",
"174 77 CURVE SMOOTH",
"174 162.117 OFFCURVE",
"285.944 340 OFFCURVE",
"383 340 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 12 138 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 12 169 12 185 12 201 12 217 12 233 12 249 12 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
1 34 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 46 166 46 182 46 198 46 214 46 230 46 246 46 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 46 22 46 38 46 54 46 70 46 86 46 102 46 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 46 133 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
31 34 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
32 34 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
41 34 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
1 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 18 167 18 183 18 199 18 215 18 231 18 247 18 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
31 30 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"447 266 LINE",
"403.766 179.532 OFFCURVE",
"351.535 92.603 OFFCURVE",
"270 40 CURVE",
"184.036 68.655 OFFCURVE",
"84.833 102 OFFCURVE",
"12 102 CURVE SMOOTH",
"-33.333 102 OFFCURVE",
"-64 85 OFFCURVE",
"-64 53 CURVE SMOOTH",
"-64 9.148 OFFCURVE",
"15.5 -10 OFFCURVE",
"85 -10 CURVE SMOOTH",
"151.667 -10 OFFCURVE",
"203.667 4 OFFCURVE",
"249 20 CURVE",
"300.878 -0.175 OFFCURVE",
"370.779 -28 OFFCURVE",
"435 -28 CURVE SMOOTH",
"557.667 -28 OFFCURVE",
"651.333 30.333 OFFCURVE",
"714 141 CURVE",
"707 145 LINE",
"651 50.333 OFFCURVE",
"579 0 OFFCURVE",
"467 0 CURVE SMOOTH",
"404.333 0 OFFCURVE",
"342.333 9.333 OFFCURVE",
"285 36 CURVE",
"382.333 86.667 OFFCURVE",
"459 168.667 OFFCURVE",
"507 266 CURVE",
"756 266 LINE",
"756 278 LINE",
"512 278 LINE",
"529.567 311.962 OFFCURVE",
"563.533 383.529 OFFCURVE",
"590 431.5 CURVE SMOOTH",
"606 460.5 OFFCURVE",
"623.167 489.5 OFFCURVE",
"641.5 518.5 CURVE SMOOTH",
"678.167 576.5 OFFCURVE",
"720.833 623 OFFCURVE",
"769.5 651 CURVE SMOOTH",
"793.833 665 OFFCURVE",
"819.333 672 OFFCURVE",
"846 672 CURVE SMOOTH",
"910 672 OFFCURVE",
"946 640 OFFCURVE",
"946 572 CURVE SMOOTH",
"946 489.423 OFFCURVE",
"866.662 368 OFFCURVE",
"784 368 CURVE SMOOTH",
"745.333 368 OFFCURVE",
"713 391 OFFCURVE",
"713 431 CURVE SMOOTH",
"713 501.428 OFFCURVE",
"787.751 560.584 OFFCURVE",
"849 581 CURVE",
"847 587 LINE",
"775.644 562.3 OFFCURVE",
"701 506.708 OFFCURVE",
"701 430 CURVE SMOOTH",
"701 383.333 OFFCURVE",
"738.333 356 OFFCURVE",
"785 356 CURVE SMOOTH",
"879.617 356 OFFCURVE",
"968 459.039 OFFCURVE",
"968 561 CURVE SMOOTH",
"968 630.333 OFFCURVE",
"924.667 684 OFFCURVE",
"842 684 CURVE SMOOTH",
"775.333 684 OFFCURVE",
"717.333 655.833 OFFCURVE",
"668 612.5 CURVE SMOOTH",
"643.333 590.833 OFFCURVE",
"620.5 565.833 OFFCURVE",
"599.5 537.5 CURVE SMOOTH",
"557.5 480.833 OFFCURVE",
"521.333 419.833 OFFCURVE",
"492 360.5 CURVE SMOOTH",
"477.333 330.833 OFFCURVE",
"464 303.333 OFFCURVE",
"452 278 CURVE",
"166 278 LINE",
"166 266 LINE"
);
},
{
closed = 1;
nodes = (
"44.242 90 OFFCURVE",
"167.968 53.601 OFFCURVE",
"234 24 CURVE",
"187.333 9.333 OFFCURVE",
"142.667 2 OFFCURVE",
"84 2 CURVE SMOOTH",
"42 2 OFFCURVE",
"8.833 7 OFFCURVE",
"-15.5 17 CURVE SMOOTH",
"-39.833 27 OFFCURVE",
"-52 39 OFFCURVE",
"-52 53 CURVE SMOOTH",
"-52 78.333 OFFCURVE",
"-28.667 90 OFFCURVE",
"2 90 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 5 39 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 39 90 39 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 39 169 39 185 39 201 39 217 39 233 39 249 39 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 39 25 39 41 39 57 39 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
98 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
34 1 51 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
49 51 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 81 167 81 183 81 199 81 215 81 231 81 247 81 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 81 23 81 39 81 55 81 71 81 87 81 103 81 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 81 134 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
55 98 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
91 73 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
101 98 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 741;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = section;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"419.899 712 OFFCURVE",
"337 649.395 OFFCURVE",
"337 555 CURVE SMOOTH",
"337 539 OFFCURVE",
"340.667 519.667 OFFCURVE",
"350 501 CURVE",
"257.746 498.204 OFFCURVE",
"169 445.135 OFFCURVE",
"169 347 CURVE SMOOTH",
"169 254.693 OFFCURVE",
"302 146.178 OFFCURVE",
"302 55 CURVE SMOOTH",
"302 -30.309 OFFCURVE",
"234.145 -72 OFFCURVE",
"155 -72 CURVE SMOOTH",
"88.333 -72 OFFCURVE",
"43 -30 OFFCURVE",
"43 30 CURVE SMOOTH",
"43 76.667 OFFCURVE",
"58.333 110 OFFCURVE",
"101 134 CURVE",
"96.333 138 OFFCURVE",
"89.667 140 OFFCURVE",
"81 140 CURVE SMOOTH",
"28.752 140 OFFCURVE",
"-17 99.403 OFFCURVE",
"-17 44 CURVE SMOOTH",
"-17 -39.288 OFFCURVE",
"57.479 -84 OFFCURVE",
"151 -84 CURVE SMOOTH",
"257.504 -84 OFFCURVE",
"350 -24.175 OFFCURVE",
"350 71 CURVE SMOOTH",
"350 88.333 OFFCURVE",
"348 105.333 OFFCURVE",
"344 122 CURVE",
"436.346 135.192 OFFCURVE",
"521 196.806 OFFCURVE",
"521 283 CURVE SMOOTH",
"521 377.148 OFFCURVE",
"391 478.852 OFFCURVE",
"391 573 CURVE SMOOTH",
"391 644.33 OFFCURVE",
"435.46 700 OFFCURVE",
"509 700 CURVE SMOOTH",
"566.333 700 OFFCURVE",
"608 672.667 OFFCURVE",
"608 610 CURVE SMOOTH",
"608 568.667 OFFCURVE",
"592.333 552 OFFCURVE",
"583 540 CURVE",
"588.333 538.667 OFFCURVE",
"592.667 538 OFFCURVE",
"596 538 CURVE SMOOTH",
"629.677 538 OFFCURVE",
"656 572.923 OFFCURVE",
"656 606 CURVE SMOOTH",
"656 682.722 OFFCURVE",
"585.592 712 OFFCURVE",
"513 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"223 438 OFFCURVE",
"277.333 489 OFFCURVE",
"356 489 CURVE",
"397.317 408.948 OFFCURVE",
"467 334.489 OFFCURVE",
"467 263 CURVE SMOOTH",
"467 187 OFFCURVE",
"411 146 OFFCURVE",
"339 134 CURVE",
"302.118 234.588 OFFCURVE",
"223 267.621 OFFCURVE",
"223 366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
55 8 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 4 68 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 7 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 4 89 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 7 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 45 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 15 90 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 15 25 15 41 15 57 15 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 63 90 63 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 63 169 63 185 63 201 63 217 63 233 63 249 63 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 63 25 63 41 63 57 63 73 63 89 63 105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 63 25 63 41 63 57 63 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
76 63 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 76 138 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 76 169 76 185 76 201 76 217 76 233 76 249 76 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 76 25 76 41 76 57 76 73 76 89 76 105 76 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
23 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 45 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 55 166 55 182 55 198 55 214 55 230 55 246 55 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 55 22 55 38 55 54 55 70 55 86 55 102 55 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 55 133 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
73 76 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 81 166 81 182 81 198 81 214 81 230 81 246 81 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 81 22 81 38 81 54 81 70 81 86 81 102 81 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 81 133 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 89 138 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 89 169 89 185 89 201 89 217 89 233 89 249 89 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 89 25 89 41 89 57 89 73 89 89 89 105 89 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
50 40 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 10 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
52 40 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = bullet;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"208 252.14 OFFCURVE",
"286.14 174 OFFCURVE",
"382 174 CURVE SMOOTH",
"477.86 174 OFFCURVE",
"556 252.14 OFFCURVE",
"556 348 CURVE SMOOTH",
"556 443.86 OFFCURVE",
"477.86 522 OFFCURVE",
"382 522 CURVE SMOOTH",
"286.14 522 OFFCURVE",
"208 443.86 OFFCURVE",
"208 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"148 -166 LINE",
"649 666 LINE",
"705 666 LINE",
"204 -166 LINE",
"256 -166 LINE",
"723 610 LINE SMOOTH",
"755.979 663.273 OFFCURVE",
"796.017 674 OFFCURVE",
"847 674 CURVE",
"860 696 LINE",
"638 696 LINE SMOOTH",
"508.667 696 OFFCURVE",
"411.167 644 OFFCURVE",
"346.5 580 CURVE SMOOTH",
"281.833 516 OFFCURVE",
"250 440 OFFCURVE",
"250 392 CURVE SMOOTH",
"250 321.333 OFFCURVE",
"284 286 OFFCURVE",
"368 286 CURVE",
"96 -166 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
10 2 11 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = registered;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"739.539 156 OFFCURVE",
"889.178 259.843 OFFCURVE",
"942 347 CURVE SMOOTH",
"991.333 431 OFFCURVE",
"992.5 519 OFFCURVE",
"950.5 587 CURVE SMOOTH",
"908.5 655 OFFCURVE",
"822.333 701 OFFCURVE",
"701 701 CURVE SMOOTH",
"587.667 701 OFFCURVE",
"477 676.333 OFFCURVE",
"381 623 CURVE SMOOTH",
"285 569.667 OFFCURVE",
"203 489.667 OFFCURVE",
"147 379 CURVE SMOOTH",
"116.333 319 OFFCURVE",
"103.333 250.5 OFFCURVE",
"110 184.5 CURVE SMOOTH",
"113.333 151.5 OFFCURVE",
"121.833 120 OFFCURVE",
"135.5 90 CURVE SMOOTH",
"162.833 30 OFFCURVE",
"213.167 -17.167 OFFCURVE",
"288.5 -44.5 CURVE SMOOTH",
"326.167 -58.167 OFFCURVE",
"370.667 -65 OFFCURVE",
"422 -65 CURVE SMOOTH",
"568.667 -65 OFFCURVE",
"707.5 -7 OFFCURVE",
"821.5 73 CURVE SMOOTH",
"935.5 153 OFFCURVE",
"1024 255.333 OFFCURVE",
"1072 342 CURVE",
"1064 346 LINE",
"1006.667 250 OFFCURVE",
"914.833 150 OFFCURVE",
"803.5 74 CURVE SMOOTH",
"692.167 -2 OFFCURVE",
"562.333 -54 OFFCURVE",
"429 -54 CURVE SMOOTH",
"309 -54 OFFCURVE",
"228.333 9 OFFCURVE",
"191 97 CURVE SMOOTH",
"153.667 185 OFFCURVE",
"159.667 298.667 OFFCURVE",
"213 400 CURVE SMOOTH",
"257 482.667 OFFCURVE",
"317.667 555 OFFCURVE",
"395 607 CURVE SMOOTH",
"472.333 659 OFFCURVE",
"566 690 OFFCURVE",
"674 690 CURVE SMOOTH",
"754 690 OFFCURVE",
"813.833 665.333 OFFCURVE",
"854.5 628 CURVE SMOOTH",
"874.833 609.333 OFFCURVE",
"890.5 587.833 OFFCURVE",
"901.5 563.5 CURVE SMOOTH",
"923.5 514.833 OFFCURVE",
"928.833 461.167 OFFCURVE",
"917.5 408.5 CURVE SMOOTH",
"911.833 382.167 OFFCURVE",
"902.667 358 OFFCURVE",
"890 336 CURVE SMOOTH",
"833.042 236.323 OFFCURVE",
"732.868 168 OFFCURVE",
"664 168 CURVE SMOOTH",
"627.37 168 OFFCURVE",
"625.432 201.151 OFFCURVE",
"639 231 CURVE",
"648.333 253.667 OFFCURVE",
"652 268 OFFCURVE",
"652 284 CURVE SMOOTH",
"652 306.667 OFFCURVE",
"630 327.333 OFFCURVE",
"606 338 CURVE",
"606 339 LINE",
"666.902 339 OFFCURVE",
"741 365.119 OFFCURVE",
"741 424 CURVE SMOOTH",
"741 461.333 OFFCURVE",
"712.667 482.333 OFFCURVE",
"686 497 CURVE",
"700.667 503.667 OFFCURVE",
"716.333 509.333 OFFCURVE",
"731 512 CURVE",
"730 516 LINE",
"715.333 516 OFFCURVE",
"686.667 506.333 OFFCURVE",
"676 501 CURVE",
"653.333 513 OFFCURVE",
"625 515 OFFCURVE",
"597 515 CURVE SMOOTH",
"479.771 515 OFFCURVE",
"323 434.893 OFFCURVE",
"323 334 CURVE SMOOTH",
"323 292.667 OFFCURVE",
"354.333 267 OFFCURVE",
"397 267 CURVE SMOOTH",
"452.867 267 OFFCURVE",
"475 320.936 OFFCURVE",
"475 378 CURVE",
"470 378 LINE",
"470 327.515 OFFCURVE",
"450.821 272 OFFCURVE",
"397 272 CURVE SMOOTH",
"370.333 272 OFFCURVE",
"357 293.667 OFFCURVE",
"357 331 CURVE SMOOTH",
"357 439.499 OFFCURVE",
"491.891 509 OFFCURVE",
"595 509 CURVE SMOOTH",
"621.667 509 OFFCURVE",
"645.333 506.667 OFFCURVE",
"668 496 CURVE",
"617.333 472 OFFCURVE",
"576 427.333 OFFCURVE",
"540 378 CURVE SMOOTH",
"522 353.333 OFFCURVE",
"505.333 328.167 OFFCURVE",
"490 302.5 CURVE SMOOTH",
"457.23 247.647 OFFCURVE",
"405.713 162 OFFCURVE",
"370 162 CURVE SMOOTH",
"355.333 162 OFFCURVE",
"341.667 169.667 OFFCURVE",
"339 179 CURVE",
"349.667 177.667 OFFCURVE",
"354 188.333 OFFCURVE",
"354 195 CURVE SMOOTH",
"354 203 OFFCURVE",
"347 211 OFFCURVE",
"339 211 CURVE SMOOTH",
"325 211 OFFCURVE",
"318 204.333 OFFCURVE",
"318 191 CURVE SMOOTH",
"318 165.667 OFFCURVE",
"342.333 156 OFFCURVE",
"365 156 CURVE SMOOTH",
"424.38 156 OFFCURVE",
"506.395 244.767 OFFCURVE",
"541 301 CURVE SMOOTH",
"575.408 356.913 OFFCURVE",
"635.364 462.194 OFFCURVE",
"678 490 CURVE",
"691.333 479.333 OFFCURVE",
"697 462.667 OFFCURVE",
"697 448 CURVE SMOOTH",
"697 392.135 OFFCURVE",
"657.762 344 OFFCURVE",
"601 344 CURVE SMOOTH",
"597.667 344 OFFCURVE",
"594.167 344.333 OFFCURVE",
"590.5 345 CURVE SMOOTH",
"586.833 345.667 OFFCURVE",
"583.333 346 OFFCURVE",
"580 346 CURVE",
"579 342 LINE",
"600.333 339.333 OFFCURVE",
"615 334.333 OFFCURVE",
"615 309 CURVE SMOOTH",
"615 274.343 OFFCURVE",
"584 234.481 OFFCURVE",
"584 203 CURVE",
"582.667 179 OFFCURVE",
"597.333 156 OFFCURVE",
"640 156 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
59 5 76 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
103 67 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
94 6 20 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 103 166 103 182 103 198 103 214 103 230 103 246 103 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
6 103 22 103 38 103 54 103 70 103 86 103 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
101 103 117 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
103 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
103 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
74 20 90 20 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 20 169 20 185 20 201 20 217 20 233 20 249 20 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 20 25 20 41 20 57 20 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 15 values pushed */
150 59 166 59 182 59 198 59 214 59 230 59 246 59 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 59 22 59 38 59 54 59 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 59 85 59 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 76 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
51 33 94 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
88 20 94 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
91 33 94 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
100 67 103 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
167 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
111 144 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
156 54 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 1 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 30 62 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
88 54 156 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
100 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 800;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"431.799 142 OFFCURVE",
"402 175.803 OFFCURVE",
"402 231 CURVE SMOOTH",
"402 378.183 OFFCURVE",
"541.655 496 OFFCURVE",
"656 496 CURVE SMOOTH",
"685.333 496 OFFCURVE",
"705 487 OFFCURVE",
"705 455 CURVE SMOOTH",
"705 403.575 OFFCURVE",
"657.172 358 OFFCURVE",
"614 358 CURVE SMOOTH",
"590 358 OFFCURVE",
"565 365.667 OFFCURVE",
"565 399 CURVE SMOOTH",
"565 406 LINE SMOOTH",
"565 408.667 OFFCURVE",
"565.333 411 OFFCURVE",
"566 413 CURVE",
"559 413 LINE",
"558.333 411 OFFCURVE",
"558 408.333 OFFCURVE",
"558 405 CURVE SMOOTH",
"558 398 LINE",
"559.333 363.333 OFFCURVE",
"583.333 351 OFFCURVE",
"614 351 CURVE SMOOTH",
"670.069 351 OFFCURVE",
"735 391.15 OFFCURVE",
"735 444 CURVE SMOOTH",
"735 482.667 OFFCURVE",
"702 502 OFFCURVE",
"654 502 CURVE SMOOTH",
"528.901 502 OFFCURVE",
"355 379.138 OFFCURVE",
"355 238 CURVE SMOOTH",
"355 171.333 OFFCURVE",
"392.667 135 OFFCURVE",
"494 135 CURVE SMOOTH",
"550 135 OFFCURVE",
"636 153 OFFCURVE",
"720 193 CURVE SMOOTH",
"804 233 OFFCURVE",
"887.333 293.667 OFFCURVE",
"938 379 CURVE SMOOTH",
"992.667 471 OFFCURVE",
"994.667 550.5 OFFCURVE",
"952 608.5 CURVE SMOOTH",
"909.333 666.5 OFFCURVE",
"822.333 701 OFFCURVE",
"701 701 CURVE SMOOTH",
"587.667 701 OFFCURVE",
"477 676.333 OFFCURVE",
"381 623 CURVE SMOOTH",
"285 569.667 OFFCURVE",
"203 489.667 OFFCURVE",
"147 379 CURVE SMOOTH",
"116.333 319 OFFCURVE",
"103.333 250.5 OFFCURVE",
"110 184.5 CURVE SMOOTH",
"113.333 151.5 OFFCURVE",
"121.833 120 OFFCURVE",
"135.5 90 CURVE SMOOTH",
"162.833 30 OFFCURVE",
"213.167 -17.167 OFFCURVE",
"288.5 -44.5 CURVE SMOOTH",
"326.167 -58.167 OFFCURVE",
"370.667 -65 OFFCURVE",
"422 -65 CURVE SMOOTH",
"568.667 -65 OFFCURVE",
"707.5 -7 OFFCURVE",
"821.5 73 CURVE SMOOTH",
"935.5 153 OFFCURVE",
"1024 255.333 OFFCURVE",
"1072 342 CURVE",
"1064 346 LINE",
"1006.667 250 OFFCURVE",
"914.833 150 OFFCURVE",
"803.5 74 CURVE SMOOTH",
"692.167 -2 OFFCURVE",
"562.333 -54 OFFCURVE",
"429 -54 CURVE SMOOTH",
"309 -54 OFFCURVE",
"228.333 9 OFFCURVE",
"191 97 CURVE SMOOTH",
"153.667 185 OFFCURVE",
"159.667 298.667 OFFCURVE",
"213 400 CURVE SMOOTH",
"257 482.667 OFFCURVE",
"320.167 555 OFFCURVE",
"399.5 607 CURVE SMOOTH",
"478.833 659 OFFCURVE",
"571.333 690 OFFCURVE",
"674 690 CURVE SMOOTH",
"787.333 690 OFFCURVE",
"865 648.167 OFFCURVE",
"901 587.5 CURVE SMOOTH",
"937 526.833 OFFCURVE",
"932.667 445.333 OFFCURVE",
"886 368 CURVE SMOOTH",
"839.333 290.667 OFFCURVE",
"770.333 234.333 OFFCURVE",
"701 197 CURVE SMOOTH",
"631.667 159.667 OFFCURVE",
"561.333 142 OFFCURVE",
"516 142 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
95 7 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 5 87 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 87 90 87 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 87 169 87 185 87 201 87 217 87 233 87 249 87 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 87 25 87 41 87 57 87 73 87 89 87 105 87 121 87 137 87 153 87 169 87 185 87 201 87 217 87 233 87 249 87 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 87 25 87 41 87 57 87 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 95 166 95 182 95 198 95 214 95 230 95 246 95 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 95 22 95 38 95 54 95 70 95 86 95 102 95 118 95 134 95 150 95 166 95 182 95 198 95 214 95 230 95 246 95 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 95 22 95 38 95 54 95 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 95 85 95 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
69 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 14 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
43 90 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
105 0 121 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
152 0 168 0 184 0 200 0 216 0 232 0 248 0 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 800;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"471 593 LINE",
"471.667 589.667 OFFCURVE",
"472 586 OFFCURVE",
"472 582 CURVE SMOOTH",
"472 578 OFFCURVE",
"472 574.333 OFFCURVE",
"472 571 CURVE SMOOTH",
"472 514.367 OFFCURVE",
"408.984 465 OFFCURVE",
"336 465 CURVE SMOOTH",
"280 465 OFFCURVE",
"247 489.667 OFFCURVE",
"247 535 CURVE SMOOTH",
"247 573.667 OFFCURVE",
"274.333 608.833 OFFCURVE",
"325 633.5 CURVE SMOOTH",
"375.667 658.167 OFFCURVE",
"452 674 OFFCURVE",
"548 674 CURVE SMOOTH",
"565.333 674 OFFCURVE",
"584.167 673.167 OFFCURVE",
"604.5 671.5 CURVE SMOOTH",
"624.833 669.833 OFFCURVE",
"643.667 669 OFFCURVE",
"661 669 CURVE",
"661 668 LINE",
"577.694 652.38 OFFCURVE",
"520.808 559.688 OFFCURVE",
"469 475.5 CURVE SMOOTH",
"416.291 389.848 OFFCURVE",
"361.073 307 OFFCURVE",
"274 307 CURVE SMOOTH",
"230 307 OFFCURVE",
"194.667 325.667 OFFCURVE",
"192 363 CURVE",
"193.333 362.333 OFFCURVE",
"195.667 362 OFFCURVE",
"199 362 CURVE SMOOTH",
"208.333 362 OFFCURVE",
"218 369 OFFCURVE",
"218 381 CURVE SMOOTH",
"218 394.333 OFFCURVE",
"209.333 402 OFFCURVE",
"196 402 CURVE SMOOTH",
"178.667 402 OFFCURVE",
"169 388 OFFCURVE",
"169 372 CURVE SMOOTH",
"169 319.811 OFFCURVE",
"221.152 300 OFFCURVE",
"269 300 CURVE SMOOTH",
"371.267 300 OFFCURVE",
"445.425 380.375 OFFCURVE",
"483 443 CURVE",
"519.536 499.285 OFFCURVE",
"566.728 582.184 OFFCURVE",
"592 613.5 CURVE SMOOTH",
"622.667 651.5 OFFCURVE",
"655.667 670 OFFCURVE",
"709 670 CURVE SMOOTH",
"745.821 670 OFFCURVE",
"780 666.387 OFFCURVE",
"780 685 CURVE SMOOTH",
"780 694.333 OFFCURVE",
"770.333 701 OFFCURVE",
"761 701 CURVE SMOOTH",
"755.667 701 OFFCURVE",
"749.167 700.5 OFFCURVE",
"741.5 699.5 CURVE SMOOTH",
"733.833 698.5 OFFCURVE",
"724.667 698 OFFCURVE",
"714 698 CURVE SMOOTH",
"701.333 698 OFFCURVE",
"686.167 698.5 OFFCURVE",
"668.5 699.5 CURVE SMOOTH",
"650.833 700.5 OFFCURVE",
"631.333 701 OFFCURVE",
"610 701 CURVE SMOOTH",
"470 701 OFFCURVE",
"377.333 678.167 OFFCURVE",
"320 645.5 CURVE SMOOTH",
"262.667 612.833 OFFCURVE",
"240 571 OFFCURVE",
"240 535 CURVE SMOOTH",
"240 489.667 OFFCURVE",
"271.667 458 OFFCURVE",
"333 458 CURVE SMOOTH",
"413.241 458 OFFCURVE",
"478 509.204 OFFCURVE",
"478 572 CURVE SMOOTH",
"478 575.333 OFFCURVE",
"478 578.667 OFFCURVE",
"478 582 CURVE SMOOTH",
"478 586 OFFCURVE",
"478 589.667 OFFCURVE",
"478 593 CURVE"
);
},
{
closed = 1;
nodes = (
"1102 465 LINE",
"1055.333 365 OFFCURVE",
"974 314 OFFCURVE",
"858 314 CURVE",
"858 315 LINE",
"949.683 354.647 OFFCURVE",
"988.698 438.939 OFFCURVE",
"1015 512 CURVE",
"1031.858 549.088 OFFCURVE",
"1044.124 584.445 OFFCURVE",
"1069 627.5 CURVE SMOOTH",
"1090.976 665.535 OFFCURVE",
"1122.188 710 OFFCURVE",
"1149 710 CURVE SMOOTH",
"1154.333 710 OFFCURVE",
"1160.167 709.5 OFFCURVE",
"1166.5 708.5 CURVE SMOOTH",
"1172.833 707.5 OFFCURVE",
"1178.667 707 OFFCURVE",
"1184 707 CURVE SMOOTH",
"1189.333 707 OFFCURVE",
"1195 706 OFFCURVE",
"1195 714 CURVE SMOOTH",
"1195 720.667 OFFCURVE",
"1182 724 OFFCURVE",
"1170 724 CURVE SMOOTH",
"1140.667 724 OFFCURVE",
"1106.667 716.667 OFFCURVE",
"1064 690 CURVE SMOOTH",
"1021.333 663.333 OFFCURVE",
"971.667 615.667 OFFCURVE",
"913 533 CURVE SMOOTH",
"864.132 466.884 OFFCURVE",
"801.137 375.118 OFFCURVE",
"752 333 CURVE",
"751 334 LINE",
"781.667 375.333 OFFCURVE",
"800.667 427 OFFCURVE",
"818 479 CURVE SMOOTH",
"826.667 505 OFFCURVE",
"835 530.667 OFFCURVE",
"843 556 CURVE SMOOTH",
"860.246 610.613 OFFCURVE",
"915.739 699.318 OFFCURVE",
"972 717 CURVE",
"972 721 LINE",
"851.796 700.095 OFFCURVE",
"778.673 606.703 OFFCURVE",
"712 499 CURVE SMOOTH",
"660.363 414.503 OFFCURVE",
"604.768 311 OFFCURVE",
"538 311 CURVE SMOOTH",
"530 311 OFFCURVE",
"519.333 315 OFFCURVE",
"518 319 CURVE",
"524.667 321.667 OFFCURVE",
"527 329.667 OFFCURVE",
"527 335 CURVE SMOOTH",
"527 345.667 OFFCURVE",
"519.333 355 OFFCURVE",
"510 355 CURVE SMOOTH",
"499.333 355 OFFCURVE",
"490 346 OFFCURVE",
"490 334 CURVE SMOOTH",
"490 311.973 OFFCURVE",
"512.201 304 OFFCURVE",
"532 304 CURVE SMOOTH",
"610.596 304 OFFCURVE",
"656.452 396.377 OFFCURVE",
"709.5 481.5 CURVE SMOOTH",
"769.185 577.274 OFFCURVE",
"828.775 668.97 OFFCURVE",
"932 707 CURVE",
"934 705 LINE",
"882 678.333 OFFCURVE",
"849.5 640.167 OFFCURVE",
"827.5 595.5 CURVE SMOOTH",
"816.5 573.167 OFFCURVE",
"807.333 549.833 OFFCURVE",
"800 525.5 CURVE SMOOTH",
"788.253 486.52 OFFCURVE",
"768.239 417.718 OFFCURVE",
"755 378 CURVE SMOOTH",
"747 354 OFFCURVE",
"736.333 331.667 OFFCURVE",
"723 311 CURVE",
"727 304 LINE",
"793.123 351.882 OFFCURVE",
"865.112 451.323 OFFCURVE",
"909 516 CURVE",
"968.819 596.525 OFFCURVE",
"1057.715 701.214 OFFCURVE",
"1128 710 CURVE",
"1129 709 LINE",
"1079.667 687.667 OFFCURVE",
"1046.5 645.833 OFFCURVE",
"1020.5 594.5 CURVE SMOOTH",
"1007.5 568.833 OFFCURVE",
"995.5 541.833 OFFCURVE",
"984.5 513.5 CURVE SMOOTH",
"962.5 456.833 OFFCURVE",
"938 403.333 OFFCURVE",
"906 362 CURVE SMOOTH",
"890 341.333 OFFCURVE",
"870.333 325.333 OFFCURVE",
"847 314 CURVE",
"842.333 314.667 OFFCURVE",
"837.5 315.5 OFFCURVE",
"832.5 316.5 CURVE SMOOTH",
"827.5 317.5 OFFCURVE",
"822 318 OFFCURVE",
"816 318 CURVE SMOOTH",
"812 318 OFFCURVE",
"803 317.667 OFFCURVE",
"803 311 CURVE SMOOTH",
"803 305.667 OFFCURVE",
"809.333 304 OFFCURVE",
"816 304 CURVE SMOOTH",
"817.834 304 OFFCURVE",
"852.375 309 OFFCURVE",
"864 309 CURVE SMOOTH",
"970.613 309 OFFCURVE",
"1061.241 358.685 OFFCURVE",
"1106 464 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
128 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
146 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
173 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
173 16 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
192 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
192 16 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 2 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
146 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
146 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
118 41 192 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
137 41 192 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
146 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
163 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
163 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
174 41 192 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
182 146 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
198 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
198 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
214 146 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 990;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"268.333 572 OFFCURVE",
"255.667 544.667 OFFCURVE",
"253 510 CURVE SMOOTH",
"251.249 478.476 OFFCURVE",
"176 423.2 OFFCURVE",
"176 410 CURVE SMOOTH",
"176 407.333 OFFCURVE",
"177.667 406 OFFCURVE",
"181 406 CURVE SMOOTH",
"211.749 406 OFFCURVE",
"313 508.048 OFFCURVE",
"313 545 CURVE SMOOTH",
"313 555.667 OFFCURVE",
"305.667 572 OFFCURVE",
"291 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 8 15 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"273.333 522 OFFCURVE",
"257 506.667 OFFCURVE",
"257 484 CURVE SMOOTH",
"257 468 OFFCURVE",
"265.667 450 OFFCURVE",
"283 450 CURVE SMOOTH",
"305.667 450 OFFCURVE",
"321 467 OFFCURVE",
"321 487 CURVE SMOOTH",
"321 501.667 OFFCURVE",
"312 522 OFFCURVE",
"296 522 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"129.333 522 OFFCURVE",
"113 506.667 OFFCURVE",
"113 484 CURVE SMOOTH",
"113 468 OFFCURVE",
"121.667 450 OFFCURVE",
"139 450 CURVE SMOOTH",
"161.667 450 OFFCURVE",
"177 467 OFFCURVE",
"177 487 CURVE SMOOTH",
"177 501.667 OFFCURVE",
"168 522 OFFCURVE",
"152 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 9 138 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 9 169 9 185 9 201 9 217 9 233 9 249 9 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 9 25 9 41 9 57 9 73 9 89 9 105 9 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 15 166 15 182 15 198 15 214 15 230 15 246 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 15 133 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = plusminus;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"359 229 LINE",
"217 229 LINE",
"208 215 LINE",
"351 215 LINE",
"256 73 LINE",
"325 86 LINE",
"411 215 LINE",
"552 215 LINE",
"561 229 LINE",
"419 229 LINE",
"511 368 LINE",
"445 360 LINE"
);
},
{
closed = 1;
nodes = (
"108 13 LINE",
"95 0 LINE",
"413 0 LINE",
"427 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 13 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 13 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 13 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = yen;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"589 303 LINE",
"597 315 LINE",
"427 315 LINE",
"466 376 LINE",
"616 376 LINE",
"623 388 LINE",
"474 388 LINE",
"511.333 446.667 OFFCURVE",
"562 524.167 OFFCURVE",
"626 587.5 CURVE SMOOTH",
"690 650.833 OFFCURVE",
"767 700 OFFCURVE",
"859 700 CURVE SMOOTH",
"876.333 700 OFFCURVE",
"890 697.667 OFFCURVE",
"900 693 CURVE SMOOTH",
"910 688.333 OFFCURVE",
"915 682.333 OFFCURVE",
"915 675 CURVE SMOOTH",
"915 656.333 OFFCURVE",
"903.667 639.333 OFFCURVE",
"873 638 CURVE",
"882.333 626 OFFCURVE",
"894.333 618 OFFCURVE",
"917 618 CURVE SMOOTH",
"950.333 618 OFFCURVE",
"963 641.333 OFFCURVE",
"963 664 CURVE SMOOTH",
"963 675.333 OFFCURVE",
"955.5 686.167 OFFCURVE",
"940.5 696.5 CURVE SMOOTH",
"925.5 706.833 OFFCURVE",
"900.333 712 OFFCURVE",
"865 712 CURVE SMOOTH",
"771.667 712 OFFCURVE",
"697 678.333 OFFCURVE",
"637 629 CURVE SMOOTH",
"577 579.667 OFFCURVE",
"530.667 515.333 OFFCURVE",
"492 454 CURVE",
"490 456 LINE",
"502 492 OFFCURVE",
"513 524 OFFCURVE",
"513 568 CURVE SMOOTH",
"513 654.667 OFFCURVE",
"462.667 712 OFFCURVE",
"332 712 CURVE SMOOTH",
"225.205 712 OFFCURVE",
"97 661.255 OFFCURVE",
"97 544 CURVE SMOOTH",
"97 502.667 OFFCURVE",
"132.667 472 OFFCURVE",
"174 472 CURVE SMOOTH",
"206 472 OFFCURVE",
"232.333 491.333 OFFCURVE",
"247 518 CURVE",
"243 521 LINE",
"228.333 514.333 OFFCURVE",
"221 510 OFFCURVE",
"205 510 CURVE SMOOTH",
"170.333 510 OFFCURVE",
"145 533.333 OFFCURVE",
"145 564 CURVE SMOOTH",
"145 641.58 OFFCURVE",
"218.031 700 OFFCURVE",
"331 700 CURVE SMOOTH",
"406.462 700 OFFCURVE",
"473 674.127 OFFCURVE",
"473 576 CURVE SMOOTH",
"473 504 OFFCURVE",
"453 448 OFFCURVE",
"413 388 CURVE",
"246 388 LINE",
"239 376 LINE",
"406 376 LINE",
"368 315 LINE",
"224 315 LINE",
"216 303 LINE",
"360 303 LINE",
"307.233 215.055 OFFCURVE",
"201.962 63.313 OFFCURVE",
"163 0 CURVE",
"240 8 LINE",
"255.578 57.331 OFFCURVE",
"371.306 231.459 OFFCURVE",
"419 303 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
31 7 44 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 5 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 7 73 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
6 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 31 166 31 182 31 198 31 214 31 230 31 246 31 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 31 22 31 38 31 54 31 70 31 86 31 102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 31 22 31 38 31 54 31 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 31 85 31 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
38 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 52 166 52 182 52 198 52 214 52 230 52 246 52 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 52 22 52 38 52 54 52 70 52 86 52 102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 52 22 52 38 52 54 52 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 52 85 52 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
56 21 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
70 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 73 90 73 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 73 169 73 185 73 201 73 217 73 233 73 249 73 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 73 25 73 41 73 57 73 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
81 21 52 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
82 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
85 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 44 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
70 2 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 3 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
85 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = mu;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"166 344 LINE",
"-311 -324 LINE",
"-243 -324 LINE",
"-6 11 LINE",
"3.333 0.333 OFFCURVE",
"18.667 -8 OFFCURVE",
"44 -8 CURVE SMOOTH",
"105.121 -8 OFFCURVE",
"175.035 53.612 OFFCURVE",
"227 113 CURVE",
"229 111 LINE",
"225 104.333 OFFCURVE",
"213 75.667 OFFCURVE",
"213 49 CURVE SMOOTH",
"213 14.333 OFFCURVE",
"236.667 -8 OFFCURVE",
"274 -8 CURVE SMOOTH",
"319.568 -8 OFFCURVE",
"403.235 58.184 OFFCURVE",
"443 101.5 CURVE SMOOTH",
"482.603 144.639 OFFCURVE",
"549.449 227.636 OFFCURVE",
"573 261 CURVE",
"563 264 LINE",
"540.926 231.893 OFFCURVE",
"474.353 151.179 OFFCURVE",
"435.5 109.5 CURVE SMOOTH",
"396.126 67.262 OFFCURVE",
"318.709 4 OFFCURVE",
"280 4 CURVE SMOOTH",
"262.667 4 OFFCURVE",
"253 17 OFFCURVE",
"253 33 CURVE SMOOTH",
"253 55.667 OFFCURVE",
"265.167 83 OFFCURVE",
"296.5 131 CURVE SMOOTH",
"327.833 179 OFFCURVE",
"377 245.333 OFFCURVE",
"449 344 CURVE",
"380 344 LINE",
"292 210 LINE SMOOTH",
"277.75 187.607 OFFCURVE",
"229.757 129.041 OFFCURVE",
"194.5 93 CURVE SMOOTH",
"155.966 53.61 OFFCURVE",
"99.253 8 OFFCURVE",
"61 8 CURVE SMOOTH",
"43.667 8 OFFCURVE",
"32 17.667 OFFCURVE",
"32 39 CURVE SMOOTH",
"32 85.559 OFFCURVE",
"154.617 238.839 OFFCURVE",
"232 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
43 5 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 43 166 43 182 43 198 43 214 43 230 43 246 43 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 13 values pushed */
6 43 22 43 38 43 54 43 70 43 86 43 6 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
101 43 117 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 43 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
47 43 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 12 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
33 56 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
47 56 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = ordfeminine;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"386 498 LINE",
"385 498 LINE",
"378.333 518 OFFCURVE",
"365 538 OFFCURVE",
"329 538 CURVE SMOOTH",
"259.062 538 OFFCURVE",
"155 433.785 OFFCURVE",
"155 371 CURVE SMOOTH",
"155 345.667 OFFCURVE",
"161.667 322 OFFCURVE",
"199 322 CURVE SMOOTH",
"239.477 322 OFFCURVE",
"276.047 357.666 OFFCURVE",
"305 383 CURVE",
"307 383 LINE",
"304.333 376.333 OFFCURVE",
"300 363 OFFCURVE",
"300 351 CURVE SMOOTH",
"300 335 OFFCURVE",
"310.667 322 OFFCURVE",
"336 322 CURVE SMOOTH",
"351.333 322 OFFCURVE",
"369 328.333 OFFCURVE",
"389 341 CURVE",
"387 350 LINE",
"369 338 OFFCURVE",
"354.333 332 OFFCURVE",
"343 332 CURVE SMOOTH",
"331.667 332 OFFCURVE",
"326 336.333 OFFCURVE",
"326 345 CURVE SMOOTH",
"326 374.856 OFFCURVE",
"397.463 467.432 OFFCURVE",
"449 534 CURVE",
"407 534 LINE"
);
},
{
closed = 1;
nodes = (
"352.333 528 OFFCURVE",
"363 522.667 OFFCURVE",
"363 504 CURVE SMOOTH",
"363 446.606 OFFCURVE",
"253.002 336 OFFCURVE",
"213 336 CURVE SMOOTH",
"198.333 336 OFFCURVE",
"195 346.333 OFFCURVE",
"195 365 CURVE SMOOTH",
"195 432.815 OFFCURVE",
"279.772 528 OFFCURVE",
"331 528 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
43 5 28 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
6 5 16 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
20 16 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 43 166 43 182 43 198 43 214 43 230 43 246 43 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 43 22 43 38 43 54 43 70 43 86 43 102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 43 22 43 38 43 54 43 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 43 85 43 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
33 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
1 13 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 13 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 13 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
37 13 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 266;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"187 343.667 OFFCURVE",
"207 322 OFFCURVE",
"239 322 CURVE SMOOTH",
"327.99 322 OFFCURVE",
"426 422.157 OFFCURVE",
"426 483 CURVE SMOOTH",
"426 516.333 OFFCURVE",
"406.333 538 OFFCURVE",
"369 538 CURVE SMOOTH",
"283.453 538 OFFCURVE",
"187 437.592 OFFCURVE",
"187 377 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"390 438.07 OFFCURVE",
"314.486 332 OFFCURVE",
"248 332 CURVE SMOOTH",
"230.667 332 OFFCURVE",
"223 344.333 OFFCURVE",
"223 363 CURVE SMOOTH",
"223 425.567 OFFCURVE",
"310.194 528 OFFCURVE",
"368 528 CURVE SMOOTH",
"382.667 528 OFFCURVE",
"390 514.667 OFFCURVE",
"390 496 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 24 166 24 182 24 198 24 214 24 230 24 246 24 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 24 22 24 38 24 54 24 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 24 85 24 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
5 13 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 266;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = questiondown;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"322 223 LINE",
"297.226 173.453 OFFCURVE",
"216.224 140.63 OFFCURVE",
"154 111 CURVE SMOOTH",
"76.852 76.417 OFFCURVE",
"0 12.139 OFFCURVE",
"0 -63 CURVE SMOOTH",
"0 -147 OFFCURVE",
"59 -186 OFFCURVE",
"139 -186 CURVE SMOOTH",
"229.344 -186 OFFCURVE",
"335 -113.81 OFFCURVE",
"335 -27 CURVE SMOOTH",
"335 29 OFFCURVE",
"301 64 OFFCURVE",
"245 64 CURVE SMOOTH",
"209 64 OFFCURVE",
"174.667 43.667 OFFCURVE",
"156 17 CURVE",
"163 12 LINE",
"184.333 38.667 OFFCURVE",
"215 52 OFFCURVE",
"243 52 CURVE SMOOTH",
"291.301 52 OFFCURVE",
"305 9.175 OFFCURVE",
"305 -32 CURVE SMOOTH",
"305 -109.167 OFFCURVE",
"224.37 -174 OFFCURVE",
"153 -174 CURVE SMOOTH",
"90.333 -174 OFFCURVE",
"54 -134 OFFCURVE",
"54 -70 CURVE SMOOTH",
"54 -11.333 OFFCURVE",
"72.333 35.333 OFFCURVE",
"119 74 CURVE SMOOTH",
"197.829 139.691 OFFCURVE",
"280.31 138.333 OFFCURVE",
"331 220 CURVE"
);
},
{
closed = 1;
nodes = (
"392 278 OFFCURVE",
"409 295 OFFCURVE",
"409 315 CURVE SMOOTH",
"409 335 OFFCURVE",
"392 352 OFFCURVE",
"372 352 CURVE SMOOTH",
"352 352 OFFCURVE",
"335 335 OFFCURVE",
"335 315 CURVE SMOOTH",
"335 295 OFFCURVE",
"352 278 OFFCURVE",
"372 278 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 4 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 5 16 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 8 133 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
28 36 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 1 50 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = logicalnot;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"368 75 LINE",
"436 83 LINE",
"541 243 LINE",
"197 243 LINE",
"189 231 LINE",
"469 231 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
0 5 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1 5 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = guillemotleft;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"411 334 LINE",
"374.333 306 OFFCURVE",
"338.333 277.5 OFFCURVE",
"303 248.5 CURVE SMOOTH",
"267.667 219.5 OFFCURVE",
"231 191.667 OFFCURVE",
"193 165 CURVE",
"235.667 114.333 OFFCURVE",
"279 66 OFFCURVE",
"315 10 CURVE",
"322 13 LINE",
"307.333 69 OFFCURVE",
"276.333 115.667 OFFCURVE",
"247 165 CURVE",
"277 190.333 OFFCURVE",
"305.5 216.833 OFFCURVE",
"332.5 244.5 CURVE SMOOTH",
"359.5 272.167 OFFCURVE",
"387.333 299.667 OFFCURVE",
"416 327 CURVE"
);
},
{
closed = 1;
nodes = (
"286 334 LINE",
"249.333 306 OFFCURVE",
"213.333 277.5 OFFCURVE",
"178 248.5 CURVE SMOOTH",
"142.667 219.5 OFFCURVE",
"106 191.667 OFFCURVE",
"68 165 CURVE",
"110.667 114.333 OFFCURVE",
"154 66 OFFCURVE",
"190 10 CURVE",
"197 13 LINE",
"182.333 69 OFFCURVE",
"151.333 115.667 OFFCURVE",
"122 165 CURVE",
"152 190.333 OFFCURVE",
"180.5 216.833 OFFCURVE",
"207.5 244.5 CURVE SMOOTH",
"234.5 272.167 OFFCURVE",
"262.333 299.667 OFFCURVE",
"291 327 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"163 10 LINE",
"200.333 38 OFFCURVE",
"236.5 66.5 OFFCURVE",
"271.5 95.5 CURVE SMOOTH",
"306.5 124.5 OFFCURVE",
"342.667 152.333 OFFCURVE",
"380 179 CURVE",
"337.333 228.333 OFFCURVE",
"295 278 OFFCURVE",
"259 334 CURVE",
"252 332 LINE",
"266.667 276 OFFCURVE",
"296 227 OFFCURVE",
"328 179 CURVE",
"298 153.667 OFFCURVE",
"269.333 127.333 OFFCURVE",
"242 100 CURVE SMOOTH",
"214.667 72.667 OFFCURVE",
"187 45 OFFCURVE",
"159 17 CURVE"
);
},
{
closed = 1;
nodes = (
"38 10 LINE",
"75.333 38 OFFCURVE",
"111.5 66.5 OFFCURVE",
"146.5 95.5 CURVE SMOOTH",
"181.5 124.5 OFFCURVE",
"218 152.333 OFFCURVE",
"256 179 CURVE",
"212 228.333 OFFCURVE",
"170 278 OFFCURVE",
"134 334 CURVE",
"127 332 LINE",
"141.667 276 OFFCURVE",
"171 227 OFFCURVE",
"203 179 CURVE",
"173 153.667 OFFCURVE",
"144.333 127.333 OFFCURVE",
"117 100 CURVE SMOOTH",
"89.667 72.667 OFFCURVE",
"62 45 OFFCURVE",
"34 17 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"159 74 OFFCURVE",
"142 57 OFFCURVE",
"142 37 CURVE SMOOTH",
"142 17 OFFCURVE",
"159 0 OFFCURVE",
"179 0 CURVE SMOOTH",
"199 0 OFFCURVE",
"216 17 OFFCURVE",
"216 37 CURVE SMOOTH",
"216 57 OFFCURVE",
"199 74 OFFCURVE",
"179 74 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"492 74 OFFCURVE",
"475 57 OFFCURVE",
"475 37 CURVE SMOOTH",
"475 17 OFFCURVE",
"492 0 OFFCURVE",
"512 0 CURVE SMOOTH",
"532 0 OFFCURVE",
"549 17 OFFCURVE",
"549 37 CURVE SMOOTH",
"549 57 OFFCURVE",
"532 74 OFFCURVE",
"512 74 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"825 74 OFFCURVE",
"808 57 OFFCURVE",
"808 37 CURVE SMOOTH",
"808 17 OFFCURVE",
"825 0 OFFCURVE",
"845 0 CURVE SMOOTH",
"865 0 OFFCURVE",
"882 17 OFFCURVE",
"882 37 CURVE SMOOTH",
"882 57 OFFCURVE",
"865 74 OFFCURVE",
"845 74 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
175 21 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
15 21 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 3 values pushed */
176 21 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
64 21 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
175 33 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
15 33 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 3 values pushed */
64 33 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 3 values pushed */
176 33 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
27 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 0 167 0 183 0 199 0 215 0 231 0 247 0 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 0 134 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1000;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = endash;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"486 158 LINE",
"498 186 LINE",
"-2 186 LINE",
"-14 158 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
1 2 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"986 158 LINE",
"998 186 LINE",
"-2 186 LINE",
"-14 158 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
1 2 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1000;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"286 592 LINE",
"227.958 574.587 OFFCURVE",
"143 517.544 OFFCURVE",
"143 446 CURVE SMOOTH",
"143 424.667 OFFCURVE",
"158.333 402 OFFCURVE",
"181 402 CURVE SMOOTH",
"205 402 OFFCURVE",
"221 413.333 OFFCURVE",
"221 440 CURVE SMOOTH",
"221 466.667 OFFCURVE",
"199 474.667 OFFCURVE",
"179 476 CURVE",
"186.36 532.424 OFFCURVE",
"241.485 564.794 OFFCURVE",
"287 583 CURVE"
);
},
{
closed = 1;
nodes = (
"453 592 LINE",
"394.958 574.587 OFFCURVE",
"310 517.544 OFFCURVE",
"310 446 CURVE SMOOTH",
"310 424.667 OFFCURVE",
"325.333 402 OFFCURVE",
"348 402 CURVE SMOOTH",
"372 402 OFFCURVE",
"388 413.333 OFFCURVE",
"388 440 CURVE SMOOTH",
"388 466.667 OFFCURVE",
"366 474.667 OFFCURVE",
"346 476 CURVE",
"353.36 532.424 OFFCURVE",
"408.485 564.794 OFFCURVE",
"454 583 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 8 133 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 34 138 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 34 169 34 185 34 201 34 217 34 233 34 249 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 34 25 34 41 34 57 34 73 34 89 34 105 34 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
5 1 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"260 398 LINE",
"318.281 415.484 OFFCURVE",
"403 472.534 OFFCURVE",
"403 544 CURVE SMOOTH",
"403 565.333 OFFCURVE",
"387.667 588 OFFCURVE",
"365 588 CURVE SMOOTH",
"341 588 OFFCURVE",
"325 576.667 OFFCURVE",
"325 550 CURVE SMOOTH",
"325 523.333 OFFCURVE",
"347 515.333 OFFCURVE",
"367 514 CURVE",
"359.363 457.997 OFFCURVE",
"304.657 425.263 OFFCURVE",
"259 407 CURVE"
);
},
{
closed = 1;
nodes = (
"93 398 LINE",
"151.281 415.484 OFFCURVE",
"236 472.534 OFFCURVE",
"236 544 CURVE SMOOTH",
"236 565.333 OFFCURVE",
"220.667 588 OFFCURVE",
"198 588 CURVE SMOOTH",
"174 588 OFFCURVE",
"158 576.667 OFFCURVE",
"158 550 CURVE SMOOTH",
"158 523.333 OFFCURVE",
"180 515.333 OFFCURVE",
"200 514 CURVE",
"192.363 457.997 OFFCURVE",
"137.657 425.263 OFFCURVE",
"92 407 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
34 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 34 166 34 182 34 198 34 214 34 230 34 246 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 34 133 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
11 1 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"297 592 LINE",
"238.958 574.587 OFFCURVE",
"154 517.544 OFFCURVE",
"154 446 CURVE SMOOTH",
"154 424.667 OFFCURVE",
"169.333 402 OFFCURVE",
"192 402 CURVE SMOOTH",
"216 402 OFFCURVE",
"232 413.333 OFFCURVE",
"232 440 CURVE SMOOTH",
"232 466.667 OFFCURVE",
"210 475 OFFCURVE",
"190 475 CURVE",
"197.469 532.26 OFFCURVE",
"252.113 564.645 OFFCURVE",
"298 583 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 9 14 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 8 133 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"163 398 LINE",
"221.281 415.484 OFFCURVE",
"306 472.534 OFFCURVE",
"306 544 CURVE SMOOTH",
"306 565.333 OFFCURVE",
"290.667 588 OFFCURVE",
"268 588 CURVE SMOOTH",
"244 588 OFFCURVE",
"228 576.667 OFFCURVE",
"228 550 CURVE SMOOTH",
"228 523.333 OFFCURVE",
"250 515 OFFCURVE",
"270 515 CURVE",
"262.531 457.74 OFFCURVE",
"207.887 425.355 OFFCURVE",
"162 407 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 9 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = divide;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"204 189 LINE",
"191 176 LINE",
"509 176 LINE",
"523 189 LINE"
);
},
{
closed = 1;
nodes = (
"245 23.667 OFFCURVE",
"257.667 12 OFFCURVE",
"275 12 CURVE SMOOTH",
"289.667 12 OFFCURVE",
"305 26.333 OFFCURVE",
"305 41 CURVE SMOOTH",
"305 55.667 OFFCURVE",
"290.667 72 OFFCURVE",
"276 72 CURVE SMOOTH",
"257.333 72 OFFCURVE",
"245 59.667 OFFCURVE",
"245 41 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 300.667 OFFCURVE",
"425.667 290 OFFCURVE",
"443 290 CURVE SMOOTH",
"457.667 290 OFFCURVE",
"471 301 OFFCURVE",
"471 317 CURVE SMOOTH",
"471 331.667 OFFCURVE",
"459.667 346 OFFCURVE",
"445 346 CURVE SMOOTH",
"427.667 346 OFFCURVE",
"415 335.333 OFFCURVE",
"415 318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 10 166 10 182 10 198 10 214 10 230 10 246 10 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 10 22 10 38 10 54 10 70 10 86 10 102 10 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 10 133 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 16 138 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
7 1 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 1 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = guilsinglleft;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"306 334 LINE",
"269.333 306 OFFCURVE",
"233.333 277.667 OFFCURVE",
"198 249 CURVE SMOOTH",
"162.667 220.333 OFFCURVE",
"126 192.333 OFFCURVE",
"88 165 CURVE",
"130.667 114.333 OFFCURVE",
"172.667 66 OFFCURVE",
"210 10 CURVE",
"217 13 LINE",
"202.333 69 OFFCURVE",
"173 117.333 OFFCURVE",
"141 164 CURVE",
"171 190 OFFCURVE",
"199.667 216.667 OFFCURVE",
"227 244 CURVE SMOOTH",
"254.333 271.333 OFFCURVE",
"282 299 OFFCURVE",
"310 327 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"43 10 LINE",
"79.667 38 OFFCURVE",
"115.5 66.667 OFFCURVE",
"150.5 96 CURVE SMOOTH",
"185.5 125.333 OFFCURVE",
"222 153 OFFCURVE",
"260 179 CURVE",
"217.333 229.667 OFFCURVE",
"173.667 278 OFFCURVE",
"139 334 CURVE",
"132 332 LINE",
"142.667 276 OFFCURVE",
"176.333 228.333 OFFCURVE",
"207 179 CURVE",
"177 153.667 OFFCURVE",
"148.333 127.333 OFFCURVE",
"121 100 CURVE SMOOTH",
"93.667 72.667 OFFCURVE",
"66 45 OFFCURVE",
"38 17 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 333;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fi;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"375 332 LINE",
"308.171 229.791 OFFCURVE",
"206 106.923 OFFCURVE",
"206 49 CURVE SMOOTH",
"206 14.333 OFFCURVE",
"226.333 -8 OFFCURVE",
"265 -8 CURVE SMOOTH",
"309.135 -8 OFFCURVE",
"393.151 53.151 OFFCURVE",
"435 95 CURVE SMOOTH",
"476.219 136.219 OFFCURVE",
"546.167 220.945 OFFCURVE",
"569 259 CURVE",
"561 264 LINE",
"542.823 229.666 OFFCURVE",
"473.489 148.489 OFFCURVE",
"433 108 CURVE SMOOTH",
"391.736 66.736 OFFCURVE",
"311.885 4 OFFCURVE",
"273 4 CURVE SMOOTH",
"261 4 OFFCURVE",
"250 11 OFFCURVE",
"250 27 CURVE SMOOTH",
"250 72.868 OFFCURVE",
"383.021 244.891 OFFCURVE",
"447 350 CURVE",
"419 348.667 OFFCURVE",
"393 347.333 OFFCURVE",
"369 346 CURVE SMOOTH",
"345 344.667 OFFCURVE",
"327.333 344 OFFCURVE",
"316 344 CURVE SMOOTH",
"205 344 LINE",
"242.266 404.557 OFFCURVE",
"303.244 507.172 OFFCURVE",
"346.5 566 CURVE SMOOTH",
"396.5 634 OFFCURVE",
"448.667 684 OFFCURVE",
"498 684 CURVE SMOOTH",
"528.667 684 OFFCURVE",
"540 666.667 OFFCURVE",
"540 640 CURVE SMOOTH",
"540 617.333 OFFCURVE",
"536.333 602.667 OFFCURVE",
"531 584 CURVE",
"561.667 586.667 OFFCURVE",
"584 609 OFFCURVE",
"584 641 CURVE SMOOTH",
"584 678.333 OFFCURVE",
"554.667 696 OFFCURVE",
"512 696 CURVE SMOOTH",
"440 696 OFFCURVE",
"375 649.833 OFFCURVE",
"315 582.5 CURVE SMOOTH",
"255 515.167 OFFCURVE",
"201 426.667 OFFCURVE",
"149 344 CURVE",
"72 344 LINE",
"72 332 LINE",
"143 332 LINE",
"93.686 253.74 OFFCURVE",
"13.416 118.852 OFFCURVE",
"-34.5 44.5 CURVE SMOOTH",
"-63.5 -0.5 OFFCURVE",
"-92.5 -42.333 OFFCURVE",
"-121.5 -81 CURVE SMOOTH",
"-179.5 -158.333 OFFCURVE",
"-239.667 -216.833 OFFCURVE",
"-305 -249.5 CURVE SMOOTH",
"-337.667 -265.833 OFFCURVE",
"-372 -274 OFFCURVE",
"-408 -274 CURVE SMOOTH",
"-482.667 -274 OFFCURVE",
"-522 -230.333 OFFCURVE",
"-522 -161 CURVE SMOOTH",
"-522 -111.667 OFFCURVE",
"-490 -82.667 OFFCURVE",
"-450 -80 CURVE",
"-450 -72 LINE",
"-459 -72 LINE SMOOTH",
"-536.333 -72 OFFCURVE",
"-566 -114 OFFCURVE",
"-566 -166 CURVE SMOOTH",
"-566 -245.02 OFFCURVE",
"-492.951 -286 OFFCURVE",
"-413 -286 CURVE SMOOTH",
"-299.667 -286 OFFCURVE",
"-211.167 -240.833 OFFCURVE",
"-118.5 -141.5 CURVE SMOOTH",
"-25.833 -42.167 OFFCURVE",
"70.667 112 OFFCURVE",
"196 328 CURVE",
"199 332 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
19 6 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
63 6 84 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 6 46 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 19 166 19 182 19 198 19 214 19 230 19 246 19 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 19 22 19 38 19 54 19 70 19 86 19 102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 19 22 19 38 19 54 19 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 19 85 19 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
29 11 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
43 11 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 46 90 46 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 46 169 46 185 46 201 46 217 46 233 46 249 46 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 46 25 46 41 46 57 46 73 46 89 46 105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 46 25 46 41 46 57 46 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
54 11 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
58 11 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 84 90 84 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 84 169 84 185 84 201 84 217 84 233 84 249 84 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 84 25 84 41 84 57 84 73 84 89 84 105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 84 25 84 41 84 57 84 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
89 11 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
81 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
15 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
29 81 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
43 81 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
54 81 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
58 81 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
89 81 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"206 344 LINE",
"243.181 404.42 OFFCURVE",
"303.348 507.313 OFFCURVE",
"346.5 566 CURVE SMOOTH",
"396.5 634 OFFCURVE",
"448.667 684 OFFCURVE",
"498 684 CURVE SMOOTH",
"528.667 684 OFFCURVE",
"540 666.667 OFFCURVE",
"540 640 CURVE SMOOTH",
"540 617.333 OFFCURVE",
"537 598 OFFCURVE",
"525 578 CURVE SMOOTH",
"379 344 LINE"
);
},
{
closed = 1;
nodes = (
"568 679 LINE",
"554.667 690.333 OFFCURVE",
"536 696 OFFCURVE",
"512 696 CURVE SMOOTH",
"440 696 OFFCURVE",
"375 649.833 OFFCURVE",
"315 582.5 CURVE SMOOTH",
"255 515.167 OFFCURVE",
"201 426.667 OFFCURVE",
"149 344 CURVE",
"72 344 LINE",
"72 332 LINE",
"143 332 LINE",
"93.686 253.74 OFFCURVE",
"13.416 118.852 OFFCURVE",
"-34.5 44.5 CURVE SMOOTH",
"-63.5 -0.5 OFFCURVE",
"-92.5 -42.333 OFFCURVE",
"-121.5 -81 CURVE SMOOTH",
"-179.5 -158.333 OFFCURVE",
"-239.667 -216.833 OFFCURVE",
"-305 -249.5 CURVE SMOOTH",
"-337.667 -265.833 OFFCURVE",
"-372 -274 OFFCURVE",
"-408 -274 CURVE SMOOTH",
"-482.667 -274 OFFCURVE",
"-522 -230.333 OFFCURVE",
"-522 -161 CURVE SMOOTH",
"-522 -111.667 OFFCURVE",
"-490 -82.667 OFFCURVE",
"-450 -80 CURVE",
"-450 -72 LINE",
"-459 -72 LINE SMOOTH",
"-536.333 -72 OFFCURVE",
"-566 -114 OFFCURVE",
"-566 -166 CURVE SMOOTH",
"-566 -245.02 OFFCURVE",
"-492.951 -286 OFFCURVE",
"-413 -286 CURVE SMOOTH",
"-299.667 -286 OFFCURVE",
"-211.333 -241 OFFCURVE",
"-118 -141 CURVE SMOOTH",
"-24.667 -41 OFFCURVE",
"72 113.333 OFFCURVE",
"200 332 CURVE",
"371 332 LINE",
"364 321 LINE SMOOTH",
"306.43 228.888 OFFCURVE",
"210 99.993 OFFCURVE",
"210 46 CURVE SMOOTH",
"210 15.333 OFFCURVE",
"227.333 -8 OFFCURVE",
"270 -8 CURVE SMOOTH",
"309.01 -8 OFFCURVE",
"390.584 54.997 OFFCURVE",
"433 96 CURVE SMOOTH",
"475.984 137.551 OFFCURVE",
"546.782 222.421 OFFCURVE",
"568 261 CURVE",
"561 265 LINE",
"502.671 167.008 OFFCURVE",
"337.434 4 OFFCURVE",
"275 4 CURVE SMOOTH",
"257.667 4 OFFCURVE",
"250 14.333 OFFCURVE",
"250 25 CURVE SMOOTH",
"250 38.962 OFFCURVE",
"271.031 79.053 OFFCURVE",
"292.5 115.5 CURVE SMOOTH",
"321.167 164.167 OFFCURVE",
"366 233.333 OFFCURVE",
"430 332 CURVE SMOOTH",
"664 696 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 38 90 38 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 38 169 38 185 38 201 38 217 38 233 38 249 38 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 38 25 38 41 38 57 38 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
63 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 63 166 63 182 63 198 63 214 63 230 63 246 63 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 63 22 63 38 63 54 63 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 63 85 63 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
73 55 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
59 50 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 35 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
44 35 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
73 35 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = daggerdbl;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"652 460 LINE",
"658 472 LINE",
"456 472 LINE",
"565 648 LINE",
"575.667 662.667 OFFCURVE",
"584 678 OFFCURVE",
"584 690 CURVE SMOOTH",
"584 702 OFFCURVE",
"576.667 712 OFFCURVE",
"562 712 CURVE SMOOTH",
"552 712 OFFCURVE",
"542.667 707 OFFCURVE",
"534 697 CURVE SMOOTH",
"525.333 687 OFFCURVE",
"515.333 671.333 OFFCURVE",
"504 650 CURVE SMOOTH",
"405 472 LINE",
"207 472 LINE",
"201 460 LINE",
"397 460 LINE",
"329 342 LINE",
"130 342 LINE",
"124 330 LINE",
"322 330 LINE",
"90 -74 LINE",
"117 -74 LINE",
"367 330 LINE",
"575 330 LINE",
"581 342 LINE",
"374 342 LINE",
"447 460 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
26 1 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
1 3 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 3 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 3 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = periodcentered;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"184 209 OFFCURVE",
"167 192 OFFCURVE",
"167 172 CURVE SMOOTH",
"167 152 OFFCURVE",
"184 135 OFFCURVE",
"204 135 CURVE SMOOTH",
"224 135 OFFCURVE",
"241 152 OFFCURVE",
"241 172 CURVE SMOOTH",
"241 192 OFFCURVE",
"224 209 OFFCURVE",
"204 209 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 9 9 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 3 166 3 182 3 198 3 214 3 230 3 246 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 3 22 3 38 3 54 3 70 3 86 3 102 3 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 3 133 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 250;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = quotesinglbase;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-11 -120 LINE",
"47.042 -102.587 OFFCURVE",
"132 -45.544 OFFCURVE",
"132 26 CURVE SMOOTH",
"132 47.333 OFFCURVE",
"116.667 70 OFFCURVE",
"94 70 CURVE SMOOTH",
"70 70 OFFCURVE",
"54 58.667 OFFCURVE",
"54 32 CURVE SMOOTH",
"54 5.333 OFFCURVE",
"76 -3 OFFCURVE",
"96 -3 CURVE",
"88.531 -60.26 OFFCURVE",
"33.887 -92.645 OFFCURVE",
"-12 -111 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 9 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"130 -120 LINE",
"188.042 -102.587 OFFCURVE",
"273 -45.544 OFFCURVE",
"273 26 CURVE SMOOTH",
"273 47.333 OFFCURVE",
"257.667 70 OFFCURVE",
"235 70 CURVE SMOOTH",
"211 70 OFFCURVE",
"195 58.667 OFFCURVE",
"195 32 CURVE SMOOTH",
"195 5.333 OFFCURVE",
"217 -3 OFFCURVE",
"237 -3 CURVE",
"229.531 -60.26 OFFCURVE",
"174.887 -92.645 OFFCURVE",
"129 -111 CURVE"
);
},
{
closed = 1;
nodes = (
"-37 -120 LINE",
"21.042 -102.587 OFFCURVE",
"106 -45.544 OFFCURVE",
"106 26 CURVE SMOOTH",
"106 47.333 OFFCURVE",
"90.667 70 OFFCURVE",
"68 70 CURVE SMOOTH",
"44 70 OFFCURVE",
"28 58.667 OFFCURVE",
"28 32 CURVE SMOOTH",
"28 5.333 OFFCURVE",
"50 -3 OFFCURVE",
"70 -3 CURVE",
"62.531 -60.26 OFFCURVE",
"7.887 -92.645 OFFCURVE",
"-38 -111 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
34 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 34 166 34 182 34 198 34 214 34 230 34 246 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 34 133 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 11 167 11 183 11 199 11 215 11 231 11 247 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 11 134 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"984.348 298 OFFCURVE",
"859 194.853 OFFCURVE",
"859 92 CURVE SMOOTH",
"859 29.333 OFFCURVE",
"891.333 0 OFFCURVE",
"950 0 CURVE SMOOTH",
"1054.38 0 OFFCURVE",
"1170 128.645 OFFCURVE",
"1170 215 CURVE SMOOTH",
"1170 257.667 OFFCURVE",
"1145 298 OFFCURVE",
"1085 298 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1111 286 OFFCURVE",
"1126 275 OFFCURVE",
"1126 247 CURVE SMOOTH",
"1126 167.091 OFFCURVE",
"1032.068 12 OFFCURVE",
"949 12 CURVE SMOOTH",
"922.333 12 OFFCURVE",
"903 23.667 OFFCURVE",
"903 53 CURVE SMOOTH",
"903 138.369 OFFCURVE",
"1001.47 286 OFFCURVE",
"1083 286 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"630.348 298 OFFCURVE",
"505 194.853 OFFCURVE",
"505 92 CURVE SMOOTH",
"505 29.333 OFFCURVE",
"537.333 0 OFFCURVE",
"596 0 CURVE SMOOTH",
"700.38 0 OFFCURVE",
"816 128.645 OFFCURVE",
"816 215 CURVE SMOOTH",
"816 257.667 OFFCURVE",
"791 298 OFFCURVE",
"731 298 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"757 286 OFFCURVE",
"772 275 OFFCURVE",
"772 247 CURVE SMOOTH",
"772 167.091 OFFCURVE",
"678.068 12 OFFCURVE",
"595 12 CURVE SMOOTH",
"568.333 12 OFFCURVE",
"549 23.667 OFFCURVE",
"549 53 CURVE SMOOTH",
"549 138.369 OFFCURVE",
"647.47 286 OFFCURVE",
"729 286 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"641 460 LINE",
"519.667 308 OFFCURVE",
"421 184.333 OFFCURVE",
"353 99 CURVE SMOOTH",
"306.909 41.16 OFFCURVE",
"247 -32.313 OFFCURVE",
"247 -36 CURVE SMOOTH",
"247 -39.333 OFFCURVE",
"248.667 -41 OFFCURVE",
"252 -41 CURVE SMOOTH",
"268.529 -41 OFFCURVE",
"342.841 65.63 OFFCURVE",
"366 93 CURVE SMOOTH",
"402.745 136.426 OFFCURVE",
"467.502 215.023 OFFCURVE",
"506.5 261.5 CURVE SMOOTH",
"530.833 290.5 OFFCURVE",
"554 318 OFFCURVE",
"576 344 CURVE SMOOTH",
"587.046 357.255 OFFCURVE",
"636.065 414.131 OFFCURVE",
"659.5 442 CURVE SMOOTH",
"678.903 465.074 OFFCURVE",
"729 523.222 OFFCURVE",
"729 532 CURVE SMOOTH",
"729 541.333 OFFCURVE",
"725.333 546 OFFCURVE",
"718 546 CURVE SMOOTH",
"710 546 OFFCURVE",
"703.167 544 OFFCURVE",
"697.5 540 CURVE SMOOTH",
"691.833 536 OFFCURVE",
"684 526.333 OFFCURVE",
"674 511 CURVE",
"654.161 483.225 OFFCURVE",
"609.196 438 OFFCURVE",
"552 438 CURVE SMOOTH",
"469.352 438 OFFCURVE",
"491.813 532 OFFCURVE",
"393 532 CURVE SMOOTH",
"292.215 532 OFFCURVE",
"168 417.232 OFFCURVE",
"168 317 CURVE SMOOTH",
"168 261 OFFCURVE",
"201.333 228 OFFCURVE",
"256 228 CURVE SMOOTH",
"306.692 228 OFFCURVE",
"365.774 263.356 OFFCURVE",
"408 306.5 CURVE SMOOTH",
"449.368 348.768 OFFCURVE",
"484.031 409.236 OFFCURVE",
"482 460 CURVE",
"484 462 LINE",
"498.667 442 OFFCURVE",
"522.333 426 OFFCURVE",
"549 426 CURVE SMOOTH",
"585 426 OFFCURVE",
"617.667 443.333 OFFCURVE",
"639 462 CURVE"
);
},
{
closed = 1;
nodes = (
"212 378.748 OFFCURVE",
"311.739 520 OFFCURVE",
"396 520 CURVE SMOOTH",
"424 520 OFFCURVE",
"438 503.667 OFFCURVE",
"438 477 CURVE SMOOTH",
"438 394.717 OFFCURVE",
"337.58 240 OFFCURVE",
"251 240 CURVE SMOOTH",
"221.667 240 OFFCURVE",
"212 259.667 OFFCURVE",
"212 285 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
123 6 81 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
71 6 131 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 6 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 6 61 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 6 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 6 29 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 11 90 11 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 11 169 11 185 11 201 11 217 11 233 11 249 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 217 11 233 11 249 11 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 11 25 11 41 11 57 11 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 29 90 29 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 29 169 29 185 29 201 29 217 29 233 29 249 29 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 29 25 29 41 29 57 29 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 53 166 53 182 53 198 53 214 53 230 53 246 53 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 53 22 53 38 53 54 53 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 53 85 53 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
74 61 90 61 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 61 169 61 185 61 201 61 217 61 233 61 249 61 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 61 25 61 41 61 57 61 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 71 166 71 182 71 198 71 214 71 230 71 246 71 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 71 22 71 38 71 54 71 70 71 86 71 102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 71 22 71 38 71 54 71 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 71 85 71 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 123 166 123 182 123 198 123 214 123 230 123 246 123 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 123 22 123 38 123 54 123 70 123 86 123 102 123 118 123 134 123 150 123 166 123 182 123 198 123 214 123 230 123 246 123 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 123 22 123 38 123 54 123 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 123 85 123 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
140 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
86 1 67 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
91 48 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
71 67 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1130;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = dotlessi;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"168 344 LINE",
"121.71 274.072 OFFCURVE",
"56.483 180.02 OFFCURVE",
"33 142 CURVE SMOOTH",
"5 96.667 OFFCURVE",
"-7 68 OFFCURVE",
"-7 40 CURVE SMOOTH",
"-7 16 OFFCURVE",
"10 -8 OFFCURVE",
"46 -8 CURVE SMOOTH",
"90.135 -8 OFFCURVE",
"174.151 53.151 OFFCURVE",
"216 95 CURVE SMOOTH",
"257.219 136.219 OFFCURVE",
"327.167 220.945 OFFCURVE",
"350 259 CURVE",
"342 264 LINE",
"323.823 229.666 OFFCURVE",
"254.489 148.489 OFFCURVE",
"214 108 CURVE SMOOTH",
"172.736 66.736 OFFCURVE",
"92.885 4 OFFCURVE",
"54 4 CURVE SMOOTH",
"40 4 OFFCURVE",
"33 12.667 OFFCURVE",
"33 30 CURVE SMOOTH",
"33 47.54 OFFCURVE",
"53.224 83.811 OFFCURVE",
"77.5 121 CURVE SMOOTH",
"104.071 161.704 OFFCURVE",
"177.705 266.013 OFFCURVE",
"232 344 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 5 25 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 5 166 5 182 5 198 5 214 5 230 5 246 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 5 22 5 38 5 54 5 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 5 85 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = circumflex;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"96 406 LINE",
"142.667 436.667 OFFCURVE",
"184 474.333 OFFCURVE",
"224 513 CURVE",
"244 474.333 OFFCURVE",
"265.333 442.667 OFFCURVE",
"300 404 CURVE",
"308 409 LINE",
"273.333 465 OFFCURVE",
"252 513.333 OFFCURVE",
"252 572 CURVE",
"236 572 LINE",
"193.333 514.667 OFFCURVE",
"144 462.333 OFFCURVE",
"92 413 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 8 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"321.589 450.754 OFFCURVE",
"354 490.597 OFFCURVE",
"354 530 CURVE SMOOTH",
"354 534 OFFCURVE",
"352.333 536 OFFCURVE",
"349 536 CURVE SMOOTH",
"344.333 536 OFFCURVE",
"342 533 OFFCURVE",
"342 527 CURVE SMOOTH",
"342 509.667 OFFCURVE",
"318 492 OFFCURVE",
"290 492 CURVE SMOOTH",
"252.631 492 OFFCURVE",
"186.994 530 OFFCURVE",
"156 530 CURVE SMOOTH",
"109.651 530 OFFCURVE",
"82 492.8 OFFCURVE",
"82 458 CURVE SMOOTH",
"82 451.333 OFFCURVE",
"83.333 448 OFFCURVE",
"86 448 CURVE SMOOTH",
"95.787 448 OFFCURVE",
"113.41 492 OFFCURVE",
"140 492 CURVE SMOOTH",
"181.372 492 OFFCURVE",
"232.703 456 OFFCURVE",
"277 456 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
22 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"131 491 LINE SMOOTH",
"115.667 491 OFFCURVE",
"104.5 489 OFFCURVE",
"97.5 485 CURVE SMOOTH",
"90.5 481 OFFCURVE",
"87 476.333 OFFCURVE",
"87 471 CURVE SMOOTH",
"87 464.333 OFFCURVE",
"93.333 465 OFFCURVE",
"100 465 CURVE SMOOTH",
"300 465 LINE SMOOTH",
"314.667 465 OFFCURVE",
"324.5 466.833 OFFCURVE",
"329.5 470.5 CURVE SMOOTH",
"334.5 474.167 OFFCURVE",
"337 478.667 OFFCURVE",
"337 484 CURVE SMOOTH",
"337 487.333 OFFCURVE",
"335.333 489.333 OFFCURVE",
"332 490 CURVE SMOOTH",
"328.667 490.667 OFFCURVE",
"322.333 491 OFFCURVE",
"313 491 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = breve;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"155.22 456 OFFCURVE",
"123.062 530 OFFCURVE",
"112 530 CURVE SMOOTH",
"105.333 530 OFFCURVE",
"106 523.667 OFFCURVE",
"106 517 CURVE SMOOTH",
"106 478.097 OFFCURVE",
"145.438 422 OFFCURVE",
"210 422 CURVE SMOOTH",
"247.401 422 OFFCURVE",
"355 494.167 OFFCURVE",
"355 522 CURVE SMOOTH",
"355 526.667 OFFCURVE",
"353.333 529 OFFCURVE",
"350 529 CURVE SMOOTH",
"336.23 529 OFFCURVE",
"254.059 456 OFFCURVE",
"199 456 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
0 3 12 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"199.333 523 OFFCURVE",
"183 507.667 OFFCURVE",
"183 485 CURVE SMOOTH",
"183 469 OFFCURVE",
"191.667 451 OFFCURVE",
"209 451 CURVE SMOOTH",
"231.667 451 OFFCURVE",
"247 468 OFFCURVE",
"247 488 CURVE SMOOTH",
"247 502.667 OFFCURVE",
"238 523 OFFCURVE",
"222 523 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 9 9 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 3 166 3 182 3 198 3 214 3 230 3 246 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 3 22 3 38 3 54 3 70 3 86 3 102 3 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 3 133 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"132 419.667 OFFCURVE",
"160.667 398 OFFCURVE",
"194 398 CURVE SMOOTH",
"252.787 398 OFFCURVE",
"304 446.171 OFFCURVE",
"304 503 CURVE SMOOTH",
"304 543 OFFCURVE",
"275.333 566 OFFCURVE",
"242 566 CURVE SMOOTH",
"183.213 566 OFFCURVE",
"132 517.829 OFFCURVE",
"132 461 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 477.027 OFFCURVE",
"236.376 406 OFFCURVE",
"193 406 CURVE SMOOTH",
"170.333 406 OFFCURVE",
"156 421.667 OFFCURVE",
"156 443 CURVE SMOOTH",
"156 486.973 OFFCURVE",
"199.624 558 OFFCURVE",
"243 558 CURVE SMOOTH",
"267 558 OFFCURVE",
"280 542.333 OFFCURVE",
"280 521 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 24 166 24 182 24 198 24 214 24 230 24 246 24 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 24 22 24 38 24 54 24 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 24 85 24 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
5 13 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = cedilla;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-155 -175 LINE",
"-131 -184.333 OFFCURVE",
"-105.667 -184 OFFCURVE",
"-79 -184 CURVE SMOOTH",
"-29.031 -184 OFFCURVE",
"63 -168.028 OFFCURVE",
"63 -110 CURVE SMOOTH",
"63 -64.774 OFFCURVE",
"9.845 -60.803 OFFCURVE",
"-35 -58 CURVE",
"-2 -4 LINE",
"-13 -4 LINE",
"-58 -78 LINE",
"-29.333 -78.667 OFFCURVE",
"-9.333 -80.833 OFFCURVE",
"2 -84.5 CURVE SMOOTH",
"13.333 -88.167 OFFCURVE",
"19 -98 OFFCURVE",
"19 -114 CURVE SMOOTH",
"19 -159.662 OFFCURVE",
"-44.115 -172 OFFCURVE",
"-86 -172 CURVE SMOOTH",
"-108.667 -172 OFFCURVE",
"-131.333 -171 OFFCURVE",
"-154 -167 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
19 6 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 8 90 8 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 8 25 8 41 8 57 8 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
14 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = hungarumlaut;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"268.667 572 OFFCURVE",
"257 553.667 OFFCURVE",
"257 527 CURVE SMOOTH",
"257 474.038 OFFCURVE",
"220.54 444.82 OFFCURVE",
"176 416 CURVE",
"176 406 LINE",
"214.415 406 OFFCURVE",
"311 490.411 OFFCURVE",
"311 545 CURVE SMOOTH",
"311 557 OFFCURVE",
"300.667 572 OFFCURVE",
"286 572 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158.333 562 OFFCURVE",
"145.667 534.667 OFFCURVE",
"143 500 CURVE SMOOTH",
"141.249 468.476 OFFCURVE",
"66 413.2 OFFCURVE",
"66 400 CURVE SMOOTH",
"66 397.333 OFFCURVE",
"67.667 396 OFFCURVE",
"71 396 CURVE SMOOTH",
"101.749 396 OFFCURVE",
"203 498.048 OFFCURVE",
"203 535 CURVE SMOOTH",
"203 545.667 OFFCURVE",
"195.667 562 OFFCURVE",
"181 562 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 14 138 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 14 169 14 185 14 201 14 217 14 233 14 249 14 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
3 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 20 166 20 182 20 198 20 214 20 230 20 246 20 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 20 22 20 38 20 54 20 70 20 86 20 102 20 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 20 133 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
17 25 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"67 -183 OFFCURVE",
"79.833 -181.5 OFFCURVE",
"89.5 -178.5 CURVE SMOOTH",
"99.167 -175.5 OFFCURVE",
"105 -172.333 OFFCURVE",
"107 -169 CURVE",
"108.333 -167.667 OFFCURVE",
"109.833 -164 OFFCURVE",
"111.5 -158 CURVE SMOOTH",
"113.167 -152 OFFCURVE",
"114.667 -147 OFFCURVE",
"116 -143 CURVE",
"105.333 -149.667 OFFCURVE",
"89 -155 OFFCURVE",
"73 -155 CURVE SMOOTH",
"38.333 -155 OFFCURVE",
"22 -130.667 OFFCURVE",
"22 -104 CURVE SMOOTH",
"22 -78.667 OFFCURVE",
"35.333 -56 OFFCURVE",
"46 -40 CURVE",
"51.333 -30.667 OFFCURVE",
"57.167 -22.333 OFFCURVE",
"63.5 -15 CURVE SMOOTH",
"69.833 -7.667 OFFCURVE",
"73.333 -3 OFFCURVE",
"74 -1 CURVE",
"73.333 1 OFFCURVE",
"71.333 2 OFFCURVE",
"68 2 CURVE SMOOTH",
"66 2 OFFCURVE",
"62.5 -0.833 OFFCURVE",
"57.5 -6.5 CURVE SMOOTH",
"52.5 -12.167 OFFCURVE",
"47.667 -17.333 OFFCURVE",
"43 -22 CURVE SMOOTH",
"16.333 -50 OFFCURVE",
"-6 -80.667 OFFCURVE",
"-6 -118 CURVE SMOOTH",
"-6 -155.333 OFFCURVE",
"15 -183 OFFCURVE",
"51 -183 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
17 5 3 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 17 166 17 182 17 198 17 214 17 230 17 246 17 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 17 22 17 38 17 54 17 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 17 85 17 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 2 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"335 572 LINE",
"288.333 541.333 OFFCURVE",
"247 503.667 OFFCURVE",
"207 465 CURVE",
"187 503.667 OFFCURVE",
"165.667 535.333 OFFCURVE",
"131 574 CURVE",
"123 569 LINE",
"157.667 513 OFFCURVE",
"179 464.667 OFFCURVE",
"179 406 CURVE",
"195 406 LINE",
"237.667 463.333 OFFCURVE",
"287 515.667 OFFCURVE",
"339 565 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = divisionslash;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-37 -8 LINE",
"-9 -8 LINE",
"405 538 LINE",
"376 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = divisionslash;
unicode = 2215;
},
{
glyphname = uni2216;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-8 538 LINE",
"-37 538 LINE",
"377 -8 LINE",
"405 -8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = uni2216;
unicode = 2216;
},
{
glyphname = currency;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"148 444 LINE",
"196 380 LINE",
"145.333 332 OFFCURVE",
"108 265.667 OFFCURVE",
"108 187 CURVE SMOOTH",
"108 155 OFFCURVE",
"116.333 128.667 OFFCURVE",
"133 108 CURVE",
"45 33 LINE",
"50 21 LINE",
"141 99 LINE",
"161 80.333 OFFCURVE",
"186.667 71 OFFCURVE",
"218 71 CURVE SMOOTH",
"259.333 71 OFFCURVE",
"298.333 83.667 OFFCURVE",
"333 105 CURVE",
"370 38 LINE",
"417 76 LINE",
"373 136 LINE",
"434.333 190.667 OFFCURVE",
"474 267.333 OFFCURVE",
"474 330 CURVE SMOOTH",
"474 357.333 OFFCURVE",
"470 381 OFFCURVE",
"462 401 CURVE",
"551 477 LINE",
"545 487 LINE",
"456 412 LINE",
"438.667 440 OFFCURVE",
"409.667 456 OFFCURVE",
"363 456 CURVE SMOOTH",
"323 456 OFFCURVE",
"276.667 440.333 OFFCURVE",
"234 411 CURVE",
"198 482 LINE"
);
},
{
closed = 1;
nodes = (
"404.109 442 OFFCURVE",
"423 383.044 OFFCURVE",
"423 320 CURVE SMOOTH",
"423 199.792 OFFCURVE",
"337.434 85 OFFCURVE",
"248 85 CURVE SMOOTH",
"179.129 85 OFFCURVE",
"160 139.349 OFFCURVE",
"160 209 CURVE SMOOTH",
"160 318.38 OFFCURVE",
"250.13 442 OFFCURVE",
"335 442 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 48 138 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 48 169 48 185 48 201 48 217 48 233 48 249 48 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 48 25 48 41 48 57 48 73 48 89 48 105 48 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
38 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 38 166 38 182 38 198 38 214 38 230 38 246 38 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 38 22 38 38 38 54 38 70 38 86 38 102 38 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 38 133 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = onesuperior;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"185 210 LINE",
"252 220 LINE",
"276 261.333 OFFCURVE",
"314 318.667 OFFCURVE",
"354 376 CURVE SMOOTH",
"387.944 424.653 OFFCURVE",
"438.861 495.086 OFFCURVE",
"464 531 CURVE",
"453 533 LINE",
"391.667 489 OFFCURVE",
"320.667 447.333 OFFCURVE",
"242 430 CURVE",
"244 422 LINE",
"289.333 432.667 OFFCURVE",
"343.667 454.333 OFFCURVE",
"373 473 CURVE",
"375 471 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
1 15 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 15 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = onehalf;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"707 104 LINE",
"690.733 74.177 OFFCURVE",
"654.968 28 OFFCURVE",
"616 28 CURVE SMOOTH",
"602.667 28 OFFCURVE",
"581.333 35.667 OFFCURVE",
"560 45 CURVE SMOOTH",
"541.333 53 OFFCURVE",
"521.667 61 OFFCURVE",
"507 61 CURVE SMOOTH",
"489.667 61 OFFCURVE",
"476.667 54.667 OFFCURVE",
"466 48 CURVE",
"464 50 LINE",
"503.472 73.683 OFFCURVE",
"596.698 105.243 OFFCURVE",
"651 129 CURVE SMOOTH",
"710.15 154.878 OFFCURVE",
"763 192.685 OFFCURVE",
"763 250 CURVE SMOOTH",
"763 299.847 OFFCURVE",
"713.939 328 OFFCURVE",
"663 328 CURVE SMOOTH",
"604.101 328 OFFCURVE",
"531 295.702 OFFCURVE",
"531 231 CURVE SMOOTH",
"531 200.333 OFFCURVE",
"552.333 181 OFFCURVE",
"579 181 CURVE SMOOTH",
"599 181 OFFCURVE",
"615 190.667 OFFCURVE",
"627 210 CURVE",
"623 216 LINE",
"615 212 OFFCURVE",
"609.667 209 OFFCURVE",
"599 209 CURVE SMOOTH",
"580.333 209 OFFCURVE",
"565 225 OFFCURVE",
"565 249 CURVE SMOOTH",
"565 282.962 OFFCURVE",
"602.45 316 OFFCURVE",
"647 316 CURVE SMOOTH",
"685.667 316 OFFCURVE",
"707 288.667 OFFCURVE",
"707 250 CURVE SMOOTH",
"707 187.856 OFFCURVE",
"668.517 148.53 OFFCURVE",
"567 107 CURVE SMOOTH",
"505 81.667 OFFCURVE",
"459 60.167 OFFCURVE",
"429 42.5 CURVE SMOOTH",
"399 24.833 OFFCURVE",
"384 12.667 OFFCURVE",
"384 6 CURVE SMOOTH",
"384 2 OFFCURVE",
"386.667 0 OFFCURVE",
"392 0 CURVE SMOOTH",
"403.09 0 OFFCURVE",
"435.579 36 OFFCURVE",
"465 36 CURVE SMOOTH",
"511.416 36 OFFCURVE",
"540.878 0 OFFCURVE",
"584 0 CURVE SMOOTH",
"647.676 0 OFFCURVE",
"686.939 53.596 OFFCURVE",
"716 103 CURVE"
);
},
{
closed = 1;
nodes = (
"203 -8 LINE",
"231 -8 LINE",
"645 538 LINE",
"616 538 LINE"
);
},
{
closed = 1;
nodes = (
"185 210 LINE",
"252 220 LINE",
"276 261.333 OFFCURVE",
"314 318.667 OFFCURVE",
"354 376 CURVE SMOOTH",
"387.944 424.653 OFFCURVE",
"438.861 495.086 OFFCURVE",
"464 531 CURVE",
"453 533 LINE",
"391.667 489 OFFCURVE",
"320.667 447.333 OFFCURVE",
"242 430 CURVE",
"244 422 LINE",
"289.333 432.667 OFFCURVE",
"343.667 454.333 OFFCURVE",
"373 473 CURVE",
"375 471 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
33 5 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 4 25 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 25 138 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 25 169 25 185 25 201 25 217 25 233 25 249 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 105 25 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 25 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 45 90 45 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 45 169 45 185 45 201 45 217 45 233 45 249 45 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 45 25 45 41 45 57 45 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
79 45 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
80 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 2 42 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 80 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
63 10 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 72 167 72 183 72 199 72 215 72 231 72 247 72 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 72 23 72 39 72 55 72 71 72 87 72 103 72 119 72 135 72 151 72 167 72 183 72 199 72 215 72 231 72 247 72 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 72 23 72 39 72 55 72 71 72 87 72 103 72 119 72 135 72 151 72 167 72 183 72 199 72 215 72 231 72 247 72 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
83 80 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
91 80 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 750;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"784 310 LINE",
"737 306 LINE",
"607 128 LINE",
"465 128 LINE",
"465 130 LINE",
"776 366 LINE",
"746 366 LINE",
"416 110 LINE",
"599 110 LINE",
"521 0 LINE",
"574 6 LINE",
"648 110 LINE",
"721 110 LINE",
"726 128 LINE",
"656 128 LINE"
);
},
{
closed = 1;
nodes = (
"214 -8 LINE",
"242 -8 LINE",
"656 538 LINE",
"627 538 LINE"
);
},
{
closed = 1;
nodes = (
"185 210 LINE",
"252 220 LINE",
"276 261.333 OFFCURVE",
"314 318.667 OFFCURVE",
"354 376 CURVE SMOOTH",
"387.944 424.653 OFFCURVE",
"438.861 495.086 OFFCURVE",
"464 531 CURVE",
"453 533 LINE",
"391.667 489 OFFCURVE",
"320.667 447.333 OFFCURVE",
"242 430 CURVE",
"244 422 LINE",
"289.333 432.667 OFFCURVE",
"343.667 454.333 OFFCURVE",
"373 473 CURVE",
"375 471 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
1 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
34 17 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 750;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = brokenbar;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"34 0 LINE",
"68 0 LINE",
"236 259 LINE",
"202 259 LINE"
);
},
{
closed = 1;
nodes = (
"327 453 LINE",
"361 453 LINE",
"530 712 LINE",
"496 712 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 2 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 2 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = threequarters;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"273 -8 LINE",
"301 -8 LINE",
"715 538 LINE",
"686 538 LINE"
);
},
{
closed = 1;
nodes = (
"266 374 LINE",
"278 375.333 OFFCURVE",
"291 376 OFFCURVE",
"303 376 CURVE SMOOTH",
"341.667 376 OFFCURVE",
"360 355 OFFCURVE",
"360 319 CURVE SMOOTH",
"360 255.394 OFFCURVE",
"301.915 222 OFFCURVE",
"236 222 CURVE SMOOTH",
"189.333 222 OFFCURVE",
"164 248 OFFCURVE",
"164 284 CURVE SMOOTH",
"164 309.333 OFFCURVE",
"181.333 330 OFFCURVE",
"216 330 CURVE",
"217 334 LINE",
"207.667 340.667 OFFCURVE",
"194 347 OFFCURVE",
"182 347 CURVE SMOOTH",
"144.667 347 OFFCURVE",
"122 319.333 OFFCURVE",
"122 286 CURVE SMOOTH",
"122 236.257 OFFCURVE",
"178.168 210 OFFCURVE",
"235 210 CURVE SMOOTH",
"317.389 210 OFFCURVE",
"408 250.99 OFFCURVE",
"408 318 CURVE SMOOTH",
"408 360.667 OFFCURVE",
"374.667 381 OFFCURVE",
"332 381 CURVE",
"332 383 LINE",
"395.903 388.557 OFFCURVE",
"484 416.668 OFFCURVE",
"484 472 CURVE SMOOTH",
"484 508 OFFCURVE",
"452.333 538 OFFCURVE",
"399 538 CURVE SMOOTH",
"341.524 538 OFFCURVE",
"287 500.499 OFFCURVE",
"287 456 CURVE SMOOTH",
"287 436 OFFCURVE",
"304.333 419 OFFCURVE",
"327 419 CURVE SMOOTH",
"345.667 419 OFFCURVE",
"367.667 429.333 OFFCURVE",
"369 444 CURVE",
"364.333 442.667 OFFCURVE",
"360.667 441.5 OFFCURVE",
"358 440.5 CURVE SMOOTH",
"355.333 439.5 OFFCURVE",
"351.333 439 OFFCURVE",
"346 439 CURVE SMOOTH",
"330 439 OFFCURVE",
"321 452.667 OFFCURVE",
"321 470 CURVE SMOOTH",
"321 499.333 OFFCURVE",
"350.333 526 OFFCURVE",
"385 526 CURVE SMOOTH",
"421 526 OFFCURVE",
"432 504 OFFCURVE",
"432 472 CURVE SMOOTH",
"432 391.448 OFFCURVE",
"341.911 393.489 OFFCURVE",
"266 384 CURVE"
);
},
{
closed = 1;
nodes = (
"824 310 LINE",
"777 306 LINE",
"647 128 LINE",
"505 128 LINE",
"505 130 LINE",
"816 366 LINE",
"786 366 LINE",
"456 110 LINE",
"639 110 LINE",
"561 0 LINE",
"614 6 LINE",
"688 110 LINE",
"761 110 LINE",
"766 128 LINE",
"696 128 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
64 5 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 5 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 7 72 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 4 9 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 35 166 35 182 35 198 35 214 35 230 35 246 35 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 35 133 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
3 54 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 15 166 15 182 15 198 15 214 15 230 15 246 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 15 22 15 38 15 54 15 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 15 85 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
150 44 166 44 182 44 198 44 214 44 230 44 246 44 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 44 22 44 38 44 54 44 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 44 85 44 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
21 72 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
41 54 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
61 54 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 64 166 64 182 64 198 64 214 64 230 64 246 64 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 64 22 64 38 64 54 64 70 64 86 64 102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 64 22 64 38 64 54 64 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 64 85 64 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
86 9 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
32 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 1 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
61 49 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
79 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
80 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
84 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
85 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
88 49 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
90 2 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
93 49 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 750;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = twosuperior;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"407 314 LINE",
"390.733 284.177 OFFCURVE",
"354.968 238 OFFCURVE",
"316 238 CURVE SMOOTH",
"302.667 238 OFFCURVE",
"281.333 245.667 OFFCURVE",
"260 255 CURVE SMOOTH",
"241.333 263 OFFCURVE",
"221.667 271 OFFCURVE",
"207 271 CURVE SMOOTH",
"189.667 271 OFFCURVE",
"176.667 264.667 OFFCURVE",
"166 258 CURVE",
"164 260 LINE",
"203.472 283.683 OFFCURVE",
"296.698 315.243 OFFCURVE",
"351 339 CURVE SMOOTH",
"410.15 364.878 OFFCURVE",
"463 402.685 OFFCURVE",
"463 460 CURVE SMOOTH",
"463 509.847 OFFCURVE",
"413.939 538 OFFCURVE",
"363 538 CURVE SMOOTH",
"304.101 538 OFFCURVE",
"231 505.702 OFFCURVE",
"231 441 CURVE SMOOTH",
"231 410.333 OFFCURVE",
"252.333 391 OFFCURVE",
"279 391 CURVE SMOOTH",
"299 391 OFFCURVE",
"315 400.667 OFFCURVE",
"327 420 CURVE",
"323 426 LINE",
"315 422 OFFCURVE",
"309.667 419 OFFCURVE",
"299 419 CURVE SMOOTH",
"280.333 419 OFFCURVE",
"265 435 OFFCURVE",
"265 459 CURVE SMOOTH",
"265 492.962 OFFCURVE",
"302.45 526 OFFCURVE",
"347 526 CURVE SMOOTH",
"385.667 526 OFFCURVE",
"407 498.667 OFFCURVE",
"407 460 CURVE SMOOTH",
"407 397.856 OFFCURVE",
"368.517 358.53 OFFCURVE",
"267 317 CURVE SMOOTH",
"205 291.667 OFFCURVE",
"159 270.167 OFFCURVE",
"129 252.5 CURVE SMOOTH",
"99 234.833 OFFCURVE",
"84 222.667 OFFCURVE",
"84 216 CURVE SMOOTH",
"84 212 OFFCURVE",
"86.667 210 OFFCURVE",
"92 210 CURVE SMOOTH",
"103.09 210 OFFCURVE",
"135.579 246 OFFCURVE",
"165 246 CURVE SMOOTH",
"211.416 246 OFFCURVE",
"240.878 210 OFFCURVE",
"284 210 CURVE SMOOTH",
"347.676 210 OFFCURVE",
"386.939 263.596 OFFCURVE",
"416 313 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
33 5 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 4 25 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 25 138 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 25 169 25 185 25 201 25 217 25 233 25 249 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 105 25 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 25 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 33 166 33 182 33 198 33 214 33 230 33 246 33 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 33 22 33 38 33 54 33 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 33 85 33 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
72 2 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 2 42 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
63 10 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = minus;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"204 189 LINE",
"191 176 LINE",
"509 176 LINE",
"523 189 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"347 165 LINE",
"91 11 LINE",
"97 0 LINE",
"350 154 LINE",
"402 -1 LINE",
"452 20 LINE",
"394 177 LINE",
"670 343 LINE",
"662 352 LINE",
"390 188 LINE",
"334 351 LINE",
"287 330 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 600;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = threesuperior;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"266 374 LINE",
"278 375.333 OFFCURVE",
"291 376 OFFCURVE",
"303 376 CURVE SMOOTH",
"341.667 376 OFFCURVE",
"360 355 OFFCURVE",
"360 319 CURVE SMOOTH",
"360 255.394 OFFCURVE",
"301.915 222 OFFCURVE",
"236 222 CURVE SMOOTH",
"189.333 222 OFFCURVE",
"164 248 OFFCURVE",
"164 284 CURVE SMOOTH",
"164 309.333 OFFCURVE",
"181.333 330 OFFCURVE",
"216 330 CURVE",
"217 334 LINE",
"207.667 340.667 OFFCURVE",
"194 347 OFFCURVE",
"182 347 CURVE SMOOTH",
"144.667 347 OFFCURVE",
"122 319.333 OFFCURVE",
"122 286 CURVE SMOOTH",
"122 236.257 OFFCURVE",
"178.168 210 OFFCURVE",
"235 210 CURVE SMOOTH",
"317.389 210 OFFCURVE",
"408 250.99 OFFCURVE",
"408 318 CURVE SMOOTH",
"408 360.667 OFFCURVE",
"374.667 381 OFFCURVE",
"332 381 CURVE",
"332 383 LINE",
"395.903 388.557 OFFCURVE",
"484 416.668 OFFCURVE",
"484 472 CURVE SMOOTH",
"484 508 OFFCURVE",
"452.333 538 OFFCURVE",
"399 538 CURVE SMOOTH",
"341.524 538 OFFCURVE",
"287 500.499 OFFCURVE",
"287 456 CURVE SMOOTH",
"287 436 OFFCURVE",
"304.333 419 OFFCURVE",
"327 419 CURVE SMOOTH",
"345.667 419 OFFCURVE",
"367.667 429.333 OFFCURVE",
"369 444 CURVE",
"364.333 442.667 OFFCURVE",
"360.667 441.5 OFFCURVE",
"358 440.5 CURVE SMOOTH",
"355.333 439.5 OFFCURVE",
"351.333 439 OFFCURVE",
"346 439 CURVE SMOOTH",
"330 439 OFFCURVE",
"321 452.667 OFFCURVE",
"321 470 CURVE SMOOTH",
"321 499.333 OFFCURVE",
"350.333 526 OFFCURVE",
"385 526 CURVE SMOOTH",
"421 526 OFFCURVE",
"432 504 OFFCURVE",
"432 472 CURVE SMOOTH",
"432 391.448 OFFCURVE",
"341.911 393.489 OFFCURVE",
"266 384 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
60 5 50 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 5 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 7 68 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 4 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 5 138 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 5 169 5 185 5 201 5 217 5 233 5 249 5 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
74 68 90 68 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 68 169 68 185 68 201 68 217 68 233 68 249 68 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 68 25 68 41 68 57 68 73 68 89 68 105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 68 25 68 41 68 57 68 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
17 68 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 23 90 23 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 23 169 23 185 23 201 23 217 23 233 23 249 23 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 23 25 23 41 23 57 23 73 23 89 23 105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 23 25 23 41 23 57 23 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
37 50 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
57 50 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 60 166 60 182 60 198 60 214 60 230 60 246 60 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 60 22 60 38 60 54 60 70 60 86 60 102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 60 22 60 38 60 54 60 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 60 85 60 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
53 1 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 1 20 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
57 45 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = commaturnedmod;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"297 592 LINE",
"238.958 574.587 OFFCURVE",
"154 517.544 OFFCURVE",
"154 446 CURVE SMOOTH",
"154 424.667 OFFCURVE",
"169.333 402 OFFCURVE",
"192 402 CURVE SMOOTH",
"216 402 OFFCURVE",
"232 413.333 OFFCURVE",
"232 440 CURVE SMOOTH",
"232 466.667 OFFCURVE",
"210 475 OFFCURVE",
"190 475 CURVE",
"197.469 532.26 OFFCURVE",
"252.113 564.645 OFFCURVE",
"298 583 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 9 14 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 8 133 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = commaturnedmod;
unicode = 02BB;
},
{
glyphname = zerowidthspace;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 0;
}
);
note = zerowidthspace;
unicode = 200B;
},
{
glyphname = zerowidthnonjoiner;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 0;
}
);
note = zerowidthnonjoiner;
unicode = 200C;
},
{
glyphname = zerowidthjoiner;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 0;
}
);
note = zerowidthjoiner;
unicode = FEFF;
},
{
glyphname = secondtonechinese;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"268.333 572 OFFCURVE",
"255.667 544.667 OFFCURVE",
"253 510 CURVE SMOOTH",
"251.249 478.476 OFFCURVE",
"176 423.2 OFFCURVE",
"176 410 CURVE SMOOTH",
"176 407.333 OFFCURVE",
"177.667 406 OFFCURVE",
"181 406 CURVE SMOOTH",
"211.749 406 OFFCURVE",
"313 508.048 OFFCURVE",
"313 545 CURVE SMOOTH",
"313 555.667 OFFCURVE",
"305.667 572 OFFCURVE",
"291 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 8 15 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = secondtonechinese;
unicode = 02CA;
},
{
glyphname = fourthtonechinese;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"81.333 572 OFFCURVE",
"74 555.667 OFFCURVE",
"74 545 CURVE SMOOTH",
"74 508.251 OFFCURVE",
"175.251 406 OFFCURVE",
"206 406 CURVE SMOOTH",
"209.333 406 OFFCURVE",
"211 407.333 OFFCURVE",
"211 410 CURVE SMOOTH",
"211 422.629 OFFCURVE",
"137.265 480.612 OFFCURVE",
"134 510 CURVE SMOOTH",
"131.333 544.667 OFFCURVE",
"118.667 572 OFFCURVE",
"96 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = fourthtonechinese;
unicode = 02CB;
},
{
glyphname = firsttonechinese;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"131 491 LINE SMOOTH",
"115.667 491 OFFCURVE",
"104.5 489 OFFCURVE",
"97.5 485 CURVE SMOOTH",
"90.5 481 OFFCURVE",
"87 476.333 OFFCURVE",
"87 471 CURVE SMOOTH",
"87 464.333 OFFCURVE",
"93.333 465 OFFCURVE",
"100 465 CURVE SMOOTH",
"300 465 LINE SMOOTH",
"314.667 465 OFFCURVE",
"324.5 466.833 OFFCURVE",
"329.5 470.5 CURVE SMOOTH",
"334.5 474.167 OFFCURVE",
"337 478.667 OFFCURVE",
"337 484 CURVE SMOOTH",
"337 487.333 OFFCURVE",
"335.333 489.333 OFFCURVE",
"332 490 CURVE SMOOTH",
"328.667 490.667 OFFCURVE",
"322.333 491 OFFCURVE",
"313 491 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = firsttonechinese;
unicode = 02C9;
},
{
glyphname = macronlowmod;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"131 -69 LINE SMOOTH",
"115.667 -69 OFFCURVE",
"104.5 -71 OFFCURVE",
"97.5 -75 CURVE SMOOTH",
"90.5 -79 OFFCURVE",
"87 -83.667 OFFCURVE",
"87 -89 CURVE SMOOTH",
"87 -95.667 OFFCURVE",
"93.333 -95 OFFCURVE",
"100 -95 CURVE SMOOTH",
"300 -95 LINE SMOOTH",
"314.667 -95 OFFCURVE",
"324.5 -93.167 OFFCURVE",
"329.5 -89.5 CURVE SMOOTH",
"334.5 -85.833 OFFCURVE",
"337 -81.333 OFFCURVE",
"337 -76 CURVE SMOOTH",
"337 -72.667 OFFCURVE",
"335.333 -70.667 OFFCURVE",
"332 -70 CURVE SMOOTH",
"328.667 -69.333 OFFCURVE",
"322.333 -69 OFFCURVE",
"313 -69 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = macronlowmod;
unicode = 02CD;
},
{
glyphname = gravelowmod;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"81.333 12 OFFCURVE",
"74 -4.333 OFFCURVE",
"74 -15 CURVE SMOOTH",
"74 -51.749 OFFCURVE",
"175.251 -154 OFFCURVE",
"206 -154 CURVE SMOOTH",
"209.333 -154 OFFCURVE",
"211 -152.667 OFFCURVE",
"211 -150 CURVE SMOOTH",
"211 -137.371 OFFCURVE",
"137.265 -79.388 OFFCURVE",
"134 -50 CURVE SMOOTH",
"131.333 -15.333 OFFCURVE",
"118.667 12 OFFCURVE",
"96 12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = gravelowmod;
unicode = 02CE;
},
{
glyphname = acutelowmod;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"268.333 12 OFFCURVE",
"255.667 -15.333 OFFCURVE",
"253 -50 CURVE SMOOTH",
"251.249 -81.524 OFFCURVE",
"176 -136.8 OFFCURVE",
"176 -150 CURVE SMOOTH",
"176 -152.667 OFFCURVE",
"177.667 -154 OFFCURVE",
"181 -154 CURVE SMOOTH",
"211.749 -154 OFFCURVE",
"313 -51.952 OFFCURVE",
"313 -15 CURVE SMOOTH",
"313 -4.333 OFFCURVE",
"305.667 12 OFFCURVE",
"291 12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 8 15 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = acutelowmod;
unicode = 02CF;
},
{
glyphname = gravecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-282.667 572 OFFCURVE",
"-290 555.667 OFFCURVE",
"-290 545 CURVE SMOOTH",
"-290 508.251 OFFCURVE",
"-188.749 406 OFFCURVE",
"-158 406 CURVE SMOOTH",
"-154.667 406 OFFCURVE",
"-153 407.333 OFFCURVE",
"-153 410 CURVE SMOOTH",
"-153 422.629 OFFCURVE",
"-226.735 480.612 OFFCURVE",
"-230 510 CURVE SMOOTH",
"-232.667 544.667 OFFCURVE",
"-245.333 572 OFFCURVE",
"-268 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = gravecmb;
unicode = 0300;
},
{
glyphname = acutecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-197.667 572 OFFCURVE",
"-210.333 544.667 OFFCURVE",
"-213 510 CURVE SMOOTH",
"-214.751 478.476 OFFCURVE",
"-290 423.2 OFFCURVE",
"-290 410 CURVE SMOOTH",
"-290 407.333 OFFCURVE",
"-288.333 406 OFFCURVE",
"-285 406 CURVE SMOOTH",
"-254.251 406 OFFCURVE",
"-153 508.048 OFFCURVE",
"-153 545 CURVE SMOOTH",
"-153 555.667 OFFCURVE",
"-160.333 572 OFFCURVE",
"-175 572 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 8 15 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = acutecmb;
unicode = 0301;
},
{
glyphname = circumflexcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-326 406 LINE",
"-279.333 436.667 OFFCURVE",
"-238 474.333 OFFCURVE",
"-198 513 CURVE",
"-178 474.333 OFFCURVE",
"-156.667 442.667 OFFCURVE",
"-122 404 CURVE",
"-114 409 LINE",
"-148.667 465 OFFCURVE",
"-170 513.333 OFFCURVE",
"-170 572 CURVE",
"-186 572 LINE",
"-228.667 514.667 OFFCURVE",
"-278 462.333 OFFCURVE",
"-330 413 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 8 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflexcmb;
unicode = 0302;
},
{
glyphname = tildecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-118.411 450.754 OFFCURVE",
"-86 490.597 OFFCURVE",
"-86 530 CURVE SMOOTH",
"-86 534 OFFCURVE",
"-87.667 536 OFFCURVE",
"-91 536 CURVE SMOOTH",
"-95.667 536 OFFCURVE",
"-98 533 OFFCURVE",
"-98 527 CURVE SMOOTH",
"-98 509.667 OFFCURVE",
"-122 492 OFFCURVE",
"-150 492 CURVE SMOOTH",
"-187.369 492 OFFCURVE",
"-253.006 530 OFFCURVE",
"-284 530 CURVE SMOOTH",
"-330.349 530 OFFCURVE",
"-358 492.8 OFFCURVE",
"-358 458 CURVE SMOOTH",
"-358 451.333 OFFCURVE",
"-356.667 448 OFFCURVE",
"-354 448 CURVE SMOOTH",
"-344.213 448 OFFCURVE",
"-326.59 492 OFFCURVE",
"-300 492 CURVE SMOOTH",
"-258.628 492 OFFCURVE",
"-207.297 456 OFFCURVE",
"-163 456 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
22 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = tildecmb;
unicode = 0303;
},
{
glyphname = macroncmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-303 491 LINE SMOOTH",
"-318.333 491 OFFCURVE",
"-329.5 489 OFFCURVE",
"-336.5 485 CURVE SMOOTH",
"-343.5 481 OFFCURVE",
"-347 476.333 OFFCURVE",
"-347 471 CURVE SMOOTH",
"-347 464.333 OFFCURVE",
"-340.667 465 OFFCURVE",
"-334 465 CURVE SMOOTH",
"-134 465 LINE SMOOTH",
"-119.333 465 OFFCURVE",
"-109.5 466.833 OFFCURVE",
"-104.5 470.5 CURVE SMOOTH",
"-99.5 474.167 OFFCURVE",
"-97 478.667 OFFCURVE",
"-97 484 CURVE SMOOTH",
"-97 487.333 OFFCURVE",
"-98.667 489.333 OFFCURVE",
"-102 490 CURVE SMOOTH",
"-105.333 490.667 OFFCURVE",
"-111.667 491 OFFCURVE",
"-121 491 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = macroncmb;
unicode = 0304;
},
{
glyphname = brevecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-296.78 456 OFFCURVE",
"-328.938 530 OFFCURVE",
"-340 530 CURVE SMOOTH",
"-346.667 530 OFFCURVE",
"-346 523.667 OFFCURVE",
"-346 517 CURVE SMOOTH",
"-346 478.097 OFFCURVE",
"-306.562 422 OFFCURVE",
"-242 422 CURVE SMOOTH",
"-204.599 422 OFFCURVE",
"-97 494.167 OFFCURVE",
"-97 522 CURVE SMOOTH",
"-97 526.667 OFFCURVE",
"-98.667 529 OFFCURVE",
"-102 529 CURVE SMOOTH",
"-115.77 529 OFFCURVE",
"-197.941 456 OFFCURVE",
"-253 456 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
0 3 12 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = brevecmb;
unicode = 0306;
},
{
glyphname = dotaccentcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-237.667 523 OFFCURVE",
"-254 507.667 OFFCURVE",
"-254 485 CURVE SMOOTH",
"-254 469 OFFCURVE",
"-245.333 451 OFFCURVE",
"-228 451 CURVE SMOOTH",
"-205.333 451 OFFCURVE",
"-190 468 OFFCURVE",
"-190 488 CURVE SMOOTH",
"-190 502.667 OFFCURVE",
"-199 523 OFFCURVE",
"-215 523 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 9 9 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 3 166 3 182 3 198 3 214 3 230 3 246 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 3 22 3 38 3 54 3 70 3 86 3 102 3 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 3 133 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotaccentcmb;
unicode = 0307;
},
{
glyphname = dieresiscmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-165.667 522 OFFCURVE",
"-182 506.667 OFFCURVE",
"-182 484 CURVE SMOOTH",
"-182 468 OFFCURVE",
"-173.333 450 OFFCURVE",
"-156 450 CURVE SMOOTH",
"-133.333 450 OFFCURVE",
"-118 467 OFFCURVE",
"-118 487 CURVE SMOOTH",
"-118 501.667 OFFCURVE",
"-127 522 OFFCURVE",
"-143 522 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-309.667 522 OFFCURVE",
"-326 506.667 OFFCURVE",
"-326 484 CURVE SMOOTH",
"-326 468 OFFCURVE",
"-317.333 450 OFFCURVE",
"-300 450 CURVE SMOOTH",
"-277.333 450 OFFCURVE",
"-262 467 OFFCURVE",
"-262 487 CURVE SMOOTH",
"-262 501.667 OFFCURVE",
"-271 522 OFFCURVE",
"-287 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 9 138 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 9 169 9 185 9 201 9 217 9 233 9 249 9 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 9 25 9 41 9 57 9 73 9 89 9 105 9 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 15 166 15 182 15 198 15 214 15 230 15 246 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 15 133 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dieresiscmb;
unicode = 0308;
},
{
glyphname = ringcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-308 419.667 OFFCURVE",
"-279.333 398 OFFCURVE",
"-246 398 CURVE SMOOTH",
"-187.213 398 OFFCURVE",
"-136 446.171 OFFCURVE",
"-136 503 CURVE SMOOTH",
"-136 543 OFFCURVE",
"-164.667 566 OFFCURVE",
"-198 566 CURVE SMOOTH",
"-256.787 566 OFFCURVE",
"-308 517.829 OFFCURVE",
"-308 461 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-160 477.027 OFFCURVE",
"-203.624 406 OFFCURVE",
"-247 406 CURVE SMOOTH",
"-269.667 406 OFFCURVE",
"-284 421.667 OFFCURVE",
"-284 443 CURVE SMOOTH",
"-284 486.973 OFFCURVE",
"-240.376 558 OFFCURVE",
"-197 558 CURVE SMOOTH",
"-173 558 OFFCURVE",
"-160 542.333 OFFCURVE",
"-160 521 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 24 166 24 182 24 198 24 214 24 230 24 246 24 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 24 22 24 38 24 54 24 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 24 85 24 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
5 13 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ringcmb;
unicode = 030A;
},
{
glyphname = hungarumlautcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-141.333 572 OFFCURVE",
"-153 553.667 OFFCURVE",
"-153 527 CURVE SMOOTH",
"-153 474.038 OFFCURVE",
"-189.46 444.82 OFFCURVE",
"-234 416 CURVE",
"-234 406 LINE",
"-195.585 406 OFFCURVE",
"-99 490.411 OFFCURVE",
"-99 545 CURVE SMOOTH",
"-99 557 OFFCURVE",
"-109.333 572 OFFCURVE",
"-124 572 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-251.667 562 OFFCURVE",
"-264.333 534.667 OFFCURVE",
"-267 500 CURVE SMOOTH",
"-268.751 468.476 OFFCURVE",
"-344 413.2 OFFCURVE",
"-344 400 CURVE SMOOTH",
"-344 397.333 OFFCURVE",
"-342.333 396 OFFCURVE",
"-339 396 CURVE SMOOTH",
"-308.251 396 OFFCURVE",
"-207 498.048 OFFCURVE",
"-207 535 CURVE SMOOTH",
"-207 545.667 OFFCURVE",
"-214.333 562 OFFCURVE",
"-229 562 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 14 138 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 14 169 14 185 14 201 14 217 14 233 14 249 14 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
3 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 8 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 20 166 20 182 20 198 20 214 20 230 20 246 20 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 20 22 20 38 20 54 20 70 20 86 20 102 20 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 20 133 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
17 25 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = hungarumlautcmb;
unicode = 030B;
},
{
glyphname = caroncmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-118 572 LINE",
"-164.667 541.333 OFFCURVE",
"-206 503.667 OFFCURVE",
"-246 465 CURVE",
"-266 503.667 OFFCURVE",
"-287.333 535.333 OFFCURVE",
"-322 574 CURVE",
"-330 569 LINE",
"-295.333 513 OFFCURVE",
"-274 464.667 OFFCURVE",
"-274 406 CURVE",
"-258 406 LINE",
"-215.333 463.333 OFFCURVE",
"-166 515.667 OFFCURVE",
"-114 565 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = caroncmb;
unicode = 030C;
},
{
glyphname = breveinvertedcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-146.22 496 OFFCURVE",
"-114.062 422 OFFCURVE",
"-103 422 CURVE SMOOTH",
"-96.333 422 OFFCURVE",
"-97 428.333 OFFCURVE",
"-97 435 CURVE SMOOTH",
"-97 473.903 OFFCURVE",
"-136.438 530 OFFCURVE",
"-201 530 CURVE SMOOTH",
"-238.401 530 OFFCURVE",
"-346 457.833 OFFCURVE",
"-346 430 CURVE SMOOTH",
"-346 425.333 OFFCURVE",
"-344.333 423 OFFCURVE",
"-341 423 CURVE SMOOTH",
"-327.23 423 OFFCURVE",
"-245.059 496 OFFCURVE",
"-190 496 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = breveinvertedcmb;
unicode = 0311;
},
{
glyphname = commaturnedabovecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-151 592 LINE",
"-209.042 574.587 OFFCURVE",
"-294 517.544 OFFCURVE",
"-294 446 CURVE SMOOTH",
"-294 424.667 OFFCURVE",
"-278.667 402 OFFCURVE",
"-256 402 CURVE SMOOTH",
"-232 402 OFFCURVE",
"-216 413.333 OFFCURVE",
"-216 440 CURVE SMOOTH",
"-216 466.667 OFFCURVE",
"-238 475 OFFCURVE",
"-258 475 CURVE",
"-250.531 532.26 OFFCURVE",
"-195.887 564.645 OFFCURVE",
"-150 583 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 9 14 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 8 166 8 182 8 198 8 214 8 230 8 246 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 8 22 8 38 8 54 8 70 8 86 8 102 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 8 133 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = commaturnedabovecmb;
unicode = 0312;
},
{
glyphname = commaabovecmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-293 398 LINE",
"-234.719 415.484 OFFCURVE",
"-150 472.534 OFFCURVE",
"-150 544 CURVE SMOOTH",
"-150 565.333 OFFCURVE",
"-165.333 588 OFFCURVE",
"-188 588 CURVE SMOOTH",
"-212 588 OFFCURVE",
"-228 576.667 OFFCURVE",
"-228 550 CURVE SMOOTH",
"-228 523.333 OFFCURVE",
"-206 515 OFFCURVE",
"-186 515 CURVE",
"-193.469 457.74 OFFCURVE",
"-248.113 425.355 OFFCURVE",
"-294 407 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 9 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = commaabovecmb;
unicode = 0313;
},
{
glyphname = gravebelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-282.667 12 OFFCURVE",
"-290 -4.333 OFFCURVE",
"-290 -15 CURVE SMOOTH",
"-290 -51.749 OFFCURVE",
"-188.749 -154 OFFCURVE",
"-158 -154 CURVE SMOOTH",
"-154.667 -154 OFFCURVE",
"-153 -152.667 OFFCURVE",
"-153 -150 CURVE SMOOTH",
"-153 -137.371 OFFCURVE",
"-226.735 -79.388 OFFCURVE",
"-230 -50 CURVE SMOOTH",
"-232.667 -15.333 OFFCURVE",
"-245.333 12 OFFCURVE",
"-268 12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = gravebelowcmb;
unicode = 0316;
},
{
glyphname = acutebelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-197.667 12 OFFCURVE",
"-210.333 -15.333 OFFCURVE",
"-213 -50 CURVE SMOOTH",
"-214.751 -81.524 OFFCURVE",
"-290 -136.8 OFFCURVE",
"-290 -150 CURVE SMOOTH",
"-290 -152.667 OFFCURVE",
"-288.333 -154 OFFCURVE",
"-285 -154 CURVE SMOOTH",
"-254.251 -154 OFFCURVE",
"-153 -51.952 OFFCURVE",
"-153 -15 CURVE SMOOTH",
"-153 -4.333 OFFCURVE",
"-160.333 12 OFFCURVE",
"-175 12 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 8 15 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 15 138 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 15 169 15 185 15 201 15 217 15 233 15 249 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = acutebelowcmb;
unicode = 0317;
},
{
glyphname = dotbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-237.667 -37 OFFCURVE",
"-254 -52.333 OFFCURVE",
"-254 -75 CURVE SMOOTH",
"-254 -91 OFFCURVE",
"-245.333 -109 OFFCURVE",
"-228 -109 CURVE SMOOTH",
"-205.333 -109 OFFCURVE",
"-190 -92 OFFCURVE",
"-190 -72 CURVE SMOOTH",
"-190 -57.333 OFFCURVE",
"-199 -37 OFFCURVE",
"-215 -37 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 9 9 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 3 166 3 182 3 198 3 214 3 230 3 246 3 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 3 22 3 38 3 54 3 70 3 86 3 102 3 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 3 133 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotbelowcmb;
unicode = 0323;
},
{
glyphname = dieresisbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-165.667 -38 OFFCURVE",
"-182 -53.333 OFFCURVE",
"-182 -76 CURVE SMOOTH",
"-182 -92 OFFCURVE",
"-173.333 -110 OFFCURVE",
"-156 -110 CURVE SMOOTH",
"-133.333 -110 OFFCURVE",
"-118 -93 OFFCURVE",
"-118 -73 CURVE SMOOTH",
"-118 -58.333 OFFCURVE",
"-127 -38 OFFCURVE",
"-143 -38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-309.667 -38 OFFCURVE",
"-326 -53.333 OFFCURVE",
"-326 -76 CURVE SMOOTH",
"-326 -92 OFFCURVE",
"-317.333 -110 OFFCURVE",
"-300 -110 CURVE SMOOTH",
"-277.333 -110 OFFCURVE",
"-262 -93 OFFCURVE",
"-262 -73 CURVE SMOOTH",
"-262 -58.333 OFFCURVE",
"-271 -38 OFFCURVE",
"-287 -38 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 9 138 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 9 169 9 185 9 201 9 217 9 233 9 249 9 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 9 25 9 41 9 57 9 73 9 89 9 105 9 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 15 166 15 182 15 198 15 214 15 230 15 246 15 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 15 133 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dieresisbelowcmb;
unicode = 0324;
},
{
glyphname = ringbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-308 -140.333 OFFCURVE",
"-279.333 -162 OFFCURVE",
"-246 -162 CURVE SMOOTH",
"-187.213 -162 OFFCURVE",
"-136 -113.829 OFFCURVE",
"-136 -57 CURVE SMOOTH",
"-136 -17 OFFCURVE",
"-164.667 6 OFFCURVE",
"-198 6 CURVE SMOOTH",
"-256.787 6 OFFCURVE",
"-308 -42.171 OFFCURVE",
"-308 -99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-160 -82.973 OFFCURVE",
"-203.624 -154 OFFCURVE",
"-247 -154 CURVE SMOOTH",
"-269.667 -154 OFFCURVE",
"-284 -138.333 OFFCURVE",
"-284 -117 CURVE SMOOTH",
"-284 -73.027 OFFCURVE",
"-240.376 -2 OFFCURVE",
"-197 -2 CURVE SMOOTH",
"-173 -2 OFFCURVE",
"-160 -17.667 OFFCURVE",
"-160 -39 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
74 16 90 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 16 169 16 185 16 201 16 217 16 233 16 249 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 16 25 16 41 16 57 16 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 24 166 24 182 24 198 24 214 24 230 24 246 24 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 24 22 24 38 24 54 24 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 24 85 24 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 13 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ringbelowcmb;
unicode = 0325;
},
{
glyphname = commaaccent;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-284 -148 LINE",
"-224.297 -139.859 OFFCURVE",
"-159 -96.895 OFFCURVE",
"-159 -40 CURVE SMOOTH",
"-159 -24 OFFCURVE",
"-168.667 -7 OFFCURVE",
"-186 -7 CURVE SMOOTH",
"-203.333 -7 OFFCURVE",
"-214 -19.667 OFFCURVE",
"-214 -37 CURVE SMOOTH",
"-214 -53 OFFCURVE",
"-200.667 -60 OFFCURVE",
"-190 -60 CURVE SMOOTH",
"-186 -60 OFFCURVE",
"-183 -59.667 OFFCURVE",
"-181 -59 CURVE",
"-186.171 -105.536 OFFCURVE",
"-237.915 -135.867 OFFCURVE",
"-284 -144 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 4 10 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 10 138 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 10 169 10 185 10 201 10 217 10 233 10 249 10 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 10 25 10 41 10 57 10 73 10 89 10 105 10 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = commaaccent;
unicode = F6C3;
},
{
glyphname = cedillacmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-331 -175 LINE",
"-307 -184.333 OFFCURVE",
"-281.667 -184 OFFCURVE",
"-255 -184 CURVE SMOOTH",
"-205.031 -184 OFFCURVE",
"-113 -168.028 OFFCURVE",
"-113 -110 CURVE SMOOTH",
"-113 -64.774 OFFCURVE",
"-166.155 -60.803 OFFCURVE",
"-211 -58 CURVE",
"-178 -4 LINE",
"-189 -4 LINE",
"-234 -78 LINE",
"-205.333 -78.667 OFFCURVE",
"-185.333 -80.833 OFFCURVE",
"-174 -84.5 CURVE SMOOTH",
"-162.667 -88.167 OFFCURVE",
"-157 -98 OFFCURVE",
"-157 -114 CURVE SMOOTH",
"-157 -159.662 OFFCURVE",
"-220.115 -172 OFFCURVE",
"-262 -172 CURVE SMOOTH",
"-284.667 -172 OFFCURVE",
"-307.333 -171 OFFCURVE",
"-330 -167 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
19 6 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
74 8 90 8 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 8 25 8 41 8 57 8 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
14 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = cedillacmb;
unicode = 0327;
},
{
glyphname = ogonekcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-210 -183 OFFCURVE",
"-197.167 -181.5 OFFCURVE",
"-187.5 -178.5 CURVE SMOOTH",
"-177.833 -175.5 OFFCURVE",
"-172 -172.333 OFFCURVE",
"-170 -169 CURVE",
"-168.667 -167.667 OFFCURVE",
"-167.167 -164 OFFCURVE",
"-165.5 -158 CURVE SMOOTH",
"-163.833 -152 OFFCURVE",
"-162.333 -147 OFFCURVE",
"-161 -143 CURVE",
"-171.667 -149.667 OFFCURVE",
"-188 -155 OFFCURVE",
"-204 -155 CURVE SMOOTH",
"-238.667 -155 OFFCURVE",
"-255 -130.667 OFFCURVE",
"-255 -104 CURVE SMOOTH",
"-255 -78.667 OFFCURVE",
"-241.667 -56 OFFCURVE",
"-231 -40 CURVE",
"-225.667 -30.667 OFFCURVE",
"-219.833 -22.333 OFFCURVE",
"-213.5 -15 CURVE SMOOTH",
"-207.167 -7.667 OFFCURVE",
"-203.667 -3 OFFCURVE",
"-203 -1 CURVE",
"-203.667 1 OFFCURVE",
"-205.667 2 OFFCURVE",
"-209 2 CURVE SMOOTH",
"-211 2 OFFCURVE",
"-214.5 -0.833 OFFCURVE",
"-219.5 -6.5 CURVE SMOOTH",
"-224.5 -12.167 OFFCURVE",
"-229.333 -17.333 OFFCURVE",
"-234 -22 CURVE SMOOTH",
"-260.667 -50 OFFCURVE",
"-283 -80.667 OFFCURVE",
"-283 -118 CURVE SMOOTH",
"-283 -155.333 OFFCURVE",
"-262 -183 OFFCURVE",
"-226 -183 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
17 5 3 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 17 166 17 182 17 198 17 214 17 230 17 246 17 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
6 17 22 17 38 17 54 17 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
69 17 85 17 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 2 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ogonekcmb;
unicode = 0328;
},
{
glyphname = caronbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-118 12 LINE",
"-164.667 -18.667 OFFCURVE",
"-206 -56.333 OFFCURVE",
"-246 -95 CURVE",
"-266 -56.333 OFFCURVE",
"-287.333 -24.667 OFFCURVE",
"-322 14 CURVE",
"-330 9 LINE",
"-295.333 -47 OFFCURVE",
"-274 -95.333 OFFCURVE",
"-274 -154 CURVE",
"-258 -154 LINE",
"-215.333 -96.667 OFFCURVE",
"-166 -44.333 OFFCURVE",
"-114 5 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = caronbelowcmb;
unicode = 032C;
},
{
glyphname = circumflexbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-326 -154 LINE",
"-279.333 -123.333 OFFCURVE",
"-238 -85.667 OFFCURVE",
"-198 -47 CURVE",
"-178 -85.667 OFFCURVE",
"-156.667 -117.333 OFFCURVE",
"-122 -156 CURVE",
"-114 -151 LINE",
"-148.667 -95 OFFCURVE",
"-170 -46.667 OFFCURVE",
"-170 12 CURVE",
"-186 12 LINE",
"-228.667 -45.333 OFFCURVE",
"-278 -97.667 OFFCURVE",
"-330 -147 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
11 8 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflexbelowcmb;
unicode = 032D;
},
{
glyphname = brevebelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-296.78 -104 OFFCURVE",
"-328.938 -30 OFFCURVE",
"-340 -30 CURVE SMOOTH",
"-346.667 -30 OFFCURVE",
"-346 -36.333 OFFCURVE",
"-346 -43 CURVE SMOOTH",
"-346 -81.903 OFFCURVE",
"-306.562 -138 OFFCURVE",
"-242 -138 CURVE SMOOTH",
"-204.599 -138 OFFCURVE",
"-97 -65.833 OFFCURVE",
"-97 -38 CURVE SMOOTH",
"-97 -33.333 OFFCURVE",
"-98.667 -31 OFFCURVE",
"-102 -31 CURVE SMOOTH",
"-115.77 -31 OFFCURVE",
"-197.941 -104 OFFCURVE",
"-253 -104 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
0 3 12 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = brevebelowcmb;
unicode = 032E;
},
{
glyphname = breveinvertedbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-146.22 -64 OFFCURVE",
"-114.062 -138 OFFCURVE",
"-103 -138 CURVE SMOOTH",
"-96.333 -138 OFFCURVE",
"-97 -131.667 OFFCURVE",
"-97 -125 CURVE SMOOTH",
"-97 -86.097 OFFCURVE",
"-136.438 -30 OFFCURVE",
"-201 -30 CURVE SMOOTH",
"-238.401 -30 OFFCURVE",
"-346 -102.167 OFFCURVE",
"-346 -130 CURVE SMOOTH",
"-346 -134.667 OFFCURVE",
"-344.333 -137 OFFCURVE",
"-341 -137 CURVE SMOOTH",
"-327.23 -137 OFFCURVE",
"-245.059 -64 OFFCURVE",
"-190 -64 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = breveinvertedbelowcmb;
unicode = 032F;
},
{
glyphname = tildebelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-118.411 -109.246 OFFCURVE",
"-86 -69.403 OFFCURVE",
"-86 -30 CURVE SMOOTH",
"-86 -26 OFFCURVE",
"-87.667 -24 OFFCURVE",
"-91 -24 CURVE SMOOTH",
"-95.667 -24 OFFCURVE",
"-98 -27 OFFCURVE",
"-98 -33 CURVE SMOOTH",
"-98 -50.333 OFFCURVE",
"-122 -68 OFFCURVE",
"-150 -68 CURVE SMOOTH",
"-187.369 -68 OFFCURVE",
"-253.006 -30 OFFCURVE",
"-284 -30 CURVE SMOOTH",
"-330.349 -30 OFFCURVE",
"-358 -67.2 OFFCURVE",
"-358 -102 CURVE SMOOTH",
"-358 -108.667 OFFCURVE",
"-356.667 -112 OFFCURVE",
"-354 -112 CURVE SMOOTH",
"-344.213 -112 OFFCURVE",
"-326.59 -68 OFFCURVE",
"-300 -68 CURVE SMOOTH",
"-258.628 -68 OFFCURVE",
"-207.297 -104 OFFCURVE",
"-163 -104 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
22 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = tildebelowcmb;
unicode = 0330;
},
{
glyphname = macronbelowcmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-303 -69 LINE SMOOTH",
"-318.333 -69 OFFCURVE",
"-329.5 -71 OFFCURVE",
"-336.5 -75 CURVE SMOOTH",
"-343.5 -79 OFFCURVE",
"-347 -83.667 OFFCURVE",
"-347 -89 CURVE SMOOTH",
"-347 -95.667 OFFCURVE",
"-340.667 -95 OFFCURVE",
"-334 -95 CURVE SMOOTH",
"-134 -95 LINE SMOOTH",
"-119.333 -95 OFFCURVE",
"-109.5 -93.167 OFFCURVE",
"-104.5 -89.5 CURVE SMOOTH",
"-99.5 -85.833 OFFCURVE",
"-97 -81.333 OFFCURVE",
"-97 -76 CURVE SMOOTH",
"-97 -72.667 OFFCURVE",
"-98.667 -70.667 OFFCURVE",
"-102 -70 CURVE SMOOTH",
"-105.333 -69.333 OFFCURVE",
"-111.667 -69 OFFCURVE",
"-121 -69 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 2 6 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = macronbelowcmb;
unicode = 0331;
},
{
glyphname = soliduslongoverlaycmb;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-345 -16 LINE",
"-62 712 LINE",
"-99 712 LINE",
"-382 -16 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = soliduslongoverlaycmb;
unicode = 0338;
},
{
glyphname = angstrom;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"734 311 LINE",
"707.333 243 OFFCURVE",
"682 174 OFFCURVE",
"682 98 CURVE SMOOTH",
"682 39.738 OFFCURVE",
"709.935 -8 OFFCURVE",
"771 -8 CURVE SMOOTH",
"869.788 -8 OFFCURVE",
"989.9 155.639 OFFCURVE",
"1074 262 CURVE",
"1067 265 LINE",
"1044.904 234.87 OFFCURVE",
"981.273 157.911 OFFCURVE",
"943.5 118 CURVE SMOOTH",
"898.733 70.699 OFFCURVE",
"834.529 16 OFFCURVE",
"795 16 CURVE SMOOTH",
"752.333 16 OFFCURVE",
"742 48.667 OFFCURVE",
"742 90 CURVE SMOOTH",
"742 150 OFFCURVE",
"762.833 223.5 OFFCURVE",
"795.5 301.5 CURVE SMOOTH",
"811.833 340.5 OFFCURVE",
"830.667 379.667 OFFCURVE",
"852 419 CURVE SMOOTH",
"894.667 497.667 OFFCURVE",
"942.667 569.667 OFFCURVE",
"992 631 CURVE SMOOTH",
"1016.667 661.667 OFFCURVE",
"1040.333 687.333 OFFCURVE",
"1063 708 CURVE",
"1060 712 LINE",
"988 692 OFFCURVE",
"918 649.667 OFFCURVE",
"854 599 CURVE SMOOTH",
"822 573.667 OFFCURVE",
"791.833 546.833 OFFCURVE",
"763.5 518.5 CURVE SMOOTH",
"706.833 461.833 OFFCURVE",
"658.5 405.667 OFFCURVE",
"620.5 359 CURVE SMOOTH",
"601.5 335.667 OFFCURVE",
"585.667 316 OFFCURVE",
"573 300 CURVE SMOOTH",
"514.333 228 OFFCURVE",
"449.167 156.5 OFFCURVE",
"384.5 102.5 CURVE SMOOTH",
"319.833 48.5 OFFCURVE",
"255.333 12 OFFCURVE",
"198 12 CURVE SMOOTH",
"175.333 12 OFFCURVE",
"152 16.333 OFFCURVE",
"140 35 CURVE",
"152 37.667 OFFCURVE",
"159 52 OFFCURVE",
"159 64 CURVE SMOOTH",
"159 84 OFFCURVE",
"146.333 101 OFFCURVE",
"125 101 CURVE SMOOTH",
"101 101 OFFCURVE",
"87 82.667 OFFCURVE",
"87 60 CURVE SMOOTH",
"87 25.816 OFFCURVE",
"113.864 -8 OFFCURVE",
"187 -8 CURVE SMOOTH",
"251 -8 OFFCURVE",
"321.5 30.167 OFFCURVE",
"391.5 89.5 CURVE SMOOTH",
"461.5 148.833 OFFCURVE",
"531.667 228.333 OFFCURVE",
"597 311 CURVE"
);
},
{
closed = 1;
nodes = (
"605 323 LINE",
"662.333 396.333 OFFCURVE",
"723 466.667 OFFCURVE",
"787 528 CURVE SMOOTH",
"851 589.333 OFFCURVE",
"918.333 641.333 OFFCURVE",
"989 676 CURVE",
"991 674 LINE",
"879 567.333 OFFCURVE",
"799 447 OFFCURVE",
"739 323 CURVE"
);
},
{
closed = 1;
nodes = (
"968 739.667 OFFCURVE",
"996.667 718 OFFCURVE",
"1030 718 CURVE SMOOTH",
"1088.787 718 OFFCURVE",
"1140 766.171 OFFCURVE",
"1140 823 CURVE SMOOTH",
"1140 863 OFFCURVE",
"1111.333 886 OFFCURVE",
"1078 886 CURVE SMOOTH",
"1019.213 886 OFFCURVE",
"968 837.829 OFFCURVE",
"968 781 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1116 797.027 OFFCURVE",
"1072.376 726 OFFCURVE",
"1029 726 CURVE SMOOTH",
"1006.333 726 OFFCURVE",
"992 741.667 OFFCURVE",
"992 763 CURVE SMOOTH",
"992 806.973 OFFCURVE",
"1035.624 878 OFFCURVE",
"1079 878 CURVE SMOOTH",
"1103 878 OFFCURVE",
"1116 862.333 OFFCURVE",
"1116 841 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 9 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 8 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
101 5 77 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 5 93 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 16 166 16 182 16 198 16 214 16 230 16 246 16 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 16 133 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
19 10 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
35 10 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
53 10 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
122 63 138 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 63 169 63 185 63 201 63 217 63 233 63 249 63 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 63 25 63 41 63 57 63 73 63 89 63 105 63 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
66 63 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 77 90 77 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 77 169 77 185 77 201 77 217 77 233 77 249 77 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 77 25 77 41 77 57 77 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
71 77 101 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
76 10 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
74 93 90 93 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 15 values pushed */
153 93 169 93 185 93 201 93 217 93 233 93 249 93 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 93 25 93 41 93 57 93 73 93 89 93 105 93 121 93 137 93 153 93 169 93 185 93 201 93 217 93 233 93 249 93 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
9 93 25 93 41 93 57 93 4 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
82 90 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 13 167 13 183 13 199 13 215 13 231 13 247 13 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 13 23 13 39 13 55 13 71 13 87 13 103 13 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 13 134 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
19 5 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 22 167 22 183 22 199 22 215 22 231 22 247 22 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 944;
}
);
note = angstrom;
unicode = 212B;
},
{
glyphname = combininggraphemejoiner;
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 0;
}
);
note = combininggraphemejoiner;
unicode = 034F;
},
{
glyphname = Euro;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"235 267 LINE",
"302.048 396.307 OFFCURVE",
"456.54 522 OFFCURVE",
"546 522 CURVE SMOOTH",
"596.667 522 OFFCURVE",
"614 497.333 OFFCURVE",
"614 448 CURVE SMOOTH",
"614 394.504 OFFCURVE",
"572.665 349 OFFCURVE",
"517 349 CURVE SMOOTH",
"483.667 349 OFFCURVE",
"454 363.667 OFFCURVE",
"454 401 CURVE SMOOTH",
"454 415 LINE SMOOTH",
"454 417 OFFCURVE",
"454.333 418.333 OFFCURVE",
"455 419 CURVE",
"441 416 LINE",
"440.333 415.333 OFFCURVE",
"440 414 OFFCURVE",
"440 412 CURVE SMOOTH",
"440 399 LINE SMOOTH",
"440 352.333 OFFCURVE",
"475.667 336 OFFCURVE",
"513 336 CURVE SMOOTH",
"589.646 336 OFFCURVE",
"662 389.016 OFFCURVE",
"662 461 CURVE SMOOTH",
"662 512.333 OFFCURVE",
"630.667 538 OFFCURVE",
"568 538 CURVE SMOOTH",
"508 538 OFFCURVE",
"432 506.5 OFFCURVE",
"360 456.5 CURVE SMOOTH",
"288 406.5 OFFCURVE",
"220.333 339 OFFCURVE",
"179 267 CURVE",
"68 267 LINE",
"62 253 LINE",
"171 253 LINE",
"163 237.667 OFFCURVE",
"156 222.667 OFFCURVE",
"150 208 CURVE",
"40 208 LINE",
"34 194 LINE",
"146 194 LINE",
"138 168.667 OFFCURVE",
"134 144.333 OFFCURVE",
"134 121 CURVE SMOOTH",
"134 33 OFFCURVE",
"178 -16 OFFCURVE",
"286 -16 CURVE SMOOTH",
"371.333 -16 OFFCURVE",
"427.667 25.667 OFFCURVE",
"465 75 CURVE",
"458 90 LINE",
"422 34 OFFCURVE",
"356 1 OFFCURVE",
"288 1 CURVE SMOOTH",
"221.602 1 OFFCURVE",
"193 52.35 OFFCURVE",
"193 111 CURVE SMOOTH",
"193 139 OFFCURVE",
"197 166.667 OFFCURVE",
"205 194 CURVE",
"460 194 LINE",
"467 208 LINE",
"209 208 LINE",
"214.333 222.667 OFFCURVE",
"221.333 238.333 OFFCURVE",
"228 253 CURVE",
"488 253 LINE",
"495 267 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
10 8 25 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
42 51 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 51 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 25 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 51 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 15 values pushed */
150 10 166 10 182 10 198 10 214 10 230 10 246 10 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 10 22 10 38 10 54 10 70 10 86 10 102 10 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 10 133 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 51 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 25 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
32 25 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 7 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
73 25 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
40 47 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 1 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
18 22 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 22 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
33 7 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 516;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = stroke.start;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"350 262.333 OFFCURVE",
"348 264 OFFCURVE",
"344 264 CURVE SMOOTH",
"340 264 OFFCURVE",
"336 260.833 OFFCURVE",
"332 254.5 CURVE SMOOTH",
"328 248.167 OFFCURVE",
"320 237.333 OFFCURVE",
"308 222 CURVE SMOOTH",
"242.667 136.667 OFFCURVE",
"182.833 82.167 OFFCURVE",
"135.5 45.5 CURVE SMOOTH",
"88.167 8.833 OFFCURVE",
"52.667 -7.667 OFFCURVE",
"34 -17 CURVE SMOOTH",
"30 -19 OFFCURVE",
"28 -21 OFFCURVE",
"28 -23 CURVE SMOOTH",
"28 -26.333 OFFCURVE",
"29 -28 OFFCURVE",
"31 -28 CURVE SMOOTH",
"37.641 -28 OFFCURVE",
"67.988 -13.007 OFFCURVE",
"97.5 6 CURVE SMOOTH",
"136.833 31.333 OFFCURVE",
"191.667 74 OFFCURVE",
"257 142 CURVE SMOOTH",
"266.617 152.685 OFFCURVE",
"350 245.837 OFFCURVE",
"350 259 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = stroke.start;
},
{
glyphname = divisionslash.clone;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-37 -8 LINE",
"-9 -8 LINE",
"405 538 LINE",
"376 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = divisionslash.clone;
},
{
glyphname = uni29F5;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-209 538 LINE",
"-238 538 LINE",
"176 -8 LINE",
"204 -8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = uni29F5;
unicode = 29F5;
},
{
glyphname = quotesinglbase.clone;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-11 -120 LINE",
"47.042 -102.587 OFFCURVE",
"132 -45.544 OFFCURVE",
"132 26 CURVE SMOOTH",
"132 47.333 OFFCURVE",
"116.667 70 OFFCURVE",
"94 70 CURVE SMOOTH",
"70 70 OFFCURVE",
"54 58.667 OFFCURVE",
"54 32 CURVE SMOOTH",
"54 5.333 OFFCURVE",
"76 -3 OFFCURVE",
"96 -3 CURVE",
"88.531 -60.26 OFFCURVE",
"33.887 -92.645 OFFCURVE",
"-12 -111 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 9 8 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quotesinglbase.clone;
},
{
glyphname = quotesinglbase.mirror;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"234 -111 LINE",
"188.113 -92.645 OFFCURVE",
"133.469 -60.26 OFFCURVE",
"126 -3 CURVE",
"146 -3 OFFCURVE",
"168 5.333 OFFCURVE",
"168 32 CURVE SMOOTH",
"168 58.667 OFFCURVE",
"152 70 OFFCURVE",
"128 70 CURVE SMOOTH",
"105.333 70 OFFCURVE",
"90 47.333 OFFCURVE",
"90 26 CURVE SMOOTH",
"90 -45.544 OFFCURVE",
"174.958 -102.587 OFFCURVE",
"233 -120 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 9 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 15 values pushed */
150 11 166 11 182 11 198 11 214 11 230 11 246 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 11 22 11 38 11 54 11 70 11 86 11 102 11 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 11 133 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = quotesinglbase.mirror;
},
{
glyphname = quotedblbase.clone;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"130 -120 LINE",
"188.042 -102.587 OFFCURVE",
"273 -45.544 OFFCURVE",
"273 26 CURVE SMOOTH",
"273 47.333 OFFCURVE",
"257.667 70 OFFCURVE",
"235 70 CURVE SMOOTH",
"211 70 OFFCURVE",
"195 58.667 OFFCURVE",
"195 32 CURVE SMOOTH",
"195 5.333 OFFCURVE",
"217 -3 OFFCURVE",
"237 -3 CURVE",
"229.531 -60.26 OFFCURVE",
"174.887 -92.645 OFFCURVE",
"129 -111 CURVE"
);
},
{
closed = 1;
nodes = (
"-37 -120 LINE",
"21.042 -102.587 OFFCURVE",
"106 -45.544 OFFCURVE",
"106 26 CURVE SMOOTH",
"106 47.333 OFFCURVE",
"90.667 70 OFFCURVE",
"68 70 CURVE SMOOTH",
"44 70 OFFCURVE",
"28 58.667 OFFCURVE",
"28 32 CURVE SMOOTH",
"28 5.333 OFFCURVE",
"50 -3 OFFCURVE",
"70 -3 CURVE",
"62.531 -60.26 OFFCURVE",
"7.887 -92.645 OFFCURVE",
"-38 -111 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
122 8 138 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 8 169 8 185 8 201 8 217 8 233 8 249 8 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 105 8 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
34 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 34 166 34 182 34 198 34 214 34 230 34 246 34 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 34 133 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
151 11 167 11 183 11 199 11 215 11 231 11 247 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
118 11 134 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = quotedblbase.clone;
},
{
glyphname = quotedblbase.mirror;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"260 -111 LINE",
"214.113 -92.645 OFFCURVE",
"159.469 -60.26 OFFCURVE",
"152 -3 CURVE",
"172 -3 OFFCURVE",
"194 5.333 OFFCURVE",
"194 32 CURVE SMOOTH",
"194 58.667 OFFCURVE",
"178 70 OFFCURVE",
"154 70 CURVE SMOOTH",
"131.333 70 OFFCURVE",
"116 47.333 OFFCURVE",
"116 26 CURVE SMOOTH",
"116 -45.544 OFFCURVE",
"200.958 -102.587 OFFCURVE",
"259 -120 CURVE"
);
},
{
closed = 1;
nodes = (
"427 -111 LINE",
"381.113 -92.645 OFFCURVE",
"326.469 -60.26 OFFCURVE",
"319 -3 CURVE",
"339 -3 OFFCURVE",
"361 5.333 OFFCURVE",
"361 32 CURVE SMOOTH",
"361 58.667 OFFCURVE",
"345 70 OFFCURVE",
"321 70 CURVE SMOOTH",
"298.333 70 OFFCURVE",
"283 47.333 OFFCURVE",
"283 26 CURVE SMOOTH",
"283 -45.544 OFFCURVE",
"367.958 -102.587 OFFCURVE",
"426 -120 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 15 values pushed */
150 11 166 11 182 11 198 11 214 11 230 11 246 11 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
6 11 22 11 38 11 54 11 70 11 86 11 102 11 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
117 11 133 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
122 25 138 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
153 25 169 25 185 25 201 25 217 25 233 25 249 25 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 15 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 105 25 7 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = quotedblbase.mirror;
},
{
glyphname = uni2216.clone;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-8 538 LINE",
"-37 538 LINE",
"377 -8 LINE",
"405 -8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = uni2216.clone;
},
{
glyphname = uni2216.mirror;
lastChange = "2018-11-16 05:15:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-238 -8 LINE",
"-210 -8 LINE",
"204 538 LINE",
"175 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 10 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = uni2216.mirror;
},
{
glyphname = "ha-ethiopic";
lastChange = "2018-11-27 04:21:24 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"677 332 OFFCURVE",
"636 271 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 97 OFFCURVE",
"628 168 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE"
);
}
);
width = 791;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2018-11-27 04:21:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"757 363 LINE",
"970 363 LINE",
"970 384 LINE",
"757 384 LINE"
);
},
{
closed = 1;
nodes = (
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"677 332 OFFCURVE",
"636 271 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 97 OFFCURVE",
"628 168 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE"
);
}
);
width = 791;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2018-11-27 04:21:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"620 250 LINE",
"615 242 OFFCURVE",
"609 235 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 93 OFFCURVE",
"622 156 OFFCURVE",
"679 246 CURVE"
);
},
{
closed = 1;
nodes = (
"679 246 LINE",
"685 255 OFFCURVE",
"691 264 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"685 345 OFFCURVE",
"649 291 OFFCURVE",
"620 250 CURVE"
);
},
{
closed = 1;
nodes = (
"430 -67 LINE",
"456 -85 LINE",
"601 152 LINE",
"574 170 LINE"
);
},
{
closed = 1;
nodes = (
"388 -201 LINE",
"490 -30 LINE",
"463 -12 LINE",
"351 -201 LINE"
);
},
{
closed = 1;
nodes = (
"521 -169 LINE",
"383 -167 LINE",
"381 -201 LINE",
"486 -201 LINE"
);
}
);
width = 791;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2018-11-27 04:21:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"620 250 LINE",
"615 242 OFFCURVE",
"609 235 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 93 OFFCURVE",
"622 156 OFFCURVE",
"679 246 CURVE"
);
},
{
closed = 1;
nodes = (
"679 246 LINE",
"685 255 OFFCURVE",
"691 264 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"685 345 OFFCURVE",
"649 291 OFFCURVE",
"620 250 CURVE"
);
},
{
closed = 1;
nodes = (
"430 -67 LINE",
"456 -85 LINE",
"601 152 LINE",
"574 170 LINE"
);
},
{
closed = 1;
nodes = (
"388 -201 LINE",
"490 -30 LINE",
"463 -12 LINE",
"351 -201 LINE"
);
}
);
width = 791;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2018-11-27 04:21:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"620 250 LINE",
"615 242 OFFCURVE",
"609 235 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 93 OFFCURVE",
"622 156 OFFCURVE",
"679 246 CURVE"
);
},
{
closed = 1;
nodes = (
"679 246 LINE",
"685 255 OFFCURVE",
"691 264 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"685 345 OFFCURVE",
"649 291 OFFCURVE",
"620 250 CURVE"
);
},
{
closed = 1;
nodes = (
"430 -67 LINE",
"456 -85 LINE",
"601 152 LINE",
"574 170 LINE"
);
},
{
closed = 1;
nodes = (
"388 -200 LINE",
"490 -30 LINE",
"463 -12 LINE",
"357 -198 LINE"
);
},
{
closed = 1;
nodes = (
"357 -198 LINE",
"373 -200 OFFCURVE",
"389 -201 OFFCURVE",
"405 -201 CURVE SMOOTH",
"454 -201 OFFCURVE",
"506 -188 OFFCURVE",
"545 -166 CURVE SMOOTH",
"581 -146 OFFCURVE",
"611 -113 OFFCURVE",
"611 -81 CURVE SMOOTH",
"611 -53 OFFCURVE",
"591 -36 OFFCURVE",
"553 -36 CURVE SMOOTH",
"530 -36 OFFCURVE",
"512 -44 OFFCURVE",
"497 -59 CURVE SMOOTH",
"495 -61 OFFCURVE",
"493 -64 OFFCURVE",
"491 -66 CURVE",
"499 -69 LINE",
"501 -67 OFFCURVE",
"502 -65 OFFCURVE",
"505 -63 CURVE SMOOTH",
"520 -53 OFFCURVE",
"536 -44 OFFCURVE",
"552 -44 CURVE SMOOTH",
"577 -44 OFFCURVE",
"592 -54 OFFCURVE",
"592 -79 CURVE SMOOTH",
"592 -115 OFFCURVE",
"563 -146 OFFCURVE",
"527 -165 CURVE SMOOTH",
"495 -182 OFFCURVE",
"441 -193 OFFCURVE",
"406 -193 CURVE SMOOTH",
"393 -193 OFFCURVE",
"380 -193 OFFCURVE",
"368 -191 CURVE"
);
}
);
width = 791;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2018-11-27 04:21:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"525 448 LINE",
"525 431 OFFCURVE",
"421 379 OFFCURVE",
"406 361 CURVE SMOOTH",
"341 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 97 OFFCURVE",
"628 168 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"677 332 OFFCURVE",
"636 271 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"326 168 OFFCURVE",
"369 228 CURVE SMOOTH",
"394 263 OFFCURVE",
"428 300 OFFCURVE",
"457 339 CURVE SMOOTH",
"474 361 OFFCURVE",
"601 427 OFFCURVE",
"601 448 CURVE"
);
},
{
closed = 1;
nodes = (
"500 447 LINE",
"524 485 OFFCURVE",
"545 519 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"448 465 OFFCURVE",
"442 456 OFFCURVE",
"436 447 CURVE"
);
},
{
closed = 1;
nodes = (
"440 447 LINE",
"601 447 LINE",
"601 457 LINE",
"446 457 LINE"
);
}
);
width = 791;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2018-11-27 04:21:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"620 250 LINE",
"615 242 OFFCURVE",
"609 235 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 93 OFFCURVE",
"622 156 OFFCURVE",
"679 246 CURVE"
);
},
{
closed = 1;
nodes = (
"679 246 LINE",
"685 255 OFFCURVE",
"691 264 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"685 345 OFFCURVE",
"649 291 OFFCURVE",
"620 250 CURVE"
);
},
{
closed = 1;
nodes = (
"834 542 LINE",
"850 540 OFFCURVE",
"866 539 OFFCURVE",
"882 539 CURVE SMOOTH",
"931 539 OFFCURVE",
"983 552 OFFCURVE",
"1022 574 CURVE SMOOTH",
"1058 594 OFFCURVE",
"1088 627 OFFCURVE",
"1088 659 CURVE SMOOTH",
"1088 687 OFFCURVE",
"1068 704 OFFCURVE",
"1030 704 CURVE SMOOTH",
"1007 704 OFFCURVE",
"989 696 OFFCURVE",
"974 681 CURVE SMOOTH",
"972 679 OFFCURVE",
"970 676 OFFCURVE",
"968 674 CURVE",
"976 671 LINE",
"978 673 OFFCURVE",
"979 675 OFFCURVE",
"982 677 CURVE SMOOTH",
"997 687 OFFCURVE",
"1013 696 OFFCURVE",
"1029 696 CURVE SMOOTH",
"1054 696 OFFCURVE",
"1069 686 OFFCURVE",
"1069 661 CURVE SMOOTH",
"1069 625 OFFCURVE",
"1040 594 OFFCURVE",
"1004 575 CURVE SMOOTH",
"972 558 OFFCURVE",
"918 547 OFFCURVE",
"883 547 CURVE SMOOTH",
"870 547 OFFCURVE",
"857 547 OFFCURVE",
"845 549 CURVE"
);
}
);
width = 821;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2018-11-27 04:21:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"153 274 LINE",
"366 274 LINE",
"366 295 LINE",
"153 295 LINE"
);
},
{
closed = 1;
nodes = (
"620 250 LINE",
"615 242 OFFCURVE",
"609 235 OFFCURVE",
"604 228 CURVE SMOOTH",
"553 157 OFFCURVE",
"399 8 OFFCURVE",
"307 8 CURVE SMOOTH",
"288 8 OFFCURVE",
"269 20 OFFCURVE",
"269 52 CURVE SMOOTH",
"269 93 OFFCURVE",
"304 156 OFFCURVE",
"351 228 CURVE SMOOTH",
"374 263 OFFCURVE",
"400 300 OFFCURVE",
"427 339 CURVE SMOOTH",
"482 415 OFFCURVE",
"530 489 OFFCURVE",
"562 553 CURVE SMOOTH",
"577 584 OFFCURVE",
"585 611 OFFCURVE",
"585 633 CURVE SMOOTH",
"585 685 OFFCURVE",
"546 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"338 712 OFFCURVE",
"178 566 OFFCURVE",
"178 439 CURVE SMOOTH",
"178 383 OFFCURVE",
"210 354 OFFCURVE",
"262 354 CURVE SMOOTH",
"313 354 OFFCURVE",
"365 397 OFFCURVE",
"390 439 CURVE",
"379 441 LINE",
"357 405 OFFCURVE",
"313 366 OFFCURVE",
"263 366 CURVE SMOOTH",
"210 366 OFFCURVE",
"190 397 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 563 OFFCURVE",
"348 700 OFFCURVE",
"479 700 CURVE SMOOTH",
"510 700 OFFCURVE",
"537 689 OFFCURVE",
"537 656 CURVE SMOOTH",
"537 612 OFFCURVE",
"501 547 OFFCURVE",
"454 474 CURVE SMOOTH",
"430 437 OFFCURVE",
"404 400 OFFCURVE",
"376 361 CURVE SMOOTH",
"320 283 OFFCURVE",
"271 208 OFFCURVE",
"239 144 CURVE SMOOTH",
"223 112 OFFCURVE",
"215 85 OFFCURVE",
"215 62 CURVE SMOOTH",
"215 17 OFFCURVE",
"244 -8 OFFCURVE",
"291 -8 CURVE SMOOTH",
"387 -8 OFFCURVE",
"505 99 OFFCURVE",
"570 170 CURVE",
"572 168 LINE",
"557 145 OFFCURVE",
"540 108 OFFCURVE",
"540 79 CURVE SMOOTH",
"540 27 OFFCURVE",
"564 -8 OFFCURVE",
"620 -8 CURVE SMOOTH",
"677 -8 OFFCURVE",
"736 26 OFFCURVE",
"793 78 CURVE SMOOTH",
"850 129 OFFCURVE",
"906 196 OFFCURVE",
"958 263 CURVE",
"950 266 LINE",
"868 164 OFFCURVE",
"732 4 OFFCURVE",
"633 4 CURVE SMOOTH",
"601 4 OFFCURVE",
"588 24 OFFCURVE",
"588 53 CURVE SMOOTH",
"588 93 OFFCURVE",
"622 156 OFFCURVE",
"679 246 CURVE"
);
},
{
closed = 1;
nodes = (
"679 246 LINE",
"685 255 OFFCURVE",
"691 264 OFFCURVE",
"697 273 CURVE SMOOTH",
"731 325 OFFCURVE",
"772 386 OFFCURVE",
"819 456 CURVE SMOOTH",
"866 526 OFFCURVE",
"917 606 OFFCURVE",
"973 696 CURVE",
"906 696 LINE",
"835 584 OFFCURVE",
"775 489 OFFCURVE",
"726 411 CURVE SMOOTH",
"685 345 OFFCURVE",
"649 291 OFFCURVE",
"620 250 CURVE"
);
},
{
closed = 1;
nodes = (
"834 542 LINE",
"850 540 OFFCURVE",
"866 539 OFFCURVE",
"882 539 CURVE SMOOTH",
"931 539 OFFCURVE",
"983 552 OFFCURVE",
"1022 574 CURVE SMOOTH",
"1058 594 OFFCURVE",
"1088 627 OFFCURVE",
"1088 659 CURVE SMOOTH",
"1088 687 OFFCURVE",
"1068 704 OFFCURVE",
"1030 704 CURVE SMOOTH",
"1007 704 OFFCURVE",
"989 696 OFFCURVE",
"974 681 CURVE SMOOTH",
"972 679 OFFCURVE",
"970 676 OFFCURVE",
"968 674 CURVE",
"976 671 LINE",
"978 673 OFFCURVE",
"979 675 OFFCURVE",
"982 677 CURVE SMOOTH",
"997 687 OFFCURVE",
"1013 696 OFFCURVE",
"1029 696 CURVE SMOOTH",
"1054 696 OFFCURVE",
"1069 686 OFFCURVE",
"1069 661 CURVE SMOOTH",
"1069 625 OFFCURVE",
"1040 594 OFFCURVE",
"1004 575 CURVE SMOOTH",
"972 558 OFFCURVE",
"918 547 OFFCURVE",
"883 547 CURVE SMOOTH",
"870 547 OFFCURVE",
"857 547 OFFCURVE",
"845 549 CURVE"
);
}
);
width = 821;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2018-11-27 04:21:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
}
);
width = 826;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2018-11-27 04:21:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
},
{
closed = 1;
nodes = (
"665 181 LINE",
"878 181 LINE",
"878 202 LINE",
"665 202 LINE"
);
}
);
width = 826;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2018-11-27 04:21:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE SMOOTH",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE SMOOTH",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"563 407 LINE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE SMOOTH",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"644 131 LINE",
"622 131 LINE",
"538 -59 OFFCURVE",
"536 -63 OFFCURVE",
"536 -64 CURVE SMOOTH",
"536 -76 LINE",
"769 -76 LINE",
"769 -60 LINE",
"560 -60 LINE"
);
}
);
width = 884;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2018-11-27 04:21:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
},
{
closed = 1;
nodes = (
"647 170 LINE",
"424 -201 LINE",
"483 -201 LINE",
"585 -30 LINE",
"696 152 LINE"
);
}
);
width = 826;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2018-11-27 04:21:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
},
{
closed = 1;
nodes = (
"622 14 OFFCURVE",
"628 7 OFFCURVE",
"681 29 CURVE SMOOTH",
"729 49 OFFCURVE",
"779 82 OFFCURVE",
"799 114 CURVE SMOOTH",
"817 142 OFFCURVE",
"806 159 OFFCURVE",
"768 159 CURVE SMOOTH",
"745 159 OFFCURVE",
"722 152 OFFCURVE",
"698 136 CURVE SMOOTH",
"695 134 OFFCURVE",
"691 131 OFFCURVE",
"688 129 CURVE",
"693 126 LINE",
"698 128 OFFCURVE",
"699 130 OFFCURVE",
"704 132 CURVE SMOOTH",
"727 141 OFFCURVE",
"747 151 OFFCURVE",
"763 151 CURVE SMOOTH",
"788 151 OFFCURVE",
"797 141 OFFCURVE",
"781 116 CURVE SMOOTH",
"758 80 OFFCURVE",
"710 48 OFFCURVE",
"663 30 CURVE SMOOTH"
);
}
);
width = 826;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2018-11-27 04:21:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
},
{
closed = 1;
nodes = (
"252 36 LINE",
"268 34 OFFCURVE",
"284 33 OFFCURVE",
"300 33 CURVE SMOOTH",
"349 33 OFFCURVE",
"403 46 OFFCURVE",
"447 68 CURVE SMOOTH",
"487 88 OFFCURVE",
"524 121 OFFCURVE",
"531 153 CURVE SMOOTH",
"537 181 OFFCURVE",
"520 198 OFFCURVE",
"482 198 CURVE SMOOTH",
"459 198 OFFCURVE",
"438 192 OFFCURVE",
"421 175 CURVE SMOOTH",
"419 173 OFFCURVE",
"416 170 OFFCURVE",
"414 168 CURVE",
"421 165 LINE",
"424 167 OFFCURVE",
"425 169 OFFCURVE",
"429 171 CURVE SMOOTH",
"447 180 OFFCURVE",
"464 190 OFFCURVE",
"480 190 CURVE SMOOTH",
"505 190 OFFCURVE",
"518 180 OFFCURVE",
"512 155 CURVE SMOOTH",
"503 119 OFFCURVE",
"469 88 OFFCURVE",
"429 69 CURVE SMOOTH",
"394 52 OFFCURVE",
"337 41 OFFCURVE",
"302 41 CURVE SMOOTH",
"289 41 OFFCURVE",
"276 41 OFFCURVE",
"265 43 CURVE"
);
}
);
width = 826;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2018-11-27 04:21:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"245 41 OFFCURVE",
"196 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"205 -8 OFFCURVE",
"265 20 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE"
);
},
{
closed = 1;
nodes = (
"679 177 LINE",
"713 183 OFFCURVE",
"748 193 OFFCURVE",
"779 208 CURVE SMOOTH",
"822 228 OFFCURVE",
"864 261 OFFCURVE",
"875 293 CURVE SMOOTH",
"885 321 OFFCURVE",
"871 338 OFFCURVE",
"833 338 CURVE SMOOTH",
"810 338 OFFCURVE",
"788 332 OFFCURVE",
"768 315 CURVE SMOOTH",
"766 313 OFFCURVE",
"763 310 OFFCURVE",
"760 308 CURVE",
"767 305 LINE",
"770 307 OFFCURVE",
"771 309 OFFCURVE",
"776 311 CURVE SMOOTH",
"795 320 OFFCURVE",
"813 330 OFFCURVE",
"829 330 CURVE SMOOTH",
"854 330 OFFCURVE",
"866 320 OFFCURVE",
"857 295 CURVE SMOOTH",
"843 259 OFFCURVE",
"804 228 OFFCURVE",
"762 209 CURVE SMOOTH",
"738 198 OFFCURVE",
"707 190 OFFCURVE",
"679 186 CURVE"
);
}
);
width = 826;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2018-11-27 04:21:55 +0000";
layers = (
{
components = (
{
name = _part.hwo.cap;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"253 53 LINE",
"220 25 OFFCURVE",
"184 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"110 4 OFFCURVE",
"88 14 OFFCURVE",
"80 35 CURVE",
"101 35 OFFCURVE",
"111 47 OFFCURVE",
"111 66 CURVE SMOOTH",
"111 86 OFFCURVE",
"99 99 OFFCURVE",
"78 99 CURVE SMOOTH",
"53 99 OFFCURVE",
"37 83 OFFCURVE",
"37 58 CURVE SMOOTH",
"37 21 OFFCURVE",
"81 -8 OFFCURVE",
"141 -8 CURVE SMOOTH",
"190 -8 OFFCURVE",
"237 8 OFFCURVE",
"281 39 CURVE"
);
},
{
closed = 1;
nodes = (
"647 170 LINE",
"493 -99 LINE",
"532 -117 LINE",
"585 -30 LINE",
"696 152 LINE"
);
},
{
closed = 1;
nodes = (
"281 39 LINE",
"295 48 OFFCURVE",
"309 59 OFFCURVE",
"322 71 CURVE SMOOTH",
"361 106 OFFCURVE",
"396 148 OFFCURVE",
"433 200 CURVE SMOOTH",
"452 225 OFFCURVE",
"468 250 OFFCURVE",
"485 277 CURVE",
"505 298 OFFCURVE",
"532 319 OFFCURVE",
"556 332 CURVE",
"585 347 OFFCURVE",
"610 351 OFFCURVE",
"634 351 CURVE SMOOTH",
"671 351 OFFCURVE",
"694 330 OFFCURVE",
"694 295 CURVE SMOOTH",
"694 256 OFFCURVE",
"672 221 OFFCURVE",
"652 185 CURVE SMOOTH",
"639 162 OFFCURVE",
"627 139 OFFCURVE",
"615 117 CURVE SMOOTH",
"602 94 OFFCURVE",
"596 73 OFFCURVE",
"596 54 CURVE SMOOTH",
"596 10 OFFCURVE",
"625 -16 OFFCURVE",
"672 -16 CURVE SMOOTH",
"725 -16 OFFCURVE",
"770 13 OFFCURVE",
"825 66 CURVE SMOOTH",
"874 113 OFFCURVE",
"925 177 OFFCURVE",
"978 260 CURVE",
"972 265 LINE",
"916 182 OFFCURVE",
"864 119 OFFCURVE",
"821 78 CURVE SMOOTH",
"760 19 OFFCURVE",
"723 0 OFFCURVE",
"691 0 CURVE SMOOTH",
"664 0 OFFCURVE",
"649 18 OFFCURVE",
"649 41 CURVE SMOOTH",
"649 54 OFFCURVE",
"654 71 OFFCURVE",
"664 92 CURVE SMOOTH",
"669 103 OFFCURVE",
"703 160 OFFCURVE",
"707 167 CURVE SMOOTH",
"730 207 OFFCURVE",
"748 241 OFFCURVE",
"748 282 CURVE SMOOTH",
"748 330 OFFCURVE",
"713 362 OFFCURVE",
"653 362 CURVE SMOOTH",
"618 362 OFFCURVE",
"593 357 OFFCURVE",
"566 348 CURVE SMOOTH",
"555 344 OFFCURVE",
"545 339 OFFCURVE",
"536 333 CURVE SMOOTH",
"527 326 OFFCURVE",
"518 321 OFFCURVE",
"511 316 CURVE",
"509 317 LINE",
"518 332 OFFCURVE",
"527 347 OFFCURVE",
"536 362 CURVE SMOOTH",
"545 377 OFFCURVE",
"554 392 OFFCURVE",
"563 407 CURVE SMOOTH",
"578 432 OFFCURVE",
"594 456 OFFCURVE",
"610 479 CURVE",
"618 491 LINE",
"636 516 OFFCURVE",
"654 539 OFFCURVE",
"672 561 CURVE SMOOTH",
"709 607 OFFCURVE",
"748 642 OFFCURVE",
"788 665 CURVE",
"811 680 OFFCURVE",
"832 690 OFFCURVE",
"863 694 CURVE SMOOTH",
"872 695 OFFCURVE",
"878 696 OFFCURVE",
"883 696 CURVE SMOOTH",
"899 696 LINE SMOOTH",
"922 696 OFFCURVE",
"936 698 OFFCURVE",
"936 713 CURVE SMOOTH",
"936 719 OFFCURVE",
"931 722 OFFCURVE",
"921 722 CURVE SMOOTH",
"908 722 OFFCURVE",
"896 720 OFFCURVE",
"885 715 CURVE SMOOTH",
"873 710 OFFCURVE",
"861 708 OFFCURVE",
"849 708 CURVE SMOOTH",
"813 708 OFFCURVE",
"739 707 OFFCURVE",
"647 699 CURVE SMOOTH",
"536 688 OFFCURVE",
"429 671 OFFCURVE",
"340 634 CURVE SMOOTH",
"221 585 OFFCURVE",
"172 523 OFFCURVE",
"172 448 CURVE SMOOTH",
"172 386 OFFCURVE",
"225 341 OFFCURVE",
"297 341 CURVE SMOOTH",
"352 341 OFFCURVE",
"397 361 OFFCURVE",
"430 390 CURVE SMOOTH",
"460 416 OFFCURVE",
"476 446 OFFCURVE",
"478 479 CURVE",
"478 491 LINE",
"477 497 OFFCURVE",
"477 503 OFFCURVE",
"476 508 CURVE",
"475 515 OFFCURVE",
"472 523 OFFCURVE",
"467 532 CURVE",
"455 531 LINE",
"462 517 OFFCURVE",
"465 504 OFFCURVE",
"466 491 CURVE",
"466 479 LINE",
"465 466 OFFCURVE",
"461 453 OFFCURVE",
"456 441 CURVE SMOOTH",
"449 426 OFFCURVE",
"438 412 OFFCURVE",
"423 398 CURVE SMOOTH",
"395 371 OFFCURVE",
"351 353 OFFCURVE",
"308 353 CURVE SMOOTH",
"257 353 OFFCURVE",
"226 390 OFFCURVE",
"226 439 CURVE SMOOTH",
"226 518 OFFCURVE",
"291 585 OFFCURVE",
"414 632 CURVE SMOOTH",
"518 672 OFFCURVE",
"654 695 OFFCURVE",
"835 696 CURVE",
"835 694 LINE",
"775 679 OFFCURVE",
"728 657 OFFCURVE",
"685 625 CURVE SMOOTH",
"651 600 OFFCURVE",
"619 569 OFFCURVE",
"590 533 CURVE SMOOTH",
"579 520 OFFCURVE",
"568 506 OFFCURVE",
"557 491 CURVE",
"548 479 LINE",
"531 455 OFFCURVE",
"514 428 OFFCURVE",
"495 399 CURVE SMOOTH",
"456 338 OFFCURVE",
"420 280 OFFCURVE",
"387 226 CURVE SMOOTH",
"354 171 OFFCURVE",
"319 124 OFFCURVE",
"284 84 CURVE SMOOTH",
"274 73 OFFCURVE",
"264 63 OFFCURVE",
"253 53 CURVE"
);
}
);
width = 826;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2018-11-27 04:21:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"516 -57 OFFCURVE",
"471 -124 OFFCURVE",
"420 -175 CURVE SMOOTH",
"345 -248 OFFCURVE",
"287 -286 OFFCURVE",
"212 -286 CURVE SMOOTH",
"160 -286 OFFCURVE",
"121 -250 OFFCURVE",
"121 -186 CURVE SMOOTH",
"121 -133 OFFCURVE",
"152 -101 OFFCURVE",
"179 -84 CURVE SMOOTH",
"216 -60 OFFCURVE",
"274 -44 OFFCURVE",
"330 -29 CURVE SMOOTH",
"367 -20 OFFCURVE",
"518 13 OFFCURVE",
"565 23 CURVE"
);
},
{
closed = 1;
nodes = (
"-50 -7 LINE",
"28 2 OFFCURVE",
"96 52 OFFCURVE",
"154 115 CURVE SMOOTH",
"217 184 OFFCURVE",
"237 226 OFFCURVE",
"277 290 CURVE",
"422 293 LINE",
"235 0 LINE",
"308 0 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"535 27 OFFCURVE",
"494 18 OFFCURVE",
"452 10 CURVE SMOOTH",
"410 2 OFFCURVE",
"370 -6 OFFCURVE",
"331 -15 CURVE SMOOTH",
"256 -31 OFFCURVE",
"194 -41 OFFCURVE",
"149 -65 CURVE SMOOTH",
"100 -90 OFFCURVE",
"73 -129 OFFCURVE",
"73 -182 CURVE SMOOTH",
"73 -249 OFFCURVE",
"125 -298 OFFCURVE",
"220 -298 CURVE SMOOTH",
"284 -298 OFFCURVE",
"374 -257 OFFCURVE",
"457 -182 CURVE SMOOTH",
"526 -119 OFFCURVE",
"578 -41 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"518 332 OFFCURVE",
"526 346 OFFCURVE",
"533 359 CURVE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"194 270 OFFCURVE",
"180 236 OFFCURVE",
"153 195 CURVE SMOOTH",
"137 170 OFFCURVE",
"120 146 OFFCURVE",
"103 123 CURVE SMOOTH",
"74 85 OFFCURVE",
"20 35 OFFCURVE",
"-28 14 CURVE"
);
}
);
width = 801;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2018-11-27 04:21:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"516 -57 OFFCURVE",
"471 -124 OFFCURVE",
"420 -175 CURVE SMOOTH",
"345 -248 OFFCURVE",
"287 -286 OFFCURVE",
"212 -286 CURVE SMOOTH",
"160 -286 OFFCURVE",
"121 -250 OFFCURVE",
"121 -186 CURVE SMOOTH",
"121 -133 OFFCURVE",
"152 -101 OFFCURVE",
"179 -84 CURVE SMOOTH",
"216 -60 OFFCURVE",
"274 -44 OFFCURVE",
"330 -29 CURVE SMOOTH",
"367 -20 OFFCURVE",
"518 13 OFFCURVE",
"565 23 CURVE"
);
},
{
closed = 1;
nodes = (
"-95 -7 LINE",
"-88 -8 OFFCURVE",
"-81 -8 OFFCURVE",
"-74 -8 CURVE SMOOTH",
"14 -8 OFFCURVE",
"90 46 OFFCURVE",
"154 115 CURVE SMOOTH",
"217 184 OFFCURVE",
"238 231 OFFCURVE",
"278 295 CURVE",
"424 295 LINE",
"235 0 LINE",
"308 0 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"535 27 OFFCURVE",
"494 18 OFFCURVE",
"452 10 CURVE SMOOTH",
"410 2 OFFCURVE",
"370 -6 OFFCURVE",
"331 -15 CURVE SMOOTH",
"256 -31 OFFCURVE",
"194 -41 OFFCURVE",
"149 -65 CURVE SMOOTH",
"100 -90 OFFCURVE",
"73 -129 OFFCURVE",
"73 -182 CURVE SMOOTH",
"73 -249 OFFCURVE",
"125 -298 OFFCURVE",
"220 -298 CURVE SMOOTH",
"284 -298 OFFCURVE",
"374 -257 OFFCURVE",
"457 -182 CURVE SMOOTH",
"526 -119 OFFCURVE",
"578 -41 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"518 332 OFFCURVE",
"526 346 OFFCURVE",
"533 359 CURVE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"194 270 OFFCURVE",
"180 236 OFFCURVE",
"153 195 CURVE SMOOTH",
"137 170 OFFCURVE",
"120 146 OFFCURVE",
"103 123 CURVE SMOOTH",
"66 74 OFFCURVE",
"-15 4 OFFCURVE",
"-69 4 CURVE SMOOTH",
"-74 4 OFFCURVE",
"-79 4 OFFCURVE",
"-83 5 CURVE"
);
},
{
closed = 1;
nodes = (
"697 153 LINE",
"805 153 LINE",
"805 174 LINE",
"697 174 LINE"
);
}
);
width = 801;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2018-11-27 04:21:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"516 -57 OFFCURVE",
"471 -124 OFFCURVE",
"420 -175 CURVE SMOOTH",
"345 -248 OFFCURVE",
"287 -286 OFFCURVE",
"212 -286 CURVE SMOOTH",
"160 -286 OFFCURVE",
"121 -250 OFFCURVE",
"121 -186 CURVE SMOOTH",
"121 -133 OFFCURVE",
"152 -101 OFFCURVE",
"179 -84 CURVE SMOOTH",
"216 -60 OFFCURVE",
"274 -44 OFFCURVE",
"330 -29 CURVE SMOOTH",
"367 -20 OFFCURVE",
"518 13 OFFCURVE",
"565 23 CURVE"
);
},
{
closed = 1;
nodes = (
"-104 -5 LINE",
"-94 -7 OFFCURVE",
"-83 -8 OFFCURVE",
"-74 -8 CURVE SMOOTH",
"14 -8 OFFCURVE",
"90 46 OFFCURVE",
"154 115 CURVE SMOOTH",
"217 184 OFFCURVE",
"238 230 OFFCURVE",
"278 294 CURVE",
"424 295 LINE",
"235 0 LINE",
"308 0 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"535 27 OFFCURVE",
"494 18 OFFCURVE",
"452 10 CURVE SMOOTH",
"410 2 OFFCURVE",
"370 -6 OFFCURVE",
"331 -15 CURVE SMOOTH",
"256 -31 OFFCURVE",
"194 -41 OFFCURVE",
"149 -65 CURVE SMOOTH",
"100 -90 OFFCURVE",
"73 -129 OFFCURVE",
"73 -182 CURVE SMOOTH",
"73 -249 OFFCURVE",
"125 -298 OFFCURVE",
"220 -298 CURVE SMOOTH",
"284 -298 OFFCURVE",
"374 -257 OFFCURVE",
"457 -182 CURVE SMOOTH",
"526 -119 OFFCURVE",
"578 -41 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"518 332 OFFCURVE",
"526 346 OFFCURVE",
"533 359 CURVE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"194 270 OFFCURVE",
"180 236 OFFCURVE",
"153 195 CURVE SMOOTH",
"137 170 OFFCURVE",
"120 146 OFFCURVE",
"103 123 CURVE SMOOTH",
"66 74 OFFCURVE",
"-15 4 OFFCURVE",
"-69 4 CURVE SMOOTH",
"-79 4 OFFCURVE",
"-88 5 OFFCURVE",
"-96 7 CURVE"
);
},
{
closed = 1;
nodes = (
"593 0 LINE",
"775 0 LINE",
"775 43 LINE",
"593 43 LINE"
);
}
);
width = 826;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2018-11-27 04:21:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"516 -57 OFFCURVE",
"471 -124 OFFCURVE",
"420 -175 CURVE SMOOTH",
"345 -248 OFFCURVE",
"287 -286 OFFCURVE",
"212 -286 CURVE SMOOTH",
"160 -286 OFFCURVE",
"121 -250 OFFCURVE",
"121 -186 CURVE SMOOTH",
"121 -133 OFFCURVE",
"152 -101 OFFCURVE",
"179 -84 CURVE SMOOTH",
"216 -60 OFFCURVE",
"274 -44 OFFCURVE",
"330 -29 CURVE SMOOTH",
"367 -20 OFFCURVE",
"518 13 OFFCURVE",
"565 23 CURVE"
);
},
{
closed = 1;
nodes = (
"341 51 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"535 27 OFFCURVE",
"494 18 OFFCURVE",
"452 10 CURVE SMOOTH",
"410 2 OFFCURVE",
"370 -6 OFFCURVE",
"331 -15 CURVE SMOOTH",
"256 -31 OFFCURVE",
"194 -41 OFFCURVE",
"149 -65 CURVE SMOOTH",
"100 -90 OFFCURVE",
"73 -129 OFFCURVE",
"73 -182 CURVE SMOOTH",
"73 -249 OFFCURVE",
"125 -298 OFFCURVE",
"220 -298 CURVE SMOOTH",
"284 -298 OFFCURVE",
"374 -257 OFFCURVE",
"457 -182 CURVE SMOOTH",
"526 -119 OFFCURVE",
"578 -41 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"518 332 OFFCURVE",
"526 346 OFFCURVE",
"533 359 CURVE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"195 272 OFFCURVE",
"181 239 OFFCURVE",
"156 200 CURVE",
"198 167 LINE",
"230 209 OFFCURVE",
"248 244 OFFCURVE",
"277 290 CURVE",
"422 293 LINE",
"292 90 LINE"
);
}
);
width = 801;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2018-11-27 04:21:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"516 -57 OFFCURVE",
"471 -124 OFFCURVE",
"420 -175 CURVE SMOOTH",
"345 -248 OFFCURVE",
"287 -286 OFFCURVE",
"212 -286 CURVE SMOOTH",
"160 -286 OFFCURVE",
"121 -250 OFFCURVE",
"121 -186 CURVE SMOOTH",
"121 -133 OFFCURVE",
"152 -101 OFFCURVE",
"179 -84 CURVE SMOOTH",
"216 -60 OFFCURVE",
"274 -44 OFFCURVE",
"330 -29 CURVE SMOOTH",
"367 -20 OFFCURVE",
"518 13 OFFCURVE",
"565 23 CURVE"
);
},
{
closed = 1;
nodes = (
"-97 -6 LINE",
"-89 -7 OFFCURVE",
"-81 -8 OFFCURVE",
"-74 -8 CURVE SMOOTH",
"14 -8 OFFCURVE",
"90 46 OFFCURVE",
"154 115 CURVE SMOOTH",
"217 184 OFFCURVE",
"237 226 OFFCURVE",
"277 290 CURVE",
"422 293 LINE",
"235 0 LINE",
"308 0 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"535 27 OFFCURVE",
"494 18 OFFCURVE",
"452 10 CURVE SMOOTH",
"410 2 OFFCURVE",
"370 -6 OFFCURVE",
"331 -15 CURVE SMOOTH",
"256 -31 OFFCURVE",
"194 -41 OFFCURVE",
"149 -65 CURVE SMOOTH",
"100 -90 OFFCURVE",
"73 -129 OFFCURVE",
"73 -182 CURVE SMOOTH",
"73 -249 OFFCURVE",
"125 -298 OFFCURVE",
"220 -298 CURVE SMOOTH",
"284 -298 OFFCURVE",
"374 -257 OFFCURVE",
"457 -182 CURVE SMOOTH",
"526 -119 OFFCURVE",
"578 -41 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"518 332 OFFCURVE",
"526 346 OFFCURVE",
"533 359 CURVE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"194 270 OFFCURVE",
"180 236 OFFCURVE",
"153 195 CURVE SMOOTH",
"137 170 OFFCURVE",
"120 146 OFFCURVE",
"103 123 CURVE SMOOTH",
"66 74 OFFCURVE",
"-15 4 OFFCURVE",
"-69 4 CURVE SMOOTH",
"-77 4 OFFCURVE",
"-84 5 OFFCURVE",
"-91 6 CURVE"
);
},
{
closed = 1;
nodes = (
"649 66 LINE",
"665 72 OFFCURVE",
"690 82 OFFCURVE",
"705 88 CURVE SMOOTH",
"753 109 OFFCURVE",
"797 125 OFFCURVE",
"822 153 CURVE SMOOTH",
"845 178 OFFCURVE",
"856 214 OFFCURVE",
"837 243 CURVE SMOOTH",
"821 268 OFFCURVE",
"791 279 OFFCURVE",
"754 271 CURVE SMOOTH",
"731 266 OFFCURVE",
"718 256 OFFCURVE",
"713 239 CURVE SMOOTH",
"712 237 OFFCURVE",
"712 234 OFFCURVE",
"711 231 CURVE",
"720 230 LINE",
"721 233 OFFCURVE",
"721 235 OFFCURVE",
"723 237 CURVE SMOOTH",
"731 249 OFFCURVE",
"742 261 OFFCURVE",
"758 264 CURVE SMOOTH",
"782 269 OFFCURVE",
"803 263 OFFCURVE",
"817 241 CURVE SMOOTH",
"838 208 OFFCURVE",
"828 175 OFFCURVE",
"804 150 CURVE SMOOTH",
"782 128 OFFCURVE",
"736 112 OFFCURVE",
"702 96 CURVE SMOOTH",
"689 90 OFFCURVE",
"668 80 OFFCURVE",
"655 75 CURVE"
);
}
);
width = 801;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2018-11-27 04:21:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"200 -286 OFFCURVE",
"161 -250 OFFCURVE",
"161 -186 CURVE SMOOTH",
"161 -133 OFFCURVE",
"192 -101 OFFCURVE",
"219 -84 CURVE SMOOTH",
"256 -60 OFFCURVE",
"314 -44 OFFCURVE",
"370 -29 CURVE SMOOTH",
"407 -20 OFFCURVE",
"558 13 OFFCURVE",
"605 23 CURVE",
"556 -57 OFFCURVE",
"511 -124 OFFCURVE",
"460 -175 CURVE SMOOTH",
"385 -248 OFFCURVE",
"327 -286 OFFCURVE",
"252 -286 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-59 -6 LINE",
"-51 -7 OFFCURVE",
"-42 -8 OFFCURVE",
"-34 -8 CURVE SMOOTH",
"54 -8 OFFCURVE",
"130 46 OFFCURVE",
"194 115 CURVE SMOOTH",
"257 184 OFFCURVE",
"277 226 OFFCURVE",
"317 290 CURVE",
"462 293 LINE",
"275 0 LINE",
"348 0 LINE",
"529 278 LINE",
"556 303 OFFCURVE",
"582 322 OFFCURVE",
"608 335 CURVE SMOOTH",
"631 346 OFFCURVE",
"652 351 OFFCURVE",
"679 351 CURVE SMOOTH",
"695 351 OFFCURVE",
"710 348 OFFCURVE",
"721 339 CURVE SMOOTH",
"732 330 OFFCURVE",
"740 313 OFFCURVE",
"740 296 CURVE SMOOTH",
"740 265 OFFCURVE",
"730 234 OFFCURVE",
"694 169 CURVE SMOOTH",
"670 126 OFFCURVE",
"638 75 OFFCURVE",
"614 36 CURVE",
"575 27 OFFCURVE",
"534 18 OFFCURVE",
"492 10 CURVE SMOOTH",
"450 2 OFFCURVE",
"410 -6 OFFCURVE",
"371 -15 CURVE SMOOTH",
"296 -31 OFFCURVE",
"234 -41 OFFCURVE",
"189 -65 CURVE SMOOTH",
"140 -90 OFFCURVE",
"113 -129 OFFCURVE",
"113 -182 CURVE SMOOTH",
"113 -249 OFFCURVE",
"165 -298 OFFCURVE",
"260 -298 CURVE SMOOTH",
"324 -298 OFFCURVE",
"414 -257 OFFCURVE",
"497 -182 CURVE SMOOTH",
"566 -119 OFFCURVE",
"618 -41 OFFCURVE",
"673 36 CURVE",
"765 61 OFFCURVE",
"828 89 OFFCURVE",
"877 124 CURVE SMOOTH",
"928 160 OFFCURVE",
"964 203 OFFCURVE",
"1004 263 CURVE",
"996 268 LINE",
"955 207 OFFCURVE",
"914 164 OFFCURVE",
"870 132 CURVE SMOOTH",
"815 93 OFFCURVE",
"756 72 OFFCURVE",
"688 51 CURVE",
"686 53 LINE",
"696 70 OFFCURVE",
"707 88 OFFCURVE",
"718 105 CURVE SMOOTH",
"729 122 OFFCURVE",
"740 140 OFFCURVE",
"750 159 CURVE SMOOTH",
"779 211 OFFCURVE",
"794 255 OFFCURVE",
"794 282 CURVE SMOOTH",
"794 309 OFFCURVE",
"784 329 OFFCURVE",
"764 344 CURVE SMOOTH",
"748 356 OFFCURVE",
"726 362 OFFCURVE",
"699 362 CURVE SMOOTH",
"652 362 OFFCURVE",
"611 353 OFFCURVE",
"555 316 CURVE",
"550 317 LINE",
"573 359 LINE",
"593 387 OFFCURVE",
"617 407 OFFCURVE",
"657 458 CURVE",
"577 458 LINE",
"600 493 OFFCURVE",
"627 517 OFFCURVE",
"655 548 CURVE SMOOTH",
"678 573 OFFCURVE",
"704 597 OFFCURVE",
"722 615 CURVE SMOOTH",
"780 673 OFFCURVE",
"835 701 OFFCURVE",
"887 701 CURVE SMOOTH",
"904 701 OFFCURVE",
"917 702 OFFCURVE",
"926 703 CURVE SMOOTH",
"935 704 OFFCURVE",
"939 709 OFFCURVE",
"939 717 CURVE SMOOTH",
"939 725 OFFCURVE",
"931 727 OFFCURVE",
"924 727 CURVE SMOOTH",
"913 727 OFFCURVE",
"901 725 OFFCURVE",
"889 720 CURVE SMOOTH",
"877 715 OFFCURVE",
"862 713 OFFCURVE",
"844 713 CURVE SMOOTH",
"741 713 OFFCURVE",
"632 706 OFFCURVE",
"533 690 CURVE SMOOTH",
"483 682 OFFCURVE",
"436 670 OFFCURVE",
"393 657 CURVE SMOOTH",
"306 631 OFFCURVE",
"241 592 OFFCURVE",
"203 540 CURVE SMOOTH",
"184 514 OFFCURVE",
"175 485 OFFCURVE",
"175 452 CURVE SMOOTH",
"175 393 OFFCURVE",
"223 346 OFFCURVE",
"306 346 CURVE SMOOTH",
"388 346 OFFCURVE",
"481 407 OFFCURVE",
"481 492 CURVE SMOOTH",
"481 509 OFFCURVE",
"477 524 OFFCURVE",
"470 537 CURVE",
"458 536 LINE",
"465 523 OFFCURVE",
"469 511 OFFCURVE",
"469 490 CURVE SMOOTH",
"469 414 OFFCURVE",
"383 358 OFFCURVE",
"312 358 CURVE SMOOTH",
"259 358 OFFCURVE",
"229 397 OFFCURVE",
"229 441 CURVE SMOOTH",
"229 518 OFFCURVE",
"290 584 OFFCURVE",
"397 629 CURVE SMOOTH",
"504 674 OFFCURVE",
"655 701 OFFCURVE",
"838 701 CURVE",
"838 699 LINE",
"752 680 OFFCURVE",
"695 635 OFFCURVE",
"605 552 CURVE SMOOTH",
"579 528 OFFCURVE",
"544 502 OFFCURVE",
"513 458 CURVE",
"512 444 LINE",
"581 444 LINE",
"560 420 OFFCURVE",
"526 390 OFFCURVE",
"505 358 CURVE",
"503 354 OFFCURVE",
"474 312 OFFCURVE",
"471 308 CURVE",
"254 307 LINE",
"234 270 OFFCURVE",
"220 236 OFFCURVE",
"193 195 CURVE SMOOTH",
"177 170 OFFCURVE",
"160 146 OFFCURVE",
"143 123 CURVE SMOOTH",
"106 74 OFFCURVE",
"25 4 OFFCURVE",
"-29 4 CURVE SMOOTH",
"-37 4 OFFCURVE",
"-45 5 OFFCURVE",
"-52 6 CURVE"
);
}
);
width = 841;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2018-11-27 04:21:56 +0000";
layers = (
{
anchors = (
{
name = _part;
position = "{428, 201}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"558 15 OFFCURVE",
"536 8 OFFCURVE",
"520 2 CURVE SMOOTH",
"507 -3 OFFCURVE",
"496 -9 OFFCURVE",
"492 -13 CURVE SMOOTH",
"486 -19 OFFCURVE",
"482 -26 OFFCURVE",
"482 -31 CURVE SMOOTH",
"482 -42 OFFCURVE",
"491 -46 OFFCURVE",
"505 -45 CURVE SMOOTH",
"516 -44 OFFCURVE",
"528 -38 OFFCURVE",
"536 -30 CURVE SMOOTH",
"565 -1 OFFCURVE",
"579 19 OFFCURVE",
"574 18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-183 -169 LINE",
"-102 -163 OFFCURVE",
"-31 -112 OFFCURVE",
"28 -47 CURVE SMOOTH",
"38 -36 OFFCURVE",
"47 -26 OFFCURVE",
"55 -16 CURVE",
"0 -7 LINE",
"-8 -18 OFFCURVE",
"-15 -29 OFFCURVE",
"-23 -39 CURVE SMOOTH",
"-56 -80 OFFCURVE",
"-120 -139 OFFCURVE",
"-171 -154 CURVE"
);
},
{
closed = 1;
nodes = (
"0 -7 LINE",
"27 34 OFFCURVE",
"194 270 OFFCURVE",
"214 307 CURVE",
"431 308 LINE",
"434 312 OFFCURVE",
"463 354 OFFCURVE",
"465 358 CURVE",
"544 478 OFFCURVE",
"575 519 OFFCURVE",
"611 559 CURVE SMOOTH",
"669 623 OFFCURVE",
"739 674 OFFCURVE",
"834 695 CURVE",
"834 697 LINE",
"651 697 OFFCURVE",
"500 670 OFFCURVE",
"393 625 CURVE SMOOTH",
"286 580 OFFCURVE",
"225 514 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 393 OFFCURVE",
"255 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"379 354 OFFCURVE",
"465 410 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 507 OFFCURVE",
"461 519 OFFCURVE",
"454 532 CURVE",
"466 533 LINE",
"473 520 OFFCURVE",
"477 505 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 403 OFFCURVE",
"384 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"219 342 OFFCURVE",
"171 389 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 481 OFFCURVE",
"180 510 OFFCURVE",
"199 536 CURVE SMOOTH",
"237 588 OFFCURVE",
"302 627 OFFCURVE",
"389 653 CURVE SMOOTH",
"432 666 OFFCURVE",
"479 678 OFFCURVE",
"529 686 CURVE SMOOTH",
"628 702 OFFCURVE",
"737 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"858 709 OFFCURVE",
"873 711 OFFCURVE",
"885 716 CURVE SMOOTH",
"897 721 OFFCURVE",
"909 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"927 723 OFFCURVE",
"935 721 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 705 OFFCURVE",
"931 700 OFFCURVE",
"922 699 CURVE SMOOTH",
"913 698 OFFCURVE",
"900 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"831 697 OFFCURVE",
"777 668 OFFCURVE",
"718 611 CURVE SMOOTH",
"661 555 OFFCURVE",
"599 453 OFFCURVE",
"533 359 CURVE",
"510 317 LINE",
"515 316 LINE",
"571 353 OFFCURVE",
"612 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"686 362 OFFCURVE",
"708 356 OFFCURVE",
"724 344 CURVE SMOOTH",
"744 329 OFFCURVE",
"754 309 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 255 OFFCURVE",
"739 211 OFFCURVE",
"710 159 CURVE SMOOTH",
"700 140 OFFCURVE",
"689 122 OFFCURVE",
"678 105 CURVE SMOOTH",
"667 88 OFFCURVE",
"656 70 OFFCURVE",
"646 53 CURVE",
"648 51 LINE",
"716 72 OFFCURVE",
"775 93 OFFCURVE",
"830 132 CURVE SMOOTH",
"874 164 OFFCURVE",
"915 207 OFFCURVE",
"956 268 CURVE",
"964 263 LINE",
"924 203 OFFCURVE",
"888 160 OFFCURVE",
"837 124 CURVE SMOOTH",
"788 89 OFFCURVE",
"725 61 OFFCURVE",
"633 36 CURVE",
"583 -35 OFFCURVE",
"521 -86 OFFCURVE",
"461 -53 CURVE SMOOTH",
"433 -38 OFFCURVE",
"449 8 OFFCURVE",
"574 36 CURVE",
"598 75 OFFCURVE",
"630 126 OFFCURVE",
"654 169 CURVE SMOOTH",
"690 234 OFFCURVE",
"700 265 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 313 OFFCURVE",
"692 330 OFFCURVE",
"681 339 CURVE SMOOTH",
"670 348 OFFCURVE",
"655 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"612 351 OFFCURVE",
"591 346 OFFCURVE",
"568 335 CURVE SMOOTH",
"542 322 OFFCURVE",
"516 303 OFFCURVE",
"489 278 CURVE",
"138 -200 LINE",
"65 -200 LINE",
"422 293 LINE",
"277 290 LINE",
"243 236 OFFCURVE",
"98 36 OFFCURVE",
"55 -16 CURVE"
);
}
);
width = 801;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2018-11-27 04:21:57 +0000";
layers = (
{
anchors = (
{
name = _part;
position = "{428, 201}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-134 -199 OFFCURVE",
"-122 -186 OFFCURVE",
"-122 -166 CURVE SMOOTH",
"-122 -147 OFFCURVE",
"-132 -135 OFFCURVE",
"-153 -135 CURVE",
"-145 -114 OFFCURVE",
"-123 -104 OFFCURVE",
"-86 -104 CURVE SMOOTH",
"-49 -104 OFFCURVE",
"-13 -125 OFFCURVE",
"20 -153 CURVE",
"48 -139 LINE",
"4 -108 OFFCURVE",
"-43 -92 OFFCURVE",
"-92 -92 CURVE SMOOTH",
"-152 -92 OFFCURVE",
"-196 -121 OFFCURVE",
"-196 -158 CURVE SMOOTH",
"-196 -183 OFFCURVE",
"-180 -199 OFFCURVE",
"-155 -199 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"491 -46 OFFCURVE",
"482 -42 OFFCURVE",
"482 -31 CURVE SMOOTH",
"482 -26 OFFCURVE",
"486 -19 OFFCURVE",
"492 -13 CURVE SMOOTH",
"496 -9 OFFCURVE",
"507 -3 OFFCURVE",
"520 2 CURVE SMOOTH",
"536 8 OFFCURVE",
"558 15 OFFCURVE",
"574 18 CURVE SMOOTH",
"579 19 OFFCURVE",
"565 -1 OFFCURVE",
"536 -30 CURVE SMOOTH",
"528 -38 OFFCURVE",
"516 -44 OFFCURVE",
"505 -45 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 -12 LINE",
"489 278 LINE",
"516 303 OFFCURVE",
"542 322 OFFCURVE",
"568 335 CURVE SMOOTH",
"591 346 OFFCURVE",
"612 351 OFFCURVE",
"639 351 CURVE SMOOTH",
"655 351 OFFCURVE",
"670 348 OFFCURVE",
"681 339 CURVE SMOOTH",
"692 330 OFFCURVE",
"700 313 OFFCURVE",
"700 296 CURVE SMOOTH",
"700 265 OFFCURVE",
"690 234 OFFCURVE",
"654 169 CURVE SMOOTH",
"630 126 OFFCURVE",
"598 75 OFFCURVE",
"574 36 CURVE",
"449 8 OFFCURVE",
"433 -38 OFFCURVE",
"461 -53 CURVE SMOOTH",
"521 -86 OFFCURVE",
"583 -35 OFFCURVE",
"633 36 CURVE",
"725 61 OFFCURVE",
"788 89 OFFCURVE",
"837 124 CURVE SMOOTH",
"888 160 OFFCURVE",
"924 203 OFFCURVE",
"964 263 CURVE",
"956 268 LINE",
"915 207 OFFCURVE",
"874 164 OFFCURVE",
"830 132 CURVE SMOOTH",
"775 93 OFFCURVE",
"716 72 OFFCURVE",
"648 51 CURVE",
"646 53 LINE",
"656 70 OFFCURVE",
"667 88 OFFCURVE",
"678 105 CURVE SMOOTH",
"689 122 OFFCURVE",
"700 140 OFFCURVE",
"710 159 CURVE SMOOTH",
"739 211 OFFCURVE",
"754 255 OFFCURVE",
"754 282 CURVE SMOOTH",
"754 309 OFFCURVE",
"744 329 OFFCURVE",
"724 344 CURVE SMOOTH",
"708 356 OFFCURVE",
"686 362 OFFCURVE",
"659 362 CURVE SMOOTH",
"612 362 OFFCURVE",
"571 353 OFFCURVE",
"515 316 CURVE",
"510 317 LINE",
"533 359 LINE",
"599 453 OFFCURVE",
"661 555 OFFCURVE",
"718 611 CURVE SMOOTH",
"777 668 OFFCURVE",
"831 697 OFFCURVE",
"883 697 CURVE SMOOTH",
"900 697 OFFCURVE",
"913 698 OFFCURVE",
"922 699 CURVE SMOOTH",
"931 700 OFFCURVE",
"935 705 OFFCURVE",
"935 713 CURVE SMOOTH",
"935 721 OFFCURVE",
"927 723 OFFCURVE",
"920 723 CURVE SMOOTH",
"909 723 OFFCURVE",
"897 721 OFFCURVE",
"885 716 CURVE SMOOTH",
"873 711 OFFCURVE",
"858 709 OFFCURVE",
"840 709 CURVE SMOOTH",
"737 709 OFFCURVE",
"628 702 OFFCURVE",
"529 686 CURVE SMOOTH",
"479 678 OFFCURVE",
"432 666 OFFCURVE",
"389 653 CURVE SMOOTH",
"302 627 OFFCURVE",
"237 588 OFFCURVE",
"199 536 CURVE SMOOTH",
"180 510 OFFCURVE",
"171 481 OFFCURVE",
"171 448 CURVE SMOOTH",
"171 389 OFFCURVE",
"219 342 OFFCURVE",
"302 342 CURVE SMOOTH",
"384 342 OFFCURVE",
"477 403 OFFCURVE",
"477 488 CURVE SMOOTH",
"477 505 OFFCURVE",
"473 520 OFFCURVE",
"466 533 CURVE",
"454 532 LINE",
"461 519 OFFCURVE",
"465 507 OFFCURVE",
"465 486 CURVE SMOOTH",
"465 410 OFFCURVE",
"379 354 OFFCURVE",
"308 354 CURVE SMOOTH",
"255 354 OFFCURVE",
"225 393 OFFCURVE",
"225 437 CURVE SMOOTH",
"225 514 OFFCURVE",
"286 580 OFFCURVE",
"393 625 CURVE SMOOTH",
"500 670 OFFCURVE",
"651 697 OFFCURVE",
"834 697 CURVE",
"834 695 LINE",
"739 674 OFFCURVE",
"669 623 OFFCURVE",
"611 559 CURVE SMOOTH",
"575 519 OFFCURVE",
"544 478 OFFCURVE",
"465 358 CURVE",
"463 354 OFFCURVE",
"434 312 OFFCURVE",
"431 308 CURVE",
"214 307 LINE",
"194 270 OFFCURVE",
"-34 -61 OFFCURVE",
"-61 -102 CURVE",
"-2 -111 LINE",
"41 -59 OFFCURVE",
"243 236 OFFCURVE",
"277 290 CURVE",
"422 293 LINE",
"188 -30 LINE"
);
}
);
width = 801;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2018-11-27 04:21:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
}
);
width = 1290;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2018-11-27 04:21:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"1278 363 LINE",
"1404 363 LINE",
"1404 411 LINE",
"1278 411 LINE"
);
}
);
width = 1290;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2018-11-27 04:21:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"1143 170 LINE",
"1028 -12 LINE",
"915 -201 LINE",
"952 -201 LINE",
"1205 213 LINE"
);
},
{
closed = 1;
nodes = (
"928 -201 LINE",
"1078 -201 LINE",
"1078 -185 LINE",
"928 -185 LINE"
);
}
);
width = 1298;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2018-11-27 04:21:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"1143 170 LINE",
"1028 -12 LINE",
"915 -201 LINE",
"952 -201 LINE",
"1205 213 LINE"
);
}
);
width = 1290;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2018-11-27 04:21:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"1143 170 LINE",
"1028 -12 LINE",
"915 -201 LINE",
"952 -201 LINE",
"1205 213 LINE"
);
},
{
closed = 1;
nodes = (
"914 -202 LINE",
"930 -204 OFFCURVE",
"946 -205 OFFCURVE",
"962 -205 CURVE SMOOTH",
"1011 -205 OFFCURVE",
"1063 -192 OFFCURVE",
"1102 -170 CURVE SMOOTH",
"1138 -150 OFFCURVE",
"1168 -117 OFFCURVE",
"1168 -85 CURVE SMOOTH",
"1168 -57 OFFCURVE",
"1148 -40 OFFCURVE",
"1110 -40 CURVE SMOOTH",
"1087 -40 OFFCURVE",
"1069 -48 OFFCURVE",
"1054 -63 CURVE SMOOTH",
"1052 -65 OFFCURVE",
"1050 -68 OFFCURVE",
"1048 -70 CURVE",
"1056 -73 LINE",
"1058 -71 OFFCURVE",
"1059 -69 OFFCURVE",
"1062 -67 CURVE SMOOTH",
"1077 -57 OFFCURVE",
"1093 -48 OFFCURVE",
"1109 -48 CURVE SMOOTH",
"1134 -48 OFFCURVE",
"1149 -58 OFFCURVE",
"1149 -83 CURVE SMOOTH",
"1149 -119 OFFCURVE",
"1120 -150 OFFCURVE",
"1084 -169 CURVE SMOOTH",
"1052 -186 OFFCURVE",
"998 -197 OFFCURVE",
"963 -197 CURVE SMOOTH",
"950 -197 OFFCURVE",
"937 -197 OFFCURVE",
"925 -195 CURVE"
);
}
);
width = 1310;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2018-11-27 04:21:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"458 160 LINE",
"343 -22 LINE",
"230 -211 LINE",
"267 -211 LINE",
"520 203 LINE"
);
},
{
closed = 1;
nodes = (
"83 -211 LINE",
"267 -211 LINE",
"267 -189 LINE",
"83 -189 LINE"
);
}
);
width = 1290;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2018-11-27 04:21:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"463 170 LINE",
"348 -12 LINE",
"235 -201 LINE",
"272 -201 LINE",
"525 213 LINE"
);
}
);
width = 1290;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2018-11-27 04:21:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1255 583 LINE",
"1255 637 OFFCURVE",
"1236 679 OFFCURVE",
"1173 679 CURVE SMOOTH",
"1159 679 LINE",
"1157 681 LINE",
"1172 692 OFFCURVE",
"1197 700 OFFCURVE",
"1221 700 CURVE SMOOTH",
"1284 700 OFFCURVE",
"1293 639 OFFCURVE",
"1293 581 CURVE SMOOTH",
"1293 460 OFFCURVE",
"1252 338 OFFCURVE",
"1188 235 CURVE",
"1105 286 OFFCURVE",
"1064 364 OFFCURVE",
"1064 467 CURVE SMOOTH",
"1064 542 OFFCURVE",
"1102 622 OFFCURVE",
"1142 665 CURVE",
"1146 666 OFFCURVE",
"1150 667 OFFCURVE",
"1154 667 CURVE SMOOTH",
"1159 667 OFFCURVE",
"1163 667 OFFCURVE",
"1166 667 CURVE SMOOTH",
"1226 667 OFFCURVE",
"1243 633 OFFCURVE",
"1243 583 CURVE"
);
},
{
closed = 1;
nodes = (
"789 254 OFFCURVE",
"831 370 OFFCURVE",
"893 466 CURVE SMOOTH",
"955 562 OFFCURVE",
"1037 637 OFFCURVE",
"1121 662 CURVE",
"1123 660 LINE",
"1072 604 OFFCURVE",
"1048 519 OFFCURVE",
"1048 459 CURVE SMOOTH",
"1048 360 OFFCURVE",
"1094 277 OFFCURVE",
"1182 225 CURVE",
"1131 137 OFFCURVE",
"995 8 OFFCURVE",
"897 8 CURVE SMOOTH",
"827 8 OFFCURVE",
"789 79 OFFCURVE",
"789 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1454 270 LINE",
"1411 231 OFFCURVE",
"1357 205 OFFCURVE",
"1304 205 CURVE SMOOTH",
"1267 205 OFFCURVE",
"1238 211 OFFCURVE",
"1211 223 CURVE",
"1271 306 OFFCURVE",
"1341 454 OFFCURVE",
"1341 558 CURVE SMOOTH",
"1341 659 OFFCURVE",
"1305 712 OFFCURVE",
"1224 712 CURVE SMOOTH",
"1189 712 OFFCURVE",
"1158 696 OFFCURVE",
"1138 677 CURVE",
"1090 669 OFFCURVE",
"1028 636 OFFCURVE",
"967 587 CURVE SMOOTH",
"936 562 OFFCURVE",
"907 534 OFFCURVE",
"878 502 CURVE SMOOTH",
"820 438 OFFCURVE",
"773 363 OFFCURVE",
"746 283 CURVE SMOOTH",
"732 242 OFFCURVE",
"725 201 OFFCURVE",
"725 160 CURVE SMOOTH",
"725 57 OFFCURVE",
"778 -8 OFFCURVE",
"883 -8 CURVE SMOOTH",
"1001 -8 OFFCURVE",
"1140 118 OFFCURVE",
"1205 213 CURVE",
"1232 202 OFFCURVE",
"1260 193 OFFCURVE",
"1303 193 CURVE SMOOTH",
"1353 193 OFFCURVE",
"1422 222 OFFCURVE",
"1460 263 CURVE"
);
},
{
closed = 1;
nodes = (
"620 379 LINE",
"622 386 OFFCURVE",
"625 396 OFFCURVE",
"629 409 CURVE SMOOTH",
"641 448 OFFCURVE",
"648 484 OFFCURVE",
"648 517 CURVE SMOOTH",
"648 538 LINE SMOOTH",
"648 642 OFFCURVE",
"593 712 OFFCURVE",
"469 712 CURVE SMOOTH",
"373 712 OFFCURVE",
"282 639 OFFCURVE",
"195 531 CURVE",
"204 526 LINE",
"271 604 OFFCURVE",
"364 700 OFFCURVE",
"469 700 CURVE SMOOTH",
"535 700 OFFCURVE",
"608 617 OFFCURVE",
"608 536 CURVE SMOOTH",
"608 506 OFFCURVE",
"599 457 OFFCURVE",
"580 388 CURVE",
"547 307 OFFCURVE",
"536 274 OFFCURVE",
"485 200 CURVE SMOOTH",
"406 85 OFFCURVE",
"274 -2 OFFCURVE",
"185 7 CURVE SMOOTH",
"134 12 OFFCURVE",
"109 64 OFFCURVE",
"106 165 CURVE SMOOTH",
"104 234 OFFCURVE",
"149 338 OFFCURVE",
"177 390 CURVE SMOOTH",
"197 427 OFFCURVE",
"233 486 OFFCURVE",
"284 537 CURVE",
"284 537 LINE",
"309 562 OFFCURVE",
"361 622 OFFCURVE",
"453 622 CURVE SMOOTH",
"503 622 OFFCURVE",
"538 578 OFFCURVE",
"538 526 CURVE SMOOTH",
"538 509 OFFCURVE",
"532 484 OFFCURVE",
"523 461 CURVE",
"534 459 LINE",
"542 478 OFFCURVE",
"550 503 OFFCURVE",
"550 527 CURVE SMOOTH",
"550 589 OFFCURVE",
"513 634 OFFCURVE",
"449 634 CURVE SMOOTH",
"385 634 OFFCURVE",
"319 599 OFFCURVE",
"260 547 CURVE SMOOTH",
"230 521 OFFCURVE",
"202 491 OFFCURVE",
"177 457 CURVE SMOOTH",
"126 388 OFFCURVE",
"85 316 OFFCURVE",
"65 245 CURVE SMOOTH",
"55 210 OFFCURVE",
"49 178 OFFCURVE",
"49 149 CURVE SMOOTH",
"49 105 OFFCURVE",
"62 62 OFFCURVE",
"89 27 CURVE",
"120 -8 OFFCURVE",
"158 -16 OFFCURVE",
"194 -16 CURVE SMOOTH",
"266 -16 OFFCURVE",
"340 22 OFFCURVE",
"408 79 CURVE SMOOTH",
"475 136 OFFCURVE",
"534 213 OFFCURVE",
"578 292 CURVE SMOOTH",
"593 319 OFFCURVE",
"605 344 OFFCURVE",
"615 367 CURVE"
);
},
{
closed = 1;
nodes = (
"611 450 LINE",
"638 440 OFFCURVE",
"681 436 OFFCURVE",
"710 436 CURVE SMOOTH",
"755 436 OFFCURVE",
"862 486 OFFCURVE",
"876 493 CURVE SMOOTH",
"913 511 OFFCURVE",
"945 535 OFFCURVE",
"945 547 CURVE",
"933 557 LINE",
"933 559 OFFCURVE",
"842 471 OFFCURVE",
"761 471 CURVE SMOOTH",
"711 471 OFFCURVE",
"663 489 OFFCURVE",
"617 507 CURVE"
);
},
{
closed = 1;
nodes = (
"1143 170 LINE",
"1028 -12 LINE",
"954 -125 LINE",
"979 -137 LINE",
"1205 213 LINE"
);
},
{
closed = 1;
nodes = (
"1004 -128 OFFCURVE",
"957 -112 OFFCURVE",
"908 -112 CURVE SMOOTH",
"848 -112 OFFCURVE",
"804 -141 OFFCURVE",
"804 -178 CURVE SMOOTH",
"804 -203 OFFCURVE",
"820 -219 OFFCURVE",
"845 -219 CURVE SMOOTH",
"866 -219 OFFCURVE",
"878 -206 OFFCURVE",
"878 -186 CURVE SMOOTH",
"878 -167 OFFCURVE",
"868 -155 OFFCURVE",
"847 -155 CURVE",
"855 -134 OFFCURVE",
"877 -124 OFFCURVE",
"914 -124 CURVE SMOOTH",
"951 -124 OFFCURVE",
"987 -145 OFFCURVE",
"1020 -173 CURVE",
"1048 -159 LINE"
);
}
);
width = 1290;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2018-11-27 04:21:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
}
);
width = 1083;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2018-11-27 04:21:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"991 353 LINE",
"1154 353 LINE",
"1154 374 LINE",
"991 374 LINE"
);
}
);
width = 1083;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2018-11-27 04:21:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"716 -79 LINE",
"742 -97 LINE",
"887 140 LINE",
"860 158 LINE"
);
},
{
closed = 1;
nodes = (
"674 -213 LINE",
"776 -42 LINE",
"749 -24 LINE",
"637 -213 LINE"
);
},
{
closed = 1;
nodes = (
"645 -213 LINE",
"851 -213 LINE",
"851 -200 LINE",
"645 -200 LINE"
);
}
);
width = 1083;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2018-11-27 04:22:00 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"716 -79 LINE",
"742 -97 LINE",
"887 140 LINE",
"860 158 LINE"
);
},
{
closed = 1;
nodes = (
"674 -213 LINE",
"776 -42 LINE",
"749 -24 LINE",
"637 -213 LINE"
);
}
);
width = 1083;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2018-11-27 04:22:00 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"716 -79 LINE",
"742 -97 LINE",
"887 140 LINE",
"860 158 LINE"
);
},
{
closed = 1;
nodes = (
"674 -213 LINE",
"776 -42 LINE",
"749 -24 LINE",
"637 -213 LINE"
);
},
{
closed = 1;
nodes = (
"639 -211 LINE",
"655 -213 OFFCURVE",
"671 -214 OFFCURVE",
"687 -214 CURVE SMOOTH",
"736 -214 OFFCURVE",
"788 -201 OFFCURVE",
"827 -179 CURVE SMOOTH",
"863 -159 OFFCURVE",
"893 -126 OFFCURVE",
"893 -94 CURVE SMOOTH",
"893 -66 OFFCURVE",
"873 -49 OFFCURVE",
"835 -49 CURVE SMOOTH",
"812 -49 OFFCURVE",
"794 -57 OFFCURVE",
"779 -72 CURVE SMOOTH",
"777 -74 OFFCURVE",
"775 -77 OFFCURVE",
"773 -79 CURVE",
"781 -82 LINE",
"783 -80 OFFCURVE",
"784 -78 OFFCURVE",
"787 -76 CURVE SMOOTH",
"802 -66 OFFCURVE",
"818 -57 OFFCURVE",
"834 -57 CURVE SMOOTH",
"859 -57 OFFCURVE",
"874 -67 OFFCURVE",
"874 -92 CURVE SMOOTH",
"874 -128 OFFCURVE",
"845 -159 OFFCURVE",
"809 -178 CURVE SMOOTH",
"777 -195 OFFCURVE",
"723 -206 OFFCURVE",
"688 -206 CURVE SMOOTH",
"675 -206 OFFCURVE",
"662 -206 OFFCURVE",
"650 -204 CURVE"
);
}
);
width = 1083;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2018-11-27 04:22:00 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"362 680 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"484 518 OFFCURVE",
"444 461 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"283 222 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1152 141 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"825 146 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"609 262 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"420 63 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"316 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"104 -77 LINE",
"130 -95 LINE",
"275 142 LINE",
"248 160 LINE"
);
},
{
closed = 1;
nodes = (
"62 -211 LINE",
"164 -40 LINE",
"137 -22 LINE",
"25 -211 LINE"
);
}
);
width = 1084;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2018-11-27 04:22:00 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"402 -79 LINE",
"428 -97 LINE",
"573 140 LINE",
"546 158 LINE"
);
},
{
closed = 1;
nodes = (
"360 -213 LINE",
"462 -42 LINE",
"435 -24 LINE",
"323 -213 LINE"
);
}
);
width = 1083;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2018-11-27 04:22:00 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"379 441 LINE",
"348 390 OFFCURVE",
"301 366 OFFCURVE",
"262 366 CURVE SMOOTH",
"237 366 OFFCURVE",
"219 373 OFFCURVE",
"207 387 CURVE SMOOTH",
"196 400 OFFCURVE",
"190 418 OFFCURVE",
"190 440 CURVE SMOOTH",
"190 501 OFFCURVE",
"230 570 OFFCURVE",
"297 626 CURVE SMOOTH",
"361 681 OFFCURVE",
"429 700 OFFCURVE",
"477 700 CURVE SMOOTH",
"512 700 OFFCURVE",
"537 692 OFFCURVE",
"537 653 CURVE SMOOTH",
"537 633 OFFCURVE",
"526 602 OFFCURVE",
"505 560 CURVE SMOOTH",
"483 518 OFFCURVE",
"446 460 OFFCURVE",
"393 385 CURVE SMOOTH",
"383 370 OFFCURVE",
"372 354 OFFCURVE",
"359 337 CURVE SMOOTH",
"346 319 OFFCURVE",
"334 301 OFFCURVE",
"323 284 CURVE SMOOTH",
"282 223 OFFCURVE",
"215 119 OFFCURVE",
"215 64 CURVE SMOOTH",
"215 11 OFFCURVE",
"250 -8 OFFCURVE",
"294 -8 CURVE SMOOTH",
"363 -8 OFFCURVE",
"474 84 OFFCURVE",
"549 170 CURVE",
"551 168 LINE",
"536 141 OFFCURVE",
"519 107 OFFCURVE",
"519 72 CURVE SMOOTH",
"519 23 OFFCURVE",
"545 -8 OFFCURVE",
"592 -8 CURVE SMOOTH",
"655 -8 OFFCURVE",
"775 74 OFFCURVE",
"862 170 CURVE",
"864 168 LINE",
"841 129 OFFCURVE",
"832 107 OFFCURVE",
"832 72 CURVE SMOOTH",
"832 23 OFFCURVE",
"861 -8 OFFCURVE",
"912 -8 CURVE SMOOTH",
"968 -8 OFFCURVE",
"1032 26 OFFCURVE",
"1108 99 CURVE SMOOTH",
"1151 142 OFFCURVE",
"1198 195 OFFCURVE",
"1250 263 CURVE",
"1242 266 LINE",
"1190 202 OFFCURVE",
"1143 146 OFFCURVE",
"1100 106 CURVE SMOOTH",
"1058 67 OFFCURVE",
"1023 40 OFFCURVE",
"995 26 CURVE SMOOTH",
"966 11 OFFCURVE",
"943 4 OFFCURVE",
"926 4 CURVE SMOOTH",
"899 4 OFFCURVE",
"880 16 OFFCURVE",
"880 52 CURVE SMOOTH",
"880 87 OFFCURVE",
"911 152 OFFCURVE",
"960 228 CURVE SMOOTH",
"1265 696 LINE",
"1198 696 LINE",
"950 305 LINE SMOOTH",
"894 217 OFFCURVE",
"826 145 OFFCURVE",
"774 101 CURVE SMOOTH",
"736 68 OFFCURVE",
"702 45 OFFCURVE",
"672 30 CURVE SMOOTH",
"642 15 OFFCURVE",
"621 8 OFFCURVE",
"608 8 CURVE SMOOTH",
"584 8 OFFCURVE",
"571 26 OFFCURVE",
"571 49 CURVE SMOOTH",
"571 82 OFFCURVE",
"593 138 OFFCURVE",
"642 214 CURVE SMOOTH",
"952 696 LINE",
"885 695 LINE",
"636 305 LINE SMOOTH",
"608 263 OFFCURVE",
"511 141 OFFCURVE",
"460 97 CURVE SMOOTH",
"421 62 OFFCURVE",
"389 38 OFFCURVE",
"365 26 CURVE SMOOTH",
"340 14 OFFCURVE",
"322 8 OFFCURVE",
"309 8 CURVE SMOOTH",
"289 8 OFFCURVE",
"269 18 OFFCURVE",
"269 49 CURVE SMOOTH",
"269 70 OFFCURVE",
"278 100 OFFCURVE",
"297 137 CURVE SMOOTH",
"315 174 OFFCURVE",
"343 219 OFFCURVE",
"382 274 CURVE SMOOTH",
"447 366 OFFCURVE",
"497 441 OFFCURVE",
"532 498 CURVE SMOOTH",
"567 555 OFFCURVE",
"585 599 OFFCURVE",
"585 629 CURVE SMOOTH",
"585 681 OFFCURVE",
"553 712 OFFCURVE",
"490 712 CURVE SMOOTH",
"426 712 OFFCURVE",
"351 689 OFFCURVE",
"278 625 CURVE SMOOTH",
"210 565 OFFCURVE",
"178 490 OFFCURVE",
"178 437 CURVE SMOOTH",
"178 378 OFFCURVE",
"215 354 OFFCURVE",
"260 354 CURVE SMOOTH",
"303 354 OFFCURVE",
"353 380 OFFCURVE",
"390 439 CURVE"
);
},
{
closed = 1;
nodes = (
"716 -79 LINE",
"742 -97 LINE",
"887 140 LINE",
"860 158 LINE"
);
},
{
closed = 1;
nodes = (
"776 -42 LINE",
"749 -24 LINE"
);
},
{
closed = 1;
nodes = (
"786 -91 OFFCURVE",
"739 -75 OFFCURVE",
"690 -75 CURVE SMOOTH",
"630 -75 OFFCURVE",
"586 -104 OFFCURVE",
"586 -141 CURVE SMOOTH",
"586 -166 OFFCURVE",
"602 -182 OFFCURVE",
"627 -182 CURVE SMOOTH",
"648 -182 OFFCURVE",
"660 -169 OFFCURVE",
"660 -149 CURVE SMOOTH",
"660 -130 OFFCURVE",
"650 -118 OFFCURVE",
"629 -118 CURVE",
"637 -97 OFFCURVE",
"659 -87 OFFCURVE",
"696 -87 CURVE SMOOTH",
"733 -87 OFFCURVE",
"769 -108 OFFCURVE",
"802 -136 CURVE",
"830 -122 LINE"
);
}
);
width = 1083;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2018-11-27 04:22:01 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"361 0 OFFCURVE",
"431 -28 OFFCURVE",
"495 -28 CURVE SMOOTH",
"618 -28 OFFCURVE",
"711 30 OFFCURVE",
"774 141 CURVE",
"767 145 LINE",
"711 50 OFFCURVE",
"639 0 OFFCURVE",
"527 0 CURVE SMOOTH",
"464 0 OFFCURVE",
"402 9 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"970 672 OFFCURVE",
"1006 640 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE",
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 630 OFFCURVE",
"985 684 OFFCURVE",
"902 684 CURVE SMOOTH",
"835 684 OFFCURVE",
"777 656 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE"
);
},
{
closed = 1;
nodes = (
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH",
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"45 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH"
);
}
);
width = 816;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2018-11-27 04:22:01 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"421 -169 LINE",
"447 -169 LINE",
"521 -19 LINE",
"497 -19 LINE"
);
},
{
closed = 1;
nodes = (
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"361 0 OFFCURVE",
"431 -28 OFFCURVE",
"495 -28 CURVE SMOOTH",
"618 -28 OFFCURVE",
"711 30 OFFCURVE",
"774 141 CURVE",
"767 145 LINE",
"711 50 OFFCURVE",
"639 0 OFFCURVE",
"527 0 CURVE SMOOTH",
"464 0 OFFCURVE",
"402 9 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"970 672 OFFCURVE",
"1006 640 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE",
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 630 OFFCURVE",
"985 684 OFFCURVE",
"902 684 CURVE SMOOTH",
"835 684 OFFCURVE",
"777 656 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE"
);
},
{
closed = 1;
nodes = (
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH",
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"45 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH"
);
}
);
width = 816;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2018-11-27 04:22:01 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"361 0 OFFCURVE",
"431 -28 OFFCURVE",
"495 -28 CURVE SMOOTH",
"618 -28 OFFCURVE",
"711 30 OFFCURVE",
"774 141 CURVE",
"767 145 LINE",
"711 50 OFFCURVE",
"639 0 OFFCURVE",
"527 0 CURVE SMOOTH",
"464 0 OFFCURVE",
"402 9 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"970 672 OFFCURVE",
"1006 640 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE",
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 630 OFFCURVE",
"985 684 OFFCURVE",
"902 684 CURVE SMOOTH",
"835 684 OFFCURVE",
"777 656 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE"
);
},
{
closed = 1;
nodes = (
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH",
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"45 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"412 -4 LINE",
"428 -6 OFFCURVE",
"444 -7 OFFCURVE",
"460 -7 CURVE SMOOTH",
"509 -7 OFFCURVE",
"561 6 OFFCURVE",
"600 28 CURVE SMOOTH",
"636 48 OFFCURVE",
"666 81 OFFCURVE",
"666 113 CURVE SMOOTH",
"666 141 OFFCURVE",
"646 158 OFFCURVE",
"608 158 CURVE SMOOTH",
"585 158 OFFCURVE",
"567 150 OFFCURVE",
"552 135 CURVE SMOOTH",
"550 133 OFFCURVE",
"548 130 OFFCURVE",
"546 128 CURVE",
"554 125 LINE",
"556 127 OFFCURVE",
"557 129 OFFCURVE",
"560 131 CURVE SMOOTH",
"575 141 OFFCURVE",
"591 150 OFFCURVE",
"607 150 CURVE SMOOTH",
"632 150 OFFCURVE",
"647 140 OFFCURVE",
"647 115 CURVE SMOOTH",
"647 79 OFFCURVE",
"618 48 OFFCURVE",
"582 29 CURVE SMOOTH",
"550 12 OFFCURVE",
"496 1 OFFCURVE",
"461 1 CURVE SMOOTH",
"448 1 OFFCURVE",
"435 1 OFFCURVE",
"423 3 CURVE"
);
}
);
width = 816;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2018-11-27 04:22:01 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"560 -38 LINE",
"562 -38 OFFCURVE",
"577 -38 OFFCURVE",
"578 -38 CURVE SMOOTH",
"701 -38 OFFCURVE",
"794 20 OFFCURVE",
"857 131 CURVE",
"850 135 LINE",
"794 40 OFFCURVE",
"722 -18 OFFCURVE",
"610 -18 CURVE SMOOTH",
"599 -18 OFFCURVE",
"574 -17 OFFCURVE",
"563 -16 CURVE"
);
},
{
closed = 1;
nodes = (
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH",
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"45 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"835 684 OFFCURVE",
"777 656 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE",
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"360 0 OFFCURVE",
"498 -37 OFFCURVE",
"561 -38 CURVE",
"568 -9 LINE SMOOTH",
"571 4 OFFCURVE",
"571 16 OFFCURVE",
"570 23 CURVE SMOOTH",
"564 68 OFFCURVE",
"555 120 OFFCURVE",
"581 151 CURVE SMOOTH",
"611 187 OFFCURVE",
"632 211 OFFCURVE",
"667 217 CURVE SMOOTH",
"692 221 OFFCURVE",
"694 208 OFFCURVE",
"689 185 CURVE SMOOTH",
"686 170 OFFCURVE",
"672 157 OFFCURVE",
"655 140 CURVE SMOOTH",
"652 137 OFFCURVE",
"650 136 OFFCURVE",
"647 133 CURVE",
"647 127 LINE",
"650 129 OFFCURVE",
"652 130 OFFCURVE",
"656 133 CURVE SMOOTH",
"677 151 OFFCURVE",
"692 169 OFFCURVE",
"696 187 CURVE SMOOTH",
"704 222 OFFCURVE",
"698 238 OFFCURVE",
"671 235 CURVE SMOOTH",
"640 232 OFFCURVE",
"599 199 OFFCURVE",
"567 163 CURVE SMOOTH",
"534 125 OFFCURVE",
"532 80 OFFCURVE",
"547 21 CURVE SMOOTH",
"549 14 OFFCURVE",
"543 0 OFFCURVE",
"528 0 CURVE",
"464 0 OFFCURVE",
"387 16 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"970 672 OFFCURVE",
"1006 640 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE",
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 630 OFFCURVE",
"985 684 OFFCURVE",
"902 684 CURVE SMOOTH"
);
}
);
width = 907;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2018-11-27 04:22:02 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"361 0 OFFCURVE",
"431 -28 OFFCURVE",
"495 -28 CURVE SMOOTH",
"618 -28 OFFCURVE",
"711 30 OFFCURVE",
"774 141 CURVE",
"767 145 LINE",
"711 50 OFFCURVE",
"639 0 OFFCURVE",
"527 0 CURVE SMOOTH",
"464 0 OFFCURVE",
"402 9 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"970 672 OFFCURVE",
"1006 640 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE",
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 630 OFFCURVE",
"985 684 OFFCURVE",
"902 684 CURVE SMOOTH",
"835 684 OFFCURVE",
"777 656 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE"
);
},
{
closed = 1;
nodes = (
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH",
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"44 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"418 11 OFFCURVE",
"427 20 OFFCURVE",
"436 29 CURVE SMOOTH",
"461 53 OFFCURVE",
"508 83 OFFCURVE",
"543 93 CURVE SMOOTH",
"582 104 OFFCURVE",
"624 102 OFFCURVE",
"649 76 CURVE SMOOTH",
"667 58 OFFCURVE",
"663 41 OFFCURVE",
"645 23 CURVE SMOOTH",
"633 12 OFFCURVE",
"616 7 OFFCURVE",
"598 4 CURVE SMOOTH",
"594 4 OFFCURVE",
"592 4 OFFCURVE",
"589 4 CURVE",
"586 -3 LINE",
"589 -3 OFFCURVE",
"592 -4 OFFCURVE",
"595 -4 CURVE SMOOTH",
"616 -5 OFFCURVE",
"635 2 OFFCURVE",
"651 18 CURVE SMOOTH",
"678 45 OFFCURVE",
"681 71 OFFCURVE",
"662 91 CURVE SMOOTH",
"639 114 OFFCURVE",
"595 117 OFFCURVE",
"555 106 CURVE SMOOTH",
"512 95 OFFCURVE",
"465 68 OFFCURVE",
"430 34 CURVE SMOOTH",
"419 23 OFFCURVE",
"408 11 OFFCURVE",
"398 -1 CURVE",
"410 1 LINE"
);
}
);
width = 816;
}
);
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2018-11-27 04:22:02 +0000";
layers = (
{
components = (
{
name = C;
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 667;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2018-11-27 04:22:02 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"655 712 LINE",
"652 742 OFFCURVE",
"634 757 OFFCURVE",
"609 756 CURVE SMOOTH",
"577 755 OFFCURVE",
"545 724 OFFCURVE",
"526 687 CURVE",
"525 684 OFFCURVE",
"523 682 OFFCURVE",
"522 679 CURVE",
"490 665 OFFCURVE",
"457 647 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"400 581 OFFCURVE",
"456 624 OFFCURVE",
"512 654 CURVE",
"503 630 OFFCURVE",
"490 568 OFFCURVE",
"492 542 CURVE SMOOTH",
"495 480 OFFCURVE",
"521 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"631 738 OFFCURVE",
"642 729 OFFCURVE",
"646 712 CURVE",
"613 709 OFFCURVE",
"575 700 OFFCURVE",
"537 685 CURVE",
"555 714 OFFCURVE",
"580 736 OFFCURVE",
"611 737 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"529 459 OFFCURVE",
"507 487 OFFCURVE",
"505 544 CURVE SMOOTH",
"504 568 OFFCURVE",
"515 630 OFFCURVE",
"524 660 CURVE",
"538 667 OFFCURVE",
"551 674 OFFCURVE",
"565 679 CURVE",
"595 691 OFFCURVE",
"622 697 OFFCURVE",
"648 699 CURVE",
"649 683 OFFCURVE",
"640 666 OFFCURVE",
"630 651 CURVE SMOOTH",
"628 648 OFFCURVE",
"626 647 OFFCURVE",
"624 645 CURVE",
"628 637 LINE",
"630 639 OFFCURVE",
"633 641 OFFCURVE",
"634 643 CURVE SMOOTH",
"644 663 OFFCURVE",
"656 677 OFFCURVE",
"656 700 CURVE",
"664 700 LINE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH"
);
}
);
width = 593;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2018-11-27 04:22:02 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"907 587 LINE",
"836 562 OFFCURVE",
"761 507 OFFCURVE",
"761 430 CURVE SMOOTH",
"761 383 OFFCURVE",
"798 356 OFFCURVE",
"845 356 CURVE SMOOTH",
"940 356 OFFCURVE",
"1028 459 OFFCURVE",
"1028 561 CURVE SMOOTH",
"1028 605 OFFCURVE",
"1011 643 OFFCURVE",
"976 664 CURVE",
"961 674 OFFCURVE",
"942 683 OFFCURVE",
"919 683 CURVE SMOOTH",
"834 684 OFFCURVE",
"667 694 OFFCURVE",
"618 630 CURVE SMOOTH",
"596 601 OFFCURVE",
"590 569 OFFCURVE",
"605 541 CURVE",
"616 547 LINE",
"603 570 OFFCURVE",
"609 599 OFFCURVE",
"627 622 CURVE SMOOTH",
"661 665 OFFCURVE",
"767 677 OFFCURVE",
"800 678 CURVE SMOOTH",
"858 680 LINE",
"809 671 OFFCURVE",
"766 646 OFFCURVE",
"728 613 CURVE SMOOTH",
"703 591 OFFCURVE",
"681 566 OFFCURVE",
"660 538 CURVE SMOOTH",
"618 481 OFFCURVE",
"581 420 OFFCURVE",
"552 361 CURVE SMOOTH",
"537 331 OFFCURVE",
"524 303 OFFCURVE",
"512 278 CURVE",
"507 266 LINE",
"464 180 OFFCURVE",
"412 93 OFFCURVE",
"330 40 CURVE",
"244 69 OFFCURVE",
"145 102 OFFCURVE",
"72 102 CURVE SMOOTH",
"27 102 OFFCURVE",
"-4 85 OFFCURVE",
"-4 53 CURVE SMOOTH",
"-4 9 OFFCURVE",
"76 -10 OFFCURVE",
"145 -10 CURVE SMOOTH",
"212 -10 OFFCURVE",
"264 4 OFFCURVE",
"309 20 CURVE",
"360 0 OFFCURVE",
"497 -37 OFFCURVE",
"560 -38 CURVE",
"560 -38 LINE",
"578 -38 LINE SMOOTH",
"701 -38 OFFCURVE",
"794 20 OFFCURVE",
"857 131 CURVE",
"850 135 LINE",
"794 40 OFFCURVE",
"722 -18 OFFCURVE",
"610 -18 CURVE SMOOTH",
"600 -18 OFFCURVE",
"578 -17 OFFCURVE",
"566 -16 CURVE",
"568 -9 LINE",
"571 4 OFFCURVE",
"571 16 OFFCURVE",
"570 23 CURVE SMOOTH",
"564 68 OFFCURVE",
"555 120 OFFCURVE",
"581 151 CURVE SMOOTH",
"611 187 OFFCURVE",
"632 211 OFFCURVE",
"667 217 CURVE SMOOTH",
"692 221 OFFCURVE",
"694 208 OFFCURVE",
"689 185 CURVE SMOOTH",
"686 170 OFFCURVE",
"672 157 OFFCURVE",
"655 140 CURVE",
"647 133 LINE",
"647 127 LINE",
"656 133 LINE",
"677 151 OFFCURVE",
"692 169 OFFCURVE",
"696 187 CURVE SMOOTH",
"704 222 OFFCURVE",
"698 238 OFFCURVE",
"671 235 CURVE SMOOTH",
"640 232 OFFCURVE",
"599 199 OFFCURVE",
"567 163 CURVE SMOOTH",
"534 125 OFFCURVE",
"532 80 OFFCURVE",
"547 21 CURVE SMOOTH",
"549 14 OFFCURVE",
"543 0 OFFCURVE",
"528 0 CURVE SMOOTH",
"464 0 OFFCURVE",
"387 16 OFFCURVE",
"345 36 CURVE",
"442 87 OFFCURVE",
"519 169 OFFCURVE",
"567 266 CURVE",
"572 278 LINE",
"590 312 OFFCURVE",
"624 384 OFFCURVE",
"650 432 CURVE SMOOTH",
"666 461 OFFCURVE",
"683 490 OFFCURVE",
"702 519 CURVE SMOOTH",
"738 577 OFFCURVE",
"781 623 OFFCURVE",
"830 651 CURVE SMOOTH",
"854 665 OFFCURVE",
"879 672 OFFCURVE",
"906 672 CURVE SMOOTH",
"932 672 OFFCURVE",
"954 667 OFFCURVE",
"970 655 CURVE",
"994 639 OFFCURVE",
"1006 612 OFFCURVE",
"1006 572 CURVE SMOOTH",
"1006 489 OFFCURVE",
"927 368 OFFCURVE",
"844 368 CURVE SMOOTH",
"805 368 OFFCURVE",
"773 391 OFFCURVE",
"773 431 CURVE SMOOTH",
"773 501 OFFCURVE",
"848 561 OFFCURVE",
"909 581 CURVE"
);
},
{
closed = 1;
nodes = (
"102 2 OFFCURVE",
"69 7 OFFCURVE",
"44 17 CURVE SMOOTH",
"20 27 OFFCURVE",
"8 39 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 78 OFFCURVE",
"31 90 OFFCURVE",
"62 90 CURVE SMOOTH",
"104 90 OFFCURVE",
"228 54 OFFCURVE",
"294 24 CURVE",
"247 9 OFFCURVE",
"203 2 OFFCURVE",
"144 2 CURVE SMOOTH"
);
}
);
width = 907;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2018-11-27 04:22:03 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 820 LINE"
);
}
);
width = 1019;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2018-11-27 04:22:03 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"874 671 LINE",
"925 637 LINE",
"993 788 LINE",
"941 822 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"866 663 OFFCURVE",
"930 694 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"858 326 LINE",
"1010 326 LINE",
"1010 360 LINE",
"858 360 LINE"
);
}
);
width = 1019;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2018-11-27 04:22:03 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"882 684 LINE",
"933 650 LINE",
"1001 801 LINE",
"949 835 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"859 655 OFFCURVE",
"930 680 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"760 -16 LINE",
"997 -16 LINE",
"997 -4 LINE",
"760 -4 LINE"
);
}
);
width = 1061;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2018-11-27 04:22:03 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"792 679 LINE",
"843 645 LINE",
"911 796 LINE",
"859 830 LINE"
);
},
{
closed = 1;
nodes = (
"480 221 LINE",
"493 239 OFFCURVE",
"505 258 OFFCURVE",
"517 277 CURVE SMOOTH",
"581 382 OFFCURVE",
"643 487 OFFCURVE",
"705 569 CURVE SMOOTH",
"778 666 OFFCURVE",
"840 699 OFFCURVE",
"840 575 CURVE SMOOTH",
"840 414 OFFCURVE",
"602 184 OFFCURVE",
"600 52 CURVE SMOOTH",
"599 7 OFFCURVE",
"629 -16 OFFCURVE",
"676 -16 CURVE SMOOTH",
"732 -16 OFFCURVE",
"793 19 OFFCURVE",
"859 88 CURVE SMOOTH",
"919 149 OFFCURVE",
"959 211 OFFCURVE",
"990 259 CURVE",
"981 263 LINE",
"936 191 OFFCURVE",
"887 130 OFFCURVE",
"836 80 CURVE SMOOTH",
"777 23 OFFCURVE",
"723 -4 OFFCURVE",
"683 -4 CURVE SMOOTH",
"664 -4 OFFCURVE",
"654 7 OFFCURVE",
"654 28 CURVE SMOOTH",
"654 55 OFFCURVE",
"659 97 OFFCURVE",
"686 142 CURVE SMOOTH",
"701 167 OFFCURVE",
"723 197 OFFCURVE",
"760 241 CURVE SMOOTH",
"833 326 OFFCURVE",
"894 429 OFFCURVE",
"894 550 CURVE SMOOTH",
"894 612 OFFCURVE",
"868 646 OFFCURVE",
"803 681 CURVE SMOOTH",
"759 704 OFFCURVE",
"693 712 OFFCURVE",
"636 712 CURVE SMOOTH",
"556 712 OFFCURVE",
"470 694 OFFCURVE",
"393 662 CURVE SMOOTH",
"354 646 OFFCURVE",
"318 627 OFFCURVE",
"284 605 CURVE SMOOTH",
"216 560 OFFCURVE",
"164 505 OFFCURVE",
"135 442 CURVE SMOOTH",
"120 411 OFFCURVE",
"113 378 OFFCURVE",
"113 345 CURVE SMOOTH",
"113 261 OFFCURVE",
"167 208 OFFCURVE",
"251 208 CURVE SMOOTH",
"365 208 OFFCURVE",
"451 320 OFFCURVE",
"451 434 CURVE",
"439 434 LINE",
"439 334 OFFCURVE",
"363 220 OFFCURVE",
"252 220 CURVE SMOOTH",
"187 220 OFFCURVE",
"149 266 OFFCURVE",
"149 339 CURVE SMOOTH",
"149 415 OFFCURVE",
"181 480 OFFCURVE",
"230 534 CURVE SMOOTH",
"255 561 OFFCURVE",
"283 584 OFFCURVE",
"316 605 CURVE SMOOTH",
"381 646 OFFCURVE",
"454 674 OFFCURVE",
"528 689 CURVE SMOOTH",
"565 696 OFFCURVE",
"600 700 OFFCURVE",
"633 700 CURVE SMOOTH",
"685 700 OFFCURVE",
"743 694 OFFCURVE",
"787 671 CURVE",
"692 626 OFFCURVE",
"616 536 OFFCURVE",
"549 436 CURVE SMOOTH",
"515 386 OFFCURVE",
"483 335 OFFCURVE",
"454 283 CURVE SMOOTH",
"447 271 OFFCURVE",
"440 259 OFFCURVE",
"433 248 CURVE"
);
}
);
width = 929;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2018-11-27 04:22:03 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 820 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"919 73 OFFCURVE",
"912 66 OFFCURVE",
"905 60 CURVE",
"910 70 OFFCURVE",
"913 81 OFFCURVE",
"913 91 CURVE SMOOTH",
"913 119 OFFCURVE",
"893 136 OFFCURVE",
"855 136 CURVE SMOOTH",
"832 136 OFFCURVE",
"814 128 OFFCURVE",
"799 113 CURVE",
"793 106 LINE",
"801 103 LINE",
"803 105 OFFCURVE",
"804 107 OFFCURVE",
"807 109 CURVE SMOOTH",
"822 119 OFFCURVE",
"838 128 OFFCURVE",
"854 128 CURVE SMOOTH",
"879 128 OFFCURVE",
"894 118 OFFCURVE",
"894 93 CURVE SMOOTH",
"894 66 OFFCURVE",
"880 42 OFFCURVE",
"855 24 CURVE SMOOTH",
"825 3 OFFCURVE",
"796 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"868 666 OFFCURVE",
"930 699 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"787 -16 OFFCURVE",
"809 -11 OFFCURVE",
"831 -1 CURVE",
"837 1 OFFCURVE",
"842 3 OFFCURVE",
"847 6 CURVE SMOOTH",
"857 12 LINE SMOOTH",
"887 30 OFFCURVE",
"917 55 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 1019;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2018-11-27 04:22:04 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"868 681 LINE",
"930 649 LINE",
"868 841 LINE",
"812 829 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 1019;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2018-11-27 04:22:04 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"843 689 OFFCURVE",
"877 671 CURVE",
"819 651 OFFCURVE",
"750 585 OFFCURVE",
"687 483 CURVE SMOOTH",
"656 433 OFFCURVE",
"589 335 OFFCURVE",
"556 283 CURVE SMOOTH",
"530 241 OFFCURVE",
"485 162 OFFCURVE",
"455 107 CURVE",
"428 62 LINE",
"427 61 LINE",
"383 -11 LINE",
"367 -39 LINE",
"350 -66 LINE",
"271 -200 LINE",
"308 -200 LINE",
"410 -29 LINE",
"604 278 LINE SMOOTH",
"670 382 OFFCURVE",
"749 508 OFFCURVE",
"795 569 CURVE SMOOTH",
"849 639 OFFCURVE",
"936 669 OFFCURVE",
"930 575 CURVE SMOOTH",
"920 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 820 LINE"
);
}
);
width = 1019;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2018-11-27 04:22:04 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 820 LINE"
);
},
{
closed = 1;
nodes = (
"403 -97 OFFCURVE",
"356 -81 OFFCURVE",
"307 -81 CURVE SMOOTH",
"247 -81 OFFCURVE",
"203 -110 OFFCURVE",
"203 -147 CURVE SMOOTH",
"203 -172 OFFCURVE",
"219 -188 OFFCURVE",
"244 -188 CURVE SMOOTH",
"265 -188 OFFCURVE",
"277 -175 OFFCURVE",
"277 -155 CURVE SMOOTH",
"277 -136 OFFCURVE",
"267 -124 OFFCURVE",
"246 -124 CURVE",
"254 -103 OFFCURVE",
"276 -93 OFFCURVE",
"313 -93 CURVE SMOOTH",
"350 -93 OFFCURVE",
"386 -114 OFFCURVE",
"419 -142 CURVE",
"447 -128 LINE"
);
},
{
closed = 1;
nodes = (
"371 -95 LINE",
"410 -29 LINE",
"604 278 LINE SMOOTH",
"670 382 OFFCURVE",
"749 508 OFFCURVE",
"795 569 CURVE SMOOTH",
"849 639 OFFCURVE",
"936 669 OFFCURVE",
"930 575 CURVE SMOOTH",
"920 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE",
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"843 689 OFFCURVE",
"877 671 CURVE",
"819 651 OFFCURVE",
"750 585 OFFCURVE",
"687 483 CURVE SMOOTH",
"656 433 OFFCURVE",
"589 335 OFFCURVE",
"556 283 CURVE SMOOTH",
"530 241 OFFCURVE",
"485 162 OFFCURVE",
"455 107 CURVE",
"428 62 LINE",
"427 61 LINE",
"383 -11 LINE",
"367 -39 LINE",
"350 -66 LINE",
"337 -87 LINE"
);
}
);
width = 1019;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2018-11-27 04:22:04 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
}
);
width = 1019;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2018-11-27 04:22:05 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"866 663 OFFCURVE",
"930 694 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"858 326 LINE",
"1010 326 LINE",
"1010 360 LINE",
"858 360 LINE"
);
}
);
width = 1019;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2018-11-27 04:22:05 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"859 655 OFFCURVE",
"930 680 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"760 -16 LINE",
"997 -16 LINE",
"997 -4 LINE",
"760 -4 LINE"
);
}
);
width = 1151;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2018-11-27 04:22:05 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"570 221 LINE",
"583 239 OFFCURVE",
"595 258 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"868 666 OFFCURVE",
"930 699 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE",
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"537 271 OFFCURVE",
"530 259 OFFCURVE",
"523 248 CURVE"
);
}
);
width = 1019;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2018-11-27 04:22:05 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"919 73 OFFCURVE",
"912 66 OFFCURVE",
"905 60 CURVE",
"910 70 OFFCURVE",
"913 81 OFFCURVE",
"913 91 CURVE SMOOTH",
"913 119 OFFCURVE",
"893 136 OFFCURVE",
"855 136 CURVE SMOOTH",
"832 136 OFFCURVE",
"814 128 OFFCURVE",
"799 113 CURVE",
"793 106 LINE",
"801 103 LINE",
"803 105 OFFCURVE",
"804 107 OFFCURVE",
"807 109 CURVE SMOOTH",
"822 119 OFFCURVE",
"838 128 OFFCURVE",
"854 128 CURVE SMOOTH",
"879 128 OFFCURVE",
"894 118 OFFCURVE",
"894 93 CURVE SMOOTH",
"894 66 OFFCURVE",
"880 42 OFFCURVE",
"855 24 CURVE SMOOTH",
"825 3 OFFCURVE",
"796 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"868 666 OFFCURVE",
"930 699 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"787 -16 OFFCURVE",
"809 -11 OFFCURVE",
"831 -1 CURVE",
"837 1 OFFCURVE",
"842 3 OFFCURVE",
"847 6 CURVE SMOOTH",
"857 12 LINE SMOOTH",
"887 30 OFFCURVE",
"917 55 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 1019;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2018-11-27 04:22:05 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"888 671 LINE",
"950 639 LINE",
"888 831 LINE",
"832 819 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"703 819 LINE",
"1007 819 LINE",
"1007 843 LINE",
"703 843 LINE"
);
}
);
width = 1019;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2018-11-27 04:22:06 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"843 689 OFFCURVE",
"877 671 CURVE",
"819 651 OFFCURVE",
"750 585 OFFCURVE",
"687 483 CURVE SMOOTH",
"656 433 OFFCURVE",
"589 335 OFFCURVE",
"556 283 CURVE SMOOTH",
"530 241 OFFCURVE",
"485 162 OFFCURVE",
"455 107 CURVE",
"428 62 LINE",
"427 61 LINE",
"383 -11 LINE",
"367 -39 LINE",
"350 -66 LINE",
"271 -200 LINE",
"308 -200 LINE",
"410 -29 LINE",
"604 278 LINE SMOOTH",
"670 382 OFFCURVE",
"749 508 OFFCURVE",
"795 569 CURVE SMOOTH",
"849 639 OFFCURVE",
"936 669 OFFCURVE",
"930 575 CURVE SMOOTH",
"920 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 1019;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2018-11-27 04:22:06 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"902 669 LINE",
"953 635 LINE",
"1021 786 LINE",
"969 797 LINE"
);
},
{
closed = 1;
nodes = (
"830 786 LINE",
"1143 786 LINE",
"1143 803 LINE",
"830 803 LINE"
);
},
{
closed = 1;
nodes = (
"403 -97 OFFCURVE",
"356 -81 OFFCURVE",
"307 -81 CURVE SMOOTH",
"247 -81 OFFCURVE",
"203 -110 OFFCURVE",
"203 -147 CURVE SMOOTH",
"203 -172 OFFCURVE",
"219 -188 OFFCURVE",
"244 -188 CURVE SMOOTH",
"265 -188 OFFCURVE",
"277 -175 OFFCURVE",
"277 -155 CURVE SMOOTH",
"277 -136 OFFCURVE",
"267 -124 OFFCURVE",
"246 -124 CURVE",
"254 -103 OFFCURVE",
"276 -93 OFFCURVE",
"313 -93 CURVE SMOOTH",
"350 -93 OFFCURVE",
"386 -114 OFFCURVE",
"419 -142 CURVE",
"447 -128 LINE"
);
},
{
closed = 1;
nodes = (
"371 -95 LINE",
"410 -29 LINE",
"604 278 LINE SMOOTH",
"670 382 OFFCURVE",
"749 508 OFFCURVE",
"795 569 CURVE SMOOTH",
"849 639 OFFCURVE",
"936 669 OFFCURVE",
"930 575 CURVE SMOOTH",
"920 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE",
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"843 689 OFFCURVE",
"877 671 CURVE",
"819 651 OFFCURVE",
"750 585 OFFCURVE",
"687 483 CURVE SMOOTH",
"656 433 OFFCURVE",
"589 335 OFFCURVE",
"556 283 CURVE SMOOTH",
"530 241 OFFCURVE",
"485 162 OFFCURVE",
"455 107 CURVE",
"428 62 LINE",
"427 61 LINE",
"383 -11 LINE",
"367 -39 LINE",
"350 -66 LINE",
"337 -87 LINE"
);
}
);
width = 1019;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2018-11-27 04:22:06 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"796 504 OFFCURVE",
"841 503 OFFCURVE",
"859 503 CURVE SMOOTH",
"902 504 OFFCURVE",
"952 512 OFFCURVE",
"1011 537 CURVE SMOOTH",
"1066 560 OFFCURVE",
"1104 594 OFFCURVE",
"1104 639 CURVE SMOOTH",
"1104 694 OFFCURVE",
"1059 712 OFFCURVE",
"1010 712 CURVE SMOOTH",
"966 712 OFFCURVE",
"920 701 OFFCURVE",
"857 660 CURVE SMOOTH",
"797 621 OFFCURVE",
"757 566 OFFCURVE",
"729 526 CURVE",
"684 530 OFFCURVE",
"581 550 OFFCURVE",
"581 624 CURVE SMOOTH",
"581 671 OFFCURVE",
"624 700 OFFCURVE",
"679 700 CURVE SMOOTH",
"694 700 OFFCURVE",
"705 699 OFFCURVE",
"710 698 CURVE SMOOTH",
"715 697 OFFCURVE",
"720 695 OFFCURVE",
"725 694 CURVE",
"728 704 LINE",
"716 708 OFFCURVE",
"703 712 OFFCURVE",
"678 712 CURVE SMOOTH",
"610 712 OFFCURVE",
"568 673 OFFCURVE",
"568 620 CURVE SMOOTH",
"568 539 OFFCURVE",
"675 518 OFFCURVE",
"723 513 CURVE",
"704 485 OFFCURVE",
"685 453 OFFCURVE",
"665 418 CURVE SMOOTH",
"644 382 OFFCURVE",
"621 344 OFFCURVE",
"596 304 CURVE",
"434 14 LINE",
"383 19 OFFCURVE",
"339 39 OFFCURVE",
"303 79 CURVE SMOOTH",
"268 118 OFFCURVE",
"258 159 OFFCURVE",
"258 215 CURVE SMOOTH",
"258 291 OFFCURVE",
"293 360 OFFCURVE",
"340 404 CURVE SMOOTH",
"388 451 OFFCURVE",
"443 469 OFFCURVE",
"484 469 CURVE SMOOTH",
"523 469 OFFCURVE",
"552 449 OFFCURVE",
"552 406 CURVE SMOOTH",
"552 356 OFFCURVE",
"511 308 OFFCURVE",
"458 308 CURVE SMOOTH",
"443 308 OFFCURVE",
"427 312 OFFCURVE",
"412 316 CURVE",
"409 308 LINE",
"427 302 OFFCURVE",
"445 299 OFFCURVE",
"463 299 CURVE SMOOTH",
"531 299 OFFCURVE",
"588 351 OFFCURVE",
"588 409 CURVE SMOOTH",
"588 449 OFFCURVE",
"550 481 OFFCURVE",
"487 481 CURVE SMOOTH",
"430 481 OFFCURVE",
"363 462 OFFCURVE",
"300 410 CURVE SMOOTH",
"249 368 OFFCURVE",
"200 301 OFFCURVE",
"200 220 CURVE SMOOTH",
"200 155 OFFCURVE",
"224 103 OFFCURVE",
"273 64 CURVE SMOOTH",
"316 29 OFFCURVE",
"363 9 OFFCURVE",
"427 1 CURVE",
"366 -100 OFFCURVE",
"320 -159 OFFCURVE",
"288 -188 CURVE",
"228 -248 OFFCURVE",
"160 -280 OFFCURVE",
"96 -280 CURVE SMOOTH",
"23 -280 OFFCURVE",
"-29 -237 OFFCURVE",
"-29 -164 CURVE SMOOTH",
"-29 -135 OFFCURVE",
"-24 -112 OFFCURVE",
"-13 -95 CURVE SMOOTH",
"2 -72 OFFCURVE",
"25 -60 OFFCURVE",
"44 -60 CURVE SMOOTH",
"66 -60 OFFCURVE",
"91 -66 OFFCURVE",
"118 -79 CURVE",
"122 -71 LINE",
"94 -54 OFFCURVE",
"66 -44 OFFCURVE",
"31 -44 CURVE SMOOTH",
"-1 -44 OFFCURVE",
"-37 -59 OFFCURVE",
"-58 -86 CURVE SMOOTH",
"-75 -107 OFFCURVE",
"-83 -129 OFFCURVE",
"-83 -164 CURVE SMOOTH",
"-83 -241 OFFCURVE",
"-11 -292 OFFCURVE",
"86 -292 CURVE SMOOTH",
"162 -292 OFFCURVE",
"248 -262 OFFCURVE",
"328 -197 CURVE SMOOTH",
"378 -157 OFFCURVE",
"453 -62 OFFCURVE",
"497 0 CURVE",
"502 0 OFFCURVE",
"525 0 OFFCURVE",
"529 0 CURVE SMOOTH",
"642 -1 OFFCURVE",
"725 22 OFFCURVE",
"802 65 CURVE SMOOTH",
"893 115 OFFCURVE",
"981 211 OFFCURVE",
"981 319 CURVE SMOOTH",
"981 358 OFFCURVE",
"969 394 OFFCURVE",
"944 415 CURVE SMOOTH",
"921 435 OFFCURVE",
"889 444 OFFCURVE",
"857 444 CURVE SMOOTH",
"800 444 OFFCURVE",
"748 411 OFFCURVE",
"701 366 CURVE",
"698 366 LINE",
"708 381 OFFCURVE",
"766 486 OFFCURVE",
"777 505 CURVE"
);
},
{
closed = 1;
nodes = (
"690 339 LINE",
"728 380 OFFCURVE",
"786 432 OFFCURVE",
"846 432 CURVE SMOOTH",
"862 432 OFFCURVE",
"884 425 OFFCURVE",
"897 408 CURVE SMOOTH",
"911 390 OFFCURVE",
"918 366 OFFCURVE",
"918 336 CURVE SMOOTH",
"918 237 OFFCURVE",
"859 148 OFFCURVE",
"786 91 CURVE SMOOTH",
"713 35 OFFCURVE",
"621 15 OFFCURVE",
"530 12 CURVE SMOOTH",
"522 12 OFFCURVE",
"517 12 OFFCURVE",
"515 12 CURVE SMOOTH",
"513 11 OFFCURVE",
"509 11 OFFCURVE",
"502 12 CURVE"
);
},
{
closed = 1;
nodes = (
"794 531 OFFCURVE",
"803 546 OFFCURVE",
"813 561 CURVE SMOOTH",
"830 586 OFFCURVE",
"852 617 OFFCURVE",
"877 642 CURVE SMOOTH",
"905 670 OFFCURVE",
"957 700 OFFCURVE",
"990 700 CURVE SMOOTH",
"1030 700 OFFCURVE",
"1050 680 OFFCURVE",
"1050 645 CURVE SMOOTH",
"1050 614 OFFCURVE",
"1030 581 OFFCURVE",
"987 554 CURVE SMOOTH",
"948 530 OFFCURVE",
"890 516 OFFCURVE",
"850 515 CURVE SMOOTH",
"833 514 OFFCURVE",
"819 514 OFFCURVE",
"810 514 CURVE SMOOTH",
"801 514 OFFCURVE",
"792 515 OFFCURVE",
"785 516 CURVE"
);
}
);
width = 1034;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2018-11-27 04:22:06 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"796 504 OFFCURVE",
"841 503 OFFCURVE",
"859 503 CURVE SMOOTH",
"902 504 OFFCURVE",
"952 512 OFFCURVE",
"1011 537 CURVE SMOOTH",
"1066 560 OFFCURVE",
"1104 594 OFFCURVE",
"1104 639 CURVE SMOOTH",
"1104 694 OFFCURVE",
"1059 712 OFFCURVE",
"1010 712 CURVE SMOOTH",
"966 712 OFFCURVE",
"920 701 OFFCURVE",
"857 660 CURVE SMOOTH",
"797 621 OFFCURVE",
"757 566 OFFCURVE",
"729 526 CURVE",
"684 530 OFFCURVE",
"581 550 OFFCURVE",
"581 624 CURVE SMOOTH",
"581 671 OFFCURVE",
"624 700 OFFCURVE",
"679 700 CURVE SMOOTH",
"694 700 OFFCURVE",
"705 699 OFFCURVE",
"710 698 CURVE SMOOTH",
"715 697 OFFCURVE",
"720 695 OFFCURVE",
"725 694 CURVE",
"728 704 LINE",
"716 708 OFFCURVE",
"703 712 OFFCURVE",
"678 712 CURVE SMOOTH",
"610 712 OFFCURVE",
"568 673 OFFCURVE",
"568 620 CURVE SMOOTH",
"568 539 OFFCURVE",
"675 518 OFFCURVE",
"723 513 CURVE",
"704 485 OFFCURVE",
"685 453 OFFCURVE",
"665 418 CURVE SMOOTH",
"644 382 OFFCURVE",
"621 344 OFFCURVE",
"596 304 CURVE",
"434 14 LINE",
"383 19 OFFCURVE",
"339 39 OFFCURVE",
"303 79 CURVE SMOOTH",
"268 118 OFFCURVE",
"258 159 OFFCURVE",
"258 215 CURVE SMOOTH",
"258 291 OFFCURVE",
"293 360 OFFCURVE",
"340 404 CURVE SMOOTH",
"388 451 OFFCURVE",
"443 469 OFFCURVE",
"484 469 CURVE SMOOTH",
"523 469 OFFCURVE",
"552 449 OFFCURVE",
"552 406 CURVE SMOOTH",
"552 356 OFFCURVE",
"511 308 OFFCURVE",
"458 308 CURVE SMOOTH",
"443 308 OFFCURVE",
"427 312 OFFCURVE",
"412 316 CURVE",
"409 308 LINE",
"427 302 OFFCURVE",
"445 299 OFFCURVE",
"463 299 CURVE SMOOTH",
"531 299 OFFCURVE",
"588 351 OFFCURVE",
"588 409 CURVE SMOOTH",
"588 449 OFFCURVE",
"550 481 OFFCURVE",
"487 481 CURVE SMOOTH",
"430 481 OFFCURVE",
"363 462 OFFCURVE",
"300 410 CURVE SMOOTH",
"249 368 OFFCURVE",
"200 301 OFFCURVE",
"200 220 CURVE SMOOTH",
"200 155 OFFCURVE",
"224 103 OFFCURVE",
"273 64 CURVE SMOOTH",
"316 29 OFFCURVE",
"363 9 OFFCURVE",
"427 1 CURVE",
"366 -100 OFFCURVE",
"320 -159 OFFCURVE",
"288 -188 CURVE",
"228 -248 OFFCURVE",
"160 -280 OFFCURVE",
"96 -280 CURVE SMOOTH",
"23 -280 OFFCURVE",
"-29 -237 OFFCURVE",
"-29 -164 CURVE SMOOTH",
"-29 -135 OFFCURVE",
"-24 -112 OFFCURVE",
"-13 -95 CURVE SMOOTH",
"2 -72 OFFCURVE",
"25 -60 OFFCURVE",
"44 -60 CURVE SMOOTH",
"66 -60 OFFCURVE",
"91 -66 OFFCURVE",
"118 -79 CURVE",
"122 -71 LINE",
"94 -54 OFFCURVE",
"66 -44 OFFCURVE",
"31 -44 CURVE SMOOTH",
"-1 -44 OFFCURVE",
"-37 -59 OFFCURVE",
"-58 -86 CURVE SMOOTH",
"-75 -107 OFFCURVE",
"-83 -129 OFFCURVE",
"-83 -164 CURVE SMOOTH",
"-83 -241 OFFCURVE",
"-11 -292 OFFCURVE",
"86 -292 CURVE SMOOTH",
"162 -292 OFFCURVE",
"248 -262 OFFCURVE",
"328 -197 CURVE SMOOTH",
"378 -157 OFFCURVE",
"453 -62 OFFCURVE",
"497 0 CURVE",
"502 0 OFFCURVE",
"525 0 OFFCURVE",
"529 0 CURVE SMOOTH",
"642 -1 OFFCURVE",
"725 22 OFFCURVE",
"802 65 CURVE SMOOTH",
"893 115 OFFCURVE",
"981 211 OFFCURVE",
"981 319 CURVE SMOOTH",
"981 358 OFFCURVE",
"969 394 OFFCURVE",
"944 415 CURVE SMOOTH",
"921 435 OFFCURVE",
"889 444 OFFCURVE",
"857 444 CURVE SMOOTH",
"800 444 OFFCURVE",
"748 411 OFFCURVE",
"701 366 CURVE",
"698 366 LINE",
"708 381 OFFCURVE",
"766 486 OFFCURVE",
"777 505 CURVE"
);
},
{
closed = 1;
nodes = (
"690 339 LINE",
"728 380 OFFCURVE",
"786 432 OFFCURVE",
"846 432 CURVE SMOOTH",
"862 432 OFFCURVE",
"884 425 OFFCURVE",
"897 408 CURVE SMOOTH",
"911 390 OFFCURVE",
"918 366 OFFCURVE",
"918 336 CURVE SMOOTH",
"918 237 OFFCURVE",
"859 148 OFFCURVE",
"786 91 CURVE SMOOTH",
"713 35 OFFCURVE",
"621 15 OFFCURVE",
"530 12 CURVE SMOOTH",
"522 12 OFFCURVE",
"517 12 OFFCURVE",
"515 12 CURVE SMOOTH",
"513 11 OFFCURVE",
"509 11 OFFCURVE",
"502 12 CURVE"
);
},
{
closed = 1;
nodes = (
"794 531 OFFCURVE",
"803 546 OFFCURVE",
"813 561 CURVE SMOOTH",
"830 586 OFFCURVE",
"852 617 OFFCURVE",
"877 642 CURVE SMOOTH",
"905 670 OFFCURVE",
"957 700 OFFCURVE",
"990 700 CURVE SMOOTH",
"1030 700 OFFCURVE",
"1050 680 OFFCURVE",
"1050 645 CURVE SMOOTH",
"1050 614 OFFCURVE",
"1030 581 OFFCURVE",
"987 554 CURVE SMOOTH",
"948 530 OFFCURVE",
"890 516 OFFCURVE",
"850 515 CURVE SMOOTH",
"833 514 OFFCURVE",
"819 514 OFFCURVE",
"810 514 CURVE SMOOTH",
"801 514 OFFCURVE",
"792 515 OFFCURVE",
"785 516 CURVE"
);
},
{
closed = 1;
nodes = (
"411 -111 LINE",
"725 -111 LINE",
"725 -81 LINE",
"411 -81 LINE"
);
}
);
width = 1069;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2018-11-27 04:22:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"241 -193 LINE",
"555 -193 LINE",
"555 -163 LINE",
"241 -163 LINE"
);
},
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
},
{
closed = 1;
nodes = (
"243 -193 LINE",
"293 -151 OFFCURVE",
"364 -60 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE",
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"707 621 OFFCURVE",
"667 566 OFFCURVE",
"639 526 CURVE",
"594 530 OFFCURVE",
"491 550 OFFCURVE",
"491 624 CURVE SMOOTH",
"491 671 OFFCURVE",
"534 700 OFFCURVE",
"589 700 CURVE SMOOTH",
"604 700 OFFCURVE",
"615 699 OFFCURVE",
"620 698 CURVE SMOOTH",
"625 697 OFFCURVE",
"630 695 OFFCURVE",
"635 694 CURVE",
"638 704 LINE",
"626 708 OFFCURVE",
"613 712 OFFCURVE",
"588 712 CURVE SMOOTH",
"520 712 OFFCURVE",
"478 673 OFFCURVE",
"478 620 CURVE SMOOTH",
"478 539 OFFCURVE",
"585 518 OFFCURVE",
"633 513 CURVE",
"614 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"276 -100 OFFCURVE",
"230 -159 OFFCURVE",
"198 -188 CURVE",
"196 -190 OFFCURVE",
"194 -192 OFFCURVE",
"192 -194 CURVE"
);
}
);
width = 968;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2018-11-27 04:22:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
},
{
closed = 1;
nodes = (
"-11 -292 LINE",
"-9 -292 OFFCURVE",
"-6 -292 OFFCURVE",
"-4 -292 CURVE SMOOTH",
"72 -292 OFFCURVE",
"158 -262 OFFCURVE",
"238 -197 CURVE SMOOTH",
"288 -157 OFFCURVE",
"363 -62 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE",
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"707 621 OFFCURVE",
"667 566 OFFCURVE",
"639 526 CURVE",
"594 530 OFFCURVE",
"491 550 OFFCURVE",
"491 624 CURVE SMOOTH",
"491 671 OFFCURVE",
"534 700 OFFCURVE",
"589 700 CURVE SMOOTH",
"604 700 OFFCURVE",
"615 699 OFFCURVE",
"620 698 CURVE SMOOTH",
"625 697 OFFCURVE",
"630 695 OFFCURVE",
"635 694 CURVE",
"638 704 LINE",
"626 708 OFFCURVE",
"613 712 OFFCURVE",
"588 712 CURVE SMOOTH",
"520 712 OFFCURVE",
"478 673 OFFCURVE",
"478 620 CURVE SMOOTH",
"478 539 OFFCURVE",
"585 518 OFFCURVE",
"633 513 CURVE",
"614 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"276 -100 OFFCURVE",
"230 -159 OFFCURVE",
"198 -188 CURVE",
"138 -248 OFFCURVE",
"70 -280 OFFCURVE",
"6 -280 CURVE SMOOTH",
"0 -280 OFFCURVE",
"-6 -280 OFFCURVE",
"-12 -279 CURVE"
);
}
);
width = 944;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2018-11-27 04:22:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"707 621 OFFCURVE",
"667 566 OFFCURVE",
"639 526 CURVE",
"594 530 OFFCURVE",
"491 550 OFFCURVE",
"491 624 CURVE SMOOTH",
"491 671 OFFCURVE",
"534 700 OFFCURVE",
"589 700 CURVE SMOOTH",
"604 700 OFFCURVE",
"615 699 OFFCURVE",
"620 698 CURVE SMOOTH",
"625 697 OFFCURVE",
"630 695 OFFCURVE",
"635 694 CURVE",
"638 704 LINE",
"626 708 OFFCURVE",
"613 712 OFFCURVE",
"588 712 CURVE SMOOTH",
"520 712 OFFCURVE",
"478 673 OFFCURVE",
"478 620 CURVE SMOOTH",
"478 539 OFFCURVE",
"585 518 OFFCURVE",
"633 513 CURVE",
"614 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"276 -100 OFFCURVE",
"230 -159 OFFCURVE",
"198 -188 CURVE",
"138 -248 OFFCURVE",
"70 -280 OFFCURVE",
"6 -280 CURVE SMOOTH",
"-67 -280 OFFCURVE",
"-119 -237 OFFCURVE",
"-119 -164 CURVE SMOOTH",
"-119 -135 OFFCURVE",
"-114 -112 OFFCURVE",
"-103 -95 CURVE SMOOTH",
"-88 -72 OFFCURVE",
"-65 -60 OFFCURVE",
"-46 -60 CURVE SMOOTH",
"-24 -60 OFFCURVE",
"1 -66 OFFCURVE",
"28 -79 CURVE",
"32 -71 LINE",
"4 -54 OFFCURVE",
"-24 -44 OFFCURVE",
"-59 -44 CURVE SMOOTH",
"-91 -44 OFFCURVE",
"-127 -59 OFFCURVE",
"-148 -86 CURVE SMOOTH",
"-165 -107 OFFCURVE",
"-173 -129 OFFCURVE",
"-173 -164 CURVE SMOOTH",
"-173 -241 OFFCURVE",
"-101 -292 OFFCURVE",
"-4 -292 CURVE SMOOTH",
"72 -292 OFFCURVE",
"158 -262 OFFCURVE",
"238 -197 CURVE SMOOTH",
"288 -157 OFFCURVE",
"363 -62 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE"
);
},
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
},
{
closed = 1;
nodes = (
"218 -200 LINE",
"234 -202 OFFCURVE",
"250 -203 OFFCURVE",
"266 -203 CURVE SMOOTH",
"315 -203 OFFCURVE",
"367 -190 OFFCURVE",
"406 -168 CURVE SMOOTH",
"442 -148 OFFCURVE",
"472 -115 OFFCURVE",
"472 -83 CURVE SMOOTH",
"472 -55 OFFCURVE",
"452 -38 OFFCURVE",
"414 -38 CURVE SMOOTH",
"391 -38 OFFCURVE",
"373 -46 OFFCURVE",
"358 -61 CURVE SMOOTH",
"356 -63 OFFCURVE",
"354 -66 OFFCURVE",
"352 -68 CURVE",
"360 -71 LINE",
"362 -69 OFFCURVE",
"363 -67 OFFCURVE",
"366 -65 CURVE SMOOTH",
"381 -55 OFFCURVE",
"397 -46 OFFCURVE",
"413 -46 CURVE SMOOTH",
"438 -46 OFFCURVE",
"453 -56 OFFCURVE",
"453 -81 CURVE SMOOTH",
"453 -117 OFFCURVE",
"424 -148 OFFCURVE",
"388 -167 CURVE SMOOTH",
"356 -184 OFFCURVE",
"302 -195 OFFCURVE",
"267 -195 CURVE SMOOTH",
"254 -195 OFFCURVE",
"241 -195 OFFCURVE",
"229 -193 CURVE"
);
}
);
width = 944;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2018-11-27 04:22:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"690 339 LINE",
"728 380 OFFCURVE",
"786 432 OFFCURVE",
"846 432 CURVE SMOOTH",
"862 432 OFFCURVE",
"884 425 OFFCURVE",
"897 408 CURVE SMOOTH",
"911 390 OFFCURVE",
"918 366 OFFCURVE",
"918 336 CURVE SMOOTH",
"918 237 OFFCURVE",
"859 148 OFFCURVE",
"786 91 CURVE SMOOTH",
"713 35 OFFCURVE",
"621 15 OFFCURVE",
"530 12 CURVE SMOOTH",
"522 12 OFFCURVE",
"517 12 OFFCURVE",
"515 12 CURVE SMOOTH",
"513 11 OFFCURVE",
"509 11 OFFCURVE",
"502 12 CURVE"
);
},
{
closed = 1;
nodes = (
"813 514 LINE",
"812 514 OFFCURVE",
"811 514 OFFCURVE",
"810 514 CURVE SMOOTH",
"796 514 OFFCURVE",
"789 516 OFFCURVE",
"729 526 CURVE SMOOTH",
"683 534 OFFCURVE",
"581 550 OFFCURVE",
"581 624 CURVE SMOOTH",
"581 671 OFFCURVE",
"624 700 OFFCURVE",
"679 700 CURVE SMOOTH",
"694 700 OFFCURVE",
"705 699 OFFCURVE",
"710 698 CURVE SMOOTH",
"715 697 OFFCURVE",
"720 695 OFFCURVE",
"725 694 CURVE",
"728 704 LINE",
"716 708 OFFCURVE",
"703 712 OFFCURVE",
"678 712 CURVE SMOOTH",
"610 712 OFFCURVE",
"568 673 OFFCURVE",
"568 620 CURVE SMOOTH",
"568 539 OFFCURVE",
"675 518 OFFCURVE",
"723 513 CURVE",
"704 485 OFFCURVE",
"685 453 OFFCURVE",
"665 418 CURVE SMOOTH",
"644 382 OFFCURVE",
"621 344 OFFCURVE",
"596 304 CURVE",
"434 14 LINE",
"383 19 OFFCURVE",
"339 39 OFFCURVE",
"303 79 CURVE SMOOTH",
"268 118 OFFCURVE",
"258 159 OFFCURVE",
"258 215 CURVE SMOOTH",
"258 291 OFFCURVE",
"293 360 OFFCURVE",
"340 404 CURVE SMOOTH",
"388 451 OFFCURVE",
"443 469 OFFCURVE",
"484 469 CURVE SMOOTH",
"523 469 OFFCURVE",
"552 449 OFFCURVE",
"552 406 CURVE SMOOTH",
"552 356 OFFCURVE",
"511 308 OFFCURVE",
"458 308 CURVE SMOOTH",
"443 308 OFFCURVE",
"427 312 OFFCURVE",
"412 316 CURVE",
"409 308 LINE",
"427 302 OFFCURVE",
"445 299 OFFCURVE",
"463 299 CURVE SMOOTH",
"531 299 OFFCURVE",
"588 351 OFFCURVE",
"588 409 CURVE SMOOTH",
"588 449 OFFCURVE",
"550 481 OFFCURVE",
"487 481 CURVE SMOOTH",
"430 481 OFFCURVE",
"363 462 OFFCURVE",
"300 410 CURVE SMOOTH",
"249 368 OFFCURVE",
"200 301 OFFCURVE",
"200 220 CURVE SMOOTH",
"200 155 OFFCURVE",
"224 103 OFFCURVE",
"273 64 CURVE SMOOTH",
"316 29 OFFCURVE",
"363 9 OFFCURVE",
"427 1 CURVE",
"366 -100 OFFCURVE",
"320 -159 OFFCURVE",
"288 -188 CURVE",
"228 -248 OFFCURVE",
"160 -280 OFFCURVE",
"96 -280 CURVE SMOOTH",
"23 -280 OFFCURVE",
"-29 -237 OFFCURVE",
"-29 -164 CURVE SMOOTH",
"-29 -135 OFFCURVE",
"-24 -112 OFFCURVE",
"-13 -95 CURVE SMOOTH",
"2 -72 OFFCURVE",
"25 -60 OFFCURVE",
"44 -60 CURVE SMOOTH",
"66 -60 OFFCURVE",
"91 -66 OFFCURVE",
"118 -79 CURVE",
"122 -71 LINE",
"94 -54 OFFCURVE",
"66 -44 OFFCURVE",
"31 -44 CURVE SMOOTH",
"-1 -44 OFFCURVE",
"-37 -59 OFFCURVE",
"-58 -86 CURVE SMOOTH",
"-75 -107 OFFCURVE",
"-83 -129 OFFCURVE",
"-83 -164 CURVE SMOOTH",
"-83 -241 OFFCURVE",
"-11 -292 OFFCURVE",
"86 -292 CURVE SMOOTH",
"162 -292 OFFCURVE",
"248 -262 OFFCURVE",
"328 -197 CURVE SMOOTH",
"378 -157 OFFCURVE",
"453 -62 OFFCURVE",
"497 0 CURVE",
"502 0 OFFCURVE",
"525 0 OFFCURVE",
"529 0 CURVE SMOOTH",
"642 -1 OFFCURVE",
"725 22 OFFCURVE",
"802 65 CURVE SMOOTH",
"893 115 OFFCURVE",
"981 211 OFFCURVE",
"981 319 CURVE SMOOTH",
"981 358 OFFCURVE",
"969 394 OFFCURVE",
"944 415 CURVE SMOOTH",
"921 435 OFFCURVE",
"889 444 OFFCURVE",
"857 444 CURVE SMOOTH",
"800 444 OFFCURVE",
"748 411 OFFCURVE",
"701 366 CURVE",
"698 366 LINE",
"708 381 OFFCURVE",
"767 487 OFFCURVE",
"778 506 CURVE",
"786 506 OFFCURVE",
"799 504 OFFCURVE",
"813 504 CURVE"
);
}
);
width = 1034;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2018-11-27 04:22:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 513 CURVE SMOOTH",
"616 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"276 -100 OFFCURVE",
"230 -159 OFFCURVE",
"198 -188 CURVE",
"138 -248 OFFCURVE",
"70 -280 OFFCURVE",
"6 -280 CURVE SMOOTH",
"-67 -280 OFFCURVE",
"-119 -237 OFFCURVE",
"-119 -164 CURVE SMOOTH",
"-119 -135 OFFCURVE",
"-114 -112 OFFCURVE",
"-103 -95 CURVE SMOOTH",
"-88 -72 OFFCURVE",
"-65 -60 OFFCURVE",
"-46 -60 CURVE SMOOTH",
"-24 -60 OFFCURVE",
"1 -66 OFFCURVE",
"28 -79 CURVE",
"32 -71 LINE",
"4 -54 OFFCURVE",
"-24 -44 OFFCURVE",
"-59 -44 CURVE SMOOTH",
"-91 -44 OFFCURVE",
"-127 -59 OFFCURVE",
"-148 -86 CURVE SMOOTH",
"-165 -107 OFFCURVE",
"-173 -129 OFFCURVE",
"-173 -164 CURVE SMOOTH",
"-173 -241 OFFCURVE",
"-101 -292 OFFCURVE",
"-4 -292 CURVE SMOOTH",
"72 -292 OFFCURVE",
"158 -262 OFFCURVE",
"238 -197 CURVE SMOOTH",
"288 -157 OFFCURVE",
"363 -62 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE",
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"715 626 OFFCURVE",
"677 591 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
}
);
width = 944;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2018-11-27 04:22:08 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
},
{
closed = 1;
nodes = (
"294 -140 LINE",
"333 -96 OFFCURVE",
"378 -41 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE",
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"715 626 OFFCURVE",
"677 591 OFFCURVE",
"632 513 CURVE SMOOTH",
"616 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"308 -47 OFFCURVE",
"285 -84 OFFCURVE",
"263 -114 CURVE"
);
},
{
closed = 1;
nodes = (
"269 -87 OFFCURVE",
"222 -71 OFFCURVE",
"173 -71 CURVE SMOOTH",
"113 -71 OFFCURVE",
"69 -100 OFFCURVE",
"69 -137 CURVE SMOOTH",
"69 -162 OFFCURVE",
"85 -178 OFFCURVE",
"110 -178 CURVE SMOOTH",
"131 -178 OFFCURVE",
"143 -165 OFFCURVE",
"143 -145 CURVE SMOOTH",
"143 -126 OFFCURVE",
"133 -114 OFFCURVE",
"112 -114 CURVE",
"120 -93 OFFCURVE",
"142 -83 OFFCURVE",
"179 -83 CURVE SMOOTH",
"216 -83 OFFCURVE",
"252 -104 OFFCURVE",
"285 -132 CURVE",
"313 -118 LINE"
);
}
);
width = 944;
}
);
unicode = 1247;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2018-11-27 04:22:08 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"600 339 LINE",
"638 380 OFFCURVE",
"696 432 OFFCURVE",
"756 432 CURVE SMOOTH",
"772 432 OFFCURVE",
"794 425 OFFCURVE",
"807 408 CURVE SMOOTH",
"821 390 OFFCURVE",
"828 366 OFFCURVE",
"828 336 CURVE SMOOTH",
"828 237 OFFCURVE",
"769 148 OFFCURVE",
"696 91 CURVE SMOOTH",
"623 35 OFFCURVE",
"531 15 OFFCURVE",
"440 12 CURVE SMOOTH",
"432 12 OFFCURVE",
"427 12 OFFCURVE",
"425 12 CURVE SMOOTH",
"423 11 OFFCURVE",
"419 11 OFFCURVE",
"412 12 CURVE"
);
},
{
closed = 1;
nodes = (
"704 531 OFFCURVE",
"713 546 OFFCURVE",
"723 561 CURVE SMOOTH",
"740 586 OFFCURVE",
"762 617 OFFCURVE",
"787 642 CURVE SMOOTH",
"815 670 OFFCURVE",
"867 700 OFFCURVE",
"900 700 CURVE SMOOTH",
"940 700 OFFCURVE",
"960 680 OFFCURVE",
"960 645 CURVE SMOOTH",
"960 614 OFFCURVE",
"940 581 OFFCURVE",
"897 554 CURVE SMOOTH",
"858 530 OFFCURVE",
"800 516 OFFCURVE",
"760 515 CURVE SMOOTH",
"743 514 OFFCURVE",
"729 514 OFFCURVE",
"720 514 CURVE SMOOTH",
"711 514 OFFCURVE",
"702 515 OFFCURVE",
"695 516 CURVE"
);
},
{
closed = 1;
nodes = (
"294 -140 LINE",
"333 -96 OFFCURVE",
"378 -41 OFFCURVE",
"407 0 CURVE",
"412 0 OFFCURVE",
"435 0 OFFCURVE",
"439 0 CURVE SMOOTH",
"552 -1 OFFCURVE",
"635 22 OFFCURVE",
"712 65 CURVE SMOOTH",
"803 115 OFFCURVE",
"891 211 OFFCURVE",
"891 319 CURVE SMOOTH",
"891 358 OFFCURVE",
"879 394 OFFCURVE",
"854 415 CURVE SMOOTH",
"831 435 OFFCURVE",
"799 444 OFFCURVE",
"767 444 CURVE SMOOTH",
"710 444 OFFCURVE",
"658 411 OFFCURVE",
"611 366 CURVE",
"608 366 LINE",
"618 381 OFFCURVE",
"676 486 OFFCURVE",
"687 505 CURVE",
"706 504 OFFCURVE",
"751 503 OFFCURVE",
"769 503 CURVE SMOOTH",
"812 504 OFFCURVE",
"862 512 OFFCURVE",
"921 537 CURVE SMOOTH",
"976 560 OFFCURVE",
"1014 594 OFFCURVE",
"1014 639 CURVE SMOOTH",
"1014 694 OFFCURVE",
"969 712 OFFCURVE",
"920 712 CURVE SMOOTH",
"876 712 OFFCURVE",
"830 701 OFFCURVE",
"767 660 CURVE SMOOTH",
"715 626 OFFCURVE",
"677 591 OFFCURVE",
"632 513 CURVE SMOOTH",
"616 485 OFFCURVE",
"595 453 OFFCURVE",
"575 418 CURVE SMOOTH",
"554 382 OFFCURVE",
"531 344 OFFCURVE",
"506 304 CURVE",
"344 14 LINE",
"293 19 OFFCURVE",
"249 39 OFFCURVE",
"213 79 CURVE SMOOTH",
"178 118 OFFCURVE",
"168 159 OFFCURVE",
"168 215 CURVE SMOOTH",
"168 291 OFFCURVE",
"203 360 OFFCURVE",
"250 404 CURVE SMOOTH",
"298 451 OFFCURVE",
"353 469 OFFCURVE",
"394 469 CURVE SMOOTH",
"433 469 OFFCURVE",
"462 449 OFFCURVE",
"462 406 CURVE SMOOTH",
"462 356 OFFCURVE",
"421 308 OFFCURVE",
"368 308 CURVE SMOOTH",
"353 308 OFFCURVE",
"337 312 OFFCURVE",
"322 316 CURVE",
"319 308 LINE",
"337 302 OFFCURVE",
"355 299 OFFCURVE",
"373 299 CURVE SMOOTH",
"441 299 OFFCURVE",
"498 351 OFFCURVE",
"498 409 CURVE SMOOTH",
"498 449 OFFCURVE",
"460 481 OFFCURVE",
"397 481 CURVE SMOOTH",
"340 481 OFFCURVE",
"273 462 OFFCURVE",
"210 410 CURVE SMOOTH",
"159 368 OFFCURVE",
"110 301 OFFCURVE",
"110 220 CURVE SMOOTH",
"110 155 OFFCURVE",
"134 103 OFFCURVE",
"183 64 CURVE SMOOTH",
"226 29 OFFCURVE",
"273 9 OFFCURVE",
"337 1 CURVE",
"308 -47 OFFCURVE",
"285 -84 OFFCURVE",
"263 -114 CURVE"
);
},
{
closed = 1;
nodes = (
"295 -141 LINE",
"340 -146 OFFCURVE",
"382 -156 OFFCURVE",
"409 -183 CURVE SMOOTH",
"435 -209 OFFCURVE",
"443 -230 OFFCURVE",
"433 -249 CURVE",
"418 -235 OFFCURVE",
"401 -236 OFFCURVE",
"387 -248 CURVE SMOOTH",
"371 -261 OFFCURVE",
"370 -278 OFFCURVE",
"385 -292 CURVE SMOOTH",
"404 -309 OFFCURVE",
"427 -310 OFFCURVE",
"446 -294 CURVE SMOOTH",
"475 -270 OFFCURVE",
"465 -221 OFFCURVE",
"422 -179 CURVE SMOOTH",
"387 -145 OFFCURVE",
"341 -123 OFFCURVE",
"285 -112 CURVE"
);
}
);
width = 855;
}
);
unicode = 124B;
},
{
glyphname = "ba-ethiopic";
lastChange = "2018-11-27 04:22:08 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"941 670 OFFCURVE",
"1000 706 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
}
);
width = 999;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2018-11-27 04:22:08 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"936 663 OFFCURVE",
"1000 694 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
},
{
closed = 1;
nodes = (
"928 326 LINE",
"1080 326 LINE",
"1080 360 LINE",
"928 360 LINE"
);
}
);
width = 999;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2018-11-27 04:22:08 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"929 655 OFFCURVE",
"1000 680 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
},
{
closed = 1;
nodes = (
"830 -16 LINE",
"1067 -16 LINE",
"1067 -4 LINE",
"830 -4 LINE"
);
}
);
width = 1131;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2018-11-27 04:22:09 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"490 221 LINE",
"503 239 OFFCURVE",
"515 258 OFFCURVE",
"527 277 CURVE SMOOTH",
"591 382 OFFCURVE",
"653 487 OFFCURVE",
"715 569 CURVE SMOOTH",
"788 666 OFFCURVE",
"850 699 OFFCURVE",
"850 575 CURVE SMOOTH",
"850 414 OFFCURVE",
"612 184 OFFCURVE",
"610 52 CURVE SMOOTH",
"609 7 OFFCURVE",
"639 -16 OFFCURVE",
"686 -16 CURVE SMOOTH",
"742 -16 OFFCURVE",
"803 19 OFFCURVE",
"869 88 CURVE SMOOTH",
"929 149 OFFCURVE",
"969 211 OFFCURVE",
"1000 259 CURVE",
"991 263 LINE",
"946 191 OFFCURVE",
"897 130 OFFCURVE",
"846 80 CURVE SMOOTH",
"787 23 OFFCURVE",
"733 -4 OFFCURVE",
"693 -4 CURVE SMOOTH",
"674 -4 OFFCURVE",
"664 7 OFFCURVE",
"664 28 CURVE SMOOTH",
"664 55 OFFCURVE",
"669 97 OFFCURVE",
"696 142 CURVE SMOOTH",
"711 167 OFFCURVE",
"733 197 OFFCURVE",
"770 241 CURVE SMOOTH",
"843 326 OFFCURVE",
"904 429 OFFCURVE",
"904 550 CURVE SMOOTH",
"904 612 OFFCURVE",
"878 646 OFFCURVE",
"813 681 CURVE SMOOTH",
"769 704 OFFCURVE",
"703 712 OFFCURVE",
"646 712 CURVE SMOOTH",
"566 712 OFFCURVE",
"480 694 OFFCURVE",
"403 662 CURVE SMOOTH",
"364 646 OFFCURVE",
"328 627 OFFCURVE",
"294 605 CURVE SMOOTH",
"226 560 OFFCURVE",
"174 505 OFFCURVE",
"145 442 CURVE SMOOTH",
"130 411 OFFCURVE",
"123 378 OFFCURVE",
"123 345 CURVE SMOOTH",
"123 261 OFFCURVE",
"177 208 OFFCURVE",
"261 208 CURVE SMOOTH",
"375 208 OFFCURVE",
"461 320 OFFCURVE",
"461 434 CURVE",
"449 434 LINE",
"449 334 OFFCURVE",
"373 220 OFFCURVE",
"262 220 CURVE SMOOTH",
"197 220 OFFCURVE",
"159 266 OFFCURVE",
"159 339 CURVE SMOOTH",
"159 415 OFFCURVE",
"191 480 OFFCURVE",
"240 534 CURVE SMOOTH",
"265 561 OFFCURVE",
"293 584 OFFCURVE",
"326 605 CURVE SMOOTH",
"391 646 OFFCURVE",
"464 674 OFFCURVE",
"538 689 CURVE SMOOTH",
"575 696 OFFCURVE",
"610 700 OFFCURVE",
"643 700 CURVE SMOOTH",
"695 700 OFFCURVE",
"753 694 OFFCURVE",
"797 671 CURVE",
"702 626 OFFCURVE",
"626 536 OFFCURVE",
"559 436 CURVE SMOOTH",
"525 386 OFFCURVE",
"493 335 OFFCURVE",
"464 283 CURVE SMOOTH",
"457 271 OFFCURVE",
"450 259 OFFCURVE",
"443 248 CURVE"
);
}
);
width = 849;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2018-11-27 04:22:09 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"989 73 OFFCURVE",
"982 66 OFFCURVE",
"975 60 CURVE",
"980 70 OFFCURVE",
"983 81 OFFCURVE",
"983 91 CURVE SMOOTH",
"983 119 OFFCURVE",
"963 136 OFFCURVE",
"925 136 CURVE SMOOTH",
"902 136 OFFCURVE",
"884 128 OFFCURVE",
"869 113 CURVE",
"863 106 LINE",
"871 103 LINE",
"873 105 OFFCURVE",
"874 107 OFFCURVE",
"877 109 CURVE SMOOTH",
"892 119 OFFCURVE",
"908 128 OFFCURVE",
"924 128 CURVE SMOOTH",
"949 128 OFFCURVE",
"964 118 OFFCURVE",
"964 93 CURVE SMOOTH",
"964 66 OFFCURVE",
"950 42 OFFCURVE",
"925 24 CURVE SMOOTH",
"895 3 OFFCURVE",
"866 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"938 666 OFFCURVE",
"1000 699 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"857 -16 OFFCURVE",
"879 -11 OFFCURVE",
"901 -1 CURVE",
"907 1 OFFCURVE",
"912 3 OFFCURVE",
"917 6 CURVE SMOOTH",
"927 12 LINE SMOOTH",
"957 30 OFFCURVE",
"987 55 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
}
);
width = 999;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2018-11-27 04:22:09 +0000";
layers = (
{
components = (
{
name = _part.hu.cap;
transform = "{1, 0, 0, 1, -238, -18}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"539 280 LINE",
"507 244 OFFCURVE",
"463 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"938 666 OFFCURVE",
"1000 699 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE",
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"469 208 OFFCURVE",
"520 237 OFFCURVE",
"556 281 CURVE"
);
}
);
width = 999;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2018-11-27 04:22:09 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"913 689 OFFCURVE",
"947 671 CURVE",
"889 651 OFFCURVE",
"820 585 OFFCURVE",
"757 483 CURVE SMOOTH",
"726 433 OFFCURVE",
"659 335 OFFCURVE",
"626 283 CURVE SMOOTH",
"600 241 OFFCURVE",
"555 162 OFFCURVE",
"525 107 CURVE",
"498 62 LINE",
"497 61 LINE",
"453 -11 LINE",
"437 -39 LINE",
"420 -66 LINE",
"341 -200 LINE",
"378 -200 LINE",
"480 -29 LINE",
"674 278 LINE SMOOTH",
"740 382 OFFCURVE",
"819 508 OFFCURVE",
"865 569 CURVE SMOOTH",
"919 639 OFFCURVE",
"1006 669 OFFCURVE",
"1000 575 CURVE SMOOTH",
"990 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
}
);
width = 999;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2018-11-27 04:22:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"473 -97 OFFCURVE",
"426 -81 OFFCURVE",
"377 -81 CURVE SMOOTH",
"317 -81 OFFCURVE",
"273 -110 OFFCURVE",
"273 -147 CURVE SMOOTH",
"273 -172 OFFCURVE",
"289 -188 OFFCURVE",
"314 -188 CURVE SMOOTH",
"335 -188 OFFCURVE",
"347 -175 OFFCURVE",
"347 -155 CURVE SMOOTH",
"347 -136 OFFCURVE",
"337 -124 OFFCURVE",
"316 -124 CURVE",
"324 -103 OFFCURVE",
"346 -93 OFFCURVE",
"383 -93 CURVE SMOOTH",
"420 -93 OFFCURVE",
"456 -114 OFFCURVE",
"489 -142 CURVE",
"517 -128 LINE"
);
},
{
closed = 1;
nodes = (
"441 -95 LINE",
"480 -29 LINE",
"674 278 LINE SMOOTH",
"740 382 OFFCURVE",
"819 508 OFFCURVE",
"865 569 CURVE SMOOTH",
"919 639 OFFCURVE",
"1006 669 OFFCURVE",
"1000 575 CURVE SMOOTH",
"990 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE",
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"913 689 OFFCURVE",
"947 671 CURVE",
"889 651 OFFCURVE",
"820 585 OFFCURVE",
"757 483 CURVE SMOOTH",
"726 433 OFFCURVE",
"659 335 OFFCURVE",
"626 283 CURVE SMOOTH",
"600 241 OFFCURVE",
"555 162 OFFCURVE",
"525 107 CURVE",
"498 62 LINE",
"497 61 LINE",
"453 -11 LINE",
"437 -39 LINE",
"420 -66 LINE",
"407 -87 LINE"
);
}
);
width = 999;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2018-11-27 04:22:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"941 670 OFFCURVE",
"1000 706 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
},
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
}
);
width = 999;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2018-11-27 04:22:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"936 663 OFFCURVE",
"1000 694 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
},
{
closed = 1;
nodes = (
"928 326 LINE",
"1080 326 LINE",
"1080 360 LINE",
"928 360 LINE"
);
}
);
width = 999;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2018-11-27 04:22:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"929 655 OFFCURVE",
"1000 680 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
},
{
closed = 1;
nodes = (
"830 -16 LINE",
"1067 -16 LINE",
"1067 -4 LINE",
"830 -4 LINE"
);
}
);
width = 1131;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2018-11-27 04:22:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"794 781 LINE",
"787 769 LINE",
"980 612 LINE",
"987 624 LINE"
);
},
{
closed = 1;
nodes = (
"480 221 LINE",
"493 239 OFFCURVE",
"505 258 OFFCURVE",
"517 277 CURVE SMOOTH",
"581 382 OFFCURVE",
"643 487 OFFCURVE",
"705 569 CURVE SMOOTH",
"778 666 OFFCURVE",
"840 699 OFFCURVE",
"840 575 CURVE SMOOTH",
"840 414 OFFCURVE",
"602 184 OFFCURVE",
"600 52 CURVE SMOOTH",
"599 7 OFFCURVE",
"629 -16 OFFCURVE",
"676 -16 CURVE SMOOTH",
"732 -16 OFFCURVE",
"793 19 OFFCURVE",
"859 88 CURVE SMOOTH",
"919 149 OFFCURVE",
"959 211 OFFCURVE",
"990 259 CURVE",
"981 263 LINE",
"936 191 OFFCURVE",
"887 130 OFFCURVE",
"836 80 CURVE SMOOTH",
"777 23 OFFCURVE",
"723 -4 OFFCURVE",
"683 -4 CURVE SMOOTH",
"664 -4 OFFCURVE",
"654 7 OFFCURVE",
"654 28 CURVE SMOOTH",
"654 55 OFFCURVE",
"659 97 OFFCURVE",
"686 142 CURVE SMOOTH",
"701 167 OFFCURVE",
"723 197 OFFCURVE",
"760 241 CURVE SMOOTH",
"833 326 OFFCURVE",
"894 429 OFFCURVE",
"894 550 CURVE SMOOTH",
"894 612 OFFCURVE",
"868 646 OFFCURVE",
"803 681 CURVE SMOOTH",
"759 704 OFFCURVE",
"693 712 OFFCURVE",
"636 712 CURVE SMOOTH",
"556 712 OFFCURVE",
"470 694 OFFCURVE",
"393 662 CURVE SMOOTH",
"354 646 OFFCURVE",
"318 627 OFFCURVE",
"284 605 CURVE SMOOTH",
"216 560 OFFCURVE",
"164 505 OFFCURVE",
"135 442 CURVE SMOOTH",
"120 411 OFFCURVE",
"113 378 OFFCURVE",
"113 345 CURVE SMOOTH",
"113 261 OFFCURVE",
"167 208 OFFCURVE",
"251 208 CURVE SMOOTH",
"365 208 OFFCURVE",
"451 320 OFFCURVE",
"451 434 CURVE",
"439 434 LINE",
"439 334 OFFCURVE",
"363 220 OFFCURVE",
"252 220 CURVE SMOOTH",
"187 220 OFFCURVE",
"149 266 OFFCURVE",
"149 339 CURVE SMOOTH",
"149 415 OFFCURVE",
"181 480 OFFCURVE",
"230 534 CURVE SMOOTH",
"255 561 OFFCURVE",
"283 584 OFFCURVE",
"316 605 CURVE SMOOTH",
"381 646 OFFCURVE",
"454 674 OFFCURVE",
"528 689 CURVE SMOOTH",
"565 696 OFFCURVE",
"600 700 OFFCURVE",
"633 700 CURVE SMOOTH",
"685 700 OFFCURVE",
"743 694 OFFCURVE",
"787 671 CURVE",
"692 626 OFFCURVE",
"616 536 OFFCURVE",
"549 436 CURVE SMOOTH",
"515 386 OFFCURVE",
"483 335 OFFCURVE",
"454 283 CURVE SMOOTH",
"447 271 OFFCURVE",
"440 259 OFFCURVE",
"433 248 CURVE"
);
}
);
width = 839;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2018-11-27 04:22:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"989 73 OFFCURVE",
"982 66 OFFCURVE",
"975 60 CURVE",
"980 70 OFFCURVE",
"983 81 OFFCURVE",
"983 91 CURVE SMOOTH",
"983 119 OFFCURVE",
"963 136 OFFCURVE",
"925 136 CURVE SMOOTH",
"902 136 OFFCURVE",
"884 128 OFFCURVE",
"869 113 CURVE",
"863 106 LINE",
"871 103 LINE",
"873 105 OFFCURVE",
"874 107 OFFCURVE",
"877 109 CURVE SMOOTH",
"892 119 OFFCURVE",
"908 128 OFFCURVE",
"924 128 CURVE SMOOTH",
"949 128 OFFCURVE",
"964 118 OFFCURVE",
"964 93 CURVE SMOOTH",
"964 66 OFFCURVE",
"950 42 OFFCURVE",
"925 24 CURVE SMOOTH",
"895 3 OFFCURVE",
"866 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"938 666 OFFCURVE",
"1000 699 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"857 -16 OFFCURVE",
"879 -11 OFFCURVE",
"901 -1 CURVE",
"907 1 OFFCURVE",
"912 3 OFFCURVE",
"917 6 CURVE SMOOTH",
"927 12 LINE SMOOTH",
"957 30 OFFCURVE",
"987 55 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
}
);
width = 999;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2018-11-27 04:22:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"539 280 LINE",
"507 244 OFFCURVE",
"463 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"903 694 OFFCURVE",
"947 671 CURVE",
"852 626 OFFCURVE",
"776 536 OFFCURVE",
"709 436 CURVE SMOOTH",
"675 386 OFFCURVE",
"643 335 OFFCURVE",
"614 283 CURVE SMOOTH",
"554 179 OFFCURVE",
"495 91 OFFCURVE",
"435 37 CURVE SMOOTH",
"404 10 OFFCURVE",
"372 -4 OFFCURVE",
"337 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"279 13 OFFCURVE",
"275 30 CURVE",
"294 29 OFFCURVE",
"303 47 OFFCURVE",
"303 63 CURVE SMOOTH",
"303 80 OFFCURVE",
"291 94 OFFCURVE",
"272 94 CURVE SMOOTH",
"247 94 OFFCURVE",
"231 78 OFFCURVE",
"231 54 CURVE SMOOTH",
"231 7 OFFCURVE",
"281 -16 OFFCURVE",
"326 -16 CURVE SMOOTH",
"422 -16 OFFCURVE",
"502 45 OFFCURVE",
"574 133 CURVE SMOOTH",
"610 176 OFFCURVE",
"644 224 OFFCURVE",
"677 277 CURVE SMOOTH",
"741 382 OFFCURVE",
"803 487 OFFCURVE",
"865 569 CURVE SMOOTH",
"938 666 OFFCURVE",
"1000 699 OFFCURVE",
"1000 575 CURVE SMOOTH",
"1000 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE",
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"469 208 OFFCURVE",
"520 237 OFFCURVE",
"556 281 CURVE"
);
},
{
closed = 1;
nodes = (
"475 345 LINE",
"688 345 LINE",
"688 366 LINE",
"475 366 LINE"
);
}
);
width = 999;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2018-11-27 04:22:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"913 689 OFFCURVE",
"947 671 CURVE",
"889 651 OFFCURVE",
"820 585 OFFCURVE",
"757 483 CURVE SMOOTH",
"726 433 OFFCURVE",
"659 335 OFFCURVE",
"626 283 CURVE SMOOTH",
"600 241 OFFCURVE",
"555 162 OFFCURVE",
"525 107 CURVE",
"498 62 LINE",
"497 61 LINE",
"453 -11 LINE",
"437 -39 LINE",
"420 -66 LINE",
"341 -200 LINE",
"378 -200 LINE",
"480 -29 LINE",
"674 278 LINE SMOOTH",
"740 382 OFFCURVE",
"819 508 OFFCURVE",
"865 569 CURVE SMOOTH",
"919 639 OFFCURVE",
"1006 669 OFFCURVE",
"1000 575 CURVE SMOOTH",
"990 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE"
);
}
);
width = 999;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2018-11-27 04:22:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"954 781 LINE",
"947 769 LINE",
"1140 612 LINE",
"1147 624 LINE"
);
},
{
closed = 1;
nodes = (
"473 -97 OFFCURVE",
"426 -81 OFFCURVE",
"377 -81 CURVE SMOOTH",
"317 -81 OFFCURVE",
"273 -110 OFFCURVE",
"273 -147 CURVE SMOOTH",
"273 -172 OFFCURVE",
"289 -188 OFFCURVE",
"314 -188 CURVE SMOOTH",
"335 -188 OFFCURVE",
"347 -175 OFFCURVE",
"347 -155 CURVE SMOOTH",
"347 -136 OFFCURVE",
"337 -124 OFFCURVE",
"316 -124 CURVE",
"324 -103 OFFCURVE",
"346 -93 OFFCURVE",
"383 -93 CURVE SMOOTH",
"420 -93 OFFCURVE",
"456 -114 OFFCURVE",
"489 -142 CURVE",
"517 -128 LINE"
);
},
{
closed = 1;
nodes = (
"441 -95 LINE",
"480 -29 LINE",
"674 278 LINE SMOOTH",
"740 382 OFFCURVE",
"819 508 OFFCURVE",
"865 569 CURVE SMOOTH",
"919 639 OFFCURVE",
"1006 669 OFFCURVE",
"1000 575 CURVE SMOOTH",
"990 414 OFFCURVE",
"762 184 OFFCURVE",
"760 52 CURVE SMOOTH",
"759 7 OFFCURVE",
"789 -16 OFFCURVE",
"836 -16 CURVE SMOOTH",
"892 -16 OFFCURVE",
"953 19 OFFCURVE",
"1019 88 CURVE SMOOTH",
"1079 149 OFFCURVE",
"1119 211 OFFCURVE",
"1150 259 CURVE",
"1141 263 LINE",
"1096 191 OFFCURVE",
"1047 130 OFFCURVE",
"996 80 CURVE SMOOTH",
"937 23 OFFCURVE",
"883 -4 OFFCURVE",
"843 -4 CURVE SMOOTH",
"824 -4 OFFCURVE",
"814 7 OFFCURVE",
"814 28 CURVE SMOOTH",
"814 55 OFFCURVE",
"819 97 OFFCURVE",
"846 142 CURVE SMOOTH",
"861 167 OFFCURVE",
"883 197 OFFCURVE",
"920 241 CURVE SMOOTH",
"993 326 OFFCURVE",
"1054 429 OFFCURVE",
"1054 550 CURVE SMOOTH",
"1054 612 OFFCURVE",
"1028 646 OFFCURVE",
"963 681 CURVE SMOOTH",
"919 704 OFFCURVE",
"853 712 OFFCURVE",
"796 712 CURVE SMOOTH",
"716 712 OFFCURVE",
"630 694 OFFCURVE",
"553 662 CURVE SMOOTH",
"514 646 OFFCURVE",
"478 627 OFFCURVE",
"444 605 CURVE SMOOTH",
"376 560 OFFCURVE",
"324 505 OFFCURVE",
"295 442 CURVE SMOOTH",
"280 411 OFFCURVE",
"273 378 OFFCURVE",
"273 345 CURVE SMOOTH",
"273 261 OFFCURVE",
"327 208 OFFCURVE",
"411 208 CURVE SMOOTH",
"525 208 OFFCURVE",
"611 320 OFFCURVE",
"611 434 CURVE",
"599 434 LINE",
"599 334 OFFCURVE",
"523 220 OFFCURVE",
"412 220 CURVE SMOOTH",
"347 220 OFFCURVE",
"309 266 OFFCURVE",
"309 339 CURVE SMOOTH",
"309 415 OFFCURVE",
"341 480 OFFCURVE",
"390 534 CURVE SMOOTH",
"415 561 OFFCURVE",
"443 584 OFFCURVE",
"476 605 CURVE SMOOTH",
"541 646 OFFCURVE",
"614 674 OFFCURVE",
"688 689 CURVE SMOOTH",
"725 696 OFFCURVE",
"760 700 OFFCURVE",
"793 700 CURVE SMOOTH",
"845 700 OFFCURVE",
"913 689 OFFCURVE",
"947 671 CURVE",
"889 651 OFFCURVE",
"820 585 OFFCURVE",
"757 483 CURVE SMOOTH",
"726 433 OFFCURVE",
"659 335 OFFCURVE",
"626 283 CURVE SMOOTH",
"600 241 OFFCURVE",
"555 162 OFFCURVE",
"525 107 CURVE",
"498 62 LINE",
"497 61 LINE",
"453 -11 LINE",
"437 -39 LINE",
"420 -66 LINE",
"407 -87 LINE"
);
}
);
width = 999;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2018-11-27 04:22:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"679 531 OFFCURVE",
"688 546 OFFCURVE",
"698 561 CURVE SMOOTH",
"715 586 OFFCURVE",
"737 617 OFFCURVE",
"762 642 CURVE SMOOTH",
"790 670 OFFCURVE",
"842 700 OFFCURVE",
"875 700 CURVE SMOOTH",
"915 700 OFFCURVE",
"935 680 OFFCURVE",
"935 645 CURVE SMOOTH",
"935 614 OFFCURVE",
"915 581 OFFCURVE",
"872 554 CURVE SMOOTH",
"833 530 OFFCURVE",
"775 516 OFFCURVE",
"735 515 CURVE SMOOTH",
"718 514 OFFCURVE",
"704 514 OFFCURVE",
"695 514 CURVE SMOOTH",
"686 514 OFFCURVE",
"677 515 OFFCURVE",
"670 516 CURVE"
);
},
{
closed = 1;
nodes = (
"662 505 LINE",
"681 504 OFFCURVE",
"726 503 OFFCURVE",
"744 503 CURVE SMOOTH",
"787 504 OFFCURVE",
"837 512 OFFCURVE",
"896 537 CURVE SMOOTH",
"951 560 OFFCURVE",
"989 594 OFFCURVE",
"989 639 CURVE SMOOTH",
"989 694 OFFCURVE",
"944 712 OFFCURVE",
"895 712 CURVE SMOOTH",
"851 712 OFFCURVE",
"805 701 OFFCURVE",
"742 660 CURVE SMOOTH",
"682 621 OFFCURVE",
"642 566 OFFCURVE",
"614 526 CURVE",
"569 530 OFFCURVE",
"466 550 OFFCURVE",
"466 624 CURVE SMOOTH",
"466 671 OFFCURVE",
"509 700 OFFCURVE",
"564 700 CURVE SMOOTH",
"579 700 OFFCURVE",
"590 699 OFFCURVE",
"595 698 CURVE SMOOTH",
"600 697 OFFCURVE",
"605 695 OFFCURVE",
"610 694 CURVE",
"613 704 LINE",
"601 708 OFFCURVE",
"588 712 OFFCURVE",
"563 712 CURVE SMOOTH",
"495 712 OFFCURVE",
"453 673 OFFCURVE",
"453 620 CURVE SMOOTH",
"453 539 OFFCURVE",
"560 518 OFFCURVE",
"608 513 CURVE",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH",
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE"
);
},
{
closed = 1;
nodes = (
"260 295 LINE",
"864 295 LINE",
"864 334 LINE",
"260 334 LINE"
);
}
);
width = 818;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2018-11-27 04:22:12 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"679 531 OFFCURVE",
"688 546 OFFCURVE",
"698 561 CURVE SMOOTH",
"715 586 OFFCURVE",
"737 617 OFFCURVE",
"762 642 CURVE SMOOTH",
"790 670 OFFCURVE",
"842 700 OFFCURVE",
"875 700 CURVE SMOOTH",
"915 700 OFFCURVE",
"935 680 OFFCURVE",
"935 645 CURVE SMOOTH",
"935 614 OFFCURVE",
"915 581 OFFCURVE",
"872 554 CURVE SMOOTH",
"833 530 OFFCURVE",
"775 516 OFFCURVE",
"735 515 CURVE SMOOTH",
"718 514 OFFCURVE",
"704 514 OFFCURVE",
"695 514 CURVE SMOOTH",
"686 514 OFFCURVE",
"677 515 OFFCURVE",
"670 516 CURVE"
);
},
{
closed = 1;
nodes = (
"662 505 LINE",
"681 504 OFFCURVE",
"726 503 OFFCURVE",
"744 503 CURVE SMOOTH",
"787 504 OFFCURVE",
"837 512 OFFCURVE",
"896 537 CURVE SMOOTH",
"951 560 OFFCURVE",
"989 594 OFFCURVE",
"989 639 CURVE SMOOTH",
"989 694 OFFCURVE",
"944 712 OFFCURVE",
"895 712 CURVE SMOOTH",
"851 712 OFFCURVE",
"805 701 OFFCURVE",
"742 660 CURVE SMOOTH",
"682 621 OFFCURVE",
"642 566 OFFCURVE",
"614 526 CURVE",
"569 530 OFFCURVE",
"466 550 OFFCURVE",
"466 624 CURVE SMOOTH",
"466 671 OFFCURVE",
"509 700 OFFCURVE",
"564 700 CURVE SMOOTH",
"579 700 OFFCURVE",
"590 699 OFFCURVE",
"595 698 CURVE SMOOTH",
"600 697 OFFCURVE",
"605 695 OFFCURVE",
"610 694 CURVE",
"613 704 LINE",
"601 708 OFFCURVE",
"588 712 OFFCURVE",
"563 712 CURVE SMOOTH",
"495 712 OFFCURVE",
"453 673 OFFCURVE",
"453 620 CURVE SMOOTH",
"453 539 OFFCURVE",
"560 518 OFFCURVE",
"608 513 CURVE",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH",
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE"
);
},
{
closed = 1;
nodes = (
"260 295 LINE",
"864 295 LINE",
"864 334 LINE",
"260 334 LINE"
);
},
{
closed = 1;
nodes = (
"390 64 LINE",
"629 64 LINE",
"629 99 LINE",
"390 99 LINE"
);
}
);
width = 818;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2018-11-27 04:22:12 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"672 531 OFFCURVE",
"681 546 OFFCURVE",
"691 561 CURVE SMOOTH",
"708 586 OFFCURVE",
"730 617 OFFCURVE",
"755 642 CURVE SMOOTH",
"783 670 OFFCURVE",
"835 700 OFFCURVE",
"868 700 CURVE SMOOTH",
"908 700 OFFCURVE",
"928 680 OFFCURVE",
"928 645 CURVE SMOOTH",
"928 614 OFFCURVE",
"908 581 OFFCURVE",
"865 554 CURVE SMOOTH",
"826 530 OFFCURVE",
"768 516 OFFCURVE",
"728 515 CURVE SMOOTH",
"711 514 OFFCURVE",
"697 514 OFFCURVE",
"688 514 CURVE SMOOTH",
"679 514 OFFCURVE",
"670 515 OFFCURVE",
"663 516 CURVE"
);
},
{
closed = 1;
nodes = (
"253 295 LINE",
"857 295 LINE",
"857 334 LINE",
"253 334 LINE"
);
},
{
closed = 1;
nodes = (
"196 -200 LINE",
"472 -200 LINE",
"472 -160 LINE",
"196 -160 LINE"
);
},
{
closed = 1;
nodes = (
"199 -200 LINE",
"201 -198 OFFCURVE",
"204 -199 OFFCURVE",
"206 -197 CURVE SMOOTH",
"254 -158 OFFCURVE",
"311 -110 OFFCURVE",
"371 -6 CURVE SMOOTH",
"568 339 LINE",
"655 505 LINE",
"674 504 OFFCURVE",
"719 503 OFFCURVE",
"737 503 CURVE SMOOTH",
"780 504 OFFCURVE",
"830 512 OFFCURVE",
"889 537 CURVE SMOOTH",
"944 560 OFFCURVE",
"982 594 OFFCURVE",
"982 639 CURVE SMOOTH",
"982 694 OFFCURVE",
"937 712 OFFCURVE",
"888 712 CURVE SMOOTH",
"844 712 OFFCURVE",
"798 701 OFFCURVE",
"735 660 CURVE SMOOTH",
"675 621 OFFCURVE",
"635 566 OFFCURVE",
"607 526 CURVE",
"562 530 OFFCURVE",
"459 550 OFFCURVE",
"459 624 CURVE SMOOTH",
"459 671 OFFCURVE",
"502 700 OFFCURVE",
"557 700 CURVE SMOOTH",
"572 700 OFFCURVE",
"583 699 OFFCURVE",
"588 698 CURVE SMOOTH",
"593 697 OFFCURVE",
"598 695 OFFCURVE",
"603 694 CURVE",
"606 704 LINE",
"594 708 OFFCURVE",
"581 712 OFFCURVE",
"556 712 CURVE SMOOTH",
"488 712 OFFCURVE",
"446 673 OFFCURVE",
"446 620 CURVE SMOOTH",
"446 539 OFFCURVE",
"553 518 OFFCURVE",
"601 513 CURVE",
"582 485 OFFCURVE",
"563 453 OFFCURVE",
"543 418 CURVE SMOOTH",
"522 382 OFFCURVE",
"443 243 OFFCURVE",
"305 1 CURVE SMOOTH",
"252 -87 OFFCURVE",
"210 -144 OFFCURVE",
"179 -176 CURVE",
"178 -200 LINE"
);
}
);
width = 841;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2018-11-27 04:22:12 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"672 531 OFFCURVE",
"681 546 OFFCURVE",
"691 561 CURVE SMOOTH",
"708 586 OFFCURVE",
"730 617 OFFCURVE",
"755 642 CURVE SMOOTH",
"783 670 OFFCURVE",
"835 700 OFFCURVE",
"868 700 CURVE SMOOTH",
"908 700 OFFCURVE",
"928 680 OFFCURVE",
"928 645 CURVE SMOOTH",
"928 614 OFFCURVE",
"908 581 OFFCURVE",
"865 554 CURVE SMOOTH",
"826 530 OFFCURVE",
"768 516 OFFCURVE",
"728 515 CURVE SMOOTH",
"711 514 OFFCURVE",
"697 514 OFFCURVE",
"688 514 CURVE SMOOTH",
"679 514 OFFCURVE",
"670 515 OFFCURVE",
"663 516 CURVE"
);
},
{
closed = 1;
nodes = (
"-82 -288 LINE",
"-68 -291 OFFCURVE",
"-52 -292 OFFCURVE",
"-36 -292 CURVE SMOOTH",
"40 -292 OFFCURVE",
"126 -262 OFFCURVE",
"206 -197 CURVE SMOOTH",
"254 -158 OFFCURVE",
"311 -110 OFFCURVE",
"371 -6 CURVE SMOOTH",
"568 339 LINE",
"655 505 LINE",
"674 504 OFFCURVE",
"719 503 OFFCURVE",
"737 503 CURVE SMOOTH",
"780 504 OFFCURVE",
"830 512 OFFCURVE",
"889 537 CURVE SMOOTH",
"944 560 OFFCURVE",
"982 594 OFFCURVE",
"982 639 CURVE SMOOTH",
"982 694 OFFCURVE",
"937 712 OFFCURVE",
"888 712 CURVE SMOOTH",
"844 712 OFFCURVE",
"798 701 OFFCURVE",
"735 660 CURVE SMOOTH",
"675 621 OFFCURVE",
"635 566 OFFCURVE",
"607 526 CURVE",
"562 530 OFFCURVE",
"459 550 OFFCURVE",
"459 624 CURVE SMOOTH",
"459 671 OFFCURVE",
"502 700 OFFCURVE",
"557 700 CURVE SMOOTH",
"572 700 OFFCURVE",
"583 699 OFFCURVE",
"588 698 CURVE SMOOTH",
"593 697 OFFCURVE",
"598 695 OFFCURVE",
"603 694 CURVE",
"606 704 LINE",
"594 708 OFFCURVE",
"581 712 OFFCURVE",
"556 712 CURVE SMOOTH",
"488 712 OFFCURVE",
"446 673 OFFCURVE",
"446 620 CURVE SMOOTH",
"446 539 OFFCURVE",
"553 518 OFFCURVE",
"601 513 CURVE",
"582 485 OFFCURVE",
"563 453 OFFCURVE",
"543 418 CURVE SMOOTH",
"522 382 OFFCURVE",
"443 243 OFFCURVE",
"305 1 CURVE SMOOTH",
"244 -100 OFFCURVE",
"198 -159 OFFCURVE",
"166 -188 CURVE",
"106 -248 OFFCURVE",
"38 -280 OFFCURVE",
"-26 -280 CURVE SMOOTH",
"-47 -280 OFFCURVE",
"-66 -277 OFFCURVE",
"-82 -270 CURVE"
);
},
{
closed = 1;
nodes = (
"253 295 LINE",
"857 295 LINE",
"857 334 LINE",
"253 334 LINE"
);
}
);
width = 811;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2018-11-27 04:22:12 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"254 295 LINE",
"858 295 LINE",
"858 334 LINE",
"254 334 LINE"
);
},
{
closed = 1;
nodes = (
"673 531 OFFCURVE",
"682 546 OFFCURVE",
"692 561 CURVE SMOOTH",
"709 586 OFFCURVE",
"731 617 OFFCURVE",
"756 642 CURVE SMOOTH",
"784 670 OFFCURVE",
"836 700 OFFCURVE",
"869 700 CURVE SMOOTH",
"909 700 OFFCURVE",
"929 680 OFFCURVE",
"929 645 CURVE SMOOTH",
"929 614 OFFCURVE",
"909 581 OFFCURVE",
"866 554 CURVE SMOOTH",
"827 530 OFFCURVE",
"769 516 OFFCURVE",
"729 515 CURVE SMOOTH",
"712 514 OFFCURVE",
"698 514 OFFCURVE",
"689 514 CURVE SMOOTH",
"680 514 OFFCURVE",
"671 515 OFFCURVE",
"664 516 CURVE"
);
},
{
closed = 1;
nodes = (
"254 295 LINE",
"858 295 LINE",
"858 334 LINE",
"254 334 LINE"
);
},
{
closed = 1;
nodes = (
"845 713 OFFCURVE",
"799 702 OFFCURVE",
"736 661 CURVE SMOOTH",
"676 622 OFFCURVE",
"636 567 OFFCURVE",
"608 527 CURVE",
"563 531 OFFCURVE",
"460 551 OFFCURVE",
"460 625 CURVE SMOOTH",
"460 672 OFFCURVE",
"503 701 OFFCURVE",
"558 701 CURVE SMOOTH",
"573 701 OFFCURVE",
"584 700 OFFCURVE",
"589 699 CURVE SMOOTH",
"594 698 OFFCURVE",
"599 696 OFFCURVE",
"604 695 CURVE",
"607 705 LINE",
"595 709 OFFCURVE",
"582 713 OFFCURVE",
"557 713 CURVE SMOOTH",
"489 713 OFFCURVE",
"447 674 OFFCURVE",
"447 621 CURVE SMOOTH",
"447 540 OFFCURVE",
"554 519 OFFCURVE",
"602 514 CURVE",
"583 486 OFFCURVE",
"564 454 OFFCURVE",
"544 419 CURVE SMOOTH",
"523 383 OFFCURVE",
"443 244 OFFCURVE",
"306 2 CURVE SMOOTH",
"250 -97 OFFCURVE",
"202 -154 OFFCURVE",
"170 -184 CURVE",
"193 -191 LINE SMOOTH",
"206 -195 OFFCURVE",
"218 -196 OFFCURVE",
"241 -196 CURVE SMOOTH",
"290 -196 OFFCURVE",
"342 -183 OFFCURVE",
"381 -161 CURVE SMOOTH",
"417 -141 OFFCURVE",
"447 -108 OFFCURVE",
"447 -76 CURVE SMOOTH",
"447 -48 OFFCURVE",
"427 -31 OFFCURVE",
"389 -31 CURVE SMOOTH",
"375 -31 OFFCURVE",
"363 -34 OFFCURVE",
"352 -40 CURVE",
"357 -30 OFFCURVE",
"364 -19 OFFCURVE",
"372 -5 CURVE SMOOTH",
"569 340 LINE",
"656 506 LINE",
"675 505 OFFCURVE",
"720 504 OFFCURVE",
"738 504 CURVE SMOOTH",
"781 504 OFFCURVE",
"831 513 OFFCURVE",
"890 538 CURVE SMOOTH",
"945 561 OFFCURVE",
"983 595 OFFCURVE",
"983 640 CURVE SMOOTH",
"983 695 OFFCURVE",
"938 713 OFFCURVE",
"889 713 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"413 -39 OFFCURVE",
"428 -49 OFFCURVE",
"428 -74 CURVE SMOOTH",
"428 -110 OFFCURVE",
"399 -141 OFFCURVE",
"363 -160 CURVE SMOOTH",
"331 -177 OFFCURVE",
"277 -188 OFFCURVE",
"242 -188 CURVE SMOOTH",
"233 -188 OFFCURVE",
"224 -188 OFFCURVE",
"216 -187 CURVE",
"310 -93 OFFCURVE",
"319 -93 OFFCURVE",
"341 -58 CURVE",
"356 -48 OFFCURVE",
"372 -39 OFFCURVE",
"388 -39 CURVE SMOOTH"
);
}
);
width = 812;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2018-11-27 04:22:13 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE",
"664 505 LINE",
"670 516 LINE",
"614 526 LINE SMOOTH",
"569 534 OFFCURVE",
"466 550 OFFCURVE",
"466 624 CURVE SMOOTH",
"466 671 OFFCURVE",
"509 700 OFFCURVE",
"564 700 CURVE SMOOTH",
"579 700 OFFCURVE",
"590 699 OFFCURVE",
"595 698 CURVE SMOOTH",
"600 697 OFFCURVE",
"605 695 OFFCURVE",
"610 694 CURVE",
"613 704 LINE",
"601 708 OFFCURVE",
"588 712 OFFCURVE",
"563 712 CURVE SMOOTH",
"495 712 OFFCURVE",
"453 673 OFFCURVE",
"453 620 CURVE SMOOTH",
"453 539 OFFCURVE",
"560 518 OFFCURVE",
"608 513 CURVE",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"864 295 LINE",
"864 334 LINE",
"260 334 LINE",
"260 295 LINE"
);
}
);
width = 818;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2018-11-27 04:22:13 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"679 531 OFFCURVE",
"688 546 OFFCURVE",
"698 561 CURVE SMOOTH",
"715 586 OFFCURVE",
"737 617 OFFCURVE",
"762 642 CURVE SMOOTH",
"790 670 OFFCURVE",
"842 700 OFFCURVE",
"875 700 CURVE SMOOTH",
"915 700 OFFCURVE",
"935 680 OFFCURVE",
"935 645 CURVE SMOOTH",
"935 614 OFFCURVE",
"915 581 OFFCURVE",
"872 554 CURVE SMOOTH",
"833 530 OFFCURVE",
"775 516 OFFCURVE",
"735 515 CURVE SMOOTH",
"718 514 OFFCURVE",
"704 514 OFFCURVE",
"695 514 CURVE SMOOTH",
"686 514 OFFCURVE",
"677 515 OFFCURVE",
"670 516 CURVE"
);
},
{
closed = 1;
nodes = (
"608 513 LINE SMOOTH",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH",
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE",
"662 505 LINE",
"681 504 OFFCURVE",
"726 503 OFFCURVE",
"744 503 CURVE SMOOTH",
"787 504 OFFCURVE",
"837 512 OFFCURVE",
"896 537 CURVE SMOOTH",
"951 560 OFFCURVE",
"989 594 OFFCURVE",
"989 639 CURVE SMOOTH",
"989 694 OFFCURVE",
"944 712 OFFCURVE",
"895 712 CURVE SMOOTH",
"851 712 OFFCURVE",
"805 701 OFFCURVE",
"742 660 CURVE SMOOTH",
"682 621 OFFCURVE",
"644 566 OFFCURVE",
"616 526 CURVE"
);
},
{
closed = 1;
nodes = (
"260 295 LINE",
"864 295 LINE",
"864 334 LINE",
"260 334 LINE"
);
}
);
width = 818;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2018-11-27 04:22:13 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"293 -102 LINE",
"336 -71 OFFCURVE",
"384 -52 OFFCURVE",
"439 -52 CURVE SMOOTH",
"543 -52 OFFCURVE",
"578 -103 OFFCURVE",
"578 -147 CURVE",
"575 -146 OFFCURVE",
"572 -146 OFFCURVE",
"568 -146 CURVE SMOOTH",
"549 -146 OFFCURVE",
"540 -162 OFFCURVE",
"540 -181 CURVE SMOOTH",
"540 -201 OFFCURVE",
"552 -216 OFFCURVE",
"573 -216 CURVE SMOOTH",
"602 -216 OFFCURVE",
"618 -189 OFFCURVE",
"618 -162 CURVE SMOOTH",
"618 -80 OFFCURVE",
"521 -40 OFFCURVE",
"444 -40 CURVE SMOOTH",
"379 -40 OFFCURVE",
"322 -57 OFFCURVE",
"272 -85 CURVE"
);
},
{
closed = 1;
nodes = (
"679 531 OFFCURVE",
"688 546 OFFCURVE",
"698 561 CURVE SMOOTH",
"715 586 OFFCURVE",
"737 617 OFFCURVE",
"762 642 CURVE SMOOTH",
"790 670 OFFCURVE",
"842 700 OFFCURVE",
"875 700 CURVE SMOOTH",
"915 700 OFFCURVE",
"935 680 OFFCURVE",
"935 645 CURVE SMOOTH",
"935 614 OFFCURVE",
"915 581 OFFCURVE",
"872 554 CURVE SMOOTH",
"833 530 OFFCURVE",
"775 516 OFFCURVE",
"735 515 CURVE SMOOTH",
"718 514 OFFCURVE",
"704 514 OFFCURVE",
"695 514 CURVE SMOOTH",
"686 514 OFFCURVE",
"677 515 OFFCURVE",
"670 516 CURVE"
);
},
{
closed = 1;
nodes = (
"662 505 LINE",
"681 504 OFFCURVE",
"726 503 OFFCURVE",
"744 503 CURVE SMOOTH",
"787 504 OFFCURVE",
"837 512 OFFCURVE",
"896 537 CURVE SMOOTH",
"951 560 OFFCURVE",
"989 594 OFFCURVE",
"989 639 CURVE SMOOTH",
"989 694 OFFCURVE",
"944 712 OFFCURVE",
"895 712 CURVE SMOOTH",
"851 712 OFFCURVE",
"805 701 OFFCURVE",
"742 660 CURVE SMOOTH",
"682 621 OFFCURVE",
"642 566 OFFCURVE",
"614 526 CURVE",
"569 530 OFFCURVE",
"466 550 OFFCURVE",
"466 624 CURVE SMOOTH",
"466 671 OFFCURVE",
"509 700 OFFCURVE",
"564 700 CURVE SMOOTH",
"579 700 OFFCURVE",
"590 699 OFFCURVE",
"595 698 CURVE SMOOTH",
"600 697 OFFCURVE",
"605 695 OFFCURVE",
"610 694 CURVE",
"613 704 LINE",
"601 708 OFFCURVE",
"588 712 OFFCURVE",
"563 712 CURVE SMOOTH",
"495 712 OFFCURVE",
"453 673 OFFCURVE",
"453 620 CURVE SMOOTH",
"453 539 OFFCURVE",
"560 518 OFFCURVE",
"608 513 CURVE",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH",
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE"
);
},
{
closed = 1;
nodes = (
"260 295 LINE",
"864 295 LINE",
"864 334 LINE",
"260 334 LINE"
);
}
);
width = 975;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2018-11-27 04:22:13 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH",
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"497 53 OFFCURVE",
"426 4 OFFCURVE",
"339 4 CURVE SMOOTH",
"235 4 OFFCURVE",
"200 55 OFFCURVE",
"200 99 CURVE",
"203 98 OFFCURVE",
"206 98 OFFCURVE",
"210 98 CURVE SMOOTH",
"229 98 OFFCURVE",
"238 114 OFFCURVE",
"238 133 CURVE SMOOTH",
"238 153 OFFCURVE",
"226 168 OFFCURVE",
"205 168 CURVE SMOOTH",
"176 168 OFFCURVE",
"160 141 OFFCURVE",
"160 114 CURVE SMOOTH",
"160 32 OFFCURVE",
"257 -8 OFFCURVE",
"334 -8 CURVE SMOOTH",
"439 -8 OFFCURVE",
"522 35 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE"
);
},
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
}
);
width = 909;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2018-11-27 04:22:13 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH",
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"497 53 OFFCURVE",
"426 4 OFFCURVE",
"339 4 CURVE SMOOTH",
"235 4 OFFCURVE",
"200 55 OFFCURVE",
"200 99 CURVE",
"203 98 OFFCURVE",
"206 98 OFFCURVE",
"210 98 CURVE SMOOTH",
"229 98 OFFCURVE",
"238 114 OFFCURVE",
"238 133 CURVE SMOOTH",
"238 153 OFFCURVE",
"226 168 OFFCURVE",
"205 168 CURVE SMOOTH",
"176 168 OFFCURVE",
"160 141 OFFCURVE",
"160 114 CURVE SMOOTH",
"160 32 OFFCURVE",
"257 -8 OFFCURVE",
"334 -8 CURVE SMOOTH",
"439 -8 OFFCURVE",
"522 35 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE"
);
},
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
},
{
closed = 1;
nodes = (
"651 182 LINE",
"859 182 LINE",
"859 214 LINE",
"651 214 LINE"
);
}
);
width = 909;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2018-11-27 04:22:14 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH",
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"497 53 OFFCURVE",
"426 4 OFFCURVE",
"339 4 CURVE SMOOTH",
"235 4 OFFCURVE",
"200 55 OFFCURVE",
"200 99 CURVE",
"203 98 OFFCURVE",
"206 98 OFFCURVE",
"210 98 CURVE SMOOTH",
"229 98 OFFCURVE",
"238 114 OFFCURVE",
"238 133 CURVE SMOOTH",
"238 153 OFFCURVE",
"226 168 OFFCURVE",
"205 168 CURVE SMOOTH",
"176 168 OFFCURVE",
"160 141 OFFCURVE",
"160 114 CURVE SMOOTH",
"160 32 OFFCURVE",
"257 -8 OFFCURVE",
"334 -8 CURVE SMOOTH",
"439 -8 OFFCURVE",
"522 35 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE"
);
},
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
},
{
closed = 1;
nodes = (
"336 -8 LINE",
"749 -8 LINE",
"749 25 LINE",
"454 25 LINE"
);
}
);
width = 957;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2018-11-27 04:22:14 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"285 -3 LINE",
"301 -6 OFFCURVE",
"318 -8 OFFCURVE",
"334 -8 CURVE SMOOTH",
"439 -8 OFFCURVE",
"522 35 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE",
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH",
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"497 53 OFFCURVE",
"426 4 OFFCURVE",
"339 4 CURVE SMOOTH",
"318 4 OFFCURVE",
"300 6 OFFCURVE",
"285 10 CURVE"
);
},
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
}
);
width = 909;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2018-11-27 04:22:14 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
},
{
closed = 1;
nodes = (
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"516 73 OFFCURVE",
"470 37 OFFCURVE",
"417 18 CURVE",
"424 0 LINE",
"517 0 LINE",
"527 -1 OFFCURVE",
"536 0 OFFCURVE",
"545 0 CURVE SMOOTH",
"594 0 OFFCURVE",
"646 12 OFFCURVE",
"685 34 CURVE SMOOTH",
"721 54 OFFCURVE",
"751 87 OFFCURVE",
"751 119 CURVE SMOOTH",
"751 147 OFFCURVE",
"731 164 OFFCURVE",
"693 164 CURVE SMOOTH",
"670 164 OFFCURVE",
"652 156 OFFCURVE",
"637 141 CURVE",
"631 134 LINE",
"639 131 LINE",
"641 133 OFFCURVE",
"642 135 OFFCURVE",
"645 137 CURVE SMOOTH",
"660 147 OFFCURVE",
"676 156 OFFCURVE",
"692 156 CURVE SMOOTH",
"717 156 OFFCURVE",
"732 146 OFFCURVE",
"732 121 CURVE SMOOTH",
"732 85 OFFCURVE",
"703 54 OFFCURVE",
"667 35 CURVE SMOOTH",
"635 18 OFFCURVE",
"581 7 OFFCURVE",
"546 7 CURVE SMOOTH",
"543 7 LINE",
"543 8 LINE",
"516 8 LINE",
"439 8 LINE",
"497 26 OFFCURVE",
"546 58 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE",
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH"
);
}
);
width = 909;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2018-11-27 04:22:14 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"671 317 LINE",
"1044 317 LINE",
"1044 343 LINE",
"671 343 LINE"
);
},
{
closed = 1;
nodes = (
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"920 606 OFFCURVE",
"852 542 OFFCURVE",
"796 466 CURVE",
"796 455 LINE",
"857 455 LINE",
"828 416 OFFCURVE",
"802 374 OFFCURVE",
"776 335 CURVE",
"733 335 LINE",
"731 323 LINE",
"770 323 LINE",
"731 262 OFFCURVE",
"685 181 OFFCURVE",
"626 117 CURVE SMOOTH",
"567 53 OFFCURVE",
"496 4 OFFCURVE",
"409 4 CURVE SMOOTH",
"305 4 OFFCURVE",
"270 55 OFFCURVE",
"270 99 CURVE",
"273 98 OFFCURVE",
"276 98 OFFCURVE",
"280 98 CURVE SMOOTH",
"299 98 OFFCURVE",
"308 114 OFFCURVE",
"308 133 CURVE SMOOTH",
"308 153 OFFCURVE",
"296 168 OFFCURVE",
"275 168 CURVE SMOOTH",
"246 168 OFFCURVE",
"230 141 OFFCURVE",
"230 114 CURVE SMOOTH",
"230 32 OFFCURVE",
"327 -8 OFFCURVE",
"404 -8 CURVE SMOOTH",
"509 -8 OFFCURVE",
"592 35 OFFCURVE",
"660 99 CURVE SMOOTH",
"728 162 OFFCURVE",
"782 244 OFFCURVE",
"830 324 CURVE",
"835 325 OFFCURVE",
"858 327 OFFCURVE",
"882 329 CURVE",
"887 342 LINE",
"867 340 OFFCURVE",
"847 339 OFFCURVE",
"835 337 CURVE",
"859 370 OFFCURVE",
"889 426 OFFCURVE",
"916 469 CURVE",
"846 469 LINE",
"853 481 OFFCURVE",
"860 491 OFFCURVE",
"866 500 CURVE SMOOTH",
"903 555 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH"
);
}
);
width = 979;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2018-11-27 04:22:15 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"679 531 OFFCURVE",
"688 546 OFFCURVE",
"698 561 CURVE SMOOTH",
"715 586 OFFCURVE",
"737 617 OFFCURVE",
"762 642 CURVE SMOOTH",
"790 670 OFFCURVE",
"842 700 OFFCURVE",
"875 700 CURVE SMOOTH",
"915 700 OFFCURVE",
"935 680 OFFCURVE",
"935 645 CURVE SMOOTH",
"935 614 OFFCURVE",
"915 581 OFFCURVE",
"872 554 CURVE SMOOTH",
"833 530 OFFCURVE",
"775 516 OFFCURVE",
"735 515 CURVE SMOOTH",
"718 514 OFFCURVE",
"704 514 OFFCURVE",
"695 514 CURVE SMOOTH",
"686 514 OFFCURVE",
"677 515 OFFCURVE",
"670 516 CURVE"
);
},
{
closed = 1;
nodes = (
"608 513 LINE SMOOTH",
"589 485 OFFCURVE",
"570 453 OFFCURVE",
"550 418 CURVE SMOOTH",
"529 382 OFFCURVE",
"450 243 OFFCURVE",
"312 1 CURVE SMOOTH",
"251 -100 OFFCURVE",
"205 -159 OFFCURVE",
"173 -188 CURVE",
"113 -248 OFFCURVE",
"45 -280 OFFCURVE",
"-19 -280 CURVE SMOOTH",
"-92 -280 OFFCURVE",
"-144 -237 OFFCURVE",
"-144 -164 CURVE SMOOTH",
"-144 -135 OFFCURVE",
"-139 -112 OFFCURVE",
"-128 -95 CURVE SMOOTH",
"-113 -72 OFFCURVE",
"-90 -60 OFFCURVE",
"-71 -60 CURVE SMOOTH",
"-49 -60 OFFCURVE",
"-24 -66 OFFCURVE",
"3 -79 CURVE",
"7 -71 LINE",
"-21 -54 OFFCURVE",
"-49 -44 OFFCURVE",
"-84 -44 CURVE SMOOTH",
"-116 -44 OFFCURVE",
"-152 -59 OFFCURVE",
"-173 -86 CURVE SMOOTH",
"-190 -107 OFFCURVE",
"-198 -129 OFFCURVE",
"-198 -164 CURVE SMOOTH",
"-198 -241 OFFCURVE",
"-126 -292 OFFCURVE",
"-29 -292 CURVE SMOOTH",
"47 -292 OFFCURVE",
"133 -262 OFFCURVE",
"213 -197 CURVE SMOOTH",
"261 -158 OFFCURVE",
"318 -110 OFFCURVE",
"378 -6 CURVE SMOOTH",
"575 339 LINE",
"662 505 LINE",
"681 504 OFFCURVE",
"726 503 OFFCURVE",
"744 503 CURVE SMOOTH",
"787 504 OFFCURVE",
"837 512 OFFCURVE",
"896 537 CURVE SMOOTH",
"951 560 OFFCURVE",
"989 594 OFFCURVE",
"989 639 CURVE SMOOTH",
"989 694 OFFCURVE",
"944 712 OFFCURVE",
"895 712 CURVE SMOOTH",
"851 712 OFFCURVE",
"805 701 OFFCURVE",
"742 660 CURVE SMOOTH",
"682 621 OFFCURVE",
"644 566 OFFCURVE",
"616 526 CURVE"
);
},
{
closed = 1;
nodes = (
"260 295 LINE",
"864 295 LINE",
"864 334 LINE",
"260 334 LINE"
);
},
{
closed = 1;
nodes = (
"548 684 LINE",
"707 599 LINE",
"718 618 LINE",
"559 703 LINE"
);
},
{
closed = 1;
nodes = (
"959 599 LINE",
"1118 684 LINE",
"1107 703 LINE",
"948 618 LINE"
);
}
);
width = 818;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2018-11-27 04:22:15 +0000";
layers = (
{
components = (
{
name = _part.ho.qua;
transform = "{1, 0, 0, 1, 98, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"485 54 LINE",
"442 23 OFFCURVE",
"394 4 OFFCURVE",
"339 4 CURVE SMOOTH",
"235 4 OFFCURVE",
"200 55 OFFCURVE",
"200 99 CURVE",
"203 98 OFFCURVE",
"206 98 OFFCURVE",
"210 98 CURVE SMOOTH",
"229 98 OFFCURVE",
"238 114 OFFCURVE",
"238 133 CURVE SMOOTH",
"238 153 OFFCURVE",
"226 168 OFFCURVE",
"205 168 CURVE SMOOTH",
"176 168 OFFCURVE",
"160 141 OFFCURVE",
"160 114 CURVE SMOOTH",
"160 32 OFFCURVE",
"257 -8 OFFCURVE",
"334 -8 CURVE SMOOTH",
"399 -8 OFFCURVE",
"456 9 OFFCURVE",
"506 37 CURVE"
);
},
{
closed = 1;
nodes = (
"601 317 LINE",
"974 317 LINE",
"974 343 LINE",
"601 343 LINE"
);
},
{
closed = 1;
nodes = (
"506 37 LINE",
"537 54 OFFCURVE",
"564 75 OFFCURVE",
"590 99 CURVE SMOOTH",
"658 162 OFFCURVE",
"712 244 OFFCURVE",
"760 324 CURVE",
"765 325 OFFCURVE",
"788 327 OFFCURVE",
"812 329 CURVE",
"817 342 LINE",
"797 340 OFFCURVE",
"777 339 OFFCURVE",
"765 337 CURVE",
"795 378 OFFCURVE",
"835 456 OFFCURVE",
"866 500 CURVE SMOOTH",
"904 554 OFFCURVE",
"953 602 OFFCURVE",
"1030 630 CURVE",
"1134 630 OFFCURVE",
"1220 618 OFFCURVE",
"1220 664 CURVE SMOOTH",
"1220 684 OFFCURVE",
"1199 684 OFFCURVE",
"1172 684 CURVE SMOOTH",
"1162 684 OFFCURVE",
"1151 683 OFFCURVE",
"1139 682 CURVE SMOOTH",
"1126 681 OFFCURVE",
"1112 680 OFFCURVE",
"1097 680 CURVE SMOOTH",
"1076 680 OFFCURVE",
"1043 681 OFFCURVE",
"1000 682 CURVE SMOOTH",
"956 683 OFFCURVE",
"905 684 OFFCURVE",
"846 684 CURVE SMOOTH",
"670 684 OFFCURVE",
"531 651 OFFCURVE",
"436 599 CURVE SMOOTH",
"341 547 OFFCURVE",
"290 477 OFFCURVE",
"290 404 CURVE SMOOTH",
"290 332 OFFCURVE",
"346 290 OFFCURVE",
"435 290 CURVE SMOOTH",
"562 290 OFFCURVE",
"690 383 OFFCURVE",
"690 485 CURVE SMOOTH",
"690 505 OFFCURVE",
"686 524 OFFCURVE",
"679 543 CURVE",
"669 541 LINE",
"673 526 OFFCURVE",
"678 509 OFFCURVE",
"678 486 CURVE SMOOTH",
"678 379 OFFCURVE",
"547 302 OFFCURVE",
"436 302 CURVE SMOOTH",
"352 302 OFFCURVE",
"299 343 OFFCURVE",
"302 407 CURVE SMOOTH",
"305 474 OFFCURVE",
"349 530 OFFCURVE",
"426 571 CURVE SMOOTH",
"502 612 OFFCURVE",
"612 636 OFFCURVE",
"744 636 CURVE SMOOTH",
"841 636 OFFCURVE",
"958 632 OFFCURVE",
"1013 632 CURVE",
"1013 630 LINE",
"868 593 OFFCURVE",
"784 456 OFFCURVE",
"706 335 CURVE",
"663 335 LINE",
"661 323 LINE",
"700 323 LINE",
"661 262 OFFCURVE",
"615 181 OFFCURVE",
"556 117 CURVE SMOOTH",
"534 93 OFFCURVE",
"511 72 OFFCURVE",
"485 54 CURVE"
);
}
);
width = 981;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2018-11-27 04:22:15 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"899 684 LINE",
"926 700 OFFCURVE",
"962 712 OFFCURVE",
"993 723 CURVE",
"991 727 LINE",
"954 718 OFFCURVE",
"918 706 OFFCURVE",
"885 691 CURVE",
"854 704 OFFCURVE",
"821 712 OFFCURVE",
"770 712 CURVE SMOOTH",
"671 712 OFFCURVE",
"574 688 OFFCURVE",
"490 649 CURVE SMOOTH",
"448 629 OFFCURVE",
"409 606 OFFCURVE",
"374 580 CURVE SMOOTH",
"303 527 OFFCURVE",
"252 466 OFFCURVE",
"224 403 CURVE SMOOTH",
"209 371 OFFCURVE",
"202 340 OFFCURVE",
"202 309 CURVE SMOOTH",
"202 240 OFFCURVE",
"250 184 OFFCURVE",
"319 184 CURVE SMOOTH",
"429 184 OFFCURVE",
"516 302 OFFCURVE",
"516 406 CURVE SMOOTH",
"516 444 LINE",
"504 444 LINE",
"504 406 LINE SMOOTH",
"504 309 OFFCURVE",
"422 196 OFFCURVE",
"323 196 CURVE SMOOTH",
"264 196 OFFCURVE",
"234 232 OFFCURVE",
"234 296 CURVE SMOOTH",
"234 376 OFFCURVE",
"268 448 OFFCURVE",
"323 508 CURVE SMOOTH",
"350 537 OFFCURVE",
"382 564 OFFCURVE",
"418 588 CURVE SMOOTH",
"489 636 OFFCURVE",
"569 669 OFFCURVE",
"650 687 CURVE SMOOTH",
"690 696 OFFCURVE",
"728 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"796 700 OFFCURVE",
"841 696 OFFCURVE",
"869 683 CURVE",
"788 647 OFFCURVE",
"715 566 OFFCURVE",
"648 471 CURVE SMOOTH",
"614 423 OFFCURVE",
"581 374 OFFCURVE",
"550 323 CURVE SMOOTH",
"486 221 OFFCURVE",
"426 130 OFFCURVE",
"367 69 CURVE SMOOTH",
"338 38 OFFCURVE",
"308 20 OFFCURVE",
"279 13 CURVE",
"199 29 OFFCURVE",
"126 42 OFFCURVE",
"66 42 CURVE SMOOTH",
"46 42 OFFCURVE",
"32 39 OFFCURVE",
"24 34 CURVE SMOOTH",
"16 29 OFFCURVE",
"12 22 OFFCURVE",
"12 13 CURVE SMOOTH",
"12 4 OFFCURVE",
"19 -3 OFFCURVE",
"33 -8 CURVE SMOOTH",
"47 -13 OFFCURVE",
"71 -16 OFFCURVE",
"104 -16 CURVE SMOOTH",
"156 -16 OFFCURVE",
"197 -13 OFFCURVE",
"227 -6 CURVE SMOOTH",
"257 1 OFFCURVE",
"275 4 OFFCURVE",
"281 4 CURVE",
"332 -7 OFFCURVE",
"401 -16 OFFCURVE",
"454 -16 CURVE SMOOTH",
"566 -16 OFFCURVE",
"651 6 OFFCURVE",
"724 51 CURVE SMOOTH",
"797 95 OFFCURVE",
"857 162 OFFCURVE",
"917 253 CURVE",
"909 257 LINE",
"804 94 OFFCURVE",
"662 -4 OFFCURVE",
"463 -4 CURVE SMOOTH",
"403 -4 OFFCURVE",
"356 -1 OFFCURVE",
"297 8 CURVE",
"297 10 LINE",
"397 45 OFFCURVE",
"472 117 OFFCURVE",
"536 202 CURVE SMOOTH",
"567 244 OFFCURVE",
"597 289 OFFCURVE",
"624 336 CURVE SMOOTH",
"679 430 OFFCURVE",
"732 519 OFFCURVE",
"789 591 CURVE SMOOTH",
"818 627 OFFCURVE",
"849 655 OFFCURVE",
"884 675 CURVE"
);
}
);
width = 865;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2018-11-27 04:22:15 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"899 684 LINE",
"926 700 OFFCURVE",
"962 712 OFFCURVE",
"993 723 CURVE",
"991 727 LINE",
"954 718 OFFCURVE",
"918 706 OFFCURVE",
"885 691 CURVE",
"854 704 OFFCURVE",
"821 712 OFFCURVE",
"770 712 CURVE SMOOTH",
"671 712 OFFCURVE",
"574 688 OFFCURVE",
"490 649 CURVE SMOOTH",
"448 629 OFFCURVE",
"409 606 OFFCURVE",
"374 580 CURVE SMOOTH",
"303 527 OFFCURVE",
"252 466 OFFCURVE",
"224 403 CURVE SMOOTH",
"209 371 OFFCURVE",
"202 340 OFFCURVE",
"202 309 CURVE SMOOTH",
"202 240 OFFCURVE",
"250 184 OFFCURVE",
"319 184 CURVE SMOOTH",
"429 184 OFFCURVE",
"516 302 OFFCURVE",
"516 406 CURVE SMOOTH",
"516 444 LINE",
"504 444 LINE",
"504 406 LINE SMOOTH",
"504 309 OFFCURVE",
"422 196 OFFCURVE",
"323 196 CURVE SMOOTH",
"264 196 OFFCURVE",
"234 232 OFFCURVE",
"234 296 CURVE SMOOTH",
"234 376 OFFCURVE",
"268 448 OFFCURVE",
"323 508 CURVE SMOOTH",
"350 537 OFFCURVE",
"382 564 OFFCURVE",
"418 588 CURVE SMOOTH",
"489 636 OFFCURVE",
"569 669 OFFCURVE",
"650 687 CURVE SMOOTH",
"690 696 OFFCURVE",
"728 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"796 700 OFFCURVE",
"841 696 OFFCURVE",
"869 683 CURVE",
"788 647 OFFCURVE",
"715 566 OFFCURVE",
"648 471 CURVE SMOOTH",
"614 423 OFFCURVE",
"581 374 OFFCURVE",
"550 323 CURVE SMOOTH",
"486 221 OFFCURVE",
"426 130 OFFCURVE",
"367 69 CURVE SMOOTH",
"338 38 OFFCURVE",
"308 20 OFFCURVE",
"279 13 CURVE",
"199 29 OFFCURVE",
"126 42 OFFCURVE",
"66 42 CURVE SMOOTH",
"46 42 OFFCURVE",
"32 39 OFFCURVE",
"24 34 CURVE SMOOTH",
"16 29 OFFCURVE",
"12 22 OFFCURVE",
"12 13 CURVE SMOOTH",
"12 4 OFFCURVE",
"19 -3 OFFCURVE",
"33 -8 CURVE SMOOTH",
"47 -13 OFFCURVE",
"71 -16 OFFCURVE",
"104 -16 CURVE SMOOTH",
"156 -16 OFFCURVE",
"197 -13 OFFCURVE",
"227 -6 CURVE SMOOTH",
"257 1 OFFCURVE",
"275 4 OFFCURVE",
"281 4 CURVE",
"332 -7 OFFCURVE",
"401 -16 OFFCURVE",
"454 -16 CURVE SMOOTH",
"566 -16 OFFCURVE",
"651 6 OFFCURVE",
"724 51 CURVE SMOOTH",
"797 95 OFFCURVE",
"857 162 OFFCURVE",
"917 253 CURVE",
"909 257 LINE",
"804 94 OFFCURVE",
"662 -4 OFFCURVE",
"463 -4 CURVE SMOOTH",
"403 -4 OFFCURVE",
"356 -1 OFFCURVE",
"297 8 CURVE",
"297 10 LINE",
"397 45 OFFCURVE",
"472 117 OFFCURVE",
"536 202 CURVE SMOOTH",
"567 244 OFFCURVE",
"597 289 OFFCURVE",
"624 336 CURVE SMOOTH",
"679 430 OFFCURVE",
"732 519 OFFCURVE",
"789 591 CURVE SMOOTH",
"818 627 OFFCURVE",
"849 655 OFFCURVE",
"884 675 CURVE"
);
},
{
closed = 1;
nodes = (
"612 340 LINE",
"792 340 LINE",
"792 373 LINE",
"612 373 LINE"
);
}
);
width = 865;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2018-11-27 04:22:15 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"281 4 LINE",
"332 -7 OFFCURVE",
"401 -16 OFFCURVE",
"454 -16 CURVE SMOOTH",
"566 -16 OFFCURVE",
"651 6 OFFCURVE",
"724 51 CURVE SMOOTH",
"797 95 OFFCURVE",
"857 162 OFFCURVE",
"917 253 CURVE",
"909 257 LINE",
"804 94 OFFCURVE",
"662 -4 OFFCURVE",
"463 -4 CURVE SMOOTH",
"403 -4 OFFCURVE",
"356 -1 OFFCURVE",
"297 8 CURVE",
"297 10 LINE",
"397 45 OFFCURVE",
"472 117 OFFCURVE",
"536 202 CURVE SMOOTH",
"567 244 OFFCURVE",
"597 289 OFFCURVE",
"624 336 CURVE SMOOTH",
"679 430 OFFCURVE",
"732 519 OFFCURVE",
"789 591 CURVE SMOOTH",
"818 627 OFFCURVE",
"849 655 OFFCURVE",
"884 675 CURVE",
"899 684 LINE",
"926 700 OFFCURVE",
"962 712 OFFCURVE",
"993 723 CURVE",
"991 727 LINE",
"954 718 OFFCURVE",
"918 706 OFFCURVE",
"885 691 CURVE",
"854 704 OFFCURVE",
"821 712 OFFCURVE",
"770 712 CURVE SMOOTH",
"671 712 OFFCURVE",
"574 688 OFFCURVE",
"490 649 CURVE SMOOTH",
"448 629 OFFCURVE",
"409 606 OFFCURVE",
"374 580 CURVE SMOOTH",
"303 527 OFFCURVE",
"252 466 OFFCURVE",
"224 403 CURVE SMOOTH",
"209 371 OFFCURVE",
"202 340 OFFCURVE",
"202 309 CURVE SMOOTH",
"202 240 OFFCURVE",
"250 184 OFFCURVE",
"319 184 CURVE SMOOTH",
"429 184 OFFCURVE",
"516 302 OFFCURVE",
"516 406 CURVE SMOOTH",
"516 444 LINE",
"504 444 LINE",
"504 406 LINE SMOOTH",
"504 309 OFFCURVE",
"422 196 OFFCURVE",
"323 196 CURVE SMOOTH",
"264 196 OFFCURVE",
"234 232 OFFCURVE",
"234 296 CURVE SMOOTH",
"234 376 OFFCURVE",
"268 448 OFFCURVE",
"323 508 CURVE SMOOTH",
"350 537 OFFCURVE",
"382 564 OFFCURVE",
"418 588 CURVE SMOOTH",
"489 636 OFFCURVE",
"569 669 OFFCURVE",
"650 687 CURVE SMOOTH",
"690 696 OFFCURVE",
"728 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"796 700 OFFCURVE",
"841 696 OFFCURVE",
"869 683 CURVE",
"788 647 OFFCURVE",
"715 566 OFFCURVE",
"648 471 CURVE SMOOTH",
"614 423 OFFCURVE",
"581 374 OFFCURVE",
"550 323 CURVE SMOOTH",
"486 221 OFFCURVE",
"426 130 OFFCURVE",
"367 69 CURVE SMOOTH",
"338 38 OFFCURVE",
"308 20 OFFCURVE",
"279 13 CURVE"
);
},
{
closed = 1;
nodes = (
"279 13 LINE",
"240 -94 LINE",
"240 -108 LINE",
"412 -108 LINE",
"412 -90 LINE",
"273 -90 LINE SMOOTH",
"249 -90 OFFCURVE",
"264 -71 OFFCURVE",
"301 19 CURVE"
);
}
);
width = 865;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2018-11-27 04:22:16 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"954 718 OFFCURVE",
"918 706 OFFCURVE",
"885 691 CURVE",
"854 704 OFFCURVE",
"821 712 OFFCURVE",
"770 712 CURVE SMOOTH",
"671 712 OFFCURVE",
"574 688 OFFCURVE",
"490 649 CURVE SMOOTH",
"448 629 OFFCURVE",
"409 606 OFFCURVE",
"374 580 CURVE SMOOTH",
"303 527 OFFCURVE",
"252 466 OFFCURVE",
"224 403 CURVE SMOOTH",
"209 371 OFFCURVE",
"202 340 OFFCURVE",
"202 309 CURVE SMOOTH",
"202 240 OFFCURVE",
"250 184 OFFCURVE",
"319 184 CURVE SMOOTH",
"429 184 OFFCURVE",
"516 302 OFFCURVE",
"516 406 CURVE SMOOTH",
"516 444 LINE",
"504 444 LINE",
"504 406 LINE SMOOTH",
"504 309 OFFCURVE",
"422 196 OFFCURVE",
"323 196 CURVE SMOOTH",
"264 196 OFFCURVE",
"234 232 OFFCURVE",
"234 296 CURVE SMOOTH",
"234 376 OFFCURVE",
"268 448 OFFCURVE",
"323 508 CURVE SMOOTH",
"350 537 OFFCURVE",
"382 564 OFFCURVE",
"418 588 CURVE SMOOTH",
"489 636 OFFCURVE",
"569 669 OFFCURVE",
"650 687 CURVE SMOOTH",
"690 696 OFFCURVE",
"728 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"796 700 OFFCURVE",
"841 696 OFFCURVE",
"869 683 CURVE",
"788 647 OFFCURVE",
"715 566 OFFCURVE",
"648 471 CURVE SMOOTH",
"614 423 OFFCURVE",
"581 374 OFFCURVE",
"550 323 CURVE SMOOTH",
"516 268 OFFCURVE",
"482 218 OFFCURVE",
"451 172 CURVE SMOOTH",
"423 134 OFFCURVE",
"396 100 OFFCURVE",
"369 72 CURVE SMOOTH",
"340 41 OFFCURVE",
"317 5 OFFCURVE",
"262 -24 CURVE SMOOTH",
"157 -79 OFFCURVE",
"-7 -29 OFFCURVE",
"-1 -81 CURVE SMOOTH",
"0 -90 OFFCURVE",
"9 -96 OFFCURVE",
"24 -98 CURVE SMOOTH",
"39 -100 OFFCURVE",
"63 -99 OFFCURVE",
"95 -92 CURVE SMOOTH",
"172 -75 OFFCURVE",
"190 -71 OFFCURVE",
"280 -33 CURVE SMOOTH",
"363 2 OFFCURVE",
"445 88 OFFCURVE",
"507 165 CURVE SMOOTH",
"506 165 LINE",
"536 198 OFFCURVE",
"595 285 OFFCURVE",
"624 336 CURVE SMOOTH",
"679 430 OFFCURVE",
"732 519 OFFCURVE",
"789 591 CURVE SMOOTH",
"818 627 OFFCURVE",
"849 655 OFFCURVE",
"884 675 CURVE SMOOTH",
"899 684 LINE SMOOTH",
"926 700 OFFCURVE",
"962 712 OFFCURVE",
"993 723 CURVE",
"991 727 LINE"
);
}
);
width = 537;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2018-11-27 04:22:16 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"383 -4 LINE",
"399 -7 OFFCURVE",
"415 -9 OFFCURVE",
"430 -11 CURVE SMOOTH",
"480 -18 OFFCURVE",
"532 -9 OFFCURVE",
"574 9 CURVE SMOOTH",
"611 25 OFFCURVE",
"646 54 OFFCURVE",
"648 87 CURVE SMOOTH",
"650 114 OFFCURVE",
"634 134 OFFCURVE",
"595 137 CURVE SMOOTH",
"572 139 OFFCURVE",
"556 130 OFFCURVE",
"537 120 CURVE SMOOTH",
"535 119 OFFCURVE",
"533 116 OFFCURVE",
"530 114 CURVE",
"538 110 LINE",
"540 112 OFFCURVE",
"541 114 OFFCURVE",
"545 115 CURVE SMOOTH",
"562 119 OFFCURVE",
"578 131 OFFCURVE",
"594 130 CURVE SMOOTH",
"619 128 OFFCURVE",
"632 115 OFFCURVE",
"630 90 CURVE SMOOTH",
"627 55 OFFCURVE",
"594 27 OFFCURVE",
"556 11 CURVE SMOOTH",
"522 -3 OFFCURVE",
"467 -9 OFFCURVE",
"433 -4 CURVE SMOOTH",
"420 -2 OFFCURVE",
"407 -1 OFFCURVE",
"395 3 CURVE"
);
},
{
closed = 1;
nodes = (
"568 764 LINE",
"752 764 LINE",
"752 786 LINE",
"568 786 LINE"
);
},
{
closed = 1;
nodes = (
"681 689 LINE",
"732 694 LINE",
"825 843 LINE",
"779 869 LINE"
);
},
{
closed = 1;
nodes = (
"959 684 LINE",
"986 700 OFFCURVE",
"1022 712 OFFCURVE",
"1053 723 CURVE",
"1051 727 LINE",
"1014 718 OFFCURVE",
"978 706 OFFCURVE",
"945 691 CURVE",
"914 704 OFFCURVE",
"881 712 OFFCURVE",
"830 712 CURVE SMOOTH",
"731 712 OFFCURVE",
"634 688 OFFCURVE",
"550 649 CURVE SMOOTH",
"508 629 OFFCURVE",
"469 606 OFFCURVE",
"434 580 CURVE SMOOTH",
"363 527 OFFCURVE",
"312 466 OFFCURVE",
"284 403 CURVE SMOOTH",
"269 371 OFFCURVE",
"262 340 OFFCURVE",
"262 309 CURVE SMOOTH",
"262 240 OFFCURVE",
"310 184 OFFCURVE",
"379 184 CURVE SMOOTH",
"489 184 OFFCURVE",
"576 302 OFFCURVE",
"576 406 CURVE SMOOTH",
"576 444 LINE",
"564 444 LINE",
"564 406 LINE SMOOTH",
"564 309 OFFCURVE",
"482 196 OFFCURVE",
"383 196 CURVE SMOOTH",
"324 196 OFFCURVE",
"294 232 OFFCURVE",
"294 296 CURVE SMOOTH",
"294 376 OFFCURVE",
"328 448 OFFCURVE",
"383 508 CURVE SMOOTH",
"410 537 OFFCURVE",
"442 564 OFFCURVE",
"478 588 CURVE SMOOTH",
"549 636 OFFCURVE",
"629 669 OFFCURVE",
"710 687 CURVE SMOOTH",
"750 696 OFFCURVE",
"788 700 OFFCURVE",
"824 700 CURVE SMOOTH",
"856 700 OFFCURVE",
"901 696 OFFCURVE",
"929 683 CURVE",
"848 647 OFFCURVE",
"775 566 OFFCURVE",
"708 471 CURVE SMOOTH",
"674 423 OFFCURVE",
"641 374 OFFCURVE",
"610 323 CURVE SMOOTH",
"546 221 OFFCURVE",
"486 130 OFFCURVE",
"427 69 CURVE SMOOTH",
"398 38 OFFCURVE",
"368 20 OFFCURVE",
"339 13 CURVE",
"259 29 OFFCURVE",
"186 42 OFFCURVE",
"126 42 CURVE SMOOTH",
"106 42 OFFCURVE",
"92 39 OFFCURVE",
"84 34 CURVE SMOOTH",
"76 29 OFFCURVE",
"72 22 OFFCURVE",
"72 13 CURVE SMOOTH",
"72 4 OFFCURVE",
"79 -3 OFFCURVE",
"93 -8 CURVE SMOOTH",
"107 -13 OFFCURVE",
"131 -16 OFFCURVE",
"164 -16 CURVE SMOOTH",
"216 -16 OFFCURVE",
"257 -13 OFFCURVE",
"287 -6 CURVE SMOOTH",
"317 1 OFFCURVE",
"335 4 OFFCURVE",
"341 4 CURVE",
"392 -7 OFFCURVE",
"461 -16 OFFCURVE",
"514 -16 CURVE SMOOTH",
"626 -16 OFFCURVE",
"711 6 OFFCURVE",
"784 51 CURVE SMOOTH",
"857 95 OFFCURVE",
"917 162 OFFCURVE",
"977 253 CURVE",
"969 257 LINE",
"864 94 OFFCURVE",
"722 -4 OFFCURVE",
"523 -4 CURVE SMOOTH",
"463 -4 OFFCURVE",
"416 -1 OFFCURVE",
"357 8 CURVE",
"357 10 LINE",
"457 45 OFFCURVE",
"532 117 OFFCURVE",
"596 202 CURVE SMOOTH",
"627 244 OFFCURVE",
"657 289 OFFCURVE",
"684 336 CURVE SMOOTH",
"739 430 OFFCURVE",
"792 519 OFFCURVE",
"849 591 CURVE SMOOTH",
"878 627 OFFCURVE",
"909 655 OFFCURVE",
"944 675 CURVE"
);
}
);
width = 925;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2018-11-27 04:22:16 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"508 700 LINE",
"541 700 LINE",
"541 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"508 764 LINE",
"692 764 LINE",
"692 786 LINE",
"508 786 LINE"
);
},
{
closed = 1;
nodes = (
"621 689 LINE",
"672 694 LINE",
"765 843 LINE",
"719 869 LINE"
);
},
{
closed = 1;
nodes = (
"899 684 LINE",
"926 700 OFFCURVE",
"962 712 OFFCURVE",
"993 723 CURVE",
"991 727 LINE",
"954 718 OFFCURVE",
"918 706 OFFCURVE",
"885 691 CURVE",
"854 704 OFFCURVE",
"821 712 OFFCURVE",
"770 712 CURVE SMOOTH",
"671 712 OFFCURVE",
"574 688 OFFCURVE",
"490 649 CURVE SMOOTH",
"448 629 OFFCURVE",
"409 606 OFFCURVE",
"374 580 CURVE SMOOTH",
"303 527 OFFCURVE",
"252 466 OFFCURVE",
"224 403 CURVE SMOOTH",
"209 371 OFFCURVE",
"202 340 OFFCURVE",
"202 309 CURVE SMOOTH",
"202 240 OFFCURVE",
"250 184 OFFCURVE",
"319 184 CURVE SMOOTH",
"429 184 OFFCURVE",
"516 302 OFFCURVE",
"516 406 CURVE SMOOTH",
"516 444 LINE",
"504 444 LINE",
"504 406 LINE SMOOTH",
"504 309 OFFCURVE",
"422 196 OFFCURVE",
"323 196 CURVE SMOOTH",
"264 196 OFFCURVE",
"234 232 OFFCURVE",
"234 296 CURVE SMOOTH",
"234 376 OFFCURVE",
"268 448 OFFCURVE",
"323 508 CURVE SMOOTH",
"350 537 OFFCURVE",
"382 564 OFFCURVE",
"418 588 CURVE SMOOTH",
"489 636 OFFCURVE",
"569 669 OFFCURVE",
"650 687 CURVE SMOOTH",
"690 696 OFFCURVE",
"728 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"796 700 OFFCURVE",
"841 696 OFFCURVE",
"869 683 CURVE",
"788 647 OFFCURVE",
"715 566 OFFCURVE",
"648 471 CURVE SMOOTH",
"614 423 OFFCURVE",
"581 374 OFFCURVE",
"550 323 CURVE SMOOTH",
"486 221 OFFCURVE",
"426 130 OFFCURVE",
"367 69 CURVE SMOOTH",
"338 38 OFFCURVE",
"308 20 OFFCURVE",
"279 13 CURVE",
"199 29 OFFCURVE",
"126 42 OFFCURVE",
"66 42 CURVE SMOOTH",
"46 42 OFFCURVE",
"32 39 OFFCURVE",
"24 34 CURVE SMOOTH",
"16 29 OFFCURVE",
"12 22 OFFCURVE",
"12 13 CURVE SMOOTH",
"12 4 OFFCURVE",
"19 -3 OFFCURVE",
"33 -8 CURVE SMOOTH",
"47 -13 OFFCURVE",
"71 -16 OFFCURVE",
"104 -16 CURVE SMOOTH",
"156 -16 OFFCURVE",
"197 -13 OFFCURVE",
"227 -6 CURVE SMOOTH",
"257 1 OFFCURVE",
"275 4 OFFCURVE",
"281 4 CURVE",
"332 -7 OFFCURVE",
"401 -16 OFFCURVE",
"454 -16 CURVE SMOOTH",
"566 -16 OFFCURVE",
"651 6 OFFCURVE",
"724 51 CURVE SMOOTH",
"797 95 OFFCURVE",
"857 162 OFFCURVE",
"917 253 CURVE",
"909 257 LINE",
"804 94 OFFCURVE",
"662 -4 OFFCURVE",
"463 -4 CURVE SMOOTH",
"403 -4 OFFCURVE",
"356 -1 OFFCURVE",
"297 8 CURVE",
"297 10 LINE",
"397 45 OFFCURVE",
"472 117 OFFCURVE",
"536 202 CURVE SMOOTH",
"567 244 OFFCURVE",
"597 289 OFFCURVE",
"624 336 CURVE SMOOTH",
"679 430 OFFCURVE",
"732 519 OFFCURVE",
"789 591 CURVE SMOOTH",
"818 627 OFFCURVE",
"849 655 OFFCURVE",
"884 675 CURVE"
);
}
);
width = 865;
}
);
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2018-11-27 04:22:16 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"217 -200 LINE",
"254 -200 LINE",
"358 -11 LINE",
"326 6 LINE"
);
},
{
closed = 1;
nodes = (
"725 712 OFFCURVE",
"684 703 OFFCURVE",
"643 687 CURVE",
"666 712 OFFCURVE",
"701 739 OFFCURVE",
"743 762 CURVE SMOOTH",
"785 784 OFFCURVE",
"807 787 OFFCURVE",
"814 776 CURVE",
"819 769 OFFCURVE",
"808 753 OFFCURVE",
"796 738 CURVE",
"794 735 OFFCURVE",
"790 732 OFFCURVE",
"788 730 CURVE",
"795 729 LINE",
"798 731 OFFCURVE",
"802 735 OFFCURVE",
"805 738 CURVE SMOOTH",
"826 758 OFFCURVE",
"834 773 OFFCURVE",
"827 783 CURVE",
"816 800 OFFCURVE",
"781 794 OFFCURVE",
"734 768 CURVE SMOOTH",
"689 744 OFFCURVE",
"648 710 OFFCURVE",
"623 679 CURVE",
"591 665 OFFCURVE",
"558 648 OFFCURVE",
"525 627 CURVE SMOOTH",
"484 600 OFFCURVE",
"444 569 OFFCURVE",
"405 534 CURVE SMOOTH",
"328 462 OFFCURVE",
"267 380 OFFCURVE",
"231 293 CURVE SMOOTH",
"213 249 OFFCURVE",
"204 206 OFFCURVE",
"204 164 CURVE SMOOTH",
"204 78 OFFCURVE",
"264 -16 OFFCURVE",
"390 -16 CURVE SMOOTH",
"482 -16 OFFCURVE",
"554 22 OFFCURVE",
"602 72 CURVE SMOOTH",
"650 122 OFFCURVE",
"675 183 OFFCURVE",
"675 230 CURVE SMOOTH",
"675 310 OFFCURVE",
"635 340 OFFCURVE",
"551 340 CURVE",
"552 328 LINE",
"605 328 OFFCURVE",
"639 299 OFFCURVE",
"639 246 CURVE SMOOTH",
"639 125 OFFCURVE",
"521 -4 OFFCURVE",
"394 -4 CURVE SMOOTH",
"307 -4 OFFCURVE",
"268 71 OFFCURVE",
"268 152 CURVE SMOOTH",
"268 244 OFFCURVE",
"303 335 OFFCURVE",
"357 416 CURVE SMOOTH",
"384 457 OFFCURVE",
"414 494 OFFCURVE",
"449 529 CURVE SMOOTH",
"497 578 OFFCURVE",
"547 618 OFFCURVE",
"599 648 CURVE SMOOTH",
"581 596 OFFCURVE",
"583 569 OFFCURVE",
"586 549 CURVE SMOOTH",
"595 486 OFFCURVE",
"620 447 OFFCURVE",
"690 447 CURVE SMOOTH",
"789 447 OFFCURVE",
"885 517 OFFCURVE",
"885 610 CURVE SMOOTH",
"885 677 OFFCURVE",
"844 712 OFFCURVE",
"760 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"629 459 OFFCURVE",
"612 494 OFFCURVE",
"605 544 CURVE SMOOTH",
"600 580 OFFCURVE",
"605 636 OFFCURVE",
"617 655 CURVE",
"618 656 OFFCURVE",
"618 657 OFFCURVE",
"619 657 CURVE",
"634 666 OFFCURVE",
"650 673 OFFCURVE",
"665 679 CURVE SMOOTH",
"701 693 OFFCURVE",
"734 700 OFFCURVE",
"764 700 CURVE SMOOTH",
"816 700 OFFCURVE",
"849 685 OFFCURVE",
"849 629 CURVE SMOOTH",
"849 541 OFFCURVE",
"766 459 OFFCURVE",
"691 459 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"185 360 LINE",
"311 360 LINE",
"311 401 LINE",
"185 401 LINE"
);
}
);
width = 693;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2018-11-27 04:22:16 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"167 346 LINE",
"313 346 LINE",
"313 379 LINE",
"167 379 LINE"
);
},
{
closed = 1;
nodes = (
"266 -90 LINE",
"303 -90 LINE",
"357 -11 LINE",
"325 6 LINE"
);
},
{
closed = 1;
nodes = (
"724 712 OFFCURVE",
"683 703 OFFCURVE",
"642 687 CURVE",
"665 712 OFFCURVE",
"700 739 OFFCURVE",
"742 762 CURVE SMOOTH",
"784 784 OFFCURVE",
"806 787 OFFCURVE",
"813 776 CURVE",
"818 769 OFFCURVE",
"807 753 OFFCURVE",
"795 738 CURVE",
"793 735 OFFCURVE",
"789 732 OFFCURVE",
"787 730 CURVE",
"794 729 LINE",
"797 731 OFFCURVE",
"801 735 OFFCURVE",
"804 738 CURVE SMOOTH",
"825 758 OFFCURVE",
"833 773 OFFCURVE",
"826 783 CURVE",
"815 800 OFFCURVE",
"780 794 OFFCURVE",
"733 768 CURVE SMOOTH",
"688 744 OFFCURVE",
"647 710 OFFCURVE",
"622 679 CURVE",
"590 665 OFFCURVE",
"557 648 OFFCURVE",
"524 627 CURVE SMOOTH",
"483 600 OFFCURVE",
"443 569 OFFCURVE",
"404 534 CURVE SMOOTH",
"327 462 OFFCURVE",
"266 380 OFFCURVE",
"230 293 CURVE SMOOTH",
"212 249 OFFCURVE",
"203 206 OFFCURVE",
"203 164 CURVE SMOOTH",
"203 78 OFFCURVE",
"263 -16 OFFCURVE",
"389 -16 CURVE SMOOTH",
"481 -16 OFFCURVE",
"553 22 OFFCURVE",
"601 72 CURVE SMOOTH",
"649 122 OFFCURVE",
"674 183 OFFCURVE",
"674 230 CURVE SMOOTH",
"674 310 OFFCURVE",
"634 340 OFFCURVE",
"550 340 CURVE",
"551 328 LINE",
"604 328 OFFCURVE",
"638 299 OFFCURVE",
"638 246 CURVE SMOOTH",
"638 125 OFFCURVE",
"520 -4 OFFCURVE",
"393 -4 CURVE SMOOTH",
"306 -4 OFFCURVE",
"267 71 OFFCURVE",
"267 152 CURVE SMOOTH",
"267 244 OFFCURVE",
"302 335 OFFCURVE",
"356 416 CURVE SMOOTH",
"383 457 OFFCURVE",
"413 494 OFFCURVE",
"448 529 CURVE SMOOTH",
"496 578 OFFCURVE",
"546 618 OFFCURVE",
"598 648 CURVE SMOOTH",
"580 596 OFFCURVE",
"582 569 OFFCURVE",
"585 549 CURVE SMOOTH",
"594 486 OFFCURVE",
"619 447 OFFCURVE",
"689 447 CURVE SMOOTH",
"788 447 OFFCURVE",
"884 517 OFFCURVE",
"884 610 CURVE SMOOTH",
"884 677 OFFCURVE",
"843 712 OFFCURVE",
"759 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"628 459 OFFCURVE",
"611 494 OFFCURVE",
"604 544 CURVE SMOOTH",
"599 580 OFFCURVE",
"604 636 OFFCURVE",
"616 655 CURVE",
"617 656 OFFCURVE",
"617 657 OFFCURVE",
"618 657 CURVE",
"633 666 OFFCURVE",
"649 673 OFFCURVE",
"664 679 CURVE SMOOTH",
"700 693 OFFCURVE",
"733 700 OFFCURVE",
"763 700 CURVE SMOOTH",
"815 700 OFFCURVE",
"848 685 OFFCURVE",
"848 629 CURVE SMOOTH",
"848 541 OFFCURVE",
"765 459 OFFCURVE",
"690 459 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"112 -142 LINE",
"155 -111 OFFCURVE",
"203 -92 OFFCURVE",
"258 -92 CURVE SMOOTH",
"362 -92 OFFCURVE",
"397 -143 OFFCURVE",
"397 -187 CURVE",
"394 -186 OFFCURVE",
"391 -186 OFFCURVE",
"387 -186 CURVE SMOOTH",
"368 -186 OFFCURVE",
"359 -202 OFFCURVE",
"359 -221 CURVE SMOOTH",
"359 -241 OFFCURVE",
"371 -256 OFFCURVE",
"392 -256 CURVE SMOOTH",
"421 -256 OFFCURVE",
"437 -229 OFFCURVE",
"437 -202 CURVE SMOOTH",
"437 -120 OFFCURVE",
"340 -80 OFFCURVE",
"263 -80 CURVE SMOOTH",
"198 -80 OFFCURVE",
"141 -97 OFFCURVE",
"91 -125 CURVE"
);
}
);
width = 777;
}
);
unicode = 1287;
},
{
glyphname = "na-ethiopic";
lastChange = "2018-11-27 04:22:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"603 689 LINE",
"654 694 LINE",
"747 843 LINE",
"701 869 LINE"
);
},
{
closed = 1;
nodes = (
"881 684 LINE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE"
);
}
);
width = 847;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2018-11-27 04:22:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"603 689 LINE",
"654 694 LINE",
"747 843 LINE",
"701 869 LINE"
);
},
{
closed = 1;
nodes = (
"881 684 LINE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE"
);
},
{
closed = 1;
nodes = (
"594 340 LINE",
"774 340 LINE",
"774 373 LINE",
"594 373 LINE"
);
}
);
width = 847;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2018-11-27 04:22:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"603 689 LINE",
"654 694 LINE",
"747 843 LINE",
"701 869 LINE"
);
},
{
closed = 1;
nodes = (
"263 4 LINE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"881 684 LINE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE"
);
},
{
closed = 1;
nodes = (
"261 13 LINE",
"222 -94 LINE",
"222 -108 LINE",
"394 -108 LINE",
"394 -90 LINE",
"255 -90 LINE SMOOTH",
"231 -90 OFFCURVE",
"246 -71 OFFCURVE",
"283 19 CURVE"
);
}
);
width = 847;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2018-11-27 04:22:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"117 -200 LINE",
"154 -200 LINE",
"258 -11 LINE",
"226 6 LINE"
);
},
{
closed = 1;
nodes = (
"494 556 LINE",
"493 552 OFFCURVE",
"493 547 OFFCURVE",
"493 542 CURVE SMOOTH",
"493 537 OFFCURVE",
"493 533 OFFCURVE",
"493 529 CURVE",
"496 469 OFFCURVE",
"538 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH",
"592 712 OFFCURVE",
"507 679 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"417 598 OFFCURVE",
"493 650 OFFCURVE",
"565 679 CURVE SMOOTH",
"601 693 OFFCURVE",
"634 700 OFFCURVE",
"664 700 CURVE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH",
"545 459 OFFCURVE",
"505 479 OFFCURVE",
"505 532 CURVE SMOOTH",
"505 537 OFFCURVE",
"505 541 OFFCURVE",
"505 544 CURVE SMOOTH",
"505 548 OFFCURVE",
"505 552 OFFCURVE",
"506 556 CURVE"
);
}
);
width = 593;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2018-11-27 04:22:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"314 -6 LINE",
"330 -9 OFFCURVE",
"346 -11 OFFCURVE",
"362 -13 CURVE SMOOTH",
"411 -19 OFFCURVE",
"463 -8 OFFCURVE",
"505 10 CURVE SMOOTH",
"542 26 OFFCURVE",
"576 56 OFFCURVE",
"578 89 CURVE SMOOTH",
"580 116 OFFCURVE",
"562 136 OFFCURVE",
"524 138 CURVE SMOOTH",
"501 139 OFFCURVE",
"485 130 OFFCURVE",
"466 120 CURVE SMOOTH",
"464 119 OFFCURVE",
"462 116 OFFCURVE",
"459 113 CURVE",
"467 110 LINE",
"469 112 OFFCURVE",
"470 115 OFFCURVE",
"474 116 CURVE SMOOTH",
"491 120 OFFCURVE",
"507 132 OFFCURVE",
"523 131 CURVE SMOOTH",
"548 129 OFFCURVE",
"561 117 OFFCURVE",
"560 92 CURVE SMOOTH",
"559 57 OFFCURVE",
"525 28 OFFCURVE",
"487 12 CURVE SMOOTH",
"453 -2 OFFCURVE",
"398 -10 OFFCURVE",
"364 -5 CURVE SMOOTH",
"351 -3 OFFCURVE",
"338 -3 OFFCURVE",
"326 1 CURVE"
);
},
{
closed = 1;
nodes = (
"603 689 LINE",
"654 694 LINE",
"747 843 LINE",
"701 869 LINE"
);
},
{
closed = 1;
nodes = (
"881 684 LINE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE"
);
}
);
width = 847;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2018-11-27 04:22:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"943 683 LINE SMOOTH",
"863 643 OFFCURVE",
"789 566 OFFCURVE",
"722 471 CURVE SMOOTH",
"688 423 OFFCURVE",
"655 374 OFFCURVE",
"624 323 CURVE SMOOTH",
"560 221 OFFCURVE",
"500 130 OFFCURVE",
"441 69 CURVE SMOOTH",
"412 38 OFFCURVE",
"382 20 OFFCURVE",
"353 13 CURVE",
"273 29 OFFCURVE",
"200 42 OFFCURVE",
"140 42 CURVE SMOOTH",
"120 42 OFFCURVE",
"106 39 OFFCURVE",
"98 34 CURVE SMOOTH",
"90 29 OFFCURVE",
"86 22 OFFCURVE",
"86 13 CURVE SMOOTH",
"86 4 OFFCURVE",
"93 -3 OFFCURVE",
"107 -8 CURVE SMOOTH",
"121 -13 OFFCURVE",
"145 -16 OFFCURVE",
"178 -16 CURVE SMOOTH",
"230 -16 OFFCURVE",
"271 -13 OFFCURVE",
"301 -6 CURVE SMOOTH",
"331 1 OFFCURVE",
"349 4 OFFCURVE",
"355 4 CURVE",
"406 -7 OFFCURVE",
"475 -16 OFFCURVE",
"528 -16 CURVE SMOOTH",
"640 -16 OFFCURVE",
"725 6 OFFCURVE",
"798 51 CURVE SMOOTH",
"871 95 OFFCURVE",
"931 162 OFFCURVE",
"991 253 CURVE",
"983 257 LINE",
"878 94 OFFCURVE",
"736 -4 OFFCURVE",
"537 -4 CURVE SMOOTH",
"477 -4 OFFCURVE",
"430 -1 OFFCURVE",
"371 8 CURVE",
"371 10 LINE",
"471 45 OFFCURVE",
"546 117 OFFCURVE",
"610 202 CURVE SMOOTH",
"641 244 OFFCURVE",
"671 289 OFFCURVE",
"698 336 CURVE SMOOTH",
"753 430 OFFCURVE",
"806 519 OFFCURVE",
"863 591 CURVE SMOOTH",
"892 627 OFFCURVE",
"923 655 OFFCURVE",
"958 675 CURVE SMOOTH",
"973 684 LINE SMOOTH",
"1000 700 OFFCURVE",
"1036 712 OFFCURVE",
"1067 723 CURVE",
"1065 727 LINE",
"1028 718 OFFCURVE",
"992 706 OFFCURVE",
"959 691 CURVE"
);
},
{
closed = 1;
nodes = (
"523 803 LINE",
"523 766 LINE",
"745 766 LINE",
"676 643 LINE",
"722 647 LINE",
"754 699 LINE SMOOTH",
"782 745 OFFCURVE",
"788 780 OFFCURVE",
"780 795 CURVE SMOOTH",
"777 801 OFFCURVE",
"753 804 OFFCURVE",
"746 804 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"905 647 LINE",
"879 657 OFFCURVE",
"852 662 OFFCURVE",
"810 662 CURVE SMOOTH",
"721 662 OFFCURVE",
"635 643 OFFCURVE",
"559 606 CURVE SMOOTH",
"522 588 OFFCURVE",
"486 568 OFFCURVE",
"455 545 CURVE SMOOTH",
"391 497 OFFCURVE",
"346 442 OFFCURVE",
"321 386 CURVE SMOOTH",
"308 357 OFFCURVE",
"301 330 OFFCURVE",
"301 302 CURVE SMOOTH",
"301 240 OFFCURVE",
"344 189 OFFCURVE",
"406 189 CURVE SMOOTH",
"504 189 OFFCURVE",
"582 295 OFFCURVE",
"582 388 CURVE SMOOTH",
"582 423 LINE",
"571 423 LINE",
"571 388 LINE SMOOTH",
"571 302 OFFCURVE",
"498 200 OFFCURVE",
"409 200 CURVE SMOOTH",
"356 200 OFFCURVE",
"330 233 OFFCURVE",
"330 290 CURVE SMOOTH",
"330 361 OFFCURVE",
"358 427 OFFCURVE",
"409 480 CURVE SMOOTH",
"434 506 OFFCURVE",
"462 530 OFFCURVE",
"494 551 CURVE SMOOTH",
"558 593 OFFCURVE",
"630 623 OFFCURVE",
"702 641 CURVE SMOOTH",
"739 650 OFFCURVE",
"772 652 OFFCURVE",
"805 652 CURVE SMOOTH",
"831 652 OFFCURVE",
"865 649 OFFCURVE",
"891 641 CURVE"
);
}
);
width = 939;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2018-11-27 04:22:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"117 -200 LINE",
"154 -200 LINE",
"258 -11 LINE",
"226 6 LINE"
);
},
{
closed = 1;
nodes = (
"625 712 OFFCURVE",
"584 703 OFFCURVE",
"543 687 CURVE",
"566 712 OFFCURVE",
"601 739 OFFCURVE",
"643 762 CURVE SMOOTH",
"685 784 OFFCURVE",
"707 787 OFFCURVE",
"714 776 CURVE",
"719 769 OFFCURVE",
"708 753 OFFCURVE",
"696 738 CURVE",
"694 735 OFFCURVE",
"690 732 OFFCURVE",
"688 730 CURVE",
"695 729 LINE",
"698 731 OFFCURVE",
"702 735 OFFCURVE",
"705 738 CURVE SMOOTH",
"726 758 OFFCURVE",
"734 773 OFFCURVE",
"727 783 CURVE",
"716 800 OFFCURVE",
"681 794 OFFCURVE",
"634 768 CURVE SMOOTH",
"589 744 OFFCURVE",
"548 710 OFFCURVE",
"523 679 CURVE",
"491 665 OFFCURVE",
"458 648 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"397 578 OFFCURVE",
"447 618 OFFCURVE",
"499 648 CURVE SMOOTH",
"481 596 OFFCURVE",
"483 569 OFFCURVE",
"486 549 CURVE SMOOTH",
"495 486 OFFCURVE",
"520 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"529 459 OFFCURVE",
"512 494 OFFCURVE",
"505 544 CURVE SMOOTH",
"500 580 OFFCURVE",
"505 636 OFFCURVE",
"517 655 CURVE",
"518 656 OFFCURVE",
"518 657 OFFCURVE",
"519 657 CURVE",
"534 666 OFFCURVE",
"550 673 OFFCURVE",
"565 679 CURVE SMOOTH",
"601 693 OFFCURVE",
"634 700 OFFCURVE",
"664 700 CURVE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH"
);
}
);
width = 593;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2018-11-27 04:22:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"167 -90 LINE",
"204 -90 LINE",
"258 -11 LINE",
"226 6 LINE"
);
},
{
closed = 1;
nodes = (
"625 712 OFFCURVE",
"584 703 OFFCURVE",
"543 687 CURVE",
"566 712 OFFCURVE",
"601 739 OFFCURVE",
"643 762 CURVE SMOOTH",
"685 784 OFFCURVE",
"707 787 OFFCURVE",
"714 776 CURVE",
"719 769 OFFCURVE",
"708 753 OFFCURVE",
"696 738 CURVE",
"694 735 OFFCURVE",
"690 732 OFFCURVE",
"688 730 CURVE",
"695 729 LINE",
"698 731 OFFCURVE",
"702 735 OFFCURVE",
"705 738 CURVE SMOOTH",
"726 758 OFFCURVE",
"734 773 OFFCURVE",
"727 783 CURVE",
"716 800 OFFCURVE",
"681 794 OFFCURVE",
"634 768 CURVE SMOOTH",
"589 744 OFFCURVE",
"548 710 OFFCURVE",
"523 679 CURVE",
"491 665 OFFCURVE",
"458 648 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"397 578 OFFCURVE",
"447 618 OFFCURVE",
"499 648 CURVE SMOOTH",
"481 596 OFFCURVE",
"483 569 OFFCURVE",
"486 549 CURVE SMOOTH",
"495 486 OFFCURVE",
"520 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"529 459 OFFCURVE",
"512 494 OFFCURVE",
"505 544 CURVE SMOOTH",
"500 580 OFFCURVE",
"505 636 OFFCURVE",
"517 655 CURVE",
"518 656 OFFCURVE",
"518 657 OFFCURVE",
"519 657 CURVE",
"534 666 OFFCURVE",
"550 673 OFFCURVE",
"565 679 CURVE SMOOTH",
"601 693 OFFCURVE",
"634 700 OFFCURVE",
"664 700 CURVE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"13 -142 LINE",
"56 -111 OFFCURVE",
"104 -92 OFFCURVE",
"159 -92 CURVE SMOOTH",
"263 -92 OFFCURVE",
"298 -143 OFFCURVE",
"298 -187 CURVE",
"295 -186 OFFCURVE",
"292 -186 OFFCURVE",
"288 -186 CURVE SMOOTH",
"269 -186 OFFCURVE",
"260 -202 OFFCURVE",
"260 -221 CURVE SMOOTH",
"260 -241 OFFCURVE",
"272 -256 OFFCURVE",
"293 -256 CURVE SMOOTH",
"322 -256 OFFCURVE",
"338 -229 OFFCURVE",
"338 -202 CURVE SMOOTH",
"338 -120 OFFCURVE",
"241 -80 OFFCURVE",
"164 -80 CURVE SMOOTH",
"99 -80 OFFCURVE",
"42 -97 OFFCURVE",
"-8 -125 CURVE"
);
}
);
width = 678;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2018-11-27 04:22:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"577 843 LINE",
"907 843 LINE",
"907 868 LINE",
"577 868 LINE"
);
},
{
closed = 1;
nodes = (
"637 689 LINE",
"688 694 LINE",
"781 843 LINE",
"735 869 LINE"
);
},
{
closed = 1;
nodes = (
"915 684 LINE",
"942 700 OFFCURVE",
"978 712 OFFCURVE",
"1009 723 CURVE",
"1007 727 LINE",
"970 718 OFFCURVE",
"934 706 OFFCURVE",
"901 691 CURVE",
"870 704 OFFCURVE",
"837 712 OFFCURVE",
"786 712 CURVE SMOOTH",
"687 712 OFFCURVE",
"590 688 OFFCURVE",
"506 649 CURVE SMOOTH",
"464 629 OFFCURVE",
"425 606 OFFCURVE",
"390 580 CURVE SMOOTH",
"319 527 OFFCURVE",
"268 466 OFFCURVE",
"240 403 CURVE SMOOTH",
"225 371 OFFCURVE",
"218 340 OFFCURVE",
"218 309 CURVE SMOOTH",
"218 240 OFFCURVE",
"266 184 OFFCURVE",
"335 184 CURVE SMOOTH",
"445 184 OFFCURVE",
"532 302 OFFCURVE",
"532 406 CURVE SMOOTH",
"532 444 LINE",
"520 444 LINE",
"520 406 LINE SMOOTH",
"520 309 OFFCURVE",
"438 196 OFFCURVE",
"339 196 CURVE SMOOTH",
"280 196 OFFCURVE",
"250 232 OFFCURVE",
"250 296 CURVE SMOOTH",
"250 376 OFFCURVE",
"284 448 OFFCURVE",
"339 508 CURVE SMOOTH",
"366 537 OFFCURVE",
"398 564 OFFCURVE",
"434 588 CURVE SMOOTH",
"505 636 OFFCURVE",
"585 669 OFFCURVE",
"666 687 CURVE SMOOTH",
"706 696 OFFCURVE",
"744 700 OFFCURVE",
"780 700 CURVE SMOOTH",
"812 700 OFFCURVE",
"857 696 OFFCURVE",
"885 683 CURVE",
"804 647 OFFCURVE",
"731 566 OFFCURVE",
"664 471 CURVE SMOOTH",
"630 423 OFFCURVE",
"597 374 OFFCURVE",
"566 323 CURVE SMOOTH",
"502 221 OFFCURVE",
"442 130 OFFCURVE",
"383 69 CURVE SMOOTH",
"354 38 OFFCURVE",
"324 20 OFFCURVE",
"295 13 CURVE",
"215 29 OFFCURVE",
"142 42 OFFCURVE",
"82 42 CURVE SMOOTH",
"62 42 OFFCURVE",
"48 39 OFFCURVE",
"40 34 CURVE SMOOTH",
"32 29 OFFCURVE",
"28 22 OFFCURVE",
"28 13 CURVE SMOOTH",
"28 4 OFFCURVE",
"35 -3 OFFCURVE",
"49 -8 CURVE SMOOTH",
"63 -13 OFFCURVE",
"87 -16 OFFCURVE",
"120 -16 CURVE SMOOTH",
"172 -16 OFFCURVE",
"213 -13 OFFCURVE",
"243 -6 CURVE SMOOTH",
"273 1 OFFCURVE",
"291 4 OFFCURVE",
"297 4 CURVE",
"348 -7 OFFCURVE",
"417 -16 OFFCURVE",
"470 -16 CURVE SMOOTH",
"582 -16 OFFCURVE",
"667 6 OFFCURVE",
"740 51 CURVE SMOOTH",
"813 95 OFFCURVE",
"873 162 OFFCURVE",
"933 253 CURVE",
"925 257 LINE",
"820 94 OFFCURVE",
"678 -4 OFFCURVE",
"479 -4 CURVE SMOOTH",
"419 -4 OFFCURVE",
"372 -1 OFFCURVE",
"313 8 CURVE",
"313 10 LINE",
"413 45 OFFCURVE",
"488 117 OFFCURVE",
"552 202 CURVE SMOOTH",
"583 244 OFFCURVE",
"613 289 OFFCURVE",
"640 336 CURVE SMOOTH",
"695 430 OFFCURVE",
"748 519 OFFCURVE",
"805 591 CURVE SMOOTH",
"834 627 OFFCURVE",
"865 655 OFFCURVE",
"900 675 CURVE"
);
}
);
width = 881;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2018-11-27 04:22:19 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"577 843 LINE",
"907 843 LINE",
"907 868 LINE",
"577 868 LINE"
);
},
{
closed = 1;
nodes = (
"630 689 LINE",
"681 694 LINE",
"774 843 LINE",
"728 869 LINE"
);
},
{
closed = 1;
nodes = (
"908 684 LINE",
"935 700 OFFCURVE",
"971 712 OFFCURVE",
"1002 723 CURVE",
"1000 727 LINE",
"963 718 OFFCURVE",
"927 706 OFFCURVE",
"894 691 CURVE",
"863 704 OFFCURVE",
"830 712 OFFCURVE",
"779 712 CURVE SMOOTH",
"680 712 OFFCURVE",
"583 688 OFFCURVE",
"499 649 CURVE SMOOTH",
"457 629 OFFCURVE",
"418 606 OFFCURVE",
"383 580 CURVE SMOOTH",
"312 527 OFFCURVE",
"261 466 OFFCURVE",
"233 403 CURVE SMOOTH",
"218 371 OFFCURVE",
"211 340 OFFCURVE",
"211 309 CURVE SMOOTH",
"211 240 OFFCURVE",
"259 184 OFFCURVE",
"328 184 CURVE SMOOTH",
"438 184 OFFCURVE",
"525 302 OFFCURVE",
"525 406 CURVE SMOOTH",
"525 444 LINE",
"513 444 LINE",
"513 406 LINE SMOOTH",
"513 309 OFFCURVE",
"431 196 OFFCURVE",
"332 196 CURVE SMOOTH",
"273 196 OFFCURVE",
"243 232 OFFCURVE",
"243 296 CURVE SMOOTH",
"243 376 OFFCURVE",
"277 448 OFFCURVE",
"332 508 CURVE SMOOTH",
"359 537 OFFCURVE",
"391 564 OFFCURVE",
"427 588 CURVE SMOOTH",
"498 636 OFFCURVE",
"578 669 OFFCURVE",
"659 687 CURVE SMOOTH",
"699 696 OFFCURVE",
"737 700 OFFCURVE",
"773 700 CURVE SMOOTH",
"805 700 OFFCURVE",
"850 696 OFFCURVE",
"878 683 CURVE",
"797 647 OFFCURVE",
"724 566 OFFCURVE",
"657 471 CURVE SMOOTH",
"623 423 OFFCURVE",
"590 374 OFFCURVE",
"559 323 CURVE SMOOTH",
"495 221 OFFCURVE",
"435 130 OFFCURVE",
"376 69 CURVE SMOOTH",
"347 38 OFFCURVE",
"317 20 OFFCURVE",
"288 13 CURVE",
"208 29 OFFCURVE",
"135 42 OFFCURVE",
"75 42 CURVE SMOOTH",
"55 42 OFFCURVE",
"41 39 OFFCURVE",
"33 34 CURVE SMOOTH",
"25 29 OFFCURVE",
"21 22 OFFCURVE",
"21 13 CURVE SMOOTH",
"21 4 OFFCURVE",
"28 -3 OFFCURVE",
"42 -8 CURVE SMOOTH",
"56 -13 OFFCURVE",
"80 -16 OFFCURVE",
"113 -16 CURVE SMOOTH",
"165 -16 OFFCURVE",
"206 -13 OFFCURVE",
"236 -6 CURVE SMOOTH",
"266 1 OFFCURVE",
"284 4 OFFCURVE",
"290 4 CURVE",
"341 -7 OFFCURVE",
"410 -16 OFFCURVE",
"463 -16 CURVE SMOOTH",
"575 -16 OFFCURVE",
"660 6 OFFCURVE",
"733 51 CURVE SMOOTH",
"806 95 OFFCURVE",
"866 162 OFFCURVE",
"926 253 CURVE",
"918 257 LINE",
"813 94 OFFCURVE",
"671 -4 OFFCURVE",
"472 -4 CURVE SMOOTH",
"412 -4 OFFCURVE",
"365 -1 OFFCURVE",
"306 8 CURVE",
"306 10 LINE",
"406 45 OFFCURVE",
"481 117 OFFCURVE",
"545 202 CURVE SMOOTH",
"576 244 OFFCURVE",
"606 289 OFFCURVE",
"633 336 CURVE SMOOTH",
"688 430 OFFCURVE",
"741 519 OFFCURVE",
"798 591 CURVE SMOOTH",
"827 627 OFFCURVE",
"858 655 OFFCURVE",
"893 675 CURVE"
);
},
{
closed = 1;
nodes = (
"621 340 LINE",
"801 340 LINE",
"801 373 LINE",
"621 373 LINE"
);
}
);
width = 874;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2018-11-27 04:22:19 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"577 843 LINE",
"907 843 LINE",
"907 868 LINE",
"577 868 LINE"
);
},
{
closed = 1;
nodes = (
"630 689 LINE",
"681 694 LINE",
"774 843 LINE",
"728 869 LINE"
);
},
{
closed = 1;
nodes = (
"290 4 LINE",
"341 -7 OFFCURVE",
"410 -16 OFFCURVE",
"463 -16 CURVE SMOOTH",
"575 -16 OFFCURVE",
"660 6 OFFCURVE",
"733 51 CURVE SMOOTH",
"806 95 OFFCURVE",
"866 162 OFFCURVE",
"926 253 CURVE",
"918 257 LINE",
"813 94 OFFCURVE",
"671 -4 OFFCURVE",
"472 -4 CURVE SMOOTH",
"412 -4 OFFCURVE",
"365 -1 OFFCURVE",
"306 8 CURVE",
"306 10 LINE",
"406 45 OFFCURVE",
"481 117 OFFCURVE",
"545 202 CURVE SMOOTH",
"576 244 OFFCURVE",
"606 289 OFFCURVE",
"633 336 CURVE SMOOTH",
"688 430 OFFCURVE",
"741 519 OFFCURVE",
"798 591 CURVE SMOOTH",
"827 627 OFFCURVE",
"858 655 OFFCURVE",
"893 675 CURVE",
"908 684 LINE",
"935 700 OFFCURVE",
"971 712 OFFCURVE",
"1002 723 CURVE",
"1000 727 LINE",
"963 718 OFFCURVE",
"927 706 OFFCURVE",
"894 691 CURVE",
"863 704 OFFCURVE",
"830 712 OFFCURVE",
"779 712 CURVE SMOOTH",
"680 712 OFFCURVE",
"583 688 OFFCURVE",
"499 649 CURVE SMOOTH",
"457 629 OFFCURVE",
"418 606 OFFCURVE",
"383 580 CURVE SMOOTH",
"312 527 OFFCURVE",
"261 466 OFFCURVE",
"233 403 CURVE SMOOTH",
"218 371 OFFCURVE",
"211 340 OFFCURVE",
"211 309 CURVE SMOOTH",
"211 240 OFFCURVE",
"259 184 OFFCURVE",
"328 184 CURVE SMOOTH",
"438 184 OFFCURVE",
"525 302 OFFCURVE",
"525 406 CURVE SMOOTH",
"525 444 LINE",
"513 444 LINE",
"513 406 LINE SMOOTH",
"513 309 OFFCURVE",
"431 196 OFFCURVE",
"332 196 CURVE SMOOTH",
"273 196 OFFCURVE",
"243 232 OFFCURVE",
"243 296 CURVE SMOOTH",
"243 376 OFFCURVE",
"277 448 OFFCURVE",
"332 508 CURVE SMOOTH",
"359 537 OFFCURVE",
"391 564 OFFCURVE",
"427 588 CURVE SMOOTH",
"498 636 OFFCURVE",
"578 669 OFFCURVE",
"659 687 CURVE SMOOTH",
"699 696 OFFCURVE",
"737 700 OFFCURVE",
"773 700 CURVE SMOOTH",
"805 700 OFFCURVE",
"850 696 OFFCURVE",
"878 683 CURVE",
"797 647 OFFCURVE",
"724 566 OFFCURVE",
"657 471 CURVE SMOOTH",
"623 423 OFFCURVE",
"590 374 OFFCURVE",
"559 323 CURVE SMOOTH",
"495 221 OFFCURVE",
"435 130 OFFCURVE",
"376 69 CURVE SMOOTH",
"347 38 OFFCURVE",
"317 20 OFFCURVE",
"288 13 CURVE"
);
},
{
closed = 1;
nodes = (
"288 13 LINE",
"249 -94 LINE",
"249 -108 LINE",
"421 -108 LINE",
"421 -90 LINE",
"282 -90 LINE SMOOTH",
"258 -90 OFFCURVE",
"273 -71 OFFCURVE",
"310 19 CURVE"
);
}
);
width = 874;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2018-11-27 04:22:19 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"517 735 LINE",
"847 735 LINE",
"847 760 LINE",
"517 760 LINE"
);
},
{
closed = 1;
nodes = (
"630 652 LINE",
"664 652 LINE",
"726 757 LINE",
"692 757 LINE"
);
},
{
closed = 1;
nodes = (
"452 506 LINE",
"451 502 OFFCURVE",
"451 497 OFFCURVE",
"451 492 CURVE SMOOTH",
"451 487 OFFCURVE",
"451 483 OFFCURVE",
"451 479 CURVE",
"454 419 OFFCURVE",
"496 397 OFFCURVE",
"548 397 CURVE SMOOTH",
"647 397 OFFCURVE",
"743 467 OFFCURVE",
"743 560 CURVE SMOOTH",
"743 627 OFFCURVE",
"702 662 OFFCURVE",
"618 662 CURVE SMOOTH",
"550 662 OFFCURVE",
"465 629 OFFCURVE",
"383 577 CURVE SMOOTH",
"342 550 OFFCURVE",
"302 519 OFFCURVE",
"263 484 CURVE SMOOTH",
"186 412 OFFCURVE",
"125 330 OFFCURVE",
"89 243 CURVE SMOOTH",
"71 199 OFFCURVE",
"62 156 OFFCURVE",
"62 114 CURVE SMOOTH",
"62 28 OFFCURVE",
"122 -66 OFFCURVE",
"248 -66 CURVE SMOOTH",
"340 -66 OFFCURVE",
"412 -28 OFFCURVE",
"460 22 CURVE SMOOTH",
"508 72 OFFCURVE",
"533 133 OFFCURVE",
"533 180 CURVE SMOOTH",
"533 260 OFFCURVE",
"493 290 OFFCURVE",
"409 290 CURVE",
"410 278 LINE",
"463 278 OFFCURVE",
"497 249 OFFCURVE",
"497 196 CURVE SMOOTH",
"497 75 OFFCURVE",
"379 -54 OFFCURVE",
"252 -54 CURVE SMOOTH",
"165 -54 OFFCURVE",
"126 21 OFFCURVE",
"126 102 CURVE SMOOTH",
"126 194 OFFCURVE",
"161 285 OFFCURVE",
"215 366 CURVE SMOOTH",
"242 407 OFFCURVE",
"272 444 OFFCURVE",
"307 479 CURVE SMOOTH",
"375 548 OFFCURVE",
"451 600 OFFCURVE",
"523 629 CURVE SMOOTH",
"559 643 OFFCURVE",
"592 650 OFFCURVE",
"622 650 CURVE SMOOTH",
"674 650 OFFCURVE",
"707 635 OFFCURVE",
"707 579 CURVE SMOOTH",
"707 491 OFFCURVE",
"624 409 OFFCURVE",
"549 409 CURVE SMOOTH",
"503 409 OFFCURVE",
"463 429 OFFCURVE",
"463 482 CURVE SMOOTH",
"463 487 OFFCURVE",
"463 491 OFFCURVE",
"463 494 CURVE SMOOTH",
"463 498 OFFCURVE",
"463 502 OFFCURVE",
"464 506 CURVE"
);
},
{
closed = 1;
nodes = (
"142 -195 LINE",
"216 -61 LINE",
"184 -44 LINE",
"104 -196 LINE"
);
}
);
width = 593;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2018-11-27 04:22:20 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"577 843 LINE",
"907 843 LINE",
"907 868 LINE",
"577 868 LINE"
);
},
{
closed = 1;
nodes = (
"341 -6 LINE",
"357 -9 OFFCURVE",
"373 -11 OFFCURVE",
"389 -13 CURVE SMOOTH",
"438 -19 OFFCURVE",
"490 -8 OFFCURVE",
"532 10 CURVE SMOOTH",
"569 26 OFFCURVE",
"603 56 OFFCURVE",
"605 89 CURVE SMOOTH",
"607 116 OFFCURVE",
"589 136 OFFCURVE",
"551 138 CURVE SMOOTH",
"528 139 OFFCURVE",
"512 130 OFFCURVE",
"493 120 CURVE SMOOTH",
"491 119 OFFCURVE",
"489 116 OFFCURVE",
"486 113 CURVE",
"494 110 LINE",
"496 112 OFFCURVE",
"497 115 OFFCURVE",
"501 116 CURVE SMOOTH",
"518 120 OFFCURVE",
"534 132 OFFCURVE",
"550 131 CURVE SMOOTH",
"575 129 OFFCURVE",
"588 117 OFFCURVE",
"587 92 CURVE SMOOTH",
"586 57 OFFCURVE",
"552 28 OFFCURVE",
"514 12 CURVE SMOOTH",
"480 -2 OFFCURVE",
"425 -10 OFFCURVE",
"391 -5 CURVE SMOOTH",
"378 -3 OFFCURVE",
"365 -3 OFFCURVE",
"353 1 CURVE"
);
},
{
closed = 1;
nodes = (
"630 689 LINE",
"681 694 LINE",
"774 843 LINE",
"728 869 LINE"
);
},
{
closed = 1;
nodes = (
"908 684 LINE",
"935 700 OFFCURVE",
"971 712 OFFCURVE",
"1002 723 CURVE",
"1000 727 LINE",
"963 718 OFFCURVE",
"927 706 OFFCURVE",
"894 691 CURVE",
"863 704 OFFCURVE",
"830 712 OFFCURVE",
"779 712 CURVE SMOOTH",
"680 712 OFFCURVE",
"583 688 OFFCURVE",
"499 649 CURVE SMOOTH",
"457 629 OFFCURVE",
"418 606 OFFCURVE",
"383 580 CURVE SMOOTH",
"312 527 OFFCURVE",
"261 466 OFFCURVE",
"233 403 CURVE SMOOTH",
"218 371 OFFCURVE",
"211 340 OFFCURVE",
"211 309 CURVE SMOOTH",
"211 240 OFFCURVE",
"259 184 OFFCURVE",
"328 184 CURVE SMOOTH",
"438 184 OFFCURVE",
"525 302 OFFCURVE",
"525 406 CURVE SMOOTH",
"525 444 LINE",
"513 444 LINE",
"513 406 LINE SMOOTH",
"513 309 OFFCURVE",
"431 196 OFFCURVE",
"332 196 CURVE SMOOTH",
"273 196 OFFCURVE",
"243 232 OFFCURVE",
"243 296 CURVE SMOOTH",
"243 376 OFFCURVE",
"277 448 OFFCURVE",
"332 508 CURVE SMOOTH",
"359 537 OFFCURVE",
"391 564 OFFCURVE",
"427 588 CURVE SMOOTH",
"498 636 OFFCURVE",
"578 669 OFFCURVE",
"659 687 CURVE SMOOTH",
"699 696 OFFCURVE",
"737 700 OFFCURVE",
"773 700 CURVE SMOOTH",
"805 700 OFFCURVE",
"850 696 OFFCURVE",
"878 683 CURVE",
"797 647 OFFCURVE",
"724 566 OFFCURVE",
"657 471 CURVE SMOOTH",
"623 423 OFFCURVE",
"590 374 OFFCURVE",
"559 323 CURVE SMOOTH",
"495 221 OFFCURVE",
"435 130 OFFCURVE",
"376 69 CURVE SMOOTH",
"347 38 OFFCURVE",
"317 20 OFFCURVE",
"288 13 CURVE",
"208 29 OFFCURVE",
"135 42 OFFCURVE",
"75 42 CURVE SMOOTH",
"55 42 OFFCURVE",
"41 39 OFFCURVE",
"33 34 CURVE SMOOTH",
"25 29 OFFCURVE",
"21 22 OFFCURVE",
"21 13 CURVE SMOOTH",
"21 4 OFFCURVE",
"28 -3 OFFCURVE",
"42 -8 CURVE SMOOTH",
"56 -13 OFFCURVE",
"80 -16 OFFCURVE",
"113 -16 CURVE SMOOTH",
"165 -16 OFFCURVE",
"206 -13 OFFCURVE",
"236 -6 CURVE SMOOTH",
"266 1 OFFCURVE",
"284 4 OFFCURVE",
"290 4 CURVE",
"341 -7 OFFCURVE",
"410 -16 OFFCURVE",
"463 -16 CURVE SMOOTH",
"575 -16 OFFCURVE",
"660 6 OFFCURVE",
"733 51 CURVE SMOOTH",
"806 95 OFFCURVE",
"866 162 OFFCURVE",
"926 253 CURVE",
"918 257 LINE",
"813 94 OFFCURVE",
"671 -4 OFFCURVE",
"472 -4 CURVE SMOOTH",
"412 -4 OFFCURVE",
"365 -1 OFFCURVE",
"306 8 CURVE",
"306 10 LINE",
"406 45 OFFCURVE",
"481 117 OFFCURVE",
"545 202 CURVE SMOOTH",
"576 244 OFFCURVE",
"606 289 OFFCURVE",
"633 336 CURVE SMOOTH",
"688 430 OFFCURVE",
"741 519 OFFCURVE",
"798 591 CURVE SMOOTH",
"827 627 OFFCURVE",
"858 655 OFFCURVE",
"893 675 CURVE"
);
}
);
width = 874;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2018-11-27 04:22:20 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"577 843 LINE",
"907 843 LINE",
"907 868 LINE",
"577 868 LINE"
);
},
{
closed = 1;
nodes = (
"1023 683 LINE SMOOTH",
"942 647 OFFCURVE",
"869 566 OFFCURVE",
"802 471 CURVE SMOOTH",
"768 423 OFFCURVE",
"735 374 OFFCURVE",
"704 323 CURVE SMOOTH",
"640 221 OFFCURVE",
"580 130 OFFCURVE",
"521 69 CURVE SMOOTH",
"492 38 OFFCURVE",
"462 20 OFFCURVE",
"433 13 CURVE",
"353 29 OFFCURVE",
"280 42 OFFCURVE",
"220 42 CURVE SMOOTH",
"200 42 OFFCURVE",
"186 39 OFFCURVE",
"178 34 CURVE SMOOTH",
"170 29 OFFCURVE",
"166 22 OFFCURVE",
"166 13 CURVE SMOOTH",
"166 4 OFFCURVE",
"173 -3 OFFCURVE",
"187 -8 CURVE SMOOTH",
"201 -13 OFFCURVE",
"225 -16 OFFCURVE",
"258 -16 CURVE SMOOTH",
"310 -16 OFFCURVE",
"351 -13 OFFCURVE",
"381 -6 CURVE SMOOTH",
"411 1 OFFCURVE",
"429 4 OFFCURVE",
"435 4 CURVE",
"486 -7 OFFCURVE",
"555 -16 OFFCURVE",
"608 -16 CURVE SMOOTH",
"720 -16 OFFCURVE",
"805 6 OFFCURVE",
"878 51 CURVE SMOOTH",
"951 95 OFFCURVE",
"1011 162 OFFCURVE",
"1071 253 CURVE",
"1063 257 LINE",
"958 94 OFFCURVE",
"816 -4 OFFCURVE",
"617 -4 CURVE SMOOTH",
"557 -4 OFFCURVE",
"510 -1 OFFCURVE",
"451 8 CURVE",
"451 10 LINE",
"551 45 OFFCURVE",
"626 117 OFFCURVE",
"690 202 CURVE SMOOTH",
"721 244 OFFCURVE",
"751 289 OFFCURVE",
"778 336 CURVE SMOOTH",
"833 430 OFFCURVE",
"886 519 OFFCURVE",
"943 591 CURVE SMOOTH",
"972 627 OFFCURVE",
"1003 655 OFFCURVE",
"1038 675 CURVE SMOOTH",
"1053 684 LINE SMOOTH",
"1080 700 OFFCURVE",
"1116 712 OFFCURVE",
"1147 723 CURVE",
"1145 727 LINE",
"1108 718 OFFCURVE",
"1072 706 OFFCURVE",
"1039 691 CURVE"
);
},
{
closed = 1;
nodes = (
"604 789 LINE",
"604 749 LINE",
"851 749 LINE",
"775 610 LINE",
"826 615 LINE",
"862 673 LINE SMOOTH",
"894 725 OFFCURVE",
"900 764 OFFCURVE",
"891 780 CURVE SMOOTH",
"887 787 OFFCURVE",
"861 790 OFFCURVE",
"852 790 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"722 758 LINE",
"737 758 LINE",
"737 855 LINE",
"722 855 LINE"
);
},
{
closed = 1;
nodes = (
"945 620 LINE",
"925 625 OFFCURVE",
"902 628 OFFCURVE",
"872 628 CURVE SMOOTH",
"783 628 OFFCURVE",
"695 607 OFFCURVE",
"619 571 CURVE SMOOTH",
"581 553 OFFCURVE",
"546 532 OFFCURVE",
"514 508 CURVE SMOOTH",
"450 460 OFFCURVE",
"403 405 OFFCURVE",
"378 348 CURVE SMOOTH",
"365 319 OFFCURVE",
"358 291 OFFCURVE",
"358 263 CURVE SMOOTH",
"358 201 OFFCURVE",
"402 150 OFFCURVE",
"464 150 CURVE SMOOTH",
"564 150 OFFCURVE",
"642 257 OFFCURVE",
"642 351 CURVE SMOOTH",
"642 385 LINE",
"632 385 LINE",
"632 351 LINE SMOOTH",
"632 263 OFFCURVE",
"557 161 OFFCURVE",
"468 161 CURVE SMOOTH",
"414 161 OFFCURVE",
"387 193 OFFCURVE",
"387 251 CURVE SMOOTH",
"387 324 OFFCURVE",
"418 389 OFFCURVE",
"468 443 CURVE SMOOTH",
"493 470 OFFCURVE",
"521 494 OFFCURVE",
"554 516 CURVE SMOOTH",
"618 559 OFFCURVE",
"690 589 OFFCURVE",
"764 605 CURVE SMOOTH",
"800 613 OFFCURVE",
"834 617 OFFCURVE",
"867 617 CURVE SMOOTH",
"888 617 OFFCURVE",
"914 615 OFFCURVE",
"937 610 CURVE"
);
}
);
width = 1019;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2018-11-27 04:22:20 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"366 584 LINE",
"597 646 LINE",
"591 671 LINE",
"360 609 LINE"
);
},
{
closed = 1;
nodes = (
"662 592 OFFCURVE",
"621 583 OFFCURVE",
"580 567 CURVE",
"603 592 OFFCURVE",
"638 619 OFFCURVE",
"680 642 CURVE SMOOTH",
"722 664 OFFCURVE",
"744 667 OFFCURVE",
"751 656 CURVE",
"756 649 OFFCURVE",
"745 633 OFFCURVE",
"733 618 CURVE",
"731 615 OFFCURVE",
"727 612 OFFCURVE",
"725 610 CURVE",
"732 609 LINE",
"735 611 OFFCURVE",
"739 615 OFFCURVE",
"742 618 CURVE SMOOTH",
"763 638 OFFCURVE",
"771 653 OFFCURVE",
"764 663 CURVE",
"753 680 OFFCURVE",
"718 674 OFFCURVE",
"671 648 CURVE SMOOTH",
"626 624 OFFCURVE",
"585 590 OFFCURVE",
"560 559 CURVE",
"528 545 OFFCURVE",
"495 528 OFFCURVE",
"462 507 CURVE SMOOTH",
"421 480 OFFCURVE",
"381 449 OFFCURVE",
"342 414 CURVE SMOOTH",
"265 342 OFFCURVE",
"204 260 OFFCURVE",
"168 173 CURVE SMOOTH",
"150 129 OFFCURVE",
"141 86 OFFCURVE",
"141 44 CURVE SMOOTH",
"141 -42 OFFCURVE",
"201 -136 OFFCURVE",
"327 -136 CURVE SMOOTH",
"419 -136 OFFCURVE",
"491 -98 OFFCURVE",
"539 -48 CURVE SMOOTH",
"587 2 OFFCURVE",
"612 63 OFFCURVE",
"612 110 CURVE SMOOTH",
"612 190 OFFCURVE",
"572 220 OFFCURVE",
"488 220 CURVE",
"489 208 LINE",
"542 208 OFFCURVE",
"576 179 OFFCURVE",
"576 126 CURVE SMOOTH",
"576 5 OFFCURVE",
"458 -124 OFFCURVE",
"331 -124 CURVE SMOOTH",
"244 -124 OFFCURVE",
"205 -49 OFFCURVE",
"205 32 CURVE SMOOTH",
"205 124 OFFCURVE",
"240 215 OFFCURVE",
"294 296 CURVE SMOOTH",
"321 337 OFFCURVE",
"351 374 OFFCURVE",
"386 409 CURVE SMOOTH",
"434 458 OFFCURVE",
"484 498 OFFCURVE",
"536 528 CURVE SMOOTH",
"518 476 OFFCURVE",
"520 449 OFFCURVE",
"523 429 CURVE SMOOTH",
"532 366 OFFCURVE",
"557 327 OFFCURVE",
"627 327 CURVE SMOOTH",
"726 327 OFFCURVE",
"822 397 OFFCURVE",
"822 490 CURVE SMOOTH",
"822 557 OFFCURVE",
"781 592 OFFCURVE",
"697 592 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"566 339 OFFCURVE",
"549 374 OFFCURVE",
"542 424 CURVE SMOOTH",
"537 460 OFFCURVE",
"542 516 OFFCURVE",
"554 535 CURVE",
"555 536 OFFCURVE",
"555 537 OFFCURVE",
"556 537 CURVE",
"571 546 OFFCURVE",
"587 553 OFFCURVE",
"602 559 CURVE SMOOTH",
"638 573 OFFCURVE",
"671 580 OFFCURVE",
"701 580 CURVE SMOOTH",
"753 580 OFFCURVE",
"786 565 OFFCURVE",
"786 509 CURVE SMOOTH",
"786 421 OFFCURVE",
"703 339 OFFCURVE",
"628 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 -200 LINE",
"295 -131 LINE",
"263 -114 LINE",
"218 -199 LINE"
);
},
{
closed = 1;
nodes = (
"477 508 LINE",
"495 508 LINE",
"495 626 LINE",
"477 626 LINE"
);
}
);
width = 731;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2018-11-27 04:22:20 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"566 339 OFFCURVE",
"549 374 OFFCURVE",
"542 424 CURVE SMOOTH",
"537 460 OFFCURVE",
"542 516 OFFCURVE",
"554 535 CURVE",
"555 536 OFFCURVE",
"555 537 OFFCURVE",
"556 537 CURVE",
"571 546 OFFCURVE",
"587 553 OFFCURVE",
"602 559 CURVE SMOOTH",
"638 573 OFFCURVE",
"671 580 OFFCURVE",
"701 580 CURVE SMOOTH",
"753 580 OFFCURVE",
"786 565 OFFCURVE",
"786 509 CURVE SMOOTH",
"786 421 OFFCURVE",
"703 339 OFFCURVE",
"628 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 -93 LINE",
"356 -24 LINE",
"324 -7 LINE",
"279 -92 LINE"
);
},
{
closed = 1;
nodes = (
"477 508 LINE",
"495 508 LINE",
"495 626 LINE",
"477 626 LINE"
);
},
{
closed = 1;
nodes = (
"174 -145 LINE",
"217 -114 OFFCURVE",
"265 -95 OFFCURVE",
"320 -95 CURVE SMOOTH",
"424 -95 OFFCURVE",
"459 -146 OFFCURVE",
"459 -190 CURVE",
"456 -189 OFFCURVE",
"453 -189 OFFCURVE",
"449 -189 CURVE SMOOTH",
"430 -189 OFFCURVE",
"421 -205 OFFCURVE",
"421 -224 CURVE SMOOTH",
"421 -244 OFFCURVE",
"433 -259 OFFCURVE",
"454 -259 CURVE SMOOTH",
"483 -259 OFFCURVE",
"499 -232 OFFCURVE",
"499 -205 CURVE SMOOTH",
"499 -123 OFFCURVE",
"402 -83 OFFCURVE",
"325 -83 CURVE SMOOTH",
"260 -83 OFFCURVE",
"203 -100 OFFCURVE",
"153 -128 CURVE"
);
},
{
closed = 1;
nodes = (
"637 229 LINE",
"634 109 OFFCURVE",
"518 -17 OFFCURVE",
"392 -17 CURVE SMOOTH",
"305 -17 OFFCURVE",
"266 58 OFFCURVE",
"266 139 CURVE SMOOTH",
"266 194 OFFCURVE",
"275 252 OFFCURVE",
"301 302 CURVE SMOOTH",
"321 340 OFFCURVE",
"343 366 OFFCURVE",
"386 409 CURVE SMOOTH",
"434 458 OFFCURVE",
"484 498 OFFCURVE",
"536 528 CURVE",
"518 476 OFFCURVE",
"520 449 OFFCURVE",
"523 429 CURVE SMOOTH",
"532 366 OFFCURVE",
"557 327 OFFCURVE",
"627 327 CURVE SMOOTH",
"726 327 OFFCURVE",
"822 397 OFFCURVE",
"822 490 CURVE SMOOTH",
"822 557 OFFCURVE",
"781 592 OFFCURVE",
"697 592 CURVE SMOOTH",
"662 592 OFFCURVE",
"621 583 OFFCURVE",
"580 567 CURVE",
"603 592 OFFCURVE",
"638 619 OFFCURVE",
"680 642 CURVE SMOOTH",
"722 664 OFFCURVE",
"744 667 OFFCURVE",
"751 656 CURVE",
"756 649 OFFCURVE",
"745 633 OFFCURVE",
"733 618 CURVE",
"731 615 OFFCURVE",
"727 612 OFFCURVE",
"725 610 CURVE",
"732 609 LINE",
"735 611 OFFCURVE",
"739 615 OFFCURVE",
"742 618 CURVE SMOOTH",
"763 638 OFFCURVE",
"771 653 OFFCURVE",
"764 663 CURVE",
"753 680 OFFCURVE",
"718 674 OFFCURVE",
"671 648 CURVE SMOOTH",
"626 624 OFFCURVE",
"585 590 OFFCURVE",
"560 559 CURVE",
"528 545 OFFCURVE",
"495 528 OFFCURVE",
"462 507 CURVE SMOOTH",
"421 480 OFFCURVE",
"380 449 OFFCURVE",
"342 414 CURVE SMOOTH",
"310 385 OFFCURVE",
"282 360 OFFCURVE",
"250 307 CURVE SMOOTH",
"221 259 OFFCURVE",
"202 193 OFFCURVE",
"202 151 CURVE SMOOTH",
"202 65 OFFCURVE",
"262 -29 OFFCURVE",
"388 -29 CURVE SMOOTH",
"480 -29 OFFCURVE",
"552 9 OFFCURVE",
"600 59 CURVE SMOOTH",
"648 109 OFFCURVE",
"673 170 OFFCURVE",
"673 217 CURVE SMOOTH",
"673 221 OFFCURVE",
"673 225 OFFCURVE",
"673 229 CURVE"
);
},
{
closed = 1;
nodes = (
"591 671 LINE",
"360 609 LINE",
"366 584 LINE",
"597 646 LINE"
);
}
);
width = 842;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2018-11-27 04:22:21 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1027 182 OFFCURVE",
"975 119 OFFCURVE",
"932 78 CURVE SMOOTH",
"871 19 OFFCURVE",
"834 0 OFFCURVE",
"802 0 CURVE SMOOTH",
"775 0 OFFCURVE",
"760 18 OFFCURVE",
"760 41 CURVE SMOOTH",
"760 54 OFFCURVE",
"765 71 OFFCURVE",
"775 92 CURVE SMOOTH",
"780 103 OFFCURVE",
"814 160 OFFCURVE",
"818 167 CURVE SMOOTH",
"841 207 OFFCURVE",
"859 241 OFFCURVE",
"859 282 CURVE SMOOTH",
"859 330 OFFCURVE",
"824 362 OFFCURVE",
"764 362 CURVE SMOOTH",
"729 362 OFFCURVE",
"704 357 OFFCURVE",
"677 348 CURVE SMOOTH",
"666 344 OFFCURVE",
"656 339 OFFCURVE",
"647 333 CURVE",
"638 326 OFFCURVE",
"629 321 OFFCURVE",
"622 316 CURVE",
"620 317 LINE",
"629 332 OFFCURVE",
"638 347 OFFCURVE",
"647 362 CURVE SMOOTH",
"674 407 LINE SMOOTH",
"688 430 OFFCURVE",
"702 452 OFFCURVE",
"717 473 CURVE",
"745 468 OFFCURVE",
"774 466 OFFCURVE",
"803 463 CURVE",
"815 462 LINE",
"803 459 OFFCURVE",
"791 455 OFFCURVE",
"779 452 CURVE",
"786 444 LINE",
"793 448 OFFCURVE",
"800 451 OFFCURVE",
"808 454 CURVE SMOOTH",
"819 458 OFFCURVE",
"830 461 OFFCURVE",
"843 462 CURVE SMOOTH",
"852 463 OFFCURVE",
"858 464 OFFCURVE",
"863 464 CURVE SMOOTH",
"879 464 LINE SMOOTH",
"902 464 OFFCURVE",
"916 466 OFFCURVE",
"916 481 CURVE SMOOTH",
"916 487 OFFCURVE",
"911 490 OFFCURVE",
"901 490 CURVE SMOOTH",
"888 490 OFFCURVE",
"876 488 OFFCURVE",
"865 483 CURVE SMOOTH",
"850 477 OFFCURVE",
"827 476 OFFCURVE",
"803 476 CURVE SMOOTH",
"776 476 OFFCURVE",
"752 484 OFFCURVE",
"728 489 CURVE SMOOTH",
"677 502 LINE",
"655 509 OFFCURVE",
"634 515 OFFCURVE",
"615 523 CURVE SMOOTH",
"492 571 OFFCURVE",
"427 637 OFFCURVE",
"427 716 CURVE SMOOTH",
"427 765 OFFCURVE",
"458 802 OFFCURVE",
"509 802 CURVE SMOOTH",
"552 802 OFFCURVE",
"596 784 OFFCURVE",
"624 757 CURVE SMOOTH",
"639 743 OFFCURVE",
"651 729 OFFCURVE",
"657 714 CURVE SMOOTH",
"662 702 OFFCURVE",
"666 689 OFFCURVE",
"667 676 CURVE",
"667 664 LINE",
"666 651 OFFCURVE",
"663 638 OFFCURVE",
"656 624 CURVE",
"668 623 LINE",
"673 632 OFFCURVE",
"676 640 OFFCURVE",
"677 647 CURVE",
"678 652 OFFCURVE",
"679 658 OFFCURVE",
"679 664 CURVE SMOOTH",
"679 676 LINE",
"677 709 OFFCURVE",
"661 739 OFFCURVE",
"631 765 CURVE SMOOTH",
"598 794 OFFCURVE",
"553 814 OFFCURVE",
"498 814 CURVE SMOOTH",
"426 814 OFFCURVE",
"373 769 OFFCURVE",
"373 707 CURVE SMOOTH",
"373 632 OFFCURVE",
"422 570 OFFCURVE",
"541 521 CURVE SMOOTH",
"579 505 OFFCURVE",
"620 493 OFFCURVE",
"663 484 CURVE",
"659 479 LINE",
"642 455 OFFCURVE",
"625 428 OFFCURVE",
"606 399 CURVE SMOOTH",
"567 338 OFFCURVE",
"531 280 OFFCURVE",
"498 226 CURVE SMOOTH",
"465 171 OFFCURVE",
"430 124 OFFCURVE",
"395 84 CURVE SMOOTH",
"356 41 OFFCURVE",
"307 4 OFFCURVE",
"258 4 CURVE SMOOTH",
"221 4 OFFCURVE",
"199 14 OFFCURVE",
"191 35 CURVE",
"212 35 OFFCURVE",
"222 47 OFFCURVE",
"222 66 CURVE SMOOTH",
"222 86 OFFCURVE",
"210 99 OFFCURVE",
"189 99 CURVE SMOOTH",
"164 99 OFFCURVE",
"148 83 OFFCURVE",
"148 58 CURVE SMOOTH",
"148 21 OFFCURVE",
"192 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"316 -8 OFFCURVE",
"376 20 OFFCURVE",
"433 71 CURVE SMOOTH",
"472 106 OFFCURVE",
"507 148 OFFCURVE",
"544 200 CURVE SMOOTH",
"563 225 OFFCURVE",
"579 250 OFFCURVE",
"596 277 CURVE",
"616 298 OFFCURVE",
"643 319 OFFCURVE",
"667 332 CURVE SMOOTH",
"696 347 OFFCURVE",
"721 351 OFFCURVE",
"745 351 CURVE SMOOTH",
"782 351 OFFCURVE",
"805 330 OFFCURVE",
"805 295 CURVE SMOOTH",
"805 256 OFFCURVE",
"783 221 OFFCURVE",
"763 185 CURVE SMOOTH",
"750 162 OFFCURVE",
"738 139 OFFCURVE",
"726 117 CURVE SMOOTH",
"713 94 OFFCURVE",
"707 73 OFFCURVE",
"707 54 CURVE SMOOTH",
"707 10 OFFCURVE",
"736 -16 OFFCURVE",
"783 -16 CURVE SMOOTH",
"836 -16 OFFCURVE",
"881 13 OFFCURVE",
"936 66 CURVE SMOOTH",
"985 113 OFFCURVE",
"1036 177 OFFCURVE",
"1089 260 CURVE",
"1083 265 LINE"
);
}
);
width = 937;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2018-11-27 04:22:21 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"805 182 LINE",
"964 182 LINE",
"964 218 LINE",
"805 218 LINE"
);
},
{
closed = 1;
nodes = (
"1027 182 OFFCURVE",
"975 119 OFFCURVE",
"932 78 CURVE SMOOTH",
"871 19 OFFCURVE",
"834 0 OFFCURVE",
"802 0 CURVE SMOOTH",
"775 0 OFFCURVE",
"760 18 OFFCURVE",
"760 41 CURVE SMOOTH",
"760 54 OFFCURVE",
"765 71 OFFCURVE",
"775 92 CURVE SMOOTH",
"780 103 OFFCURVE",
"814 160 OFFCURVE",
"818 167 CURVE SMOOTH",
"841 207 OFFCURVE",
"859 241 OFFCURVE",
"859 282 CURVE SMOOTH",
"859 330 OFFCURVE",
"824 362 OFFCURVE",
"764 362 CURVE SMOOTH",
"729 362 OFFCURVE",
"704 357 OFFCURVE",
"677 348 CURVE SMOOTH",
"666 344 OFFCURVE",
"656 339 OFFCURVE",
"647 333 CURVE",
"638 326 OFFCURVE",
"629 321 OFFCURVE",
"622 316 CURVE",
"620 317 LINE",
"629 332 OFFCURVE",
"638 347 OFFCURVE",
"647 362 CURVE SMOOTH",
"674 407 LINE SMOOTH",
"688 430 OFFCURVE",
"702 452 OFFCURVE",
"717 473 CURVE",
"745 468 OFFCURVE",
"774 466 OFFCURVE",
"803 463 CURVE",
"815 462 LINE",
"803 459 OFFCURVE",
"791 455 OFFCURVE",
"779 452 CURVE",
"786 444 LINE",
"793 448 OFFCURVE",
"800 451 OFFCURVE",
"808 454 CURVE SMOOTH",
"819 458 OFFCURVE",
"830 461 OFFCURVE",
"843 462 CURVE SMOOTH",
"852 463 OFFCURVE",
"858 464 OFFCURVE",
"863 464 CURVE SMOOTH",
"879 464 LINE SMOOTH",
"902 464 OFFCURVE",
"916 466 OFFCURVE",
"916 481 CURVE SMOOTH",
"916 487 OFFCURVE",
"911 490 OFFCURVE",
"901 490 CURVE SMOOTH",
"888 490 OFFCURVE",
"876 488 OFFCURVE",
"865 483 CURVE SMOOTH",
"850 477 OFFCURVE",
"827 476 OFFCURVE",
"803 476 CURVE SMOOTH",
"776 476 OFFCURVE",
"752 484 OFFCURVE",
"728 489 CURVE SMOOTH",
"677 502 LINE",
"655 509 OFFCURVE",
"634 515 OFFCURVE",
"615 523 CURVE SMOOTH",
"492 571 OFFCURVE",
"427 637 OFFCURVE",
"427 716 CURVE SMOOTH",
"427 765 OFFCURVE",
"458 802 OFFCURVE",
"509 802 CURVE SMOOTH",
"552 802 OFFCURVE",
"596 784 OFFCURVE",
"624 757 CURVE SMOOTH",
"639 743 OFFCURVE",
"651 729 OFFCURVE",
"657 714 CURVE SMOOTH",
"662 702 OFFCURVE",
"666 689 OFFCURVE",
"667 676 CURVE",
"667 664 LINE",
"666 651 OFFCURVE",
"663 638 OFFCURVE",
"656 624 CURVE",
"668 623 LINE",
"673 632 OFFCURVE",
"676 640 OFFCURVE",
"677 647 CURVE",
"678 652 OFFCURVE",
"679 658 OFFCURVE",
"679 664 CURVE SMOOTH",
"679 676 LINE",
"677 709 OFFCURVE",
"661 739 OFFCURVE",
"631 765 CURVE SMOOTH",
"598 794 OFFCURVE",
"553 814 OFFCURVE",
"498 814 CURVE SMOOTH",
"426 814 OFFCURVE",
"373 769 OFFCURVE",
"373 707 CURVE SMOOTH",
"373 632 OFFCURVE",
"422 570 OFFCURVE",
"541 521 CURVE SMOOTH",
"579 505 OFFCURVE",
"620 493 OFFCURVE",
"663 484 CURVE",
"659 479 LINE",
"642 455 OFFCURVE",
"625 428 OFFCURVE",
"606 399 CURVE SMOOTH",
"567 338 OFFCURVE",
"531 280 OFFCURVE",
"498 226 CURVE SMOOTH",
"465 171 OFFCURVE",
"430 124 OFFCURVE",
"395 84 CURVE SMOOTH",
"356 41 OFFCURVE",
"307 4 OFFCURVE",
"258 4 CURVE SMOOTH",
"221 4 OFFCURVE",
"199 14 OFFCURVE",
"191 35 CURVE",
"212 35 OFFCURVE",
"222 47 OFFCURVE",
"222 66 CURVE SMOOTH",
"222 86 OFFCURVE",
"210 99 OFFCURVE",
"189 99 CURVE SMOOTH",
"164 99 OFFCURVE",
"148 83 OFFCURVE",
"148 58 CURVE SMOOTH",
"148 21 OFFCURVE",
"192 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"316 -8 OFFCURVE",
"376 20 OFFCURVE",
"433 71 CURVE SMOOTH",
"472 106 OFFCURVE",
"507 148 OFFCURVE",
"544 200 CURVE SMOOTH",
"563 225 OFFCURVE",
"579 250 OFFCURVE",
"596 277 CURVE",
"616 298 OFFCURVE",
"643 319 OFFCURVE",
"667 332 CURVE SMOOTH",
"696 347 OFFCURVE",
"721 351 OFFCURVE",
"745 351 CURVE SMOOTH",
"782 351 OFFCURVE",
"805 330 OFFCURVE",
"805 295 CURVE SMOOTH",
"805 256 OFFCURVE",
"783 221 OFFCURVE",
"763 185 CURVE SMOOTH",
"750 162 OFFCURVE",
"738 139 OFFCURVE",
"726 117 CURVE SMOOTH",
"713 94 OFFCURVE",
"707 73 OFFCURVE",
"707 54 CURVE SMOOTH",
"707 10 OFFCURVE",
"736 -16 OFFCURVE",
"783 -16 CURVE SMOOTH",
"836 -16 OFFCURVE",
"881 13 OFFCURVE",
"936 66 CURVE SMOOTH",
"985 113 OFFCURVE",
"1036 177 OFFCURVE",
"1089 260 CURVE",
"1083 265 LINE"
);
}
);
width = 937;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2018-11-27 04:22:21 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1027 182 OFFCURVE",
"975 119 OFFCURVE",
"932 78 CURVE SMOOTH",
"871 19 OFFCURVE",
"834 0 OFFCURVE",
"802 0 CURVE SMOOTH",
"775 0 OFFCURVE",
"760 18 OFFCURVE",
"760 41 CURVE SMOOTH",
"760 54 OFFCURVE",
"765 71 OFFCURVE",
"775 92 CURVE SMOOTH",
"780 103 OFFCURVE",
"814 160 OFFCURVE",
"818 167 CURVE SMOOTH",
"841 207 OFFCURVE",
"859 241 OFFCURVE",
"859 282 CURVE SMOOTH",
"859 330 OFFCURVE",
"824 362 OFFCURVE",
"764 362 CURVE SMOOTH",
"729 362 OFFCURVE",
"704 357 OFFCURVE",
"677 348 CURVE SMOOTH",
"666 344 OFFCURVE",
"656 339 OFFCURVE",
"647 333 CURVE",
"638 326 OFFCURVE",
"629 321 OFFCURVE",
"622 316 CURVE",
"620 317 LINE",
"674 407 LINE SMOOTH",
"688 430 OFFCURVE",
"702 452 OFFCURVE",
"717 473 CURVE",
"745 468 OFFCURVE",
"774 466 OFFCURVE",
"803 463 CURVE SMOOTH",
"815 462 LINE",
"803 459 OFFCURVE",
"791 455 OFFCURVE",
"779 452 CURVE",
"786 444 LINE",
"793 448 OFFCURVE",
"800 451 OFFCURVE",
"808 454 CURVE SMOOTH",
"819 458 OFFCURVE",
"830 461 OFFCURVE",
"843 462 CURVE SMOOTH",
"852 463 OFFCURVE",
"858 464 OFFCURVE",
"863 464 CURVE SMOOTH",
"879 464 LINE SMOOTH",
"902 464 OFFCURVE",
"916 466 OFFCURVE",
"916 481 CURVE SMOOTH",
"916 487 OFFCURVE",
"911 490 OFFCURVE",
"901 490 CURVE SMOOTH",
"888 490 OFFCURVE",
"876 488 OFFCURVE",
"865 483 CURVE",
"850 477 OFFCURVE",
"827 476 OFFCURVE",
"803 476 CURVE SMOOTH",
"776 476 OFFCURVE",
"752 484 OFFCURVE",
"728 489 CURVE",
"677 502 LINE",
"655 509 OFFCURVE",
"634 515 OFFCURVE",
"615 523 CURVE SMOOTH",
"492 571 OFFCURVE",
"427 637 OFFCURVE",
"427 716 CURVE SMOOTH",
"427 765 OFFCURVE",
"458 802 OFFCURVE",
"509 802 CURVE SMOOTH",
"552 802 OFFCURVE",
"596 784 OFFCURVE",
"624 757 CURVE SMOOTH",
"639 743 OFFCURVE",
"651 729 OFFCURVE",
"657 714 CURVE SMOOTH",
"662 702 OFFCURVE",
"666 689 OFFCURVE",
"667 676 CURVE",
"667 664 LINE",
"666 651 OFFCURVE",
"663 638 OFFCURVE",
"656 624 CURVE",
"668 623 LINE",
"673 632 OFFCURVE",
"676 640 OFFCURVE",
"677 647 CURVE",
"678 652 OFFCURVE",
"679 658 OFFCURVE",
"679 664 CURVE SMOOTH",
"679 676 LINE",
"677 709 OFFCURVE",
"661 739 OFFCURVE",
"631 765 CURVE SMOOTH",
"598 794 OFFCURVE",
"553 814 OFFCURVE",
"498 814 CURVE SMOOTH",
"426 814 OFFCURVE",
"373 769 OFFCURVE",
"373 707 CURVE SMOOTH",
"373 632 OFFCURVE",
"422 570 OFFCURVE",
"541 521 CURVE SMOOTH",
"579 505 OFFCURVE",
"620 493 OFFCURVE",
"663 484 CURVE",
"659 479 LINE",
"642 455 OFFCURVE",
"625 428 OFFCURVE",
"606 399 CURVE SMOOTH",
"567 338 OFFCURVE",
"531 280 OFFCURVE",
"498 226 CURVE SMOOTH",
"465 171 OFFCURVE",
"430 124 OFFCURVE",
"395 84 CURVE SMOOTH",
"356 41 OFFCURVE",
"307 4 OFFCURVE",
"258 4 CURVE SMOOTH",
"221 4 OFFCURVE",
"199 14 OFFCURVE",
"191 35 CURVE",
"212 35 OFFCURVE",
"222 47 OFFCURVE",
"222 66 CURVE SMOOTH",
"222 86 OFFCURVE",
"210 99 OFFCURVE",
"189 99 CURVE SMOOTH",
"164 99 OFFCURVE",
"148 83 OFFCURVE",
"148 58 CURVE SMOOTH",
"148 21 OFFCURVE",
"192 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"316 -8 OFFCURVE",
"376 20 OFFCURVE",
"433 71 CURVE SMOOTH",
"472 106 OFFCURVE",
"507 148 OFFCURVE",
"544 200 CURVE SMOOTH",
"563 225 OFFCURVE",
"579 250 OFFCURVE",
"596 277 CURVE",
"616 298 OFFCURVE",
"643 319 OFFCURVE",
"667 332 CURVE SMOOTH",
"696 347 OFFCURVE",
"721 351 OFFCURVE",
"745 351 CURVE SMOOTH",
"782 351 OFFCURVE",
"805 330 OFFCURVE",
"805 295 CURVE SMOOTH",
"805 256 OFFCURVE",
"783 221 OFFCURVE",
"763 185 CURVE SMOOTH",
"750 162 OFFCURVE",
"740 139 OFFCURVE",
"730 117 CURVE",
"675 -17 OFFCURVE",
"650 -50 OFFCURVE",
"650 -94 CURVE SMOOTH",
"650 -108 LINE",
"822 -108 LINE",
"822 -90 LINE",
"683 -90 LINE SMOOTH",
"659 -90 OFFCURVE",
"675 -65 OFFCURVE",
"712 25 CURVE",
"722 -1 OFFCURVE",
"747 -16 OFFCURVE",
"783 -16 CURVE SMOOTH",
"836 -16 OFFCURVE",
"881 13 OFFCURVE",
"936 66 CURVE SMOOTH",
"985 113 OFFCURVE",
"1036 177 OFFCURVE",
"1089 260 CURVE",
"1083 265 LINE"
);
}
);
width = 914;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2018-11-27 04:22:21 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"434 186 LINE",
"437 191 OFFCURVE",
"441 195 OFFCURVE",
"444 200 CURVE SMOOTH",
"463 225 OFFCURVE",
"479 250 OFFCURVE",
"496 277 CURVE",
"516 298 OFFCURVE",
"543 319 OFFCURVE",
"567 332 CURVE SMOOTH",
"596 347 OFFCURVE",
"621 351 OFFCURVE",
"645 351 CURVE SMOOTH",
"682 351 OFFCURVE",
"705 330 OFFCURVE",
"705 295 CURVE SMOOTH",
"705 256 OFFCURVE",
"683 221 OFFCURVE",
"663 185 CURVE SMOOTH",
"650 162 OFFCURVE",
"638 139 OFFCURVE",
"626 117 CURVE SMOOTH",
"613 94 OFFCURVE",
"607 73 OFFCURVE",
"607 54 CURVE SMOOTH",
"607 10 OFFCURVE",
"636 -16 OFFCURVE",
"683 -16 CURVE SMOOTH",
"736 -16 OFFCURVE",
"781 13 OFFCURVE",
"836 66 CURVE SMOOTH",
"885 113 OFFCURVE",
"936 177 OFFCURVE",
"989 260 CURVE",
"983 265 LINE",
"927 182 OFFCURVE",
"875 119 OFFCURVE",
"832 78 CURVE SMOOTH",
"771 19 OFFCURVE",
"734 0 OFFCURVE",
"702 0 CURVE SMOOTH",
"675 0 OFFCURVE",
"660 18 OFFCURVE",
"660 41 CURVE SMOOTH",
"660 54 OFFCURVE",
"665 71 OFFCURVE",
"675 92 CURVE SMOOTH",
"680 103 OFFCURVE",
"714 160 OFFCURVE",
"718 167 CURVE SMOOTH",
"741 207 OFFCURVE",
"759 241 OFFCURVE",
"759 282 CURVE SMOOTH",
"759 330 OFFCURVE",
"724 362 OFFCURVE",
"664 362 CURVE SMOOTH",
"629 362 OFFCURVE",
"604 357 OFFCURVE",
"577 348 CURVE SMOOTH",
"566 344 OFFCURVE",
"556 339 OFFCURVE",
"547 333 CURVE",
"538 326 OFFCURVE",
"529 321 OFFCURVE",
"522 316 CURVE",
"520 317 LINE",
"529 332 OFFCURVE",
"538 347 OFFCURVE",
"547 362 CURVE SMOOTH",
"574 407 LINE SMOOTH",
"588 430 OFFCURVE",
"602 452 OFFCURVE",
"617 473 CURVE",
"645 468 OFFCURVE",
"674 466 OFFCURVE",
"703 463 CURVE",
"715 462 LINE",
"703 459 OFFCURVE",
"691 455 OFFCURVE",
"679 452 CURVE",
"686 444 LINE",
"693 448 OFFCURVE",
"700 451 OFFCURVE",
"708 454 CURVE SMOOTH",
"719 458 OFFCURVE",
"730 461 OFFCURVE",
"743 462 CURVE SMOOTH",
"752 463 OFFCURVE",
"758 464 OFFCURVE",
"763 464 CURVE SMOOTH",
"779 464 LINE SMOOTH",
"802 464 OFFCURVE",
"816 466 OFFCURVE",
"816 481 CURVE SMOOTH",
"816 487 OFFCURVE",
"811 490 OFFCURVE",
"801 490 CURVE SMOOTH",
"788 490 OFFCURVE",
"776 488 OFFCURVE",
"765 483 CURVE SMOOTH",
"750 477 OFFCURVE",
"727 476 OFFCURVE",
"703 476 CURVE SMOOTH",
"676 476 OFFCURVE",
"652 484 OFFCURVE",
"628 489 CURVE SMOOTH",
"577 502 LINE",
"555 509 OFFCURVE",
"534 515 OFFCURVE",
"515 523 CURVE SMOOTH",
"392 571 OFFCURVE",
"327 637 OFFCURVE",
"327 716 CURVE SMOOTH",
"327 765 OFFCURVE",
"358 802 OFFCURVE",
"409 802 CURVE SMOOTH",
"452 802 OFFCURVE",
"496 784 OFFCURVE",
"524 757 CURVE SMOOTH",
"539 743 OFFCURVE",
"551 729 OFFCURVE",
"557 714 CURVE SMOOTH",
"562 702 OFFCURVE",
"566 689 OFFCURVE",
"567 676 CURVE",
"567 664 LINE",
"566 651 OFFCURVE",
"563 638 OFFCURVE",
"556 624 CURVE",
"568 623 LINE",
"573 632 OFFCURVE",
"576 640 OFFCURVE",
"577 647 CURVE",
"578 652 OFFCURVE",
"579 658 OFFCURVE",
"579 664 CURVE SMOOTH",
"579 676 LINE",
"577 709 OFFCURVE",
"561 739 OFFCURVE",
"531 765 CURVE SMOOTH",
"498 794 OFFCURVE",
"453 814 OFFCURVE",
"398 814 CURVE SMOOTH",
"326 814 OFFCURVE",
"273 769 OFFCURVE",
"273 707 CURVE SMOOTH",
"273 632 OFFCURVE",
"322 570 OFFCURVE",
"441 521 CURVE SMOOTH",
"479 505 OFFCURVE",
"520 493 OFFCURVE",
"563 484 CURVE",
"559 479 LINE",
"542 455 OFFCURVE",
"525 428 OFFCURVE",
"506 399 CURVE SMOOTH",
"469 341 OFFCURVE",
"435 287 OFFCURVE",
"404 235 CURVE"
);
}
);
width = 837;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2018-11-27 04:22:22 +0000";
layers = (
{
anchors = (
{
name = _part.he;
position = "{464, 10}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1027 182 OFFCURVE",
"975 119 OFFCURVE",
"932 78 CURVE SMOOTH",
"920 67 OFFCURVE",
"910 57 OFFCURVE",
"900 49 CURVE",
"909 62 OFFCURVE",
"915 76 OFFCURVE",
"915 90 CURVE SMOOTH",
"915 118 OFFCURVE",
"895 135 OFFCURVE",
"857 135 CURVE SMOOTH",
"834 135 OFFCURVE",
"816 127 OFFCURVE",
"801 112 CURVE",
"795 105 LINE",
"803 102 LINE",
"805 104 OFFCURVE",
"806 106 OFFCURVE",
"809 108 CURVE SMOOTH",
"824 118 OFFCURVE",
"840 127 OFFCURVE",
"856 127 CURVE SMOOTH",
"881 127 OFFCURVE",
"896 117 OFFCURVE",
"896 92 CURVE SMOOTH",
"896 56 OFFCURVE",
"867 25 OFFCURVE",
"831 6 CURVE",
"830 5 OFFCURVE",
"828 4 OFFCURVE",
"827 4 CURVE",
"818 1 OFFCURVE",
"810 0 OFFCURVE",
"802 0 CURVE SMOOTH",
"775 0 OFFCURVE",
"760 18 OFFCURVE",
"760 41 CURVE SMOOTH",
"760 54 OFFCURVE",
"765 71 OFFCURVE",
"775 92 CURVE SMOOTH",
"780 103 OFFCURVE",
"814 160 OFFCURVE",
"818 167 CURVE SMOOTH",
"841 207 OFFCURVE",
"859 241 OFFCURVE",
"859 282 CURVE SMOOTH",
"859 330 OFFCURVE",
"824 362 OFFCURVE",
"764 362 CURVE SMOOTH",
"729 362 OFFCURVE",
"704 357 OFFCURVE",
"677 348 CURVE SMOOTH",
"666 344 OFFCURVE",
"656 339 OFFCURVE",
"647 333 CURVE",
"638 326 OFFCURVE",
"629 321 OFFCURVE",
"622 316 CURVE",
"620 317 LINE",
"647 362 LINE",
"674 407 LINE SMOOTH",
"688 430 OFFCURVE",
"702 452 OFFCURVE",
"717 473 CURVE",
"745 468 OFFCURVE",
"774 466 OFFCURVE",
"803 463 CURVE SMOOTH",
"815 462 LINE",
"803 459 OFFCURVE",
"791 455 OFFCURVE",
"779 452 CURVE",
"786 444 LINE",
"793 448 OFFCURVE",
"800 451 OFFCURVE",
"808 454 CURVE SMOOTH",
"819 458 OFFCURVE",
"830 461 OFFCURVE",
"843 462 CURVE SMOOTH",
"852 463 OFFCURVE",
"858 464 OFFCURVE",
"863 464 CURVE SMOOTH",
"879 464 LINE SMOOTH",
"902 464 OFFCURVE",
"916 466 OFFCURVE",
"916 481 CURVE SMOOTH",
"916 487 OFFCURVE",
"911 490 OFFCURVE",
"901 490 CURVE SMOOTH",
"888 490 OFFCURVE",
"876 488 OFFCURVE",
"865 483 CURVE",
"850 477 OFFCURVE",
"827 476 OFFCURVE",
"803 476 CURVE SMOOTH",
"776 476 OFFCURVE",
"752 484 OFFCURVE",
"728 489 CURVE",
"677 502 LINE",
"655 509 OFFCURVE",
"634 515 OFFCURVE",
"615 523 CURVE SMOOTH",
"492 571 OFFCURVE",
"427 637 OFFCURVE",
"427 716 CURVE SMOOTH",
"427 765 OFFCURVE",
"458 802 OFFCURVE",
"509 802 CURVE SMOOTH",
"552 802 OFFCURVE",
"596 784 OFFCURVE",
"624 757 CURVE SMOOTH",
"639 743 OFFCURVE",
"651 729 OFFCURVE",
"657 714 CURVE SMOOTH",
"662 702 OFFCURVE",
"666 689 OFFCURVE",
"667 676 CURVE",
"667 664 LINE",
"666 651 OFFCURVE",
"663 638 OFFCURVE",
"656 624 CURVE",
"668 623 LINE",
"673 632 OFFCURVE",
"676 640 OFFCURVE",
"677 647 CURVE",
"678 652 OFFCURVE",
"679 658 OFFCURVE",
"679 664 CURVE SMOOTH",
"679 676 LINE",
"677 709 OFFCURVE",
"661 739 OFFCURVE",
"631 765 CURVE SMOOTH",
"598 794 OFFCURVE",
"553 814 OFFCURVE",
"498 814 CURVE SMOOTH",
"426 814 OFFCURVE",
"373 769 OFFCURVE",
"373 707 CURVE SMOOTH",
"373 632 OFFCURVE",
"422 570 OFFCURVE",
"541 521 CURVE SMOOTH",
"579 505 OFFCURVE",
"620 493 OFFCURVE",
"663 484 CURVE",
"659 479 LINE",
"642 455 OFFCURVE",
"625 428 OFFCURVE",
"606 399 CURVE SMOOTH",
"567 338 OFFCURVE",
"531 280 OFFCURVE",
"498 226 CURVE SMOOTH",
"465 171 OFFCURVE",
"430 124 OFFCURVE",
"395 84 CURVE SMOOTH",
"356 41 OFFCURVE",
"307 4 OFFCURVE",
"258 4 CURVE SMOOTH",
"221 4 OFFCURVE",
"199 14 OFFCURVE",
"191 35 CURVE",
"212 35 OFFCURVE",
"222 47 OFFCURVE",
"222 66 CURVE SMOOTH",
"222 86 OFFCURVE",
"210 99 OFFCURVE",
"189 99 CURVE SMOOTH",
"164 99 OFFCURVE",
"148 83 OFFCURVE",
"148 58 CURVE SMOOTH",
"148 21 OFFCURVE",
"192 -8 OFFCURVE",
"252 -8 CURVE SMOOTH",
"316 -8 OFFCURVE",
"376 20 OFFCURVE",
"433 71 CURVE SMOOTH",
"472 106 OFFCURVE",
"507 148 OFFCURVE",
"544 200 CURVE SMOOTH",
"563 225 OFFCURVE",
"579 250 OFFCURVE",
"596 277 CURVE",
"616 298 OFFCURVE",
"643 319 OFFCURVE",
"667 332 CURVE SMOOTH",
"696 347 OFFCURVE",
"721 351 OFFCURVE",
"745 351 CURVE SMOOTH",
"782 351 OFFCURVE",
"805 330 OFFCURVE",
"805 295 CURVE SMOOTH",
"805 256 OFFCURVE",
"783 221 OFFCURVE",
"763 185 CURVE SMOOTH",
"750 162 OFFCURVE",
"738 139 OFFCURVE",
"726 117 CURVE SMOOTH",
"713 94 OFFCURVE",
"707 73 OFFCURVE",
"707 54 CURVE SMOOTH",
"707 -1 OFFCURVE",
"753 -13 OFFCURVE",
"806 -14 CURVE SMOOTH",
"851 -15 OFFCURVE",
"889 21 OFFCURVE",
"936 66 CURVE SMOOTH",
"985 113 OFFCURVE",
"1036 177 OFFCURVE",
"1089 260 CURVE",
"1083 265 LINE"
);
}
);
width = 937;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2018-11-27 04:22:22 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"982 182 OFFCURVE",
"930 119 OFFCURVE",
"887 78 CURVE SMOOTH",
"826 19 OFFCURVE",
"789 0 OFFCURVE",
"757 0 CURVE SMOOTH",
"730 0 OFFCURVE",
"715 18 OFFCURVE",
"715 41 CURVE SMOOTH",
"715 54 OFFCURVE",
"720 71 OFFCURVE",
"730 92 CURVE SMOOTH",
"735 103 OFFCURVE",
"769 160 OFFCURVE",
"773 167 CURVE SMOOTH",
"796 207 OFFCURVE",
"814 241 OFFCURVE",
"814 282 CURVE SMOOTH",
"814 330 OFFCURVE",
"779 362 OFFCURVE",
"719 362 CURVE SMOOTH",
"684 362 OFFCURVE",
"659 357 OFFCURVE",
"632 348 CURVE SMOOTH",
"621 344 OFFCURVE",
"611 339 OFFCURVE",
"602 333 CURVE",
"593 326 OFFCURVE",
"584 321 OFFCURVE",
"577 316 CURVE",
"575 317 LINE",
"602 362 LINE",
"629 407 LINE SMOOTH",
"643 430 OFFCURVE",
"657 452 OFFCURVE",
"672 473 CURVE",
"700 468 OFFCURVE",
"729 466 OFFCURVE",
"758 463 CURVE SMOOTH",
"770 462 LINE",
"758 459 OFFCURVE",
"746 455 OFFCURVE",
"734 452 CURVE",
"741 444 LINE",
"748 448 OFFCURVE",
"755 451 OFFCURVE",
"763 454 CURVE SMOOTH",
"774 458 OFFCURVE",
"785 461 OFFCURVE",
"798 462 CURVE SMOOTH",
"807 463 OFFCURVE",
"813 464 OFFCURVE",
"818 464 CURVE SMOOTH",
"834 464 LINE SMOOTH",
"857 464 OFFCURVE",
"871 466 OFFCURVE",
"871 481 CURVE SMOOTH",
"871 487 OFFCURVE",
"866 490 OFFCURVE",
"856 490 CURVE SMOOTH",
"843 490 OFFCURVE",
"831 488 OFFCURVE",
"820 483 CURVE",
"805 477 OFFCURVE",
"782 476 OFFCURVE",
"758 476 CURVE SMOOTH",
"728 476 OFFCURVE",
"706 484 OFFCURVE",
"632 502 CURVE SMOOTH",
"620 506 OFFCURVE",
"609 509 OFFCURVE",
"598 513 CURVE",
"621 561 LINE",
"607 566 LINE SMOOTH",
"486 609 OFFCURVE",
"452 675 OFFCURVE",
"452 746 CURVE SMOOTH",
"452 795 OFFCURVE",
"483 832 OFFCURVE",
"534 832 CURVE SMOOTH",
"577 832 OFFCURVE",
"621 814 OFFCURVE",
"649 787 CURVE SMOOTH",
"664 773 OFFCURVE",
"676 759 OFFCURVE",
"682 744 CURVE SMOOTH",
"687 732 OFFCURVE",
"691 719 OFFCURVE",
"692 706 CURVE",
"692 694 LINE",
"691 681 OFFCURVE",
"688 668 OFFCURVE",
"681 654 CURVE",
"693 653 LINE",
"698 662 OFFCURVE",
"701 670 OFFCURVE",
"702 677 CURVE",
"703 682 OFFCURVE",
"704 688 OFFCURVE",
"704 694 CURVE SMOOTH",
"704 706 LINE",
"702 739 OFFCURVE",
"686 769 OFFCURVE",
"656 795 CURVE SMOOTH",
"623 824 OFFCURVE",
"578 844 OFFCURVE",
"523 844 CURVE SMOOTH",
"451 844 OFFCURVE",
"398 799 OFFCURVE",
"398 737 CURVE SMOOTH",
"398 662 OFFCURVE",
"451 595 OFFCURVE",
"566 551 CURVE SMOOTH",
"579 546 LINE",
"568 524 LINE",
"557 500 LINE",
"578 494 OFFCURVE",
"596 489 OFFCURVE",
"618 484 CURVE",
"614 479 LINE",
"597 455 OFFCURVE",
"580 428 OFFCURVE",
"561 399 CURVE SMOOTH",
"522 338 OFFCURVE",
"486 280 OFFCURVE",
"453 226 CURVE SMOOTH",
"420 171 OFFCURVE",
"385 124 OFFCURVE",
"350 84 CURVE SMOOTH",
"311 41 OFFCURVE",
"262 4 OFFCURVE",
"213 4 CURVE SMOOTH",
"176 4 OFFCURVE",
"154 14 OFFCURVE",
"146 35 CURVE",
"167 35 OFFCURVE",
"177 47 OFFCURVE",
"177 66 CURVE SMOOTH",
"177 86 OFFCURVE",
"165 99 OFFCURVE",
"144 99 CURVE SMOOTH",
"119 99 OFFCURVE",
"103 83 OFFCURVE",
"103 58 CURVE SMOOTH",
"103 21 OFFCURVE",
"147 -8 OFFCURVE",
"207 -8 CURVE SMOOTH",
"271 -8 OFFCURVE",
"331 20 OFFCURVE",
"388 71 CURVE SMOOTH",
"427 106 OFFCURVE",
"462 148 OFFCURVE",
"499 200 CURVE SMOOTH",
"518 225 OFFCURVE",
"534 250 OFFCURVE",
"551 277 CURVE",
"571 298 OFFCURVE",
"598 319 OFFCURVE",
"622 332 CURVE SMOOTH",
"651 347 OFFCURVE",
"676 351 OFFCURVE",
"700 351 CURVE SMOOTH",
"737 351 OFFCURVE",
"760 330 OFFCURVE",
"760 295 CURVE SMOOTH",
"760 256 OFFCURVE",
"738 221 OFFCURVE",
"718 185 CURVE SMOOTH",
"705 162 OFFCURVE",
"693 139 OFFCURVE",
"681 117 CURVE SMOOTH",
"668 94 OFFCURVE",
"662 73 OFFCURVE",
"662 54 CURVE SMOOTH",
"662 10 OFFCURVE",
"691 -16 OFFCURVE",
"738 -16 CURVE SMOOTH",
"791 -16 OFFCURVE",
"836 13 OFFCURVE",
"891 66 CURVE SMOOTH",
"940 113 OFFCURVE",
"991 177 OFFCURVE",
"1044 260 CURVE",
"1038 265 LINE"
);
}
);
width = 892;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2018-11-27 04:22:22 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1031 187 OFFCURVE",
"979 124 OFFCURVE",
"936 83 CURVE SMOOTH",
"875 24 OFFCURVE",
"838 5 OFFCURVE",
"806 5 CURVE SMOOTH",
"779 5 OFFCURVE",
"764 23 OFFCURVE",
"764 46 CURVE SMOOTH",
"764 59 OFFCURVE",
"769 76 OFFCURVE",
"779 97 CURVE SMOOTH",
"784 108 OFFCURVE",
"818 165 OFFCURVE",
"822 172 CURVE SMOOTH",
"845 212 OFFCURVE",
"863 246 OFFCURVE",
"863 287 CURVE SMOOTH",
"863 335 OFFCURVE",
"828 367 OFFCURVE",
"768 367 CURVE SMOOTH",
"733 367 OFFCURVE",
"708 363 OFFCURVE",
"681 353 CURVE SMOOTH",
"670 349 OFFCURVE",
"660 344 OFFCURVE",
"651 338 CURVE",
"642 331 OFFCURVE",
"633 326 OFFCURVE",
"626 321 CURVE",
"624 322 LINE",
"651 367 LINE",
"678 412 LINE SMOOTH",
"692 435 OFFCURVE",
"706 457 OFFCURVE",
"721 478 CURVE",
"749 473 OFFCURVE",
"778 471 OFFCURVE",
"807 468 CURVE SMOOTH",
"819 467 LINE",
"807 464 OFFCURVE",
"795 460 OFFCURVE",
"783 457 CURVE",
"790 449 LINE",
"797 453 OFFCURVE",
"804 456 OFFCURVE",
"812 459 CURVE SMOOTH",
"823 463 OFFCURVE",
"834 466 OFFCURVE",
"847 467 CURVE SMOOTH",
"856 468 OFFCURVE",
"862 469 OFFCURVE",
"867 469 CURVE SMOOTH",
"883 469 LINE SMOOTH",
"906 469 OFFCURVE",
"920 471 OFFCURVE",
"920 486 CURVE SMOOTH",
"920 492 OFFCURVE",
"915 495 OFFCURVE",
"905 495 CURVE SMOOTH",
"892 495 OFFCURVE",
"880 493 OFFCURVE",
"869 488 CURVE SMOOTH",
"854 481 OFFCURVE",
"831 481 OFFCURVE",
"807 481 CURVE SMOOTH",
"780 481 OFFCURVE",
"756 488 OFFCURVE",
"732 494 CURVE SMOOTH",
"681 507 LINE",
"659 514 OFFCURVE",
"638 520 OFFCURVE",
"619 528 CURVE SMOOTH",
"497 579 OFFCURVE",
"431 642 OFFCURVE",
"431 721 CURVE SMOOTH",
"431 770 OFFCURVE",
"462 807 OFFCURVE",
"513 807 CURVE SMOOTH",
"556 807 OFFCURVE",
"600 789 OFFCURVE",
"628 762 CURVE SMOOTH",
"643 748 OFFCURVE",
"655 734 OFFCURVE",
"661 719 CURVE SMOOTH",
"666 707 OFFCURVE",
"670 694 OFFCURVE",
"671 681 CURVE",
"671 669 LINE",
"670 656 OFFCURVE",
"667 643 OFFCURVE",
"660 629 CURVE",
"672 628 LINE",
"677 637 OFFCURVE",
"680 645 OFFCURVE",
"681 652 CURVE",
"682 657 OFFCURVE",
"683 663 OFFCURVE",
"683 669 CURVE SMOOTH",
"683 681 LINE",
"681 714 OFFCURVE",
"665 744 OFFCURVE",
"635 770 CURVE SMOOTH",
"602 799 OFFCURVE",
"557 819 OFFCURVE",
"502 819 CURVE SMOOTH",
"430 819 OFFCURVE",
"377 774 OFFCURVE",
"377 712 CURVE SMOOTH",
"377 637 OFFCURVE",
"426 576 OFFCURVE",
"545 526 CURVE SMOOTH",
"583 510 OFFCURVE",
"624 498 OFFCURVE",
"667 489 CURVE",
"663 484 LINE",
"646 460 OFFCURVE",
"629 433 OFFCURVE",
"610 404 CURVE SMOOTH",
"570 343 OFFCURVE",
"535 285 OFFCURVE",
"502 231 CURVE SMOOTH",
"491 212 OFFCURVE",
"467 171 OFFCURVE",
"451 145 CURVE SMOOTH",
"354 -10 LINE SMOOTH",
"339 -30 OFFCURVE",
"324 -49 OFFCURVE",
"309 -66 CURVE SMOOTH",
"297 -80 OFFCURVE",
"221 -146 OFFCURVE",
"172 -146 CURVE SMOOTH",
"135 -146 OFFCURVE",
"113 -136 OFFCURVE",
"105 -115 CURVE",
"126 -115 OFFCURVE",
"136 -103 OFFCURVE",
"136 -84 CURVE SMOOTH",
"136 -64 OFFCURVE",
"124 -51 OFFCURVE",
"103 -51 CURVE SMOOTH",
"78 -51 OFFCURVE",
"62 -67 OFFCURVE",
"62 -92 CURVE SMOOTH",
"62 -129 OFFCURVE",
"106 -158 OFFCURVE",
"166 -158 CURVE SMOOTH",
"230 -158 OFFCURVE",
"338 -86 OFFCURVE",
"347 -78 CURVE SMOOTH",
"362 -64 OFFCURVE",
"406 -13 OFFCURVE",
"410 -6 CURVE SMOOTH",
"539 199 LINE SMOOTH",
"595 287 OFFCURVE",
"609 303 OFFCURVE",
"671 337 CURVE SMOOTH",
"700 353 OFFCURVE",
"725 356 OFFCURVE",
"749 356 CURVE SMOOTH",
"786 356 OFFCURVE",
"809 335 OFFCURVE",
"809 300 CURVE SMOOTH",
"809 261 OFFCURVE",
"787 226 OFFCURVE",
"767 190 CURVE SMOOTH",
"754 167 OFFCURVE",
"742 144 OFFCURVE",
"730 122 CURVE SMOOTH",
"717 99 OFFCURVE",
"711 78 OFFCURVE",
"711 59 CURVE SMOOTH",
"711 15 OFFCURVE",
"740 -11 OFFCURVE",
"787 -11 CURVE SMOOTH",
"840 -11 OFFCURVE",
"885 18 OFFCURVE",
"940 71 CURVE SMOOTH",
"989 118 OFFCURVE",
"1040 182 OFFCURVE",
"1093 265 CURVE",
"1087 270 LINE"
);
}
);
width = 937;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2018-11-27 04:22:22 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"296 576 LINE",
"321 556 OFFCURVE",
"354 538 OFFCURVE",
"395 521 CURVE SMOOTH",
"433 505 OFFCURVE",
"474 493 OFFCURVE",
"517 484 CURVE",
"513 479 LINE",
"496 455 OFFCURVE",
"479 428 OFFCURVE",
"460 399 CURVE SMOOTH",
"421 338 OFFCURVE",
"385 280 OFFCURVE",
"352 226 CURVE SMOOTH",
"319 171 OFFCURVE",
"284 124 OFFCURVE",
"249 84 CURVE SMOOTH",
"210 41 OFFCURVE",
"161 4 OFFCURVE",
"112 4 CURVE SMOOTH",
"75 4 OFFCURVE",
"53 14 OFFCURVE",
"45 35 CURVE",
"66 35 OFFCURVE",
"76 47 OFFCURVE",
"76 66 CURVE SMOOTH",
"76 86 OFFCURVE",
"64 99 OFFCURVE",
"43 99 CURVE SMOOTH",
"18 99 OFFCURVE",
"2 83 OFFCURVE",
"2 58 CURVE SMOOTH",
"2 21 OFFCURVE",
"46 -8 OFFCURVE",
"106 -8 CURVE SMOOTH",
"170 -8 OFFCURVE",
"230 20 OFFCURVE",
"287 71 CURVE SMOOTH",
"326 106 OFFCURVE",
"361 148 OFFCURVE",
"398 200 CURVE SMOOTH",
"417 225 OFFCURVE",
"433 250 OFFCURVE",
"450 277 CURVE",
"470 298 OFFCURVE",
"497 319 OFFCURVE",
"521 332 CURVE SMOOTH",
"550 347 OFFCURVE",
"575 351 OFFCURVE",
"599 351 CURVE SMOOTH",
"636 351 OFFCURVE",
"659 330 OFFCURVE",
"659 295 CURVE SMOOTH",
"659 256 OFFCURVE",
"637 221 OFFCURVE",
"617 185 CURVE SMOOTH",
"604 162 OFFCURVE",
"592 139 OFFCURVE",
"580 117 CURVE SMOOTH",
"567 94 OFFCURVE",
"561 73 OFFCURVE",
"561 54 CURVE SMOOTH",
"561 10 OFFCURVE",
"590 -16 OFFCURVE",
"637 -16 CURVE SMOOTH",
"690 -16 OFFCURVE",
"735 13 OFFCURVE",
"790 66 CURVE SMOOTH",
"839 113 OFFCURVE",
"890 177 OFFCURVE",
"943 260 CURVE",
"937 265 LINE",
"881 182 OFFCURVE",
"829 119 OFFCURVE",
"786 78 CURVE SMOOTH",
"725 19 OFFCURVE",
"688 0 OFFCURVE",
"656 0 CURVE SMOOTH",
"629 0 OFFCURVE",
"614 18 OFFCURVE",
"614 41 CURVE SMOOTH",
"614 54 OFFCURVE",
"619 71 OFFCURVE",
"629 92 CURVE SMOOTH",
"634 103 OFFCURVE",
"668 160 OFFCURVE",
"672 167 CURVE SMOOTH",
"695 207 OFFCURVE",
"713 241 OFFCURVE",
"713 282 CURVE SMOOTH",
"713 330 OFFCURVE",
"678 362 OFFCURVE",
"618 362 CURVE SMOOTH",
"583 362 OFFCURVE",
"558 357 OFFCURVE",
"531 348 CURVE SMOOTH",
"520 344 OFFCURVE",
"510 339 OFFCURVE",
"501 333 CURVE",
"492 326 OFFCURVE",
"483 321 OFFCURVE",
"476 316 CURVE",
"474 317 LINE",
"483 332 OFFCURVE",
"492 347 OFFCURVE",
"501 362 CURVE SMOOTH",
"528 407 LINE SMOOTH",
"542 430 OFFCURVE",
"556 452 OFFCURVE",
"571 473 CURVE",
"599 468 OFFCURVE",
"628 466 OFFCURVE",
"657 463 CURVE",
"669 462 LINE",
"657 459 OFFCURVE",
"645 455 OFFCURVE",
"633 452 CURVE",
"640 444 LINE",
"647 448 OFFCURVE",
"654 451 OFFCURVE",
"662 454 CURVE SMOOTH",
"673 458 OFFCURVE",
"684 461 OFFCURVE",
"697 462 CURVE SMOOTH",
"706 463 OFFCURVE",
"712 464 OFFCURVE",
"717 464 CURVE SMOOTH",
"733 464 LINE SMOOTH",
"756 464 OFFCURVE",
"770 466 OFFCURVE",
"770 481 CURVE SMOOTH",
"770 487 OFFCURVE",
"765 490 OFFCURVE",
"755 490 CURVE SMOOTH",
"742 490 OFFCURVE",
"730 488 OFFCURVE",
"719 483 CURVE SMOOTH",
"704 477 OFFCURVE",
"681 476 OFFCURVE",
"657 476 CURVE SMOOTH",
"630 476 OFFCURVE",
"606 484 OFFCURVE",
"582 489 CURVE SMOOTH",
"531 502 LINE",
"509 509 OFFCURVE",
"488 515 OFFCURVE",
"469 523 CURVE SMOOTH",
"428 539 OFFCURVE",
"394 557 OFFCURVE",
"367 576 CURVE"
);
},
{
closed = 1;
nodes = (
"238 543 LINE",
"588 543 LINE",
"588 583 LINE",
"238 583 LINE"
);
},
{
closed = 1;
nodes = (
"535 544 LINE",
"478 584 OFFCURVE",
"449 631 OFFCURVE",
"449 684 CURVE SMOOTH",
"449 733 OFFCURVE",
"480 770 OFFCURVE",
"531 770 CURVE SMOOTH",
"574 770 OFFCURVE",
"618 752 OFFCURVE",
"646 725 CURVE SMOOTH",
"661 711 OFFCURVE",
"673 697 OFFCURVE",
"679 682 CURVE SMOOTH",
"684 670 OFFCURVE",
"688 657 OFFCURVE",
"689 644 CURVE",
"689 632 LINE",
"688 619 OFFCURVE",
"685 606 OFFCURVE",
"678 592 CURVE",
"690 591 LINE",
"695 600 OFFCURVE",
"698 608 OFFCURVE",
"699 615 CURVE",
"700 620 OFFCURVE",
"701 626 OFFCURVE",
"701 632 CURVE SMOOTH",
"701 644 LINE",
"699 677 OFFCURVE",
"683 707 OFFCURVE",
"653 733 CURVE SMOOTH",
"620 762 OFFCURVE",
"575 782 OFFCURVE",
"520 782 CURVE SMOOTH",
"448 782 OFFCURVE",
"395 737 OFFCURVE",
"395 675 CURVE SMOOTH",
"395 626 OFFCURVE",
"416 582 OFFCURVE",
"464 544 CURVE"
);
}
);
width = 791;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2018-11-27 04:22:23 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2018-11-27 04:22:23 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"889 324 LINE",
"1048 324 LINE",
"1048 360 LINE",
"889 360 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2018-11-27 04:22:23 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"714 124 LINE",
"713 122 OFFCURVE",
"712 119 OFFCURVE",
"711 117 CURVE",
"656 -17 OFFCURVE",
"631 -50 OFFCURVE",
"631 -94 CURVE SMOOTH",
"631 -108 LINE",
"803 -108 LINE",
"803 -90 LINE",
"664 -90 LINE SMOOTH",
"640 -90 OFFCURVE",
"656 -65 OFFCURVE",
"693 25 CURVE",
"696 18 OFFCURVE",
"699 12 OFFCURVE",
"704 7 CURVE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 945;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2018-11-27 04:22:23 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"571 221 LINE",
"583 239 OFFCURVE",
"595 258 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE",
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"539 275 OFFCURVE",
"535 267 OFFCURVE",
"530 259 CURVE"
);
}
);
width = 929;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2018-11-27 04:22:24 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"822 -3 LINE",
"826 -1 OFFCURVE",
"831 2 OFFCURVE",
"835 4 CURVE SMOOTH",
"871 24 OFFCURVE",
"901 57 OFFCURVE",
"901 89 CURVE SMOOTH",
"901 117 OFFCURVE",
"881 134 OFFCURVE",
"843 134 CURVE SMOOTH",
"820 134 OFFCURVE",
"802 126 OFFCURVE",
"787 111 CURVE SMOOTH",
"785 109 OFFCURVE",
"783 106 OFFCURVE",
"781 104 CURVE",
"789 101 LINE",
"791 103 OFFCURVE",
"792 105 OFFCURVE",
"795 107 CURVE SMOOTH",
"810 117 OFFCURVE",
"826 126 OFFCURVE",
"842 126 CURVE SMOOTH",
"867 126 OFFCURVE",
"882 116 OFFCURVE",
"882 91 CURVE SMOOTH",
"882 55 OFFCURVE",
"853 24 OFFCURVE",
"817 5 CURVE SMOOTH",
"807 0 OFFCURVE",
"795 -5 OFFCURVE",
"782 -9 CURVE"
);
}
);
width = 929;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2018-11-27 04:22:24 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"617 404 OFFCURVE",
"597 372 OFFCURVE",
"577 339 CURVE SMOOTH",
"571 329 LINE",
"630 316 LINE",
"623 305 OFFCURVE",
"617 294 OFFCURVE",
"610 282 CURVE SMOOTH",
"550 178 OFFCURVE",
"491 90 OFFCURVE",
"431 36 CURVE SMOOTH",
"400 8 OFFCURVE",
"368 -5 OFFCURVE",
"333 -5 CURVE SMOOTH",
"302 -5 OFFCURVE",
"275 12 OFFCURVE",
"271 29 CURVE",
"290 28 OFFCURVE",
"299 46 OFFCURVE",
"299 62 CURVE SMOOTH",
"299 79 OFFCURVE",
"287 93 OFFCURVE",
"268 93 CURVE SMOOTH",
"243 93 OFFCURVE",
"227 77 OFFCURVE",
"227 53 CURVE SMOOTH",
"227 6 OFFCURVE",
"277 -17 OFFCURVE",
"322 -17 CURVE SMOOTH",
"418 -17 OFFCURVE",
"497 45 OFFCURVE",
"570 132 CURVE SMOOTH",
"606 175 OFFCURVE",
"641 222 OFFCURVE",
"673 276 CURVE SMOOTH",
"684 295 OFFCURVE",
"690 305 OFFCURVE",
"704 326 CURVE",
"645 338 LINE",
"695 422 OFFCURVE",
"745 503 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2018-11-27 04:22:24 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"610 393 OFFCURVE",
"550 291 OFFCURVE",
"531 260 CURVE SMOOTH",
"297 -111 LINE",
"345 -140 LINE",
"607 277 LINE SMOOTH",
"673 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2018-11-27 04:22:24 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"610 393 OFFCURVE",
"550 292 OFFCURVE",
"531 260 CURVE SMOOTH",
"350 -42 LINE",
"405 -63 LINE",
"607 277 LINE SMOOTH",
"671 384 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"142 -92 LINE",
"185 -61 OFFCURVE",
"233 -42 OFFCURVE",
"288 -42 CURVE SMOOTH",
"392 -42 OFFCURVE",
"427 -93 OFFCURVE",
"427 -137 CURVE",
"424 -136 OFFCURVE",
"421 -136 OFFCURVE",
"417 -136 CURVE SMOOTH",
"398 -136 OFFCURVE",
"389 -152 OFFCURVE",
"389 -171 CURVE SMOOTH",
"389 -191 OFFCURVE",
"401 -206 OFFCURVE",
"422 -206 CURVE SMOOTH",
"451 -206 OFFCURVE",
"467 -179 OFFCURVE",
"467 -152 CURVE SMOOTH",
"467 -70 OFFCURVE",
"370 -30 OFFCURVE",
"293 -30 CURVE SMOOTH",
"228 -30 OFFCURVE",
"171 -47 OFFCURVE",
"121 -75 CURVE"
);
}
);
width = 929;
}
);
unicode = 12AF;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2018-11-27 04:22:25 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"610 393 OFFCURVE",
"550 292 OFFCURVE",
"531 260 CURVE SMOOTH",
"350 -42 LINE",
"405 -63 LINE",
"607 277 LINE SMOOTH",
"671 384 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"417 -47 OFFCURVE",
"360 -30 OFFCURVE",
"295 -30 CURVE SMOOTH",
"218 -30 OFFCURVE",
"121 -70 OFFCURVE",
"121 -152 CURVE SMOOTH",
"121 -179 OFFCURVE",
"137 -206 OFFCURVE",
"166 -206 CURVE SMOOTH",
"187 -206 OFFCURVE",
"199 -191 OFFCURVE",
"199 -171 CURVE SMOOTH",
"199 -152 OFFCURVE",
"190 -136 OFFCURVE",
"171 -136 CURVE SMOOTH",
"167 -136 OFFCURVE",
"164 -136 OFFCURVE",
"161 -137 CURVE",
"161 -93 OFFCURVE",
"196 -42 OFFCURVE",
"300 -42 CURVE SMOOTH",
"355 -42 OFFCURVE",
"403 -61 OFFCURVE",
"446 -92 CURVE",
"467 -75 LINE"
);
}
);
width = 929;
}
);
unicode = 12B3;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2018-11-27 04:22:25 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2018-11-27 04:22:25 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"889 324 LINE",
"1048 324 LINE",
"1048 360 LINE",
"889 360 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2018-11-27 04:22:25 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"714 124 LINE",
"713 122 OFFCURVE",
"712 119 OFFCURVE",
"711 117 CURVE",
"656 -17 OFFCURVE",
"631 -50 OFFCURVE",
"631 -94 CURVE SMOOTH",
"631 -108 LINE",
"803 -108 LINE",
"803 -90 LINE",
"664 -90 LINE SMOOTH",
"640 -90 OFFCURVE",
"656 -65 OFFCURVE",
"693 25 CURVE",
"696 18 OFFCURVE",
"699 12 OFFCURVE",
"704 7 CURVE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 945;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2018-11-27 04:22:26 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"571 221 LINE",
"583 239 OFFCURVE",
"595 258 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE",
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"539 275 OFFCURVE",
"535 267 OFFCURVE",
"530 259 CURVE"
);
}
);
width = 929;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2018-11-27 04:22:26 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"605 386 OFFCURVE",
"573 335 OFFCURVE",
"544 283 CURVE SMOOTH",
"484 179 OFFCURVE",
"425 91 OFFCURVE",
"365 37 CURVE SMOOTH",
"334 10 OFFCURVE",
"302 -4 OFFCURVE",
"267 -4 CURVE SMOOTH",
"236 -4 OFFCURVE",
"209 13 OFFCURVE",
"205 30 CURVE",
"224 29 OFFCURVE",
"233 47 OFFCURVE",
"233 63 CURVE SMOOTH",
"233 80 OFFCURVE",
"221 94 OFFCURVE",
"202 94 CURVE SMOOTH",
"177 94 OFFCURVE",
"161 78 OFFCURVE",
"161 54 CURVE SMOOTH",
"161 7 OFFCURVE",
"211 -16 OFFCURVE",
"256 -16 CURVE SMOOTH",
"352 -16 OFFCURVE",
"432 45 OFFCURVE",
"504 133 CURVE SMOOTH",
"540 176 OFFCURVE",
"574 224 OFFCURVE",
"607 277 CURVE SMOOTH",
"671 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"822 -3 LINE",
"826 -1 OFFCURVE",
"831 2 OFFCURVE",
"835 4 CURVE SMOOTH",
"871 24 OFFCURVE",
"901 57 OFFCURVE",
"901 89 CURVE SMOOTH",
"901 117 OFFCURVE",
"881 134 OFFCURVE",
"843 134 CURVE SMOOTH",
"820 134 OFFCURVE",
"802 126 OFFCURVE",
"787 111 CURVE SMOOTH",
"785 109 OFFCURVE",
"783 106 OFFCURVE",
"781 104 CURVE",
"789 101 LINE",
"791 103 OFFCURVE",
"792 105 OFFCURVE",
"795 107 CURVE SMOOTH",
"810 117 OFFCURVE",
"826 126 OFFCURVE",
"842 126 CURVE SMOOTH",
"867 126 OFFCURVE",
"882 116 OFFCURVE",
"882 91 CURVE SMOOTH",
"882 55 OFFCURVE",
"853 24 OFFCURVE",
"817 5 CURVE SMOOTH",
"807 0 OFFCURVE",
"795 -5 OFFCURVE",
"782 -9 CURVE"
);
}
);
width = 929;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2018-11-27 04:22:26 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"617 404 OFFCURVE",
"597 372 OFFCURVE",
"577 339 CURVE SMOOTH",
"571 329 LINE",
"630 316 LINE",
"623 305 OFFCURVE",
"617 294 OFFCURVE",
"610 282 CURVE SMOOTH",
"550 178 OFFCURVE",
"491 90 OFFCURVE",
"431 36 CURVE SMOOTH",
"400 8 OFFCURVE",
"368 -5 OFFCURVE",
"333 -5 CURVE SMOOTH",
"302 -5 OFFCURVE",
"275 12 OFFCURVE",
"271 29 CURVE",
"290 28 OFFCURVE",
"299 46 OFFCURVE",
"299 62 CURVE SMOOTH",
"299 79 OFFCURVE",
"287 93 OFFCURVE",
"268 93 CURVE SMOOTH",
"243 93 OFFCURVE",
"227 77 OFFCURVE",
"227 53 CURVE SMOOTH",
"227 6 OFFCURVE",
"277 -17 OFFCURVE",
"322 -17 CURVE SMOOTH",
"418 -17 OFFCURVE",
"497 45 OFFCURVE",
"570 132 CURVE SMOOTH",
"606 175 OFFCURVE",
"641 222 OFFCURVE",
"673 276 CURVE SMOOTH",
"684 295 OFFCURVE",
"690 305 OFFCURVE",
"704 326 CURVE",
"645 338 LINE",
"695 422 OFFCURVE",
"745 503 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2018-11-27 04:22:26 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
},
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"610 393 OFFCURVE",
"550 291 OFFCURVE",
"531 260 CURVE SMOOTH",
"297 -111 LINE",
"345 -140 LINE",
"607 277 LINE SMOOTH",
"673 382 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
}
);
width = 929;
}
);
unicode = 12BE;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2018-11-27 04:22:26 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"727 660 LINE",
"896 660 LINE",
"896 678 LINE",
"727 678 LINE"
);
},
{
closed = 1;
nodes = (
"727 674 LINE",
"812 674 LINE",
"812 784 LINE",
"727 784 LINE"
);
},
{
closed = 1;
nodes = (
"1026 191 OFFCURVE",
"977 130 OFFCURVE",
"926 80 CURVE SMOOTH",
"867 23 OFFCURVE",
"813 -4 OFFCURVE",
"773 -4 CURVE SMOOTH",
"754 -4 OFFCURVE",
"744 7 OFFCURVE",
"744 28 CURVE SMOOTH",
"744 55 OFFCURVE",
"749 97 OFFCURVE",
"776 142 CURVE SMOOTH",
"791 167 OFFCURVE",
"813 197 OFFCURVE",
"850 241 CURVE SMOOTH",
"923 326 OFFCURVE",
"984 429 OFFCURVE",
"984 550 CURVE SMOOTH",
"984 612 OFFCURVE",
"958 646 OFFCURVE",
"893 681 CURVE SMOOTH",
"849 704 OFFCURVE",
"783 712 OFFCURVE",
"726 712 CURVE SMOOTH",
"646 712 OFFCURVE",
"560 694 OFFCURVE",
"483 662 CURVE SMOOTH",
"444 646 OFFCURVE",
"408 627 OFFCURVE",
"374 605 CURVE SMOOTH",
"306 560 OFFCURVE",
"254 505 OFFCURVE",
"225 442 CURVE SMOOTH",
"210 411 OFFCURVE",
"203 378 OFFCURVE",
"203 345 CURVE SMOOTH",
"203 261 OFFCURVE",
"257 208 OFFCURVE",
"341 208 CURVE SMOOTH",
"455 208 OFFCURVE",
"541 320 OFFCURVE",
"541 434 CURVE",
"529 434 LINE",
"529 334 OFFCURVE",
"453 220 OFFCURVE",
"342 220 CURVE SMOOTH",
"277 220 OFFCURVE",
"239 266 OFFCURVE",
"239 339 CURVE SMOOTH",
"239 415 OFFCURVE",
"271 480 OFFCURVE",
"320 534 CURVE SMOOTH",
"345 561 OFFCURVE",
"373 584 OFFCURVE",
"406 605 CURVE SMOOTH",
"471 646 OFFCURVE",
"544 674 OFFCURVE",
"618 689 CURVE SMOOTH",
"655 696 OFFCURVE",
"690 700 OFFCURVE",
"723 700 CURVE SMOOTH",
"775 700 OFFCURVE",
"833 694 OFFCURVE",
"877 671 CURVE",
"782 626 OFFCURVE",
"706 536 OFFCURVE",
"639 436 CURVE SMOOTH",
"610 393 OFFCURVE",
"550 292 OFFCURVE",
"531 260 CURVE SMOOTH",
"350 -42 LINE",
"405 -63 LINE",
"607 277 LINE SMOOTH",
"671 384 OFFCURVE",
"733 487 OFFCURVE",
"795 569 CURVE SMOOTH",
"871 670 OFFCURVE",
"930 706 OFFCURVE",
"930 575 CURVE SMOOTH",
"930 414 OFFCURVE",
"692 184 OFFCURVE",
"690 52 CURVE SMOOTH",
"689 7 OFFCURVE",
"719 -16 OFFCURVE",
"766 -16 CURVE SMOOTH",
"822 -16 OFFCURVE",
"883 19 OFFCURVE",
"949 88 CURVE SMOOTH",
"1009 149 OFFCURVE",
"1049 211 OFFCURVE",
"1080 259 CURVE",
"1071 263 LINE"
);
},
{
closed = 1;
nodes = (
"417 -47 OFFCURVE",
"360 -30 OFFCURVE",
"295 -30 CURVE SMOOTH",
"218 -30 OFFCURVE",
"121 -70 OFFCURVE",
"121 -152 CURVE SMOOTH",
"121 -179 OFFCURVE",
"137 -206 OFFCURVE",
"166 -206 CURVE SMOOTH",
"187 -206 OFFCURVE",
"199 -191 OFFCURVE",
"199 -171 CURVE SMOOTH",
"199 -152 OFFCURVE",
"190 -136 OFFCURVE",
"171 -136 CURVE SMOOTH",
"167 -136 OFFCURVE",
"164 -136 OFFCURVE",
"161 -137 CURVE",
"161 -93 OFFCURVE",
"196 -42 OFFCURVE",
"300 -42 CURVE SMOOTH",
"355 -42 OFFCURVE",
"403 -61 OFFCURVE",
"446 -92 CURVE",
"467 -75 LINE"
);
},
{
closed = 1;
nodes = (
"673 771 LINE",
"881 771 LINE",
"877 786 LINE",
"669 786 LINE"
);
}
);
width = 929;
}
);
unicode = 12C3;
},
{
glyphname = "wa-ethiopic";
lastChange = "2018-11-27 04:22:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
}
);
width = 1233;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2018-11-27 04:22:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"725 -8 LINE",
"1105 -8 LINE",
"1105 8 LINE",
"725 7 LINE"
);
}
);
width = 1263;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2018-11-27 04:22:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"582 182 LINE",
"568 187 LINE",
"455 -94 LINE",
"455 -108 LINE",
"627 -108 LINE",
"627 -90 LINE",
"488 -90 LINE SMOOTH",
"464 -90 OFFCURVE",
"480 -65 OFFCURVE",
"517 25 CURVE"
);
},
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
}
);
width = 1233;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2018-11-27 04:22:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"582 182 LINE",
"568 187 LINE",
"421 -200 LINE",
"446 -200 LINE"
);
},
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
}
);
width = 1233;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2018-11-27 04:22:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"582 182 LINE",
"568 187 LINE",
"421 -200 LINE",
"446 -200 LINE"
);
},
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"421 -198 LINE",
"437 -200 OFFCURVE",
"453 -201 OFFCURVE",
"469 -201 CURVE SMOOTH",
"518 -201 OFFCURVE",
"570 -188 OFFCURVE",
"609 -166 CURVE SMOOTH",
"645 -146 OFFCURVE",
"675 -113 OFFCURVE",
"675 -81 CURVE SMOOTH",
"675 -53 OFFCURVE",
"655 -36 OFFCURVE",
"617 -36 CURVE SMOOTH",
"594 -36 OFFCURVE",
"576 -44 OFFCURVE",
"561 -59 CURVE SMOOTH",
"559 -61 OFFCURVE",
"557 -64 OFFCURVE",
"555 -66 CURVE",
"563 -69 LINE",
"565 -67 OFFCURVE",
"566 -65 OFFCURVE",
"569 -63 CURVE SMOOTH",
"584 -53 OFFCURVE",
"600 -44 OFFCURVE",
"616 -44 CURVE SMOOTH",
"641 -44 OFFCURVE",
"656 -54 OFFCURVE",
"656 -79 CURVE SMOOTH",
"656 -115 OFFCURVE",
"627 -146 OFFCURVE",
"591 -165 CURVE SMOOTH",
"559 -182 OFFCURVE",
"505 -193 OFFCURVE",
"470 -193 CURVE SMOOTH",
"457 -193 OFFCURVE",
"444 -193 OFFCURVE",
"432 -191 CURVE"
);
}
);
width = 1233;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2018-11-27 04:22:28 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"960 131 LINE",
"1175 131 LINE",
"1175 168 LINE",
"990 166 LINE"
);
}
);
width = 1233;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2018-11-27 04:22:28 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"404 33 LINE",
"405 34 OFFCURVE",
"406 34 OFFCURVE",
"407 35 CURVE",
"387 6 OFFCURVE",
"366 -23 OFFCURVE",
"343 -51 CURVE SMOOTH",
"294 -111 OFFCURVE",
"241 -162 OFFCURVE",
"181 -190 CURVE SMOOTH",
"166 -197 OFFCURVE",
"150 -203 OFFCURVE",
"134 -207 CURVE",
"133 -221 LINE",
"210 -211 OFFCURVE",
"272 -148 OFFCURVE",
"327 -99 CURVE SMOOTH",
"421 -14 OFFCURVE",
"470 53 OFFCURVE",
"568 173 CURVE"
);
},
{
closed = 1;
nodes = (
"1254 231 OFFCURVE",
"1200 205 OFFCURVE",
"1147 205 CURVE SMOOTH",
"1110 205 OFFCURVE",
"1081 211 OFFCURVE",
"1054 223 CURVE",
"1114 306 OFFCURVE",
"1184 454 OFFCURVE",
"1184 558 CURVE SMOOTH",
"1184 659 OFFCURVE",
"1148 712 OFFCURVE",
"1067 712 CURVE SMOOTH",
"1032 712 OFFCURVE",
"1001 696 OFFCURVE",
"981 677 CURVE",
"933 669 OFFCURVE",
"871 636 OFFCURVE",
"810 587 CURVE SMOOTH",
"782 565 OFFCURVE",
"756 540 OFFCURVE",
"730 512 CURVE",
"733 528 OFFCURVE",
"734 543 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"378 -8 OFFCURVE",
"496 86 OFFCURVE",
"568 173 CURVE",
"570 73 OFFCURVE",
"623 -8 OFFCURVE",
"726 -8 CURVE SMOOTH",
"844 -8 OFFCURVE",
"983 118 OFFCURVE",
"1048 213 CURVE",
"1075 202 OFFCURVE",
"1103 193 OFFCURVE",
"1146 193 CURVE SMOOTH",
"1196 193 OFFCURVE",
"1265 222 OFFCURVE",
"1303 263 CURVE",
"1297 270 LINE"
);
},
{
closed = 1;
nodes = (
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH",
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"496 637 OFFCURVE",
"483 616 OFFCURVE",
"471 591 CURVE",
"486 590 LINE",
"497 615 OFFCURVE",
"511 638 OFFCURVE",
"526 655 CURVE",
"529 658 OFFCURVE",
"531 661 OFFCURVE",
"534 664 CURVE SMOOTH",
"535 665 LINE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"646 342 OFFCURVE",
"575 242 CURVE SMOOTH",
"502 140 OFFCURVE",
"348 19 OFFCURVE",
"290 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"948 286 OFFCURVE",
"907 364 OFFCURVE",
"907 467 CURVE SMOOTH",
"907 542 OFFCURVE",
"945 622 OFFCURVE",
"985 665 CURVE",
"989 666 OFFCURVE",
"993 667 OFFCURVE",
"997 667 CURVE SMOOTH",
"1009 667 LINE SMOOTH",
"1069 667 OFFCURVE",
"1086 633 OFFCURVE",
"1086 583 CURVE",
"1098 583 LINE",
"1098 637 OFFCURVE",
"1079 679 OFFCURVE",
"1016 679 CURVE SMOOTH",
"1002 679 LINE",
"1000 681 LINE",
"1015 692 OFFCURVE",
"1040 700 OFFCURVE",
"1064 700 CURVE SMOOTH",
"1127 700 OFFCURVE",
"1136 639 OFFCURVE",
"1136 581 CURVE SMOOTH",
"1136 460 OFFCURVE",
"1095 338 OFFCURVE",
"1031 235 CURVE"
);
},
{
closed = 1;
nodes = (
"670 8 OFFCURVE",
"632 79 OFFCURVE",
"632 146 CURVE SMOOTH",
"632 207 OFFCURVE",
"645 270 OFFCURVE",
"668 331 CURVE",
"679 354 OFFCURVE",
"690 378 OFFCURVE",
"699 402 CURVE",
"710 424 OFFCURVE",
"723 446 OFFCURVE",
"736 466 CURVE SMOOTH",
"798 562 OFFCURVE",
"880 637 OFFCURVE",
"964 662 CURVE",
"966 660 LINE",
"915 604 OFFCURVE",
"891 519 OFFCURVE",
"891 459 CURVE SMOOTH",
"891 360 OFFCURVE",
"937 277 OFFCURVE",
"1025 225 CURVE",
"974 137 OFFCURVE",
"838 8 OFFCURVE",
"740 8 CURVE SMOOTH"
);
}
);
width = 1233;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2018-11-27 04:22:28 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"480 33 LINE",
"481 34 OFFCURVE",
"482 34 OFFCURVE",
"483 35 CURVE",
"463 6 OFFCURVE",
"442 -23 OFFCURVE",
"419 -51 CURVE SMOOTH",
"370 -111 OFFCURVE",
"317 -162 OFFCURVE",
"257 -190 CURVE SMOOTH",
"242 -197 OFFCURVE",
"226 -203 OFFCURVE",
"210 -207 CURVE",
"209 -221 LINE",
"286 -211 OFFCURVE",
"348 -148 OFFCURVE",
"403 -99 CURVE SMOOTH",
"497 -14 OFFCURVE",
"546 53 OFFCURVE",
"644 173 CURVE"
);
},
{
closed = 1;
nodes = (
"1330 231 OFFCURVE",
"1276 205 OFFCURVE",
"1223 205 CURVE SMOOTH",
"1186 205 OFFCURVE",
"1157 211 OFFCURVE",
"1130 223 CURVE",
"1190 306 OFFCURVE",
"1260 454 OFFCURVE",
"1260 558 CURVE SMOOTH",
"1260 659 OFFCURVE",
"1224 712 OFFCURVE",
"1143 712 CURVE SMOOTH",
"1108 712 OFFCURVE",
"1077 696 OFFCURVE",
"1057 677 CURVE",
"1009 669 OFFCURVE",
"947 636 OFFCURVE",
"886 587 CURVE SMOOTH",
"858 565 OFFCURVE",
"832 540 OFFCURVE",
"806 512 CURVE",
"809 528 OFFCURVE",
"810 543 OFFCURVE",
"810 558 CURVE SMOOTH",
"810 659 OFFCURVE",
"774 712 OFFCURVE",
"693 712 CURVE SMOOTH",
"658 712 OFFCURVE",
"627 696 OFFCURVE",
"607 677 CURVE",
"559 669 OFFCURVE",
"497 636 OFFCURVE",
"436 587 CURVE SMOOTH",
"405 562 OFFCURVE",
"376 534 OFFCURVE",
"347 502 CURVE SMOOTH",
"289 438 OFFCURVE",
"242 363 OFFCURVE",
"215 283 CURVE SMOOTH",
"201 242 OFFCURVE",
"194 201 OFFCURVE",
"194 160 CURVE SMOOTH",
"194 57 OFFCURVE",
"247 -8 OFFCURVE",
"352 -8 CURVE SMOOTH",
"454 -8 OFFCURVE",
"572 86 OFFCURVE",
"644 173 CURVE",
"646 73 OFFCURVE",
"699 -8 OFFCURVE",
"802 -8 CURVE SMOOTH",
"920 -8 OFFCURVE",
"1059 118 OFFCURVE",
"1124 213 CURVE",
"1151 202 OFFCURVE",
"1179 193 OFFCURVE",
"1222 193 CURVE SMOOTH",
"1272 193 OFFCURVE",
"1341 222 OFFCURVE",
"1379 263 CURVE",
"1373 270 LINE"
);
},
{
closed = 1;
nodes = (
"296 8 OFFCURVE",
"258 79 OFFCURVE",
"258 146 CURVE SMOOTH",
"258 254 OFFCURVE",
"300 370 OFFCURVE",
"362 466 CURVE SMOOTH",
"424 562 OFFCURVE",
"506 637 OFFCURVE",
"590 662 CURVE",
"592 660 LINE",
"572 637 OFFCURVE",
"559 616 OFFCURVE",
"547 591 CURVE",
"562 590 LINE",
"573 615 OFFCURVE",
"587 638 OFFCURVE",
"602 655 CURVE",
"605 658 OFFCURVE",
"607 661 OFFCURVE",
"610 664 CURVE SMOOTH",
"611 665 LINE",
"615 666 OFFCURVE",
"619 667 OFFCURVE",
"623 667 CURVE SMOOTH",
"635 667 LINE SMOOTH",
"695 667 OFFCURVE",
"712 633 OFFCURVE",
"712 583 CURVE",
"724 583 LINE",
"724 637 OFFCURVE",
"705 679 OFFCURVE",
"642 679 CURVE SMOOTH",
"628 679 LINE",
"626 681 LINE",
"641 692 OFFCURVE",
"666 700 OFFCURVE",
"690 700 CURVE SMOOTH",
"753 700 OFFCURVE",
"762 639 OFFCURVE",
"762 581 CURVE SMOOTH",
"762 460 OFFCURVE",
"722 342 OFFCURVE",
"651 242 CURVE SMOOTH",
"578 140 OFFCURVE",
"424 19 OFFCURVE",
"366 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1024 286 OFFCURVE",
"983 364 OFFCURVE",
"983 467 CURVE SMOOTH",
"983 542 OFFCURVE",
"1021 622 OFFCURVE",
"1061 665 CURVE",
"1065 666 OFFCURVE",
"1069 667 OFFCURVE",
"1073 667 CURVE SMOOTH",
"1085 667 LINE SMOOTH",
"1145 667 OFFCURVE",
"1162 633 OFFCURVE",
"1162 583 CURVE",
"1174 583 LINE",
"1174 637 OFFCURVE",
"1155 679 OFFCURVE",
"1092 679 CURVE SMOOTH",
"1078 679 LINE",
"1076 681 LINE",
"1091 692 OFFCURVE",
"1116 700 OFFCURVE",
"1140 700 CURVE SMOOTH",
"1203 700 OFFCURVE",
"1212 639 OFFCURVE",
"1212 581 CURVE SMOOTH",
"1212 460 OFFCURVE",
"1171 338 OFFCURVE",
"1107 235 CURVE"
);
},
{
closed = 1;
nodes = (
"746 8 OFFCURVE",
"708 79 OFFCURVE",
"708 146 CURVE SMOOTH",
"708 207 OFFCURVE",
"721 270 OFFCURVE",
"744 331 CURVE",
"755 354 OFFCURVE",
"766 378 OFFCURVE",
"775 402 CURVE",
"786 424 OFFCURVE",
"799 446 OFFCURVE",
"812 466 CURVE SMOOTH",
"874 562 OFFCURVE",
"956 637 OFFCURVE",
"1040 662 CURVE",
"1042 660 LINE",
"991 604 OFFCURVE",
"967 519 OFFCURVE",
"967 459 CURVE SMOOTH",
"967 360 OFFCURVE",
"1013 277 OFFCURVE",
"1101 225 CURVE",
"1050 137 OFFCURVE",
"914 8 OFFCURVE",
"816 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140 319 LINE",
"255 319 LINE",
"255 347 LINE",
"140 347 LINE"
);
}
);
width = 1309;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:28 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:29 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"500 114 LINE",
"682 114 LINE",
"682 162 LINE",
"550 162 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:29 +0000";
layers = (
{
components = (
{
name = _part.haa.cap;
transform = "{1, 0, 0, 1, -100, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 866;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:29 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"598 213 LINE",
"564 187 LINE",
"401 -174 LINE",
"420 -175 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:29 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"598 213 LINE",
"564 187 LINE",
"401 -174 LINE",
"420 -175 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
},
{
closed = 1;
nodes = (
"402 -173 LINE",
"418 -175 OFFCURVE",
"434 -176 OFFCURVE",
"450 -176 CURVE SMOOTH",
"499 -176 OFFCURVE",
"551 -163 OFFCURVE",
"590 -141 CURVE SMOOTH",
"626 -121 OFFCURVE",
"656 -88 OFFCURVE",
"656 -56 CURVE SMOOTH",
"656 -28 OFFCURVE",
"636 -11 OFFCURVE",
"598 -11 CURVE SMOOTH",
"575 -11 OFFCURVE",
"557 -19 OFFCURVE",
"542 -34 CURVE SMOOTH",
"540 -36 OFFCURVE",
"538 -39 OFFCURVE",
"536 -41 CURVE",
"544 -44 LINE",
"546 -42 OFFCURVE",
"547 -40 OFFCURVE",
"550 -38 CURVE SMOOTH",
"565 -28 OFFCURVE",
"581 -19 OFFCURVE",
"597 -19 CURVE SMOOTH",
"622 -19 OFFCURVE",
"637 -29 OFFCURVE",
"637 -54 CURVE SMOOTH",
"637 -90 OFFCURVE",
"608 -121 OFFCURVE",
"572 -140 CURVE SMOOTH",
"540 -157 OFFCURVE",
"486 -168 OFFCURVE",
"451 -168 CURVE SMOOTH",
"438 -168 OFFCURVE",
"425 -168 OFFCURVE",
"413 -166 CURVE"
);
}
);
width = 874;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:29 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"625 841 LINE",
"607 853 LINE",
"523 662 LINE",
"547 675 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2018-11-27 04:22:30 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"214 21 LINE",
"196 33 LINE",
"84 -208 LINE",
"103 -209 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2018-11-27 04:22:30 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"982 160 OFFCURVE",
"854 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2018-11-27 04:22:30 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"756 269 LINE",
"967 269 LINE",
"967 316 LINE",
"756 316 LINE"
);
},
{
closed = 1;
nodes = (
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"982 160 OFFCURVE",
"854 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2018-11-27 04:22:30 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"982 160 OFFCURVE",
"854 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE"
);
},
{
closed = 1;
nodes = (
"724 217 LINE",
"691 187 LINE",
"578 -94 LINE",
"578 -108 LINE",
"750 -108 LINE",
"750 -90 LINE",
"611 -90 LINE SMOOTH",
"587 -90 OFFCURVE",
"603 -65 OFFCURVE",
"640 25 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2018-11-27 04:22:31 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"542 211 LINE",
"572 255 OFFCURVE",
"598 299 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"982 160 OFFCURVE",
"854 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE",
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"544 321 OFFCURVE",
"526 291 OFFCURVE",
"508 261 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2018-11-27 04:22:31 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE",
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"1004 196 OFFCURVE",
"933 102 OFFCURVE",
"865 47 CURVE",
"877 61 OFFCURVE",
"884 77 OFFCURVE",
"884 93 CURVE SMOOTH",
"884 121 OFFCURVE",
"864 138 OFFCURVE",
"826 138 CURVE SMOOTH",
"803 138 OFFCURVE",
"785 130 OFFCURVE",
"770 115 CURVE",
"764 108 LINE",
"772 105 LINE",
"774 107 OFFCURVE",
"775 109 OFFCURVE",
"778 111 CURVE SMOOTH",
"793 121 OFFCURVE",
"809 130 OFFCURVE",
"825 130 CURVE SMOOTH",
"850 130 OFFCURVE",
"865 120 OFFCURVE",
"865 95 CURVE SMOOTH",
"865 49 OFFCURVE",
"808 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH"
);
}
);
width = 1005;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2018-11-27 04:22:31 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1020 696 LINE",
"1023 696 OFFCURVE",
"1027 696 OFFCURVE",
"1031 696 CURVE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1256 688 OFFCURVE",
"1279 688 CURVE SMOOTH",
"1317 688 OFFCURVE",
"1320 632 OFFCURVE",
"1353 632 CURVE SMOOTH",
"1372 632 OFFCURVE",
"1385 646 OFFCURVE",
"1385 665 CURVE SMOOTH",
"1385 694 OFFCURVE",
"1356 712 OFFCURVE",
"1328 712 CURVE SMOOTH",
"1269 712 OFFCURVE",
"1209 687 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 629 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1031 708 OFFCURVE",
"1025 708 OFFCURVE",
"1020 708 CURVE"
);
},
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
}
);
width = 1102;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2018-11-27 04:22:31 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"763 202 LINE",
"777 240 OFFCURVE",
"796 280 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE",
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"735 286 OFFCURVE",
"701 228 OFFCURVE",
"682 165 CURVE"
);
}
);
width = 892;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2018-11-27 04:22:31 +0000";
layers = (
{
components = (
{
name = _part.hwo.1;
transform = "{0.96593, -0.25882, 0.25882, 0.96593, -65, 160}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"554 531 LINE",
"561 518 OFFCURVE",
"565 506 OFFCURVE",
"565 485 CURVE SMOOTH",
"565 409 OFFCURVE",
"479 353 OFFCURVE",
"408 353 CURVE SMOOTH",
"355 353 OFFCURVE",
"325 392 OFFCURVE",
"325 436 CURVE SMOOTH",
"325 513 OFFCURVE",
"386 579 OFFCURVE",
"493 624 CURVE SMOOTH",
"600 669 OFFCURVE",
"751 696 OFFCURVE",
"934 696 CURVE",
"934 694 LINE",
"839 673 OFFCURVE",
"769 622 OFFCURVE",
"711 558 CURVE SMOOTH",
"653 494 OFFCURVE",
"605 416 OFFCURVE",
"557 341 CURVE SMOOTH",
"534 304 OFFCURVE",
"493 236 OFFCURVE",
"466 195 CURVE SMOOTH",
"450 170 OFFCURVE",
"433 146 OFFCURVE",
"416 123 CURVE SMOOTH",
"379 74 OFFCURVE",
"298 4 OFFCURVE",
"244 4 CURVE SMOOTH",
"213 4 OFFCURVE",
"186 15 OFFCURVE",
"179 35 CURVE",
"198 35 OFFCURVE",
"210 46 OFFCURVE",
"210 67 CURVE SMOOTH",
"210 86 OFFCURVE",
"197 99 OFFCURVE",
"177 99 CURVE SMOOTH",
"154 99 OFFCURVE",
"136 83 OFFCURVE",
"136 60 CURVE SMOOTH",
"136 12 OFFCURVE",
"195 -8 OFFCURVE",
"239 -8 CURVE SMOOTH",
"327 -8 OFFCURVE",
"403 46 OFFCURVE",
"467 115 CURVE SMOOTH",
"530 184 OFFCURVE",
"581 271 OFFCURVE",
"621 335 CURVE",
"765 335 LINE",
"722 264 OFFCURVE",
"668 172 OFFCURVE",
"668 78 CURVE SMOOTH",
"668 24 OFFCURVE",
"693 -16 OFFCURVE",
"752 -16 CURVE SMOOTH",
"805 -16 OFFCURVE",
"893 51 OFFCURVE",
"934 96 CURVE SMOOTH",
"974 140 OFFCURVE",
"1035 226 OFFCURVE",
"1055 262 CURVE",
"1046 266 LINE",
"982 160 OFFCURVE",
"854 0 OFFCURVE",
"766 0 CURVE SMOOTH",
"743 0 OFFCURVE",
"732 28 OFFCURVE",
"732 59 CURVE SMOOTH",
"732 132 OFFCURVE",
"766 227 OFFCURVE",
"818 320 CURVE SMOOTH",
"843 366 OFFCURVE",
"872 411 OFFCURVE",
"905 456 CURVE SMOOTH",
"969 544 OFFCURVE",
"1037 615 OFFCURVE",
"1100 657 CURVE SMOOTH",
"1131 678 OFFCURVE",
"1159 688 OFFCURVE",
"1182 688 CURVE SMOOTH",
"1220 688 OFFCURVE",
"1223 632 OFFCURVE",
"1256 632 CURVE SMOOTH",
"1275 632 OFFCURVE",
"1288 646 OFFCURVE",
"1288 665 CURVE SMOOTH",
"1288 694 OFFCURVE",
"1259 712 OFFCURVE",
"1231 712 CURVE SMOOTH",
"1172 712 OFFCURVE",
"1112 687 OFFCURVE",
"1053 648 CURVE SMOOTH",
"1024 629 OFFCURVE",
"995 607 OFFCURVE",
"968 582 CURVE SMOOTH",
"913 532 OFFCURVE",
"864 476 OFFCURVE",
"824 422 CURVE SMOOTH",
"803 395 OFFCURVE",
"785 370 OFFCURVE",
"770 347 CURVE",
"626 347 LINE",
"695 465 OFFCURVE",
"759 553 OFFCURVE",
"818 610 CURVE SMOOTH",
"876 667 OFFCURVE",
"931 696 OFFCURVE",
"983 696 CURVE SMOOTH",
"1000 696 OFFCURVE",
"1013 697 OFFCURVE",
"1022 698 CURVE SMOOTH",
"1031 699 OFFCURVE",
"1035 704 OFFCURVE",
"1035 712 CURVE SMOOTH",
"1035 720 OFFCURVE",
"1027 722 OFFCURVE",
"1020 722 CURVE SMOOTH",
"1009 722 OFFCURVE",
"997 720 OFFCURVE",
"985 715 CURVE SMOOTH",
"973 710 OFFCURVE",
"958 708 OFFCURVE",
"940 708 CURVE SMOOTH",
"837 708 OFFCURVE",
"728 701 OFFCURVE",
"629 685 CURVE SMOOTH",
"579 676 OFFCURVE",
"532 665 OFFCURVE",
"489 652 CURVE SMOOTH",
"402 625 OFFCURVE",
"336 587 OFFCURVE",
"299 535 CURVE SMOOTH",
"280 509 OFFCURVE",
"271 480 OFFCURVE",
"271 447 CURVE SMOOTH",
"271 388 OFFCURVE",
"319 341 OFFCURVE",
"402 341 CURVE SMOOTH",
"484 341 OFFCURVE",
"577 402 OFFCURVE",
"577 487 CURVE SMOOTH",
"577 504 OFFCURVE",
"573 519 OFFCURVE",
"566 532 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2018-11-27 04:22:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE"
);
}
);
width = 1102;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2018-11-27 04:22:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE"
);
},
{
closed = 1;
nodes = (
"849 258 LINE",
"1025 258 LINE",
"1025 312 LINE",
"849 312 LINE"
);
}
);
width = 1102;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2018-11-27 04:22:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE"
);
},
{
closed = 1;
nodes = (
"820 217 LINE",
"787 187 LINE",
"674 -94 LINE",
"674 -108 LINE",
"846 -108 LINE",
"846 -90 LINE",
"707 -90 LINE SMOOTH",
"683 -90 OFFCURVE",
"699 -65 OFFCURVE",
"736 25 CURVE"
);
}
);
width = 1102;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2018-11-27 04:22:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"601 159 LINE",
"647 218 OFFCURVE",
"686 284 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE",
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"633 308 OFFCURVE",
"599 250 OFFCURVE",
"572 209 CURVE"
);
}
);
width = 1102;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2018-11-27 04:22:33 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"787 708 LINE",
"787 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"765 511 OFFCURVE",
"728 456 OFFCURVE",
"692 400 CURVE",
"678 425 OFFCURVE",
"664 448 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"642 435 OFFCURVE",
"661 409 OFFCURVE",
"679 380 CURVE",
"654 341 LINE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"626 183 OFFCURVE",
"677 269 OFFCURVE",
"717 333 CURVE",
"723 335 LINE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"867 -16 OFFCURVE",
"888 -8 OFFCURVE",
"912 4 CURVE SMOOTH",
"938 17 OFFCURVE",
"1003 65 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1105 203 OFFCURVE",
"1045 121 OFFCURVE",
"983 65 CURVE",
"989 75 OFFCURVE",
"992 86 OFFCURVE",
"992 96 CURVE SMOOTH",
"992 124 OFFCURVE",
"972 141 OFFCURVE",
"934 141 CURVE SMOOTH",
"911 141 OFFCURVE",
"893 133 OFFCURVE",
"878 118 CURVE",
"872 111 LINE",
"880 108 LINE",
"882 110 OFFCURVE",
"883 112 OFFCURVE",
"886 114 CURVE SMOOTH",
"901 124 OFFCURVE",
"917 133 OFFCURVE",
"933 133 CURVE SMOOTH",
"958 133 OFFCURVE",
"973 123 OFFCURVE",
"973 98 CURVE SMOOTH",
"973 48 OFFCURVE",
"910 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE",
"1351 708 LINE"
);
}
);
width = 1102;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2018-11-27 04:22:33 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE"
);
},
{
closed = 1;
nodes = (
"921 700 LINE",
"936 700 LINE",
"936 763 LINE",
"921 763 LINE"
);
},
{
closed = 1;
nodes = (
"794 760 LINE",
"1092 760 LINE",
"1092 770 LINE",
"794 770 LINE"
);
}
);
width = 1102;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2018-11-27 04:22:33 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"856 192 LINE",
"871 233 OFFCURVE",
"891 277 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE",
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"831 284 OFFCURVE",
"794 222 OFFCURVE",
"776 156 CURVE"
);
}
);
width = 1005;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2018-11-27 04:22:33 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"726 336 LINE",
"725 338 OFFCURVE",
"723 342 OFFCURVE",
"721 346 CURVE SMOOTH",
"699 391 OFFCURVE",
"674 432 OFFCURVE",
"649 470 CURVE SMOOTH",
"599 546 OFFCURVE",
"542 597 OFFCURVE",
"481 617 CURVE SMOOTH",
"451 627 OFFCURVE",
"421 628 OFFCURVE",
"389 618 CURVE SMOOTH",
"333 601 OFFCURVE",
"302 541 OFFCURVE",
"326 462 CURVE SMOOTH",
"350 384 OFFCURVE",
"435 311 OFFCURVE",
"517 337 CURVE SMOOTH",
"533 342 OFFCURVE",
"546 351 OFFCURVE",
"557 361 CURVE",
"552 372 LINE",
"542 362 OFFCURVE",
"531 354 OFFCURVE",
"511 348 CURVE SMOOTH",
"439 326 OFFCURVE",
"359 392 OFFCURVE",
"339 460 CURVE SMOOTH",
"324 510 OFFCURVE",
"352 551 OFFCURVE",
"394 563 CURVE SMOOTH",
"469 584 OFFCURVE",
"547 546 OFFCURVE",
"623 458 CURVE SMOOTH",
"653 423 OFFCURVE",
"682 379 OFFCURVE",
"708 330 CURVE"
);
},
{
closed = 1;
nodes = (
"787 696 LINE",
"1020 696 LINE",
"1020 708 LINE",
"787 708 LINE"
);
},
{
closed = 1;
nodes = (
"1351 708 LINE",
"1283 707 LINE SMOOTH",
"1253 707 OFFCURVE",
"1200 678 OFFCURVE",
"1150 648 CURVE SMOOTH",
"1121 630 OFFCURVE",
"1092 607 OFFCURVE",
"1065 582 CURVE SMOOTH",
"1010 532 OFFCURVE",
"961 476 OFFCURVE",
"921 422 CURVE SMOOTH",
"900 395 OFFCURVE",
"882 370 OFFCURVE",
"867 347 CURVE",
"723 347 LINE",
"792 465 OFFCURVE",
"856 553 OFFCURVE",
"915 610 CURVE SMOOTH",
"973 667 OFFCURVE",
"1028 696 OFFCURVE",
"1080 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1110 697 OFFCURVE",
"1119 698 CURVE SMOOTH",
"1128 699 OFFCURVE",
"1132 704 OFFCURVE",
"1132 712 CURVE SMOOTH",
"1132 720 OFFCURVE",
"1124 722 OFFCURVE",
"1117 722 CURVE SMOOTH",
"1106 722 OFFCURVE",
"1094 720 OFFCURVE",
"1082 715 CURVE SMOOTH",
"1070 710 OFFCURVE",
"1055 708 OFFCURVE",
"1037 708 CURVE SMOOTH",
"1020 708 LINE",
"1020 696 LINE",
"1031 696 LINE",
"1031 694 LINE",
"936 673 OFFCURVE",
"866 622 OFFCURVE",
"808 558 CURVE SMOOTH",
"750 494 OFFCURVE",
"702 416 OFFCURVE",
"654 341 CURVE SMOOTH",
"631 304 OFFCURVE",
"590 236 OFFCURVE",
"563 195 CURVE SMOOTH",
"547 170 OFFCURVE",
"530 146 OFFCURVE",
"513 123 CURVE SMOOTH",
"476 74 OFFCURVE",
"395 4 OFFCURVE",
"341 4 CURVE SMOOTH",
"310 4 OFFCURVE",
"283 15 OFFCURVE",
"276 35 CURVE",
"295 35 OFFCURVE",
"307 46 OFFCURVE",
"307 67 CURVE SMOOTH",
"307 86 OFFCURVE",
"294 99 OFFCURVE",
"274 99 CURVE SMOOTH",
"251 99 OFFCURVE",
"233 83 OFFCURVE",
"233 60 CURVE SMOOTH",
"233 12 OFFCURVE",
"292 -8 OFFCURVE",
"336 -8 CURVE SMOOTH",
"424 -8 OFFCURVE",
"500 46 OFFCURVE",
"564 115 CURVE SMOOTH",
"627 184 OFFCURVE",
"678 271 OFFCURVE",
"718 335 CURVE",
"862 335 LINE",
"819 264 OFFCURVE",
"765 172 OFFCURVE",
"765 78 CURVE SMOOTH",
"765 24 OFFCURVE",
"790 -16 OFFCURVE",
"849 -16 CURVE SMOOTH",
"902 -16 OFFCURVE",
"990 51 OFFCURVE",
"1031 96 CURVE SMOOTH",
"1071 140 OFFCURVE",
"1132 226 OFFCURVE",
"1152 262 CURVE",
"1143 266 LINE",
"1079 160 OFFCURVE",
"951 0 OFFCURVE",
"863 0 CURVE SMOOTH",
"840 0 OFFCURVE",
"829 28 OFFCURVE",
"829 59 CURVE SMOOTH",
"829 132 OFFCURVE",
"863 227 OFFCURVE",
"915 320 CURVE SMOOTH",
"940 366 OFFCURVE",
"969 411 OFFCURVE",
"1002 456 CURVE SMOOTH",
"1066 544 OFFCURVE",
"1134 615 OFFCURVE",
"1197 657 CURVE SMOOTH",
"1228 678 OFFCURVE",
"1253 695 OFFCURVE",
"1283 695 CURVE SMOOTH",
"1351 696 LINE",
"1438 696 LINE",
"1438 708 LINE"
);
},
{
closed = 1;
nodes = (
"143 -65 LINE",
"186 -34 OFFCURVE",
"234 -15 OFFCURVE",
"289 -15 CURVE SMOOTH",
"393 -15 OFFCURVE",
"428 -66 OFFCURVE",
"428 -110 CURVE",
"425 -109 OFFCURVE",
"422 -109 OFFCURVE",
"418 -109 CURVE SMOOTH",
"399 -109 OFFCURVE",
"390 -125 OFFCURVE",
"390 -144 CURVE SMOOTH",
"390 -164 OFFCURVE",
"402 -179 OFFCURVE",
"423 -179 CURVE SMOOTH",
"452 -179 OFFCURVE",
"468 -152 OFFCURVE",
"468 -125 CURVE SMOOTH",
"468 -43 OFFCURVE",
"371 -3 OFFCURVE",
"294 -3 CURVE SMOOTH",
"229 -3 OFFCURVE",
"172 -20 OFFCURVE",
"122 -48 CURVE"
);
}
);
width = 1102;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2018-11-27 04:22:34 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
}
);
width = 847;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2018-11-27 04:22:34 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
},
{
closed = 1;
nodes = (
"495 182 LINE",
"701 182 LINE",
"701 212 LINE",
"495 212 LINE"
);
}
);
width = 847;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2018-11-27 04:22:34 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
},
{
closed = 1;
nodes = (
"538 259 LINE",
"663 261 LINE",
"685 296 LINE",
"538 296 LINE"
);
},
{
closed = 1;
nodes = (
"684 111 OFFCURVE",
"697 112 OFFCURVE",
"707 115 CURVE SMOOTH",
"716 118 OFFCURVE",
"722 122 OFFCURVE",
"724 125 CURVE",
"725 126 OFFCURVE",
"727 130 OFFCURVE",
"729 136 CURVE SMOOTH",
"731 142 OFFCURVE",
"732 147 OFFCURVE",
"733 151 CURVE",
"722 144 OFFCURVE",
"706 139 OFFCURVE",
"690 139 CURVE SMOOTH",
"655 139 OFFCURVE",
"639 163 OFFCURVE",
"639 190 CURVE SMOOTH",
"639 215 OFFCURVE",
"652 238 OFFCURVE",
"663 254 CURVE SMOOTH",
"669 263 OFFCURVE",
"675 272 OFFCURVE",
"681 279 CURVE SMOOTH",
"687 287 OFFCURVE",
"691 291 OFFCURVE",
"691 293 CURVE SMOOTH",
"691 295 OFFCURVE",
"688 296 OFFCURVE",
"685 296 CURVE SMOOTH",
"683 296 OFFCURVE",
"680 293 OFFCURVE",
"675 288 CURVE SMOOTH",
"669 282 OFFCURVE",
"665 277 OFFCURVE",
"660 272 CURVE SMOOTH",
"632 244 OFFCURVE",
"611 213 OFFCURVE",
"611 176 CURVE SMOOTH",
"611 139 OFFCURVE",
"632 111 OFFCURVE",
"668 111 CURVE SMOOTH"
);
}
);
width = 847;
}
);
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2018-11-27 04:22:34 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"395 -15 LINE",
"409 -15 OFFCURVE",
"423 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"426 -4 OFFCURVE",
"410 -4 OFFCURVE",
"395 -3 CURVE"
);
},
{
closed = 1;
nodes = (
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"475 233 OFFCURVE",
"412 118 OFFCURVE",
"302 -6 CURVE",
"247 -12 OFFCURVE",
"197 -23 OFFCURVE",
"150 -43 CURVE SMOOTH",
"85 -70 OFFCURVE",
"27 -113 OFFCURVE",
"-29 -178 CURVE",
"-37 -188 OFFCURVE",
"-39 -200 OFFCURVE",
"-34 -200 CURVE SMOOTH",
"56 -200 OFFCURVE",
"191 -171 OFFCURVE",
"260 -110 CURVE SMOOTH",
"311 -64 OFFCURVE",
"323 -53 OFFCURVE",
"352 -15 CURVE",
"376 -14 OFFCURVE",
"400 -15 OFFCURVE",
"425 -16 CURVE",
"426 -4 LINE",
"404 -3 OFFCURVE",
"382 -3 OFFCURVE",
"361 -3 CURVE",
"363 -1 LINE",
"383 25 OFFCURVE",
"413 63 OFFCURVE",
"443 104 CURVE SMOOTH",
"467 136 OFFCURVE",
"492 167 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE"
);
},
{
closed = 1;
nodes = (
"192 -125 OFFCURVE",
"52 -168 OFFCURVE",
"-7 -188 CURVE SMOOTH",
"-25 -194 OFFCURVE",
"-32 -194 OFFCURVE",
"4 -158 CURVE SMOOTH",
"27 -135 OFFCURVE",
"180 -35 OFFCURVE",
"289 -21 CURVE",
"285 -25 OFFCURVE",
"280 -30 OFFCURVE",
"276 -35 CURVE"
);
}
);
width = 847;
}
);
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2018-11-27 04:22:34 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
},
{
closed = 1;
nodes = (
"455 194 LINE",
"482 163 OFFCURVE",
"515 136 OFFCURVE",
"548 120 CURVE SMOOTH",
"585 102 OFFCURVE",
"628 98 OFFCURVE",
"656 115 CURVE SMOOTH",
"713 150 OFFCURVE",
"694 199 OFFCURVE",
"647 208 CURVE SMOOTH",
"603 216 OFFCURVE",
"536 182 OFFCURVE",
"518 182 CURVE SMOOTH",
"516 182 OFFCURVE",
"512 183 OFFCURVE",
"509 183 CURVE",
"511 175 LINE",
"514 174 OFFCURVE",
"516 173 OFFCURVE",
"520 173 CURVE SMOOTH",
"535 174 OFFCURVE",
"600 200 OFFCURVE",
"634 193 CURVE SMOOTH",
"680 184 OFFCURVE",
"682 153 OFFCURVE",
"647 132 CURVE SMOOTH",
"615 113 OFFCURVE",
"575 117 OFFCURVE",
"538 136 CURVE SMOOTH",
"512 149 OFFCURVE",
"482 176 OFFCURVE",
"460 201 CURVE"
);
}
);
width = 847;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2018-11-27 04:22:35 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE",
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"297 13 OFFCURVE",
"291 7 OFFCURVE",
"252 25 CURVE SMOOTH",
"158 68 OFFCURVE",
"16 35 OFFCURVE",
"-31 -65 CURVE SMOOTH",
"-61 -128 OFFCURVE",
"-33 -192 OFFCURVE",
"37 -223 CURVE SMOOTH",
"60 -233 OFFCURVE",
"98 -240 OFFCURVE",
"131 -240 CURVE SMOOTH",
"139 -240 OFFCURVE",
"147 -240 OFFCURVE",
"151 -239 CURVE",
"165 -212 LINE",
"38 -212 OFFCURVE",
"-30 -161 OFFCURVE",
"-4 -85 CURVE SMOOTH",
"23 -7 OFFCURVE",
"127 26 OFFCURVE",
"257 -2 CURVE SMOOTH",
"291 -9 OFFCURVE",
"350 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"380 -4 OFFCURVE",
"320 1 OFFCURVE",
"301 6 CURVE",
"370 35 OFFCURVE",
"455 118 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE"
);
}
);
width = 847;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2018-11-27 04:22:35 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"933 484 LINE",
"1042 484 LINE",
"1042 541 LINE",
"933 541 LINE"
);
},
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
}
);
width = 847;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2018-11-27 04:22:35 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"933 484 LINE",
"1042 484 LINE",
"1042 541 LINE",
"933 541 LINE"
);
},
{
closed = 1;
nodes = (
"973 727 LINE",
"936 718 OFFCURVE",
"900 706 OFFCURVE",
"867 691 CURVE",
"836 704 OFFCURVE",
"803 712 OFFCURVE",
"752 712 CURVE SMOOTH",
"653 712 OFFCURVE",
"556 688 OFFCURVE",
"472 649 CURVE SMOOTH",
"430 629 OFFCURVE",
"391 606 OFFCURVE",
"356 580 CURVE SMOOTH",
"285 527 OFFCURVE",
"234 466 OFFCURVE",
"206 403 CURVE SMOOTH",
"191 371 OFFCURVE",
"184 340 OFFCURVE",
"184 309 CURVE SMOOTH",
"184 240 OFFCURVE",
"232 184 OFFCURVE",
"301 184 CURVE SMOOTH",
"411 184 OFFCURVE",
"498 302 OFFCURVE",
"498 406 CURVE SMOOTH",
"498 444 LINE",
"486 444 LINE",
"486 406 LINE SMOOTH",
"486 309 OFFCURVE",
"404 196 OFFCURVE",
"305 196 CURVE SMOOTH",
"246 196 OFFCURVE",
"216 232 OFFCURVE",
"216 296 CURVE SMOOTH",
"216 376 OFFCURVE",
"250 448 OFFCURVE",
"305 508 CURVE SMOOTH",
"332 537 OFFCURVE",
"364 564 OFFCURVE",
"400 588 CURVE SMOOTH",
"471 636 OFFCURVE",
"551 669 OFFCURVE",
"632 687 CURVE SMOOTH",
"672 696 OFFCURVE",
"710 700 OFFCURVE",
"746 700 CURVE SMOOTH",
"778 700 OFFCURVE",
"823 696 OFFCURVE",
"851 683 CURVE",
"770 647 OFFCURVE",
"697 566 OFFCURVE",
"630 471 CURVE SMOOTH",
"596 423 OFFCURVE",
"563 374 OFFCURVE",
"532 323 CURVE SMOOTH",
"468 221 OFFCURVE",
"408 130 OFFCURVE",
"349 69 CURVE SMOOTH",
"320 38 OFFCURVE",
"290 20 OFFCURVE",
"261 13 CURVE",
"181 29 OFFCURVE",
"108 42 OFFCURVE",
"48 42 CURVE SMOOTH",
"28 42 OFFCURVE",
"14 39 OFFCURVE",
"6 34 CURVE SMOOTH",
"-2 29 OFFCURVE",
"-6 22 OFFCURVE",
"-6 13 CURVE SMOOTH",
"-6 4 OFFCURVE",
"1 -3 OFFCURVE",
"15 -8 CURVE SMOOTH",
"29 -13 OFFCURVE",
"53 -16 OFFCURVE",
"86 -16 CURVE SMOOTH",
"138 -16 OFFCURVE",
"179 -13 OFFCURVE",
"209 -6 CURVE SMOOTH",
"239 1 OFFCURVE",
"257 4 OFFCURVE",
"263 4 CURVE",
"314 -7 OFFCURVE",
"383 -16 OFFCURVE",
"436 -16 CURVE SMOOTH",
"548 -16 OFFCURVE",
"633 6 OFFCURVE",
"706 51 CURVE SMOOTH",
"779 95 OFFCURVE",
"839 162 OFFCURVE",
"899 253 CURVE",
"891 257 LINE",
"786 94 OFFCURVE",
"644 -4 OFFCURVE",
"445 -4 CURVE SMOOTH",
"385 -4 OFFCURVE",
"338 -1 OFFCURVE",
"279 8 CURVE",
"279 10 LINE",
"379 45 OFFCURVE",
"454 117 OFFCURVE",
"518 202 CURVE SMOOTH",
"549 244 OFFCURVE",
"579 289 OFFCURVE",
"606 336 CURVE SMOOTH",
"661 430 OFFCURVE",
"714 519 OFFCURVE",
"771 591 CURVE SMOOTH",
"800 627 OFFCURVE",
"831 655 OFFCURVE",
"866 675 CURVE",
"895 655 OFFCURVE",
"909 626 OFFCURVE",
"909 578 CURVE SMOOTH",
"909 480 OFFCURVE",
"842 362 OFFCURVE",
"770 362 CURVE SMOOTH",
"749 362 OFFCURVE",
"734 372 OFFCURVE",
"734 395 CURVE SMOOTH",
"734 406 OFFCURVE",
"739 413 OFFCURVE",
"746 421 CURVE",
"742 430 OFFCURVE",
"729 437 OFFCURVE",
"720 437 CURVE SMOOTH",
"700 437 OFFCURVE",
"686 421 OFFCURVE",
"686 402 CURVE SMOOTH",
"686 371 OFFCURVE",
"711 350 OFFCURVE",
"758 350 CURVE SMOOTH",
"850 350 OFFCURVE",
"963 441 OFFCURVE",
"963 539 CURVE SMOOTH",
"963 603 OFFCURVE",
"940 651 OFFCURVE",
"881 684 CURVE",
"908 700 OFFCURVE",
"944 712 OFFCURVE",
"975 723 CURVE"
);
},
{
closed = 1;
nodes = (
"576 484 LINE",
"685 484 LINE",
"685 541 LINE",
"576 541 LINE"
);
}
);
width = 847;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2018-11-27 04:22:35 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 962;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2018-11-27 04:22:36 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"567 -66 LINE",
"819 -66 LINE",
"819 -50 LINE",
"561 -50 LINE"
);
}
);
width = 1025;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2018-11-27 04:22:36 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"677 -159 LINE",
"819 -159 LINE",
"819 -143 LINE",
"674 -143 LINE"
);
}
);
width = 1103;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2018-11-27 04:22:36 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"663 -146 LINE",
"547 -281 LINE",
"565 -296 LINE",
"688 -154 LINE SMOOTH",
"666 -131 OFFCURVE",
"650 -115 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
}
);
width = 968;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2018-11-27 04:22:36 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"397 -9 OFFCURVE",
"524 -43 OFFCURVE",
"576 -77 CURVE SMOOTH",
"717 -169 LINE",
"724 -161 LINE",
"643 -102 LINE SMOOTH",
"596 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"535 -43 OFFCURVE",
"548 -42 OFFCURVE",
"561 -40 CURVE SMOOTH",
"596 -37 OFFCURVE",
"651 -42 OFFCURVE",
"685 -56 CURVE SMOOTH",
"722 -71 OFFCURVE",
"754 -99 OFFCURVE",
"758 -134 CURVE SMOOTH",
"761 -159 OFFCURVE",
"747 -171 OFFCURVE",
"722 -173 CURVE SMOOTH",
"706 -175 OFFCURVE",
"689 -168 OFFCURVE",
"673 -159 CURVE SMOOTH",
"670 -158 OFFCURVE",
"669 -156 OFFCURVE",
"667 -154 CURVE",
"659 -158 LINE",
"661 -160 OFFCURVE",
"664 -162 OFFCURVE",
"666 -164 CURVE SMOOTH",
"682 -177 OFFCURVE",
"701 -184 OFFCURVE",
"724 -181 CURVE SMOOTH",
"762 -177 OFFCURVE",
"780 -158 OFFCURVE",
"777 -130 CURVE SMOOTH",
"774 -99 OFFCURVE",
"740 -69 OFFCURVE",
"702 -53 CURVE SMOOTH",
"661 -35 OFFCURVE",
"608 -27 OFFCURVE",
"559 -33 CURVE SMOOTH",
"544 -34 OFFCURVE",
"528 -37 OFFCURVE",
"512 -41 CURVE",
"524 -46 LINE"
);
}
);
width = 1055;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2018-11-27 04:22:37 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"917 292 LINE",
"1098 292 LINE",
"1098 360 LINE",
"917 360 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 962;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2018-11-27 04:22:37 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"87 -200 LINE",
"169 -64 LINE SMOOTH",
"182 -42 OFFCURVE",
"269 -26 OFFCURVE",
"308 -26 CURVE SMOOTH",
"385 -26 OFFCURVE",
"463 -21 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE",
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"303 21 OFFCURVE",
"167 6 OFFCURVE",
"145 -26 CURVE SMOOTH",
"34 -200 LINE"
);
},
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
}
);
width = 963;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2018-11-27 04:22:37 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 -189 LINE",
"44 -158 OFFCURVE",
"92 -139 OFFCURVE",
"147 -139 CURVE SMOOTH",
"251 -139 OFFCURVE",
"286 -190 OFFCURVE",
"286 -234 CURVE",
"283 -233 OFFCURVE",
"280 -233 OFFCURVE",
"276 -233 CURVE SMOOTH",
"257 -233 OFFCURVE",
"248 -249 OFFCURVE",
"248 -268 CURVE SMOOTH",
"248 -288 OFFCURVE",
"260 -303 OFFCURVE",
"281 -303 CURVE SMOOTH",
"310 -303 OFFCURVE",
"326 -276 OFFCURVE",
"326 -249 CURVE SMOOTH",
"326 -167 OFFCURVE",
"229 -127 OFFCURVE",
"152 -127 CURVE SMOOTH",
"87 -127 OFFCURVE",
"30 -144 OFFCURVE",
"-20 -172 CURVE"
);
},
{
closed = 1;
nodes = (
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"334 18 OFFCURVE",
"143 -21 OFFCURVE",
"143 -45 CURVE SMOOTH",
"143 -136 LINE",
"176 -136 LINE",
"176 -57 LINE SMOOTH",
"176 -52 OFFCURVE",
"182 -40 OFFCURVE",
"200 -35 CURVE SMOOTH",
"359 9 OFFCURVE",
"422 -3 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE"
);
}
);
width = 963;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2018-11-27 04:22:37 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 962;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2018-11-27 04:22:37 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"567 -66 LINE",
"819 -66 LINE",
"819 -50 LINE",
"561 -50 LINE"
);
}
);
width = 1025;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2018-11-27 04:22:38 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"677 -159 LINE",
"819 -159 LINE",
"819 -143 LINE",
"674 -143 LINE"
);
}
);
width = 1103;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2018-11-27 04:22:38 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"663 -146 LINE",
"547 -281 LINE",
"565 -296 LINE",
"688 -154 LINE SMOOTH",
"666 -131 OFFCURVE",
"650 -115 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
}
);
width = 968;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2018-11-27 04:22:38 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"397 -9 OFFCURVE",
"524 -43 OFFCURVE",
"576 -77 CURVE SMOOTH",
"717 -169 LINE",
"724 -161 LINE",
"643 -102 LINE SMOOTH",
"596 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"535 -43 OFFCURVE",
"548 -42 OFFCURVE",
"561 -40 CURVE SMOOTH",
"596 -37 OFFCURVE",
"651 -42 OFFCURVE",
"685 -56 CURVE SMOOTH",
"722 -71 OFFCURVE",
"754 -99 OFFCURVE",
"758 -134 CURVE SMOOTH",
"761 -159 OFFCURVE",
"747 -171 OFFCURVE",
"722 -173 CURVE SMOOTH",
"706 -175 OFFCURVE",
"689 -168 OFFCURVE",
"673 -159 CURVE SMOOTH",
"670 -158 OFFCURVE",
"669 -156 OFFCURVE",
"667 -154 CURVE",
"659 -158 LINE",
"661 -160 OFFCURVE",
"664 -162 OFFCURVE",
"666 -164 CURVE SMOOTH",
"682 -177 OFFCURVE",
"701 -184 OFFCURVE",
"724 -181 CURVE SMOOTH",
"762 -177 OFFCURVE",
"780 -158 OFFCURVE",
"777 -130 CURVE SMOOTH",
"774 -99 OFFCURVE",
"740 -69 OFFCURVE",
"702 -53 CURVE SMOOTH",
"661 -35 OFFCURVE",
"608 -27 OFFCURVE",
"559 -33 CURVE SMOOTH",
"544 -34 OFFCURVE",
"528 -37 OFFCURVE",
"512 -41 CURVE",
"524 -46 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
}
);
width = 1055;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2018-11-27 04:22:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"914 292 LINE",
"1095 292 LINE",
"1095 360 LINE",
"914 360 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 1001;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2018-11-27 04:22:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"87 -200 LINE",
"169 -64 LINE SMOOTH",
"182 -42 OFFCURVE",
"269 -26 OFFCURVE",
"308 -26 CURVE SMOOTH",
"385 -26 OFFCURVE",
"463 -21 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE",
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"303 21 OFFCURVE",
"167 6 OFFCURVE",
"145 -26 CURVE SMOOTH",
"34 -200 LINE"
);
},
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
}
);
width = 963;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2018-11-27 04:22:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 -189 LINE",
"44 -158 OFFCURVE",
"92 -139 OFFCURVE",
"147 -139 CURVE SMOOTH",
"251 -139 OFFCURVE",
"286 -190 OFFCURVE",
"286 -234 CURVE",
"283 -233 OFFCURVE",
"280 -233 OFFCURVE",
"276 -233 CURVE SMOOTH",
"257 -233 OFFCURVE",
"248 -249 OFFCURVE",
"248 -268 CURVE SMOOTH",
"248 -288 OFFCURVE",
"260 -303 OFFCURVE",
"281 -303 CURVE SMOOTH",
"310 -303 OFFCURVE",
"326 -276 OFFCURVE",
"326 -249 CURVE SMOOTH",
"326 -167 OFFCURVE",
"229 -127 OFFCURVE",
"152 -127 CURVE SMOOTH",
"87 -127 OFFCURVE",
"30 -144 OFFCURVE",
"-20 -172 CURVE"
);
},
{
closed = 1;
nodes = (
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"334 18 OFFCURVE",
"143 -21 OFFCURVE",
"143 -45 CURVE SMOOTH",
"143 -136 LINE",
"176 -136 LINE",
"176 -57 LINE SMOOTH",
"176 -52 OFFCURVE",
"182 -40 OFFCURVE",
"200 -35 CURVE SMOOTH",
"359 9 OFFCURVE",
"422 -3 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE"
);
}
);
width = 963;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2018-11-27 04:22:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 962;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2018-11-27 04:22:40 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"567 -66 LINE",
"819 -66 LINE",
"819 -50 LINE",
"561 -50 LINE"
);
}
);
width = 1025;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2018-11-27 04:22:40 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"677 -159 LINE",
"819 -159 LINE",
"819 -143 LINE",
"674 -143 LINE"
);
}
);
width = 1103;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2018-11-27 04:22:40 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"663 -146 LINE",
"547 -281 LINE",
"565 -296 LINE",
"688 -154 LINE SMOOTH",
"666 -131 OFFCURVE",
"650 -115 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
}
);
width = 968;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2018-11-27 04:22:40 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"397 -9 OFFCURVE",
"524 -43 OFFCURVE",
"576 -77 CURVE SMOOTH",
"717 -169 LINE",
"724 -161 LINE",
"643 -102 LINE SMOOTH",
"596 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"535 -43 OFFCURVE",
"548 -42 OFFCURVE",
"561 -40 CURVE SMOOTH",
"596 -37 OFFCURVE",
"651 -42 OFFCURVE",
"685 -56 CURVE SMOOTH",
"722 -71 OFFCURVE",
"754 -99 OFFCURVE",
"758 -134 CURVE SMOOTH",
"761 -159 OFFCURVE",
"747 -171 OFFCURVE",
"722 -173 CURVE SMOOTH",
"706 -175 OFFCURVE",
"689 -168 OFFCURVE",
"673 -159 CURVE SMOOTH",
"670 -158 OFFCURVE",
"669 -156 OFFCURVE",
"667 -154 CURVE",
"659 -158 LINE",
"661 -160 OFFCURVE",
"664 -162 OFFCURVE",
"666 -164 CURVE SMOOTH",
"682 -177 OFFCURVE",
"701 -184 OFFCURVE",
"724 -181 CURVE SMOOTH",
"762 -177 OFFCURVE",
"780 -158 OFFCURVE",
"777 -130 CURVE SMOOTH",
"774 -99 OFFCURVE",
"740 -69 OFFCURVE",
"702 -53 CURVE SMOOTH",
"661 -35 OFFCURVE",
"608 -27 OFFCURVE",
"559 -33 CURVE SMOOTH",
"544 -34 OFFCURVE",
"528 -37 OFFCURVE",
"512 -41 CURVE",
"524 -46 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
}
);
width = 1055;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2018-11-27 04:22:41 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"914 292 LINE",
"1095 292 LINE",
"1095 360 LINE",
"914 360 LINE"
);
},
{
closed = 1;
nodes = (
"942 687 OFFCURVE",
"1004 718 OFFCURVE",
"1071 730 CURVE",
"1069 738 LINE",
"998 727 OFFCURVE",
"936 694 OFFCURVE",
"880 651 CURVE",
"824 694 OFFCURVE",
"755 718 OFFCURVE",
"678 718 CURVE SMOOTH",
"547 718 OFFCURVE",
"432 664 OFFCURVE",
"349 589 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 419 OFFCURVE",
"216 336 CURVE SMOOTH",
"216 240 OFFCURVE",
"268 160 OFFCURVE",
"367 160 CURVE SMOOTH",
"505 160 OFFCURVE",
"597 287 OFFCURVE",
"597 447 CURVE SMOOTH",
"597 476 LINE",
"585 476 LINE",
"585 442 LINE SMOOTH",
"585 302 OFFCURVE",
"504 176 OFFCURVE",
"382 176 CURVE SMOOTH",
"289 176 OFFCURVE",
"256 245 OFFCURVE",
"256 334 CURVE SMOOTH",
"256 441 OFFCURVE",
"308 533 OFFCURVE",
"388 600 CURVE SMOOTH",
"467 667 OFFCURVE",
"573 706 OFFCURVE",
"681 706 CURVE SMOOTH",
"738 706 OFFCURVE",
"813 689 OFFCURVE",
"869 642 CURVE",
"798 583 OFFCURVE",
"740 500 OFFCURVE",
"688 413 CURVE SMOOTH",
"661 369 OFFCURVE",
"636 325 OFFCURVE",
"611 281 CURVE SMOOTH",
"562 193 OFFCURVE",
"511 118 OFFCURVE",
"455 65 CURVE SMOOTH",
"430 41 OFFCURVE",
"403 25 OFFCURVE",
"374 16 CURVE",
"303 22 OFFCURVE",
"269 19 OFFCURVE",
"199 3 CURVE SMOOTH",
"132 -12 OFFCURVE",
"75 -49 OFFCURVE",
"25 -100 CURVE SMOOTH",
"-3 -129 OFFCURVE",
"-29 -161 OFFCURVE",
"-48 -201 CURVE",
"-4 -202 LINE",
"1 -196 OFFCURVE",
"6 -190 OFFCURVE",
"11 -185 CURVE SMOOTH",
"62 -134 OFFCURVE",
"124 -88 OFFCURVE",
"196 -59 CURVE SMOOTH",
"231 -45 OFFCURVE",
"269 -32 OFFCURVE",
"308 -25 CURVE SMOOTH",
"385 -11 OFFCURVE",
"463 -20 OFFCURVE",
"538 -53 CURVE SMOOTH",
"576 -70 OFFCURVE",
"611 -94 OFFCURVE",
"644 -127 CURVE SMOOTH",
"677 -159 LINE",
"684 -151 LINE",
"671 -137 OFFCURVE",
"658 -122 OFFCURVE",
"641 -107 CURVE SMOOTH",
"599 -68 OFFCURVE",
"549 -37 OFFCURVE",
"494 -15 CURVE",
"506 -16 OFFCURVE",
"517 -16 OFFCURVE",
"530 -16 CURVE SMOOTH",
"639 -16 OFFCURVE",
"751 30 OFFCURVE",
"836 106 CURVE SMOOTH",
"920 181 OFFCURVE",
"977 287 OFFCURVE",
"977 407 CURVE SMOOTH",
"977 487 OFFCURVE",
"953 583 OFFCURVE",
"893 640 CURVE"
);
},
{
closed = 1;
nodes = (
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH",
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH"
);
}
);
width = 1001;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2018-11-27 04:22:41 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"87 -200 LINE",
"169 -64 LINE SMOOTH",
"182 -42 OFFCURVE",
"269 -26 OFFCURVE",
"308 -26 CURVE SMOOTH",
"385 -26 OFFCURVE",
"463 -21 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE",
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"303 21 OFFCURVE",
"167 6 OFFCURVE",
"145 -26 CURVE SMOOTH",
"34 -200 LINE"
);
},
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
}
);
width = 963;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2018-11-27 04:22:41 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"653 815 LINE",
"945 815 LINE",
"945 824 LINE",
"653 824 LINE"
);
},
{
closed = 1;
nodes = (
"879 628 LINE",
"895 637 LINE",
"778 824 LINE",
"762 815 LINE"
);
},
{
closed = 1;
nodes = (
"494 -4 OFFCURVE",
"476 -4 OFFCURVE",
"460 -3 CURVE",
"438 4 OFFCURVE",
"416 9 OFFCURVE",
"393 13 CURVE",
"474 42 OFFCURVE",
"537 98 OFFCURVE",
"590 165 CURVE SMOOTH",
"618 200 OFFCURVE",
"644 238 OFFCURVE",
"668 279 CURVE SMOOTH",
"706 344 OFFCURVE",
"769 458 OFFCURVE",
"807 522 CURVE SMOOTH",
"830 561 OFFCURVE",
"855 595 OFFCURVE",
"882 626 CURVE",
"915 590 OFFCURVE",
"929 531 OFFCURVE",
"929 478 CURVE SMOOTH",
"929 407 OFFCURVE",
"914 330 OFFCURVE",
"883 259 CURVE SMOOTH",
"868 223 OFFCURVE",
"849 189 OFFCURVE",
"826 157 CURVE SMOOTH",
"781 93 OFFCURVE",
"718 45 OFFCURVE",
"641 17 CURVE SMOOTH",
"602 3 OFFCURVE",
"560 -4 OFFCURVE",
"513 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1 -189 LINE",
"44 -158 OFFCURVE",
"92 -139 OFFCURVE",
"147 -139 CURVE SMOOTH",
"251 -139 OFFCURVE",
"286 -190 OFFCURVE",
"286 -234 CURVE",
"283 -233 OFFCURVE",
"280 -233 OFFCURVE",
"276 -233 CURVE SMOOTH",
"257 -233 OFFCURVE",
"248 -249 OFFCURVE",
"248 -268 CURVE SMOOTH",
"248 -288 OFFCURVE",
"260 -303 OFFCURVE",
"281 -303 CURVE SMOOTH",
"310 -303 OFFCURVE",
"326 -276 OFFCURVE",
"326 -249 CURVE SMOOTH",
"326 -167 OFFCURVE",
"229 -127 OFFCURVE",
"152 -127 CURVE SMOOTH",
"87 -127 OFFCURVE",
"30 -144 OFFCURVE",
"-20 -172 CURVE"
);
},
{
closed = 1;
nodes = (
"942 686 OFFCURVE",
"1004 717 OFFCURVE",
"1071 729 CURVE",
"1069 737 LINE",
"998 726 OFFCURVE",
"936 693 OFFCURVE",
"880 650 CURVE",
"824 693 OFFCURVE",
"755 717 OFFCURVE",
"678 717 CURVE SMOOTH",
"547 717 OFFCURVE",
"432 663 OFFCURVE",
"349 588 CURVE SMOOTH",
"266 513 OFFCURVE",
"216 418 OFFCURVE",
"216 335 CURVE SMOOTH",
"216 239 OFFCURVE",
"268 159 OFFCURVE",
"367 159 CURVE SMOOTH",
"505 159 OFFCURVE",
"597 286 OFFCURVE",
"597 446 CURVE SMOOTH",
"597 475 LINE",
"585 475 LINE",
"585 441 LINE SMOOTH",
"585 301 OFFCURVE",
"504 175 OFFCURVE",
"382 175 CURVE SMOOTH",
"289 175 OFFCURVE",
"256 244 OFFCURVE",
"256 333 CURVE SMOOTH",
"256 440 OFFCURVE",
"308 532 OFFCURVE",
"388 599 CURVE SMOOTH",
"467 666 OFFCURVE",
"573 705 OFFCURVE",
"681 705 CURVE SMOOTH",
"738 705 OFFCURVE",
"813 688 OFFCURVE",
"869 641 CURVE",
"798 582 OFFCURVE",
"740 499 OFFCURVE",
"688 412 CURVE SMOOTH",
"662 368 OFFCURVE",
"636 324 OFFCURVE",
"611 280 CURVE SMOOTH",
"561 192 OFFCURVE",
"511 117 OFFCURVE",
"455 64 CURVE SMOOTH",
"430 40 OFFCURVE",
"403 24 OFFCURVE",
"374 15 CURVE",
"334 18 OFFCURVE",
"143 -21 OFFCURVE",
"143 -45 CURVE SMOOTH",
"143 -136 LINE",
"176 -136 LINE",
"176 -57 LINE SMOOTH",
"176 -52 OFFCURVE",
"182 -40 OFFCURVE",
"200 -35 CURVE SMOOTH",
"359 9 OFFCURVE",
"422 -3 OFFCURVE",
"538 -54 CURVE SMOOTH",
"576 -71 OFFCURVE",
"610 -96 OFFCURVE",
"644 -128 CURVE SMOOTH",
"677 -160 LINE",
"684 -152 LINE",
"671 -138 OFFCURVE",
"658 -123 OFFCURVE",
"641 -108 CURVE SMOOTH",
"598 -70 OFFCURVE",
"549 -38 OFFCURVE",
"494 -16 CURVE",
"506 -17 OFFCURVE",
"517 -17 OFFCURVE",
"530 -17 CURVE SMOOTH",
"639 -17 OFFCURVE",
"751 29 OFFCURVE",
"836 105 CURVE SMOOTH",
"920 180 OFFCURVE",
"977 286 OFFCURVE",
"977 406 CURVE SMOOTH",
"977 486 OFFCURVE",
"953 582 OFFCURVE",
"893 639 CURVE"
);
}
);
width = 963;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2018-11-27 04:22:41 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
}
);
width = 578;
}
);
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2018-11-27 04:22:42 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"595 296 LINE",
"739 296 LINE",
"739 340 LINE",
"595 340 LINE"
);
}
);
width = 642;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2018-11-27 04:22:42 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 -16 LINE",
"529 -16 LINE",
"529 -3 LINE",
"195 -6 LINE"
);
}
);
width = 693;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2018-11-27 04:22:42 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"11 -298 LINE",
"105 -296 OFFCURVE",
"187 -253 OFFCURVE",
"259 -190 CURVE SMOOTH",
"302 -152 OFFCURVE",
"348 -107 OFFCURVE",
"440 39 CURVE SMOOTH",
"584 267 OFFCURVE",
"636 352 OFFCURVE",
"675 416 CURVE SMOOTH",
"730 507 OFFCURVE",
"784 584 OFFCURVE",
"833 630 CURVE SMOOTH",
"858 653 OFFCURVE",
"880 664 OFFCURVE",
"900 664 CURVE SMOOTH",
"936 664 OFFCURVE",
"992 664 OFFCURVE",
"992 684 CURVE SMOOTH",
"992 693 OFFCURVE",
"982 696 OFFCURVE",
"975 696 CURVE SMOOTH",
"962 696 OFFCURVE",
"944 693 OFFCURVE",
"922 686 CURVE SMOOTH",
"899 679 OFFCURVE",
"874 676 OFFCURVE",
"847 676 CURVE SMOOTH",
"794 676 OFFCURVE",
"710 672 OFFCURVE",
"622 659 CURVE SMOOTH",
"578 652 OFFCURVE",
"534 643 OFFCURVE",
"490 632 CURVE SMOOTH",
"401 608 OFFCURVE",
"328 571 OFFCURVE",
"284 519 CURVE SMOOTH",
"262 492 OFFCURVE",
"251 461 OFFCURVE",
"251 425 CURVE SMOOTH",
"251 358 OFFCURVE",
"301 313 OFFCURVE",
"386 313 CURVE SMOOTH",
"470 313 OFFCURVE",
"553 378 OFFCURVE",
"553 460 CURVE SMOOTH",
"553 472 OFFCURVE",
"551 488 OFFCURVE",
"546 501 CURVE",
"535 500 LINE",
"539 485 OFFCURVE",
"541 472 OFFCURVE",
"541 461 CURVE SMOOTH",
"541 385 OFFCURVE",
"465 325 OFFCURVE",
"386 325 CURVE SMOOTH",
"326 325 OFFCURVE",
"299 366 OFFCURVE",
"299 413 CURVE SMOOTH",
"299 484 OFFCURVE",
"344 536 OFFCURVE",
"410 573 CURVE SMOOTH",
"443 592 OFFCURVE",
"480 607 OFFCURVE",
"522 619 CURVE SMOOTH",
"605 642 OFFCURVE",
"692 655 OFFCURVE",
"770 660 CURVE SMOOTH",
"809 663 OFFCURVE",
"842 664 OFFCURVE",
"870 664 CURVE",
"870 662 LINE",
"799 630 OFFCURVE",
"737 572 OFFCURVE",
"679 502 CURVE SMOOTH",
"650 467 OFFCURVE",
"622 429 OFFCURVE",
"596 389 CURVE SMOOTH",
"544 308 OFFCURVE",
"495 225 OFFCURVE",
"451 146 CURVE SMOOTH",
"423 97 OFFCURVE",
"402 63 OFFCURVE",
"376 23 CURVE SMOOTH",
"302 -95 OFFCURVE",
"170 -279 OFFCURVE",
"13 -286 CURVE"
);
}
);
width = 580;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2018-11-27 04:22:42 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 -3 LINE",
"296 -5 OFFCURVE",
"374 -4 OFFCURVE",
"402 -4 CURVE SMOOTH",
"439 -4 OFFCURVE",
"502 4 OFFCURVE",
"542 24 CURVE SMOOTH",
"579 42 OFFCURVE",
"610 73 OFFCURVE",
"612 105 CURVE SMOOTH",
"613 133 OFFCURVE",
"594 151 OFFCURVE",
"556 153 CURVE SMOOTH",
"533 154 OFFCURVE",
"515 147 OFFCURVE",
"499 133 CURVE SMOOTH",
"497 131 OFFCURVE",
"495 128 OFFCURVE",
"493 126 CURVE",
"501 123 LINE",
"503 125 OFFCURVE",
"504 127 OFFCURVE",
"507 129 CURVE SMOOTH",
"523 138 OFFCURVE",
"539 146 OFFCURVE",
"555 145 CURVE SMOOTH",
"580 144 OFFCURVE",
"594 133 OFFCURVE",
"593 108 CURVE SMOOTH",
"591 72 OFFCURVE",
"561 43 OFFCURVE",
"524 26 CURVE SMOOTH",
"491 10 OFFCURVE",
"442 4 OFFCURVE",
"401 4 CURVE SMOOTH",
"376 4 OFFCURVE",
"301 5 OFFCURVE",
"290 8 CURVE"
);
}
);
width = 692;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2018-11-27 04:22:43 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE",
"230 453 OFFCURVE",
"327 368 OFFCURVE",
"423 390 CURVE SMOOTH",
"509 409 OFFCURVE",
"573 496 OFFCURVE",
"554 572 CURVE SMOOTH",
"549 592 OFFCURVE",
"535 620 OFFCURVE",
"530 627 CURVE",
"520 623 LINE",
"525 614 OFFCURVE",
"537 591 OFFCURVE",
"543 567 CURVE SMOOTH",
"559 502 OFFCURVE",
"494 419 OFFCURVE",
"423 403 CURVE SMOOTH",
"296 375 OFFCURVE",
"292 515 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH",
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH"
);
}
);
width = 578;
}
);
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2018-11-27 04:22:43 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"597 649 LINE",
"633 659 LINE",
"594 794 LINE",
"558 784 LINE"
);
},
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
}
);
width = 578;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2018-11-27 04:22:43 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"597 649 LINE",
"633 659 LINE",
"594 794 LINE",
"558 784 LINE"
);
},
{
closed = 1;
nodes = (
"20 24 OFFCURVE",
"110 -16 OFFCURVE",
"189 -16 CURVE SMOOTH",
"285 -16 OFFCURVE",
"366 22 OFFCURVE",
"437 84 CURVE SMOOTH",
"508 146 OFFCURVE",
"570 232 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE SMOOTH",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH",
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"555 323 OFFCURVE",
"519 261 OFFCURVE",
"490 218 CURVE SMOOTH",
"472 191 OFFCURVE",
"453 165 OFFCURVE",
"432 139 CURVE SMOOTH",
"390 86 OFFCURVE",
"339 43 OFFCURVE",
"282 16 CURVE SMOOTH",
"253 3 OFFCURVE",
"223 -4 OFFCURVE",
"191 -4 CURVE SMOOTH",
"114 -4 OFFCURVE",
"58 38 OFFCURVE",
"69 90 CURVE",
"90 86 OFFCURVE",
"106 104 OFFCURVE",
"106 125 CURVE SMOOTH",
"106 146 OFFCURVE",
"92 160 OFFCURVE",
"69 160 CURVE SMOOTH",
"38 160 OFFCURVE",
"20 136 OFFCURVE",
"20 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"55 -32 LINE",
"106 -15 OFFCURVE",
"157 -12 OFFCURVE",
"209 -29 CURVE SMOOTH",
"308 -61 OFFCURVE",
"326 -121 OFFCURVE",
"312 -162 CURVE",
"310 -161 OFFCURVE",
"307 -160 OFFCURVE",
"303 -158 CURVE SMOOTH",
"285 -153 OFFCURVE",
"271 -165 OFFCURVE",
"266 -183 CURVE SMOOTH",
"259 -202 OFFCURVE",
"266 -220 OFFCURVE",
"286 -226 CURVE SMOOTH",
"314 -235 OFFCURVE",
"337 -215 OFFCURVE",
"346 -189 CURVE SMOOTH",
"371 -111 OFFCURVE",
"291 -43 OFFCURVE",
"218 -19 CURVE SMOOTH",
"156 1 OFFCURVE",
"97 2 OFFCURVE",
"40 -9 CURVE"
);
}
);
width = 662;
}
);
unicode = 130F;
},
{
glyphname = "gga-ethiopic";
lastChange = "2018-11-27 04:22:43 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"607 629 LINE",
"633 639 LINE",
"604 764 LINE",
"578 752 LINE"
);
},
{
closed = 1;
nodes = (
"445 684 LINE",
"719 789 LINE",
"712 807 LINE",
"438 702 LINE"
);
},
{
closed = 1;
nodes = (
"165 24 OFFCURVE",
"255 -16 OFFCURVE",
"334 -16 CURVE SMOOTH",
"430 -16 OFFCURVE",
"511 22 OFFCURVE",
"582 84 CURVE SMOOTH",
"653 146 OFFCURVE",
"715 232 OFFCURVE",
"771 331 CURVE SMOOTH",
"828 431 OFFCURVE",
"883 516 OFFCURVE",
"931 575 CURVE SMOOTH",
"979 634 OFFCURVE",
"1022 668 OFFCURVE",
"1055 668 CURVE SMOOTH",
"1090 668 OFFCURVE",
"1114 669 OFFCURVE",
"1126 672 CURVE SMOOTH",
"1138 674 OFFCURVE",
"1144 678 OFFCURVE",
"1144 685 CURVE SMOOTH",
"1144 696 OFFCURVE",
"1136 696 OFFCURVE",
"1127 696 CURVE SMOOTH",
"1120 696 OFFCURVE",
"1103 693 OFFCURVE",
"1077 687 CURVE SMOOTH",
"1051 681 OFFCURVE",
"1016 678 OFFCURVE",
"972 678 CURVE SMOOTH",
"899 679 OFFCURVE",
"810 674 OFFCURVE",
"726 659 CURVE SMOOTH",
"684 651 OFFCURVE",
"644 641 OFFCURVE",
"605 628 CURVE SMOOTH",
"528 603 OFFCURVE",
"466 567 OFFCURVE",
"431 520 CURVE SMOOTH",
"413 497 OFFCURVE",
"404 470 OFFCURVE",
"404 441 CURVE SMOOTH",
"404 365 OFFCURVE",
"457 325 OFFCURVE",
"536 325 CURVE SMOOTH",
"625 325 OFFCURVE",
"705 392 OFFCURVE",
"705 472 CURVE SMOOTH",
"705 483 OFFCURVE",
"702 502 OFFCURVE",
"699 510 CURVE",
"688 508 LINE",
"691 498 OFFCURVE",
"693 485 OFFCURVE",
"693 470 CURVE SMOOTH",
"693 401 OFFCURVE",
"612 337 OFFCURVE",
"539 337 CURVE SMOOTH",
"486 337 OFFCURVE",
"452 369 OFFCURVE",
"452 425 CURVE SMOOTH",
"452 497 OFFCURVE",
"494 548 OFFCURVE",
"558 584 CURVE SMOOTH",
"589 602 OFFCURVE",
"625 616 OFFCURVE",
"666 627 CURVE SMOOTH",
"746 648 OFFCURVE",
"831 659 OFFCURVE",
"910 663 CURVE SMOOTH",
"949 665 OFFCURVE",
"984 666 OFFCURVE",
"1014 666 CURVE",
"1014 664 LINE",
"953 641 OFFCURVE",
"894 586 OFFCURVE",
"843 526 CURVE SMOOTH",
"800 475 OFFCURVE",
"747 393 OFFCURVE",
"718 351 CURVE SMOOTH",
"700 323 OFFCURVE",
"664 261 OFFCURVE",
"635 218 CURVE SMOOTH",
"617 191 OFFCURVE",
"598 165 OFFCURVE",
"577 139 CURVE SMOOTH",
"535 86 OFFCURVE",
"484 43 OFFCURVE",
"427 16 CURVE SMOOTH",
"398 3 OFFCURVE",
"368 -4 OFFCURVE",
"336 -4 CURVE SMOOTH",
"259 -4 OFFCURVE",
"203 38 OFFCURVE",
"214 90 CURVE",
"235 86 OFFCURVE",
"251 104 OFFCURVE",
"251 125 CURVE SMOOTH",
"251 146 OFFCURVE",
"237 160 OFFCURVE",
"214 160 CURVE SMOOTH",
"183 160 OFFCURVE",
"165 136 OFFCURVE",
"165 108 CURVE SMOOTH"
);
}
);
width = 723;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2018-11-27 04:22:44 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"624 649 LINE",
"650 659 LINE",
"621 784 LINE",
"595 772 LINE"
);
},
{
closed = 1;
nodes = (
"462 704 LINE",
"736 809 LINE",
"729 827 LINE",
"455 722 LINE"
);
},
{
closed = 1;
nodes = (
"47 24 OFFCURVE",
"137 -16 OFFCURVE",
"216 -16 CURVE SMOOTH",
"312 -16 OFFCURVE",
"393 22 OFFCURVE",
"464 84 CURVE SMOOTH",
"535 146 OFFCURVE",
"597 232 OFFCURVE",
"653 331 CURVE SMOOTH",
"710 431 OFFCURVE",
"765 516 OFFCURVE",
"813 575 CURVE SMOOTH",
"861 634 OFFCURVE",
"904 668 OFFCURVE",
"937 668 CURVE SMOOTH",
"972 668 OFFCURVE",
"996 669 OFFCURVE",
"1008 672 CURVE SMOOTH",
"1020 674 OFFCURVE",
"1026 678 OFFCURVE",
"1026 685 CURVE SMOOTH",
"1026 696 OFFCURVE",
"1018 696 OFFCURVE",
"1009 696 CURVE SMOOTH",
"1002 696 OFFCURVE",
"985 693 OFFCURVE",
"959 687 CURVE SMOOTH",
"933 681 OFFCURVE",
"898 678 OFFCURVE",
"854 678 CURVE SMOOTH",
"781 679 OFFCURVE",
"692 674 OFFCURVE",
"608 659 CURVE SMOOTH",
"566 651 OFFCURVE",
"526 641 OFFCURVE",
"487 628 CURVE SMOOTH",
"410 603 OFFCURVE",
"348 567 OFFCURVE",
"313 520 CURVE SMOOTH",
"295 497 OFFCURVE",
"286 470 OFFCURVE",
"286 441 CURVE SMOOTH",
"286 365 OFFCURVE",
"339 325 OFFCURVE",
"418 325 CURVE SMOOTH",
"507 325 OFFCURVE",
"587 392 OFFCURVE",
"587 472 CURVE SMOOTH",
"587 483 OFFCURVE",
"584 502 OFFCURVE",
"581 510 CURVE",
"570 508 LINE",
"573 498 OFFCURVE",
"575 485 OFFCURVE",
"575 470 CURVE SMOOTH",
"575 401 OFFCURVE",
"494 337 OFFCURVE",
"421 337 CURVE SMOOTH",
"368 337 OFFCURVE",
"334 369 OFFCURVE",
"334 425 CURVE SMOOTH",
"334 497 OFFCURVE",
"376 548 OFFCURVE",
"440 584 CURVE SMOOTH",
"471 602 OFFCURVE",
"507 616 OFFCURVE",
"548 627 CURVE SMOOTH",
"628 648 OFFCURVE",
"713 659 OFFCURVE",
"792 663 CURVE SMOOTH",
"831 665 OFFCURVE",
"866 666 OFFCURVE",
"896 666 CURVE",
"896 664 LINE",
"835 641 OFFCURVE",
"776 586 OFFCURVE",
"725 526 CURVE SMOOTH",
"682 475 OFFCURVE",
"629 393 OFFCURVE",
"600 351 CURVE SMOOTH",
"582 323 OFFCURVE",
"546 261 OFFCURVE",
"517 218 CURVE SMOOTH",
"499 191 OFFCURVE",
"480 165 OFFCURVE",
"459 139 CURVE SMOOTH",
"417 86 OFFCURVE",
"366 43 OFFCURVE",
"309 16 CURVE SMOOTH",
"280 3 OFFCURVE",
"250 -4 OFFCURVE",
"218 -4 CURVE SMOOTH",
"141 -4 OFFCURVE",
"85 38 OFFCURVE",
"96 90 CURVE",
"117 86 OFFCURVE",
"133 104 OFFCURVE",
"133 125 CURVE SMOOTH",
"133 146 OFFCURVE",
"119 160 OFFCURVE",
"96 160 CURVE SMOOTH",
"65 160 OFFCURVE",
"47 136 OFFCURVE",
"47 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"622 296 LINE",
"766 296 LINE",
"766 340 LINE",
"622 340 LINE"
);
}
);
width = 669;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2018-11-27 04:22:44 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"624 649 LINE",
"650 659 LINE",
"621 784 LINE",
"595 772 LINE"
);
},
{
closed = 1;
nodes = (
"462 704 LINE",
"736 809 LINE",
"729 827 LINE",
"455 722 LINE"
);
},
{
closed = 1;
nodes = (
"47 24 OFFCURVE",
"137 -16 OFFCURVE",
"216 -16 CURVE SMOOTH",
"312 -16 OFFCURVE",
"393 22 OFFCURVE",
"464 84 CURVE SMOOTH",
"535 146 OFFCURVE",
"597 232 OFFCURVE",
"653 331 CURVE SMOOTH",
"710 431 OFFCURVE",
"765 516 OFFCURVE",
"813 575 CURVE SMOOTH",
"861 634 OFFCURVE",
"904 668 OFFCURVE",
"937 668 CURVE SMOOTH",
"972 668 OFFCURVE",
"996 669 OFFCURVE",
"1008 672 CURVE SMOOTH",
"1020 674 OFFCURVE",
"1026 678 OFFCURVE",
"1026 685 CURVE SMOOTH",
"1026 696 OFFCURVE",
"1018 696 OFFCURVE",
"1009 696 CURVE SMOOTH",
"1002 696 OFFCURVE",
"985 693 OFFCURVE",
"959 687 CURVE SMOOTH",
"933 681 OFFCURVE",
"898 678 OFFCURVE",
"854 678 CURVE SMOOTH",
"781 679 OFFCURVE",
"692 674 OFFCURVE",
"608 659 CURVE SMOOTH",
"566 651 OFFCURVE",
"526 641 OFFCURVE",
"487 628 CURVE SMOOTH",
"410 603 OFFCURVE",
"348 567 OFFCURVE",
"313 520 CURVE SMOOTH",
"295 497 OFFCURVE",
"286 470 OFFCURVE",
"286 441 CURVE SMOOTH",
"286 365 OFFCURVE",
"339 325 OFFCURVE",
"418 325 CURVE SMOOTH",
"507 325 OFFCURVE",
"587 392 OFFCURVE",
"587 472 CURVE SMOOTH",
"587 483 OFFCURVE",
"584 502 OFFCURVE",
"581 510 CURVE",
"570 508 LINE",
"573 498 OFFCURVE",
"575 485 OFFCURVE",
"575 470 CURVE SMOOTH",
"575 401 OFFCURVE",
"494 337 OFFCURVE",
"421 337 CURVE SMOOTH",
"368 337 OFFCURVE",
"334 369 OFFCURVE",
"334 425 CURVE SMOOTH",
"334 497 OFFCURVE",
"376 548 OFFCURVE",
"440 584 CURVE SMOOTH",
"471 602 OFFCURVE",
"507 616 OFFCURVE",
"548 627 CURVE SMOOTH",
"628 648 OFFCURVE",
"713 659 OFFCURVE",
"792 663 CURVE SMOOTH",
"831 665 OFFCURVE",
"866 666 OFFCURVE",
"896 666 CURVE",
"896 664 LINE",
"835 641 OFFCURVE",
"776 586 OFFCURVE",
"725 526 CURVE SMOOTH",
"682 475 OFFCURVE",
"629 393 OFFCURVE",
"600 351 CURVE SMOOTH",
"582 323 OFFCURVE",
"546 261 OFFCURVE",
"517 218 CURVE SMOOTH",
"499 191 OFFCURVE",
"480 165 OFFCURVE",
"459 139 CURVE SMOOTH",
"417 86 OFFCURVE",
"366 43 OFFCURVE",
"309 16 CURVE SMOOTH",
"280 3 OFFCURVE",
"250 -4 OFFCURVE",
"218 -4 CURVE SMOOTH",
"141 -4 OFFCURVE",
"85 38 OFFCURVE",
"96 90 CURVE",
"117 86 OFFCURVE",
"133 104 OFFCURVE",
"133 125 CURVE SMOOTH",
"133 146 OFFCURVE",
"119 160 OFFCURVE",
"96 160 CURVE SMOOTH",
"65 160 OFFCURVE",
"47 136 OFFCURVE",
"47 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216 -16 LINE",
"556 -16 LINE",
"556 -3 LINE",
"222 -6 LINE"
);
}
);
width = 720;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2018-11-27 04:22:44 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"624 649 LINE",
"650 659 LINE",
"621 784 LINE",
"595 772 LINE"
);
},
{
closed = 1;
nodes = (
"462 704 LINE",
"736 809 LINE",
"729 827 LINE",
"455 722 LINE"
);
},
{
closed = 1;
nodes = (
"37 -298 LINE",
"131 -296 OFFCURVE",
"213 -253 OFFCURVE",
"285 -190 CURVE SMOOTH",
"328 -152 OFFCURVE",
"374 -107 OFFCURVE",
"466 39 CURVE SMOOTH",
"610 267 OFFCURVE",
"662 352 OFFCURVE",
"701 416 CURVE SMOOTH",
"756 507 OFFCURVE",
"810 584 OFFCURVE",
"859 630 CURVE SMOOTH",
"884 653 OFFCURVE",
"906 664 OFFCURVE",
"926 664 CURVE SMOOTH",
"962 664 OFFCURVE",
"1018 664 OFFCURVE",
"1018 684 CURVE SMOOTH",
"1018 693 OFFCURVE",
"1008 696 OFFCURVE",
"1001 696 CURVE SMOOTH",
"988 696 OFFCURVE",
"970 693 OFFCURVE",
"948 686 CURVE SMOOTH",
"925 679 OFFCURVE",
"900 676 OFFCURVE",
"873 676 CURVE SMOOTH",
"820 676 OFFCURVE",
"736 672 OFFCURVE",
"648 659 CURVE SMOOTH",
"604 652 OFFCURVE",
"560 643 OFFCURVE",
"516 632 CURVE SMOOTH",
"427 608 OFFCURVE",
"354 571 OFFCURVE",
"310 519 CURVE SMOOTH",
"288 492 OFFCURVE",
"277 461 OFFCURVE",
"277 425 CURVE SMOOTH",
"277 358 OFFCURVE",
"327 313 OFFCURVE",
"412 313 CURVE SMOOTH",
"496 313 OFFCURVE",
"579 378 OFFCURVE",
"579 460 CURVE SMOOTH",
"579 472 OFFCURVE",
"577 488 OFFCURVE",
"572 501 CURVE",
"561 500 LINE",
"565 485 OFFCURVE",
"567 472 OFFCURVE",
"567 461 CURVE SMOOTH",
"567 385 OFFCURVE",
"491 325 OFFCURVE",
"412 325 CURVE SMOOTH",
"352 325 OFFCURVE",
"325 366 OFFCURVE",
"325 413 CURVE SMOOTH",
"325 484 OFFCURVE",
"370 536 OFFCURVE",
"436 573 CURVE SMOOTH",
"469 592 OFFCURVE",
"506 607 OFFCURVE",
"548 619 CURVE SMOOTH",
"631 642 OFFCURVE",
"718 655 OFFCURVE",
"796 660 CURVE SMOOTH",
"835 663 OFFCURVE",
"868 664 OFFCURVE",
"896 664 CURVE",
"896 662 LINE",
"825 630 OFFCURVE",
"763 572 OFFCURVE",
"705 502 CURVE SMOOTH",
"676 467 OFFCURVE",
"648 429 OFFCURVE",
"622 389 CURVE SMOOTH",
"570 308 OFFCURVE",
"521 225 OFFCURVE",
"477 146 CURVE SMOOTH",
"449 97 OFFCURVE",
"428 63 OFFCURVE",
"402 23 CURVE SMOOTH",
"328 -95 OFFCURVE",
"196 -279 OFFCURVE",
"39 -286 CURVE"
);
}
);
width = 606;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2018-11-27 04:22:44 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"624 649 LINE",
"650 659 LINE",
"621 784 LINE",
"595 772 LINE"
);
},
{
closed = 1;
nodes = (
"462 704 LINE",
"736 809 LINE",
"729 827 LINE",
"455 722 LINE"
);
},
{
closed = 1;
nodes = (
"47 24 OFFCURVE",
"137 -16 OFFCURVE",
"216 -16 CURVE SMOOTH",
"312 -16 OFFCURVE",
"393 22 OFFCURVE",
"464 84 CURVE SMOOTH",
"535 146 OFFCURVE",
"597 232 OFFCURVE",
"653 331 CURVE SMOOTH",
"710 431 OFFCURVE",
"765 516 OFFCURVE",
"813 575 CURVE SMOOTH",
"861 634 OFFCURVE",
"904 668 OFFCURVE",
"937 668 CURVE SMOOTH",
"972 668 OFFCURVE",
"996 669 OFFCURVE",
"1008 672 CURVE SMOOTH",
"1020 674 OFFCURVE",
"1026 678 OFFCURVE",
"1026 685 CURVE SMOOTH",
"1026 696 OFFCURVE",
"1018 696 OFFCURVE",
"1009 696 CURVE SMOOTH",
"1002 696 OFFCURVE",
"985 693 OFFCURVE",
"959 687 CURVE SMOOTH",
"933 681 OFFCURVE",
"898 678 OFFCURVE",
"854 678 CURVE SMOOTH",
"781 679 OFFCURVE",
"692 674 OFFCURVE",
"608 659 CURVE SMOOTH",
"566 651 OFFCURVE",
"526 641 OFFCURVE",
"487 628 CURVE SMOOTH",
"410 603 OFFCURVE",
"348 567 OFFCURVE",
"313 520 CURVE SMOOTH",
"295 497 OFFCURVE",
"286 470 OFFCURVE",
"286 441 CURVE SMOOTH",
"286 365 OFFCURVE",
"339 325 OFFCURVE",
"418 325 CURVE SMOOTH",
"507 325 OFFCURVE",
"587 392 OFFCURVE",
"587 472 CURVE SMOOTH",
"587 483 OFFCURVE",
"584 502 OFFCURVE",
"581 510 CURVE",
"570 508 LINE",
"573 498 OFFCURVE",
"575 485 OFFCURVE",
"575 470 CURVE SMOOTH",
"575 401 OFFCURVE",
"494 337 OFFCURVE",
"421 337 CURVE SMOOTH",
"368 337 OFFCURVE",
"334 369 OFFCURVE",
"334 425 CURVE SMOOTH",
"334 497 OFFCURVE",
"376 548 OFFCURVE",
"440 584 CURVE SMOOTH",
"471 602 OFFCURVE",
"507 616 OFFCURVE",
"548 627 CURVE SMOOTH",
"628 648 OFFCURVE",
"713 659 OFFCURVE",
"792 663 CURVE SMOOTH",
"831 665 OFFCURVE",
"866 666 OFFCURVE",
"896 666 CURVE",
"896 664 LINE",
"835 641 OFFCURVE",
"776 586 OFFCURVE",
"725 526 CURVE SMOOTH",
"682 475 OFFCURVE",
"629 393 OFFCURVE",
"600 351 CURVE SMOOTH",
"582 323 OFFCURVE",
"546 261 OFFCURVE",
"517 218 CURVE SMOOTH",
"499 191 OFFCURVE",
"480 165 OFFCURVE",
"459 139 CURVE SMOOTH",
"417 86 OFFCURVE",
"366 43 OFFCURVE",
"309 16 CURVE SMOOTH",
"280 3 OFFCURVE",
"250 -4 OFFCURVE",
"218 -4 CURVE SMOOTH",
"141 -4 OFFCURVE",
"85 38 OFFCURVE",
"96 90 CURVE",
"117 86 OFFCURVE",
"133 104 OFFCURVE",
"133 125 CURVE SMOOTH",
"133 146 OFFCURVE",
"119 160 OFFCURVE",
"96 160 CURVE SMOOTH",
"65 160 OFFCURVE",
"47 136 OFFCURVE",
"47 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 -3 LINE",
"323 -5 OFFCURVE",
"401 -4 OFFCURVE",
"429 -4 CURVE SMOOTH",
"466 -4 OFFCURVE",
"529 4 OFFCURVE",
"569 24 CURVE SMOOTH",
"606 42 OFFCURVE",
"637 73 OFFCURVE",
"639 105 CURVE SMOOTH",
"640 133 OFFCURVE",
"621 151 OFFCURVE",
"583 153 CURVE SMOOTH",
"560 154 OFFCURVE",
"542 147 OFFCURVE",
"526 133 CURVE SMOOTH",
"524 131 OFFCURVE",
"522 128 OFFCURVE",
"520 126 CURVE",
"528 123 LINE",
"530 125 OFFCURVE",
"531 127 OFFCURVE",
"534 129 CURVE SMOOTH",
"550 138 OFFCURVE",
"566 146 OFFCURVE",
"582 145 CURVE SMOOTH",
"607 144 OFFCURVE",
"621 133 OFFCURVE",
"620 108 CURVE SMOOTH",
"618 72 OFFCURVE",
"588 43 OFFCURVE",
"551 26 CURVE SMOOTH",
"518 10 OFFCURVE",
"469 4 OFFCURVE",
"428 4 CURVE SMOOTH",
"403 4 OFFCURVE",
"328 5 OFFCURVE",
"317 8 CURVE"
);
}
);
width = 719;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2018-11-27 04:22:45 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"624 649 LINE",
"650 659 LINE",
"621 784 LINE",
"595 772 LINE"
);
},
{
closed = 1;
nodes = (
"462 704 LINE",
"736 809 LINE",
"729 827 LINE",
"455 722 LINE"
);
},
{
closed = 1;
nodes = (
"1002 696 OFFCURVE",
"985 693 OFFCURVE",
"959 687 CURVE SMOOTH",
"933 681 OFFCURVE",
"898 678 OFFCURVE",
"854 678 CURVE SMOOTH",
"781 679 OFFCURVE",
"692 674 OFFCURVE",
"608 659 CURVE SMOOTH",
"566 651 OFFCURVE",
"526 641 OFFCURVE",
"487 628 CURVE SMOOTH",
"410 603 OFFCURVE",
"348 567 OFFCURVE",
"313 520 CURVE",
"257 453 OFFCURVE",
"354 368 OFFCURVE",
"450 390 CURVE SMOOTH",
"536 409 OFFCURVE",
"600 496 OFFCURVE",
"581 572 CURVE SMOOTH",
"576 592 OFFCURVE",
"562 620 OFFCURVE",
"557 627 CURVE",
"547 623 LINE",
"552 614 OFFCURVE",
"564 591 OFFCURVE",
"570 567 CURVE SMOOTH",
"586 502 OFFCURVE",
"521 419 OFFCURVE",
"450 403 CURVE SMOOTH",
"323 375 OFFCURVE",
"319 515 OFFCURVE",
"440 584 CURVE SMOOTH",
"471 602 OFFCURVE",
"507 616 OFFCURVE",
"548 627 CURVE SMOOTH",
"628 648 OFFCURVE",
"713 659 OFFCURVE",
"792 663 CURVE SMOOTH",
"831 665 OFFCURVE",
"866 666 OFFCURVE",
"896 666 CURVE",
"896 664 LINE",
"835 641 OFFCURVE",
"776 586 OFFCURVE",
"725 526 CURVE SMOOTH",
"682 475 OFFCURVE",
"629 393 OFFCURVE",
"600 351 CURVE SMOOTH",
"582 323 OFFCURVE",
"546 261 OFFCURVE",
"517 218 CURVE SMOOTH",
"499 191 OFFCURVE",
"480 165 OFFCURVE",
"459 139 CURVE SMOOTH",
"417 86 OFFCURVE",
"366 43 OFFCURVE",
"309 16 CURVE SMOOTH",
"280 3 OFFCURVE",
"250 -4 OFFCURVE",
"218 -4 CURVE SMOOTH",
"141 -4 OFFCURVE",
"85 38 OFFCURVE",
"96 90 CURVE",
"117 86 OFFCURVE",
"133 104 OFFCURVE",
"133 125 CURVE SMOOTH",
"133 146 OFFCURVE",
"119 160 OFFCURVE",
"96 160 CURVE SMOOTH",
"65 160 OFFCURVE",
"47 136 OFFCURVE",
"47 108 CURVE SMOOTH",
"47 24 OFFCURVE",
"137 -16 OFFCURVE",
"216 -16 CURVE SMOOTH",
"312 -16 OFFCURVE",
"393 22 OFFCURVE",
"464 84 CURVE SMOOTH",
"535 146 OFFCURVE",
"597 232 OFFCURVE",
"653 331 CURVE SMOOTH",
"710 431 OFFCURVE",
"765 516 OFFCURVE",
"813 575 CURVE SMOOTH",
"861 634 OFFCURVE",
"904 668 OFFCURVE",
"937 668 CURVE SMOOTH",
"972 668 OFFCURVE",
"996 669 OFFCURVE",
"1008 672 CURVE",
"1020 674 OFFCURVE",
"1026 678 OFFCURVE",
"1026 685 CURVE SMOOTH",
"1026 696 OFFCURVE",
"1018 696 OFFCURVE",
"1009 696 CURVE SMOOTH"
);
}
);
width = 605;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2018-11-27 04:22:45 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"239 24 OFFCURVE",
"329 -16 OFFCURVE",
"408 -16 CURVE SMOOTH",
"504 -16 OFFCURVE",
"585 22 OFFCURVE",
"656 84 CURVE SMOOTH",
"727 146 OFFCURVE",
"789 232 OFFCURVE",
"845 331 CURVE SMOOTH",
"902 431 OFFCURVE",
"957 516 OFFCURVE",
"1005 575 CURVE SMOOTH",
"1053 634 OFFCURVE",
"1096 668 OFFCURVE",
"1129 668 CURVE SMOOTH",
"1164 668 OFFCURVE",
"1188 669 OFFCURVE",
"1200 672 CURVE SMOOTH",
"1212 674 OFFCURVE",
"1218 678 OFFCURVE",
"1218 685 CURVE SMOOTH",
"1218 696 OFFCURVE",
"1210 696 OFFCURVE",
"1201 696 CURVE SMOOTH",
"1194 696 OFFCURVE",
"1177 693 OFFCURVE",
"1151 687 CURVE SMOOTH",
"1125 681 OFFCURVE",
"1090 678 OFFCURVE",
"1046 678 CURVE SMOOTH",
"973 679 OFFCURVE",
"884 674 OFFCURVE",
"800 659 CURVE SMOOTH",
"758 651 OFFCURVE",
"718 641 OFFCURVE",
"679 628 CURVE SMOOTH",
"602 603 OFFCURVE",
"540 567 OFFCURVE",
"505 520 CURVE SMOOTH",
"487 497 OFFCURVE",
"478 470 OFFCURVE",
"478 441 CURVE SMOOTH",
"478 365 OFFCURVE",
"531 325 OFFCURVE",
"610 325 CURVE SMOOTH",
"699 325 OFFCURVE",
"779 392 OFFCURVE",
"779 472 CURVE SMOOTH",
"779 483 OFFCURVE",
"776 502 OFFCURVE",
"773 510 CURVE",
"762 508 LINE",
"765 498 OFFCURVE",
"767 485 OFFCURVE",
"767 470 CURVE SMOOTH",
"767 401 OFFCURVE",
"686 337 OFFCURVE",
"613 337 CURVE SMOOTH",
"560 337 OFFCURVE",
"526 369 OFFCURVE",
"526 425 CURVE SMOOTH",
"526 497 OFFCURVE",
"568 548 OFFCURVE",
"632 584 CURVE SMOOTH",
"663 602 OFFCURVE",
"699 616 OFFCURVE",
"740 627 CURVE SMOOTH",
"820 648 OFFCURVE",
"905 659 OFFCURVE",
"984 663 CURVE SMOOTH",
"1023 665 OFFCURVE",
"1058 666 OFFCURVE",
"1088 666 CURVE",
"1088 664 LINE",
"1027 641 OFFCURVE",
"968 586 OFFCURVE",
"917 526 CURVE SMOOTH",
"874 475 OFFCURVE",
"821 393 OFFCURVE",
"792 351 CURVE SMOOTH",
"774 323 OFFCURVE",
"738 261 OFFCURVE",
"709 218 CURVE SMOOTH",
"691 191 OFFCURVE",
"672 165 OFFCURVE",
"651 139 CURVE SMOOTH",
"609 86 OFFCURVE",
"558 43 OFFCURVE",
"501 16 CURVE SMOOTH",
"472 3 OFFCURVE",
"442 -4 OFFCURVE",
"410 -4 CURVE SMOOTH",
"333 -4 OFFCURVE",
"277 38 OFFCURVE",
"288 90 CURVE",
"309 86 OFFCURVE",
"325 104 OFFCURVE",
"325 125 CURVE SMOOTH",
"325 146 OFFCURVE",
"311 160 OFFCURVE",
"288 160 CURVE SMOOTH",
"257 160 OFFCURVE",
"239 136 OFFCURVE",
"239 108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 794 LINE",
"730 794 LINE",
"730 805 LINE",
"524 805 LINE"
);
},
{
closed = 1;
nodes = (
"823 793 LINE",
"1029 793 LINE",
"1029 804 LINE",
"823 804 LINE"
);
},
{
closed = 1;
nodes = (
"942 670 OFFCURVE",
"929 670 OFFCURVE",
"916 670 CURVE SMOOTH",
"881 670 OFFCURVE",
"827 681 OFFCURVE",
"795 698 CURVE SMOOTH",
"759 717 OFFCURVE",
"730 748 OFFCURVE",
"730 784 CURVE SMOOTH",
"730 809 OFFCURVE",
"745 819 OFFCURVE",
"770 819 CURVE SMOOTH",
"786 819 OFFCURVE",
"806 814 OFFCURVE",
"817 800 CURVE SMOOTH",
"827 787 OFFCURVE",
"803 736 OFFCURVE",
"803 734 CURVE",
"811 737 LINE",
"811 739 OFFCURVE",
"838 791 OFFCURVE",
"825 804 CURVE SMOOTH",
"810 819 OFFCURVE",
"792 827 OFFCURVE",
"769 827 CURVE SMOOTH",
"731 827 OFFCURVE",
"711 810 OFFCURVE",
"711 782 CURVE SMOOTH",
"711 750 OFFCURVE",
"741 717 OFFCURVE",
"777 697 CURVE SMOOTH",
"816 675 OFFCURVE",
"868 662 OFFCURVE",
"917 662 CURVE SMOOTH",
"933 662 OFFCURVE",
"949 663 OFFCURVE",
"965 665 CURVE",
"954 672 LINE"
);
}
);
width = 797;
}
);
unicode = 131E;
},
{
glyphname = "tha-ethiopic";
lastChange = "2018-11-27 04:22:45 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
}
);
width = 920;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2018-11-27 04:22:45 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
},
{
closed = 1;
nodes = (
"780 360 LINE",
"926 360 LINE",
"926 390 LINE",
"780 390 LINE"
);
}
);
width = 920;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2018-11-27 04:22:46 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
},
{
closed = 1;
nodes = (
"498 1 LINE",
"456 -95 LINE",
"456 -109 LINE",
"628 -109 LINE",
"628 -91 LINE",
"489 -91 LINE SMOOTH",
"465 -91 OFFCURVE",
"480 -86 OFFCURVE",
"517 4 CURVE"
);
}
);
width = 920;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2018-11-27 04:22:46 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"847 722 OFFCURVE",
"787 710 OFFCURVE",
"714 663 CURVE SMOOTH",
"641 615 OFFCURVE",
"498 517 OFFCURVE",
"391 390 CURVE SMOOTH",
"381 378 OFFCURVE",
"368 363 OFFCURVE",
"354 347 CURVE",
"381 429 LINE SMOOTH",
"411 516 OFFCURVE",
"446 593 OFFCURVE",
"502 649 CURVE SMOOTH",
"529 676 OFFCURVE",
"564 696 OFFCURVE",
"605 709 CURVE",
"604 718 LINE",
"496 697 OFFCURVE",
"414 649 OFFCURVE",
"343 582 CURVE SMOOTH",
"271 514 OFFCURVE",
"214 426 OFFCURVE",
"152 330 CURVE SMOOTH",
"141 313 OFFCURVE",
"129 293 OFFCURVE",
"117 273 CURVE",
"134 277 LINE",
"139 285 OFFCURVE",
"143 293 OFFCURVE",
"148 300 CURVE SMOOTH",
"203 376 OFFCURVE",
"249 464 OFFCURVE",
"312 534 CURVE SMOOTH",
"375 604 OFFCURVE",
"447 662 OFFCURVE",
"535 691 CURVE",
"537 689 LINE",
"448 644 OFFCURVE",
"391 577 OFFCURVE",
"353 499 CURVE SMOOTH",
"334 460 OFFCURVE",
"319 420 OFFCURVE",
"304 377 CURVE SMOOTH",
"282 313 OFFCURVE",
"267 290 OFFCURVE",
"303 264 CURVE SMOOTH",
"325 247 OFFCURVE",
"347 319 OFFCURVE",
"385 360 CURVE SMOOTH",
"443 422 OFFCURVE",
"570 521 OFFCURVE",
"636 583 CURVE SMOOTH",
"702 645 OFFCURVE",
"769 689 OFFCURVE",
"826 698 CURVE",
"828 696 LINE",
"741 660 OFFCURVE",
"685 584 OFFCURVE",
"639 496 CURVE SMOOTH",
"616 451 OFFCURVE",
"595 404 OFFCURVE",
"576 355 CURVE SMOOTH",
"538 256 OFFCURVE",
"495 164 OFFCURVE",
"439 92 CURVE SMOOTH",
"411 55 OFFCURVE",
"377 27 OFFCURVE",
"337 8 CURVE",
"328 9 OFFCURVE",
"319 11 OFFCURVE",
"310 12 CURVE SMOOTH",
"301 13 OFFCURVE",
"292 14 OFFCURVE",
"283 14 CURVE SMOOTH",
"276 14 OFFCURVE",
"261 14 OFFCURVE",
"261 3 CURVE SMOOTH",
"261 -5 OFFCURVE",
"270 -8 OFFCURVE",
"282 -8 CURVE SMOOTH",
"294 -8 OFFCURVE",
"335 0 OFFCURVE",
"367 0 CURVE SMOOTH",
"458 0 OFFCURVE",
"543 21 OFFCURVE",
"615 65 CURVE SMOOTH",
"687 109 OFFCURVE",
"747 177 OFFCURVE",
"788 269 CURVE",
"780 271 LINE",
"699 96 OFFCURVE",
"559 8 OFFCURVE",
"356 8 CURVE",
"356 10 LINE",
"441 47 OFFCURVE",
"499 105 OFFCURVE",
"540 167 CURVE SMOOTH",
"581 229 OFFCURVE",
"608 296 OFFCURVE",
"629 353 CURVE",
"646 393 OFFCURVE",
"704 520 OFFCURVE",
"723 555 CURVE SMOOTH",
"755 611 OFFCURVE",
"819 698 OFFCURVE",
"862 698 CURVE SMOOTH",
"872 698 OFFCURVE",
"882 697 OFFCURVE",
"893 695 CURVE",
"903 692 OFFCURVE",
"913 691 OFFCURVE",
"922 691 CURVE SMOOTH",
"933 691 OFFCURVE",
"942 692 OFFCURVE",
"942 703 CURVE SMOOTH",
"942 716 OFFCURVE",
"919 722 OFFCURVE",
"899 722 CURVE SMOOTH"
);
}
);
width = 739;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2018-11-27 04:22:46 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"573 0 OFFCURVE",
"598 2 OFFCURVE",
"622 5 CURVE",
"654 7 OFFCURVE",
"687 15 OFFCURVE",
"715 27 CURVE",
"743 37 OFFCURVE",
"771 49 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE",
"961 271 LINE",
"916 173 OFFCURVE",
"852 102 OFFCURVE",
"769 59 CURVE",
"791 78 OFFCURVE",
"806 101 OFFCURVE",
"806 124 CURVE SMOOTH",
"806 152 OFFCURVE",
"786 169 OFFCURVE",
"748 169 CURVE SMOOTH",
"737 169 OFFCURVE",
"728 167 OFFCURVE",
"719 164 CURVE",
"721 167 LINE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"772 161 OFFCURVE",
"787 151 OFFCURVE",
"787 126 CURVE SMOOTH",
"787 87 OFFCURVE",
"760 60 OFFCURVE",
"708 34 CURVE SMOOTH",
"657 17 OFFCURVE",
"600 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"612 43 OFFCURVE",
"667 92 OFFCURVE",
"706 146 CURVE",
"720 154 OFFCURVE",
"733 161 OFFCURVE",
"747 161 CURVE SMOOTH"
);
}
);
width = 920;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2018-11-27 04:22:46 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"429 357 OFFCURVE",
"422 332 OFFCURVE",
"414 305 CURVE",
"479 328 LINE",
"490 362 OFFCURVE",
"501 396 OFFCURVE",
"512 429 CURVE SMOOTH",
"541 517 OFFCURVE",
"577 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"402 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"240 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"195 -8 OFFCURVE",
"229 -5 OFFCURVE",
"236 -2 CURVE SMOOTH",
"261 10 LINE SMOOTH",
"346 47 OFFCURVE",
"404 105 OFFCURVE",
"445 167 CURVE SMOOTH",
"486 229 OFFCURVE",
"513 296 OFFCURVE",
"534 353 CURVE",
"538 363 OFFCURVE",
"545 377 OFFCURVE",
"552 395 CURVE",
"489 376 LINE",
"486 369 OFFCURVE",
"484 362 OFFCURVE",
"481 355 CURVE SMOOTH",
"439 258 OFFCURVE",
"399 165 OFFCURVE",
"344 92 CURVE SMOOTH",
"316 55 OFFCURVE",
"282 27 OFFCURVE",
"242 8 CURVE",
"233 9 OFFCURVE",
"224 11 OFFCURVE",
"215 12 CURVE SMOOTH",
"206 13 OFFCURVE",
"197 14 OFFCURVE",
"188 14 CURVE SMOOTH",
"181 14 OFFCURVE",
"166 14 OFFCURVE",
"166 3 CURVE SMOOTH",
"166 -5 OFFCURVE",
"175 -8 OFFCURVE",
"187 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"425 -8 OFFCURVE",
"466 0 OFFCURVE",
"498 0 CURVE SMOOTH",
"589 0 OFFCURVE",
"674 21 OFFCURVE",
"746 65 CURVE SMOOTH",
"818 109 OFFCURVE",
"878 177 OFFCURVE",
"919 269 CURVE",
"911 271 LINE",
"830 96 OFFCURVE",
"690 8 OFFCURVE",
"487 8 CURVE",
"487 10 LINE",
"572 47 OFFCURVE",
"630 105 OFFCURVE",
"671 167 CURVE SMOOTH",
"712 229 OFFCURVE",
"739 296 OFFCURVE",
"760 353 CURVE",
"764 363 OFFCURVE",
"771 377 OFFCURVE",
"778 395 CURVE",
"715 376 LINE",
"712 369 OFFCURVE",
"710 362 OFFCURVE",
"707 355 CURVE SMOOTH",
"669 256 OFFCURVE",
"626 164 OFFCURVE",
"570 92 CURVE SMOOTH",
"542 55 OFFCURVE",
"508 27 OFFCURVE",
"468 8 CURVE",
"459 9 OFFCURVE",
"450 11 OFFCURVE",
"441 12 CURVE SMOOTH",
"432 13 OFFCURVE",
"423 14 OFFCURVE",
"414 14 CURVE SMOOTH",
"407 14 OFFCURVE",
"392 14 OFFCURVE",
"392 3 CURVE SMOOTH",
"392 -5 OFFCURVE",
"401 -8 OFFCURVE",
"413 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"778 395 LINE",
"803 449 OFFCURVE",
"840 528 OFFCURVE",
"854 555 CURVE SMOOTH",
"886 611 OFFCURVE",
"950 698 OFFCURVE",
"993 698 CURVE SMOOTH",
"1003 698 OFFCURVE",
"1013 697 OFFCURVE",
"1024 695 CURVE SMOOTH",
"1034 692 OFFCURVE",
"1044 691 OFFCURVE",
"1053 691 CURVE SMOOTH",
"1064 691 OFFCURVE",
"1073 692 OFFCURVE",
"1073 703 CURVE SMOOTH",
"1073 716 OFFCURVE",
"1050 722 OFFCURVE",
"1030 722 CURVE SMOOTH",
"940 722 OFFCURVE",
"600 566 OFFCURVE",
"512 480 CURVE SMOOTH",
"496 464 OFFCURVE",
"474 441 OFFCURVE",
"457 417 CURVE",
"469 412 LINE",
"478 425 OFFCURVE",
"493 441 OFFCURVE",
"507 453 CURVE SMOOTH",
"564 503 OFFCURVE",
"626 547 OFFCURVE",
"694 583 CURVE SMOOTH",
"778 627 OFFCURVE",
"897 677 OFFCURVE",
"957 698 CURVE",
"959 696 LINE",
"872 660 OFFCURVE",
"816 584 OFFCURVE",
"770 496 CURVE SMOOTH",
"750 457 OFFCURVE",
"732 417 OFFCURVE",
"715 376 CURVE"
);
}
);
width = 870;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2018-11-27 04:22:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"312 7 LINE SMOOTH",
"348 8 OFFCURVE",
"465 147 OFFCURVE",
"479 165 CURVE SMOOTH",
"530 228 OFFCURVE",
"577 296 OFFCURVE",
"622 360 CURVE SMOOTH",
"681 441 OFFCURVE",
"747 521 OFFCURVE",
"813 583 CURVE SMOOTH",
"879 645 OFFCURVE",
"946 689 OFFCURVE",
"1003 698 CURVE",
"1005 696 LINE",
"918 660 OFFCURVE",
"862 584 OFFCURVE",
"816 496 CURVE SMOOTH",
"793 451 OFFCURVE",
"772 404 OFFCURVE",
"753 355 CURVE SMOOTH",
"715 256 OFFCURVE",
"672 164 OFFCURVE",
"616 92 CURVE SMOOTH",
"588 55 OFFCURVE",
"554 27 OFFCURVE",
"514 8 CURVE",
"505 9 OFFCURVE",
"496 11 OFFCURVE",
"487 12 CURVE SMOOTH",
"478 13 OFFCURVE",
"469 14 OFFCURVE",
"460 14 CURVE SMOOTH",
"453 14 OFFCURVE",
"438 14 OFFCURVE",
"438 3 CURVE SMOOTH",
"438 -5 OFFCURVE",
"447 -8 OFFCURVE",
"459 -8 CURVE SMOOTH",
"471 -8 OFFCURVE",
"512 0 OFFCURVE",
"544 0 CURVE SMOOTH",
"635 0 OFFCURVE",
"720 21 OFFCURVE",
"792 65 CURVE SMOOTH",
"864 109 OFFCURVE",
"924 177 OFFCURVE",
"965 269 CURVE",
"957 271 LINE",
"876 96 OFFCURVE",
"736 8 OFFCURVE",
"533 8 CURVE",
"533 10 LINE",
"618 47 OFFCURVE",
"676 105 OFFCURVE",
"717 167 CURVE SMOOTH",
"758 229 OFFCURVE",
"785 296 OFFCURVE",
"806 353 CURVE",
"823 393 OFFCURVE",
"881 520 OFFCURVE",
"900 555 CURVE SMOOTH",
"932 611 OFFCURVE",
"996 698 OFFCURVE",
"1039 698 CURVE SMOOTH",
"1049 698 OFFCURVE",
"1059 697 OFFCURVE",
"1070 695 CURVE",
"1080 692 OFFCURVE",
"1090 691 OFFCURVE",
"1099 691 CURVE SMOOTH",
"1110 691 OFFCURVE",
"1119 692 OFFCURVE",
"1119 703 CURVE SMOOTH",
"1119 716 OFFCURVE",
"1096 722 OFFCURVE",
"1076 722 CURVE SMOOTH",
"1024 722 OFFCURVE",
"964 710 OFFCURVE",
"891 663 CURVE SMOOTH",
"818 615 OFFCURVE",
"732 533 OFFCURVE",
"628 390 CURVE SMOOTH",
"595 345 OFFCURVE",
"536 260 OFFCURVE",
"496 208 CURVE SMOOTH",
"448 144 OFFCURVE",
"397 84 OFFCURVE",
"348 41 CURVE",
"346 43 LINE",
"427 156 OFFCURVE",
"475 343 OFFCURVE",
"508 429 CURVE SMOOTH",
"541 515 OFFCURVE",
"574 593 OFFCURVE",
"629 649 CURVE SMOOTH",
"656 676 OFFCURVE",
"691 696 OFFCURVE",
"732 709 CURVE",
"731 718 LINE",
"623 697 OFFCURVE",
"541 649 OFFCURVE",
"470 582 CURVE SMOOTH",
"399 514 OFFCURVE",
"344 424 OFFCURVE",
"279 330 CURVE SMOOTH",
"244 279 OFFCURVE",
"4 -53 OFFCURVE",
"2 -55 CURVE SMOOTH",
"-46 -116 OFFCURVE",
"-96 -156 OFFCURVE",
"-155 -156 CURVE SMOOTH",
"-168 -156 OFFCURVE",
"-187 -150 OFFCURVE",
"-188 -142 CURVE",
"-177 -139 OFFCURVE",
"-173 -125 OFFCURVE",
"-173 -114 CURVE SMOOTH",
"-173 -97 OFFCURVE",
"-185 -81 OFFCURVE",
"-202 -81 CURVE SMOOTH",
"-222 -81 OFFCURVE",
"-237 -96 OFFCURVE",
"-237 -116 CURVE SMOOTH",
"-237 -157 OFFCURVE",
"-201 -168 OFFCURVE",
"-165 -168 CURVE SMOOTH",
"-97 -168 OFFCURVE",
"-44 -131 OFFCURVE",
"4 -74 CURVE SMOOTH",
"10 -67 OFFCURVE",
"261 279 OFFCURVE",
"275 300 CURVE SMOOTH",
"330 382 OFFCURVE",
"379 464 OFFCURVE",
"439 534 CURVE SMOOTH",
"499 604 OFFCURVE",
"574 662 OFFCURVE",
"662 691 CURVE",
"664 689 LINE",
"575 644 OFFCURVE",
"517 576 OFFCURVE",
"480 499 CURVE SMOOTH",
"418 370 OFFCURVE",
"412 212 OFFCURVE",
"354 120 CURVE SMOOTH",
"326 75 OFFCURVE",
"303 46 OFFCURVE",
"270 6 CURVE"
);
}
);
width = 916;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2018-11-27 04:22:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"231 236 LINE",
"179 164 OFFCURVE",
"137 106 OFFCURVE",
"136 105 CURVE SMOOTH",
"81 50 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"85 33 OFFCURVE",
"138 86 CURVE SMOOTH",
"141 89 OFFCURVE",
"191 158 OFFCURVE",
"248 236 CURVE"
);
},
{
closed = 1;
nodes = (
"-107 -60 LINE",
"-64 -29 OFFCURVE",
"-16 -10 OFFCURVE",
"39 -10 CURVE SMOOTH",
"143 -10 OFFCURVE",
"178 -61 OFFCURVE",
"178 -105 CURVE",
"175 -104 OFFCURVE",
"172 -104 OFFCURVE",
"168 -104 CURVE SMOOTH",
"149 -104 OFFCURVE",
"140 -120 OFFCURVE",
"140 -139 CURVE SMOOTH",
"140 -159 OFFCURVE",
"152 -174 OFFCURVE",
"173 -174 CURVE SMOOTH",
"202 -174 OFFCURVE",
"218 -147 OFFCURVE",
"218 -120 CURVE SMOOTH",
"218 -38 OFFCURVE",
"121 2 OFFCURVE",
"44 2 CURVE SMOOTH",
"-21 2 OFFCURVE",
"-78 -15 OFFCURVE",
"-128 -43 CURVE"
);
},
{
closed = 1;
nodes = (
"231 213 LINE",
"264 259 OFFCURVE",
"289 294 OFFCURVE",
"293 300 CURVE SMOOTH",
"348 382 OFFCURVE",
"397 464 OFFCURVE",
"457 534 CURVE SMOOTH",
"517 604 OFFCURVE",
"592 662 OFFCURVE",
"680 691 CURVE",
"682 689 LINE",
"593 644 OFFCURVE",
"535 576 OFFCURVE",
"498 499 CURVE SMOOTH",
"436 370 OFFCURVE",
"430 212 OFFCURVE",
"372 120 CURVE SMOOTH",
"344 75 OFFCURVE",
"321 46 OFFCURVE",
"288 6 CURVE",
"330 7 LINE SMOOTH",
"366 8 OFFCURVE",
"483 147 OFFCURVE",
"497 165 CURVE SMOOTH",
"548 228 OFFCURVE",
"595 296 OFFCURVE",
"640 360 CURVE SMOOTH",
"699 441 OFFCURVE",
"765 521 OFFCURVE",
"831 583 CURVE SMOOTH",
"897 645 OFFCURVE",
"964 689 OFFCURVE",
"1021 698 CURVE",
"1023 696 LINE",
"936 660 OFFCURVE",
"880 584 OFFCURVE",
"834 496 CURVE SMOOTH",
"811 451 OFFCURVE",
"790 404 OFFCURVE",
"771 355 CURVE SMOOTH",
"733 256 OFFCURVE",
"690 164 OFFCURVE",
"634 92 CURVE SMOOTH",
"606 55 OFFCURVE",
"572 27 OFFCURVE",
"532 8 CURVE",
"523 9 OFFCURVE",
"514 11 OFFCURVE",
"505 12 CURVE SMOOTH",
"496 13 OFFCURVE",
"487 14 OFFCURVE",
"478 14 CURVE SMOOTH",
"471 14 OFFCURVE",
"456 14 OFFCURVE",
"456 3 CURVE SMOOTH",
"456 -5 OFFCURVE",
"465 -8 OFFCURVE",
"477 -8 CURVE SMOOTH",
"489 -8 OFFCURVE",
"530 0 OFFCURVE",
"562 0 CURVE SMOOTH",
"653 0 OFFCURVE",
"738 21 OFFCURVE",
"810 65 CURVE SMOOTH",
"882 109 OFFCURVE",
"942 177 OFFCURVE",
"983 269 CURVE",
"975 271 LINE",
"894 96 OFFCURVE",
"754 8 OFFCURVE",
"551 8 CURVE",
"551 10 LINE",
"636 47 OFFCURVE",
"694 105 OFFCURVE",
"735 167 CURVE SMOOTH",
"776 229 OFFCURVE",
"803 296 OFFCURVE",
"824 353 CURVE",
"841 393 OFFCURVE",
"899 520 OFFCURVE",
"918 555 CURVE SMOOTH",
"950 611 OFFCURVE",
"1014 698 OFFCURVE",
"1057 698 CURVE SMOOTH",
"1067 698 OFFCURVE",
"1077 697 OFFCURVE",
"1088 695 CURVE",
"1098 692 OFFCURVE",
"1108 691 OFFCURVE",
"1117 691 CURVE SMOOTH",
"1128 691 OFFCURVE",
"1137 692 OFFCURVE",
"1137 703 CURVE SMOOTH",
"1137 716 OFFCURVE",
"1114 722 OFFCURVE",
"1094 722 CURVE SMOOTH",
"1042 722 OFFCURVE",
"982 710 OFFCURVE",
"909 663 CURVE SMOOTH",
"836 615 OFFCURVE",
"750 533 OFFCURVE",
"646 390 CURVE SMOOTH",
"613 345 OFFCURVE",
"554 260 OFFCURVE",
"514 208 CURVE SMOOTH",
"466 144 OFFCURVE",
"415 84 OFFCURVE",
"366 41 CURVE",
"364 43 LINE",
"445 156 OFFCURVE",
"493 343 OFFCURVE",
"526 429 CURVE SMOOTH",
"559 515 OFFCURVE",
"592 593 OFFCURVE",
"647 649 CURVE SMOOTH",
"674 676 OFFCURVE",
"709 696 OFFCURVE",
"750 709 CURVE",
"749 718 LINE",
"641 697 OFFCURVE",
"559 649 OFFCURVE",
"488 582 CURVE SMOOTH",
"417 514 OFFCURVE",
"362 424 OFFCURVE",
"297 330 CURVE SMOOTH",
"286 314 OFFCURVE",
"253 268 OFFCURVE",
"214 213 CURVE"
);
}
);
width = 934;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2018-11-27 04:22:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
},
{
closed = 1;
nodes = (
"55 22 LINE",
"97 25 OFFCURVE",
"140 37 OFFCURVE",
"174 56 CURVE SMOOTH",
"210 76 OFFCURVE",
"240 109 OFFCURVE",
"240 141 CURVE SMOOTH",
"240 165 OFFCURVE",
"226 181 OFFCURVE",
"198 185 CURVE",
"192 177 LINE",
"211 174 OFFCURVE",
"221 164 OFFCURVE",
"221 143 CURVE SMOOTH",
"221 107 OFFCURVE",
"192 76 OFFCURVE",
"156 57 CURVE SMOOTH",
"133 45 OFFCURVE",
"98 36 OFFCURVE",
"68 31 CURVE"
);
},
{
closed = 1;
nodes = (
"346 22 LINE",
"388 25 OFFCURVE",
"431 37 OFFCURVE",
"465 56 CURVE SMOOTH",
"501 76 OFFCURVE",
"531 109 OFFCURVE",
"531 141 CURVE SMOOTH",
"531 165 OFFCURVE",
"517 181 OFFCURVE",
"489 185 CURVE",
"483 177 LINE",
"502 174 OFFCURVE",
"512 164 OFFCURVE",
"512 143 CURVE SMOOTH",
"512 107 OFFCURVE",
"483 76 OFFCURVE",
"447 57 CURVE SMOOTH",
"424 45 OFFCURVE",
"389 36 OFFCURVE",
"359 31 CURVE"
);
}
);
width = 920;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2018-11-27 04:22:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"55 22 LINE",
"97 25 OFFCURVE",
"140 37 OFFCURVE",
"174 56 CURVE SMOOTH",
"210 76 OFFCURVE",
"240 109 OFFCURVE",
"240 141 CURVE SMOOTH",
"240 165 OFFCURVE",
"226 181 OFFCURVE",
"198 185 CURVE",
"192 177 LINE",
"211 174 OFFCURVE",
"221 164 OFFCURVE",
"221 143 CURVE SMOOTH",
"221 107 OFFCURVE",
"192 76 OFFCURVE",
"156 57 CURVE SMOOTH",
"133 45 OFFCURVE",
"98 36 OFFCURVE",
"68 31 CURVE"
);
},
{
closed = 1;
nodes = (
"346 22 LINE",
"388 25 OFFCURVE",
"431 37 OFFCURVE",
"465 56 CURVE SMOOTH",
"501 76 OFFCURVE",
"531 109 OFFCURVE",
"531 141 CURVE SMOOTH",
"531 165 OFFCURVE",
"517 181 OFFCURVE",
"489 185 CURVE",
"483 177 LINE",
"502 174 OFFCURVE",
"512 164 OFFCURVE",
"512 143 CURVE SMOOTH",
"512 107 OFFCURVE",
"483 76 OFFCURVE",
"447 57 CURVE SMOOTH",
"424 45 OFFCURVE",
"389 36 OFFCURVE",
"359 31 CURVE"
);
},
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
},
{
closed = 1;
nodes = (
"780 360 LINE",
"926 360 LINE",
"926 390 LINE",
"780 390 LINE"
);
}
);
width = 920;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2018-11-27 04:22:47 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"55 22 LINE",
"97 25 OFFCURVE",
"140 37 OFFCURVE",
"174 56 CURVE SMOOTH",
"210 76 OFFCURVE",
"240 109 OFFCURVE",
"240 141 CURVE SMOOTH",
"240 165 OFFCURVE",
"226 181 OFFCURVE",
"198 185 CURVE",
"192 177 LINE",
"211 174 OFFCURVE",
"221 164 OFFCURVE",
"221 143 CURVE SMOOTH",
"221 107 OFFCURVE",
"192 76 OFFCURVE",
"156 57 CURVE SMOOTH",
"133 45 OFFCURVE",
"98 36 OFFCURVE",
"68 31 CURVE"
);
},
{
closed = 1;
nodes = (
"346 22 LINE",
"388 25 OFFCURVE",
"431 37 OFFCURVE",
"465 56 CURVE SMOOTH",
"501 76 OFFCURVE",
"531 109 OFFCURVE",
"531 141 CURVE SMOOTH",
"531 165 OFFCURVE",
"517 181 OFFCURVE",
"489 185 CURVE",
"483 177 LINE",
"502 174 OFFCURVE",
"512 164 OFFCURVE",
"512 143 CURVE SMOOTH",
"512 107 OFFCURVE",
"483 76 OFFCURVE",
"447 57 CURVE SMOOTH",
"424 45 OFFCURVE",
"389 36 OFFCURVE",
"359 31 CURVE"
);
},
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
},
{
closed = 1;
nodes = (
"498 1 LINE",
"456 -95 LINE",
"456 -109 LINE",
"628 -109 LINE",
"628 -91 LINE",
"489 -91 LINE SMOOTH",
"465 -91 OFFCURVE",
"480 -86 OFFCURVE",
"517 4 CURVE"
);
}
);
width = 920;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2018-11-27 04:22:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"847 722 OFFCURVE",
"787 710 OFFCURVE",
"714 663 CURVE SMOOTH",
"645 618 OFFCURVE",
"514 528 OFFCURVE",
"409 411 CURVE",
"408 411 LINE",
"402 403 LINE",
"398 399 OFFCURVE",
"395 394 OFFCURVE",
"391 390 CURVE",
"354 347 LINE",
"381 429 LINE SMOOTH",
"411 516 OFFCURVE",
"446 593 OFFCURVE",
"502 649 CURVE SMOOTH",
"529 676 OFFCURVE",
"564 696 OFFCURVE",
"605 709 CURVE",
"604 718 LINE",
"496 697 OFFCURVE",
"414 649 OFFCURVE",
"343 582 CURVE SMOOTH",
"271 514 OFFCURVE",
"214 426 OFFCURVE",
"152 330 CURVE SMOOTH",
"144 318 OFFCURVE",
"136 304 OFFCURVE",
"127 290 CURVE",
"121 280 LINE",
"119 277 LINE",
"137 282 LINE",
"167 292 OFFCURVE",
"195 299 OFFCURVE",
"219 312 CURVE SMOOTH",
"255 332 OFFCURVE",
"285 365 OFFCURVE",
"285 397 CURVE SMOOTH",
"285 421 OFFCURVE",
"271 437 OFFCURVE",
"243 441 CURVE",
"237 433 LINE",
"256 430 OFFCURVE",
"266 420 OFFCURVE",
"266 399 CURVE SMOOTH",
"266 363 OFFCURVE",
"237 332 OFFCURVE",
"201 313 CURVE SMOOTH",
"186 305 OFFCURVE",
"165 298 OFFCURVE",
"143 293 CURVE",
"145 295 OFFCURVE",
"146 298 OFFCURVE",
"148 300 CURVE",
"203 376 OFFCURVE",
"249 464 OFFCURVE",
"312 534 CURVE SMOOTH",
"375 604 OFFCURVE",
"447 662 OFFCURVE",
"535 691 CURVE",
"537 689 LINE",
"448 644 OFFCURVE",
"391 577 OFFCURVE",
"353 499 CURVE SMOOTH",
"334 460 OFFCURVE",
"319 420 OFFCURVE",
"304 377 CURVE SMOOTH",
"282 313 OFFCURVE",
"290 268 OFFCURVE",
"303 264 CURVE SMOOTH",
"324 258 LINE",
"346 264 OFFCURVE",
"366 272 OFFCURVE",
"384 282 CURVE SMOOTH",
"420 302 OFFCURVE",
"450 335 OFFCURVE",
"450 367 CURVE SMOOTH",
"450 384 OFFCURVE",
"443 396 OFFCURVE",
"430 404 CURVE",
"494 462 OFFCURVE",
"584 534 OFFCURVE",
"636 583 CURVE SMOOTH",
"702 645 OFFCURVE",
"769 689 OFFCURVE",
"826 698 CURVE",
"828 696 LINE",
"741 660 OFFCURVE",
"685 584 OFFCURVE",
"639 496 CURVE SMOOTH",
"616 451 OFFCURVE",
"595 404 OFFCURVE",
"576 355 CURVE SMOOTH",
"538 256 OFFCURVE",
"495 164 OFFCURVE",
"439 92 CURVE SMOOTH",
"411 55 OFFCURVE",
"377 27 OFFCURVE",
"337 8 CURVE",
"328 9 OFFCURVE",
"319 11 OFFCURVE",
"310 12 CURVE SMOOTH",
"301 13 OFFCURVE",
"292 14 OFFCURVE",
"283 14 CURVE SMOOTH",
"276 14 OFFCURVE",
"261 14 OFFCURVE",
"261 3 CURVE SMOOTH",
"261 -5 OFFCURVE",
"270 -8 OFFCURVE",
"282 -8 CURVE SMOOTH",
"294 -8 OFFCURVE",
"335 0 OFFCURVE",
"367 0 CURVE SMOOTH",
"458 0 OFFCURVE",
"543 21 OFFCURVE",
"615 65 CURVE SMOOTH",
"687 109 OFFCURVE",
"747 177 OFFCURVE",
"788 269 CURVE",
"780 271 LINE",
"699 96 OFFCURVE",
"559 8 OFFCURVE",
"356 8 CURVE",
"356 10 LINE",
"441 47 OFFCURVE",
"499 105 OFFCURVE",
"540 167 CURVE SMOOTH",
"581 229 OFFCURVE",
"608 296 OFFCURVE",
"629 353 CURVE",
"646 393 OFFCURVE",
"704 520 OFFCURVE",
"723 555 CURVE SMOOTH",
"755 611 OFFCURVE",
"819 698 OFFCURVE",
"862 698 CURVE SMOOTH",
"872 698 OFFCURVE",
"882 697 OFFCURVE",
"893 695 CURVE",
"903 692 OFFCURVE",
"913 691 OFFCURVE",
"922 691 CURVE SMOOTH",
"933 691 OFFCURVE",
"942 692 OFFCURVE",
"942 703 CURVE SMOOTH",
"942 716 OFFCURVE",
"919 722 OFFCURVE",
"899 722 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"431 333 OFFCURVE",
"402 302 OFFCURVE",
"366 283 CURVE",
"354 276 OFFCURVE",
"337 271 OFFCURVE",
"320 266 CURVE",
"337 281 OFFCURVE",
"357 329 OFFCURVE",
"385 360 CURVE SMOOTH",
"395 371 OFFCURVE",
"407 383 OFFCURVE",
"421 395 CURVE",
"428 390 OFFCURVE",
"431 381 OFFCURVE",
"431 369 CURVE SMOOTH"
);
}
);
width = 739;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2018-11-27 04:22:48 +0000";
layers = (
{
components = (
{
name = _part.ho.cap;
transform = "{0.96126, 0.27564, -0.27564, 0.96126, 64, -513}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"55 22 LINE",
"97 25 OFFCURVE",
"140 37 OFFCURVE",
"174 56 CURVE SMOOTH",
"210 76 OFFCURVE",
"240 109 OFFCURVE",
"240 141 CURVE SMOOTH",
"240 165 OFFCURVE",
"226 181 OFFCURVE",
"198 185 CURVE",
"192 177 LINE",
"211 174 OFFCURVE",
"221 164 OFFCURVE",
"221 143 CURVE SMOOTH",
"221 107 OFFCURVE",
"192 76 OFFCURVE",
"156 57 CURVE SMOOTH",
"133 45 OFFCURVE",
"98 36 OFFCURVE",
"68 31 CURVE"
);
},
{
closed = 1;
nodes = (
"346 22 LINE",
"388 25 OFFCURVE",
"431 37 OFFCURVE",
"465 56 CURVE SMOOTH",
"501 76 OFFCURVE",
"531 109 OFFCURVE",
"531 141 CURVE",
"531 165 OFFCURVE",
"517 181 OFFCURVE",
"489 185 CURVE",
"483 177 LINE",
"502 174 OFFCURVE",
"512 164 OFFCURVE",
"512 143 CURVE SMOOTH",
"512 107 OFFCURVE",
"483 76 OFFCURVE",
"447 57 CURVE SMOOTH",
"424 45 OFFCURVE",
"389 36 OFFCURVE",
"359 31 CURVE"
);
},
{
closed = 1;
nodes = (
"961 271 LINE",
"880 96 OFFCURVE",
"740 8 OFFCURVE",
"537 8 CURVE",
"537 10 LINE",
"622 47 OFFCURVE",
"680 105 OFFCURVE",
"721 167 CURVE SMOOTH",
"762 229 OFFCURVE",
"789 296 OFFCURVE",
"810 353 CURVE",
"827 393 OFFCURVE",
"885 520 OFFCURVE",
"904 555 CURVE SMOOTH",
"936 611 OFFCURVE",
"1000 698 OFFCURVE",
"1043 698 CURVE SMOOTH",
"1053 698 OFFCURVE",
"1063 697 OFFCURVE",
"1074 695 CURVE SMOOTH",
"1084 692 OFFCURVE",
"1094 691 OFFCURVE",
"1103 691 CURVE SMOOTH",
"1114 691 OFFCURVE",
"1123 692 OFFCURVE",
"1123 703 CURVE SMOOTH",
"1123 716 OFFCURVE",
"1100 722 OFFCURVE",
"1080 722 CURVE SMOOTH",
"1028 722 OFFCURVE",
"968 710 OFFCURVE",
"895 663 CURVE SMOOTH",
"822 615 OFFCURVE",
"736 533 OFFCURVE",
"632 390 CURVE SMOOTH",
"599 345 OFFCURVE",
"540 260 OFFCURVE",
"500 208 CURVE SMOOTH",
"452 144 OFFCURVE",
"401 84 OFFCURVE",
"352 41 CURVE",
"350 43 LINE",
"405 116 OFFCURVE",
"438 206 OFFCURVE",
"468 296 CURVE SMOOTH",
"483 341 OFFCURVE",
"497 385 OFFCURVE",
"512 429 CURVE SMOOTH",
"540 517 OFFCURVE",
"578 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"403 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"241 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"415 309 OFFCURVE",
"381 188 OFFCURVE",
"358 120 CURVE SMOOTH",
"343 78 OFFCURVE",
"324 39 OFFCURVE",
"301 2 CURVE",
"308 -8 LINE",
"376 41 OFFCURVE",
"432 101 OFFCURVE",
"483 165 CURVE SMOOTH",
"534 228 OFFCURVE",
"581 296 OFFCURVE",
"626 360 CURVE SMOOTH",
"685 441 OFFCURVE",
"751 521 OFFCURVE",
"817 583 CURVE SMOOTH",
"883 645 OFFCURVE",
"950 689 OFFCURVE",
"1007 698 CURVE",
"1009 696 LINE",
"922 660 OFFCURVE",
"866 584 OFFCURVE",
"820 496 CURVE SMOOTH",
"797 451 OFFCURVE",
"776 404 OFFCURVE",
"757 355 CURVE SMOOTH",
"719 256 OFFCURVE",
"676 164 OFFCURVE",
"620 92 CURVE SMOOTH",
"592 55 OFFCURVE",
"558 27 OFFCURVE",
"518 8 CURVE",
"509 9 OFFCURVE",
"500 11 OFFCURVE",
"491 12 CURVE SMOOTH",
"482 13 OFFCURVE",
"473 14 OFFCURVE",
"464 14 CURVE SMOOTH",
"457 14 OFFCURVE",
"442 14 OFFCURVE",
"442 3 CURVE SMOOTH",
"442 -5 OFFCURVE",
"451 -8 OFFCURVE",
"463 -8 CURVE SMOOTH",
"475 -8 OFFCURVE",
"516 0 OFFCURVE",
"548 0 CURVE SMOOTH",
"639 0 OFFCURVE",
"724 21 OFFCURVE",
"796 65 CURVE SMOOTH",
"868 109 OFFCURVE",
"928 177 OFFCURVE",
"969 269 CURVE"
);
}
);
width = 920;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2018-11-27 04:22:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"3 -3 LINE",
"45 -8 OFFCURVE",
"90 -3 OFFCURVE",
"126 11 CURVE SMOOTH",
"165 26 OFFCURVE",
"200 53 OFFCURVE",
"204 85 CURVE SMOOTH",
"207 109 OFFCURVE",
"197 126 OFFCURVE",
"169 135 CURVE",
"163 128 LINE",
"181 122 OFFCURVE",
"189 111 OFFCURVE",
"186 90 CURVE SMOOTH",
"181 54 OFFCURVE",
"147 28 OFFCURVE",
"108 15 CURVE SMOOTH",
"83 7 OFFCURVE",
"48 3 OFFCURVE",
"17 3 CURVE"
);
},
{
closed = 1;
nodes = (
"217 -7 LINE",
"259 -10 OFFCURVE",
"302 -5 OFFCURVE",
"339 8 CURVE SMOOTH",
"378 22 OFFCURVE",
"413 51 OFFCURVE",
"418 82 CURVE SMOOTH",
"422 105 OFFCURVE",
"410 124 OFFCURVE",
"383 133 CURVE",
"376 125 LINE",
"394 119 OFFCURVE",
"403 107 OFFCURVE",
"399 87 CURVE SMOOTH",
"392 52 OFFCURVE",
"360 27 OFFCURVE",
"321 12 CURVE SMOOTH",
"297 3 OFFCURVE",
"261 1 OFFCURVE",
"231 1 CURVE"
);
},
{
closed = 1;
nodes = (
"37 -8 OFFCURVE",
"90 29 OFFCURVE",
"138 86 CURVE SMOOTH",
"179 134 OFFCURVE",
"239 235 OFFCURVE",
"279 300 CURVE SMOOTH",
"328 380 OFFCURVE",
"380 464 OFFCURVE",
"443 534 CURVE SMOOTH",
"506 604 OFFCURVE",
"578 662 OFFCURVE",
"666 691 CURVE",
"668 689 LINE",
"579 644 OFFCURVE",
"523 576 OFFCURVE",
"484 499 CURVE SMOOTH",
"464 460 OFFCURVE",
"448 420 OFFCURVE",
"435 377 CURVE SMOOTH",
"429 357 OFFCURVE",
"422 332 OFFCURVE",
"414 305 CURVE",
"479 328 LINE",
"490 362 OFFCURVE",
"501 396 OFFCURVE",
"512 429 CURVE SMOOTH",
"541 517 OFFCURVE",
"577 593 OFFCURVE",
"633 649 CURVE SMOOTH",
"660 676 OFFCURVE",
"695 696 OFFCURVE",
"736 709 CURVE",
"735 718 LINE",
"627 697 OFFCURVE",
"545 649 OFFCURVE",
"474 582 CURVE SMOOTH",
"402 514 OFFCURVE",
"344 427 OFFCURVE",
"283 330 CURVE SMOOTH",
"240 262 OFFCURVE",
"177 156 OFFCURVE",
"136 105 CURVE SMOOTH",
"87 44 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"195 -8 OFFCURVE",
"229 -5 OFFCURVE",
"236 -2 CURVE SMOOTH",
"261 10 LINE SMOOTH",
"346 47 OFFCURVE",
"404 105 OFFCURVE",
"445 167 CURVE SMOOTH",
"486 229 OFFCURVE",
"513 296 OFFCURVE",
"534 353 CURVE",
"538 363 OFFCURVE",
"545 377 OFFCURVE",
"552 395 CURVE",
"489 376 LINE",
"486 369 OFFCURVE",
"484 362 OFFCURVE",
"481 355 CURVE SMOOTH",
"439 258 OFFCURVE",
"399 165 OFFCURVE",
"344 92 CURVE SMOOTH",
"316 55 OFFCURVE",
"282 27 OFFCURVE",
"242 8 CURVE",
"233 9 OFFCURVE",
"224 11 OFFCURVE",
"215 12 CURVE SMOOTH",
"206 13 OFFCURVE",
"197 14 OFFCURVE",
"188 14 CURVE SMOOTH",
"181 14 OFFCURVE",
"166 14 OFFCURVE",
"166 3 CURVE SMOOTH",
"166 -5 OFFCURVE",
"175 -8 OFFCURVE",
"187 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"425 -8 OFFCURVE",
"466 0 OFFCURVE",
"498 0 CURVE SMOOTH",
"589 0 OFFCURVE",
"674 21 OFFCURVE",
"746 65 CURVE SMOOTH",
"818 109 OFFCURVE",
"878 177 OFFCURVE",
"919 269 CURVE",
"911 271 LINE",
"830 96 OFFCURVE",
"690 8 OFFCURVE",
"487 8 CURVE",
"487 10 LINE",
"572 47 OFFCURVE",
"630 105 OFFCURVE",
"671 167 CURVE SMOOTH",
"712 229 OFFCURVE",
"739 296 OFFCURVE",
"760 353 CURVE",
"764 363 OFFCURVE",
"771 377 OFFCURVE",
"778 395 CURVE",
"715 376 LINE",
"712 369 OFFCURVE",
"710 362 OFFCURVE",
"707 355 CURVE SMOOTH",
"669 256 OFFCURVE",
"626 164 OFFCURVE",
"570 92 CURVE SMOOTH",
"542 55 OFFCURVE",
"508 27 OFFCURVE",
"468 8 CURVE",
"459 9 OFFCURVE",
"450 11 OFFCURVE",
"441 12 CURVE SMOOTH",
"432 13 OFFCURVE",
"423 14 OFFCURVE",
"414 14 CURVE SMOOTH",
"407 14 OFFCURVE",
"392 14 OFFCURVE",
"392 3 CURVE SMOOTH",
"392 -5 OFFCURVE",
"401 -8 OFFCURVE",
"413 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"778 395 LINE",
"803 449 OFFCURVE",
"840 528 OFFCURVE",
"854 555 CURVE SMOOTH",
"886 611 OFFCURVE",
"950 698 OFFCURVE",
"993 698 CURVE SMOOTH",
"1003 698 OFFCURVE",
"1013 697 OFFCURVE",
"1024 695 CURVE SMOOTH",
"1034 692 OFFCURVE",
"1044 691 OFFCURVE",
"1053 691 CURVE SMOOTH",
"1064 691 OFFCURVE",
"1073 692 OFFCURVE",
"1073 703 CURVE SMOOTH",
"1073 716 OFFCURVE",
"1050 722 OFFCURVE",
"1030 722 CURVE SMOOTH",
"940 722 OFFCURVE",
"600 566 OFFCURVE",
"512 480 CURVE SMOOTH",
"496 464 OFFCURVE",
"474 441 OFFCURVE",
"457 417 CURVE",
"469 412 LINE",
"478 425 OFFCURVE",
"493 441 OFFCURVE",
"507 453 CURVE SMOOTH",
"564 503 OFFCURVE",
"626 547 OFFCURVE",
"694 583 CURVE SMOOTH",
"778 627 OFFCURVE",
"897 677 OFFCURVE",
"957 698 CURVE",
"959 696 LINE",
"872 660 OFFCURVE",
"816 584 OFFCURVE",
"770 496 CURVE SMOOTH",
"750 457 OFFCURVE",
"732 417 OFFCURVE",
"715 376 CURVE"
);
}
);
width = 870;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2018-11-27 04:22:48 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"-139 -160 LINE",
"-97 -164 OFFCURVE",
"-53 -159 OFFCURVE",
"-16 -147 CURVE SMOOTH",
"23 -134 OFFCURVE",
"59 -107 OFFCURVE",
"64 -75 CURVE SMOOTH",
"68 -51 OFFCURVE",
"57 -33 OFFCURVE",
"30 -24 CURVE",
"23 -31 LINE",
"41 -37 OFFCURVE",
"49 -49 OFFCURVE",
"46 -70 CURVE SMOOTH",
"41 -105 OFFCURVE",
"6 -130 OFFCURVE",
"-33 -143 CURVE SMOOTH",
"-58 -151 OFFCURVE",
"-94 -153 OFFCURVE",
"-125 -154 CURVE"
);
},
{
closed = 1;
nodes = (
"309 13 LINE",
"351 13 OFFCURVE",
"394 22 OFFCURVE",
"430 38 CURVE SMOOTH",
"468 55 OFFCURVE",
"498 87 OFFCURVE",
"501 118 CURVE SMOOTH",
"503 142 OFFCURVE",
"490 159 OFFCURVE",
"463 165 CURVE",
"456 158 LINE",
"475 153 OFFCURVE",
"484 143 OFFCURVE",
"483 122 CURVE SMOOTH",
"481 86 OFFCURVE",
"449 57 OFFCURVE",
"412 40 CURVE SMOOTH",
"388 29 OFFCURVE",
"352 24 OFFCURVE",
"322 21 CURVE"
);
},
{
closed = 1;
nodes = (
"312 7 LINE SMOOTH",
"348 8 OFFCURVE",
"465 147 OFFCURVE",
"479 165 CURVE SMOOTH",
"530 228 OFFCURVE",
"577 296 OFFCURVE",
"622 360 CURVE SMOOTH",
"681 441 OFFCURVE",
"747 521 OFFCURVE",
"813 583 CURVE SMOOTH",
"879 645 OFFCURVE",
"946 689 OFFCURVE",
"1003 698 CURVE",
"1005 696 LINE",
"918 660 OFFCURVE",
"862 584 OFFCURVE",
"816 496 CURVE SMOOTH",
"793 451 OFFCURVE",
"772 404 OFFCURVE",
"753 355 CURVE SMOOTH",
"715 256 OFFCURVE",
"672 164 OFFCURVE",
"616 92 CURVE SMOOTH",
"588 55 OFFCURVE",
"554 27 OFFCURVE",
"514 8 CURVE",
"505 9 OFFCURVE",
"496 11 OFFCURVE",
"487 12 CURVE SMOOTH",
"478 13 OFFCURVE",
"469 14 OFFCURVE",
"460 14 CURVE SMOOTH",
"453 14 OFFCURVE",
"438 14 OFFCURVE",
"438 3 CURVE SMOOTH",
"438 -5 OFFCURVE",
"447 -8 OFFCURVE",
"459 -8 CURVE SMOOTH",
"471 -8 OFFCURVE",
"512 0 OFFCURVE",
"544 0 CURVE SMOOTH",
"635 0 OFFCURVE",
"720 21 OFFCURVE",
"792 65 CURVE SMOOTH",
"864 109 OFFCURVE",
"924 177 OFFCURVE",
"965 269 CURVE",
"957 271 LINE",
"876 96 OFFCURVE",
"736 8 OFFCURVE",
"533 8 CURVE",
"533 10 LINE",
"618 47 OFFCURVE",
"676 105 OFFCURVE",
"717 167 CURVE SMOOTH",
"758 229 OFFCURVE",
"785 296 OFFCURVE",
"806 353 CURVE",
"823 393 OFFCURVE",
"881 520 OFFCURVE",
"900 555 CURVE SMOOTH",
"932 611 OFFCURVE",
"996 698 OFFCURVE",
"1039 698 CURVE SMOOTH",
"1049 698 OFFCURVE",
"1059 697 OFFCURVE",
"1070 695 CURVE",
"1080 692 OFFCURVE",
"1090 691 OFFCURVE",
"1099 691 CURVE SMOOTH",
"1110 691 OFFCURVE",
"1119 692 OFFCURVE",
"1119 703 CURVE SMOOTH",
"1119 716 OFFCURVE",
"1096 722 OFFCURVE",
"1076 722 CURVE SMOOTH",
"1024 722 OFFCURVE",
"964 710 OFFCURVE",
"891 663 CURVE SMOOTH",
"818 615 OFFCURVE",
"732 533 OFFCURVE",
"628 390 CURVE SMOOTH",
"595 345 OFFCURVE",
"536 260 OFFCURVE",
"496 208 CURVE SMOOTH",
"448 144 OFFCURVE",
"397 84 OFFCURVE",
"348 41 CURVE",
"346 43 LINE",
"427 156 OFFCURVE",
"475 343 OFFCURVE",
"508 429 CURVE SMOOTH",
"541 515 OFFCURVE",
"574 593 OFFCURVE",
"629 649 CURVE SMOOTH",
"656 676 OFFCURVE",
"691 696 OFFCURVE",
"732 709 CURVE",
"731 718 LINE",
"623 697 OFFCURVE",
"541 649 OFFCURVE",
"470 582 CURVE SMOOTH",
"399 514 OFFCURVE",
"344 424 OFFCURVE",
"279 330 CURVE SMOOTH",
"244 279 OFFCURVE",
"4 -53 OFFCURVE",
"2 -55 CURVE SMOOTH",
"-46 -116 OFFCURVE",
"-96 -156 OFFCURVE",
"-155 -156 CURVE SMOOTH",
"-168 -156 OFFCURVE",
"-187 -150 OFFCURVE",
"-188 -142 CURVE",
"-177 -139 OFFCURVE",
"-173 -125 OFFCURVE",
"-173 -114 CURVE SMOOTH",
"-173 -97 OFFCURVE",
"-185 -81 OFFCURVE",
"-202 -81 CURVE SMOOTH",
"-222 -81 OFFCURVE",
"-237 -96 OFFCURVE",
"-237 -116 CURVE SMOOTH",
"-237 -157 OFFCURVE",
"-201 -168 OFFCURVE",
"-165 -168 CURVE SMOOTH",
"-97 -168 OFFCURVE",
"-44 -131 OFFCURVE",
"4 -74 CURVE SMOOTH",
"10 -67 OFFCURVE",
"261 279 OFFCURVE",
"275 300 CURVE SMOOTH",
"330 382 OFFCURVE",
"379 464 OFFCURVE",
"439 534 CURVE SMOOTH",
"499 604 OFFCURVE",
"574 662 OFFCURVE",
"662 691 CURVE",
"664 689 LINE",
"575 644 OFFCURVE",
"517 576 OFFCURVE",
"480 499 CURVE SMOOTH",
"418 370 OFFCURVE",
"412 212 OFFCURVE",
"354 120 CURVE SMOOTH",
"326 75 OFFCURVE",
"303 46 OFFCURVE",
"270 6 CURVE"
);
}
);
width = 916;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2018-11-27 04:22:49 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"41 16 LINE",
"83 17 OFFCURVE",
"126 29 OFFCURVE",
"160 46 CURVE SMOOTH",
"197 65 OFFCURVE",
"228 97 OFFCURVE",
"230 129 CURVE SMOOTH",
"231 153 OFFCURVE",
"216 169 OFFCURVE",
"188 175 CURVE",
"182 167 LINE",
"201 162 OFFCURVE",
"211 152 OFFCURVE",
"211 131 CURVE SMOOTH",
"210 95 OFFCURVE",
"179 66 OFFCURVE",
"142 47 CURVE SMOOTH",
"119 36 OFFCURVE",
"84 28 OFFCURVE",
"54 25 CURVE"
);
},
{
closed = 1;
nodes = (
"332 6 LINE",
"374 7 OFFCURVE",
"417 19 OFFCURVE",
"451 36 CURVE SMOOTH",
"487 54 OFFCURVE",
"519 87 OFFCURVE",
"521 119 CURVE SMOOTH",
"522 143 OFFCURVE",
"507 159 OFFCURVE",
"479 165 CURVE",
"473 157 LINE",
"492 152 OFFCURVE",
"502 142 OFFCURVE",
"502 121 CURVE SMOOTH",
"501 85 OFFCURVE",
"470 56 OFFCURVE",
"433 37 CURVE SMOOTH",
"410 26 OFFCURVE",
"375 18 OFFCURVE",
"345 15 CURVE"
);
},
{
closed = 1;
nodes = (
"231 236 LINE",
"179 164 OFFCURVE",
"137 106 OFFCURVE",
"136 105 CURVE SMOOTH",
"81 50 OFFCURVE",
"38 4 OFFCURVE",
"-21 4 CURVE SMOOTH",
"-34 4 OFFCURVE",
"-53 10 OFFCURVE",
"-54 18 CURVE",
"-43 21 OFFCURVE",
"-39 35 OFFCURVE",
"-39 46 CURVE SMOOTH",
"-39 63 OFFCURVE",
"-51 79 OFFCURVE",
"-68 79 CURVE SMOOTH",
"-88 79 OFFCURVE",
"-103 64 OFFCURVE",
"-103 44 CURVE SMOOTH",
"-103 3 OFFCURVE",
"-67 -8 OFFCURVE",
"-31 -8 CURVE SMOOTH",
"37 -8 OFFCURVE",
"85 33 OFFCURVE",
"138 86 CURVE SMOOTH",
"141 89 OFFCURVE",
"191 158 OFFCURVE",
"248 236 CURVE"
);
},
{
closed = 1;
nodes = (
"-107 -60 LINE",
"-64 -29 OFFCURVE",
"-16 -10 OFFCURVE",
"39 -10 CURVE SMOOTH",
"143 -10 OFFCURVE",
"178 -61 OFFCURVE",
"178 -105 CURVE",
"175 -104 OFFCURVE",
"172 -104 OFFCURVE",
"168 -104 CURVE SMOOTH",
"149 -104 OFFCURVE",
"140 -120 OFFCURVE",
"140 -139 CURVE SMOOTH",
"140 -159 OFFCURVE",
"152 -174 OFFCURVE",
"173 -174 CURVE SMOOTH",
"202 -174 OFFCURVE",
"218 -147 OFFCURVE",
"218 -120 CURVE SMOOTH",
"218 -38 OFFCURVE",
"121 2 OFFCURVE",
"44 2 CURVE SMOOTH",
"-21 2 OFFCURVE",
"-78 -15 OFFCURVE",
"-128 -43 CURVE"
);
},
{
closed = 1;
nodes = (
"231 213 LINE",
"264 259 OFFCURVE",
"289 294 OFFCURVE",
"293 300 CURVE SMOOTH",
"348 382 OFFCURVE",
"397 464 OFFCURVE",
"457 534 CURVE SMOOTH",
"517 604 OFFCURVE",
"592 662 OFFCURVE",
"680 691 CURVE",
"682 689 LINE",
"593 644 OFFCURVE",
"535 576 OFFCURVE",
"498 499 CURVE SMOOTH",
"436 370 OFFCURVE",
"430 212 OFFCURVE",
"372 120 CURVE SMOOTH",
"344 75 OFFCURVE",
"321 46 OFFCURVE",
"288 6 CURVE",
"330 7 LINE SMOOTH",
"366 8 OFFCURVE",
"483 147 OFFCURVE",
"497 165 CURVE SMOOTH",
"548 228 OFFCURVE",
"595 296 OFFCURVE",
"640 360 CURVE SMOOTH",
"699 441 OFFCURVE",
"765 521 OFFCURVE",
"831 583 CURVE SMOOTH",
"897 645 OFFCURVE",
"964 689 OFFCURVE",
"1021 698 CURVE",
"1023 696 LINE",
"936 660 OFFCURVE",
"880 584 OFFCURVE",
"834 496 CURVE SMOOTH",
"811 451 OFFCURVE",
"790 404 OFFCURVE",
"771 355 CURVE SMOOTH",
"733 256 OFFCURVE",
"690 164 OFFCURVE",
"634 92 CURVE SMOOTH",
"606 55 OFFCURVE",
"572 27 OFFCURVE",
"532 8 CURVE",
"523 9 OFFCURVE",
"514 11 OFFCURVE",
"505 12 CURVE SMOOTH",
"496 13 OFFCURVE",
"487 14 OFFCURVE",
"478 14 CURVE SMOOTH",
"471 14 OFFCURVE",
"456 14 OFFCURVE",
"456 3 CURVE SMOOTH",
"456 -5 OFFCURVE",
"465 -8 OFFCURVE",
"477 -8 CURVE SMOOTH",
"489 -8 OFFCURVE",
"530 0 OFFCURVE",
"562 0 CURVE SMOOTH",
"653 0 OFFCURVE",
"738 21 OFFCURVE",
"810 65 CURVE SMOOTH",
"882 109 OFFCURVE",
"942 177 OFFCURVE",
"983 269 CURVE",
"975 271 LINE",
"894 96 OFFCURVE",
"754 8 OFFCURVE",
"551 8 CURVE",
"551 10 LINE",
"636 47 OFFCURVE",
"694 105 OFFCURVE",
"735 167 CURVE SMOOTH",
"776 229 OFFCURVE",
"803 296 OFFCURVE",
"824 353 CURVE",
"841 393 OFFCURVE",
"899 520 OFFCURVE",
"918 555 CURVE SMOOTH",
"950 611 OFFCURVE",
"1014 698 OFFCURVE",
"1057 698 CURVE SMOOTH",
"1067 698 OFFCURVE",
"1077 697 OFFCURVE",
"1088 695 CURVE",
"1098 692 OFFCURVE",
"1108 691 OFFCURVE",
"1117 691 CURVE SMOOTH",
"1128 691 OFFCURVE",
"1137 692 OFFCURVE",
"1137 703 CURVE SMOOTH",
"1137 716 OFFCURVE",
"1114 722 OFFCURVE",
"1094 722 CURVE SMOOTH",
"1042 722 OFFCURVE",
"982 710 OFFCURVE",
"909 663 CURVE SMOOTH",
"836 615 OFFCURVE",
"750 533 OFFCURVE",
"646 390 CURVE SMOOTH",
"613 345 OFFCURVE",
"554 260 OFFCURVE",
"514 208 CURVE SMOOTH",
"466 144 OFFCURVE",
"415 84 OFFCURVE",
"366 41 CURVE",
"364 43 LINE",
"445 156 OFFCURVE",
"493 343 OFFCURVE",
"526 429 CURVE SMOOTH",
"559 515 OFFCURVE",
"592 593 OFFCURVE",
"647 649 CURVE SMOOTH",
"674 676 OFFCURVE",
"709 696 OFFCURVE",
"750 709 CURVE",
"749 718 LINE",
"641 697 OFFCURVE",
"559 649 OFFCURVE",
"488 582 CURVE SMOOTH",
"417 514 OFFCURVE",
"362 424 OFFCURVE",
"297 330 CURVE SMOOTH",
"286 314 OFFCURVE",
"253 268 OFFCURVE",
"214 213 CURVE"
);
}
);
width = 934;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2018-11-27 04:22:49 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
}
);
width = 783;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2018-11-27 04:22:49 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"312 -61 LINE",
"503 -61 LINE",
"503 -37 LINE",
"312 -37 LINE"
);
}
);
width = 783;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2018-11-27 04:22:49 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -150 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"380 -183 LINE",
"541 -184 LINE",
"541 -144 LINE",
"350 -144 LINE"
);
},
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
}
);
width = 846;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2018-11-27 04:22:50 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"243 -108 LINE",
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"232 -97 LINE"
);
}
);
width = 783;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2018-11-27 04:22:50 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"434 -164 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"385 -188 LINE",
"399 -183 OFFCURVE",
"413 -177 OFFCURVE",
"425 -170 CURVE SMOOTH",
"461 -149 OFFCURVE",
"491 -117 OFFCURVE",
"491 -85 CURVE SMOOTH",
"491 -57 OFFCURVE",
"471 -40 OFFCURVE",
"433 -40 CURVE SMOOTH",
"410 -40 OFFCURVE",
"392 -48 OFFCURVE",
"377 -63 CURVE SMOOTH",
"375 -65 OFFCURVE",
"373 -68 OFFCURVE",
"371 -70 CURVE",
"379 -73 LINE",
"381 -71 OFFCURVE",
"382 -69 OFFCURVE",
"385 -67 CURVE SMOOTH",
"400 -57 OFFCURVE",
"416 -48 OFFCURVE",
"432 -48 CURVE SMOOTH",
"457 -48 OFFCURVE",
"472 -58 OFFCURVE",
"472 -83 CURVE SMOOTH",
"472 -119 OFFCURVE",
"443 -151 OFFCURVE",
"407 -169 CURVE SMOOTH",
"399 -173 OFFCURVE",
"389 -178 OFFCURVE",
"378 -181 CURVE"
);
}
);
width = 783;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2018-11-27 04:22:50 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -150 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"700 412 LINE",
"801 411 LINE",
"801 451 LINE",
"687 451 LINE"
);
}
);
width = 783;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2018-11-27 04:22:50 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"373 -101 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"88 -202 LINE",
"99 -213 LINE",
"276 -78 LINE",
"331 -133 LINE"
);
}
);
width = 783;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2018-11-27 04:22:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"502 663 LINE",
"549 674 LINE",
"606 794 LINE",
"559 794 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"356 -78 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE",
"276 -78 LINE",
"312 -87 LINE"
);
},
{
closed = 1;
nodes = (
"256 -159 LINE",
"263 -148 OFFCURVE",
"272 -137 OFFCURVE",
"283 -127 CURVE SMOOTH",
"360 -57 OFFCURVE",
"417 -65 OFFCURVE",
"448 -96 CURVE",
"445 -97 OFFCURVE",
"443 -99 OFFCURVE",
"440 -102 CURVE SMOOTH",
"427 -115 OFFCURVE",
"432 -133 OFFCURVE",
"445 -147 CURVE SMOOTH",
"459 -162 OFFCURVE",
"479 -163 OFFCURVE",
"493 -148 CURVE SMOOTH",
"513 -127 OFFCURVE",
"506 -97 OFFCURVE",
"487 -78 CURVE SMOOTH",
"429 -20 OFFCURVE",
"333 -60 OFFCURVE",
"278 -115 CURVE SMOOTH",
"264 -129 OFFCURVE",
"252 -144 OFFCURVE",
"240 -159 CURVE"
);
}
);
width = 783;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2018-11-27 04:22:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
}
);
width = 783;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2018-11-27 04:22:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"312 -61 LINE",
"503 -61 LINE",
"503 -37 LINE",
"312 -37 LINE"
);
}
);
width = 783;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2018-11-27 04:22:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -150 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"380 -183 LINE",
"541 -184 LINE",
"541 -144 LINE",
"350 -144 LINE"
);
}
);
width = 846;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2018-11-27 04:22:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"243 -108 LINE",
"276 -78 LINE",
"380 -183 LINE",
"422 -141 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"232 -97 LINE"
);
}
);
width = 783;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2018-11-27 04:22:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"434 -164 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"385 -188 LINE",
"399 -183 OFFCURVE",
"413 -177 OFFCURVE",
"425 -170 CURVE SMOOTH",
"461 -149 OFFCURVE",
"491 -117 OFFCURVE",
"491 -85 CURVE SMOOTH",
"491 -57 OFFCURVE",
"471 -40 OFFCURVE",
"433 -40 CURVE SMOOTH",
"410 -40 OFFCURVE",
"392 -48 OFFCURVE",
"377 -63 CURVE SMOOTH",
"375 -65 OFFCURVE",
"373 -68 OFFCURVE",
"371 -70 CURVE",
"379 -73 LINE",
"381 -71 OFFCURVE",
"382 -69 OFFCURVE",
"385 -67 CURVE SMOOTH",
"400 -57 OFFCURVE",
"416 -48 OFFCURVE",
"432 -48 CURVE SMOOTH",
"457 -48 OFFCURVE",
"472 -58 OFFCURVE",
"472 -83 CURVE SMOOTH",
"472 -119 OFFCURVE",
"443 -151 OFFCURVE",
"407 -169 CURVE SMOOTH",
"399 -173 OFFCURVE",
"389 -178 OFFCURVE",
"378 -181 CURVE"
);
}
);
width = 783;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2018-11-27 04:22:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"276 -78 LINE",
"380 -183 LINE",
"422 -150 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE"
);
},
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"700 412 LINE",
"801 411 LINE",
"801 451 LINE",
"687 451 LINE"
);
}
);
width = 783;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2018-11-27 04:22:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"373 -101 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"88 -202 LINE",
"99 -213 LINE",
"276 -78 LINE",
"331 -133 LINE"
);
}
);
width = 783;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2018-11-27 04:22:52 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"239 26 OFFCURVE",
"182 112 OFFCURVE",
"182 183 CURVE SMOOTH",
"182 291 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"542 168 OFFCURVE",
"471 102 OFFCURVE",
"403 49 CURVE SMOOTH",
"299 -31 LINE"
);
},
{
closed = 1;
nodes = (
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"559 667 LINE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE",
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE"
);
},
{
closed = 1;
nodes = (
"356 -78 LINE",
"317 -45 LINE",
"389 12 LINE SMOOTH",
"467 74 OFFCURVE",
"549 142 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE",
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"84 121 OFFCURVE",
"121 62 OFFCURVE",
"265 -67 CURVE",
"138 -182 LINE",
"149 -193 LINE",
"276 -78 LINE",
"312 -87 LINE"
);
},
{
closed = 1;
nodes = (
"256 -159 LINE",
"263 -148 OFFCURVE",
"272 -137 OFFCURVE",
"283 -127 CURVE SMOOTH",
"360 -57 OFFCURVE",
"417 -65 OFFCURVE",
"448 -96 CURVE",
"445 -97 OFFCURVE",
"443 -99 OFFCURVE",
"440 -102 CURVE SMOOTH",
"427 -115 OFFCURVE",
"432 -133 OFFCURVE",
"445 -147 CURVE SMOOTH",
"459 -162 OFFCURVE",
"479 -163 OFFCURVE",
"493 -148 CURVE SMOOTH",
"513 -127 OFFCURVE",
"506 -97 OFFCURVE",
"487 -78 CURVE SMOOTH",
"429 -20 OFFCURVE",
"333 -60 OFFCURVE",
"278 -115 CURVE SMOOTH",
"264 -129 OFFCURVE",
"252 -144 OFFCURVE",
"240 -159 CURVE"
);
}
);
width = 783;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2018-11-27 04:22:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2018-11-27 04:22:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"500 114 LINE",
"682 114 LINE",
"682 162 LINE",
"550 162 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2018-11-27 04:22:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
},
{
closed = 1;
nodes = (
"598 217 LINE",
"565 187 LINE",
"452 -94 LINE",
"452 -108 LINE",
"624 -108 LINE",
"624 -90 LINE",
"485 -90 LINE SMOOTH",
"461 -90 OFFCURVE",
"477 -65 OFFCURVE",
"514 25 CURVE"
);
}
);
width = 866;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2018-11-27 04:22:53 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"598 213 LINE",
"564 187 LINE",
"401 -174 LINE",
"420 -175 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2018-11-27 04:22:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"598 213 LINE",
"564 187 LINE",
"401 -174 LINE",
"420 -175 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
},
{
closed = 1;
nodes = (
"402 -173 LINE",
"418 -175 OFFCURVE",
"434 -176 OFFCURVE",
"450 -176 CURVE SMOOTH",
"499 -176 OFFCURVE",
"551 -163 OFFCURVE",
"590 -141 CURVE SMOOTH",
"626 -121 OFFCURVE",
"656 -88 OFFCURVE",
"656 -56 CURVE SMOOTH",
"656 -28 OFFCURVE",
"636 -11 OFFCURVE",
"598 -11 CURVE SMOOTH",
"575 -11 OFFCURVE",
"557 -19 OFFCURVE",
"542 -34 CURVE SMOOTH",
"540 -36 OFFCURVE",
"538 -39 OFFCURVE",
"536 -41 CURVE",
"544 -44 LINE",
"546 -42 OFFCURVE",
"547 -40 OFFCURVE",
"550 -38 CURVE SMOOTH",
"565 -28 OFFCURVE",
"581 -19 OFFCURVE",
"597 -19 CURVE SMOOTH",
"622 -19 OFFCURVE",
"637 -29 OFFCURVE",
"637 -54 CURVE SMOOTH",
"637 -90 OFFCURVE",
"608 -121 OFFCURVE",
"572 -140 CURVE SMOOTH",
"540 -157 OFFCURVE",
"486 -168 OFFCURVE",
"451 -168 CURVE SMOOTH",
"438 -168 OFFCURVE",
"425 -168 OFFCURVE",
"413 -166 CURVE"
);
}
);
width = 874;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2018-11-27 04:22:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"625 841 LINE",
"607 853 LINE",
"523 662 LINE",
"547 675 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2018-11-27 04:22:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"244 448 LINE",
"535 162 LINE",
"545 173 LINE",
"254 459 LINE"
);
},
{
closed = 1;
nodes = (
"214 21 LINE",
"196 33 LINE",
"84 -208 LINE",
"103 -209 LINE"
);
},
{
closed = 1;
nodes = (
"648 583 LINE",
"648 637 OFFCURVE",
"629 679 OFFCURVE",
"566 679 CURVE SMOOTH",
"552 679 LINE",
"550 681 LINE",
"565 692 OFFCURVE",
"590 700 OFFCURVE",
"614 700 CURVE SMOOTH",
"677 700 OFFCURVE",
"686 639 OFFCURVE",
"686 581 CURVE SMOOTH",
"686 460 OFFCURVE",
"645 338 OFFCURVE",
"581 235 CURVE",
"498 286 OFFCURVE",
"457 364 OFFCURVE",
"457 467 CURVE SMOOTH",
"457 542 OFFCURVE",
"495 622 OFFCURVE",
"535 665 CURVE",
"539 666 OFFCURVE",
"543 667 OFFCURVE",
"547 667 CURVE SMOOTH",
"552 667 OFFCURVE",
"556 667 OFFCURVE",
"559 667 CURVE SMOOTH",
"619 667 OFFCURVE",
"636 633 OFFCURVE",
"636 583 CURVE"
);
},
{
closed = 1;
nodes = (
"182 254 OFFCURVE",
"224 370 OFFCURVE",
"286 466 CURVE SMOOTH",
"348 562 OFFCURVE",
"430 637 OFFCURVE",
"514 662 CURVE",
"516 660 LINE",
"465 604 OFFCURVE",
"441 519 OFFCURVE",
"441 459 CURVE SMOOTH",
"441 360 OFFCURVE",
"487 277 OFFCURVE",
"575 225 CURVE",
"524 137 OFFCURVE",
"388 8 OFFCURVE",
"290 8 CURVE SMOOTH",
"220 8 OFFCURVE",
"182 79 OFFCURVE",
"182 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"847 270 LINE",
"804 231 OFFCURVE",
"750 205 OFFCURVE",
"697 205 CURVE SMOOTH",
"660 205 OFFCURVE",
"631 211 OFFCURVE",
"604 223 CURVE",
"664 306 OFFCURVE",
"734 454 OFFCURVE",
"734 558 CURVE SMOOTH",
"734 659 OFFCURVE",
"698 712 OFFCURVE",
"617 712 CURVE SMOOTH",
"582 712 OFFCURVE",
"551 696 OFFCURVE",
"531 677 CURVE",
"483 669 OFFCURVE",
"421 636 OFFCURVE",
"360 587 CURVE SMOOTH",
"329 562 OFFCURVE",
"300 534 OFFCURVE",
"271 502 CURVE SMOOTH",
"213 438 OFFCURVE",
"166 363 OFFCURVE",
"139 283 CURVE SMOOTH",
"125 242 OFFCURVE",
"118 201 OFFCURVE",
"118 160 CURVE SMOOTH",
"118 57 OFFCURVE",
"171 -8 OFFCURVE",
"276 -8 CURVE SMOOTH",
"394 -8 OFFCURVE",
"533 118 OFFCURVE",
"598 213 CURVE",
"625 202 OFFCURVE",
"653 193 OFFCURVE",
"696 193 CURVE SMOOTH",
"746 193 OFFCURVE",
"815 222 OFFCURVE",
"853 263 CURVE"
);
}
);
width = 783;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2018-11-27 04:22:54 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"352 448 LINE",
"643 162 LINE",
"653 173 LINE",
"362 459 LINE"
);
},
{
closed = 1;
nodes = (
"248 448 LINE",
"368 448 LINE",
"368 476 LINE",
"248 476 LINE"
);
},
{
closed = 1;
nodes = (
"322 21 LINE",
"304 33 LINE",
"192 -208 LINE",
"211 -209 LINE"
);
},
{
closed = 1;
nodes = (
"756 583 LINE",
"756 637 OFFCURVE",
"737 679 OFFCURVE",
"674 679 CURVE SMOOTH",
"660 679 LINE",
"658 681 LINE",
"673 692 OFFCURVE",
"698 700 OFFCURVE",
"722 700 CURVE SMOOTH",
"785 700 OFFCURVE",
"794 639 OFFCURVE",
"794 581 CURVE SMOOTH",
"794 460 OFFCURVE",
"753 338 OFFCURVE",
"689 235 CURVE",
"606 286 OFFCURVE",
"565 364 OFFCURVE",
"565 467 CURVE SMOOTH",
"565 542 OFFCURVE",
"603 622 OFFCURVE",
"643 665 CURVE",
"647 666 OFFCURVE",
"651 667 OFFCURVE",
"655 667 CURVE SMOOTH",
"660 667 OFFCURVE",
"664 667 OFFCURVE",
"667 667 CURVE SMOOTH",
"727 667 OFFCURVE",
"744 633 OFFCURVE",
"744 583 CURVE"
);
},
{
closed = 1;
nodes = (
"290 254 OFFCURVE",
"332 370 OFFCURVE",
"394 466 CURVE SMOOTH",
"456 562 OFFCURVE",
"538 637 OFFCURVE",
"622 662 CURVE",
"624 660 LINE",
"573 604 OFFCURVE",
"549 519 OFFCURVE",
"549 459 CURVE SMOOTH",
"549 360 OFFCURVE",
"595 277 OFFCURVE",
"683 225 CURVE",
"632 137 OFFCURVE",
"496 8 OFFCURVE",
"398 8 CURVE SMOOTH",
"328 8 OFFCURVE",
"290 79 OFFCURVE",
"290 146 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"955 270 LINE",
"912 231 OFFCURVE",
"858 205 OFFCURVE",
"805 205 CURVE SMOOTH",
"768 205 OFFCURVE",
"739 211 OFFCURVE",
"712 223 CURVE",
"772 306 OFFCURVE",
"842 454 OFFCURVE",
"842 558 CURVE SMOOTH",
"842 659 OFFCURVE",
"806 712 OFFCURVE",
"725 712 CURVE SMOOTH",
"690 712 OFFCURVE",
"659 696 OFFCURVE",
"639 677 CURVE",
"591 669 OFFCURVE",
"529 636 OFFCURVE",
"468 587 CURVE SMOOTH",
"437 562 OFFCURVE",
"408 534 OFFCURVE",
"379 502 CURVE SMOOTH",
"321 438 OFFCURVE",
"274 363 OFFCURVE",
"247 283 CURVE SMOOTH",
"233 242 OFFCURVE",
"226 201 OFFCURVE",
"226 160 CURVE SMOOTH",
"226 57 OFFCURVE",
"279 -8 OFFCURVE",
"384 -8 CURVE SMOOTH",
"502 -8 OFFCURVE",
"641 118 OFFCURVE",
"706 213 CURVE",
"733 202 OFFCURVE",
"761 193 OFFCURVE",
"804 193 CURVE SMOOTH",
"854 193 OFFCURVE",
"923 222 OFFCURVE",
"961 263 CURVE"
);
}
);
width = 891;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2018-11-27 04:22:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"565 0 OFFCURVE",
"580 81 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE SMOOTH",
"461 248 OFFCURVE",
"442 229 OFFCURVE",
"451 198 CURVE SMOOTH",
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"566 73 OFFCURVE",
"544 -13 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"451 -164 OFFCURVE",
"425 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"528 -28 OFFCURVE",
"621 30 OFFCURVE",
"684 141 CURVE",
"677 145 LINE",
"621 50 OFFCURVE",
"549 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"352 87 OFFCURVE",
"429 169 OFFCURVE",
"477 266 CURVE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH",
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE"
);
},
{
closed = 1;
nodes = (
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH",
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH"
);
}
);
width = 770;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2018-11-27 04:22:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"565 0 OFFCURVE",
"580 81 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE SMOOTH",
"461 248 OFFCURVE",
"442 229 OFFCURVE",
"451 198 CURVE SMOOTH",
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"566 73 OFFCURVE",
"544 -13 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"451 -164 OFFCURVE",
"425 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"528 -28 OFFCURVE",
"621 30 OFFCURVE",
"684 141 CURVE",
"677 145 LINE",
"621 50 OFFCURVE",
"549 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"352 87 OFFCURVE",
"429 169 OFFCURVE",
"477 266 CURVE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH",
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE"
);
},
{
closed = 1;
nodes = (
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH",
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"510 -104 LINE",
"612 -104 LINE",
"612 -84 LINE",
"510 -84 LINE"
);
}
);
width = 850;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2018-11-27 04:22:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE",
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"454 -28 OFFCURVE",
"499 -19 OFFCURVE",
"539 0 CURVE",
"529 -32 OFFCURVE",
"515 -62 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"474 -135 OFFCURVE",
"448 -166 CURVE",
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"545 -44 OFFCURVE",
"554 -17 OFFCURVE",
"560 11 CURVE",
"572 18 OFFCURVE",
"583 25 OFFCURVE",
"594 33 CURVE SMOOTH",
"626 57 OFFCURVE",
"655 87 OFFCURVE",
"673 118 CURVE SMOOTH",
"694 153 OFFCURVE",
"703 196 OFFCURVE",
"687 224 CURVE SMOOTH",
"673 248 OFFCURVE",
"648 253 OFFCURVE",
"615 234 CURVE SMOOTH",
"595 223 OFFCURVE",
"583 207 OFFCURVE",
"578 186 CURVE",
"577 184 OFFCURVE",
"577 180 OFFCURVE",
"576 177 CURVE",
"584 179 LINE",
"585 181 OFFCURVE",
"585 184 OFFCURVE",
"587 187 CURVE",
"595 203 OFFCURVE",
"604 219 OFFCURVE",
"618 227 CURVE SMOOTH",
"639 239 OFFCURVE",
"657 238 OFFCURVE",
"670 216 CURVE SMOOTH",
"684 191 OFFCURVE",
"686 160 OFFCURVE",
"668 131 CURVE SMOOTH",
"641 87 OFFCURVE",
"605 50 OFFCURVE",
"564 29 CURVE",
"570 73 OFFCURVE",
"569 121 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE",
"477 252 OFFCURVE",
"472 250 OFFCURVE",
"467 247 CURVE",
"477 266 LINE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"557 114 OFFCURVE",
"555 66 OFFCURVE",
"544 19 CURVE",
"513 7 OFFCURVE",
"477 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"335 78 OFFCURVE",
"401 141 OFFCURVE",
"449 216 CURVE",
"448 210 OFFCURVE",
"449 205 OFFCURVE",
"451 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH",
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 -191 LINE",
"591 -191 LINE",
"591 -166 LINE",
"448 -166 LINE"
);
}
);
width = 902;
}
);
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2018-11-27 04:22:55 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"565 0 OFFCURVE",
"580 81 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE SMOOTH",
"461 248 OFFCURVE",
"442 229 OFFCURVE",
"451 198 CURVE SMOOTH",
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"566 73 OFFCURVE",
"544 -13 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"451 -164 OFFCURVE",
"425 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"528 -28 OFFCURVE",
"621 30 OFFCURVE",
"684 141 CURVE",
"677 145 LINE",
"621 50 OFFCURVE",
"549 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"352 87 OFFCURVE",
"429 169 OFFCURVE",
"477 266 CURVE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH",
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE"
);
},
{
closed = 1;
nodes = (
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH",
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH"
);
}
);
width = 770;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2018-11-27 04:22:56 +0000";
layers = (
{
components = (
{
name = _part.ho.cap;
transform = "{0.98481, 0.17365, -0.17365, 0.98481, -292, -856}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"565 0 OFFCURVE",
"580 81 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE SMOOTH",
"461 248 OFFCURVE",
"442 229 OFFCURVE",
"451 198 CURVE SMOOTH",
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"566 73 OFFCURVE",
"544 -13 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"451 -164 OFFCURVE",
"425 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"528 -28 OFFCURVE",
"621 30 OFFCURVE",
"684 141 CURVE",
"677 145 LINE",
"621 50 OFFCURVE",
"549 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"352 87 OFFCURVE",
"429 169 OFFCURVE",
"477 266 CURVE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH",
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE"
);
},
{
closed = 1;
nodes = (
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH",
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH"
);
}
);
width = 868;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2018-11-27 04:22:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"181 -188 LINE",
"209 -152 OFFCURVE",
"235 -112 OFFCURVE",
"254 -70 CURVE SMOOTH",
"286 0 OFFCURVE",
"300 81 OFFCURVE",
"275 172 CURVE SMOOTH",
"266 205 OFFCURVE",
"256 230 OFFCURVE",
"242 241 CURVE SMOOTH",
"227 253 OFFCURVE",
"214 257 OFFCURVE",
"203 254 CURVE SMOOTH",
"181 248 OFFCURVE",
"162 229 OFFCURVE",
"171 198 CURVE SMOOTH",
"178 175 OFFCURVE",
"188 166 OFFCURVE",
"202 161 CURVE",
"195 190 OFFCURVE",
"208 204 OFFCURVE",
"227 210 CURVE SMOOTH",
"233 212 OFFCURVE",
"240 209 OFFCURVE",
"248 200 CURVE SMOOTH",
"255 192 OFFCURVE",
"261 180 OFFCURVE",
"265 163 CURVE SMOOTH",
"286 73 OFFCURVE",
"264 -13 OFFCURVE",
"218 -91 CURVE SMOOTH",
"196 -128 OFFCURVE",
"171 -164 OFFCURVE",
"145 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"494 556 LINE",
"493 552 OFFCURVE",
"493 547 OFFCURVE",
"493 542 CURVE SMOOTH",
"493 537 OFFCURVE",
"493 533 OFFCURVE",
"493 529 CURVE",
"496 469 OFFCURVE",
"538 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH",
"592 712 OFFCURVE",
"507 679 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"417 598 OFFCURVE",
"493 650 OFFCURVE",
"565 679 CURVE SMOOTH",
"601 693 OFFCURVE",
"634 700 OFFCURVE",
"664 700 CURVE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH",
"545 459 OFFCURVE",
"505 479 OFFCURVE",
"505 532 CURVE SMOOTH",
"505 537 OFFCURVE",
"505 541 OFFCURVE",
"505 544 CURVE SMOOTH",
"505 548 OFFCURVE",
"505 552 OFFCURVE",
"506 556 CURVE"
);
}
);
width = 593;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2018-11-27 04:22:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"184 -188 LINE",
"212 -152 OFFCURVE",
"238 -112 OFFCURVE",
"257 -70 CURVE SMOOTH",
"289 0 OFFCURVE",
"303 81 OFFCURVE",
"278 172 CURVE SMOOTH",
"269 205 OFFCURVE",
"259 230 OFFCURVE",
"245 241 CURVE SMOOTH",
"230 253 OFFCURVE",
"217 257 OFFCURVE",
"206 254 CURVE SMOOTH",
"184 248 OFFCURVE",
"165 229 OFFCURVE",
"174 198 CURVE SMOOTH",
"181 175 OFFCURVE",
"191 166 OFFCURVE",
"205 161 CURVE",
"198 190 OFFCURVE",
"211 204 OFFCURVE",
"230 210 CURVE SMOOTH",
"236 212 OFFCURVE",
"243 209 OFFCURVE",
"251 200 CURVE SMOOTH",
"258 192 OFFCURVE",
"264 180 OFFCURVE",
"268 163 CURVE SMOOTH",
"289 73 OFFCURVE",
"267 -13 OFFCURVE",
"221 -91 CURVE SMOOTH",
"199 -128 OFFCURVE",
"174 -164 OFFCURVE",
"148 -195 CURVE"
);
},
{
closed = 1;
nodes = (
"655 712 LINE",
"652 742 OFFCURVE",
"634 757 OFFCURVE",
"609 756 CURVE SMOOTH",
"577 755 OFFCURVE",
"545 724 OFFCURVE",
"526 687 CURVE",
"525 684 OFFCURVE",
"523 682 OFFCURVE",
"522 679 CURVE",
"490 665 OFFCURVE",
"457 647 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"400 581 OFFCURVE",
"456 624 OFFCURVE",
"512 654 CURVE",
"503 630 OFFCURVE",
"490 568 OFFCURVE",
"492 542 CURVE SMOOTH",
"495 480 OFFCURVE",
"521 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"631 738 OFFCURVE",
"642 729 OFFCURVE",
"646 712 CURVE",
"613 709 OFFCURVE",
"575 700 OFFCURVE",
"537 685 CURVE",
"555 714 OFFCURVE",
"580 736 OFFCURVE",
"611 737 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"529 459 OFFCURVE",
"507 487 OFFCURVE",
"505 544 CURVE SMOOTH",
"504 568 OFFCURVE",
"515 630 OFFCURVE",
"524 660 CURVE",
"538 667 OFFCURVE",
"551 674 OFFCURVE",
"565 679 CURVE",
"595 691 OFFCURVE",
"622 697 OFFCURVE",
"648 699 CURVE",
"649 683 OFFCURVE",
"640 666 OFFCURVE",
"630 651 CURVE SMOOTH",
"628 648 OFFCURVE",
"626 647 OFFCURVE",
"624 645 CURVE",
"628 637 LINE",
"630 639 OFFCURVE",
"633 641 OFFCURVE",
"634 643 CURVE SMOOTH",
"644 663 OFFCURVE",
"656 677 OFFCURVE",
"656 700 CURVE",
"664 700 LINE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH"
);
}
);
width = 593;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2018-11-27 04:22:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"655 712 LINE",
"652 742 OFFCURVE",
"634 757 OFFCURVE",
"609 756 CURVE SMOOTH",
"577 755 OFFCURVE",
"545 724 OFFCURVE",
"526 687 CURVE",
"525 684 OFFCURVE",
"523 682 OFFCURVE",
"522 679 CURVE",
"490 665 OFFCURVE",
"457 647 OFFCURVE",
"425 627 CURVE SMOOTH",
"384 600 OFFCURVE",
"344 569 OFFCURVE",
"305 534 CURVE SMOOTH",
"228 462 OFFCURVE",
"167 380 OFFCURVE",
"131 293 CURVE SMOOTH",
"113 249 OFFCURVE",
"104 206 OFFCURVE",
"104 164 CURVE SMOOTH",
"104 78 OFFCURVE",
"164 -16 OFFCURVE",
"290 -16 CURVE SMOOTH",
"382 -16 OFFCURVE",
"454 22 OFFCURVE",
"502 72 CURVE SMOOTH",
"550 122 OFFCURVE",
"575 183 OFFCURVE",
"575 230 CURVE SMOOTH",
"575 310 OFFCURVE",
"535 340 OFFCURVE",
"451 340 CURVE",
"452 328 LINE",
"505 328 OFFCURVE",
"539 299 OFFCURVE",
"539 246 CURVE SMOOTH",
"539 125 OFFCURVE",
"421 -4 OFFCURVE",
"294 -4 CURVE SMOOTH",
"207 -4 OFFCURVE",
"168 71 OFFCURVE",
"168 152 CURVE SMOOTH",
"168 244 OFFCURVE",
"203 335 OFFCURVE",
"257 416 CURVE SMOOTH",
"284 457 OFFCURVE",
"314 494 OFFCURVE",
"349 529 CURVE SMOOTH",
"400 581 OFFCURVE",
"456 624 OFFCURVE",
"512 654 CURVE",
"503 630 OFFCURVE",
"490 568 OFFCURVE",
"492 542 CURVE SMOOTH",
"495 480 OFFCURVE",
"521 447 OFFCURVE",
"590 447 CURVE SMOOTH",
"689 447 OFFCURVE",
"785 517 OFFCURVE",
"785 610 CURVE SMOOTH",
"785 677 OFFCURVE",
"744 712 OFFCURVE",
"660 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"631 738 OFFCURVE",
"642 729 OFFCURVE",
"646 712 CURVE",
"613 709 OFFCURVE",
"575 700 OFFCURVE",
"537 685 CURVE",
"555 714 OFFCURVE",
"580 736 OFFCURVE",
"611 737 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"529 459 OFFCURVE",
"507 487 OFFCURVE",
"505 544 CURVE SMOOTH",
"504 568 OFFCURVE",
"515 630 OFFCURVE",
"524 660 CURVE",
"538 667 OFFCURVE",
"551 674 OFFCURVE",
"565 679 CURVE",
"595 691 OFFCURVE",
"622 697 OFFCURVE",
"648 699 CURVE",
"649 683 OFFCURVE",
"640 666 OFFCURVE",
"630 651 CURVE SMOOTH",
"628 648 OFFCURVE",
"626 647 OFFCURVE",
"624 645 CURVE",
"628 637 LINE",
"630 639 OFFCURVE",
"633 641 OFFCURVE",
"634 643 CURVE SMOOTH",
"644 663 OFFCURVE",
"656 677 OFFCURVE",
"656 700 CURVE",
"664 700 LINE SMOOTH",
"716 700 OFFCURVE",
"749 685 OFFCURVE",
"749 629 CURVE SMOOTH",
"749 541 OFFCURVE",
"666 459 OFFCURVE",
"591 459 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"103 -142 LINE",
"146 -111 OFFCURVE",
"194 -92 OFFCURVE",
"249 -92 CURVE SMOOTH",
"353 -92 OFFCURVE",
"388 -143 OFFCURVE",
"388 -187 CURVE",
"385 -186 OFFCURVE",
"382 -186 OFFCURVE",
"378 -186 CURVE SMOOTH",
"359 -186 OFFCURVE",
"350 -202 OFFCURVE",
"350 -221 CURVE SMOOTH",
"350 -241 OFFCURVE",
"362 -256 OFFCURVE",
"383 -256 CURVE SMOOTH",
"412 -256 OFFCURVE",
"428 -229 OFFCURVE",
"428 -202 CURVE SMOOTH",
"428 -120 OFFCURVE",
"331 -80 OFFCURVE",
"254 -80 CURVE SMOOTH",
"189 -80 OFFCURVE",
"132 -97 OFFCURVE",
"82 -125 CURVE"
);
},
{
closed = 1;
nodes = (
"249 -89 CURVE",
"255 -79 OFFCURVE",
"254 -81 OFFCURVE",
"259 -70 CURVE SMOOTH",
"291 0 OFFCURVE",
"305 81 OFFCURVE",
"280 172 CURVE SMOOTH",
"271 205 OFFCURVE",
"261 230 OFFCURVE",
"247 241 CURVE SMOOTH",
"232 253 OFFCURVE",
"219 257 OFFCURVE",
"208 254 CURVE SMOOTH",
"186 248 OFFCURVE",
"167 229 OFFCURVE",
"176 198 CURVE SMOOTH",
"183 175 OFFCURVE",
"193 166 OFFCURVE",
"207 161 CURVE",
"200 190 OFFCURVE",
"213 204 OFFCURVE",
"232 210 CURVE SMOOTH",
"238 212 OFFCURVE",
"245 209 OFFCURVE",
"253 200 CURVE SMOOTH",
"260 192 OFFCURVE",
"266 180 OFFCURVE",
"270 163 CURVE SMOOTH",
"291 73 OFFCURVE",
"269 -13 OFFCURVE",
"223 -91 CURVE SMOOTH",
"223 -91 OFFCURVE",
"250 -89 OFFCURVE"
);
}
);
width = 768;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2018-11-27 04:22:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"212 -4 OFFCURVE",
"154 30 OFFCURVE",
"147 94 CURVE",
"150 93 OFFCURVE",
"154 92 OFFCURVE",
"159 92 CURVE SMOOTH",
"176 92 OFFCURVE",
"192 105 OFFCURVE",
"192 125 CURVE SMOOTH",
"192 146 OFFCURVE",
"176 162 OFFCURVE",
"155 162 CURVE SMOOTH",
"124 162 OFFCURVE",
"107 138 OFFCURVE",
"107 109 CURVE SMOOTH",
"107 20 OFFCURVE",
"198 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE"
);
}
);
width = 779;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2018-11-27 04:22:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"212 -4 OFFCURVE",
"154 30 OFFCURVE",
"147 94 CURVE",
"150 93 OFFCURVE",
"154 92 OFFCURVE",
"159 92 CURVE SMOOTH",
"176 92 OFFCURVE",
"192 105 OFFCURVE",
"192 125 CURVE SMOOTH",
"192 146 OFFCURVE",
"176 162 OFFCURVE",
"155 162 CURVE SMOOTH",
"124 162 OFFCURVE",
"107 138 OFFCURVE",
"107 109 CURVE SMOOTH",
"107 20 OFFCURVE",
"198 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE"
);
},
{
closed = 1;
nodes = (
"651 258 LINE",
"882 258 LINE",
"882 302 LINE",
"651 302 LINE"
);
}
);
width = 817;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2018-11-27 04:22:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"212 -4 OFFCURVE",
"154 30 OFFCURVE",
"147 94 CURVE",
"150 93 OFFCURVE",
"154 92 OFFCURVE",
"159 92 CURVE SMOOTH",
"176 92 OFFCURVE",
"192 105 OFFCURVE",
"192 125 CURVE SMOOTH",
"192 146 OFFCURVE",
"176 162 OFFCURVE",
"155 162 CURVE SMOOTH",
"124 162 OFFCURVE",
"107 138 OFFCURVE",
"107 109 CURVE SMOOTH",
"107 20 OFFCURVE",
"198 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE"
);
},
{
closed = 1;
nodes = (
"606 233 LINE",
"573 203 LINE",
"460 -78 LINE",
"460 -92 LINE",
"632 -92 LINE",
"632 -74 LINE",
"493 -74 LINE SMOOTH",
"469 -74 OFFCURVE",
"485 -49 OFFCURVE",
"522 41 CURVE"
);
}
);
width = 860;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2018-11-27 04:22:57 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"185 2 LINE",
"214 -10 OFFCURVE",
"248 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE",
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"257 -4 OFFCURVE",
"227 2 OFFCURVE",
"203 14 CURVE"
);
}
);
width = 779;
}
);
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2018-11-27 04:22:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"212 -4 OFFCURVE",
"154 30 OFFCURVE",
"147 94 CURVE",
"150 93 OFFCURVE",
"154 92 OFFCURVE",
"159 92 CURVE SMOOTH",
"176 92 OFFCURVE",
"192 105 OFFCURVE",
"192 125 CURVE SMOOTH",
"192 146 OFFCURVE",
"176 162 OFFCURVE",
"155 162 CURVE SMOOTH",
"124 162 OFFCURVE",
"107 138 OFFCURVE",
"107 109 CURVE SMOOTH",
"107 20 OFFCURVE",
"198 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE"
);
},
{
closed = 1;
nodes = (
"418 14 LINE",
"434 10 OFFCURVE",
"450 7 OFFCURVE",
"465 5 CURVE SMOOTH",
"514 -2 OFFCURVE",
"567 3 OFFCURVE",
"609 20 CURVE SMOOTH",
"647 35 OFFCURVE",
"682 63 OFFCURVE",
"686 95 CURVE SMOOTH",
"690 122 OFFCURVE",
"673 142 OFFCURVE",
"635 147 CURVE SMOOTH",
"612 151 OFFCURVE",
"593 145 OFFCURVE",
"576 132 CURVE SMOOTH",
"574 131 OFFCURVE",
"572 128 OFFCURVE",
"569 126 CURVE",
"577 122 LINE",
"579 124 OFFCURVE",
"580 126 OFFCURVE",
"584 127 CURVE SMOOTH",
"600 135 OFFCURVE",
"617 142 OFFCURVE",
"633 140 CURVE SMOOTH",
"658 136 OFFCURVE",
"671 124 OFFCURVE",
"668 99 CURVE SMOOTH",
"663 64 OFFCURVE",
"630 37 OFFCURVE",
"591 23 CURVE SMOOTH",
"557 11 OFFCURVE",
"502 7 OFFCURVE",
"468 12 CURVE SMOOTH",
"455 14 OFFCURVE",
"442 16 OFFCURVE",
"430 20 CURVE"
);
}
);
width = 779;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2018-11-27 04:22:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"975 696 OFFCURVE",
"958 693 OFFCURVE",
"932 687 CURVE SMOOTH",
"906 681 OFFCURVE",
"871 678 OFFCURVE",
"827 678 CURVE SMOOTH",
"754 679 OFFCURVE",
"665 674 OFFCURVE",
"581 659 CURVE SMOOTH",
"539 651 OFFCURVE",
"499 641 OFFCURVE",
"460 628 CURVE SMOOTH",
"383 603 OFFCURVE",
"321 567 OFFCURVE",
"286 520 CURVE SMOOTH",
"268 497 OFFCURVE",
"259 470 OFFCURVE",
"259 441 CURVE SMOOTH",
"259 365 OFFCURVE",
"312 325 OFFCURVE",
"391 325 CURVE SMOOTH",
"480 325 OFFCURVE",
"560 392 OFFCURVE",
"560 472 CURVE SMOOTH",
"560 483 OFFCURVE",
"557 502 OFFCURVE",
"554 510 CURVE",
"543 508 LINE",
"546 498 OFFCURVE",
"548 485 OFFCURVE",
"548 470 CURVE SMOOTH",
"548 401 OFFCURVE",
"467 337 OFFCURVE",
"394 337 CURVE SMOOTH",
"341 337 OFFCURVE",
"307 369 OFFCURVE",
"307 425 CURVE SMOOTH",
"307 497 OFFCURVE",
"349 548 OFFCURVE",
"413 584 CURVE SMOOTH",
"444 602 OFFCURVE",
"480 616 OFFCURVE",
"521 627 CURVE SMOOTH",
"601 648 OFFCURVE",
"686 659 OFFCURVE",
"765 663 CURVE SMOOTH",
"804 665 OFFCURVE",
"839 666 OFFCURVE",
"869 666 CURVE",
"869 664 LINE",
"808 641 OFFCURVE",
"749 586 OFFCURVE",
"698 526 CURVE SMOOTH",
"655 475 OFFCURVE",
"602 393 OFFCURVE",
"573 351 CURVE SMOOTH",
"560 331 OFFCURVE",
"537 292 OFFCURVE",
"513 252 CURVE",
"562 264 LINE",
"552 250 OFFCURVE",
"544 237 OFFCURVE",
"536 225 CURVE SMOOTH",
"518 198 OFFCURVE",
"499 172 OFFCURVE",
"478 146 CURVE SMOOTH",
"436 93 OFFCURVE",
"385 50 OFFCURVE",
"328 23 CURVE SMOOTH",
"299 9 OFFCURVE",
"269 3 OFFCURVE",
"237 3 CURVE SMOOTH",
"160 3 OFFCURVE",
"104 45 OFFCURVE",
"115 97 CURVE",
"136 93 OFFCURVE",
"152 111 OFFCURVE",
"152 132 CURVE SMOOTH",
"152 153 OFFCURVE",
"138 167 OFFCURVE",
"115 167 CURVE SMOOTH",
"84 167 OFFCURVE",
"66 143 OFFCURVE",
"66 115 CURVE SMOOTH",
"66 31 OFFCURVE",
"156 -9 OFFCURVE",
"235 -9 CURVE SMOOTH",
"331 -9 OFFCURVE",
"412 29 OFFCURVE",
"483 91 CURVE SMOOTH",
"541 142 OFFCURVE",
"592 207 OFFCURVE",
"640 285 CURVE SMOOTH",
"639 296 LINE",
"599 287 LINE",
"609 301 OFFCURVE",
"618 316 OFFCURVE",
"626 331 CURVE SMOOTH",
"683 431 OFFCURVE",
"738 516 OFFCURVE",
"786 575 CURVE SMOOTH",
"834 634 OFFCURVE",
"877 668 OFFCURVE",
"910 668 CURVE SMOOTH",
"945 668 OFFCURVE",
"969 669 OFFCURVE",
"981 672 CURVE",
"993 674 OFFCURVE",
"999 678 OFFCURVE",
"999 685 CURVE SMOOTH",
"999 696 OFFCURVE",
"991 696 OFFCURVE",
"982 696 CURVE SMOOTH"
);
}
);
width = 578;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2018-11-27 04:22:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"279 -16 LINE",
"280 -16 OFFCURVE",
"280 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE",
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"287 -4 OFFCURVE",
"283 -4 OFFCURVE",
"279 -4 CURVE"
);
},
{
closed = 1;
nodes = (
"58 -16 LINE",
"281 -16 LINE",
"281 -4 LINE",
"58 -4 LINE"
);
}
);
width = 779;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2018-11-27 04:22:58 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"632 494 LINE",
"633 487 OFFCURVE",
"633 481 OFFCURVE",
"633 474 CURVE SMOOTH",
"633 468 OFFCURVE",
"633 462 OFFCURVE",
"633 455 CURVE SMOOTH",
"633 356 OFFCURVE",
"527 272 OFFCURVE",
"398 272 CURVE SMOOTH",
"299 272 OFFCURVE",
"243 313 OFFCURVE",
"243 393 CURVE SMOOTH",
"243 461 OFFCURVE",
"290 521 OFFCURVE",
"379 565 CURVE SMOOTH",
"468 608 OFFCURVE",
"599 634 OFFCURVE",
"767 634 CURVE SMOOTH",
"797 634 OFFCURVE",
"830 633 OFFCURVE",
"865 630 CURVE SMOOTH",
"900 627 OFFCURVE",
"933 626 OFFCURVE",
"963 626 CURVE",
"963 624 LINE",
"890 611 OFFCURVE",
"830 564 OFFCURVE",
"777 503 CURVE SMOOTH",
"724 442 OFFCURVE",
"677 365 OFFCURVE",
"630 290 CURVE SMOOTH",
"582 214 OFFCURVE",
"536 142 OFFCURVE",
"482 87 CURVE SMOOTH",
"428 32 OFFCURVE",
"366 -4 OFFCURVE",
"291 -4 CURVE SMOOTH",
"212 -4 OFFCURVE",
"154 30 OFFCURVE",
"147 94 CURVE",
"150 93 OFFCURVE",
"154 92 OFFCURVE",
"159 92 CURVE SMOOTH",
"176 92 OFFCURVE",
"192 105 OFFCURVE",
"192 125 CURVE SMOOTH",
"192 146 OFFCURVE",
"176 162 OFFCURVE",
"155 162 CURVE SMOOTH",
"124 162 OFFCURVE",
"107 138 OFFCURVE",
"107 109 CURVE SMOOTH",
"107 20 OFFCURVE",
"198 -16 OFFCURVE",
"281 -16 CURVE SMOOTH",
"380 -16 OFFCURVE",
"458 23 OFFCURVE",
"519 74 CURVE SMOOTH",
"580 125 OFFCURVE",
"625 187 OFFCURVE",
"654 232 CURVE SMOOTH",
"718 331 OFFCURVE",
"800 475 OFFCURVE",
"844 530 CURVE SMOOTH",
"897 596 OFFCURVE",
"954 628 OFFCURVE",
"1047 628 CURVE SMOOTH",
"1126 628 OFFCURVE",
"1169 624 OFFCURVE",
"1169 653 CURVE SMOOTH",
"1169 672 OFFCURVE",
"1153 682 OFFCURVE",
"1137 682 CURVE SMOOTH",
"1128 682 OFFCURVE",
"1117 681 OFFCURVE",
"1104 679 CURVE SMOOTH",
"1091 677 OFFCURVE",
"1074 676 OFFCURVE",
"1055 676 CURVE SMOOTH",
"1033 676 OFFCURVE",
"1007 677 OFFCURVE",
"976 679 CURVE SMOOTH",
"945 681 OFFCURVE",
"911 682 OFFCURVE",
"874 682 CURVE SMOOTH",
"631 682 OFFCURVE",
"471 641 OFFCURVE",
"371 585 CURVE SMOOTH",
"271 529 OFFCURVE",
"231 457 OFFCURVE",
"231 393 CURVE SMOOTH",
"231 314 OFFCURVE",
"285 260 OFFCURVE",
"394 260 CURVE SMOOTH",
"532 260 OFFCURVE",
"645 347 OFFCURVE",
"645 457 CURVE SMOOTH",
"645 463 OFFCURVE",
"645 469 OFFCURVE",
"645 475 CURVE SMOOTH",
"645 481 OFFCURVE",
"645 487 OFFCURVE",
"644 494 CURVE"
);
},
{
closed = 1;
nodes = (
"112 -66 LINE",
"155 -35 OFFCURVE",
"203 -16 OFFCURVE",
"258 -16 CURVE SMOOTH",
"362 -16 OFFCURVE",
"397 -67 OFFCURVE",
"397 -111 CURVE",
"394 -110 OFFCURVE",
"391 -110 OFFCURVE",
"387 -110 CURVE SMOOTH",
"368 -110 OFFCURVE",
"359 -126 OFFCURVE",
"359 -145 CURVE SMOOTH",
"359 -165 OFFCURVE",
"371 -180 OFFCURVE",
"392 -180 CURVE SMOOTH",
"421 -180 OFFCURVE",
"437 -153 OFFCURVE",
"437 -126 CURVE SMOOTH",
"437 -44 OFFCURVE",
"340 -4 OFFCURVE",
"263 -4 CURVE SMOOTH",
"198 -4 OFFCURVE",
"141 -21 OFFCURVE",
"91 -49 CURVE"
);
}
);
width = 779;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2018-11-27 04:23:01 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
transform = "{1, 0, 0, 1, -100, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"540 682 LINE",
"1058 682 LINE",
"1058 698 LINE",
"540 698 LINE"
);
}
);
width = 817;
}
);
unicode = 1358;
},
{
glyphname = "mya-ethiopic";
lastChange = "2018-11-27 04:23:01 +0000";
layers = (
{
components = (
{
name = "mi-ethiopic";
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"1066 471 LINE",
"1089 471 LINE",
"1089 700 LINE",
"1066 700 LINE"
);
},
{
closed = 1;
nodes = (
"943 700 LINE",
"1199 700 LINE",
"1199 722 LINE",
"943 722 LINE"
);
}
);
width = 1498;
}
);
unicode = 1359;
},
{
glyphname = "fya-ethiopic";
lastChange = "2018-11-27 04:22:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"531 677 LINE",
"1023 677 LINE",
"1023 700 LINE",
"531 700 LINE"
);
},
{
closed = 1;
nodes = (
"745 684 OFFCURVE",
"687 656 OFFCURVE",
"638 613 CURVE SMOOTH",
"613 591 OFFCURVE",
"591 566 OFFCURVE",
"570 538 CURVE SMOOTH",
"528 481 OFFCURVE",
"491 420 OFFCURVE",
"462 361 CURVE SMOOTH",
"447 331 OFFCURVE",
"434 303 OFFCURVE",
"422 278 CURVE",
"417 266 LINE",
"374 180 OFFCURVE",
"322 93 OFFCURVE",
"240 40 CURVE",
"154 69 OFFCURVE",
"55 102 OFFCURVE",
"-18 102 CURVE SMOOTH",
"-63 102 OFFCURVE",
"-94 85 OFFCURVE",
"-94 53 CURVE SMOOTH",
"-94 9 OFFCURVE",
"-14 -10 OFFCURVE",
"55 -10 CURVE SMOOTH",
"122 -10 OFFCURVE",
"174 4 OFFCURVE",
"219 20 CURVE",
"271 0 OFFCURVE",
"341 -28 OFFCURVE",
"405 -28 CURVE SMOOTH",
"454 -28 OFFCURVE",
"499 -19 OFFCURVE",
"539 0 CURVE",
"529 -32 OFFCURVE",
"515 -62 OFFCURVE",
"498 -91 CURVE SMOOTH",
"476 -128 OFFCURVE",
"474 -135 OFFCURVE",
"448 -166 CURVE",
"461 -188 LINE",
"489 -152 OFFCURVE",
"515 -112 OFFCURVE",
"534 -70 CURVE SMOOTH",
"545 -44 OFFCURVE",
"554 -17 OFFCURVE",
"560 11 CURVE",
"572 18 OFFCURVE",
"583 25 OFFCURVE",
"594 33 CURVE SMOOTH",
"626 57 OFFCURVE",
"655 87 OFFCURVE",
"673 118 CURVE SMOOTH",
"694 153 OFFCURVE",
"703 196 OFFCURVE",
"687 224 CURVE SMOOTH",
"673 248 OFFCURVE",
"648 253 OFFCURVE",
"615 234 CURVE SMOOTH",
"595 223 OFFCURVE",
"583 207 OFFCURVE",
"578 186 CURVE",
"577 184 OFFCURVE",
"577 180 OFFCURVE",
"576 177 CURVE",
"584 179 LINE",
"585 181 OFFCURVE",
"585 184 OFFCURVE",
"587 187 CURVE",
"595 203 OFFCURVE",
"604 219 OFFCURVE",
"618 227 CURVE SMOOTH",
"639 239 OFFCURVE",
"657 238 OFFCURVE",
"670 216 CURVE SMOOTH",
"684 191 OFFCURVE",
"686 160 OFFCURVE",
"668 131 CURVE SMOOTH",
"641 87 OFFCURVE",
"605 50 OFFCURVE",
"564 29 CURVE",
"570 73 OFFCURVE",
"569 121 OFFCURVE",
"555 172 CURVE SMOOTH",
"546 205 OFFCURVE",
"536 230 OFFCURVE",
"522 241 CURVE SMOOTH",
"507 253 OFFCURVE",
"494 257 OFFCURVE",
"483 254 CURVE",
"477 252 OFFCURVE",
"472 250 OFFCURVE",
"467 247 CURVE",
"477 266 LINE",
"482 278 LINE",
"500 312 OFFCURVE",
"534 384 OFFCURVE",
"560 432 CURVE SMOOTH",
"576 461 OFFCURVE",
"593 490 OFFCURVE",
"612 519 CURVE SMOOTH",
"648 577 OFFCURVE",
"691 623 OFFCURVE",
"740 651 CURVE SMOOTH",
"764 665 OFFCURVE",
"789 672 OFFCURVE",
"816 672 CURVE SMOOTH",
"880 672 OFFCURVE",
"916 640 OFFCURVE",
"916 572 CURVE SMOOTH",
"916 489 OFFCURVE",
"837 368 OFFCURVE",
"754 368 CURVE SMOOTH",
"715 368 OFFCURVE",
"683 391 OFFCURVE",
"683 431 CURVE SMOOTH",
"683 501 OFFCURVE",
"758 561 OFFCURVE",
"819 581 CURVE",
"817 587 LINE",
"746 562 OFFCURVE",
"671 507 OFFCURVE",
"671 430 CURVE SMOOTH",
"671 383 OFFCURVE",
"708 356 OFFCURVE",
"755 356 CURVE SMOOTH",
"850 356 OFFCURVE",
"938 459 OFFCURVE",
"938 561 CURVE SMOOTH",
"938 630 OFFCURVE",
"895 684 OFFCURVE",
"812 684 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"458 175 OFFCURVE",
"468 166 OFFCURVE",
"482 161 CURVE",
"475 190 OFFCURVE",
"488 204 OFFCURVE",
"507 210 CURVE SMOOTH",
"513 212 OFFCURVE",
"520 209 OFFCURVE",
"528 200 CURVE SMOOTH",
"535 192 OFFCURVE",
"541 180 OFFCURVE",
"545 163 CURVE SMOOTH",
"557 114 OFFCURVE",
"555 66 OFFCURVE",
"544 19 CURVE",
"513 7 OFFCURVE",
"477 0 OFFCURVE",
"437 0 CURVE SMOOTH",
"374 0 OFFCURVE",
"312 9 OFFCURVE",
"255 36 CURVE",
"335 78 OFFCURVE",
"401 141 OFFCURVE",
"449 216 CURVE",
"448 210 OFFCURVE",
"449 205 OFFCURVE",
"451 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"12 2 OFFCURVE",
"-21 7 OFFCURVE",
"-45 17 CURVE SMOOTH",
"-70 27 OFFCURVE",
"-82 39 OFFCURVE",
"-82 53 CURVE SMOOTH",
"-82 78 OFFCURVE",
"-59 90 OFFCURVE",
"-28 90 CURVE SMOOTH",
"14 90 OFFCURVE",
"138 54 OFFCURVE",
"204 24 CURVE",
"157 9 OFFCURVE",
"113 2 OFFCURVE",
"54 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 -191 LINE",
"591 -191 LINE",
"591 -166 LINE",
"448 -166 LINE"
);
}
);
width = 902;
}
);
unicode = 135A;
},
{
glyphname = "colon-ethiopic";
lastChange = "2018-11-18 06:27:47 +0000";
layers = (
{
components = (
{
name = colon;
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 250;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2018-11-18 06:27:56 +0000";
layers = (
{
components = (
{
name = comma;
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 250;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2018-11-18 07:05:56 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"66 17 OFFCURVE",
"82 2 OFFCURVE",
"103 2 CURVE SMOOTH",
"122 2 OFFCURVE",
"140 19 OFFCURVE",
"140 38 CURVE SMOOTH",
"140 57 OFFCURVE",
"123 76 OFFCURVE",
"104 76 CURVE SMOOTH",
"81 76 OFFCURVE",
"66 61 OFFCURVE",
"66 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 284 OFFCURVE",
"260 270 OFFCURVE",
"283 270 CURVE SMOOTH",
"303 270 OFFCURVE",
"320 285 OFFCURVE",
"320 306 CURVE",
"320 325 OFFCURVE",
"305 344 OFFCURVE",
"285 344 CURVE SMOOTH",
"264 344 OFFCURVE",
"246 330 OFFCURVE",
"246 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 17 OFFCURVE",
"323 2 OFFCURVE",
"344 2 CURVE SMOOTH",
"363 2 OFFCURVE",
"381 19 OFFCURVE",
"381 38 CURVE SMOOTH",
"381 57 OFFCURVE",
"364 76 OFFCURVE",
"345 76 CURVE SMOOTH",
"322 76 OFFCURVE",
"307 61 OFFCURVE",
"307 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"487 284 OFFCURVE",
"501 270 OFFCURVE",
"524 270 CURVE SMOOTH",
"544 270 OFFCURVE",
"561 285 OFFCURVE",
"561 306 CURVE SMOOTH",
"561 325 OFFCURVE",
"546 344 OFFCURVE",
"526 344 CURVE SMOOTH",
"505 344 OFFCURVE",
"487 330 OFFCURVE",
"487 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 154 OFFCURVE",
"290 140 OFFCURVE",
"313 140 CURVE SMOOTH",
"333 140 OFFCURVE",
"350 155 OFFCURVE",
"350 176 CURVE",
"350 195 OFFCURVE",
"335 214 OFFCURVE",
"315 214 CURVE SMOOTH",
"294 214 OFFCURVE",
"276 200 OFFCURVE",
"276 177 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2018-11-18 07:02:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"88 74 OFFCURVE",
"66 52 OFFCURVE",
"66 37 QCURVE SMOOTH",
"66 22 OFFCURVE",
"88 0 OFFCURVE",
"103 0 QCURVE SMOOTH",
"118 0 OFFCURVE",
"140 22 OFFCURVE",
"140 37 QCURVE SMOOTH",
"140 52 OFFCURVE",
"118 74 OFFCURVE",
"103 74 QCURVE SMOOTH"
);
}
);
width = 250;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2018-11-18 07:05:04 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"66 17 OFFCURVE",
"82 2 OFFCURVE",
"103 2 CURVE SMOOTH",
"122 2 OFFCURVE",
"140 19 OFFCURVE",
"140 38 CURVE SMOOTH",
"140 57 OFFCURVE",
"123 76 OFFCURVE",
"104 76 CURVE SMOOTH",
"81 76 OFFCURVE",
"66 61 OFFCURVE",
"66 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 284 OFFCURVE",
"260 270 OFFCURVE",
"283 270 CURVE SMOOTH",
"303 270 OFFCURVE",
"320 285 OFFCURVE",
"320 306 CURVE SMOOTH",
"320 325 OFFCURVE",
"305 344 OFFCURVE",
"285 344 CURVE SMOOTH",
"264 344 OFFCURVE",
"246 330 OFFCURVE",
"246 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 181 LINE",
"302 181 LINE",
"302 198 LINE",
"76 198 LINE"
);
}
);
width = 250;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2018-11-18 07:05:27 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"66 17 OFFCURVE",
"82 2 OFFCURVE",
"103 2 CURVE SMOOTH",
"122 2 OFFCURVE",
"140 19 OFFCURVE",
"140 38 CURVE SMOOTH",
"140 57 OFFCURVE",
"123 76 OFFCURVE",
"104 76 CURVE SMOOTH",
"81 76 OFFCURVE",
"66 61 OFFCURVE",
"66 38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246 284 OFFCURVE",
"260 270 OFFCURVE",
"283 270 CURVE SMOOTH",
"303 270 OFFCURVE",
"320 285 OFFCURVE",
"320 306 CURVE SMOOTH",
"320 325 OFFCURVE",
"305 344 OFFCURVE",
"285 344 CURVE SMOOTH",
"264 344 OFFCURVE",
"246 330 OFFCURVE",
"246 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"161 153 OFFCURVE",
"175 139 OFFCURVE",
"198 139 CURVE SMOOTH",
"218 139 OFFCURVE",
"235 154 OFFCURVE",
"235 175 CURVE SMOOTH",
"235 194 OFFCURVE",
"220 213 OFFCURVE",
"200 213 CURVE SMOOTH",
"179 213 OFFCURVE",
"161 199 OFFCURVE",
"161 176 CURVE SMOOTH"
);
}
);
width = 397;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2018-11-18 07:04:23 +0000";
layers = (
{
components = (
{
name = colon;
},
{
name = colon;
transform = "{1, 0, 0, 1, 241, 0}";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 600;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2018-11-18 06:31:19 +0000";
layers = (
{
components = (
{
name = semicolon;
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 250;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2018-11-18 07:02:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"88 74 OFFCURVE",
"66 52 OFFCURVE",
"66 37 QCURVE SMOOTH",
"66 22 OFFCURVE",
"88 0 OFFCURVE",
"103 0 QCURVE SMOOTH",
"118 0 OFFCURVE",
"140 22 OFFCURVE",
"140 37 QCURVE SMOOTH",
"140 52 OFFCURVE",
"118 74 OFFCURVE",
"103 74 QCURVE SMOOTH"
);
}
);
width = 250;
}
);
unicode = 1361;
},
{
glyphname = "rikrik-ethiopic";
lastChange = "2018-11-18 07:31:56 +0000";
layers = (
{
components = (
{
name = "question-ethiopic";
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 397;
}
);
unicode = 1392;
},
{
glyphname = "shortRikrik-ethiopic";
lastChange = "2018-11-18 07:31:32 +0000";
layers = (
{
components = (
{
name = colon;
}
);
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 250;
}
);
unicode = 1393;
},
{
export = 0;
glyphname = _part.haa;
lastChange = "2018-11-16 20:49:41 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 600;
}
);
},
{
export = 0;
glyphname = _part.haa.cap;
lastChange = "2018-11-20 19:39:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"698 217 LINE",
"665 187 LINE",
"552 -94 LINE",
"552 -108 LINE",
"724 -108 LINE",
"724 -90 LINE",
"585 -90 LINE SMOOTH",
"561 -90 OFFCURVE",
"577 -65 OFFCURVE",
"614 25 CURVE"
);
}
);
width = 1066;
}
);
},
{
export = 0;
glyphname = _part.hanging;
lastChange = "2018-11-19 05:49:42 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"284 176 OFFCURVE",
"318 266 OFFCURVE",
"349 344 CURVE",
"342 344 LINE",
"311 260 OFFCURVE",
"285 170 OFFCURVE",
"353 166 CURVE",
"353 170 LINE"
);
}
);
width = 278;
}
);
},
{
export = 0;
glyphname = _part.hee;
lastChange = "2018-11-16 20:02:46 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 1270;
}
);
},
{
export = 0;
glyphname = _part.hi;
lastChange = "2018-11-16 20:52:18 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"385 1 LINE",
"381 -5 OFFCURVE",
"378 -9 OFFCURVE",
"377 -11 CURVE SMOOTH",
"356 -40 OFFCURVE",
"273 -151 OFFCURVE",
"240 -200 CURVE",
"435 -200 LINE",
"435 -186 LINE",
"308 -186 LINE",
"340 -137 OFFCURVE",
"381 -85 OFFCURVE",
"414 -37 CURVE SMOOTH",
"418 -31 OFFCURVE",
"423 -24 OFFCURVE",
"427 -17 CURVE"
);
}
);
width = 1270;
}
);
},
{
export = 0;
glyphname = _part.hie.2;
lastChange = "2018-11-17 17:41:39 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"204 66 LINE",
"186 39 OFFCURVE",
"170 15 OFFCURVE",
"161 0 CURVE",
"133 -50 OFFCURVE",
"120 -78 OFFCURVE",
"119 -122 CURVE SMOOTH",
"118 -167 OFFCURVE",
"146 -197 OFFCURVE",
"206 -197 CURVE SMOOTH",
"278 -197 OFFCURVE",
"301 -173 OFFCURVE",
"301 -137 CURVE SMOOTH",
"301 -105 OFFCURVE",
"279 -82 OFFCURVE",
"244 -82 CURVE",
"248 -102 OFFCURVE",
"252 -119 OFFCURVE",
"252 -140 CURVE SMOOTH",
"252 -163 OFFCURVE",
"243 -183 OFFCURVE",
"207 -183 CURVE SMOOTH",
"179 -183 OFFCURVE",
"155 -166 OFFCURVE",
"155 -127 CURVE SMOOTH",
"155 -99 OFFCURVE",
"199 -22 OFFCURVE",
"231 24 CURVE SMOOTH",
"241 39 OFFCURVE",
"250 52 OFFCURVE",
"257 63 CURVE"
);
}
);
width = 600;
}
);
},
{
export = 0;
glyphname = _part.ho;
lastChange = "2018-11-16 05:56:51 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"226 98 LINE",
"212 74 OFFCURVE",
"195 51 OFFCURVE",
"184 32 CURVE SMOOTH",
"143 -39 OFFCURVE",
"125 -70 OFFCURVE",
"124 -122 CURVE SMOOTH",
"123 -167 OFFCURVE",
"151 -197 OFFCURVE",
"211 -197 CURVE SMOOTH",
"283 -197 OFFCURVE",
"306 -173 OFFCURVE",
"306 -137 CURVE SMOOTH",
"306 -105 OFFCURVE",
"284 -82 OFFCURVE",
"249 -82 CURVE",
"253 -102 OFFCURVE",
"257 -119 OFFCURVE",
"257 -140 CURVE SMOOTH",
"257 -163 OFFCURVE",
"248 -183 OFFCURVE",
"212 -183 CURVE SMOOTH",
"184 -183 OFFCURVE",
"160 -166 OFFCURVE",
"160 -127 CURVE SMOOTH",
"160 -99 OFFCURVE",
"204 -22 OFFCURVE",
"236 24 CURVE SMOOTH",
"249 43 OFFCURVE",
"259 59 OFFCURVE",
"267 72 CURVE"
);
}
);
width = 444;
}
);
},
{
export = 0;
glyphname = _part.ho.cap;
lastChange = "2018-11-19 09:29:38 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"837 542 LINE",
"853 540 OFFCURVE",
"869 539 OFFCURVE",
"885 539 CURVE SMOOTH",
"934 539 OFFCURVE",
"986 552 OFFCURVE",
"1025 574 CURVE SMOOTH",
"1061 594 OFFCURVE",
"1091 627 OFFCURVE",
"1091 659 CURVE SMOOTH",
"1091 687 OFFCURVE",
"1071 704 OFFCURVE",
"1033 704 CURVE SMOOTH",
"1010 704 OFFCURVE",
"992 696 OFFCURVE",
"977 681 CURVE SMOOTH",
"975 679 OFFCURVE",
"973 676 OFFCURVE",
"971 674 CURVE",
"979 671 LINE",
"981 673 OFFCURVE",
"982 675 OFFCURVE",
"985 677 CURVE SMOOTH",
"1000 687 OFFCURVE",
"1016 696 OFFCURVE",
"1032 696 CURVE SMOOTH",
"1057 696 OFFCURVE",
"1072 686 OFFCURVE",
"1072 661 CURVE SMOOTH",
"1072 625 OFFCURVE",
"1043 594 OFFCURVE",
"1007 575 CURVE SMOOTH",
"975 558 OFFCURVE",
"921 547 OFFCURVE",
"886 547 CURVE SMOOTH",
"873 547 OFFCURVE",
"860 547 OFFCURVE",
"848 549 CURVE"
);
}
);
width = 845;
}
);
},
{
export = 0;
glyphname = _part.ho.qua;
lastChange = "2018-11-20 03:00:07 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"243 -52 LINE",
"286 -21 OFFCURVE",
"334 -2 OFFCURVE",
"389 -2 CURVE SMOOTH",
"493 -2 OFFCURVE",
"528 -53 OFFCURVE",
"528 -97 CURVE",
"525 -96 OFFCURVE",
"522 -96 OFFCURVE",
"518 -96 CURVE SMOOTH",
"499 -96 OFFCURVE",
"490 -112 OFFCURVE",
"490 -131 CURVE SMOOTH",
"490 -151 OFFCURVE",
"502 -166 OFFCURVE",
"523 -166 CURVE SMOOTH",
"552 -166 OFFCURVE",
"568 -139 OFFCURVE",
"568 -112 CURVE SMOOTH",
"568 -30 OFFCURVE",
"471 10 OFFCURVE",
"394 10 CURVE SMOOTH",
"329 10 OFFCURVE",
"272 -7 OFFCURVE",
"222 -35 CURVE"
);
}
);
width = 778;
}
);
},
{
export = 0;
glyphname = _part.hu;
lastChange = "2018-11-16 07:25:32 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"286 134 LINE",
"304 116 OFFCURVE",
"393 129 OFFCURVE",
"423 161 CURVE",
"438 176 OFFCURVE",
"442 203 OFFCURVE",
"426 219 CURVE",
"409 235 OFFCURVE",
"388 238 OFFCURVE",
"371 219 CURVE SMOOTH",
"353 198 OFFCURVE",
"362 179 OFFCURVE",
"377 164 CURVE",
"353 146 OFFCURVE",
"328 140 OFFCURVE",
"292 142 CURVE"
);
}
);
width = 444;
}
);
},
{
export = 0;
glyphname = _part.hu.1;
lastChange = "2018-11-17 03:51:59 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"338 198 OFFCURVE",
"363 192 OFFCURVE",
"387 174 CURVE",
"372 159 OFFCURVE",
"363 140 OFFCURVE",
"381 119 CURVE SMOOTH",
"398 100 OFFCURVE",
"419 103 OFFCURVE",
"436 119 CURVE",
"452 135 OFFCURVE",
"448 162 OFFCURVE",
"433 177 CURVE",
"403 209 OFFCURVE",
"314 222 OFFCURVE",
"296 204 CURVE",
"302 196 LINE"
);
}
);
width = 444;
}
);
},
{
export = 0;
glyphname = _part.hu.cap;
lastChange = "2018-11-19 09:18:11 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"713 363 LINE",
"926 363 LINE",
"926 384 LINE",
"713 384 LINE"
);
}
);
width = 833;
}
);
},
{
export = 0;
glyphname = _part.hwa;
lastChange = "2018-11-16 07:20:31 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"105 -124 LINE",
"90 -88 OFFCURVE",
"49 -30 OFFCURVE",
"22 -10 QCURVE SMOOTH",
"5 3 OFFCURVE",
"-28 21 OFFCURVE",
"-63 33 OFFCURVE",
"-105 39 OFFCURVE",
"-132 39 QCURVE",
"-132 36 LINE",
"-112 36 OFFCURVE",
"-73 28 OFFCURVE",
"-36 13 OFFCURVE",
"-2 -6 OFFCURVE",
"14 -18 QCURVE SMOOTH",
"42 -39 OFFCURVE",
"88 -93 OFFCURVE",
"102 -124 QCURVE"
);
}
);
width = 444;
}
);
},
{
export = 0;
glyphname = _part.hwo.1;
lastChange = "2018-11-20 17:15:43 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"212 -142 LINE",
"255 -111 OFFCURVE",
"303 -92 OFFCURVE",
"358 -92 CURVE SMOOTH",
"462 -92 OFFCURVE",
"497 -143 OFFCURVE",
"497 -187 CURVE",
"494 -186 OFFCURVE",
"491 -186 OFFCURVE",
"487 -186 CURVE SMOOTH",
"468 -186 OFFCURVE",
"459 -202 OFFCURVE",
"459 -221 CURVE SMOOTH",
"459 -241 OFFCURVE",
"471 -256 OFFCURVE",
"492 -256 CURVE SMOOTH",
"521 -256 OFFCURVE",
"537 -229 OFFCURVE",
"537 -202 CURVE SMOOTH",
"537 -120 OFFCURVE",
"440 -80 OFFCURVE",
"363 -80 CURVE SMOOTH",
"298 -80 OFFCURVE",
"241 -97 OFFCURVE",
"191 -125 CURVE"
);
}
);
width = 977;
}
);
},
{
export = 0;
glyphname = _part.hwo.cap;
lastChange = "2018-11-19 09:30:10 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"528 -97 OFFCURVE",
"481 -81 OFFCURVE",
"432 -81 CURVE SMOOTH",
"372 -81 OFFCURVE",
"328 -110 OFFCURVE",
"328 -147 CURVE SMOOTH",
"328 -172 OFFCURVE",
"344 -188 OFFCURVE",
"369 -188 CURVE SMOOTH",
"390 -188 OFFCURVE",
"402 -175 OFFCURVE",
"402 -155 CURVE SMOOTH",
"402 -136 OFFCURVE",
"392 -124 OFFCURVE",
"371 -124 CURVE",
"379 -103 OFFCURVE",
"401 -93 OFFCURVE",
"438 -93 CURVE SMOOTH",
"475 -93 OFFCURVE",
"511 -114 OFFCURVE",
"544 -142 CURVE",
"572 -128 LINE"
);
}
);
width = 493;
}
);
},
{
export = 0;
glyphname = _part.longleg;
lastChange = "2018-11-16 20:14:17 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"801 -145 OFFCURVE",
"778 -181 OFFCURVE",
"681 -324 CURVE",
"745 -324 LINE",
"813 -213 OFFCURVE",
"883 -106 OFFCURVE",
"955 1 CURVE",
"1107 29 OFFCURVE",
"1232 143 OFFCURVE",
"1303 259 CURVE",
"1297 264 LINE",
"1225 157 OFFCURVE",
"1117 43 OFFCURVE",
"962 12 CURVE",
"1177 344 LINE",
"1117 344 LINE"
);
}
);
width = 276;
}
);
},
{
export = 0;
glyphname = _part.me;
lastChange = "2018-11-17 20:59:45 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"184 19 LINE",
"185 20 OFFCURVE",
"186 20 OFFCURVE",
"187 21 CURVE",
"167 -8 OFFCURVE",
"146 -37 OFFCURVE",
"123 -65 CURVE SMOOTH",
"74 -125 OFFCURVE",
"20 -175 OFFCURVE",
"-39 -204 CURVE SMOOTH",
"-54 -211 OFFCURVE",
"-70 -217 OFFCURVE",
"-86 -221 CURVE",
"-87 -235 LINE",
"-10 -225 OFFCURVE",
"52 -189 OFFCURVE",
"107 -140 CURVE SMOOTH",
"170 -83 OFFCURVE",
"195 -60 OFFCURVE",
"283 74 CURVE SMOOTH",
"289 83 OFFCURVE",
"298 97 OFFCURVE",
"307 114 CURVE"
);
}
);
width = 600;
}
);
},
{
export = 0;
glyphname = _part.slant.cap;
lastChange = "2018-11-19 09:20:20 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
paths = (
{
closed = 1;
nodes = (
"433 -67 LINE",
"459 -85 LINE",
"604 152 LINE",
"577 170 LINE"
);
},
{
closed = 1;
nodes = (
"391 -201 LINE",
"493 -30 LINE",
"466 -12 LINE",
"354 -201 LINE"
);
}
);
width = 942;
}
);
},
{
export = 0;
glyphname = _part.top.connector;
lastChange = "2018-11-19 20:25:49 +0000";
layers = (
{
layerId = "C82BC34C-76D5-4A26-949B-BF353CFC0606";
width = 444;
}
);
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = "Abesha Arif Caps";
},
{
name = postscriptFontName;
value = AbeshaArifCaps;
}
);
instanceInterpolations = {
"C82BC34C-76D5-4A26-949B-BF353CFC0606" = 1;
};
name = Regular;
weightClass = Medium;
}
);
kerning = {
"C82BC34C-76D5-4A26-949B-BF353CFC0606" = {
A = {
quoteright = -37;
};
F = {
comma = -92;
};
T = {
a = -92;
c = -92;
colon = -129;
comma = -129;
e = -92;
hyphen = -129;
i = -74;
o = -92;
r = -74;
s = -74;
semicolon = -129;
u = -74;
w = -74;
y = -74;
};
V = {
colon = -37;
comma = -74;
semicolon = -37;
};
W = {
colon = -37;
comma = -74;
semicolon = -37;
};
Y = {
colon = -74;
comma = -74;
hyphen = -37;
semicolon = -74;
};
quoteleft = {
quoteleft = -18;
};
quoteright = {
quoteright = -18;
s = -37;
t = -18;
};
r = {
comma = -129;
};
v = {
comma = -55;
};
w = {
comma = -55;
};
y = {
comma = -37;
};
};
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 2;
}

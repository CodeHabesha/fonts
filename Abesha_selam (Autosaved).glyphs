{
.appVersion = "1192";
DisplayStrings = (
"/goa-ethiopic",
"/_part.haa/gwa-ethiopic",
"/gwa-ethiopic",
"/gwi-ethiopic",
"/gwaa-ethiopic",
"/gwee-ethiopic",
"/gwe-ethiopic",
"/na-ethiopic/ga-ethiopic"
);
customParameters = (
{
name = vendorID;
value = APPL;
},
{
name = panose;
value = (
2,
0,
4,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
6,
31,
35,
38,
59,
85,
86,
90,
92
);
},
{
name = codePageRanges;
value = (
1252,
1254,
1258
);
},
{
name = glyphOrder;
value = (
.notdef,
NULL,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
AE,
Oslash,
yen,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
florin,
guillemotleft,
guillemotright,
ellipsis,
nonbreakingspace,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
ydieresis,
Ydieresis,
currency,
guilsinglleft,
guilsinglright,
periodcentered,
quotesinglbase,
quotedblbase,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
circumflex,
tilde,
macron,
cedilla,
Lslash,
radical,
dotlessi,
breve,
dotaccent,
ring,
hungarumlaut,
ogonek,
caron,
gravecmb,
acutecmb,
circumflexcmb,
tildecmb,
macroncmb,
brevecmb,
dotaccentcmb,
diaeresiscmb,
hookabovecmb,
ringcmb,
hungarumlautcmb,
caroncmb,
doublegravecmb,
invertedbrevecmb,
horncmb,
dotbelowcmb,
diaeresisbelowcmb,
ringbelowcmb,
commabelowcmb,
cedillacmb,
ogonekcmb,
circumflexbelowcmb,
brevebelowcmb,
tildebelowcmb,
macronbelowcmb,
clickdental,
clicklateral,
centigrade,
fahrenheit,
kelvin,
angstrom,
Oneroman,
Tworoman,
Threeroman,
Fourroman,
Fiveroman,
Sixroman,
Sevenroman,
Eightroman,
Nineroman,
Tenroman,
Elevenroman,
Twelveroman,
uni216C,
uni216D,
uni216E,
uni216F,
oneroman,
tworoman,
threeroman,
fourroman,
fiveroman,
sixroman,
sevenroman,
eightroman,
nineroman,
tenroman,
elevenroman,
twelveroman,
uni217C,
uni217D,
uni217E,
thousandroman,
Ibreve,
ibreve,
Idotaccent,
IJ,
ij,
Jcircumflex,
napostrophe,
clickretroflex,
DZcaron,
Dzcaron,
dzcaron,
LJ,
Lj,
lj,
NJ,
Nj,
nj,
Udieresismacron,
udieresismacron,
Udieresisacute,
udieresisacute,
Udieresiscaron,
udieresiscaron,
Udieresisgrave,
udieresisgrave,
Adieresismacron,
adieresismacron,
Adotmacron,
adotmacron,
AEmacron,
aemacron,
Gcaron,
gcaron,
Kcaron,
kcaron,
Oogonek,
oogonek,
Oogonekmacron,
oogonekmacron,
DZ,
Dz,
dz,
Gacute,
gacute,
Ngrave,
ngrave,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Adblgrave,
adblgrave,
Ainvertedbreve,
ainvertedbreve,
Edblgrave,
edblgrave,
Einvertedbreve,
einvertedbreve,
Idblgrave,
idblgrave,
Iinvertedbreve,
iinvertedbreve,
Odblgrave,
odblgrave,
Oinvertedbreve,
oinvertedbreve,
Rdblgrave,
rdblgrave,
Rinvertedbreve,
rinvertedbreve,
Udblgrave,
udblgrave,
Uinvertedbreve,
uinvertedbreve,
Scommaaccent,
scommaaccent,
Tcommaaccent,
tcommaaccent,
Hcaron,
hcaron,
Adotaccent,
adotaccent,
Ecedilla,
ecedilla,
Odieresismacron,
odieresismacron,
Otildemacron,
otildemacron,
Odotaccent,
odotaccent,
Odotaccentmacron,
odotaccentmacron,
Ymacron,
ymacron,
commaturnedmod,
afii57929,
uni02EE,
Aringbelow,
aringbelow,
Bdotaccent,
bdotaccent,
Bdotbelow,
bdotbelow,
Blinebelow,
blinebelow,
Ccedillaacute,
ccedillaacute,
Ddotaccent,
ddotaccent,
Ddotbelow,
ddotbelow,
Dlinebelow,
dlinebelow,
Dcommaaccent,
dcommaaccent,
Dcircumflexbelow,
dcircumflexbelow,
Emacrongrave,
emacrongrave,
Emacronacute,
emacronacute,
Ecircumflexbelow,
ecircumflexbelow,
Etildebelow,
etildebelow,
Ecedillabreve,
ecedillabreve,
Fdotaccent,
fdotaccent,
Gmacron,
gmacron,
Hdotaccent,
hdotaccent,
Hdotbelow,
hdotbelow,
Hdieresis,
hdieresis,
Hcedilla,
hcedilla,
Hbrevebelow,
hbrevebelow,
Itildebelow,
itildebelow,
Idieresisacute,
idieresisacute,
Kacute,
kacute,
Kdotbelow,
kdotbelow,
Klinebelow,
klinebelow,
Ldotbelow,
ldotbelow,
Ldotbelowmacron,
ldotbelowmacron,
Llinebelow,
llinebelow,
Lcircumflexbelow,
lcircumflexbelow,
Macute,
macute,
Mdotaccent,
mdotaccent,
Mdotbelow,
mdotbelow,
Ndotaccent,
ndotaccent,
Ndotbelow,
ndotbelow,
Nlinebelow,
nlinebelow,
Ncircumflexbelow,
ncircumflexbelow,
Otildeacute,
otildeacute,
Otildedieresis,
otildedieresis,
Omacrongrave,
omacrongrave,
Omacronacute,
omacronacute,
Pacute,
pacute,
Pdotaccent,
pdotaccent,
Rdotaccent,
rdotaccent,
Rdotbelow,
rdotbelow,
Rdotbelowmacron,
rdotbelowmacron,
Rlinebelow,
rlinebelow,
Sdotaccent,
sdotaccent,
Sdotbelow,
sdotbelow,
Sacutedotaccent,
sacutedotaccent,
Scarondotaccent,
scarondotaccent,
Sdotbelowdotaccent,
sdotbelowdotaccent,
Tdotaccent,
tdotaccent,
Tdotbelow,
tdotbelow,
Tlinebelow,
tlinebelow,
Tcircumflexbelow,
tcircumflexbelow,
Udieresisbelow,
udieresisbelow,
Utildebelow,
utildebelow,
Ucircumflexbelow,
ucircumflexbelow,
Utildeacute,
utildeacute,
Umacrondieresis,
umacrondieresis,
Vtilde,
vtilde,
Vdotbelow,
vdotbelow,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Wdotaccent,
wdotaccent,
Wdotbelow,
wdotbelow,
Xdotaccent,
xdotaccent,
Xdieresis,
xdieresis,
Ydotaccent,
ydotaccent,
Zcircumflex,
zcircumflex,
Zdotbelow,
zdotbelow,
Zlinebelow,
zlinebelow,
hlinebelow,
tdieresis,
wring,
yring,
Ecircumflexmacron,
ecircumflexmacron,
Ecircumflexcaron,
ecircumflexcaron,
Yacute,
yacute,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Kcommaaccent,
kcommaaccent,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Nacute,
nacute,
Ncommaaccent,
ncedilla,
Ncaron,
ncaron,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Rcommaaccent,
rcommaaccent,
Rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Scaron,
scaron,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Zacute,
zacute,
Zcaron,
zcaron,
gravetonecmb,
acutetonecmb,
dialytikatonoscmb,
questiongreek,
anoteleia,
Amacrongrave,
amacrongrave,
aacuteogonek,
Imacrongrave,
imacrongrave,
idotaboveacute,
Umacrongrave,
umacrongrave,
xdotbelow,
Mgrave,
mgrave,
Rbreve,
rbreve,
uniFE10,
uniFE13,
uniFE14,
uniFE15,
uniFE16,
uniFE19,
emdashvertical,
endashvertical,
underscorevertical,
wavyunderscorevertical,
parenleftvertical,
parenrightvertical,
braceleftvertical,
bracerightvertical,
uniFE47,
uniFE48,
section,
notequal,
infinity,
plusminus,
lessequal,
greaterequal,
mu,
partialdiff,
summation,
product,
integral,
ordfeminine,
ordmasculine,
approxequal,
divide,
lozenge,
fraction,
Euro,
daggerdbl,
apple,
dieresiscmb,
soliduslongoverlaycmb,
Schwa,
OI,
oi,
Zstroke,
zstroke,
schwa,
EgraveCyrillic,
IOCyrillic,
DJECyrillic,
GjeCyrillic,
IECyrillic,
DzeCyrillic,
ICyrillic,
YiCyrillic,
JeCyrillic,
LjeCyrillic,
NjeCyrillic,
TsheCyrillic,
KjeCyrillic,
IgraveCyrillic,
UshortCyrillic,
DzheCyrillic,
ACyrillic,
BeCyrillic,
VeCyrillic,
GheCyrillic,
DeCyrillic,
IeCyrillic,
ZheCyrillic,
ZeCyrillic,
ICyrillic2,
IshortCyrillic,
KaCyrillic,
ElCyrillic,
EmCyrillic,
EnCyrillic,
OCyrillic,
PeCyrillic,
ErCyrillic,
EsCyrillic,
TeCyrillic,
UCyrillic,
EfCyrillic,
HaCyrillic,
TseCyrillic,
cheCyrillic,
ShaCyrillic,
ShchaCyrillic,
HardSignCyrillic,
YeruCyrillic,
SoftSignCyrillic,
ECyrillic,
YuCyrillic,
YaCyrillic,
aCyrillic,
beCyrillic,
veCyrillic,
gheCyrillic,
deCyrillic,
ieCyrillic,
zheCyrillic,
zeCyrillic,
iCyrillic,
iShortCyrillic,
kaCyrillic,
elCyrillic,
emCyrillic,
enCyrillic,
oCyrillic,
peCyrillic,
erCyrillic,
esCyrillic,
teCyrillic,
uCyrillic,
efCyrillic,
haCyrillic,
tseCyrillic,
cheCyrillic2,
shaCyrillic,
shchaCyrillic,
hardSignCyrillic,
yeruCyrillic,
softSignCyrillic,
eCyrillic,
yuCyrillic,
yaCyrillic,
egraveCyrillic,
ioCyrillic,
djeCyrillic,
gjeCyrillic,
ieCyrillic2,
dzeCyrillic,
iCyrillic2,
yiCyrillic,
jeCyrillic,
ljeCyrillic,
njeCyrillic,
tsheCyrillic,
kjeCyrillic,
igraveCyrillic,
uShortCyrillic,
dzheCyrillic,
YatCyrillic,
yatCyrillic,
YusCyrillic,
yusCyrillic,
FitaCyrillic,
fitaCyrillic,
IzhitsaCyrillic,
izhitsaCyrillic,
SemisoftSignCyrillic,
semisoftSignCyrillic,
GheUpturnCyrillic,
gheUpturnCyrillic,
GheStrokeCyrillic,
gheStrokeCyrillic,
ZheDescenderCyrillic,
zheDescenderCyrillic,
ZeDescenderCyrillic,
zeDescenderCyrillic,
KaDescenderCyrillic,
kaDescenderCyrillic,
KaStrokeCyrillic,
kaStrokeCyrillic,
KaBashkirCyrillic,
kaBashkirCyrillic,
EnDescenderCyrillic,
enDescenderCyrillic,
EnCyrillic_GheCyrillic,
enCyrillic_gheCyrillic,
EsDescenderCyrillic,
esDescenderCyrillic,
UStraightCyrillic,
uStraightCyrillic,
UStraightStrokeCyrillic,
uStraightStrokeCyrillic,
HaDescenderCyrillic,
haDescenderCyrillic,
CheDescenderCyrillic,
cheDescenderCyrillic,
CheStrokeCyrillic,
cheStrokeCyrillic,
ShhaCyrillic,
shhaCyrillic,
palochkaCyrillic,
ZheBreveCyrillic,
zheBreveCyrillic,
ABreveCyrillic,
aBreveCyrillic,
ADiaeresisCyrillic,
aDiaeresisCyrillic,
ACyrillic_IeCyrillic,
aCyrillic_ieCyrillic,
IeBreveCyrillic,
ieBreveCyrillic,
SchwaCyrillic,
schwaCyrillic,
ZheDiaeresisCyrillic,
zheDiaeresisCyrillic,
ZeDiaeresisCyrillic,
zeDiaeresisCyrillic,
IMacronCyrillic,
iMacronCyrillic,
IDiaeresisCyrillic,
iDiaeresisCyrillic,
ODiaeresisCyrillic,
oDiaeresisCyrillic,
OBarredCyrillic,
oBarredCyrillic,
UMacronCyrillic,
uMacronCyrillic,
UDiaeresisCyrillic,
uDiaeresisCyrillic,
UDoubleAcuteCyrillic,
uDoubleAcuteCyrillic,
CheDiaeresis,
cheDiaeresisCyrillic,
YeruDiaeresisCyrillic,
yeruDiaeresisCyrillic,
Numero,
lslash,
Zdotabove,
zdotabove,
afii10063,
afii10064,
afii10192,
afii10831,
afii10832,
cyrBreve,
Uni0111,
Uni0110,
Uni0123,
Uni012F,
Uni012E,
Uni0155,
Uni0154,
Uni0159,
Uni021B,
Uni021A,
y_acutecmb,
Y_acutecmb,
uni0385,
tonos,
Gamma,
DeltaGreek,
Theta,
Lambda,
Xi,
Pi,
Sigma,
Iotadieresis,
Alpha,
Beta,
Epsilon,
Zeta,
Eta,
Iota,
Kappa,
Mu,
Phi,
Upsilondieresis,
Psi,
OmegaGreek,
alphatonos,
Nu,
Omicron,
Rho,
Tau,
Upsilon,
Chi,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
epsilontonos,
etatonos,
iotatonos,
omicrontonos,
Omegatonos,
upsilontonos,
alpha,
beta,
psi,
delta,
epsilon,
phi,
gamma,
eta,
iota,
xi,
kappa,
lambda,
mu.Greek,
nu,
omicron,
pi.Greek,
omegatonos,
rho,
sigma,
tau,
theta,
omega,
sigmafinal,
chi,
upsilon,
zeta,
iotadieresis,
upsilondieresis,
iotadieresistonos,
upsilondieresistonos,
Hryvnia,
S_caroncmb,
s_caroncmb,
z_caroncmb,
Z_caroncmb,
c_caroncmb,
C_caroncmb,
afii00208,
brokenbar,
uni016C_U_brevecmb,
uni016D_u_brevecmb,
u01A0,
u01A1,
u01AF,
u01B0,
u1EA0,
u1EA1,
u1EA2,
u1EA3,
u1EA4,
u1EA5,
u1EA6,
u1EA7,
u1EA8,
u1EA9,
u1EAA,
u1EAB,
u1EAC,
u1EAD,
u1EAE,
u1EAF,
u1EB0,
u1EB1,
u1EB2,
u1EB3,
u1EB4,
u1EB5,
u1EB6,
u1EB7,
u1EB8,
u1EB9,
u1EBA,
u1EBB,
u1EBC,
u1EBD,
u1EBE,
u1EBF,
u1EC0,
u1EC1,
u1EC2,
u1EC3,
u1EC4,
u1EC5,
u1EC6,
u1EC7,
u1EC8,
u1EC9,
u1ECA,
u1ECB,
u1ECC,
u1ECD,
u1ECE,
u1ECF,
u1ED0,
u1ED1,
u1ED2,
u1ED3,
u1ED4,
u1ED5,
u1ED6,
u1ED7,
u1ED8,
u1ED9,
u1EDA,
u1EDB,
u1EDC,
u1EDD,
u1EDE,
u1EDF,
u1EE0,
u1EE1,
u1EE2,
u1EE3,
u1EE4,
u1EE5,
u1EE6,
u1EE7,
u1EE8,
u1EE9,
u1EEA,
u1EEB,
u1EEC,
u1EED,
u1EEE,
u1EEF,
u1EF0,
u1EF1,
u20AB,
u01CD,
u01CE,
u01CF,
u01D0,
u01D1,
u01D2,
u01D3,
u01D4,
u0174,
u0175,
u0176,
u0177,
u1EF2,
u1EF3,
u1EF8,
u1EF9,
u1EF6,
u1EF7,
u1EF4,
u1EF5,
u013F,
u0140,
uni13A5,
uni13A6,
uni13A7,
uni13A8,
uni13A9,
uni13AA,
uni13AB,
uni13AC,
uni13AD,
uni13AE,
uni13AF,
uni13B0,
uni13B1,
uni13B2,
uni13B3,
uni13B4,
uni13B5,
uni13B6,
uni13B7,
uni13B8,
uni13B9,
uni13BA,
uni13BB,
uni13BC,
uni13BD,
uni13BE,
uni13BF,
uni13C0,
uni13C1,
uni13C2,
uni13C3,
uni13C4,
uni13C5,
uni13C6,
uni13C7,
uni13C8,
uni13C9,
uni13CA,
uni13CB,
uni13CC,
uni13CD,
uni13CE,
uni13CF,
uni13D0,
uni13D1,
uni13D2,
uni13D3,
uni13D4,
uni13D5,
uni13D6,
uni13D7,
uni13D8,
uni13D9,
uni13DA,
uni13DB,
uni13DC,
uni13DD,
uni13DE,
uni13DF,
uni13E0,
uni13E1,
uni13E2,
uni13E3,
uni13E4,
uni13E5,
uni13E6,
uni13E7,
uni13E8,
uni13E9,
uni13EA,
uni13EB,
uni13EC,
uni13ED,
uni13EE,
uni13EF,
uni13F0,
uni13F1,
uni13F2,
uni13F3,
uni13F4,
uni13A0,
uni13A1,
uni13A2,
uni13A3,
uni13A4,
uni20B9.INDIAN_RUPEE_SIGN,
minus,
Eth,
eth,
Thorn,
thorn,
zeroinferior,
oneinferior,
twoinferior,
threeinferior,
fourinferior,
fiveinferior,
sixinferior,
seveninferior,
eightinferior,
nineinferior,
onesuperior,
threesuperior,
twosuperior,
zerosuperior,
foursuperior,
fivesuperior,
sixsuperior,
sevensuperior,
eightsuperior,
ninesuperior,
fi,
fl,
onehalf,
onequarter,
threequarters,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
onethird,
twothirds,
perthousand,
multiply,
pi,
Omega,
dieresisbelowcmb,
softhyphen,
u20B1,
u1D43,
u1D48,
u1D49,
u02B0,
u207F,
u1D52,
u02B3,
u02E2,
u1D57,
u20BA
);
}
);
date = "2019-03-01 19:33:32 +0000";
disablesNiceNames = 1;
familyName = "Abesha Selam";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012languagesystem latn dflt;\012languagesystem latn ROM;\012languagesystem latn MOL;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature subs;\012feature sinf;\012feature sups;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "script latn;\012language ROM;\012sub Scedilla by Scommaaccent;\012sub scedilla by scommaaccent;\012sub Tcedilla by Tcommaaccent;\012sub tcedilla by tcommaaccent;\012language MOL;\012sub Scedilla by Scommaaccent;\012sub scedilla by scommaaccent;\012sub Tcedilla by Tcommaaccent;\012sub tcedilla by tcommaaccent;\012";
name = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;\012sub one by oneinferior;\012sub two by twoinferior;\012sub three by threeinferior;\012sub four by fourinferior;\012sub five by fiveinferior;\012sub six by sixinferior;\012sub seven by seveninferior;\012sub eight by eightinferior;\012sub nine by nineinferior;\012";
name = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;\012sub one by oneinferior;\012sub two by twoinferior;\012sub three by threeinferior;\012sub four by fourinferior;\012sub five by fiveinferior;\012sub six by sixinferior;\012sub seven by seveninferior;\012sub eight by eightinferior;\012sub nine by nineinferior;\012";
name = sinf;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub three by threesuperior;\012sub two by twosuperior;\012sub zero by zerosuperior;\012sub four by foursuperior;\012sub five by fivesuperior;\012sub six by sixsuperior;\012sub seven by sevensuperior;\012sub eight by eightsuperior;\012sub nine by ninesuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash eight by oneeighth;\012sub one slash four by onequarter;\012sub three slash eight by threeeighths;\012sub one slash two by onehalf;\012sub five slash eight by fiveeighths;\012sub three slash four by threequarters;\012sub seven slash eight by seveneighths;\012sub one slash three by onethird;\012sub two slash three by twothirds;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 846;
capHeight = 694;
customParameters = (
{
name = typoAscender;
value = 846;
},
{
name = typoDescender;
value = -283;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 846;
},
{
name = winDescent;
value = 283;
},
{
name = hheaAscender;
value = 1024;
},
{
name = hheaDescender;
value = -256;
},
{
name = strikeoutPosition;
value = 259;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\01220 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 930 22 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\012932 92 71 55 41 26 0 28 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012933 84 71 55 41 26 0 28 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012934 78 71 55 41 26 0 28 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\012928 108 85 71 53 26 0 28 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012929 123 100 71 53 34 0 28 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012930 100 85 71 41 26 0 28 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\012931 92 71 55 41 26 0 28 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\012935 4 27 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012927 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 1 value pushed */\01210 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 37 values pushed */\01221 21 20 20 19 19 18 18 17 17 16 16 15 15 14 14 13 13 12 12 11 11 10 10 9 9 8 8 3 3 2 2 1 1 0 0 1 \012SCANTYPE[ ]	/* ScanType */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 4 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 6 70 0 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0126 6 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0123 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0123 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01211 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0123 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0123 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01221 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01226 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
-275,
-20,
436,
683,
50,
59,
47,
37,
30,
69,
187,
459,
275,
215,
352,
414,
314,
480,
373,
260,
316,
480,
-30654,
-8444,
-28024,
11400,
26849,
6040,
-21453,
13990,
-23800,
18737,
-21115,
-12437,
12075,
491,
3716,
-8907,
13289,
27585,
8304,
-13801,
19890,
-8176,
9243,
21434,
-4268,
12231,
20855,
-7593,
26085,
809,
-23993,
5319,
15502,
-11972,
16588,
-8180,
26402,
922,
-30066,
19214,
25206,
-16976,
-27748,
-18252,
20529,
-15651,
15231,
24159,
-13839,
26977,
6173,
-30791,
26216,
30314,
8492,
-32633,
10967,
26151,
16766,
-31819,
-12670,
10204,
32558,
21118,
-26550,
-11385,
13250,
31341,
-4344,
-10766,
25747,
5176,
-1288,
-30363,
2564,
-2845,
-17511,
9063,
-29753,
-22650,
16676,
-12070,
30466,
14903,
-22333,
22598,
-4,
-26979,
18808,
-12307,
-24187,
1093,
13796,
-18798,
23592,
-12881,
-32698,
5356,
-1954,
26425,
4777,
-17341,
7814,
4263,
-9890,
17093,
-16603,
-1204,
25831,
7838,
-23291,
15845,
-8292,
26,
8652,
-32184,
-5048,
-23577,
12184,
-25018,
-338,
-19761,
14698,
-9711,
22261,
-18570,
-16359,
23985,
-32222,
-23596,
22324,
-2490,
-25210,
13480,
-6300,
-28691,
9089,
-10967,
22249,
-1657,
-24969,
7971,
-9749,
-11053,
11797,
32377,
11537,
-16748,
11570,
-29224,
-21700,
23122,
-58,
30066,
4126,
-2825,
2311,
24129,
11642,
-25164,
-3964,
13277,
30248,
23397,
-27463,
-4725,
15579,
2863,
16506,
-31071,
-30520,
30831,
-18353,
-3602,
27291,
19741,
-64,
26467,
18246,
-14086,
-20032,
7780,
13029,
-19575,
9535,
-15969,
17578,
15136,
-21851,
18513,
-1032,
-9249,
23152,
3322,
-5342,
18499,
8930,
-10355,
23604,
-17268,
-9090,
31571,
-12860,
-24457,
9707,
-31274,
-30601,
24814,
-5227,
-10635,
25116,
3511,
-22994,
15573,
-23243,
18252,
-22550,
-14692,
10552,
1944,
1207,
-14552,
14742,
5817,
-207,
-30504,
1407,
-13866,
10778,
6762,
27562,
-5677,
-12697,
28425,
20365,
-16883,
-4830,
32211,
20523,
-21461,
-1171,
20038,
24728,
-21016,
-26831,
-10892,
13377,
29085,
19183,
-26561,
-10741,
9542,
27021,
10156,
-10933,
8115,
4818,
-12673,
12345,
17060,
-15289,
10914,
26078,
7460,
-16120,
28105,
5989,
-31205,
11459,
-8074,
-27124,
3969,
-19139,
23772,
-16581,
-1748,
27590,
19974,
-7385,
-26411,
12404,
-21534,
23179,
-17139,
-11521,
22672,
-14820,
27024,
565,
-24427,
28923,
18477,
-25071,
-28610,
19361,
-1980,
29606,
22248,
-2176,
24843,
5361,
-2238,
-28126,
14792,
-23720,
18116,
-22170,
-12218,
25833,
1665,
-18418,
13489,
-13991,
19691,
-20673,
-32498,
-3260,
2980,
14993,
1258,
18220,
-32158,
-21225,
18653,
-19611,
-3541,
-11029,
15147,
4196,
-9675,
-15636,
19868,
13658,
-26167,
-26975,
26221,
8669,
-27395,
17060,
15129,
-777,
17319,
3074,
-8481,
-262,
-18069,
11015,
-30265,
-17038,
12124,
-7437,
-28059,
19498,
-1875,
29534,
24306,
-14955,
29493,
6839,
-750,
-19661,
16290,
-23727,
6585,
6608,
-15029,
32226,
1937,
-25479,
15872,
-24906,
-16808,
24828,
20188,
-9101,
-28956,
28316,
7439,
-29457,
14983,
-22921,
31512,
6025,
-25556,
11435,
-4750,
-24809,
14270,
-16859,
4261,
27813,
15331,
-28964,
8466,
27746,
22459,
-27250,
-2873,
12311,
2405,
22713,
-26995,
-6696,
10759,
25638,
5581,
-9171,
27980,
3813,
-3905,
-31906,
1217,
-5340,
-23468,
23970,
-32382,
-20925,
22511,
-14719,
28029,
8200,
-10618,
19979,
-2633,
-24746,
32701,
14802,
-22440,
3712,
8592,
-5543,
24374,
11695,
-19647,
7881,
2179,
-21498,
3740,
10094,
-11541,
15574,
29559,
-18,
-25451,
22901,
-21413,
-881,
8332,
20066,
-5648,
24723,
6959,
-1178,
-9157,
32200,
2637,
-32528,
646,
-5323,
-31521,
12136,
-20764,
21540,
-18819,
-10210,
2752,
25145,
-17143,
-28584,
-11357,
4861,
21761,
583,
-7824,
-14002,
1182,
28647,
-24030,
-4229,
-10061,
4481,
28885,
-16607,
-29572,
-11685,
23746,
3169,
-2999,
17896,
13953,
-26349,
-21510,
11421,
-27784,
-25360,
17870,
-21890,
-14817,
28595,
-3803,
-27239,
6316,
-12486,
26287,
7243,
-18446,
26577,
11894,
-16132,
9948,
6220,
-3547,
-18470,
14915,
-9243,
13997,
8511,
-11046,
14192,
24330,
-1393,
13695,
1105,
22173,
-22787,
-7245,
-31937,
13020,
-24552,
2669,
25791,
21663,
-6224,
-26569,
10926,
-21416,
18104,
3992,
3257,
-8115,
26079,
2937,
-16475,
27850,
-2720,
-28951,
652,
-12434,
17920,
15346,
-25541,
-6910,
9561,
29848,
20459,
-25077,
-8693,
-30387,
30822,
-19784,
-24696,
-5680,
9234,
25962,
17082,
-25720,
-12580,
9256,
29794,
22695,
-10554,
-30099,
28237,
-13588,
-17273,
9275,
-31088,
-30630,
22850,
16589,
-1866,
-14568,
25623,
-14616,
-32081,
31498,
23488,
-15688,
-17793,
5694,
-14712,
-23974,
32634,
23100,
-13394,
24596,
-22486,
-8759,
30052,
-6383,
-24644,
3358,
-6128,
-25128,
2883,
-20807,
4347,
9068,
-20910,
17658,
-15910,
23881,
10304,
-4875,
-24707,
32574,
4268,
-31927,
14565,
-10646,
18010,
-18814,
-2643,
-30136,
6339,
-17797,
12379,
-28424,
-13873,
13078,
28744,
8614,
-24936,
27082,
18994,
-13474,
-22594,
26071,
-4785,
-31236,
18000,
-7385,
-29003,
10076,
-23632,
3052,
6537,
-1480,
29134,
1095,
-29982,
16229,
-12261,
3728,
15140,
-21845,
22855,
-10057,
27333,
-7103,
-27661,
2695,
-22525,
7371,
24779,
14221,
-2778,
13688,
6216,
21648,
-21806,
-6614,
-12422,
6216,
19356,
-22808,
-1246,
-9369,
21766,
1197,
-4851,
21804,
15303,
-24197,
2512,
1690,
-10750,
-13043,
32758,
17880,
-5801,
16680,
3567,
-438,
-8704,
18424,
14527,
-27266,
18888,
11418,
-966,
10108,
18670,
-7468,
11133,
31018,
18327,
-8839,
27120,
-7293,
22288,
16282,
-4768,
-32248,
14570,
-4045,
-13449,
2898,
1523,
-4510,
27921,
19449,
-341,
22123,
2820,
-12882,
25903,
-1078,
-12236,
27483,
7130,
-20875,
10733,
-15923,
6964,
25202,
-19432,
-12804,
30894,
-11186,
-9650,
-29432,
31907,
20219,
-31797,
-5613,
8273,
27053,
18173,
-24625,
-13025,
14443,
28833,
21728,
-9589,
-29138,
27280,
-12623,
-24232,
22774,
-31915,
-29675,
23941,
17546,
-2701,
-15525,
24788,
-13659,
-30880,
30679,
22403,
-16005,
-16836,
4739,
-15541,
-23015,
31677,
24315,
-12691,
25675,
-23320,
-16000,
32297,
3240,
-24023,
11489,
-29509,
-23977,
22663,
-31351,
-22175,
23786,
-1066,
9331,
30252,
22145,
-1981,
29436,
6768,
-18088,
25059,
3731,
-22495,
9122,
-9128,
15505,
1512,
16938,
-14253,
11510,
32431,
32591,
15662,
-19755,
20789,
-2469,
10434,
2408,
10244,
-12348,
9268,
25415,
19415,
-7048,
-32535,
18585,
-5099,
-25936,
4435,
-17468,
25708,
2846,
-22544,
26696,
311,
-18237,
21073,
-15935,
10856,
17422,
-18257,
-13240,
17395,
-2673,
28427,
20405,
-7594,
28552,
1959,
-19373,
11765,
-13958,
13589,
23493,
-12179,
32077,
12002,
-17261,
18706,
-15999,
552,
12489,
-8860,
27411,
-16901,
-28012,
29470,
3263,
-32422,
17677,
-22913,
-27057,
-7281,
27062,
19980,
-4126,
-12382,
15986,
27933,
-626,
-11664,
27420,
2737,
-22483,
21377,
-19558,
-10896,
31982,
4508,
-32759,
15847,
-16905,
-2666,
30248,
4072,
-25702,
1331,
-22096,
4674,
15754,
-18267,
19991,
13,
904,
16,
16,
41,
36,
44,
48,
48,
53,
57,
0,
23,
-272,
0,
453,
0,
694,
0
);
}
);
descender = -283;
id = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
userData = {
GSCornerRadius = 15;
};
weight = Light;
weightValue = 300;
widthValue = 5;
xHeight = 430;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"438 0 LINE",
"438 800 LINE",
"63 800 LINE",
"63 0 LINE"
);
},
{
closed = 1;
nodes = (
"125 738 LINE",
"375 738 LINE",
"375 63 LINE",
"125 63 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
1 8 8 64 9 2 7 4 5 1 0 6 5 5 3 2 5 4 6 0 7 6 6 1 2 1 3 0 1 1 0 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
8 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 500;
}
);
note = .notdef;
},
{
glyphname = NULL;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = NULL;
},
{
glyphname = CR;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 211;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 211;
}
);
note = space;
unicode = 0020;
},
{
glyphname = exclam;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"173.667 668.333 OFFCURVE",
"157.667 676 OFFCURVE",
"141 676 CURVE SMOOTH",
"122.333 676 OFFCURVE",
"105.333 669.333 OFFCURVE",
"90 656 CURVE",
"91.333 653.333 OFFCURVE",
"103 614.333 OFFCURVE",
"103 609 CURVE",
"74 261 LINE",
"74 261 OFFCURVE",
"74 257.667 OFFCURVE",
"74 251 CURVE SMOOTH",
"74 216.333 OFFCURVE",
"77.333 192.333 OFFCURVE",
"84 179 CURVE",
"89.333 176.333 OFFCURVE",
"96.667 175 OFFCURVE",
"106 175 CURVE SMOOTH",
"113.333 175 OFFCURVE",
"118.333 175.333 OFFCURVE",
"121 176 CURVE",
"127.667 181.333 OFFCURVE",
"132.333 185.333 OFFCURVE",
"135 188 CURVE",
"124.333 230.667 OFFCURVE",
"119 256 OFFCURVE",
"119 264 CURVE SMOOTH",
"119 270 OFFCURVE",
"119.833 278.167 OFFCURVE",
"121.5 288.5 CURVE SMOOTH",
"123.167 298.833 OFFCURVE",
"124 306 OFFCURVE",
"124 310 CURVE",
"130.667 424.667 OFFCURVE",
"147.333 530 OFFCURVE",
"174 626 CURVE",
"180 638.667 OFFCURVE",
"185 647.667 OFFCURVE",
"189 653 CURVE"
);
},
{
closed = 1;
nodes = (
"158 78 OFFCURVE",
"131.667 88 OFFCURVE",
"79 88 CURVE SMOOTH",
"59 88 OFFCURVE",
"45 85.333 OFFCURVE",
"37 80 CURVE",
"25.667 73.333 OFFCURVE",
"20 60 OFFCURVE",
"20 40 CURVE SMOOTH",
"20 28 OFFCURVE",
"22.667 17 OFFCURVE",
"28 7 CURVE",
"54 -5 OFFCURVE",
"71.667 -11 OFFCURVE",
"81 -11 CURVE SMOOTH",
"132.333 -11 OFFCURVE",
"158 12 OFFCURVE",
"158 58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
1 39 39 64 40 0 13 23 20 9 0 27 5 33 7 4 17 4 4 19 17 23 7 25 37 6 29 29 1 25 3 1 33 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
33 39 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
39 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 209;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"182 670.333 OFFCURVE",
"167.667 676 OFFCURVE",
"139 676 CURVE SMOOTH",
"134.333 676 OFFCURVE",
"130.667 675.333 OFFCURVE",
"128 674 CURVE",
"123.333 672.667 OFFCURVE",
"119 661.667 OFFCURVE",
"115 641 CURVE SMOOTH",
"112.333 624.333 OFFCURVE",
"111 611 OFFCURVE",
"111 601 CURVE SMOOTH",
"111 593 OFFCURVE",
"111.667 550.667 OFFCURVE",
"113 474 CURVE",
"116.333 467.333 OFFCURVE",
"124 464 OFFCURVE",
"136 464 CURVE SMOOTH",
"155.333 464 OFFCURVE",
"165 476.667 OFFCURVE",
"165 502 CURVE SMOOTH",
"165 510.667 OFFCURVE",
"164.5 523.5 OFFCURVE",
"163.5 540.5 CURVE SMOOTH",
"162.5 557.5 OFFCURVE",
"162 570.333 OFFCURVE",
"162 579 CURVE SMOOTH",
"162 603.667 OFFCURVE",
"164 621.667 OFFCURVE",
"168 633 CURVE SMOOTH",
"168.667 635 OFFCURVE",
"171.167 639.5 OFFCURVE",
"175.5 646.5 CURVE SMOOTH",
"179.833 653.5 OFFCURVE",
"182 657.667 OFFCURVE",
"182 659 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"74 516.333 OFFCURVE",
"72.5 533 OFFCURVE",
"69.5 555 CURVE SMOOTH",
"66.5 577 OFFCURVE",
"65 593.667 OFFCURVE",
"65 605 CURVE SMOOTH",
"65 609.667 OFFCURVE",
"66 616.5 OFFCURVE",
"68 625.5 CURVE SMOOTH",
"70 634.5 OFFCURVE",
"71 641.333 OFFCURVE",
"71 646 CURVE SMOOTH",
"71 648 OFFCURVE",
"70.667 650.833 OFFCURVE",
"70 654.5 CURVE SMOOTH",
"69.333 658.167 OFFCURVE",
"69 660.667 OFFCURVE",
"69 662 CURVE SMOOTH",
"69 665.333 OFFCURVE",
"69 668.333 OFFCURVE",
"69 671 CURVE",
"61.667 679 OFFCURVE",
"54.667 683 OFFCURVE",
"48 683 CURVE SMOOTH",
"29.333 683 OFFCURVE",
"20 666.667 OFFCURVE",
"20 634 CURVE SMOOTH",
"20 617.333 OFFCURVE",
"21 564 OFFCURVE",
"23 474 CURVE",
"25.667 467.333 OFFCURVE",
"33.333 464 OFFCURVE",
"46 464 CURVE SMOOTH",
"64.667 464 OFFCURVE",
"74 477.667 OFFCURVE",
"74 505 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
1 43 43 64 44 0 14 5 0 12 4 8 22 4 26 34 32 37 4 28 40 4 28 24 10 30 3 20 3 1 28 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
28 43 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
43 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 202;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"409 504.667 OFFCURVE",
"402 514.333 OFFCURVE",
"388 521 CURVE SMOOTH",
"376.667 526.333 OFFCURVE",
"364 529 OFFCURVE",
"350 529 CURVE SMOOTH",
"348 529 OFFCURVE",
"338.667 528.667 OFFCURVE",
"322 528 CURVE",
"327.333 556 OFFCURVE",
"332 578.333 OFFCURVE",
"336 595 CURVE",
"336.667 597 OFFCURVE",
"341 607.333 OFFCURVE",
"349 626 CURVE",
"353.667 639.333 OFFCURVE",
"356 650.333 OFFCURVE",
"356 659 CURVE SMOOTH",
"356 676.333 OFFCURVE",
"336.333 690 OFFCURVE",
"319 690 CURVE SMOOTH",
"316.333 690 OFFCURVE",
"306.667 684.333 OFFCURVE",
"290 673 CURVE",
"281.333 601 OFFCURVE",
"275 551.667 OFFCURVE",
"271 525 CURVE",
"180 520 LINE",
"188 559.333 OFFCURVE",
"193.333 584.333 OFFCURVE",
"196 595 CURVE",
"197.333 597.667 OFFCURVE",
"201.333 606.333 OFFCURVE",
"208 621 CURVE",
"212.667 632.333 OFFCURVE",
"215 641.667 OFFCURVE",
"215 649 CURVE SMOOTH",
"215 666.333 OFFCURVE",
"195.667 680 OFFCURVE",
"177 680 CURVE SMOOTH",
"169 680 OFFCURVE",
"158 675.333 OFFCURVE",
"144 666 CURVE",
"142.667 655.333 OFFCURVE",
"142 643 OFFCURVE",
"142 629 CURVE SMOOTH",
"142 609.667 OFFCURVE",
"138 572.667 OFFCURVE",
"130 518 CURVE",
"59 514 LINE",
"57 498 OFFCURVE",
"56 489.667 OFFCURVE",
"56 489 CURVE SMOOTH",
"56 477 OFFCURVE",
"66.667 452 OFFCURVE",
"76 452 CURVE",
"74.667 452 OFFCURVE",
"90.667 458.333 OFFCURVE",
"124 471 CURVE",
"92 228 LINE",
"23 224 LINE",
"21 208 OFFCURVE",
"20 199.667 OFFCURVE",
"20 199 CURVE SMOOTH",
"20 187 OFFCURVE",
"30.667 162 OFFCURVE",
"40 162 CURVE",
"40 162 OFFCURVE",
"55.333 168 OFFCURVE",
"86 180 CURVE",
"74 90 OFFCURVE",
"68 35.667 OFFCURVE",
"68 17 CURVE SMOOTH",
"68 9 OFFCURVE",
"81 -10 OFFCURVE",
"89 -10 CURVE SMOOTH",
"109.667 -10 OFFCURVE",
"120 4.333 OFFCURVE",
"120 33 CURVE SMOOTH",
"120 53.667 OFFCURVE",
"122.333 79.667 OFFCURVE",
"127 111 CURVE SMOOTH",
"133 154.333 OFFCURVE",
"136.333 180.333 OFFCURVE",
"137 189 CURVE",
"153.667 190.333 OFFCURVE",
"169.333 191 OFFCURVE",
"184 191 CURVE SMOOTH",
"200 191 OFFCURVE",
"214.333 190.333 OFFCURVE",
"227 189 CURVE",
"219 132.333 OFFCURVE",
"215 85.333 OFFCURVE",
"215 48 CURVE SMOOTH",
"215 12 OFFCURVE",
"225 -6 OFFCURVE",
"245 -6 CURVE SMOOTH",
"261 -6 OFFCURVE",
"276 7 OFFCURVE",
"276 23 CURVE SMOOTH",
"276 25.667 OFFCURVE",
"275 30.167 OFFCURVE",
"273 36.5 CURVE SMOOTH",
"271 42.833 OFFCURVE",
"270 47.333 OFFCURVE",
"270 50 CURVE SMOOTH",
"270 98.667 OFFCURVE",
"272 144 OFFCURVE",
"276 186 CURVE",
"305.333 184.667 OFFCURVE",
"323 183.333 OFFCURVE",
"329 182 CURVE",
"331 181.333 OFFCURVE",
"334.833 179.167 OFFCURVE",
"340.5 175.5 CURVE SMOOTH",
"346.167 171.833 OFFCURVE",
"350.333 170 OFFCURVE",
"353 170 CURVE",
"351 170 OFFCURVE",
"355.667 171.333 OFFCURVE",
"367 174 CURVE",
"367 176 OFFCURVE",
"368 180.333 OFFCURVE",
"370 187 CURVE SMOOTH",
"372 193.667 OFFCURVE",
"373 198.667 OFFCURVE",
"373 202 CURVE SMOOTH",
"373 214.667 OFFCURVE",
"366 224.333 OFFCURVE",
"352 231 CURVE SMOOTH",
"341.333 236.333 OFFCURVE",
"329 239 OFFCURVE",
"315 239 CURVE SMOOTH",
"312.333 239 OFFCURVE",
"301.333 238.667 OFFCURVE",
"282 238 CURVE",
"295.333 343.333 OFFCURVE",
"305.667 422.333 OFFCURVE",
"313 475 CURVE",
"341.667 474.333 OFFCURVE",
"358.667 473.333 OFFCURVE",
"364 472 CURVE",
"366 471.333 OFFCURVE",
"369.833 469.167 OFFCURVE",
"375.5 465.5 CURVE SMOOTH",
"381.167 461.833 OFFCURVE",
"385.333 460 OFFCURVE",
"388 460 CURVE",
"386.667 460 OFFCURVE",
"391.333 461.333 OFFCURVE",
"402 464 CURVE",
"403.333 468 OFFCURVE",
"409 485.333 OFFCURVE",
"409 492 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"233 235 LINE",
"141 230 LINE",
"155 340.667 OFFCURVE",
"165.667 423.667 OFFCURVE",
"173 479 CURVE",
"189.667 480.333 OFFCURVE",
"205.333 481 OFFCURVE",
"220 481 CURVE SMOOTH",
"236 481 OFFCURVE",
"251 480 OFFCURVE",
"265 478 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 99 values pushed */
1 115 115 64 116 0 103 101 64 55 28 23 14 12 10 5 113 107 101 95 87 81 69 64 60 55 40 18 12 0 10 12 10 64 63 63 64 111 113 8 113 114 64 63 63 64 107 88 87 88 114 113 114 90 8 12 10 10 12 33 5 53 74 5 38 38 5 30 48 4 53 57 6 63 66 6 87 72 113 63 6 50 114 6 42 109 6 88 92 3 78 3 50 1 36 1 1 60 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MIRP[11100]\011/* MoveIndirectRelPt */
SFVTL[0]\011/* SetFVectorToLine */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTL[0]\011/* SetFVectorToLine */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTL[0]\011/* SetFVectorToLine */
MIRP[11100]\011/* MoveIndirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MIRP[11100]\011/* MoveIndirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
60 115 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
115 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 429;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"431 528.333 OFFCURVE",
"411.667 538 OFFCURVE",
"373 538 CURVE SMOOTH",
"365 538 OFFCURVE",
"352.833 536.333 OFFCURVE",
"336.5 533 CURVE SMOOTH",
"320.167 529.667 OFFCURVE",
"307.667 528 OFFCURVE",
"299 528 CURVE",
"299 541.333 OFFCURVE",
"300.333 561 OFFCURVE",
"303 587 CURVE SMOOTH",
"306.333 619 OFFCURVE",
"309.667 637 OFFCURVE",
"313 641 CURVE",
"314.333 642.333 OFFCURVE",
"317.333 644.5 OFFCURVE",
"322 647.5 CURVE SMOOTH",
"326.667 650.5 OFFCURVE",
"329 653 OFFCURVE",
"329 655 CURVE SMOOTH",
"329 666 LINE",
"311.667 677.333 OFFCURVE",
"299.667 683 OFFCURVE",
"293 683 CURVE SMOOTH",
"271.667 683 OFFCURVE",
"247 668 OFFCURVE",
"247 648 CURVE SMOOTH",
"247 511 LINE",
"190.333 479 OFFCURVE",
"161 462 OFFCURVE",
"159 460 CURVE",
"127.667 436.667 OFFCURVE",
"112 409 OFFCURVE",
"112 377 CURVE SMOOTH",
"112 350.333 OFFCURVE",
"127 328 OFFCURVE",
"157 310 CURVE",
"162.333 307.333 OFFCURVE",
"189 296 OFFCURVE",
"237 276 CURVE",
"237 179 LINE",
"233 175 OFFCURVE",
"228.333 173 OFFCURVE",
"223 173 CURVE SMOOTH",
"178.333 173 OFFCURVE",
"146.667 178.667 OFFCURVE",
"128 190 CURVE",
"127.333 190.667 OFFCURVE",
"116.667 199.333 OFFCURVE",
"96 216 CURVE SMOOTH",
"82 226.667 OFFCURVE",
"70.333 232 OFFCURVE",
"61 232 CURVE SMOOTH",
"33.667 232 OFFCURVE",
"20 223.333 OFFCURVE",
"20 206 CURVE SMOOTH",
"20 185.333 OFFCURVE",
"45 168.667 OFFCURVE",
"95 156 CURVE SMOOTH",
"132.333 146 OFFCURVE",
"166.333 141 OFFCURVE",
"197 141 CURVE SMOOTH",
"221 141 OFFCURVE",
"235 139 OFFCURVE",
"239 135 CURVE",
"241 78.333 OFFCURVE",
"244 40 OFFCURVE",
"248 20 CURVE",
"252.667 3.333 OFFCURVE",
"257 -9 OFFCURVE",
"261 -17 CURVE",
"267 -17 LINE SMOOTH",
"291 -17.667 OFFCURVE",
"304 -9.333 OFFCURVE",
"306 8 CURVE",
"294 14 LINE",
"286 46.667 OFFCURVE",
"282.333 81 OFFCURVE",
"283 117 CURVE SMOOTH",
"283 148 LINE",
"311.667 158 OFFCURVE",
"340.333 168 OFFCURVE",
"369 178 CURVE",
"403.667 192.667 OFFCURVE",
"421 213.667 OFFCURVE",
"421 241 CURVE SMOOTH",
"421 265 OFFCURVE",
"403 282.667 OFFCURVE",
"367 294 CURVE",
"339 301.333 OFFCURVE",
"311 309 OFFCURVE",
"283 317 CURVE",
"283 330.333 OFFCURVE",
"286.667 382.333 OFFCURVE",
"294 473 CURVE",
"302 479 OFFCURVE",
"311.667 482 OFFCURVE",
"323 482 CURVE SMOOTH",
"327 482 OFFCURVE",
"333.167 481.5 OFFCURVE",
"341.5 480.5 CURVE SMOOTH",
"349.833 479.5 OFFCURVE",
"356 479 OFFCURVE",
"360 479 CURVE SMOOTH",
"407.333 479 OFFCURVE",
"431 489 OFFCURVE",
"431 509 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"226 328 LINE SMOOTH",
"203.333 328 OFFCURVE",
"175 367.333 OFFCURVE",
"175 390 CURVE SMOOTH",
"175 418.667 OFFCURVE",
"194 442.667 OFFCURVE",
"232 462 CURVE",
"242 462 LINE",
"242 328 LINE"
);
},
{
closed = 1;
nodes = (
"332 208.667 OFFCURVE",
"311.667 187 OFFCURVE",
"297 187 CURVE SMOOTH",
"283 187 LINE",
"283 265 LINE",
"315.667 256.333 OFFCURVE",
"332 242 OFFCURVE",
"332 222 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
1 87 87 64 88 0 84 83 82 79 74 73 72 67 36 5 73 72 67 21 0 34 5 9 80 5 13 54 53 5 60 59 76 5 49 45 44 4 83 82 18 17 4 9 2 6 70 42 7 30 57 3 24 23 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 87 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
87 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 451;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"620 192.667 OFFCURVE",
"612.667 224.667 OFFCURVE",
"598 254 CURVE SMOOTH",
"580 290 OFFCURVE",
"555.333 308 OFFCURVE",
"524 308 CURVE SMOOTH",
"517.333 308 OFFCURVE",
"512.333 306 OFFCURVE",
"509 302 CURVE",
"500 326 LINE",
"482.667 333.333 OFFCURVE",
"470.333 337 OFFCURVE",
"463 337 CURVE SMOOTH",
"432.333 337 OFFCURVE",
"407 310.667 OFFCURVE",
"387 258 CURVE SMOOTH",
"371 216 OFFCURVE",
"363 176.333 OFFCURVE",
"363 139 CURVE SMOOTH",
"363 96.333 OFFCURVE",
"373 61.667 OFFCURVE",
"393 35 CURVE SMOOTH",
"415 6.333 OFFCURVE",
"446.667 -8 OFFCURVE",
"488 -8 CURVE SMOOTH",
"532 -8 OFFCURVE",
"566 9.333 OFFCURVE",
"590 44 CURVE SMOOTH",
"610 74 OFFCURVE",
"620 112 OFFCURVE",
"620 158 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"526 659 OFFCURVE",
"502 675 OFFCURVE",
"482 675 CURVE SMOOTH",
"472 675 OFFCURVE",
"464.667 669 OFFCURVE",
"460 657 CURVE SMOOTH",
"456.667 647.667 OFFCURVE",
"453.333 638 OFFCURVE",
"450 628 CURVE",
"428.667 584 OFFCURVE",
"329.333 520.667 OFFCURVE",
"280 518 CURVE",
"276 524 LINE",
"275.333 558.667 OFFCURVE",
"265 591 OFFCURVE",
"245 621 CURVE SMOOTH",
"223 655 OFFCURVE",
"195.333 672 OFFCURVE",
"162 672 CURVE SMOOTH",
"118.667 672 OFFCURVE",
"86.333 649.667 OFFCURVE",
"65 605 CURVE SMOOTH",
"48.333 571 OFFCURVE",
"40 529.667 OFFCURVE",
"40 481 CURVE SMOOTH",
"40 385 OFFCURVE",
"78.667 337 OFFCURVE",
"156 337 CURVE SMOOTH",
"192.667 337 OFFCURVE",
"220.667 351.667 OFFCURVE",
"240 381 CURVE SMOOTH",
"252 400.333 OFFCURVE",
"262.667 431.667 OFFCURVE",
"272 475 CURVE",
"319.333 491.667 OFFCURVE",
"353.667 505 OFFCURVE",
"375 515 CURVE",
"378 509 LINE",
"342.667 429 OFFCURVE",
"307.667 349 OFFCURVE",
"273 269 CURVE SMOOTH",
"221.667 152.333 OFFCURVE",
"196 76.333 OFFCURVE",
"196 41 CURVE",
"196 41.667 OFFCURVE",
"196.333 30.667 OFFCURVE",
"197 8 CURVE",
"207.667 -2.667 OFFCURVE",
"216.333 -8 OFFCURVE",
"223 -8 CURVE SMOOTH",
"233 -8 OFFCURVE",
"238 -3.333 OFFCURVE",
"238 6 CURVE SMOOTH",
"238 8.667 OFFCURVE",
"235.833 11.833 OFFCURVE",
"231.5 15.5 CURVE SMOOTH",
"227.167 19.167 OFFCURVE",
"225 22.333 OFFCURVE",
"225 25 CURVE SMOOTH",
"225 31 OFFCURVE",
"236 64.667 OFFCURVE",
"258 126 CURVE SMOOTH",
"276.667 179.333 OFFCURVE",
"290.333 216.333 OFFCURVE",
"299 237 CURVE SMOOTH",
"320.333 289.667 OFFCURVE",
"354.333 360.333 OFFCURVE",
"401 449 CURVE SMOOTH",
"459 558.333 OFFCURVE",
"499 618.333 OFFCURVE",
"521 629 CURVE",
"524.333 632.333 OFFCURVE",
"526 635.667 OFFCURVE",
"526 639 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 514.667 OFFCURVE",
"235.667 509 OFFCURVE",
"225 509 CURVE SMOOTH",
"177 509 OFFCURVE",
"131 537.333 OFFCURVE",
"131 584 CURVE SMOOTH",
"131 610.667 OFFCURVE",
"146 634 OFFCURVE",
"170 634 CURVE SMOOTH",
"189.333 634 OFFCURVE",
"206.333 620.667 OFFCURVE",
"221 594 CURVE SMOOTH",
"234.333 570 OFFCURVE",
"241 547.333 OFFCURVE",
"241 526 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"579 126.667 OFFCURVE",
"571.667 97.667 OFFCURVE",
"557 71 CURVE SMOOTH",
"539 39 OFFCURVE",
"515.667 23 OFFCURVE",
"487 23 CURVE SMOOTH",
"459 23 OFFCURVE",
"437.667 36.667 OFFCURVE",
"423 64 CURVE SMOOTH",
"410.333 86 OFFCURVE",
"404 112 OFFCURVE",
"404 142 CURVE SMOOTH",
"404 168 OFFCURVE",
"411 197.667 OFFCURVE",
"425 231 CURVE SMOOTH",
"441.667 268.333 OFFCURVE",
"460 292 OFFCURVE",
"480 302 CURVE",
"491 302 LINE",
"489.667 283.333 OFFCURVE",
"511.667 278.667 OFFCURVE",
"529 272 CURVE",
"562.333 252.667 OFFCURVE",
"579 214.667 OFFCURVE",
"579 158 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"231.667 455 OFFCURVE",
"230 448.667 OFFCURVE",
"226 444 CURVE",
"222 424.667 OFFCURVE",
"214 407.667 OFFCURVE",
"202 393 CURVE SMOOTH",
"188 376.333 OFFCURVE",
"171.667 368 OFFCURVE",
"153 368 CURVE SMOOTH",
"105 368 OFFCURVE",
"81 410.333 OFFCURVE",
"81 495 CURVE SMOOTH",
"81 504.333 OFFCURVE",
"86.667 526.667 OFFCURVE",
"98 562 CURVE",
"117.333 504 OFFCURVE",
"161.667 474.667 OFFCURVE",
"231 474 CURVE",
"231 463 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
1 115 115 64 116 0 105 90 89 62 51 45 103 102 72 44 40 21 31 4 38 79 5 53 8 4 94 34 4 38 107 4 53 84 4 0 15 19 103 17 6 4 98 7 4 12 7 109 76 7 57 103 7 82 69 3 57 3 36 4 1 1 53 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
53 115 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
115 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 640;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"595 14 LINE",
"587.667 16.667 OFFCURVE",
"583 18 OFFCURVE",
"581 18 CURVE SMOOTH",
"575.667 18 OFFCURVE",
"568.333 15.833 OFFCURVE",
"559 11.5 CURVE SMOOTH",
"549.667 7.167 OFFCURVE",
"542.667 5 OFFCURVE",
"538 5 CURVE SMOOTH",
"507.333 5 OFFCURVE",
"458 32.667 OFFCURVE",
"442 58 CURVE",
"533.333 111.333 OFFCURVE",
"579 160.333 OFFCURVE",
"579 205 CURVE SMOOTH",
"579 240.333 OFFCURVE",
"510 258 OFFCURVE",
"372 258 CURVE SMOOTH",
"344 258 OFFCURVE",
"330 248.333 OFFCURVE",
"330 229 CURVE SMOOTH",
"330 221 OFFCURVE",
"334.667 214.667 OFFCURVE",
"344 210 CURVE",
"360 218.667 OFFCURVE",
"376.667 223 OFFCURVE",
"394 223 CURVE SMOOTH",
"411.333 223 OFFCURVE",
"433.333 218.667 OFFCURVE",
"460 210 CURVE SMOOTH",
"492.667 200 OFFCURVE",
"509 188.667 OFFCURVE",
"509 176 CURVE SMOOTH",
"509 156 OFFCURVE",
"419.667 92 OFFCURVE",
"397 92 CURVE SMOOTH",
"369 92 OFFCURVE",
"207.667 255.333 OFFCURVE",
"205 286 CURVE",
"309 392.667 OFFCURVE",
"366.333 461.333 OFFCURVE",
"377 492 CURVE SMOOTH",
"381.667 506.667 OFFCURVE",
"384 524.333 OFFCURVE",
"384 545 CURVE SMOOTH",
"384 621 OFFCURVE",
"326 676 OFFCURVE",
"250 676 CURVE SMOOTH",
"142 676 OFFCURVE",
"74 597.333 OFFCURVE",
"74 488 CURVE SMOOTH",
"74 454 OFFCURVE",
"80 420.667 OFFCURVE",
"92 388 CURVE SMOOTH",
"98 372.667 OFFCURVE",
"112.333 342 OFFCURVE",
"135 296 CURVE",
"126.333 285.333 OFFCURVE",
"119.333 277.333 OFFCURVE",
"114 272 CURVE",
"51.333 202.667 OFFCURVE",
"20 146.667 OFFCURVE",
"20 104 CURVE SMOOTH",
"20 60.667 OFFCURVE",
"36.667 27.667 OFFCURVE",
"70 5 CURVE SMOOTH",
"98 -13.667 OFFCURVE",
"135 -23 OFFCURVE",
"181 -23 CURVE SMOOTH",
"240.333 -23 OFFCURVE",
"309.667 -6 OFFCURVE",
"389 28 CURVE",
"393 27.333 OFFCURVE",
"411 16.667 OFFCURVE",
"443 -4 CURVE SMOOTH",
"473 -23.333 OFFCURVE",
"502 -33 OFFCURVE",
"530 -33 CURVE SMOOTH",
"541.333 -33 OFFCURVE",
"554.333 -29.667 OFFCURVE",
"569 -23 CURVE SMOOTH",
"586.333 -15 OFFCURVE",
"595 -6.333 OFFCURVE",
"595 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 529.333 OFFCURVE",
"314 486 OFFCURVE",
"276 436 CURVE SMOOTH",
"244 394.667 OFFCURVE",
"209.333 360.667 OFFCURVE",
"172 334 CURVE",
"159.333 348 OFFCURVE",
"147.667 373 OFFCURVE",
"137 409 CURVE SMOOTH",
"127 442.333 OFFCURVE",
"122 469.667 OFFCURVE",
"122 491 CURVE SMOOTH",
"122 565.667 OFFCURVE",
"184.667 641 OFFCURVE",
"258 641 CURVE SMOOTH",
"302 641 OFFCURVE",
"333 610 OFFCURVE",
"333 566 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"336 57.333 OFFCURVE",
"310 46.667 OFFCURVE",
"262 36 CURVE SMOOTH",
"220 26 OFFCURVE",
"189.333 21 OFFCURVE",
"170 21 CURVE SMOOTH",
"142 21 OFFCURVE",
"121.667 24.333 OFFCURVE",
"109 31 CURVE",
"90.333 39.667 OFFCURVE",
"81 56.667 OFFCURVE",
"81 82 CURVE SMOOTH",
"81 132 OFFCURVE",
"109 187.333 OFFCURVE",
"165 248 CURVE",
"221 178 OFFCURVE",
"279.333 118 OFFCURVE",
"340 68 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
1 87 87 64 88 0 77 71 58 44 35 8 75 60 52 32 18 0 46 5 50 38 5 50 79 5 14 67 4 22 61 4 28 55 7 4 48 7 42 64 7 25 83 6 10 25 3 10 1 4 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 87 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
87 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 615;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"91 680.333 OFFCURVE",
"76.667 686 OFFCURVE",
"48 686 CURVE SMOOTH",
"43.333 686 OFFCURVE",
"39.667 685.333 OFFCURVE",
"37 684 CURVE",
"32.333 682.667 OFFCURVE",
"28 671.667 OFFCURVE",
"24 651 CURVE SMOOTH",
"21.333 634.333 OFFCURVE",
"20 621 OFFCURVE",
"20 611 CURVE SMOOTH",
"20 603 OFFCURVE",
"20.667 560.667 OFFCURVE",
"22 484 CURVE",
"25.333 477.333 OFFCURVE",
"33 474 OFFCURVE",
"45 474 CURVE SMOOTH",
"64.333 474 OFFCURVE",
"74 486.667 OFFCURVE",
"74 512 CURVE SMOOTH",
"74 520.667 OFFCURVE",
"73.5 533.5 OFFCURVE",
"72.5 550.5 CURVE SMOOTH",
"71.5 567.5 OFFCURVE",
"71 580.333 OFFCURVE",
"71 589 CURVE SMOOTH",
"71 613.667 OFFCURVE",
"73 631.667 OFFCURVE",
"77 643 CURVE SMOOTH",
"77.667 645 OFFCURVE",
"80.167 649.5 OFFCURVE",
"84.5 656.5 CURVE SMOOTH",
"88.833 663.5 OFFCURVE",
"91 667.667 OFFCURVE",
"91 669 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
1 22 22 64 23 0 14 5 0 8 4 12 10 20 3 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 22 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
22 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 111;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"145 720.667 OFFCURVE",
"135 737 OFFCURVE",
"115 737 CURVE SMOOTH",
"111 737 OFFCURVE",
"107.667 735.333 OFFCURVE",
"105 732 CURVE",
"80.333 706 OFFCURVE",
"59.333 644.667 OFFCURVE",
"42 548 CURVE SMOOTH",
"27.333 468 OFFCURVE",
"20 400.333 OFFCURVE",
"20 345 CURVE SMOOTH",
"20 227.667 OFFCURVE",
"34.333 121 OFFCURVE",
"63 25 CURVE SMOOTH",
"77.667 -25.667 OFFCURVE",
"91 -51 OFFCURVE",
"103 -51 CURVE SMOOTH",
"127 -51 OFFCURVE",
"139 -41.667 OFFCURVE",
"139 -23 CURVE SMOOTH",
"139 -21 OFFCURVE",
"133.667 -7.667 OFFCURVE",
"123 17 CURVE SMOOTH",
"112.333 41.667 OFFCURVE",
"106.333 56.333 OFFCURVE",
"105 61 CURVE SMOOTH",
"83.667 128.333 OFFCURVE",
"73 237 OFFCURVE",
"73 387 CURVE SMOOTH",
"73 434.333 OFFCURVE",
"76.667 489 OFFCURVE",
"84 551 CURVE SMOOTH",
"94.667 639.667 OFFCURVE",
"109.333 684 OFFCURVE",
"128 684 CURVE SMOOTH",
"129.333 684 OFFCURVE",
"130.5 683.5 OFFCURVE",
"131.5 682.5 CURVE SMOOTH",
"132.5 681.5 OFFCURVE",
"134 681 OFFCURVE",
"136 681 CURVE SMOOTH",
"140 681 OFFCURVE",
"143 683.333 OFFCURVE",
"145 688 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
1 28 28 64 29 0 2 14 0 9 4 20 5 6 26 26 16 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 28 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
28 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 195;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"186 394 OFFCURVE",
"180 463 OFFCURVE",
"168 535 CURVE SMOOTH",
"152 628.333 OFFCURVE",
"129.667 691 OFFCURVE",
"101 723 CURVE",
"97.667 724.333 OFFCURVE",
"92.333 725 OFFCURVE",
"85 725 CURVE SMOOTH",
"71.667 725 OFFCURVE",
"50 710.333 OFFCURVE",
"50 697 CURVE SMOOTH",
"50 680 LINE",
"60 677.333 OFFCURVE",
"68.333 672 OFFCURVE",
"75 664 CURVE SMOOTH",
"93.667 640.667 OFFCURVE",
"107.667 581 OFFCURVE",
"117 485 CURVE SMOOTH",
"124.333 417 OFFCURVE",
"128 350.667 OFFCURVE",
"128 286 CURVE SMOOTH",
"128 116 OFFCURVE",
"102 22.333 OFFCURVE",
"50 5 CURVE",
"50 -13 LINE",
"75.333 -24.333 OFFCURVE",
"91 -30 OFFCURVE",
"97 -30 CURVE SMOOTH",
"108.333 -30 OFFCURVE",
"121 -12.333 OFFCURVE",
"135 23 CURVE SMOOTH",
"169 109.667 OFFCURVE",
"186 211.333 OFFCURVE",
"186 328 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
1 25 25 64 26 0 16 15 7 6 9 5 0 19 4 1 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 25 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
25 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 206;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"278 657 OFFCURVE",
"267.667 691 OFFCURVE",
"249 691 CURVE SMOOTH",
"245 691 OFFCURVE",
"228 680.667 OFFCURVE",
"198 660 CURVE SMOOTH",
"180 647.333 OFFCURVE",
"162 634.667 OFFCURVE",
"144 622 CURVE",
"134.667 642.667 OFFCURVE",
"125 663 OFFCURVE",
"115 683 CURVE",
"101.667 713 OFFCURVE",
"89 728 OFFCURVE",
"77 728 CURVE SMOOTH",
"62.333 728 OFFCURVE",
"35 706.667 OFFCURVE",
"35 688 CURVE SMOOTH",
"35 684.667 OFFCURVE",
"40.667 675.333 OFFCURVE",
"52 660 CURVE SMOOTH",
"65.333 641.333 OFFCURVE",
"72 631.333 OFFCURVE",
"72 630 CURVE",
"39.333 630 OFFCURVE",
"18.667 629.333 OFFCURVE",
"10 628 CURVE",
"-8.667 622 OFFCURVE",
"-21.333 606.667 OFFCURVE",
"-28 582 CURVE",
"-21.333 575.333 OFFCURVE",
"-6.333 570.667 OFFCURVE",
"17 568 CURVE SMOOTH",
"40.333 565.333 OFFCURVE",
"54.667 560 OFFCURVE",
"60 552 CURVE",
"23.333 516 OFFCURVE",
"5 496 OFFCURVE",
"5 492 CURVE SMOOTH",
"5 473 LINE",
"17.667 465.667 OFFCURVE",
"27.667 462 OFFCURVE",
"35 462 CURVE SMOOTH",
"47 462 OFFCURVE",
"61.333 469.333 OFFCURVE",
"78 484 CURVE SMOOTH",
"90.667 495.333 OFFCURVE",
"103 506.333 OFFCURVE",
"115 517 CURVE",
"125 502.333 OFFCURVE",
"134.667 487.333 OFFCURVE",
"144 472 CURVE SMOOTH",
"157.333 450.667 OFFCURVE",
"169.333 440 OFFCURVE",
"180 440 CURVE SMOOTH",
"182.667 440 OFFCURVE",
"193.667 444.667 OFFCURVE",
"213 454 CURVE",
"213 470 LINE",
"195.667 492 OFFCURVE",
"187 507 OFFCURVE",
"187 515 CURVE",
"187.667 518.333 OFFCURVE",
"188.667 521 OFFCURVE",
"190 523 CURVE",
"204.667 509.667 OFFCURVE",
"224.333 503 OFFCURVE",
"249 503 CURVE SMOOTH",
"256.333 503 OFFCURVE",
"261.333 505 OFFCURVE",
"264 509 CURVE",
"264 511.667 OFFCURVE",
"265 515.667 OFFCURVE",
"267 521 CURVE SMOOTH",
"269 526.333 OFFCURVE",
"270 530.667 OFFCURVE",
"270 534 CURVE SMOOTH",
"270 546 OFFCURVE",
"263 556.333 OFFCURVE",
"249 565 CURVE SMOOTH",
"227 579.667 OFFCURVE",
"215.667 587.667 OFFCURVE",
"215 589 CURVE",
"243 606.333 OFFCURVE",
"264 619.333 OFFCURVE",
"278 628 CURVE",
"278 631.333 OFFCURVE",
"278 633 OFFCURVE",
"278 633 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
57 13 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 13 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 257;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"500 364.667 OFFCURVE",
"497.667 368.333 OFFCURVE",
"493 371 CURVE",
"467.667 365 OFFCURVE",
"447.333 362 OFFCURVE",
"432 362 CURVE SMOOTH",
"278 362 LINE",
"278 443 LINE SMOOTH",
"278 455 OFFCURVE",
"280.667 473 OFFCURVE",
"286 497 CURVE SMOOTH",
"291.333 521 OFFCURVE",
"294 539 OFFCURVE",
"294 551 CURVE SMOOTH",
"294 564.333 OFFCURVE",
"266.667 575 OFFCURVE",
"252 575 CURVE SMOOTH",
"244 575 OFFCURVE",
"235.667 572.667 OFFCURVE",
"227 568 CURVE",
"227 362 LINE",
"152 362 LINE SMOOTH",
"140 362 OFFCURVE",
"122.333 363.333 OFFCURVE",
"99 366 CURVE SMOOTH",
"75.667 368.667 OFFCURVE",
"58 370 OFFCURVE",
"46 370 CURVE SMOOTH",
"32.667 370 OFFCURVE",
"20 350.667 OFFCURVE",
"20 336 CURVE SMOOTH",
"20 328 OFFCURVE",
"22.333 319.667 OFFCURVE",
"27 311 CURVE",
"227 311 LINE",
"227 141 LINE SMOOTH",
"227 109.667 OFFCURVE",
"243.333 94 OFFCURVE",
"276 94 CURVE SMOOTH",
"280 94 OFFCURVE",
"283.667 96.667 OFFCURVE",
"287 102 CURVE",
"281 127.333 OFFCURVE",
"278 147.333 OFFCURVE",
"278 162 CURVE SMOOTH",
"278 311 LINE",
"454 311 LINE SMOOTH",
"484.667 311 OFFCURVE",
"500 327.333 OFFCURVE",
"500 360 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
1 36 36 64 37 0 6 14 13 10 0 5 10 27 5 10 31 30 4 3 3 4 22 21 11 3 10 34 17 6 2 12 11 3 3 2 6 32 31 21 3 20 24 8 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 36 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
36 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 520;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"30 30.333 OFFCURVE",
"42.333 24.667 OFFCURVE",
"65 10 CURVE SMOOTH",
"87.667 -4.667 OFFCURVE",
"100.667 -39.333 OFFCURVE",
"90 -66 CURVE SMOOTH",
"83.333 -82 OFFCURVE",
"73.833 -94.333 OFFCURVE",
"61.5 -103 CURVE SMOOTH",
"49.167 -111.667 OFFCURVE",
"37.333 -121 OFFCURVE",
"26 -131 CURVE SMOOTH",
"7.333 -147 OFFCURVE",
"10.667 -170 OFFCURVE",
"32 -170 CURVE SMOOTH",
"58.667 -170 OFFCURVE",
"86.333 -144.667 OFFCURVE",
"109 -106 CURVE SMOOTH",
"134.333 -63.333 OFFCURVE",
"133.333 -27 OFFCURVE",
"124 29 CURVE SMOOTH",
"117.333 65 OFFCURVE",
"97 79 OFFCURVE",
"73 79 CURVE SMOOTH",
"37 79 OFFCURVE",
"30 61 OFFCURVE",
"30 45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 170;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"264 258 LINE",
"258 259.333 OFFCURVE",
"254 264.333 OFFCURVE",
"252 273 CURVE SMOOTH",
"249.333 284.333 OFFCURVE",
"247.667 290.667 OFFCURVE",
"247 292 CURVE",
"241 301.333 OFFCURVE",
"225.333 306 OFFCURVE",
"200 306 CURVE SMOOTH",
"186.667 306 OFFCURVE",
"166.667 304.833 OFFCURVE",
"140 302.5 CURVE SMOOTH",
"113.333 300.167 OFFCURVE",
"93.333 299 OFFCURVE",
"80 299 CURVE SMOOTH",
"73.333 299 OFFCURVE",
"64.833 301.167 OFFCURVE",
"54.5 305.5 CURVE SMOOTH",
"44.167 309.833 OFFCURVE",
"36.667 312 OFFCURVE",
"32 312 CURVE SMOOTH",
"28 312 OFFCURVE",
"24 309.333 OFFCURVE",
"20 304 CURVE",
"29.333 269.333 OFFCURVE",
"67 252 OFFCURVE",
"133 252 CURVE SMOOTH",
"140.333 252 OFFCURVE",
"151.833 252.667 OFFCURVE",
"167.5 254 CURVE SMOOTH",
"183.167 255.333 OFFCURVE",
"195 256 OFFCURVE",
"203 256 CURVE SMOOTH",
"209 256 OFFCURVE",
"217.833 253.833 OFFCURVE",
"229.5 249.5 CURVE SMOOTH",
"241.167 245.167 OFFCURVE",
"250 243 OFFCURVE",
"256 243 CURVE SMOOTH",
"261.333 243 OFFCURVE",
"264 244.333 OFFCURVE",
"264 247 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
1 25 25 64 26 0 24 10 0 5 6 18 15 6 8 12 2 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 25 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
25 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 284;
}
);
note = hyphen;
unicode = "002D,2010";
},
{
glyphname = period;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113 46.333 OFFCURVE",
"81.667 63 OFFCURVE",
"55 63 CURVE SMOOTH",
"31.667 63 OFFCURVE",
"20 51.667 OFFCURVE",
"20 29 CURVE SMOOTH",
"20 7.667 OFFCURVE",
"40.333 -11 OFFCURVE",
"63 -11 CURVE SMOOTH",
"73.667 -11 OFFCURVE",
"84 -8.333 OFFCURVE",
"94 -3 CURVE SMOOTH",
"106.667 3.667 OFFCURVE",
"113 11.667 OFFCURVE",
"113 21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 12 12 64 13 0 0 5 7 9 4 1 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 12 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
12 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 133;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"370.333 685.333 OFFCURVE",
"361.667 690 OFFCURVE",
"353 690 CURVE SMOOTH",
"331.667 690 OFFCURVE",
"305 674.667 OFFCURVE",
"297 656 CURVE",
"291 634 OFFCURVE",
"287.667 617 OFFCURVE",
"287 605 CURVE",
"281.667 583.667 OFFCURVE",
"271.667 554.667 OFFCURVE",
"257 518 CURVE SMOOTH",
"225 436.667 OFFCURVE",
"192.667 355.333 OFFCURVE",
"160 274 CURVE SMOOTH",
"120 178 OFFCURVE",
"81.333 100 OFFCURVE",
"44 40 CURVE",
"34.667 28 OFFCURVE",
"20 12 OFFCURVE",
"20 0 CURVE SMOOTH",
"20 -10.667 OFFCURVE",
"26.333 -16 OFFCURVE",
"39 -16 CURVE SMOOTH",
"68.333 -16 OFFCURVE",
"108.333 44.333 OFFCURVE",
"159 165 CURVE SMOOTH",
"346 614 LINE",
"360 642 OFFCURVE",
"371 662.667 OFFCURVE",
"379 676 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 23 23 64 24 0 7 0 21 3 5 1 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 23 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
23 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 399;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"535 418.667 OFFCURVE",
"523.333 475.667 OFFCURVE",
"500 527 CURVE SMOOTH",
"472.667 588.333 OFFCURVE",
"433 629.333 OFFCURVE",
"381 650 CURVE SMOOTH",
"347 664 OFFCURVE",
"324.667 671 OFFCURVE",
"314 671 CURVE SMOOTH",
"279.333 671 OFFCURVE",
"249.667 666.333 OFFCURVE",
"225 657 CURVE SMOOTH",
"165 635.667 OFFCURVE",
"114.667 585 OFFCURVE",
"74 505 CURVE SMOOTH",
"38 433 OFFCURVE",
"20 362 OFFCURVE",
"20 292 CURVE SMOOTH",
"20 210 OFFCURVE",
"40.667 140.667 OFFCURVE",
"82 84 CURVE SMOOTH",
"128 20.667 OFFCURVE",
"190.667 -11 OFFCURVE",
"270 -11 CURVE SMOOTH",
"353.333 -11 OFFCURVE",
"420 31 OFFCURVE",
"470 115 CURVE SMOOTH",
"513.333 186.333 OFFCURVE",
"535 266.667 OFFCURVE",
"535 356 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"486 282 OFFCURVE",
"471 213.667 OFFCURVE",
"441 155 CURVE SMOOTH",
"403.667 81 OFFCURVE",
"349.667 44 OFFCURVE",
"279 44 CURVE SMOOTH",
"183 44 OFFCURVE",
"99 112.667 OFFCURVE",
"79 206 CURVE SMOOTH",
"74.333 226.667 OFFCURVE",
"72 254.333 OFFCURVE",
"72 289 CURVE SMOOTH",
"72 352.333 OFFCURVE",
"84.333 412 OFFCURVE",
"109 468 CURVE SMOOTH",
"136.333 528.667 OFFCURVE",
"175 575 OFFCURVE",
"225 607 CURVE SMOOTH",
"249.667 623 OFFCURVE",
"273.667 631 OFFCURVE",
"297 631 CURVE SMOOTH",
"363.667 631 OFFCURVE",
"413.667 601 OFFCURVE",
"447 541 CURVE SMOOTH",
"473 493 OFFCURVE",
"486 432.667 OFFCURVE",
"486 360 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 39 39 64 40 0 30 4 8 20 4 0 35 6 4 24 7 14 14 3 4 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 39 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
39 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 555;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 626.333 OFFCURVE",
"106 676 OFFCURVE",
"86 676 CURVE SMOOTH",
"78.667 676 OFFCURVE",
"69 652 OFFCURVE",
"57 604 CURVE SMOOTH",
"45.667 559.333 OFFCURVE",
"40 529.333 OFFCURVE",
"40 514 CURVE SMOOTH",
"40 490 LINE",
"47.333 484.667 OFFCURVE",
"52.667 480.667 OFFCURVE",
"56 478 CURVE",
"56 29 LINE SMOOTH",
"56 18.333 OFFCURVE",
"58.667 7.333 OFFCURVE",
"64 -4 CURVE",
"80.667 -12.667 OFFCURVE",
"94.333 -17 OFFCURVE",
"105 -17 CURVE SMOOTH",
"116.333 -17 OFFCURVE",
"122 -11.333 OFFCURVE",
"122 0 CURVE SMOOTH",
"122 3.333 OFFCURVE",
"119.667 7.667 OFFCURVE",
"115 13 CURVE SMOOTH",
"110.333 18.333 OFFCURVE",
"107.667 21.667 OFFCURVE",
"107 23 CURVE",
"100.333 35 OFFCURVE",
"97 69.333 OFFCURVE",
"97 126 CURVE SMOOTH",
"97 333 LINE SMOOTH",
"97 378.333 OFFCURVE",
"104.667 445.667 OFFCURVE",
"120 535 CURVE SMOOTH",
"128 579.667 OFFCURVE",
"132 603 OFFCURVE",
"132 605 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
1 27 27 64 28 0 20 19 10 0 5 4 4 17 16 24 3 12 1 1 19 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
19 27 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
27 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 172;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"502 59.333 OFFCURVE",
"499.333 69.667 OFFCURVE",
"494 79 CURVE",
"486.667 89.667 OFFCURVE",
"477.667 94.667 OFFCURVE",
"467 94 CURVE",
"124 40 LINE",
"119 39 LINE",
"111 39 OFFCURVE",
"105.333 42 OFFCURVE",
"102 48 CURVE",
"106.667 60 OFFCURVE",
"115 72.667 OFFCURVE",
"127 86 CURVE",
"133 92 OFFCURVE",
"144.333 102.667 OFFCURVE",
"161 118 CURVE SMOOTH",
"240.333 188 OFFCURVE",
"299 247 OFFCURVE",
"337 295 CURVE SMOOTH",
"401 375 OFFCURVE",
"433 448.333 OFFCURVE",
"433 515 CURVE SMOOTH",
"433 599 OFFCURVE",
"359.333 674 OFFCURVE",
"274 674 CURVE SMOOTH",
"238.667 674 OFFCURVE",
"205.667 666 OFFCURVE",
"175 650 CURVE SMOOTH",
"139 632 OFFCURVE",
"105.333 602.667 OFFCURVE",
"74 562 CURVE SMOOTH",
"40 518 OFFCURVE",
"23 477.333 OFFCURVE",
"23 440 CURVE SMOOTH",
"23 432 OFFCURVE",
"51.667 409 OFFCURVE",
"61 409 CURVE SMOOTH",
"73 409 OFFCURVE",
"81.667 424 OFFCURVE",
"87 454 CURVE SMOOTH",
"90.333 474 OFFCURVE",
"93.333 494 OFFCURVE",
"96 514 CURVE",
"114.667 575.333 OFFCURVE",
"200.667 639 OFFCURVE",
"266 639 CURVE SMOOTH",
"328.667 639 OFFCURVE",
"376 593.333 OFFCURVE",
"376 532 CURVE SMOOTH",
"376 473.333 OFFCURVE",
"346.667 401 OFFCURVE",
"288 315 CURVE SMOOTH",
"240.667 245 OFFCURVE",
"188 184 OFFCURVE",
"130 132 CURVE SMOOTH",
"88.667 94.667 OFFCURVE",
"57.667 67 OFFCURVE",
"37 49 CURVE",
"25.667 36.333 OFFCURVE",
"20 24.333 OFFCURVE",
"20 13 CURVE SMOOTH",
"20 -11 OFFCURVE",
"33 -23 OFFCURVE",
"59 -23 CURVE SMOOTH",
"63.667 -23 OFFCURVE",
"75 -20 OFFCURVE",
"93 -14 CURVE SMOOTH",
"115.667 -6.667 OFFCURVE",
"127.667 -2.667 OFFCURVE",
"129 -2 CURVE",
"226.333 24 OFFCURVE",
"321.333 37 OFFCURVE",
"414 37 CURVE SMOOTH",
"436 37 OFFCURVE",
"455.333 34.333 OFFCURVE",
"472 29 CURVE SMOOTH",
"483.333 25.667 OFFCURVE",
"488.667 24 OFFCURVE",
"488 24 CURVE",
"497.333 24 OFFCURVE",
"502 32 OFFCURVE",
"502 48 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 60 60 64 61 0 54 32 6 52 35 14 0 22 5 44 56 6 2 25 7 41 41 3 12 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 522;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"550 272 OFFCURVE",
"534 308.333 OFFCURVE",
"502 335 CURVE SMOOTH",
"480.667 352.333 OFFCURVE",
"450.667 366.333 OFFCURVE",
"412 377 CURVE SMOOTH",
"376.667 385.667 OFFCURVE",
"358.333 391.333 OFFCURVE",
"357 394 CURVE",
"386.333 417.333 OFFCURVE",
"410.667 444.333 OFFCURVE",
"430 475 CURVE SMOOTH",
"453.333 510.333 OFFCURVE",
"465 544 OFFCURVE",
"465 576 CURVE SMOOTH",
"465 650.667 OFFCURVE",
"408.667 693 OFFCURVE",
"334 693 CURVE SMOOTH",
"289.333 693 OFFCURVE",
"239.667 677.667 OFFCURVE",
"185 647 CURVE SMOOTH",
"133 617.667 OFFCURVE",
"93 584.333 OFFCURVE",
"65 547 CURVE SMOOTH",
"49.667 526.333 OFFCURVE",
"42 510.333 OFFCURVE",
"42 499 CURVE SMOOTH",
"42 488.333 OFFCURVE",
"62 475 OFFCURVE",
"74 475 CURVE SMOOTH",
"81.333 475 OFFCURVE",
"94.667 484 OFFCURVE",
"114 502 CURVE",
"126.667 514.667 OFFCURVE",
"139 527 OFFCURVE",
"151 539 CURVE",
"148.333 551 OFFCURVE",
"149 559.333 OFFCURVE",
"153 564 CURVE SMOOTH",
"186.333 604 OFFCURVE",
"282 649 OFFCURVE",
"334 649 CURVE SMOOTH",
"380.667 649 OFFCURVE",
"411 616.667 OFFCURVE",
"411 570 CURVE SMOOTH",
"411 534.667 OFFCURVE",
"395.667 498.667 OFFCURVE",
"365 462 CURVE SMOOTH",
"332.333 423.333 OFFCURVE",
"305 399.667 OFFCURVE",
"283 391 CURVE SMOOTH",
"273 387 OFFCURVE",
"245 383 OFFCURVE",
"199 379 CURVE SMOOTH",
"160.333 376.333 OFFCURVE",
"135.5 369 OFFCURVE",
"124.5 357 CURVE SMOOTH",
"113.5 345 OFFCURVE",
"108 334 OFFCURVE",
"108 324 CURVE SMOOTH",
"108 313.333 OFFCURVE",
"119.667 308 OFFCURVE",
"143 308 CURVE SMOOTH",
"167.667 308 OFFCURVE",
"200 315.833 OFFCURVE",
"240 331.5 CURVE SMOOTH",
"280 347.167 OFFCURVE",
"304 355 OFFCURVE",
"312 355 CURVE SMOOTH",
"352 355 OFFCURVE",
"390.667 343 OFFCURVE",
"428 319 CURVE SMOOTH",
"469.333 291 OFFCURVE",
"490 258 OFFCURVE",
"490 220 CURVE SMOOTH",
"490 199.333 OFFCURVE",
"482 174.667 OFFCURVE",
"466 146 CURVE SMOOTH",
"443.333 107.333 OFFCURVE",
"410 77.333 OFFCURVE",
"366 56 CURVE SMOOTH",
"325.333 36.667 OFFCURVE",
"281 27 OFFCURVE",
"233 27 CURVE SMOOTH",
"162.333 27 OFFCURVE",
"116.667 42.667 OFFCURVE",
"96 74 CURVE",
"90 86.667 OFFCURVE",
"84 99.333 OFFCURVE",
"78 112 CURVE",
"68.667 129.333 OFFCURVE",
"58.667 138 OFFCURVE",
"48 138 CURVE SMOOTH",
"36 138 OFFCURVE",
"20 123 OFFCURVE",
"20 111 CURVE SMOOTH",
"20 91.667 OFFCURVE",
"34 70.667 OFFCURVE",
"62 48 CURVE SMOOTH",
"86.667 28 OFFCURVE",
"110 15 OFFCURVE",
"132 9 CURVE SMOOTH",
"175.333 -1.667 OFFCURVE",
"219.333 -7 OFFCURVE",
"264 -7 CURVE SMOOTH",
"368.667 -7 OFFCURVE",
"451.333 33 OFFCURVE",
"512 113 CURVE SMOOTH",
"537.333 145.667 OFFCURVE",
"550 183.333 OFFCURVE",
"550 226 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 77 77 64 78 0 55 32 29 13 71 58 34 10 25 5 0 43 4 67 19 7 4 46 6 64 64 3 4 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 570;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"616 203 LINE",
"603.333 221.667 OFFCURVE",
"571.333 231 OFFCURVE",
"520 231 CURVE SMOOTH",
"506.667 231 OFFCURVE",
"473 230.333 OFFCURVE",
"461 229 CURVE",
"455 233.667 OFFCURVE",
"452 239.667 OFFCURVE",
"452 247 CURVE SMOOTH",
"452 267 OFFCURVE",
"457.667 314.667 OFFCURVE",
"469 390 CURVE SMOOTH",
"484.333 492 OFFCURVE",
"493.667 550.333 OFFCURVE",
"497 565 CURVE",
"497.667 567 OFFCURVE",
"501.333 579 OFFCURVE",
"508 601 CURVE SMOOTH",
"513.333 617.667 OFFCURVE",
"516 628.667 OFFCURVE",
"516 634 CURVE SMOOTH",
"516 654 OFFCURVE",
"496 671 OFFCURVE",
"476 671 CURVE SMOOTH",
"458 671 OFFCURVE",
"440.333 660.667 OFFCURVE",
"423 640 CURVE SMOOTH",
"409.667 623.333 OFFCURVE",
"396.333 606.333 OFFCURVE",
"383 589 CURVE",
"289 499.667 OFFCURVE",
"217.667 433.667 OFFCURVE",
"169 391 CURVE SMOOTH",
"139.667 365 OFFCURVE",
"110.333 339.333 OFFCURVE",
"81 314 CURVE",
"40.333 275.333 OFFCURVE",
"20 245.667 OFFCURVE",
"20 225 CURVE SMOOTH",
"20 209 OFFCURVE",
"33.667 192.667 OFFCURVE",
"61 176 CURVE SMOOTH",
"86.333 161.333 OFFCURVE",
"107.667 154 OFFCURVE",
"125 154 CURVE SMOOTH",
"155 154 OFFCURVE",
"199.5 158.167 OFFCURVE",
"258.5 166.5 CURVE SMOOTH",
"317.5 174.833 OFFCURVE",
"362 179 OFFCURVE",
"392 179 CURVE SMOOTH",
"399.333 179 OFFCURVE",
"403 167 OFFCURVE",
"403 143 CURVE SMOOTH",
"403 132.333 OFFCURVE",
"402.667 116 OFFCURVE",
"402 94 CURVE SMOOTH",
"401.333 72 OFFCURVE",
"401 55.667 OFFCURVE",
"401 45 CURVE SMOOTH",
"401 42.333 OFFCURVE",
"400.167 38.167 OFFCURVE",
"398.5 32.5 CURVE SMOOTH",
"396.833 26.833 OFFCURVE",
"396 22.667 OFFCURVE",
"396 20 CURVE SMOOTH",
"396 8 OFFCURVE",
"421.333 -23 OFFCURVE",
"432 -23 CURVE SMOOTH",
"464 -23 LINE",
"468.667 -15 OFFCURVE",
"471 -9.333 OFFCURVE",
"471 -6 CURVE SMOOTH",
"471 -3.333 OFFCURVE",
"468.667 1.667 OFFCURVE",
"464 9 CURVE SMOOTH",
"459.333 16.333 OFFCURVE",
"456.667 21 OFFCURVE",
"456 23 CURVE SMOOTH",
"449.333 43 OFFCURVE",
"446 81.333 OFFCURVE",
"446 138 CURVE SMOOTH",
"446 175.333 OFFCURVE",
"451.667 187 OFFCURVE",
"485 187 CURVE SMOOTH",
"543 187 OFFCURVE",
"584.333 184.667 OFFCURVE",
"609 180 CURVE",
"616 186 LINE"
);
},
{
closed = 1;
nodes = (
"401 227 LINE",
"130 204 LINE",
"126 204 LINE SMOOTH",
"101.333 203.333 OFFCURVE",
"89 213 OFFCURVE",
"89 233 CURVE SMOOTH",
"89 257.667 OFFCURVE",
"136.333 311 OFFCURVE",
"231 393 CURVE SMOOTH",
"310.333 462.333 OFFCURVE",
"372 510.667 OFFCURVE",
"416 538 CURVE",
"427 538 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
1 71 71 64 72 0 69 68 62 61 61 60 45 17 11 0 23 4 6 66 5 32 6 4 20 20 4 53 28 6 70 55 58 6 3 70 6 1 25 42 3 14 13 1 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 71 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
71 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 626;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"509 283.333 OFFCURVE",
"489.667 327 OFFCURVE",
"451 359 CURVE SMOOTH",
"415 388.333 OFFCURVE",
"368.667 403 OFFCURVE",
"312 403 CURVE SMOOTH",
"264.667 403 OFFCURVE",
"222.333 395.333 OFFCURVE",
"185 380 CURVE SMOOTH",
"157 368 OFFCURVE",
"141.667 362 OFFCURVE",
"139 362 CURVE",
"137 364 LINE",
"135 376.667 OFFCURVE",
"134 394 OFFCURVE",
"134 416 CURVE SMOOTH",
"134 518.667 OFFCURVE",
"141 576 OFFCURVE",
"155 588 CURVE",
"159.667 592.667 OFFCURVE",
"183.333 597.667 OFFCURVE",
"226 603 CURVE SMOOTH",
"265.333 608.333 OFFCURVE",
"291.333 611 OFFCURVE",
"304 611 CURVE SMOOTH",
"343.333 611 OFFCURVE",
"369 609.667 OFFCURVE",
"381 607 CURVE SMOOTH",
"383.667 606.333 OFFCURVE",
"389.5 604.333 OFFCURVE",
"398.5 601 CURVE SMOOTH",
"407.5 597.667 OFFCURVE",
"413.667 596 OFFCURVE",
"417 596 CURVE SMOOTH",
"426 596 LINE",
"435.333 612.667 OFFCURVE",
"440 625.333 OFFCURVE",
"440 634 CURVE SMOOTH",
"440 657.333 OFFCURVE",
"419.333 669 OFFCURVE",
"378 669 CURVE SMOOTH",
"352.667 669 OFFCURVE",
"304 664.667 OFFCURVE",
"232 656 CURVE SMOOTH",
"196 651.333 OFFCURVE",
"177 649 OFFCURVE",
"175 649 CURVE SMOOTH",
"169.667 649 OFFCURVE",
"164.167 652.167 OFFCURVE",
"158.5 658.5 CURVE SMOOTH",
"152.833 664.833 OFFCURVE",
"144.667 668 OFFCURVE",
"134 668 CURVE SMOOTH",
"126 668 OFFCURVE",
"120 667 OFFCURVE",
"116 665 CURVE",
"95.333 619 OFFCURVE",
"85 551.667 OFFCURVE",
"85 463 CURVE SMOOTH",
"85 451 OFFCURVE",
"85.333 433.333 OFFCURVE",
"86 410 CURVE SMOOTH",
"86 386.667 OFFCURVE",
"86 369.333 OFFCURVE",
"86 358 CURVE SMOOTH",
"86 350.667 OFFCURVE",
"84 340.667 OFFCURVE",
"80 328 CURVE SMOOTH",
"76 315.333 OFFCURVE",
"74 305.667 OFFCURVE",
"74 299 CURVE",
"88 290.333 OFFCURVE",
"99 286 OFFCURVE",
"107 286 CURVE SMOOTH",
"113 286 OFFCURVE",
"120.333 290 OFFCURVE",
"129 298 CURVE",
"141.667 310.667 OFFCURVE",
"148.333 317 OFFCURVE",
"149 317 CURVE",
"164.333 327.667 OFFCURVE",
"188 337 OFFCURVE",
"220 345 CURVE SMOOTH",
"250 352.333 OFFCURVE",
"276 356 OFFCURVE",
"298 356 CURVE SMOOTH",
"384.667 356 OFFCURVE",
"452 301.667 OFFCURVE",
"452 215 CURVE SMOOTH",
"452 153.667 OFFCURVE",
"428.667 104.333 OFFCURVE",
"382 67 CURVE SMOOTH",
"338.667 32.333 OFFCURVE",
"285.333 15 OFFCURVE",
"222 15 CURVE SMOOTH",
"192.667 15 OFFCURVE",
"160.667 28.167 OFFCURVE",
"126 54.5 CURVE SMOOTH",
"91.333 80.833 OFFCURVE",
"66.667 94 OFFCURVE",
"52 94 CURVE SMOOTH",
"30.667 94 OFFCURVE",
"20 86 OFFCURVE",
"20 70 CURVE SMOOTH",
"20 53.333 OFFCURVE",
"39 35.667 OFFCURVE",
"77 17 CURVE SMOOTH",
"137 -13.667 OFFCURVE",
"180.667 -20 OFFCURVE",
"238 -20 CURVE SMOOTH",
"309.333 -20 OFFCURVE",
"371.667 3.333 OFFCURVE",
"425 50 CURVE SMOOTH",
"481 98.667 OFFCURVE",
"509 158 OFFCURVE",
"509 228 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 76 76 64 77 0 68 59 54 53 45 29 11 51 31 9 18 5 0 65 4 38 36 34 14 7 4 21 6 72 42 49 4 1 1 9 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
9 76 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
76 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 539;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"516 353 OFFCURVE",
"434 438 OFFCURVE",
"306 438 CURVE SMOOTH",
"234 438 OFFCURVE",
"170 404 OFFCURVE",
"114 336 CURVE SMOOTH",
"106.667 326.667 OFFCURVE",
"100.667 320.667 OFFCURVE",
"96 318 CURVE",
"100 356 OFFCURVE",
"119.333 404.667 OFFCURVE",
"154 464 CURVE SMOOTH",
"172.667 496 OFFCURVE",
"200.333 530.333 OFFCURVE",
"237 567 CURVE SMOOTH",
"282.333 611.667 OFFCURVE",
"318 634 OFFCURVE",
"344 634 CURVE SMOOTH",
"347.333 634 OFFCURVE",
"351.333 631.333 OFFCURVE",
"356 626 CURVE SMOOTH",
"360.667 620.667 OFFCURVE",
"364.667 618 OFFCURVE",
"368 618 CURVE SMOOTH",
"378.667 618 OFFCURVE",
"384 626.333 OFFCURVE",
"384 643 CURVE SMOOTH",
"384 660.333 OFFCURVE",
"353.333 684 OFFCURVE",
"336 684 CURVE SMOOTH",
"315.333 684 OFFCURVE",
"282 666.333 OFFCURVE",
"236 631 CURVE SMOOTH",
"175.333 584.333 OFFCURVE",
"126.333 526.333 OFFCURVE",
"89 457 CURVE SMOOTH",
"49.667 383.667 OFFCURVE",
"30 310.333 OFFCURVE",
"30 237 CURVE SMOOTH",
"30 161.667 OFFCURVE",
"49.333 99.667 OFFCURVE",
"88 51 CURVE SMOOTH",
"130 -2.333 OFFCURVE",
"188 -29 OFFCURVE",
"262 -29 CURVE SMOOTH",
"404.667 -29 OFFCURVE",
"516 82.333 OFFCURVE",
"516 225 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"466 175.667 OFFCURVE",
"447 123 OFFCURVE",
"409 79 CURVE SMOOTH",
"369 32.333 OFFCURVE",
"319 9 OFFCURVE",
"259 9 CURVE SMOOTH",
"205 9 OFFCURVE",
"162.667 30.333 OFFCURVE",
"132 73 CURVE SMOOTH",
"106.667 109 OFFCURVE",
"91.667 155.667 OFFCURVE",
"87 213 CURVE",
"98.333 217 OFFCURVE",
"104 224 OFFCURVE",
"104 234 CURVE SMOOTH",
"104 235.333 OFFCURVE",
"103.667 237.333 OFFCURVE",
"103 240 CURVE SMOOTH",
"102.333 242.667 OFFCURVE",
"102 244.667 OFFCURVE",
"102 246 CURVE SMOOTH",
"102 276 OFFCURVE",
"128 309.333 OFFCURVE",
"180 346 CURVE SMOOTH",
"230 382 OFFCURVE",
"273 400 OFFCURVE",
"309 400 CURVE SMOOTH",
"406.333 400 OFFCURVE",
"466 334.333 OFFCURVE",
"466 237 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
1 54 54 64 55 0 27 18 16 27 5 7 41 44 5 7 46 5 7 34 4 0 50 7 3 37 7 31 21 6 13 31 2 13 3 3 1 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 54 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
54 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 536;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"475 641.333 OFFCURVE",
"462.667 651 OFFCURVE",
"438 663 CURVE SMOOTH",
"417.333 673.667 OFFCURVE",
"401 680.333 OFFCURVE",
"389 683 CURVE SMOOTH",
"357.667 689.667 OFFCURVE",
"329 693 OFFCURVE",
"303 693 CURVE SMOOTH",
"267.667 693 OFFCURVE",
"232.667 689.667 OFFCURVE",
"198 683 CURVE SMOOTH",
"192 681.667 OFFCURVE",
"172.333 675.667 OFFCURVE",
"139 665 CURVE SMOOTH",
"111.667 655.667 OFFCURVE",
"93.333 651.333 OFFCURVE",
"84 652 CURVE",
"78 653 LINE",
"78 653 LINE",
"71.333 663.667 OFFCURVE",
"64 676.667 OFFCURVE",
"52 678 CURVE",
"33.333 644.667 OFFCURVE",
"30.333 601.667 OFFCURVE",
"25 563 CURVE",
"24.333 559.667 OFFCURVE",
"21.333 550.333 OFFCURVE",
"16 535 CURVE SMOOTH",
"12 522.333 OFFCURVE",
"10 514 OFFCURVE",
"10 510 CURVE SMOOTH",
"10 493.333 OFFCURVE",
"20 485 OFFCURVE",
"40 485 CURVE SMOOTH",
"44.667 485 OFFCURVE",
"48 485.333 OFFCURVE",
"50 486 CURVE",
"60.667 496 OFFCURVE",
"67.333 512.333 OFFCURVE",
"70 535 CURVE",
"72 560.333 OFFCURVE",
"75.667 577 OFFCURVE",
"81 585 CURVE SMOOTH",
"86.333 593 OFFCURVE",
"121.667 604 OFFCURVE",
"187 618 CURVE SMOOTH",
"247 630.667 OFFCURVE",
"287.333 637 OFFCURVE",
"308 637 CURVE SMOOTH",
"310 637 OFFCURVE",
"312.833 636.5 OFFCURVE",
"316.5 635.5 CURVE SMOOTH",
"320.167 634.5 OFFCURVE",
"323.333 634 OFFCURVE",
"326 634 CURVE SMOOTH",
"327.333 634 OFFCURVE",
"329.833 634.333 OFFCURVE",
"333.5 635 CURVE SMOOTH",
"337.167 635.667 OFFCURVE",
"340 636 OFFCURVE",
"342 636 CURVE SMOOTH",
"356 636 OFFCURVE",
"368.667 631.333 OFFCURVE",
"380 622 CURVE",
"380 618.667 OFFCURVE",
"378.667 615 OFFCURVE",
"376 611 CURVE",
"290 453.667 OFFCURVE",
"243.333 368 OFFCURVE",
"236 354 CURVE SMOOTH",
"188 256.667 OFFCURVE",
"154.333 165.333 OFFCURVE",
"135 80 CURVE SMOOTH",
"129.667 54.667 OFFCURVE",
"127 38.333 OFFCURVE",
"127 31 CURVE SMOOTH",
"127 14.333 OFFCURVE",
"131.333 -1 OFFCURVE",
"140 -15 CURVE SMOOTH",
"149.333 -31 OFFCURVE",
"161.667 -39 OFFCURVE",
"177 -39 CURVE SMOOTH",
"181.667 -39 OFFCURVE",
"185 -36.333 OFFCURVE",
"187 -31 CURVE",
"176.333 5 OFFCURVE",
"171 27 OFFCURVE",
"171 35 CURVE SMOOTH",
"171 65.667 OFFCURVE",
"179.667 104.333 OFFCURVE",
"197 151 CURVE SMOOTH",
"211.667 187.667 OFFCURVE",
"226.667 224.667 OFFCURVE",
"242 262 CURVE SMOOTH",
"277.333 351.333 OFFCURVE",
"340.333 457.667 OFFCURVE",
"431 581 CURVE",
"431.667 581.667 OFFCURVE",
"439.667 590.667 OFFCURVE",
"455 608 CURVE SMOOTH",
"468.333 623.333 OFFCURVE",
"475 632 OFFCURVE",
"475 634 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 69 69 64 70 0 57 56 55 43 56 55 45 26 12 0 10 4 18 31 6 63 28 34 6 63 63 3 52 3 14 1 1 45 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
45 69 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
69 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"512 265 OFFCURVE",
"444.333 330 OFFCURVE",
"309 366 CURVE",
"307 370 LINE",
"307 372 LINE",
"346.333 395.333 OFFCURVE",
"386 418.333 OFFCURVE",
"426 441 CURVE",
"475.333 475.667 OFFCURVE",
"500 510.333 OFFCURVE",
"500 545 CURVE SMOOTH",
"500 566.333 OFFCURVE",
"492.667 577 OFFCURVE",
"478 577 CURVE SMOOTH",
"476.667 577 OFFCURVE",
"471 569.667 OFFCURVE",
"461 555 CURVE",
"426.333 627 OFFCURVE",
"346.667 678 OFFCURVE",
"268 678 CURVE SMOOTH",
"210.667 678 OFFCURVE",
"161 661.333 OFFCURVE",
"119 628 CURVE SMOOTH",
"74.333 592.667 OFFCURVE",
"52 547 OFFCURVE",
"52 491 CURVE SMOOTH",
"52 437.667 OFFCURVE",
"86.667 390 OFFCURVE",
"156 348 CURVE",
"112 322 OFFCURVE",
"80 297 OFFCURVE",
"60 273 CURVE SMOOTH",
"33.333 241 OFFCURVE",
"20 203.333 OFFCURVE",
"20 160 CURVE SMOOTH",
"20 98.667 OFFCURVE",
"47.667 52.333 OFFCURVE",
"103 21 CURVE SMOOTH",
"147.667 -4.333 OFFCURVE",
"203 -17 OFFCURVE",
"269 -17 CURVE SMOOTH",
"299.667 -17 OFFCURVE",
"327.667 -14.667 OFFCURVE",
"353 -10 CURVE SMOOTH",
"445 7.333 OFFCURVE",
"512 80.333 OFFCURVE",
"512 171 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"407.667 473.667 OFFCURVE",
"371.667 449.333 OFFCURVE",
"325 426 CURVE SMOOTH",
"273 400 OFFCURVE",
"242.333 387 OFFCURVE",
"233 387 CURVE SMOOTH",
"205 387 OFFCURVE",
"176.333 398 OFFCURVE",
"147 420 CURVE SMOOTH",
"115 443.333 OFFCURVE",
"99 468.333 OFFCURVE",
"99 495 CURVE SMOOTH",
"99 538.333 OFFCURVE",
"116.667 573.333 OFFCURVE",
"152 600 CURVE SMOOTH",
"184.667 624.667 OFFCURVE",
"223.333 637 OFFCURVE",
"268 637 CURVE SMOOTH",
"334 637 OFFCURVE",
"383 601.667 OFFCURVE",
"415 531 CURVE SMOOTH",
"420.333 519.667 OFFCURVE",
"426.333 509 OFFCURVE",
"433 499 CURVE"
);
},
{
closed = 1;
nodes = (
"459 112 OFFCURVE",
"438.333 76.667 OFFCURVE",
"397 52 CURVE SMOOTH",
"362.333 31.333 OFFCURVE",
"320.333 21 OFFCURVE",
"271 21 CURVE SMOOTH",
"217.667 21 OFFCURVE",
"172.667 31 OFFCURVE",
"136 51 CURVE SMOOTH",
"90 75 OFFCURVE",
"67 111.333 OFFCURVE",
"67 160 CURVE SMOOTH",
"67 196.667 OFFCURVE",
"80 228 OFFCURVE",
"106 254 CURVE SMOOTH",
"118.667 266.667 OFFCURVE",
"147 287 OFFCURVE",
"191 315 CURVE SMOOTH",
"207 325.667 OFFCURVE",
"216.667 331 OFFCURVE",
"220 331 CURVE SMOOTH",
"226 331 OFFCURVE",
"241 327 OFFCURVE",
"265 319 CURVE SMOOTH",
"327.667 298.333 OFFCURVE",
"370 281.333 OFFCURVE",
"392 268 CURVE SMOOTH",
"436.667 240 OFFCURVE",
"459 203.333 OFFCURVE",
"459 158 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 70 70 64 71 0 24 22 34 31 30 26 13 62 4 9 42 4 15 50 4 0 56 6 46 66 7 5 38 7 19 19 3 5 1 1 9 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
9 70 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
70 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 532;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"449 495.333 OFFCURVE",
"432.333 554.333 OFFCURVE",
"399 603 CURVE SMOOTH",
"361 658.333 OFFCURVE",
"308.667 686 OFFCURVE",
"242 686 CURVE SMOOTH",
"170.667 686 OFFCURVE",
"115 659.333 OFFCURVE",
"75 606 CURVE SMOOTH",
"38.333 557.333 OFFCURVE",
"20 496.333 OFFCURVE",
"20 423 CURVE SMOOTH",
"20 382.333 OFFCURVE",
"25.333 350.667 OFFCURVE",
"36 328 CURVE SMOOTH",
"66.667 261.333 OFFCURVE",
"131.333 223 OFFCURVE",
"206 223 CURVE SMOOTH",
"257.333 223 OFFCURVE",
"315.333 249.333 OFFCURVE",
"380 302 CURVE",
"367 262 LINE SMOOTH",
"356.333 228 OFFCURVE",
"332.667 184.333 OFFCURVE",
"296 131 CURVE SMOOTH",
"253.333 68.333 OFFCURVE",
"219.667 37 OFFCURVE",
"195 37 CURVE SMOOTH",
"191 37 OFFCURVE",
"185.667 39.667 OFFCURVE",
"179 45 CURVE SMOOTH",
"172.333 50.333 OFFCURVE",
"167 53 OFFCURVE",
"163 53 CURVE SMOOTH",
"151 53 OFFCURVE",
"145 46.333 OFFCURVE",
"145 33 CURVE SMOOTH",
"145 23 OFFCURVE",
"153.667 13.333 OFFCURVE",
"171 4 CURVE SMOOTH",
"186.333 -4 OFFCURVE",
"199.333 -8 OFFCURVE",
"210 -8 CURVE SMOOTH",
"236 -8 OFFCURVE",
"269 16 OFFCURVE",
"309 64 CURVE SMOOTH",
"339.667 100 OFFCURVE",
"364.667 136 OFFCURVE",
"384 172 CURVE SMOOTH",
"427.333 252.667 OFFCURVE",
"449 337.333 OFFCURVE",
"449 426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"398 406.333 OFFCURVE",
"395.333 392.333 OFFCURVE",
"390 379 CURVE SMOOTH",
"374 337.667 OFFCURVE",
"253.667 260 OFFCURVE",
"207 260 CURVE SMOOTH",
"165 260 OFFCURVE",
"131 275.333 OFFCURVE",
"105 306 CURVE SMOOTH",
"81 334.667 OFFCURVE",
"69 370.333 OFFCURVE",
"69 413 CURVE SMOOTH",
"69 468.333 OFFCURVE",
"84 520 OFFCURVE",
"114 568 CURVE SMOOTH",
"148.667 622 OFFCURVE",
"192 649 OFFCURVE",
"244 649 CURVE SMOOTH",
"295.333 649 OFFCURVE",
"335 622.667 OFFCURVE",
"363 570 CURVE SMOOTH",
"386.333 526.667 OFFCURVE",
"398 477 OFFCURVE",
"398 421 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
1 52 52 64 53 0 20 12 20 10 43 4 27 35 4 0 47 7 22 39 7 31 15 6 6 31 3 6 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 52 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
52 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 469;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113 57 OFFCURVE",
"83 79 OFFCURVE",
"55 79 CURVE SMOOTH",
"40.333 79 OFFCURVE",
"20 55 OFFCURVE",
"20 39 CURVE SMOOTH",
"20 17.667 OFFCURVE",
"56.667 -11 OFFCURVE",
"78 -11 CURVE SMOOTH",
"95.333 -11 OFFCURVE",
"113 11.667 OFFCURVE",
"113 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 393.333 OFFCURVE",
"98 405 OFFCURVE",
"60 405 CURVE SMOOTH",
"34.667 405 OFFCURVE",
"22 393.333 OFFCURVE",
"22 370 CURVE SMOOTH",
"22 342 OFFCURVE",
"35 328 OFFCURVE",
"61 328 CURVE SMOOTH",
"87.667 328 OFFCURVE",
"117 344.667 OFFCURVE",
"117 370 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 934 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 17 106 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 17 25 17 41 17 57 17 73 17 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
19 931 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 9 119 9 135 9 151 9 167 9 183 9 199 9 215 9 231 9 247 9 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 9 23 9 39 9 55 9 71 9 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 9 102 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 142;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"147 393.333 OFFCURVE",
"128 405 OFFCURVE",
"90 405 CURVE SMOOTH",
"64.667 405 OFFCURVE",
"52 393.333 OFFCURVE",
"52 370 CURVE SMOOTH",
"52 342 OFFCURVE",
"65 328 OFFCURVE",
"91 328 CURVE SMOOTH",
"117.667 328 OFFCURVE",
"147 344.667 OFFCURVE",
"147 370 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 30.333 OFFCURVE",
"72.333 24.667 OFFCURVE",
"95 10 CURVE SMOOTH",
"117.667 -4.667 OFFCURVE",
"130.667 -39.333 OFFCURVE",
"120 -66 CURVE SMOOTH",
"113.333 -82 OFFCURVE",
"103.833 -94.333 OFFCURVE",
"91.5 -103 CURVE SMOOTH",
"79.167 -111.667 OFFCURVE",
"67.333 -121 OFFCURVE",
"56 -131 CURVE SMOOTH",
"37.333 -147 OFFCURVE",
"40.667 -170 OFFCURVE",
"62 -170 CURVE SMOOTH",
"88.667 -170 OFFCURVE",
"116.333 -144.667 OFFCURVE",
"139 -106 CURVE SMOOTH",
"164.333 -63.333 OFFCURVE",
"163.333 -27 OFFCURVE",
"154 29 CURVE SMOOTH",
"147.333 65 OFFCURVE",
"127 79 OFFCURVE",
"103 79 CURVE SMOOTH",
"67 79 OFFCURVE",
"60 61 OFFCURVE",
"60 45 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 9 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 9 106 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 9 25 9 41 9 57 9 73 9 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
7 931 3 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 193;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"339 188.333 OFFCURVE",
"336 196.333 OFFCURVE",
"330 211 CURVE",
"310 223 OFFCURVE",
"270.667 244.667 OFFCURVE",
"212 276 CURVE SMOOTH",
"162.667 303.333 OFFCURVE",
"124 326 OFFCURVE",
"96 344 CURVE",
"138.667 367.333 OFFCURVE",
"181 391 OFFCURVE",
"223 415 CURVE SMOOTH",
"293 454.333 OFFCURVE",
"328 477 OFFCURVE",
"328 483 CURVE SMOOTH",
"328 501.667 OFFCURVE",
"315.333 515 OFFCURVE",
"290 523 CURVE",
"32 355 LINE SMOOTH",
"24 349.667 OFFCURVE",
"20 344 OFFCURVE",
"20 338 CURVE SMOOTH",
"20 333.333 OFFCURVE",
"22.333 329.333 OFFCURVE",
"27 326 CURVE",
"53.667 303.333 OFFCURVE",
"290.667 159 OFFCURVE",
"304 159 CURVE SMOOTH",
"312 159 OFFCURVE",
"323 167 OFFCURVE",
"337 183 CURVE",
"338.333 185.667 OFFCURVE",
"339 187 OFFCURVE",
"339 187 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 24 24 64 25 0 18 14 9 0 12 4 1 9 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
9 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 359;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"373 400.667 OFFCURVE",
"339 415 OFFCURVE",
"311 415 CURVE SMOOTH",
"272.333 415 OFFCURVE",
"223.667 413 OFFCURVE",
"165 409 CURVE SMOOTH",
"117 406.333 OFFCURVE",
"68.667 403.333 OFFCURVE",
"20 400 CURVE",
"20 374 LINE SMOOTH",
"20 364.667 OFFCURVE",
"35.667 338 OFFCURVE",
"45 338 CURVE SMOOTH",
"47 338 OFFCURVE",
"56.667 341.667 OFFCURVE",
"74 349 CURVE SMOOTH",
"91.333 356.333 OFFCURVE",
"103 360.667 OFFCURVE",
"109 362 CURVE",
"128.333 365.333 OFFCURVE",
"153.667 367 OFFCURVE",
"185 367 CURVE SMOOTH",
"264.333 367 OFFCURVE",
"313 363.667 OFFCURVE",
"331 357 CURVE",
"332.333 357 OFFCURVE",
"336.333 355.167 OFFCURVE",
"343 351.5 CURVE SMOOTH",
"349.667 347.833 OFFCURVE",
"354 346 OFFCURVE",
"356 346 CURVE SMOOTH",
"356.667 346 OFFCURVE",
"361.333 347.333 OFFCURVE",
"370 350 CURVE",
"370 352 OFFCURVE",
"370.5 355.833 OFFCURVE",
"371.5 361.5 CURVE SMOOTH",
"372.5 367.167 OFFCURVE",
"373 371.333 OFFCURVE",
"373 374 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"373 259 LINE SMOOTH",
"373 269.667 OFFCURVE",
"364.333 291 OFFCURVE",
"355 291 CURVE SMOOTH",
"347 291 OFFCURVE",
"335.333 288.5 OFFCURVE",
"320 283.5 CURVE SMOOTH",
"304.667 278.5 OFFCURVE",
"292.667 276 OFFCURVE",
"284 276 CURVE SMOOTH",
"277.333 276 OFFCURVE",
"266.833 276.667 OFFCURVE",
"252.5 278 CURVE SMOOTH",
"238.167 279.333 OFFCURVE",
"227.333 280 OFFCURVE",
"220 280 CURVE SMOOTH",
"205.333 280 OFFCURVE",
"183.667 278.667 OFFCURVE",
"155 276 CURVE SMOOTH",
"126.333 273.333 OFFCURVE",
"105 272 OFFCURVE",
"91 272 CURVE SMOOTH",
"85 272 OFFCURVE",
"76 272.833 OFFCURVE",
"64 274.5 CURVE SMOOTH",
"52 276.167 OFFCURVE",
"43 277 OFFCURVE",
"37 277 CURVE SMOOTH",
"37 277 OFFCURVE",
"32.667 275.667 OFFCURVE",
"24 273 CURVE",
"22.667 269 OFFCURVE",
"20 254.333 OFFCURVE",
"20 249 CURVE SMOOTH",
"20 228.333 OFFCURVE",
"39.667 218 OFFCURVE",
"79 218 CURVE SMOOTH",
"84.333 218 OFFCURVE",
"182.333 223 OFFCURVE",
"373 233 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 51 51 64 52 0 41 10 5 50 30 26 19 18 0 15 6 19 47 6 26 38 6 28 35 44 6 26 23 28 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 51 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
51 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 393;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"339 349 OFFCURVE",
"336.667 352.667 OFFCURVE",
"332 356 CURVE",
"304 378.667 OFFCURVE",
"68.333 523 OFFCURVE",
"55 523 CURVE SMOOTH",
"47 523 OFFCURVE",
"35.667 515 OFFCURVE",
"21 499 CURVE",
"21 497.667 OFFCURVE",
"20.667 496.333 OFFCURVE",
"20 495 CURVE",
"20 493.667 OFFCURVE",
"23 485.667 OFFCURVE",
"29 471 CURVE",
"49 459 OFFCURVE",
"88.333 437.333 OFFCURVE",
"147 406 CURVE SMOOTH",
"196.333 379.333 OFFCURVE",
"235 356.667 OFFCURVE",
"263 338 CURVE",
"220.333 314.667 OFFCURVE",
"177.667 291.333 OFFCURVE",
"135 268 CURVE SMOOTH",
"65 228.667 OFFCURVE",
"30 205.667 OFFCURVE",
"30 199 CURVE SMOOTH",
"30 180.333 OFFCURVE",
"42.667 167 OFFCURVE",
"68 159 CURVE",
"327 327 LINE SMOOTH",
"335 332.333 OFFCURVE",
"339 338.333 OFFCURVE",
"339 345 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 24 24 64 25 0 15 9 5 0 19 3 1 15 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
15 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 359;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"486 545.333 OFFCURVE",
"461.667 582.333 OFFCURVE",
"413 617 CURVE SMOOTH",
"368.333 649 OFFCURVE",
"325.333 665 OFFCURVE",
"284 665 CURVE SMOOTH",
"263.333 665 OFFCURVE",
"229 656.333 OFFCURVE",
"181 639 CURVE SMOOTH",
"154.333 629.667 OFFCURVE",
"122 608.667 OFFCURVE",
"84 576 CURVE SMOOTH",
"41.333 538.667 OFFCURVE",
"20 509 OFFCURVE",
"20 487 CURVE SMOOTH",
"20 463 OFFCURVE",
"62 428 OFFCURVE",
"86 428 CURVE SMOOTH",
"100.667 428 OFFCURVE",
"129 447.333 OFFCURVE",
"129 462 CURVE SMOOTH",
"129 472.667 OFFCURVE",
"120.667 478 OFFCURVE",
"104 478 CURVE SMOOTH",
"102 478 OFFCURVE",
"99 477.333 OFFCURVE",
"95 476 CURVE SMOOTH",
"91 474.667 OFFCURVE",
"88 474 OFFCURVE",
"86 474 CURVE SMOOTH",
"81.333 474 OFFCURVE",
"78 475.667 OFFCURVE",
"76 479 CURVE",
"109.333 537.667 OFFCURVE",
"235.667 612 OFFCURVE",
"301 612 CURVE SMOOTH",
"333.667 612 OFFCURVE",
"361.333 602.667 OFFCURVE",
"384 584 CURVE SMOOTH",
"408 563.333 OFFCURVE",
"420 537.333 OFFCURVE",
"420 506 CURVE SMOOTH",
"420 462 OFFCURVE",
"374.333 408 OFFCURVE",
"283 344 CURVE SMOOTH",
"251 322.667 OFFCURVE",
"218.667 301.667 OFFCURVE",
"186 281 CURVE",
"146 251.667 OFFCURVE",
"126 221.667 OFFCURVE",
"126 191 CURVE SMOOTH",
"126 167 OFFCURVE",
"174 112 OFFCURVE",
"198 112 CURVE SMOOTH",
"202.667 112 OFFCURVE",
"206 113.333 OFFCURVE",
"208 116 CURVE",
"208 146.667 OFFCURVE",
"188.667 153.667 OFFCURVE",
"170 167 CURVE",
"172 194.333 OFFCURVE",
"212.667 235.333 OFFCURVE",
"292 290 CURVE SMOOTH",
"382.667 352.667 OFFCURVE",
"437 397.667 OFFCURVE",
"455 425 CURVE SMOOTH",
"475.667 456.333 OFFCURVE",
"486 483.333 OFFCURVE",
"486 506 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 68 OFFCURVE",
"223 90 OFFCURVE",
"195 90 CURVE SMOOTH",
"185 90 OFFCURVE",
"173.667 87 OFFCURVE",
"161 81 CURVE SMOOTH",
"146.333 73.667 OFFCURVE",
"139 65.667 OFFCURVE",
"139 57 CURVE SMOOTH",
"139 21 OFFCURVE",
"165 -4 OFFCURVE",
"201 -4 CURVE SMOOTH",
"228.333 -4 OFFCURVE",
"242 10.667 OFFCURVE",
"242 40 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 62 62 64 63 0 37 32 29 11 27 14 9 6 34 5 40 50 5 55 20 5 0 59 6 52 24 6 46 46 52 1 1 40 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
40 62 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
62 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 506;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"483.156 198.411 OFFCURVE",
"478 193.511 OFFCURVE",
"478 160 CURVE SMOOTH",
"478 119.02 OFFCURVE",
"522.303 47 OFFCURVE",
"586 47 CURVE SMOOTH",
"624.667 47 OFFCURVE",
"678.167 65.5 OFFCURVE",
"721.5 111.5 CURVE SMOOTH",
"764.833 157.5 OFFCURVE",
"799 233 OFFCURVE",
"799 345 CURVE SMOOTH",
"799 445 OFFCURVE",
"753 526.833 OFFCURVE",
"681 583.5 CURVE SMOOTH",
"609 640.167 OFFCURVE",
"509.667 672 OFFCURVE",
"403 672 CURVE SMOOTH",
"331 672 OFFCURVE",
"240.5 635.333 OFFCURVE",
"166.5 562 CURVE SMOOTH",
"92.5 488.667 OFFCURVE",
"37 378.333 OFFCURVE",
"37 233 CURVE SMOOTH",
"37 78.333 OFFCURVE",
"89.333 -21.5 OFFCURVE",
"164 -83.5 CURVE SMOOTH",
"238.667 -145.5 OFFCURVE",
"336.333 -168 OFFCURVE",
"427 -168 CURVE SMOOTH",
"508.333 -168 OFFCURVE",
"615.667 -138.667 OFFCURVE",
"713 -64 CURVE SMOOTH",
"725.171 -54.872 OFFCURVE",
"734.88 -12.36 OFFCURVE",
"720 5 CURVE SMOOTH",
"708.483 18.821 OFFCURVE",
"698.67 6.56 OFFCURVE",
"687 -9 CURVE",
"637.008 -58.992 OFFCURVE",
"536.986 -127 OFFCURVE",
"411 -127 CURVE SMOOTH",
"339 -127 OFFCURVE",
"261 -114.167 OFFCURVE",
"201 -65.5 CURVE SMOOTH",
"141 -16.833 OFFCURVE",
"98 66.333 OFFCURVE",
"98 209 CURVE SMOOTH",
"98 307.667 OFFCURVE",
"122.333 388.333 OFFCURVE",
"161 451 CURVE SMOOTH",
"180.333 482.333 OFFCURVE",
"202.5 509.333 OFFCURVE",
"227.5 532 CURVE SMOOTH",
"277.5 577.333 OFFCURVE",
"331.667 607.5 OFFCURVE",
"385 621.5 CURVE SMOOTH",
"411.667 628.5 OFFCURVE",
"436.667 632 OFFCURVE",
"460 632 CURVE SMOOTH",
"528 632 OFFCURVE",
"597.5 614 OFFCURVE",
"651.5 570 CURVE SMOOTH",
"705.5 526 OFFCURVE",
"742 457.333 OFFCURVE",
"742 356 CURVE SMOOTH",
"742 208.045 OFFCURVE",
"689.41 83 OFFCURVE",
"612 83 CURVE SMOOTH",
"549.83 83 OFFCURVE",
"514.835 171.729 OFFCURVE",
"525 209 CURVE SMOOTH",
"529 223.667 OFFCURVE",
"532.667 233.333 OFFCURVE",
"536 238 CURVE SMOOTH",
"539.333 242.667 OFFCURVE",
"543 248 OFFCURVE",
"547 254 CURVE",
"549 256.667 OFFCURVE",
"550 259.333 OFFCURVE",
"550 262 CURVE SMOOTH",
"550 267.333 OFFCURVE",
"545.333 270 OFFCURVE",
"536 270 CURVE SMOOTH",
"505.333 270 OFFCURVE",
"494.667 248 OFFCURVE",
"492 236 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"526.09 409.516 OFFCURVE",
"478.302 460 OFFCURVE",
"429 460 CURVE SMOOTH",
"351.478 460 OFFCURVE",
"281.408 359.669 OFFCURVE",
"267 242 CURVE SMOOTH",
"253.483 136.571 OFFCURVE",
"293.178 44 OFFCURVE",
"397 44 CURVE SMOOTH",
"447.083 44 OFFCURVE",
"479.831 79.067 OFFCURVE",
"496 120.5 CURVE SMOOTH",
"510.059 156.527 OFFCURVE",
"513.236 189.178 OFFCURVE",
"518 213 CURVE",
"495 220 LINE",
"486.218 184.874 OFFCURVE",
"444.528 77 OFFCURVE",
"388 77 CURVE SMOOTH",
"324 77 OFFCURVE",
"305.667 138 OFFCURVE",
"327 254 CURVE SMOOTH",
"345.767 354.872 OFFCURVE",
"397.187 419 OFFCURVE",
"455 419 CURVE SMOOTH",
"495.757 419 OFFCURVE",
"517.682 385.411 OFFCURVE",
"511 303 CURVE",
"511 284.684 OFFCURVE",
"504.379 262 OFFCURVE",
"534 262 CURVE SMOOTH",
"557.541 262 OFFCURVE",
"564 282.648 OFFCURVE",
"564 298 CURVE SMOOTH",
"564 316.667 OFFCURVE",
"559.667 352.667 OFFCURVE",
"545 378 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
139 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 20 106 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 20 25 20 41 20 57 20 73 20 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
139 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
32 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 32 22 32 38 32 54 32 70 32 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 32 101 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
140 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
37 928 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
111 929 124 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
134 928 103 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
124 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
134 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 831;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"498 197 OFFCURVE",
"492 202.333 OFFCURVE",
"480 205 CURVE SMOOTH",
"464 209 OFFCURVE",
"454 212.667 OFFCURVE",
"450 216 CURVE",
"436.667 346 OFFCURVE",
"425 434 OFFCURVE",
"415 480 CURVE SMOOTH",
"387 610.667 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE SMOOTH",
"60 211.667 OFFCURVE",
"38.333 130 OFFCURVE",
"27 56 CURVE",
"26.333 52.667 OFFCURVE",
"23.333 44 OFFCURVE",
"18 30 CURVE SMOOTH",
"12.667 16 OFFCURVE",
"10 7 OFFCURVE",
"10 3 CURVE SMOOTH",
"10 -13 OFFCURVE",
"37.667 -35 OFFCURVE",
"55 -35 CURVE SMOOTH",
"61 -35 OFFCURVE",
"65.667 -32.667 OFFCURVE",
"69 -28 CURVE",
"69.667 -11.333 OFFCURVE",
"72.667 14.667 OFFCURVE",
"78 50 CURVE SMOOTH",
"84.667 93.333 OFFCURVE",
"91 117.333 OFFCURVE",
"97 122 CURVE",
"107.667 131.333 OFFCURVE",
"148 140.667 OFFCURVE",
"218 150 CURVE SMOOTH",
"279.333 158 OFFCURVE",
"324.333 162 OFFCURVE",
"353 162 CURVE SMOOTH",
"357.667 162 OFFCURVE",
"365.5 162.667 OFFCURVE",
"376.5 164 CURVE SMOOTH",
"387.5 165.333 OFFCURVE",
"396 165.667 OFFCURVE",
"402 165 CURVE",
"404 161 OFFCURVE",
"405 153 OFFCURVE",
"405 141 CURVE SMOOTH",
"405 135 OFFCURVE",
"405 124 OFFCURVE",
"405 108 CURVE",
"404.333 92 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 127 OFFCURVE",
"452 161 CURVE",
"459.333 158.333 OFFCURVE",
"466.333 157 OFFCURVE",
"473 157 CURVE SMOOTH",
"489.667 157 OFFCURVE",
"498 167.667 OFFCURVE",
"498 189 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288.333 210.667 OFFCURVE",
"217.667 204.333 OFFCURVE",
"189 199 CURVE SMOOTH",
"152.333 192.333 OFFCURVE",
"132 189 OFFCURVE",
"128 189 CURVE SMOOTH",
"116 189 OFFCURVE",
"111.333 197 OFFCURVE",
"114 213 CURVE",
"118.667 230.333 OFFCURVE",
"123 243.333 OFFCURVE",
"127 252 CURVE",
"149.667 316 OFFCURVE",
"172.667 380 OFFCURVE",
"196 444 CURVE",
"237.333 545.333 OFFCURVE",
"271.667 596.667 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598.667 OFFCURVE",
"347 543 OFFCURVE",
"369 431 CURVE SMOOTH",
"373.667 406.333 OFFCURVE",
"384.333 335.333 OFFCURVE",
"401 218 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 66 66 64 67 0 62 19 9 4 2 60 50 35 17 15 13 6 4 0 54 6 42 42 3 32 1 1 35 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
35 66 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
66 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 508;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"475 244 OFFCURVE",
"431.333 282.333 OFFCURVE",
"344 293 CURVE",
"377.333 303.667 OFFCURVE",
"404.667 331.667 OFFCURVE",
"426 377 CURVE SMOOTH",
"444.667 415.667 OFFCURVE",
"454 455 OFFCURVE",
"454 495 CURVE SMOOTH",
"454 548.333 OFFCURVE",
"441.667 592.667 OFFCURVE",
"417 628 CURVE SMOOTH",
"389.667 668 OFFCURVE",
"350 688 OFFCURVE",
"298 688 CURVE SMOOTH",
"208 688 OFFCURVE",
"140.333 629.667 OFFCURVE",
"95 513 CURVE",
"94.333 517 OFFCURVE",
"94 519 OFFCURVE",
"94 519 CURVE",
"94 545.667 OFFCURVE",
"99.333 589.667 OFFCURVE",
"110 651 CURVE",
"106.667 655.667 OFFCURVE",
"103 660 OFFCURVE",
"99 664 CURVE",
"97.667 666 OFFCURVE",
"91.667 667 OFFCURVE",
"81 667 CURVE SMOOTH",
"70.333 667 OFFCURVE",
"50 645.667 OFFCURVE",
"50 635 CURVE SMOOTH",
"50 301 LINE",
"37.333 294.333 OFFCURVE",
"31 286 OFFCURVE",
"31 276 CURVE SMOOTH",
"31 268 OFFCURVE",
"38 261.667 OFFCURVE",
"52 257 CURVE",
"53 222 LINE SMOOTH",
"53 209.333 OFFCURVE",
"52.5 190.667 OFFCURVE",
"51.5 166 CURVE SMOOTH",
"50.5 141.333 OFFCURVE",
"50 123.333 OFFCURVE",
"50 112 CURVE SMOOTH",
"50 100.667 OFFCURVE",
"50 95.333 OFFCURVE",
"50 96 CURVE",
"49.333 92.667 OFFCURVE",
"44.167 90.5 OFFCURVE",
"34.5 89.5 CURVE SMOOTH",
"24.833 88.5 OFFCURVE",
"20 83 OFFCURVE",
"20 73 CURVE SMOOTH",
"20 65 OFFCURVE",
"24.667 59 OFFCURVE",
"34 55 CURVE SMOOTH",
"58 44.333 OFFCURVE",
"56 51.667 OFFCURVE",
"60 9 CURVE",
"62 -5.667 OFFCURVE",
"69.333 -12.333 OFFCURVE",
"82 -11 CURVE",
"90 -15 LINE",
"97.333 -13 OFFCURVE",
"102.333 -8 OFFCURVE",
"105 0 CURVE",
"102.333 10.667 OFFCURVE",
"101 17 OFFCURVE",
"101 19 CURVE",
"101.667 20.333 OFFCURVE",
"102 21.667 OFFCURVE",
"102 23 CURVE",
"154 9.667 OFFCURVE",
"197 3 OFFCURVE",
"231 3 CURVE SMOOTH",
"339.667 3 OFFCURVE",
"416.333 43 OFFCURVE",
"461 123 CURVE SMOOTH",
"470.333 139 OFFCURVE",
"475 157.333 OFFCURVE",
"475 178 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"403 424.333 OFFCURVE",
"383.667 371.333 OFFCURVE",
"345 340 CURVE SMOOTH",
"310.333 312.667 OFFCURVE",
"254.667 299 OFFCURVE",
"178 299 CURVE SMOOTH",
"126 299 OFFCURVE",
"101.333 299 OFFCURVE",
"104 299 CURVE",
"104 387 LINE SMOOTH",
"104 439 OFFCURVE",
"122.333 494 OFFCURVE",
"159 552 CURVE SMOOTH",
"199.667 616.667 OFFCURVE",
"244.667 649 OFFCURVE",
"294 649 CURVE SMOOTH",
"366.667 649 OFFCURVE",
"403 599 OFFCURVE",
"403 499 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"424 144 OFFCURVE",
"400.667 110 OFFCURVE",
"354 82 CURVE SMOOTH",
"313.333 56.667 OFFCURVE",
"271.667 44 OFFCURVE",
"229 44 CURVE SMOOTH",
"176.333 44 OFFCURVE",
"134 53.333 OFFCURVE",
"102 72 CURVE",
"100.667 86 OFFCURVE",
"100 101.667 OFFCURVE",
"100 119 CURVE SMOOTH",
"100 188.333 OFFCURVE",
"100.333 234 OFFCURVE",
"101 256 CURVE",
"117.667 260 OFFCURVE",
"140 262 OFFCURVE",
"168 262 CURVE SMOOTH",
"239.333 262 OFFCURVE",
"289.333 259.667 OFFCURVE",
"318 255 CURVE SMOOTH",
"388.667 244.333 OFFCURVE",
"424 220.667 OFFCURVE",
"424 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
1 86 86 64 87 0 45 37 6 55 41 31 20 43 4 23 8 78 4 29 28 64 10 63 4 34 33 25 3 23 57 4 51 70 4 0 82 7 4 59 7 47 66 33 64 7 74 47 3 12 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 86 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
86 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 505;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"468 168.667 OFFCURVE",
"461.333 176 OFFCURVE",
"448 176 CURVE SMOOTH",
"440 176 OFFCURVE",
"433.333 171.667 OFFCURVE",
"428 163 CURVE",
"419.333 145 OFFCURVE",
"413.667 131 OFFCURVE",
"411 121 CURVE",
"380.333 59.667 OFFCURVE",
"319.333 20 OFFCURVE",
"250 20 CURVE SMOOTH",
"186.667 20 OFFCURVE",
"140 45.333 OFFCURVE",
"110 96 CURVE SMOOTH",
"86 136.667 OFFCURVE",
"74 191.333 OFFCURVE",
"74 260 CURVE SMOOTH",
"74 363.333 OFFCURVE",
"91 450.333 OFFCURVE",
"125 521 CURVE SMOOTH",
"140.333 551.667 OFFCURVE",
"158.667 578.667 OFFCURVE",
"180 602 CURVE SMOOTH",
"208.667 633.333 OFFCURVE",
"236 649 OFFCURVE",
"262 649 CURVE SMOOTH",
"294.667 649 OFFCURVE",
"320.333 625.667 OFFCURVE",
"339 579 CURVE SMOOTH",
"353.667 543 OFFCURVE",
"361 505.333 OFFCURVE",
"361 466 CURVE SMOOTH",
"361 401.333 OFFCURVE",
"352.333 360.667 OFFCURVE",
"335 344 CURVE",
"326.333 337.333 OFFCURVE",
"320 332.667 OFFCURVE",
"316 330 CURVE",
"322 315.333 OFFCURVE",
"332 308 OFFCURVE",
"346 308 CURVE SMOOTH",
"364 308 OFFCURVE",
"378.667 332 OFFCURVE",
"390 380 CURVE SMOOTH",
"398.667 416.667 OFFCURVE",
"403 449 OFFCURVE",
"403 477 CURVE SMOOTH",
"403 533.667 OFFCURVE",
"393 581.333 OFFCURVE",
"373 620 CURVE SMOOTH",
"347.667 669.333 OFFCURVE",
"309.333 694 OFFCURVE",
"258 694 CURVE SMOOTH",
"223.333 694 OFFCURVE",
"189 679 OFFCURVE",
"155 649 CURVE SMOOTH",
"109 609 OFFCURVE",
"74.333 552.333 OFFCURVE",
"51 479 CURVE SMOOTH",
"30.333 416.333 OFFCURVE",
"20 349.667 OFFCURVE",
"20 279 CURVE SMOOTH",
"20 196.333 OFFCURVE",
"36.667 128.667 OFFCURVE",
"70 76 CURVE SMOOTH",
"109.333 12 OFFCURVE",
"168 -20 OFFCURVE",
"246 -20 CURVE SMOOTH",
"292 -20 OFFCURVE",
"334.667 -8.667 OFFCURVE",
"374 14 CURVE SMOOTH",
"416.667 38.667 OFFCURVE",
"445 71.333 OFFCURVE",
"459 112 CURVE SMOOTH",
"465 129.333 OFFCURVE",
"468 143.333 OFFCURVE",
"468 154 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 53 53 64 54 0 51 24 26 0 30 4 20 40 4 10 44 7 6 34 6 16 16 3 6 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 53 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
53 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 478;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"469 495.667 OFFCURVE",
"454 558.333 OFFCURVE",
"424 607 CURVE SMOOTH",
"388 666.333 OFFCURVE",
"334 696 OFFCURVE",
"262 696 CURVE SMOOTH",
"223.333 696 OFFCURVE",
"191.667 685.333 OFFCURVE",
"167 664 CURVE SMOOTH",
"151 650.667 OFFCURVE",
"135.333 630 OFFCURVE",
"120 602 CURVE SMOOTH",
"104.667 574 OFFCURVE",
"93 557.667 OFFCURVE",
"85 553 CURVE",
"85 555 OFFCURVE",
"85 568 OFFCURVE",
"85 592 CURVE SMOOTH",
"85 599.333 OFFCURVE",
"87.167 608.833 OFFCURVE",
"91.5 620.5 CURVE SMOOTH",
"95.833 632.167 OFFCURVE",
"98 642 OFFCURVE",
"98 650 CURVE SMOOTH",
"98 664.667 OFFCURVE",
"74 680 OFFCURVE",
"58 680 CURVE SMOOTH",
"42 680 OFFCURVE",
"34 672.667 OFFCURVE",
"34 658 CURVE SMOOTH",
"34 656 OFFCURVE",
"34.333 653.167 OFFCURVE",
"35 649.5 CURVE SMOOTH",
"35.667 645.833 OFFCURVE",
"36 643.333 OFFCURVE",
"36 642 CURVE SMOOTH",
"36 585.333 OFFCURVE",
"35 501.833 OFFCURVE",
"33 391.5 CURVE SMOOTH",
"31 281.167 OFFCURVE",
"30 198 OFFCURVE",
"30 142 CURVE SMOOTH",
"30 68 OFFCURVE",
"34.667 18 OFFCURVE",
"44 -8 CURVE",
"51.333 -12.667 OFFCURVE",
"58.667 -15 OFFCURVE",
"66 -15 CURVE SMOOTH",
"69.333 -15 OFFCURVE",
"76.667 -7.667 OFFCURVE",
"88 7 CURVE",
"117.333 -16.333 OFFCURVE",
"148.667 -28 OFFCURVE",
"182 -28 CURVE SMOOTH",
"273.333 -28 OFFCURVE",
"346.667 26 OFFCURVE",
"402 134 CURVE SMOOTH",
"446.667 222.667 OFFCURVE",
"469 317.667 OFFCURVE",
"469 419 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"410 368 OFFCURVE",
"404.667 313.667 OFFCURVE",
"394 261 CURVE SMOOTH",
"381.333 201.667 OFFCURVE",
"357.333 149 OFFCURVE",
"322 103 CURVE SMOOTH",
"280 47 OFFCURVE",
"232.333 19 OFFCURVE",
"179 19 CURVE SMOOTH",
"148.333 19 OFFCURVE",
"123.667 31.667 OFFCURVE",
"105 57 CURVE SMOOTH",
"88.333 79.667 OFFCURVE",
"80 106.667 OFFCURVE",
"80 138 CURVE SMOOTH",
"80 345 LINE SMOOTH",
"80 389 OFFCURVE",
"85.333 430.333 OFFCURVE",
"96 469 CURVE SMOOTH",
"108 511.667 OFFCURVE",
"129 552 OFFCURVE",
"159 590 CURVE SMOOTH",
"195.667 636 OFFCURVE",
"232.667 659 OFFCURVE",
"270 659 CURVE SMOOTH",
"322.667 659 OFFCURVE",
"360.667 631 OFFCURVE",
"384 575 CURVE SMOOTH",
"401.333 535 OFFCURVE",
"410 484.667 OFFCURVE",
"410 424 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
1 58 58 64 59 0 28 6 23 5 18 37 5 0 48 47 4 12 28 26 4 18 15 41 7 33 52 6 4 33 3 20 3 8 1 4 1 1 12 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
12 58 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
58 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 499;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"442.333 66 OFFCURVE",
"414.667 78 OFFCURVE",
"372 78 CURVE SMOOTH",
"347.333 78 OFFCURVE",
"311.833 69.667 OFFCURVE",
"265.5 53 CURVE SMOOTH",
"219.167 36.333 OFFCURVE",
"183.667 28 OFFCURVE",
"159 28 CURVE SMOOTH",
"107.667 28 OFFCURVE",
"82 78.333 OFFCURVE",
"82 179 CURVE SMOOTH",
"82 232.333 OFFCURVE",
"83.333 266.333 OFFCURVE",
"86 281 CURVE",
"119.333 297 OFFCURVE",
"241.667 329 OFFCURVE",
"275 329 CURVE SMOOTH",
"289.667 329 OFFCURVE",
"301.667 326 OFFCURVE",
"311 320 CURVE",
"329.667 326.667 OFFCURVE",
"338.333 331.333 OFFCURVE",
"337 334 CURVE",
"329 364 LINE",
"312.333 372.667 OFFCURVE",
"295.667 377 OFFCURVE",
"279 377 CURVE SMOOTH",
"258.333 377 OFFCURVE",
"228.333 370.667 OFFCURVE",
"189 358 CURVE SMOOTH",
"149.667 345.333 OFFCURVE",
"120 339 OFFCURVE",
"100 339 CURVE SMOOTH",
"95.333 339 OFFCURVE",
"91.667 340.667 OFFCURVE",
"89 344 CURVE",
"96.333 452 OFFCURVE",
"102.667 531.333 OFFCURVE",
"108 582 CURVE",
"124 595.333 OFFCURVE",
"165.333 608.333 OFFCURVE",
"232 621 CURVE SMOOTH",
"291.333 631.667 OFFCURVE",
"336.333 637 OFFCURVE",
"367 637 CURVE SMOOTH",
"401 637 OFFCURVE",
"418 643.667 OFFCURVE",
"418 657 CURVE SMOOTH",
"418 671.667 OFFCURVE",
"393.333 688.333 OFFCURVE",
"372 687 CURVE",
"366 688.333 OFFCURVE",
"361.333 689 OFFCURVE",
"358 689 CURVE SMOOTH",
"329.333 689 OFFCURVE",
"282 681 OFFCURVE",
"216 665 CURVE SMOOTH",
"143.333 647 OFFCURVE",
"94.667 636.667 OFFCURVE",
"70 634 CURVE SMOOTH",
"48 632 OFFCURVE",
"37 623 OFFCURVE",
"37 607 CURVE SMOOTH",
"37 603.667 OFFCURVE",
"37.833 597.833 OFFCURVE",
"39.5 589.5 CURVE SMOOTH",
"41.167 581.167 OFFCURVE",
"42 574.333 OFFCURVE",
"42 569 CURVE",
"42 569 OFFCURVE",
"41.333 558.333 OFFCURVE",
"40 537 CURVE SMOOTH",
"33.333 448.333 OFFCURVE",
"30 341.333 OFFCURVE",
"30 216 CURVE SMOOTH",
"30 58 OFFCURVE",
"77 -21 OFFCURVE",
"171 -21 CURVE SMOOTH",
"199.667 -21 OFFCURVE",
"241.167 -11.833 OFFCURVE",
"295.5 6.5 CURVE SMOOTH",
"349.833 24.833 OFFCURVE",
"391.333 34 OFFCURVE",
"420 34 CURVE SMOOTH",
"422.667 34 OFFCURVE",
"426.5 33.5 OFFCURVE",
"431.5 32.5 CURVE SMOOTH",
"436.5 31.5 OFFCURVE",
"440.333 31 OFFCURVE",
"443 31 CURVE SMOOTH",
"447.667 31 OFFCURVE",
"451.667 34.667 OFFCURVE",
"455 42 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 60 60 64 61 0 46 38 2 53 44 28 17 14 0 36 5 10 58 6 5 55 6 8 30 6 25 48 6 41 23 3 8 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"395 661.667 OFFCURVE",
"365 675 OFFCURVE",
"327 675 CURVE SMOOTH",
"301 675 OFFCURVE",
"269 671.333 OFFCURVE",
"231 664 CURVE SMOOTH",
"199 657.333 OFFCURVE",
"167.333 650.667 OFFCURVE",
"136 644 CURVE",
"132.667 646 OFFCURVE",
"130.333 649.333 OFFCURVE",
"129 654 CURVE",
"129 661.333 OFFCURVE",
"129 668.333 OFFCURVE",
"129 675 CURVE",
"128.333 683.667 OFFCURVE",
"124.667 688 OFFCURVE",
"118 688 CURVE SMOOTH",
"110.667 688 OFFCURVE",
"101.667 685 OFFCURVE",
"91 679 CURVE SMOOTH",
"77.667 671 OFFCURVE",
"71 662 OFFCURVE",
"71 652 CURVE SMOOTH",
"71 647.333 OFFCURVE",
"70.333 642.333 OFFCURVE",
"69 637 CURVE",
"65 632.333 OFFCURVE",
"57.333 629.667 OFFCURVE",
"46 629 CURVE SMOOTH",
"32 628.333 OFFCURVE",
"23.667 627.333 OFFCURVE",
"21 626 CURVE",
"15 619.333 OFFCURVE",
"12 612.667 OFFCURVE",
"12 606 CURVE SMOOTH",
"12 600.667 OFFCURVE",
"17 594.667 OFFCURVE",
"27 588 CURVE",
"29.667 586 OFFCURVE",
"38.333 583.667 OFFCURVE",
"53 581 CURVE",
"62.333 579.667 OFFCURVE",
"67 574 OFFCURVE",
"67 564 CURVE SMOOTH",
"67 516.667 OFFCURVE",
"63.167 446.5 OFFCURVE",
"55.5 353.5 CURVE SMOOTH",
"47.833 260.5 OFFCURVE",
"44 190.333 OFFCURVE",
"44 143 CURVE SMOOTH",
"44 83 OFFCURVE",
"51 34.667 OFFCURVE",
"65 -2 CURVE",
"84.333 -12.667 OFFCURVE",
"94.333 -18 OFFCURVE",
"95 -18 CURVE SMOOTH",
"103 -18 OFFCURVE",
"123 -3.333 OFFCURVE",
"123 6 CURVE SMOOTH",
"123 8.667 OFFCURVE",
"121.167 12 OFFCURVE",
"117.5 16 CURVE SMOOTH",
"113.833 20 OFFCURVE",
"110.667 24 OFFCURVE",
"108 28 CURVE SMOOTH",
"103.333 35.333 OFFCURVE",
"101 70.333 OFFCURVE",
"101 133 CURVE SMOOTH",
"101 209 OFFCURVE",
"103.333 258 OFFCURVE",
"108 280 CURVE",
"180 302 OFFCURVE",
"244.667 313 OFFCURVE",
"302 313 CURVE SMOOTH",
"311.639 313 OFFCURVE",
"344.249 315.248 OFFCURVE",
"348 324 CURVE",
"345 349 LINE",
"337 361 OFFCURVE",
"326.333 367.667 OFFCURVE",
"313 369 CURVE",
"326.333 367.667 OFFCURVE",
"312.333 367 OFFCURVE",
"271 367 CURVE SMOOTH",
"242.333 367 OFFCURVE",
"196 359 OFFCURVE",
"132 343 CURVE",
"128.667 342.333 OFFCURVE",
"125.667 342 OFFCURVE",
"123 342 CURVE SMOOTH",
"113 342 OFFCURVE",
"108 349.333 OFFCURVE",
"108 364 CURVE SMOOTH",
"108 373.333 OFFCURVE",
"108.667 384.667 OFFCURVE",
"110 398 CURVE SMOOTH",
"131 586 LINE",
"150.333 588 OFFCURVE",
"187.667 596 OFFCURVE",
"243 610 CURVE SMOOTH",
"289.667 621.333 OFFCURVE",
"327 627 OFFCURVE",
"355 627 CURVE SMOOTH",
"359.667 627 OFFCURVE",
"366 626.5 OFFCURVE",
"374 625.5 CURVE SMOOTH",
"382 624.5 OFFCURVE",
"388 624 OFFCURVE",
"392 624 CURVE SMOOTH",
"401.333 624 OFFCURVE",
"409.667 627.667 OFFCURVE",
"417 635 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 76 76 64 77 0 70 20 14 2 68 66 52 46 36 23 12 0 31 5 43 27 6 18 5 6 74 74 3 64 3 39 1 1 52 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
52 76 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
76 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 410;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"463 217 OFFCURVE",
"420.333 252 OFFCURVE",
"367 252 CURVE SMOOTH",
"353 252 OFFCURVE",
"327 248.667 OFFCURVE",
"289 242 CURVE SMOOTH",
"249 235.333 OFFCURVE",
"224.667 229.333 OFFCURVE",
"216 224 CURVE SMOOTH",
"207.333 218.667 OFFCURVE",
"203 212 OFFCURVE",
"203 204 CURVE SMOOTH",
"203 168.667 OFFCURVE",
"214 151 OFFCURVE",
"236 151 CURVE",
"234.667 151 OFFCURVE",
"247.667 157.5 OFFCURVE",
"275 170.5 CURVE SMOOTH",
"302.333 183.5 OFFCURVE",
"339 190 OFFCURVE",
"385 190 CURVE SMOOTH",
"407.667 190 OFFCURVE",
"419 182.667 OFFCURVE",
"419 168 CURVE SMOOTH",
"419 158.667 OFFCURVE",
"412.333 142 OFFCURVE",
"399 118 CURVE SMOOTH",
"371 66 OFFCURVE",
"311.333 33 OFFCURVE",
"250 33 CURVE SMOOTH",
"239.333 33 OFFCURVE",
"225.333 35.667 OFFCURVE",
"208 41 CURVE SMOOTH",
"154 57 OFFCURVE",
"118 91 OFFCURVE",
"100 143 CURVE SMOOTH",
"88 176.333 OFFCURVE",
"82 228 OFFCURVE",
"82 298 CURVE SMOOTH",
"82 371.333 OFFCURVE",
"95 482.333 OFFCURVE",
"143 561 CURVE SMOOTH",
"173.667 611 OFFCURVE",
"209.667 636 OFFCURVE",
"251 636 CURVE SMOOTH",
"291.667 636 OFFCURVE",
"323.667 606 OFFCURVE",
"347 546 CURVE SMOOTH",
"365 500 OFFCURVE",
"374 453.333 OFFCURVE",
"374 406 CURVE SMOOTH",
"374 396 OFFCURVE",
"369.667 382.667 OFFCURVE",
"361 366 CURVE SMOOTH",
"352.333 349.333 OFFCURVE",
"348 339.667 OFFCURVE",
"348 337 CURVE SMOOTH",
"348 321.667 OFFCURVE",
"357.333 314 OFFCURVE",
"376 314 CURVE SMOOTH",
"408.667 314 OFFCURVE",
"425 354.667 OFFCURVE",
"425 436 CURVE SMOOTH",
"425 481.333 OFFCURVE",
"411.667 529.333 OFFCURVE",
"385 580 CURVE SMOOTH",
"357 634 OFFCURVE",
"323.667 668.667 OFFCURVE",
"285 684 CURVE SMOOTH",
"271 689.333 OFFCURVE",
"261 692 OFFCURVE",
"255 692 CURVE SMOOTH",
"177.667 692 OFFCURVE",
"116.667 644.333 OFFCURVE",
"72 549 CURVE SMOOTH",
"37.333 473.667 OFFCURVE",
"20 391.667 OFFCURVE",
"20 303 CURVE SMOOTH",
"20 215 OFFCURVE",
"34 144.667 OFFCURVE",
"62 92 CURVE SMOOTH",
"98.667 23.333 OFFCURVE",
"157 -11 OFFCURVE",
"237 -11 CURVE SMOOTH",
"298.333 -11 OFFCURVE",
"350.333 4 OFFCURVE",
"393 34 CURVE SMOOTH",
"439.667 66.667 OFFCURVE",
"463 110.333 OFFCURVE",
"463 165 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 60 60 64 61 0 50 20 22 52 5 0 45 4 0 34 5 8 25 4 18 29 6 12 57 6 47 40 6 4 12 3 4 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 483;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"533.333 646.667 OFFCURVE",
"528.667 660.333 OFFCURVE",
"520 673 CURVE",
"509.333 687 OFFCURVE",
"497.333 694 OFFCURVE",
"484 694 CURVE SMOOTH",
"458 694 OFFCURVE",
"440 649.333 OFFCURVE",
"430 560 CURVE SMOOTH",
"423.333 503.333 OFFCURVE",
"420.667 446.667 OFFCURVE",
"422 390 CURVE SMOOTH",
"424 302 LINE SMOOTH",
"425.202 268.352 OFFCURVE",
"358.037 263 OFFCURVE",
"332 263 CURVE SMOOTH",
"308 263 OFFCURVE",
"260 256.333 OFFCURVE",
"188 243 CURVE SMOOTH",
"156 236.333 OFFCURVE",
"138.333 233 OFFCURVE",
"135 233 CURVE SMOOTH",
"123.667 233 OFFCURVE",
"118 248 OFFCURVE",
"118 278 CURVE SMOOTH",
"118 407.333 OFFCURVE",
"127 504 OFFCURVE",
"145 568 CURVE SMOOTH",
"145.667 570.667 OFFCURVE",
"149.333 580.333 OFFCURVE",
"156 597 CURVE SMOOTH",
"162 611 OFFCURVE",
"165 620 OFFCURVE",
"165 624 CURVE SMOOTH",
"165 645.333 OFFCURVE",
"140.333 661 OFFCURVE",
"119 661 CURVE SMOOTH",
"102.333 661 OFFCURVE",
"90.333 652 OFFCURVE",
"83 634 CURVE SMOOTH",
"67 592 OFFCURVE",
"59 512.667 OFFCURVE",
"59 396 CURVE SMOOTH",
"59 308 OFFCURVE",
"58.667 249.333 OFFCURVE",
"58 220 CURVE",
"54.667 219.333 OFFCURVE",
"53 219 OFFCURVE",
"53 219 CURVE SMOOTH",
"51.667 219 OFFCURVE",
"49.833 219.333 OFFCURVE",
"47.5 220 CURVE SMOOTH",
"45.167 220.667 OFFCURVE",
"43.333 221 OFFCURVE",
"42 221 CURVE SMOOTH",
"30 221 OFFCURVE",
"15 194.667 OFFCURVE",
"15 184 CURVE SMOOTH",
"15 168 OFFCURVE",
"32.667 157 OFFCURVE",
"50 157 CURVE",
"50 157 OFFCURVE",
"51.333 157.333 OFFCURVE",
"54 158 CURVE",
"61 148 LINE",
"61.667 116.667 OFFCURVE",
"62.667 85.333 OFFCURVE",
"64 54 CURVE SMOOTH",
"67.333 4 OFFCURVE",
"75.333 -21 OFFCURVE",
"88 -21 CURVE SMOOTH",
"98.164 -21 OFFCURVE",
"133.727 -12.886 OFFCURVE",
"138 1 CURVE",
"128 12.333 OFFCURVE",
"121.667 37.667 OFFCURVE",
"119 77 CURVE",
"119 103 OFFCURVE",
"118.667 128.667 OFFCURVE",
"118 154 CURVE",
"136 172 LINE",
"184 182 OFFCURVE",
"232 191.667 OFFCURVE",
"280 201 CURVE SMOOTH",
"336 211.667 OFFCURVE",
"384.667 217.333 OFFCURVE",
"426 218 CURVE",
"424 207.333 OFFCURVE",
"423 196 OFFCURVE",
"423 184 CURVE SMOOTH",
"423 161.333 OFFCURVE",
"436.667 51.667 OFFCURVE",
"438 45 CURVE",
"444.667 18.333 OFFCURVE",
"457 5 OFFCURVE",
"475 5 CURVE SMOOTH",
"491 5 OFFCURVE",
"505 25 OFFCURVE",
"505 41 CURVE SMOOTH",
"505 46.333 OFFCURVE",
"502.667 55.667 OFFCURVE",
"498 69 CURVE SMOOTH",
"492 85.667 OFFCURVE",
"488.667 95.667 OFFCURVE",
"488 99 CURVE",
"481.333 155.667 OFFCURVE",
"478 198.667 OFFCURVE",
"478 228 CURVE",
"490.667 233.333 OFFCURVE",
"500.333 237.333 OFFCURVE",
"507 240 CURVE",
"513 248.667 OFFCURVE",
"516 256.333 OFFCURVE",
"516 263 CURVE SMOOTH",
"516 273.667 OFFCURVE",
"504 281.667 OFFCURVE",
"480 287 CURVE",
"482.667 458.333 OFFCURVE",
"491.333 563 OFFCURVE",
"506 601 CURVE SMOOTH",
"508.667 608.333 OFFCURVE",
"512.333 614.333 OFFCURVE",
"517 619 CURVE SMOOTH",
"517.667 619.667 OFFCURVE",
"523.333 624 OFFCURVE",
"534 632 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 93 93 64 94 0 76 65 28 21 85 84 68 51 37 28 26 18 12 8 6 0 74 33 5 59 57 54 6 46 48 89 3 41 1 1 51 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
51 93 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
93 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 554;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 651.667 OFFCURVE",
"104 670 OFFCURVE",
"92 670 CURVE SMOOTH",
"73.333 670 OFFCURVE",
"40 642.667 OFFCURVE",
"40 624 CURVE SMOOTH",
"33 150 LINE SMOOTH",
"33 132.667 OFFCURVE",
"35.667 103.333 OFFCURVE",
"41 62 CURVE SMOOTH",
"47 15.333 OFFCURVE",
"64.333 -8 OFFCURVE",
"93 -8 CURVE SMOOTH",
"100.333 -8 OFFCURVE",
"110.333 -3.667 OFFCURVE",
"123 5 CURVE",
"103 34.333 OFFCURVE",
"93 96.667 OFFCURVE",
"93 192 CURVE SMOOTH",
"93 308 OFFCURVE",
"100.333 434.333 OFFCURVE",
"115 571 CURVE SMOOTH",
"117.667 601 OFFCURVE",
"120.333 618.667 OFFCURVE",
"123 624 CURVE",
"129 634.667 OFFCURVE",
"132 640.333 OFFCURVE",
"132 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
1 21 21 64 22 0 8 15 5 0 4 5 14 6 5 14 18 3 10 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 21 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
21 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 172;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"469 653.333 OFFCURVE",
"442 668 OFFCURVE",
"422 668 CURVE SMOOTH",
"416 668 OFFCURVE",
"407.5 666.5 OFFCURVE",
"396.5 663.5 CURVE SMOOTH",
"385.5 660.5 OFFCURVE",
"377 659 OFFCURVE",
"371 659 CURVE SMOOTH",
"367 659 OFFCURVE",
"360.833 662 OFFCURVE",
"352.5 668 CURVE SMOOTH",
"344.167 674 OFFCURVE",
"338 677 OFFCURVE",
"334 677 CURVE SMOOTH",
"318.667 677 OFFCURVE",
"309.667 666.667 OFFCURVE",
"307 646 CURVE",
"305 643 LINE",
"288.333 633 OFFCURVE",
"265 623.667 OFFCURVE",
"235 615 CURVE SMOOTH",
"199 605 OFFCURVE",
"175 597.667 OFFCURVE",
"163 593 CURVE",
"148.333 586.333 OFFCURVE",
"141 577.333 OFFCURVE",
"141 566 CURVE SMOOTH",
"141 550 OFFCURVE",
"151 529 OFFCURVE",
"167 529 CURVE SMOOTH",
"169.667 529 OFFCURVE",
"188.333 538.667 OFFCURVE",
"223 558 CURVE SMOOTH",
"257.667 577.333 OFFCURVE",
"284.333 587.333 OFFCURVE",
"303 588 CURVE",
"305 586 LINE",
"304.333 597.333 OFFCURVE",
"304 526 OFFCURVE",
"304 372 CURVE SMOOTH",
"304 150.667 OFFCURVE",
"266.667 40 OFFCURVE",
"192 40 CURVE SMOOTH",
"142.667 40 OFFCURVE",
"91 103.667 OFFCURVE",
"91 153 CURVE SMOOTH",
"91 160.333 OFFCURVE",
"91.333 171.5 OFFCURVE",
"92 186.5 CURVE SMOOTH",
"92.667 201.5 OFFCURVE",
"93 213 OFFCURVE",
"93 221 CURVE SMOOTH",
"93 271.667 OFFCURVE",
"78 297 OFFCURVE",
"48 297 CURVE SMOOTH",
"29.333 297 OFFCURVE",
"20 269.667 OFFCURVE",
"20 215 CURVE SMOOTH",
"20 167 OFFCURVE",
"37.333 118.333 OFFCURVE",
"72 69 CURVE SMOOTH",
"110 15 OFFCURVE",
"152 -12 OFFCURVE",
"198 -12 CURVE SMOOTH",
"252 -12 OFFCURVE",
"292.333 20.333 OFFCURVE",
"319 85 CURVE SMOOTH",
"333.667 122.333 OFFCURVE",
"345.333 178 OFFCURVE",
"354 252 CURVE SMOOTH",
"363.333 334 OFFCURVE",
"368 432 OFFCURVE",
"368 546 CURVE SMOOTH",
"368 551.333 OFFCURVE",
"367.5 559 OFFCURVE",
"366.5 569 CURVE SMOOTH",
"365.5 579 OFFCURVE",
"365 586.667 OFFCURVE",
"365 592 CURVE SMOOTH",
"365 612 OFFCURVE",
"381 622 OFFCURVE",
"413 622 CURVE SMOOTH",
"417 622 OFFCURVE",
"423 621.5 OFFCURVE",
"431 620.5 CURVE SMOOTH",
"439 619.5 OFFCURVE",
"445 619 OFFCURVE",
"449 619 CURVE SMOOTH",
"462.333 619 OFFCURVE",
"469 624.667 OFFCURVE",
"469 636 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 59 59 64 60 0 53 38 35 22 2 34 10 0 41 5 7 24 27 5 20 32 4 12 30 6 16 5 6 56 50 3 16 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 59 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
59 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 419;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"531 75.333 OFFCURVE",
"525.333 80 OFFCURVE",
"514 80 CURVE SMOOTH",
"507.333 80 OFFCURVE",
"497.667 77 OFFCURVE",
"485 71 CURVE SMOOTH",
"472.333 65 OFFCURVE",
"462.333 62 OFFCURVE",
"455 62 CURVE SMOOTH",
"413.667 62 OFFCURVE",
"367.667 104.667 OFFCURVE",
"317 190 CURVE SMOOTH",
"269.667 269.333 OFFCURVE",
"246 332.333 OFFCURVE",
"246 379 CURVE SMOOTH",
"246 389.667 OFFCURVE",
"249.333 402.333 OFFCURVE",
"256 417 CURVE SMOOTH",
"264 435 OFFCURVE",
"292.333 471.333 OFFCURVE",
"341 526 CURVE SMOOTH",
"392.333 582.667 OFFCURVE",
"424 611 OFFCURVE",
"436 611 CURVE SMOOTH",
"437.333 611 OFFCURVE",
"441.333 610.167 OFFCURVE",
"448 608.5 CURVE SMOOTH",
"454.667 606.833 OFFCURVE",
"458.667 606 OFFCURVE",
"460 606 CURVE SMOOTH",
"468 606 OFFCURVE",
"472 610.667 OFFCURVE",
"472 620 CURVE SMOOTH",
"472 627.333 OFFCURVE",
"468.333 636 OFFCURVE",
"461 646 CURVE SMOOTH",
"450.333 660 OFFCURVE",
"444.667 668 OFFCURVE",
"444 670 CURVE",
"441.333 670.667 OFFCURVE",
"438 671 OFFCURVE",
"434 671 CURVE SMOOTH",
"404 671 OFFCURVE",
"342.667 612 OFFCURVE",
"250 494 CURVE SMOOTH",
"243.333 485.333 OFFCURVE",
"186.667 408.667 OFFCURVE",
"80 264 CURVE",
"75 269 LINE",
"75 339.667 OFFCURVE",
"81.333 444.333 OFFCURVE",
"94 583 CURVE SMOOTH",
"96.667 608.333 OFFCURVE",
"100.667 623.333 OFFCURVE",
"106 628 CURVE",
"106.667 628.667 OFFCURVE",
"110.333 630.667 OFFCURVE",
"117 634 CURVE",
"121.667 636 OFFCURVE",
"124 639 OFFCURVE",
"124 643 CURVE SMOOTH",
"124 661.667 OFFCURVE",
"81 687 OFFCURVE",
"61 687 CURVE SMOOTH",
"42.333 687 OFFCURVE",
"33 674.667 OFFCURVE",
"33 650 CURVE SMOOTH",
"33 648 OFFCURVE",
"33.5 645.167 OFFCURVE",
"34.5 641.5 CURVE SMOOTH",
"35.5 637.833 OFFCURVE",
"36 634.667 OFFCURVE",
"36 632 CURVE",
"18 143 LINE SMOOTH",
"16.667 119 OFFCURVE",
"34.667 21.333 OFFCURVE",
"44 0 CURVE SMOOTH",
"52.667 -20.667 OFFCURVE",
"64.333 -31 OFFCURVE",
"79 -31 CURVE SMOOTH",
"87.667 -31 OFFCURVE",
"95.667 -26.667 OFFCURVE",
"103 -18 CURVE",
"101 -1 LINE",
"85.667 25 OFFCURVE",
"78 73 OFFCURVE",
"78 143 CURVE SMOOTH",
"78 160.333 OFFCURVE",
"92.667 190.667 OFFCURVE",
"122 234 CURVE SMOOTH",
"144.667 268 OFFCURVE",
"166 296.333 OFFCURVE",
"186 319 CURVE",
"232.667 227 OFFCURVE",
"268 164 OFFCURVE",
"292 130 CURVE SMOOTH",
"346.667 54 OFFCURVE",
"401.667 16 OFFCURVE",
"457 16 CURVE SMOOTH",
"471.667 16 OFFCURVE",
"487 20.667 OFFCURVE",
"503 30 CURVE",
"521.667 40 OFFCURVE",
"531 52 OFFCURVE",
"531 66 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
1 70 70 64 71 0 68 52 40 8 50 39 23 15 0 61 5 22 31 5 26 37 5 22 12 5 22 55 6 44 65 6 4 44 3 28 3 17 1 1 22 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
22 70 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
70 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 491;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"369 44.667 OFFCURVE",
"355.333 68 OFFCURVE",
"334 68 CURVE SMOOTH",
"314 68 OFFCURVE",
"285.833 62.333 OFFCURVE",
"249.5 51 CURVE SMOOTH",
"213.167 39.667 OFFCURVE",
"185 34 OFFCURVE",
"165 34 CURVE SMOOTH",
"105 34 OFFCURVE",
"75 79 OFFCURVE",
"75 169 CURVE SMOOTH",
"75 216.333 OFFCURVE",
"79.333 287.333 OFFCURVE",
"88 382 CURVE SMOOTH",
"96.667 476.667 OFFCURVE",
"101 547.667 OFFCURVE",
"101 595 CURVE SMOOTH",
"101 649.667 OFFCURVE",
"89.333 677 OFFCURVE",
"66 677 CURVE SMOOTH",
"53.333 677 OFFCURVE",
"43.333 672.667 OFFCURVE",
"36 664 CURVE",
"35.333 656.667 OFFCURVE",
"35 649.667 OFFCURVE",
"35 643 CURVE SMOOTH",
"35 634.333 OFFCURVE",
"35.667 621.667 OFFCURVE",
"37 605 CURVE SMOOTH",
"38.333 588.333 OFFCURVE",
"39 575.667 OFFCURVE",
"39 567 CURVE SMOOTH",
"39 526.333 OFFCURVE",
"35.833 465 OFFCURVE",
"29.5 383 CURVE SMOOTH",
"23.167 301 OFFCURVE",
"20 239.333 OFFCURVE",
"20 198 CURVE SMOOTH",
"20 133.333 OFFCURVE",
"27.667 85.333 OFFCURVE",
"43 54 CURVE SMOOTH",
"64.333 9.333 OFFCURVE",
"103.667 -13 OFFCURVE",
"161 -13 CURVE SMOOTH",
"238.333 -13 OFFCURVE",
"307.667 -1.333 OFFCURVE",
"369 22 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 29 29 64 30 0 26 12 0 21 5 6 18 5 9 23 6 2 16 3 2 1 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 29 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
29 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 379;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"624 681 OFFCURVE",
"602.333 691 OFFCURVE",
"585 691 CURVE SMOOTH",
"547 691 OFFCURVE",
"524 676 OFFCURVE",
"516 646 CURVE SMOOTH",
"502.667 599.333 OFFCURVE",
"491.667 563.333 OFFCURVE",
"483 538 CURVE",
"469 458.667 OFFCURVE",
"450.333 378.667 OFFCURVE",
"427 298 CURVE SMOOTH",
"389.667 172.667 OFFCURVE",
"355.333 110 OFFCURVE",
"324 110 CURVE SMOOTH",
"299.333 110 OFFCURVE",
"267.667 178.667 OFFCURVE",
"229 316 CURVE SMOOTH",
"197 428 OFFCURVE",
"177.333 513.333 OFFCURVE",
"170 572 CURVE SMOOTH",
"166 612.667 OFFCURVE",
"163 643.333 OFFCURVE",
"161 664 CURVE",
"147 678 OFFCURVE",
"135 685 OFFCURVE",
"125 685 CURVE SMOOTH",
"71.667 685 OFFCURVE",
"45 672 OFFCURVE",
"45 646 CURVE SMOOTH",
"45 644.667 OFFCURVE",
"46 641 OFFCURVE",
"48 635 CURVE SMOOTH",
"50 629 OFFCURVE",
"51 620.667 OFFCURVE",
"51 610 CURVE SMOOTH",
"51 560 OFFCURVE",
"48.333 485.5 OFFCURVE",
"43 386.5 CURVE SMOOTH",
"37.667 287.5 OFFCURVE",
"35 213 OFFCURVE",
"35 163 CURVE SMOOTH",
"35 53 OFFCURVE",
"50 -2 OFFCURVE",
"80 -2 CURVE SMOOTH",
"112.667 -2 OFFCURVE",
"128.667 7 OFFCURVE",
"128 25 CURVE",
"113.333 27 OFFCURVE",
"105.333 40 OFFCURVE",
"104 64 CURVE SMOOTH",
"94 293 LINE SMOOTH",
"92 346.333 OFFCURVE",
"97 434.667 OFFCURVE",
"109 558 CURVE",
"115 573 LINE",
"132.333 499 OFFCURVE",
"149.333 424.667 OFFCURVE",
"166 350 CURVE SMOOTH",
"188 256.667 OFFCURVE",
"209.333 183.667 OFFCURVE",
"230 131 CURVE SMOOTH",
"238.667 108.333 OFFCURVE",
"251.333 87.667 OFFCURVE",
"268 69 CURVE SMOOTH",
"288.667 44.333 OFFCURVE",
"308.667 32 OFFCURVE",
"328 32 CURVE SMOOTH",
"371.333 32 OFFCURVE",
"415.667 102.667 OFFCURVE",
"461 244 CURVE",
"485.667 334 OFFCURVE",
"510.333 424 OFFCURVE",
"535 514 CURVE",
"509 191 LINE SMOOTH",
"506.333 159 OFFCURVE",
"506.667 127.333 OFFCURVE",
"510 96 CURVE SMOOTH",
"518 14 OFFCURVE",
"543 -27 OFFCURVE",
"585 -27 CURVE SMOOTH",
"593 -27 OFFCURVE",
"598.667 -23.333 OFFCURVE",
"602 -16 CURVE",
"602 -6 LINE",
"584.667 0 OFFCURVE",
"574.667 26.667 OFFCURVE",
"572 74 CURVE",
"572 72 OFFCURVE",
"572 103.667 OFFCURVE",
"572 169 CURVE SMOOTH",
"572 293 OFFCURVE",
"580.333 426.333 OFFCURVE",
"597 569 CURVE",
"597.667 569.667 OFFCURVE",
"597.667 580.667 OFFCURVE",
"597 602 CURVE",
"597 633.731 OFFCURVE",
"624 644.048 OFFCURVE",
"624 665 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 69 69 64 70 0 32 20 48 38 20 13 12 6 4 0 36 5 42 19 5 10 8 35 5 42 33 5 45 58 6 24 66 3 50 3 40 1 15 1 1 42 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
42 69 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
69 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 649;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"465.333 678.667 OFFCURVE",
"455 682 OFFCURVE",
"445 682 CURVE SMOOTH",
"418.333 682 OFFCURVE",
"396.667 653.667 OFFCURVE",
"380 597 CURVE SMOOTH",
"367.333 553.667 OFFCURVE",
"361 514.333 OFFCURVE",
"361 479 CURVE SMOOTH",
"364 179 LINE SMOOTH",
"364.667 107.667 OFFCURVE",
"356 72 OFFCURVE",
"338 72 CURVE SMOOTH",
"317.333 72 OFFCURVE",
"284 142.667 OFFCURVE",
"238 284 CURVE SMOOTH",
"198.667 406 OFFCURVE",
"174.667 493.667 OFFCURVE",
"166 547 CURVE",
"164 563.667 OFFCURVE",
"162 580 OFFCURVE",
"160 596 CURVE SMOOTH",
"157.333 620.667 OFFCURVE",
"154.667 635.333 OFFCURVE",
"152 640 CURVE SMOOTH",
"141.333 657.333 OFFCURVE",
"122 666 OFFCURVE",
"94 666 CURVE SMOOTH",
"60 666 OFFCURVE",
"43 657.333 OFFCURVE",
"43 640 CURVE SMOOTH",
"43 638.667 OFFCURVE",
"43.5 636.5 OFFCURVE",
"44.5 633.5 CURVE SMOOTH",
"45.5 630.5 OFFCURVE",
"46 628.333 OFFCURVE",
"46 627 CURVE SMOOTH",
"46 498 LINE SMOOTH",
"46 468.667 OFFCURVE",
"41.667 424.5 OFFCURVE",
"33 365.5 CURVE SMOOTH",
"24.333 306.5 OFFCURVE",
"20 262.667 OFFCURVE",
"20 234 CURVE SMOOTH",
"20 222 OFFCURVE",
"20.667 205 OFFCURVE",
"22 183 CURVE SMOOTH",
"23.333 161 OFFCURVE",
"24 144 OFFCURVE",
"24 132 CURVE SMOOTH",
"24 44.667 OFFCURVE",
"37.333 1 OFFCURVE",
"64 1 CURVE SMOOTH",
"78.667 1 OFFCURVE",
"104 17.333 OFFCURVE",
"104 32 CURVE SMOOTH",
"104 33.333 OFFCURVE",
"100.333 39.333 OFFCURVE",
"93 50 CURVE",
"79.667 66.667 OFFCURVE",
"73 128.667 OFFCURVE",
"73 236 CURVE SMOOTH",
"73 272 OFFCURVE",
"76.667 318.667 OFFCURVE",
"84 376 CURVE SMOOTH",
"93.333 451.333 OFFCURVE",
"98.667 498 OFFCURVE",
"100 516 CURVE SMOOTH",
"100.667 528 OFFCURVE",
"104.667 534.667 OFFCURVE",
"112 536 CURVE",
"152 402 OFFCURVE",
"182.167 301.5 OFFCURVE",
"202.5 234.5 CURVE SMOOTH",
"222.833 167.5 OFFCURVE",
"238.667 122 OFFCURVE",
"250 98 CURVE SMOOTH",
"278 37.333 OFFCURVE",
"308.333 7 OFFCURVE",
"341 7 CURVE SMOOTH",
"362.333 7 OFFCURVE",
"380 27 OFFCURVE",
"394 67 CURVE SMOOTH",
"404.667 98.333 OFFCURVE",
"410.333 127.333 OFFCURVE",
"411 154 CURVE SMOOTH",
"414 457 LINE SMOOTH",
"414 483 OFFCURVE",
"417 517.667 OFFCURVE",
"423 561 CURVE SMOOTH",
"430.333 615.667 OFFCURVE",
"438.667 645.667 OFFCURVE",
"448 651 CURVE",
"454 653.667 OFFCURVE",
"460.333 656.333 OFFCURVE",
"467 659 CURVE SMOOTH",
"473.667 661.667 OFFCURVE",
"476.667 666 OFFCURVE",
"476 672 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 63 63 64 64 0 44 17 57 42 27 0 32 4 23 23 4 35 19 4 39 38 56 4 8 54 6 12 61 3 30 1 1 35 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
35 63 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
63 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 456;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"536 423.667 OFFCURVE",
"517.333 499 OFFCURVE",
"480 565 CURVE SMOOTH",
"435.333 644.333 OFFCURVE",
"374.333 684 OFFCURVE",
"297 684 CURVE SMOOTH",
"208.333 684 OFFCURVE",
"138.667 638 OFFCURVE",
"88 546 CURVE SMOOTH",
"45.333 469.333 OFFCURVE",
"24 383 OFFCURVE",
"24 287 CURVE SMOOTH",
"24 122.333 OFFCURVE",
"79.667 22.333 OFFCURVE",
"191 -13 CURVE SMOOTH",
"220.333 -23 OFFCURVE",
"246 -28 OFFCURVE",
"268 -28 CURVE SMOOTH",
"355.333 -28 OFFCURVE",
"423.667 12.667 OFFCURVE",
"473 94 CURVE SMOOTH",
"515 163.333 OFFCURVE",
"536 245 OFFCURVE",
"536 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 264 OFFCURVE",
"465.333 193 OFFCURVE",
"436 135 CURVE SMOOTH",
"398.667 59.667 OFFCURVE",
"342 22 OFFCURVE",
"266 22 CURVE SMOOTH",
"210.667 22 OFFCURVE",
"167.667 38 OFFCURVE",
"137 70 CURVE SMOOTH",
"111 98 OFFCURVE",
"92.333 140.667 OFFCURVE",
"81 198 CURVE SMOOTH",
"75.667 225.333 OFFCURVE",
"73 245.333 OFFCURVE",
"73 258 CURVE SMOOTH",
"73 397.333 OFFCURVE",
"108 500.333 OFFCURVE",
"178 567 CURVE SMOOTH",
"219.333 606.333 OFFCURVE",
"261.333 626 OFFCURVE",
"304 626 CURVE SMOOTH",
"312 626 OFFCURVE",
"321.333 624 OFFCURVE",
"332 620 CURVE SMOOTH",
"430.667 586.667 OFFCURVE",
"480 496 OFFCURVE",
"480 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 34 34 64 35 0 16 5 0 24 4 8 20 6 12 30 6 4 12 3 4 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 34 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
34 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 572;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"469.333 400.667 OFFCURVE",
"471 423.667 OFFCURVE",
"471 447 CURVE SMOOTH",
"471 513.667 OFFCURVE",
"457.667 568.667 OFFCURVE",
"431 612 CURVE SMOOTH",
"398.333 664.667 OFFCURVE",
"350 691 OFFCURVE",
"286 691 CURVE SMOOTH",
"226.667 691 OFFCURVE",
"179 666 OFFCURVE",
"143 616 CURVE",
"127.667 589.333 OFFCURVE",
"112.333 562.667 OFFCURVE",
"97 536 CURVE",
"96 562 LINE",
"96 570.667 OFFCURVE",
"97.833 583 OFFCURVE",
"101.5 599 CURVE SMOOTH",
"105.167 615 OFFCURVE",
"107 627.333 OFFCURVE",
"107 636 CURVE SMOOTH",
"107 658.667 OFFCURVE",
"89.667 683 OFFCURVE",
"67 683 CURVE SMOOTH",
"49.667 683 OFFCURVE",
"41 676.667 OFFCURVE",
"41 664 CURVE SMOOTH",
"41 659.333 OFFCURVE",
"42.167 652 OFFCURVE",
"44.5 642 CURVE SMOOTH",
"46.833 632 OFFCURVE",
"48 624.667 OFFCURVE",
"48 620 CURVE SMOOTH",
"48 525 LINE SMOOTH",
"48 471.036 OFFCURVE",
"37.643 394.469 OFFCURVE",
"38.5 340.5 CURVE SMOOTH",
"39.34 287.583 OFFCURVE",
"30 211.911 OFFCURVE",
"30 159 CURVE SMOOTH",
"30 124.333 OFFCURVE",
"31 90 OFFCURVE",
"33 56 CURVE SMOOTH",
"34.333 34 OFFCURVE",
"37.667 18 OFFCURVE",
"43 8 CURVE",
"51 -5.333 OFFCURVE",
"65 -12 OFFCURVE",
"85 -12 CURVE SMOOTH",
"102.333 -12 OFFCURVE",
"116 5 OFFCURVE",
"116 21 CURVE SMOOTH",
"116 23.667 OFFCURVE",
"112.667 30.833 OFFCURVE",
"106 42.5 CURVE SMOOTH",
"99.333 54.167 OFFCURVE",
"95.667 61 OFFCURVE",
"95 63 CURVE",
"87.667 81.667 OFFCURVE",
"84.333 110.667 OFFCURVE",
"85 150 CURVE SMOOTH",
"85 191 LINE",
"92 196 LINE",
"135.333 158.667 OFFCURVE",
"188.333 138 OFFCURVE",
"251 134 CURVE SMOOTH",
"367 127.333 OFFCURVE",
"438.667 208.667 OFFCURVE",
"466 378 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"422 416.333 OFFCURVE",
"418.333 388 OFFCURVE",
"411 350 CURVE SMOOTH",
"399.667 296 OFFCURVE",
"384.333 256.667 OFFCURVE",
"365 232 CURVE SMOOTH",
"339.667 198.667 OFFCURVE",
"301.667 182 OFFCURVE",
"251 182 CURVE SMOOTH",
"197 182 OFFCURVE",
"157 202 OFFCURVE",
"131 242 CURVE SMOOTH",
"125.667 250.667 OFFCURVE",
"123 256.667 OFFCURVE",
"123 260 CURVE SMOOTH",
"123 262 OFFCURVE",
"123.667 262.667 OFFCURVE",
"125 262 CURVE SMOOTH",
"126.333 261.333 OFFCURVE",
"127.333 262 OFFCURVE",
"128 264 CURVE",
"125.333 266 OFFCURVE",
"122.167 270.333 OFFCURVE",
"118.5 277 CURVE SMOOTH",
"114.833 283.667 OFFCURVE",
"110.667 287 OFFCURVE",
"106 287 CURVE SMOOTH",
"102.667 287 OFFCURVE",
"97.667 285.333 OFFCURVE",
"91 282 CURVE",
"91 335 LINE SMOOTH",
"91 399.667 OFFCURVE",
"108.333 465.333 OFFCURVE",
"143 532 CURVE SMOOTH",
"183.667 610 OFFCURVE",
"233.333 649 OFFCURVE",
"292 649 CURVE SMOOTH",
"337.333 649 OFFCURVE",
"371.667 623.333 OFFCURVE",
"395 572 CURVE SMOOTH",
"413 532.667 OFFCURVE",
"422 487 OFFCURVE",
"422 435 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
1 75 75 64 76 46 59 57 38 4 65 62 57 56 11 29 5 34 20 5 5 34 5 25 6 5 4 18 37 38 4 26 25 48 4 46 16 7 14 52 7 42 69 6 2 42 3 31 3 14 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 75 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
75 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 501;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"551 429.333 OFFCURVE",
"531.667 504 OFFCURVE",
"493 570 CURVE SMOOTH",
"447 648 OFFCURVE",
"385.333 687 OFFCURVE",
"308 687 CURVE SMOOTH",
"219.333 687 OFFCURVE",
"150.333 642.667 OFFCURVE",
"101 554 CURVE SMOOTH",
"60.333 481.333 OFFCURVE",
"40 397 OFFCURVE",
"40 301 CURVE SMOOTH",
"40 91.667 OFFCURVE",
"122.667 -10 OFFCURVE",
"288 -4 CURVE SMOOTH",
"312 -2.667 OFFCURVE",
"327.333 -1.333 OFFCURVE",
"334 0 CURVE",
"336 0.667 OFFCURVE",
"345.667 4 OFFCURVE",
"363 10 CURVE SMOOTH",
"377.667 15.333 OFFCURVE",
"386.667 18 OFFCURVE",
"390 18 CURVE SMOOTH",
"401.333 18 OFFCURVE",
"420.833 -7.167 OFFCURVE",
"448.5 -57.5 CURVE SMOOTH",
"476.167 -107.833 OFFCURVE",
"493.667 -133 OFFCURVE",
"501 -133 CURVE SMOOTH",
"513 -133 OFFCURVE",
"520.667 -125.333 OFFCURVE",
"524 -110 CURVE",
"516.667 -86.667 OFFCURVE",
"503.667 -60.333 OFFCURVE",
"485 -31 CURVE",
"477.667 -18.333 OFFCURVE",
"461 6.333 OFFCURVE",
"435 43 CURVE",
"512.333 107.667 OFFCURVE",
"551 208.667 OFFCURVE",
"551 346 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499 224.667 OFFCURVE",
"469.333 134.667 OFFCURVE",
"410 78 CURVE",
"346.667 141.333 OFFCURVE",
"304.333 173 OFFCURVE",
"283 173 CURVE SMOOTH",
"259 173 OFFCURVE",
"247 164.333 OFFCURVE",
"247 147 CURVE SMOOTH",
"247 139.667 OFFCURVE",
"250.667 133.333 OFFCURVE",
"258 128 CURVE",
"267.333 120.667 OFFCURVE",
"284.333 110.667 OFFCURVE",
"309 98 CURVE SMOOTH",
"329.667 86.667 OFFCURVE",
"345.667 75.667 OFFCURVE",
"357 65 CURVE",
"357 54 LINE",
"327 42.667 OFFCURVE",
"302.667 37.333 OFFCURVE",
"284 38 CURVE SMOOTH",
"220.667 40 OFFCURVE",
"171.333 66 OFFCURVE",
"136 116 CURVE SMOOTH",
"104.667 161.333 OFFCURVE",
"89 219.333 OFFCURVE",
"89 290 CURVE SMOOTH",
"89 333.333 OFFCURVE",
"92.333 372 OFFCURVE",
"99 406 CURVE SMOOTH",
"110.333 466 OFFCURVE",
"131.667 517.667 OFFCURVE",
"163 561 CURVE SMOOTH",
"203 615.667 OFFCURVE",
"251 641.333 OFFCURVE",
"307 638 CURVE SMOOTH",
"371.667 634 OFFCURVE",
"421.333 598.667 OFFCURVE",
"456 532 CURVE SMOOTH",
"484.667 478 OFFCURVE",
"499 416.667 OFFCURVE",
"499 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 56 56 64 57 0 54 11 50 44 43 6 2 37 4 19 27 4 0 52 6 17 41 7 17 31 6 23 8 23 3 17 1 1 19 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
19 56 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
56 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 571;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"531.333 36.333 OFFCURVE",
"516.667 67.333 OFFCURVE",
"486 98 CURVE SMOOTH",
"466 117.333 OFFCURVE",
"432.667 142.333 OFFCURVE",
"386 173 CURVE SMOOTH",
"339.333 203.667 OFFCURVE",
"309.333 225.333 OFFCURVE",
"296 238 CURVE",
"301.333 240.667 OFFCURVE",
"306 242.333 OFFCURVE",
"310 243 CURVE",
"371.333 276.333 OFFCURVE",
"412.667 304.667 OFFCURVE",
"434 328 CURVE SMOOTH",
"468 364 OFFCURVE",
"485 410.667 OFFCURVE",
"485 468 CURVE SMOOTH",
"485 537.333 OFFCURVE",
"454 590 OFFCURVE",
"392 626 CURVE SMOOTH",
"341.333 656.667 OFFCURVE",
"279 672 OFFCURVE",
"205 672 CURVE SMOOTH",
"201.667 672 OFFCURVE",
"197 671.5 OFFCURVE",
"191 670.5 CURVE SMOOTH",
"185 669.5 OFFCURVE",
"180.333 669 OFFCURVE",
"177 669 CURVE SMOOTH",
"171 669 OFFCURVE",
"164.167 672.667 OFFCURVE",
"156.5 680 CURVE SMOOTH",
"148.833 687.333 OFFCURVE",
"141.333 691 OFFCURVE",
"134 691 CURVE SMOOTH",
"129.333 691 OFFCURVE",
"124 690 OFFCURVE",
"118 688 CURVE",
"111.333 680 OFFCURVE",
"107 672.667 OFFCURVE",
"105 666 CURVE",
"95 663.333 OFFCURVE",
"85.333 660.667 OFFCURVE",
"76 658 CURVE SMOOTH",
"62.667 654.667 OFFCURVE",
"56 646 OFFCURVE",
"56 632 CURVE SMOOTH",
"56 620.667 OFFCURVE",
"63.167 615 OFFCURVE",
"77.5 615 CURVE SMOOTH",
"91.833 615 OFFCURVE",
"100.667 614 OFFCURVE",
"104 612 CURVE",
"104.667 596 OFFCURVE",
"102.667 575.667 OFFCURVE",
"98 551 CURVE SMOOTH",
"92.667 518.333 OFFCURVE",
"89.667 498.333 OFFCURVE",
"89 491 CURVE SMOOTH",
"87.667 476.333 OFFCURVE",
"85.667 444 OFFCURVE",
"83 394 CURVE SMOOTH",
"81.667 354 OFFCURVE",
"78.667 322 OFFCURVE",
"74 298 CURVE",
"31.333 286 OFFCURVE",
"10 272.667 OFFCURVE",
"10 258 CURVE SMOOTH",
"10 248 OFFCURVE",
"21.667 239.333 OFFCURVE",
"45 232 CURVE SMOOTH",
"68.333 224.667 OFFCURVE",
"80 216.333 OFFCURVE",
"80 207 CURVE SMOOTH",
"80 90.333 OFFCURVE",
"85 25 OFFCURVE",
"95 11 CURVE SMOOTH",
"105 -3 OFFCURVE",
"119.667 -10 OFFCURVE",
"139 -10 CURVE SMOOTH",
"156.333 -10 OFFCURVE",
"165 -2.333 OFFCURVE",
"165 13 CURVE",
"165 11.667 OFFCURVE",
"159.333 20 OFFCURVE",
"148 38 CURVE",
"145.333 41.333 OFFCURVE",
"142 59.667 OFFCURVE",
"138 93 CURVE SMOOTH",
"133.333 124.333 OFFCURVE",
"131 144.333 OFFCURVE",
"131 153 CURVE SMOOTH",
"131 215 LINE",
"131 215 OFFCURVE",
"150 215 OFFCURVE",
"188 215 CURVE SMOOTH",
"248 215 OFFCURVE",
"484.333 49.667 OFFCURVE",
"495 -5 CURVE",
"497.667 -8.333 OFFCURVE",
"503.667 -10 OFFCURVE",
"513 -10 CURVE SMOOTH",
"520.333 -10 OFFCURVE",
"526 -6.667 OFFCURVE",
"530 0 CURVE",
"530 5 LINE"
);
},
{
closed = 1;
nodes = (
"433 424 OFFCURVE",
"415.667 381.667 OFFCURVE",
"381 345 CURVE SMOOTH",
"350.333 311 OFFCURVE",
"310.333 286.667 OFFCURVE",
"261 272 CURVE SMOOTH",
"243.667 266.667 OFFCURVE",
"230.333 264 OFFCURVE",
"221 264 CURVE SMOOTH",
"209 264 OFFCURVE",
"178.333 273.333 OFFCURVE",
"129 292 CURVE",
"131.667 374.667 OFFCURVE",
"137 435 OFFCURVE",
"145 473 CURVE SMOOTH",
"146.333 479.667 OFFCURVE",
"147.667 501.333 OFFCURVE",
"149 538 CURVE SMOOTH",
"150.333 563.333 OFFCURVE",
"155.667 583.667 OFFCURVE",
"165 599 CURVE SMOOTH",
"178 619 LINE",
"190.667 621.667 OFFCURVE",
"206.667 623 OFFCURVE",
"226 623 CURVE SMOOTH",
"280 623 OFFCURVE",
"326 611.667 OFFCURVE",
"364 589 CURVE SMOOTH",
"410 561.667 OFFCURVE",
"433 522.667 OFFCURVE",
"433 472 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
1 88 88 64 89 0 49 62 38 35 25 17 1 0 80 11 10 4 22 67 4 56 82 6 10 8 71 6 52 52 3 46 3 19 3 1 1 25 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
25 88 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
88 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 550;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"429 118.333 OFFCURVE",
"400.667 155.667 OFFCURVE",
"344 197 CURVE SMOOTH",
"290.667 235.667 OFFCURVE",
"237.667 274 OFFCURVE",
"185 312 CURVE",
"127.667 361.333 OFFCURVE",
"99 413.333 OFFCURVE",
"99 468 CURVE SMOOTH",
"99 549.333 OFFCURVE",
"158.333 632 OFFCURVE",
"237 632 CURVE SMOOTH",
"276.333 632 OFFCURVE",
"305.667 608 OFFCURVE",
"325 560 CURVE SMOOTH",
"339.667 524.667 OFFCURVE",
"347 484 OFFCURVE",
"347 438 CURVE SMOOTH",
"347 428.667 OFFCURVE",
"345 415 OFFCURVE",
"341 397 CURVE SMOOTH",
"337 379 OFFCURVE",
"335 365.333 OFFCURVE",
"335 356 CURVE SMOOTH",
"335 342.667 OFFCURVE",
"352.667 323 OFFCURVE",
"366 323 CURVE SMOOTH",
"392 323 OFFCURVE",
"405 349.667 OFFCURVE",
"405 403 CURVE",
"405 403 OFFCURVE",
"402.333 415 OFFCURVE",
"397 439 CURVE",
"392.333 471.667 OFFCURVE",
"389.667 496 OFFCURVE",
"389 512 CURVE",
"380.333 559.333 OFFCURVE",
"362 599.667 OFFCURVE",
"334 633 CURVE SMOOTH",
"302 671 OFFCURVE",
"263.667 690 OFFCURVE",
"219 690 CURVE SMOOTH",
"166.333 690 OFFCURVE",
"122.667 664.667 OFFCURVE",
"88 614 CURVE SMOOTH",
"56.667 568.667 OFFCURVE",
"41 518.667 OFFCURVE",
"41 464 CURVE SMOOTH",
"41 404.667 OFFCURVE",
"62 352.667 OFFCURVE",
"104 308 CURVE SMOOTH",
"122.667 288 OFFCURVE",
"167.667 252.667 OFFCURVE",
"239 202 CURVE SMOOTH",
"283.667 170 OFFCURVE",
"308.667 152 OFFCURVE",
"314 148 CURVE",
"346.667 120.667 OFFCURVE",
"363 97.667 OFFCURVE",
"363 79 CURVE SMOOTH",
"363 39 OFFCURVE",
"325 19 OFFCURVE",
"249 19 CURVE SMOOTH",
"192.333 19 OFFCURVE",
"151.333 27.333 OFFCURVE",
"126 44 CURVE SMOOTH",
"124 45.333 OFFCURVE",
"111.333 57 OFFCURVE",
"88 79 CURVE SMOOTH",
"71.333 93.667 OFFCURVE",
"56.667 101 OFFCURVE",
"44 101 CURVE SMOOTH",
"28 101 OFFCURVE",
"20 92.667 OFFCURVE",
"20 76 CURVE SMOOTH",
"20 45.333 OFFCURVE",
"50 19.667 OFFCURVE",
"110 -1 CURVE SMOOTH",
"156.667 -17 OFFCURVE",
"199.667 -25 OFFCURVE",
"239 -25 CURVE SMOOTH",
"281.667 -25 OFFCURVE",
"321.667 -17 OFFCURVE",
"359 -1 CURVE SMOOTH",
"405.667 19 OFFCURVE",
"429 47.667 OFFCURVE",
"429 85 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
1 59 59 64 60 0 40 10 8 18 5 0 43 5 38 53 5 26 46 5 38 50 6 30 16 6 4 30 3 4 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 59 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
59 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 449;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"448 656 OFFCURVE",
"409.333 672 OFFCURVE",
"332 672 CURVE SMOOTH",
"296.667 672 OFFCURVE",
"240.333 667.667 OFFCURVE",
"163 659 CURVE SMOOTH",
"70.333 647.667 OFFCURVE",
"20.667 636.333 OFFCURVE",
"14 625 CURVE",
"22 603.667 OFFCURVE",
"39.333 593 OFFCURVE",
"66 593 CURVE SMOOTH",
"78 593 OFFCURVE",
"95.833 595.333 OFFCURVE",
"119.5 600 CURVE SMOOTH",
"143.167 604.667 OFFCURVE",
"161 607 OFFCURVE",
"173 607 CURVE SMOOTH",
"181 607 OFFCURVE",
"185.333 602 OFFCURVE",
"186 592 CURVE",
"185.333 611.333 OFFCURVE",
"185 602 OFFCURVE",
"185 564 CURVE SMOOTH",
"185 532.667 OFFCURVE",
"182.333 490.667 OFFCURVE",
"177 438 CURVE SMOOTH",
"170.333 372 OFFCURVE",
"166.667 330 OFFCURVE",
"166 312 CURVE SMOOTH",
"163.333 274 OFFCURVE",
"162 217.667 OFFCURVE",
"162 143 CURVE SMOOTH",
"162 91.667 OFFCURVE",
"164 58.333 OFFCURVE",
"168 43 CURVE SMOOTH",
"177.333 3 OFFCURVE",
"199.333 -17 OFFCURVE",
"234 -17 CURVE SMOOTH",
"240.667 -17 OFFCURVE",
"244 -12.333 OFFCURVE",
"244 -3 CURVE",
"226 27 OFFCURVE",
"217 85 OFFCURVE",
"217 171 CURVE SMOOTH",
"217 287 OFFCURVE",
"223.333 396 OFFCURVE",
"236 498 CURVE SMOOTH",
"247.693 574.005 OFFCURVE",
"253.357 618 OFFCURVE",
"287 618 CURVE SMOOTH",
"332 618 LINE SMOOTH",
"373.333 618 OFFCURVE",
"399 615.333 OFFCURVE",
"409 610 CURVE",
"425 602.667 OFFCURVE",
"432.333 599 OFFCURVE",
"431 599 CURVE",
"442.333 599 OFFCURVE",
"448 607.333 OFFCURVE",
"448 624 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 42 42 64 43 0 34 31 2 36 29 15 0 21 5 13 13 4 23 7 6 6 40 40 3 17 1 1 36 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
36 42 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
42 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 474;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"420 661 LINE SMOOTH",
"420 674.333 OFFCURVE",
"392.667 690 OFFCURVE",
"378 690 CURVE SMOOTH",
"364.667 690 OFFCURVE",
"353 668.333 OFFCURVE",
"353 655 CURVE SMOOTH",
"353 653.667 OFFCURVE",
"355.667 647.5 OFFCURVE",
"361 636.5 CURVE SMOOTH",
"366.333 625.5 OFFCURVE",
"369.667 612.333 OFFCURVE",
"371 597 CURVE SMOOTH",
"372.333 585 OFFCURVE",
"372.667 570.333 OFFCURVE",
"372 553 CURVE SMOOTH",
"371.333 525 OFFCURVE",
"371 511 OFFCURVE",
"371 511 CURVE",
"371 387.667 OFFCURVE",
"365 292.667 OFFCURVE",
"353 226 CURVE SMOOTH",
"328.333 92 OFFCURVE",
"281 25 OFFCURVE",
"211 25 CURVE SMOOTH",
"169.667 25 OFFCURVE",
"138 47 OFFCURVE",
"116 91 CURVE SMOOTH",
"98.667 125.667 OFFCURVE",
"90 166 OFFCURVE",
"90 212 CURVE SMOOTH",
"90 342 LINE SMOOTH",
"90 370.667 OFFCURVE",
"96.333 446.667 OFFCURVE",
"109 570 CURVE",
"114.333 600 OFFCURVE",
"119.333 624.333 OFFCURVE",
"124 643 CURVE",
"125.333 656.333 OFFCURVE",
"121.667 664 OFFCURVE",
"113 666 CURVE",
"115 665.333 OFFCURVE",
"103.667 665 OFFCURVE",
"79 665 CURVE SMOOTH",
"64.333 665 OFFCURVE",
"35 646.333 OFFCURVE",
"35 633 CURVE SMOOTH",
"35 627.667 OFFCURVE",
"37 619.5 OFFCURVE",
"41 608.5 CURVE SMOOTH",
"45 597.5 OFFCURVE",
"47 589 OFFCURVE",
"47 583 CURVE SMOOTH",
"47 551 OFFCURVE",
"45 502.5 OFFCURVE",
"41 437.5 CURVE SMOOTH",
"37 372.5 OFFCURVE",
"35 323.667 OFFCURVE",
"35 291 CURVE SMOOTH",
"35 214.333 OFFCURVE",
"37 164.333 OFFCURVE",
"41 141 CURVE SMOOTH",
"49.667 85 OFFCURVE",
"71.333 42.333 OFFCURVE",
"106 13 CURVE SMOOTH",
"134 -11 OFFCURVE",
"174 -23 OFFCURVE",
"226 -23 CURVE SMOOTH",
"269.333 -23 OFFCURVE",
"307.333 -5.667 OFFCURVE",
"340 29 CURVE SMOOTH",
"365.333 56.333 OFFCURVE",
"385.667 110.333 OFFCURVE",
"401 191 CURVE SMOOTH",
"413.667 255.667 OFFCURVE",
"420 315 OFFCURVE",
"420 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
1 52 52 64 53 0 23 40 25 45 5 0 30 29 5 18 12 27 5 15 38 4 51 0 34 6 6 48 3 6 1 1 12 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
12 52 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
52 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 455;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"454 658 OFFCURVE",
"451.333 671 OFFCURVE",
"446 685 CURVE SMOOTH",
"440 701.667 OFFCURVE",
"431.667 710 OFFCURVE",
"421 710 CURVE SMOOTH",
"413 710 OFFCURVE",
"402.333 700.333 OFFCURVE",
"389 681 CURVE",
"401.667 672.333 OFFCURVE",
"408 655.333 OFFCURVE",
"408 630 CURVE SMOOTH",
"408 560 OFFCURVE",
"395.333 471 OFFCURVE",
"370 363 CURVE SMOOTH",
"343.333 251 OFFCURVE",
"314 166.667 OFFCURVE",
"282 110 CURVE SMOOTH",
"262 73.333 OFFCURVE",
"244.333 55 OFFCURVE",
"229 55 CURVE SMOOTH",
"205.667 55 OFFCURVE",
"176.667 137.333 OFFCURVE",
"142 302 CURVE SMOOTH",
"120 404.667 OFFCURVE",
"109 473.667 OFFCURVE",
"109 509 CURVE SMOOTH",
"109 522.333 OFFCURVE",
"109.833 541.833 OFFCURVE",
"111.5 567.5 CURVE SMOOTH",
"113.167 593.167 OFFCURVE",
"114 612.667 OFFCURVE",
"114 626 CURVE SMOOTH",
"114 648.667 OFFCURVE",
"91.667 670 OFFCURVE",
"69 670 CURVE SMOOTH",
"51.667 670 OFFCURVE",
"20 653 OFFCURVE",
"20 637 CURVE SMOOTH",
"20 633.667 OFFCURVE",
"21.833 630 OFFCURVE",
"25.5 626 CURVE SMOOTH",
"29.167 622 OFFCURVE",
"31 619.667 OFFCURVE",
"31 619 CURVE",
"40.333 587 OFFCURVE",
"46.667 560.667 OFFCURVE",
"50 540 CURVE SMOOTH",
"74 380 OFFCURVE",
"89.333 283.333 OFFCURVE",
"96 250 CURVE SMOOTH",
"125.333 102 OFFCURVE",
"156.667 19 OFFCURVE",
"190 1 CURVE SMOOTH",
"206.667 -7.667 OFFCURVE",
"229.333 -12 OFFCURVE",
"258 -12 CURVE SMOOTH",
"290 -12 OFFCURVE",
"326 50.667 OFFCURVE",
"366 176 CURVE SMOOTH",
"395.333 267.333 OFFCURVE",
"416 347.333 OFFCURVE",
"428 416 CURVE SMOOTH",
"445.333 518 OFFCURVE",
"454 594.667 OFFCURVE",
"454 646 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
1 44 44 64 45 0 30 38 26 23 17 36 4 0 40 20 3 6 1 1 17 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
17 44 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
44 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 474;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"568 504.333 OFFCURVE",
"564.667 549.333 OFFCURVE",
"558 596 CURVE SMOOTH",
"548 663.333 OFFCURVE",
"533.667 697 OFFCURVE",
"515 697 CURVE SMOOTH",
"497 697 OFFCURVE",
"488 679.333 OFFCURVE",
"488 644 CURVE SMOOTH",
"488 634 OFFCURVE",
"491.333 620 OFFCURVE",
"498 602 CURVE SMOOTH",
"503.333 587.333 OFFCURVE",
"508.667 573 OFFCURVE",
"514 559 CURVE",
"520.667 537.667 OFFCURVE",
"524 508.667 OFFCURVE",
"524 472 CURVE SMOOTH",
"524 406.667 OFFCURVE",
"516 331 OFFCURVE",
"500 245 CURVE SMOOTH",
"478 127 OFFCURVE",
"449 68 OFFCURVE",
"413 68 CURVE SMOOTH",
"387 68 OFFCURVE",
"367.333 116.667 OFFCURVE",
"354 214 CURVE SMOOTH",
"345.333 281.333 OFFCURVE",
"341 347 OFFCURVE",
"341 411 CURVE SMOOTH",
"341 453 OFFCURVE",
"347 483.667 OFFCURVE",
"359 503 CURVE",
"357.667 529.667 OFFCURVE",
"326 554 OFFCURVE",
"298 554 CURVE SMOOTH",
"288.667 554 OFFCURVE",
"265 536.333 OFFCURVE",
"265 527 CURVE SMOOTH",
"265 451 OFFCURVE",
"253 355 OFFCURVE",
"229 239 CURVE SMOOTH",
"223 208.333 OFFCURVE",
"214 175.667 OFFCURVE",
"202 141 CURVE SMOOTH",
"185.333 90.333 OFFCURVE",
"170.667 65 OFFCURVE",
"158 65 CURVE SMOOTH",
"133.333 65 OFFCURVE",
"114.667 126.333 OFFCURVE",
"102 249 CURVE SMOOTH",
"93.333 332.333 OFFCURVE",
"89 415.667 OFFCURVE",
"89 499 CURVE",
"89 499 OFFCURVE",
"88.667 511.667 OFFCURVE",
"88 537 CURVE SMOOTH",
"87.333 556.333 OFFCURVE",
"87.333 572 OFFCURVE",
"88 584 CURVE SMOOTH",
"90.667 616 OFFCURVE",
"96 624 OFFCURVE",
"116 628 CURVE",
"116 655 LINE",
"100 663.667 OFFCURVE",
"86.333 668 OFFCURVE",
"75 668 CURVE SMOOTH",
"44.333 668 OFFCURVE",
"29 647.667 OFFCURVE",
"29 607 CURVE SMOOTH",
"29 500.333 OFFCURVE",
"33.333 395 OFFCURVE",
"42 291 CURVE SMOOTH",
"55.333 138.333 OFFCURVE",
"75.333 47.667 OFFCURVE",
"102 19 CURVE SMOOTH",
"119.333 0.333 OFFCURVE",
"138 -9 OFFCURVE",
"158 -9 CURVE SMOOTH",
"194 -9 OFFCURVE",
"225.333 53 OFFCURVE",
"252 177 CURVE SMOOTH",
"276.667 289 OFFCURVE",
"290 349 OFFCURVE",
"292 357 CURVE",
"295.333 344.333 OFFCURVE",
"300.333 302.333 OFFCURVE",
"307 231 CURVE SMOOTH",
"313 163.667 OFFCURVE",
"322 114 OFFCURVE",
"334 82 CURVE SMOOTH",
"351.333 33.333 OFFCURVE",
"378.333 9 OFFCURVE",
"415 9 CURVE SMOOTH",
"465.667 9 OFFCURVE",
"506 73.333 OFFCURVE",
"536 202 CURVE SMOOTH",
"557.333 295.333 OFFCURVE",
"568 381.667 OFFCURVE",
"568 461 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 70 70 64 71 0 45 22 10 64 48 30 28 25 24 20 42 5 50 58 4 0 36 6 14 54 6 4 66 3 14 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 70 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
70 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 599;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"554 49 OFFCURVE",
"551.333 55.333 OFFCURVE",
"546 62 CURVE",
"535 62 LINE",
"531.667 56 OFFCURVE",
"527 53 OFFCURVE",
"521 53 CURVE SMOOTH",
"503 53 OFFCURVE",
"463.667 97.333 OFFCURVE",
"403 186 CURVE SMOOTH",
"353 258.667 OFFCURVE",
"317.667 315.333 OFFCURVE",
"297 356 CURVE",
"486 660 LINE",
"484.667 674.667 OFFCURVE",
"473.667 691 OFFCURVE",
"459 691 CURVE SMOOTH",
"446.333 691 OFFCURVE",
"434.333 683.333 OFFCURVE",
"423 668 CURVE",
"405.667 637.333 OFFCURVE",
"393.667 613.667 OFFCURVE",
"387 597 CURVE",
"336.333 511 OFFCURVE",
"297.333 447.333 OFFCURVE",
"270 406 CURVE",
"244.667 445.333 OFFCURVE",
"219.333 485 OFFCURVE",
"194 525 CURVE",
"164.667 577.667 OFFCURVE",
"150.333 621 OFFCURVE",
"151 655 CURVE",
"148 661 LINE",
"123.333 672.333 OFFCURVE",
"105.667 678 OFFCURVE",
"95 678 CURVE SMOOTH",
"71.667 678 OFFCURVE",
"60 667 OFFCURVE",
"60 645 CURVE SMOOTH",
"60 629 OFFCURVE",
"89.333 578.833 OFFCURVE",
"148 494.5 CURVE SMOOTH",
"206.667 410.167 OFFCURVE",
"236 363 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 343.667 OFFCURVE",
"69 67.333 OFFCURVE",
"49 46 CURVE SMOOTH",
"29.667 26.667 OFFCURVE",
"15 12.333 OFFCURVE",
"5 3 CURVE",
"28.333 -23.667 OFFCURVE",
"47 -37 OFFCURVE",
"61 -37 CURVE SMOOTH",
"71 -37 OFFCURVE",
"81.667 -32.667 OFFCURVE",
"93 -24 CURVE",
"104.333 16.667 OFFCURVE",
"123.333 61.333 OFFCURVE",
"150 110 CURVE SMOOTH",
"174.667 152.667 OFFCURVE",
"199.333 195 OFFCURVE",
"224 237 CURVE SMOOTH",
"246 276.333 OFFCURVE",
"258.167 297.333 OFFCURVE",
"260.5 300 CURVE SMOOTH",
"262.833 302.667 OFFCURVE",
"265.667 303.667 OFFCURVE",
"269 303 CURVE",
"390.333 110.333 OFFCURVE",
"472.333 14 OFFCURVE",
"515 14 CURVE SMOOTH",
"532.333 14 OFFCURVE",
"554 25.667 OFFCURVE",
"554 43 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 52 52 64 53 0 50 49 33 5 43 42 21 16 0 29 5 24 47 7 3 39 3 26 3 14 1 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 52 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
52 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 559;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"464 659.667 OFFCURVE",
"451 669 OFFCURVE",
"427 669 CURVE SMOOTH",
"404.333 669 OFFCURVE",
"370 614.667 OFFCURVE",
"324 506 CURVE SMOOTH",
"272 384.667 OFFCURVE",
"240.333 318 OFFCURVE",
"229 306 CURVE",
"204.333 305.333 OFFCURVE",
"173.667 345 OFFCURVE",
"137 425 CURVE SMOOTH",
"103.667 499 OFFCURVE",
"87 551.333 OFFCURVE",
"87 582 CURVE SMOOTH",
"87 586 OFFCURVE",
"88.5 591.667 OFFCURVE",
"91.5 599 CURVE SMOOTH",
"94.5 606.333 OFFCURVE",
"96 612.333 OFFCURVE",
"96 617 CURVE SMOOTH",
"96 631.667 OFFCURVE",
"92.667 645.667 OFFCURVE",
"86 659 CURVE",
"77.333 673.667 OFFCURVE",
"66 681 OFFCURVE",
"52 681 CURVE SMOOTH",
"30.667 681 OFFCURVE",
"20 667.333 OFFCURVE",
"20 640 CURVE SMOOTH",
"20 597.333 OFFCURVE",
"46 516.333 OFFCURVE",
"98 397 CURVE SMOOTH",
"129.333 325.667 OFFCURVE",
"166.333 273.333 OFFCURVE",
"209 240 CURVE",
"196.333 203.333 OFFCURVE",
"184 166.667 OFFCURVE",
"172 130 CURVE SMOOTH",
"152.667 75.333 OFFCURVE",
"138.5 43.5 OFFCURVE",
"129.5 34.5 CURVE SMOOTH",
"120.5 25.5 OFFCURVE",
"114 19.333 OFFCURVE",
"110 16 CURVE",
"122.667 -21.333 OFFCURVE",
"139.667 -40 OFFCURVE",
"161 -40 CURVE SMOOTH",
"171.667 -40 OFFCURVE",
"183 -35.667 OFFCURVE",
"195 -27 CURVE",
"189.667 29.667 OFFCURVE",
"213.333 125.333 OFFCURVE",
"266 260 CURVE SMOOTH",
"302 352 OFFCURVE",
"344.333 445.667 OFFCURVE",
"393 541 CURVE SMOOTH",
"399 553.667 OFFCURVE",
"411 570.5 OFFCURVE",
"429 591.5 CURVE SMOOTH",
"447 612.5 OFFCURVE",
"459.333 629 OFFCURVE",
"466 641 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
1 39 39 64 40 0 37 33 16 0 7 5 11 26 5 20 29 5 20 22 3 9 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 39 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
39 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 486;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"546 643 OFFCURVE",
"523 684.667 OFFCURVE",
"503 702 CURVE SMOOTH",
"484.333 718 OFFCURVE",
"459.667 726 OFFCURVE",
"429 726 CURVE SMOOTH",
"379 726 OFFCURVE",
"310 712 OFFCURVE",
"222 684 CURVE SMOOTH",
"138.667 657.333 OFFCURVE",
"73.667 629.667 OFFCURVE",
"27 601 CURVE",
"27 590 LINE SMOOTH",
"26.333 556.667 OFFCURVE",
"34.667 540 OFFCURVE",
"52 540 CURVE SMOOTH",
"55.333 540 OFFCURVE",
"70 548.667 OFFCURVE",
"96 566 CURVE SMOOTH",
"112 576 OFFCURVE",
"128 586.333 OFFCURVE",
"144 597 CURVE",
"220 641 OFFCURVE",
"346.667 678 OFFCURVE",
"432 678 CURVE SMOOTH",
"474 678 OFFCURVE",
"495 664.333 OFFCURVE",
"495 637 CURVE SMOOTH",
"495 618.333 OFFCURVE",
"483 592.667 OFFCURVE",
"459 560 CURVE SMOOTH",
"441.667 534.667 OFFCURVE",
"422.667 512 OFFCURVE",
"402 492 CURVE",
"356 453.333 OFFCURVE",
"320.667 425 OFFCURVE",
"296 407 CURVE SMOOTH",
"217.333 346.333 OFFCURVE",
"175.333 313.667 OFFCURVE",
"170 309 CURVE SMOOTH",
"122 269.667 OFFCURVE",
"84 232 OFFCURVE",
"56 196 CURVE SMOOTH",
"32 165.333 OFFCURVE",
"20 132.667 OFFCURVE",
"20 98 CURVE SMOOTH",
"20 57.333 OFFCURVE",
"39.333 26.667 OFFCURVE",
"78 6 CURVE SMOOTH",
"108.667 -10 OFFCURVE",
"146 -18 OFFCURVE",
"190 -18 CURVE",
"190 -18 OFFCURVE",
"216.333 -14.667 OFFCURVE",
"269 -8 CURVE SMOOTH",
"427 11 LINE",
"432 11 LINE",
"437.333 11.667 OFFCURVE",
"445.167 10.167 OFFCURVE",
"455.5 6.5 CURVE SMOOTH",
"465.833 2.833 OFFCURVE",
"473.667 1 OFFCURVE",
"479 1 CURVE SMOOTH",
"487.667 1 OFFCURVE",
"495 5.667 OFFCURVE",
"501 15 CURVE",
"498.333 29 OFFCURVE",
"485.667 40.333 OFFCURVE",
"463 49 CURVE SMOOTH",
"445 55.667 OFFCURVE",
"427.333 59 OFFCURVE",
"410 59 CURVE SMOOTH",
"378 59 OFFCURVE",
"329.833 55.167 OFFCURVE",
"265.5 47.5 CURVE SMOOTH",
"201.167 39.833 OFFCURVE",
"153 36 OFFCURVE",
"121 36 CURVE SMOOTH",
"87.667 36 OFFCURVE",
"71 49.667 OFFCURVE",
"71 77 CURVE SMOOTH",
"71 115.667 OFFCURVE",
"112 173.667 OFFCURVE",
"194 251 CURVE",
"270.667 317.667 OFFCURVE",
"347 384.333 OFFCURVE",
"423 451 CURVE SMOOTH",
"505 527 OFFCURVE",
"546 583 OFFCURVE",
"546 619 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 61 61 64 62 0 49 21 20 11 52 51 15 6 4 28 40 4 0 8 6 24 42 6 56 56 24 1 17 1 1 28 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
28 61 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
61 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 566;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"188 -101.333 OFFCURVE",
"192 -93.333 OFFCURVE",
"192 -86 CURVE SMOOTH",
"192 -78 OFFCURVE",
"188 -72.333 OFFCURVE",
"180 -69 CURVE",
"96 -70 LINE",
"83.333 -34 OFFCURVE",
"77 80.333 OFFCURVE",
"77 273 CURVE SMOOTH",
"77 428 LINE SMOOTH",
"77 520 OFFCURVE",
"83.667 592.333 OFFCURVE",
"97 645 CURVE",
"161 645 LINE",
"175 646.333 OFFCURVE",
"182 651.667 OFFCURVE",
"182 661 CURVE SMOOTH",
"182 673 OFFCURVE",
"167.667 688.667 OFFCURVE",
"161 686 CURVE",
"74 686 LINE",
"68.667 688.667 OFFCURVE",
"63 690 OFFCURVE",
"57 690 CURVE SMOOTH",
"32.333 690 OFFCURVE",
"20 682 OFFCURVE",
"20 666 CURVE SMOOTH",
"20 660 OFFCURVE",
"22 651.333 OFFCURVE",
"26 640 CURVE SMOOTH",
"30 628.667 OFFCURVE",
"32 620 OFFCURVE",
"32 614 CURVE SMOOTH",
"29.333 286 OFFCURVE",
"28 92.667 OFFCURVE",
"28 34 CURVE SMOOTH",
"28 -66 OFFCURVE",
"42.667 -116 OFFCURVE",
"72 -116 CURVE SMOOTH",
"77.333 -116 OFFCURVE",
"82.667 -114.333 OFFCURVE",
"88 -111 CURVE",
"180 -110 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 31 31 64 32 29 29 18 5 10 5 4 23 24 23 4 7 26 27 7 1 0 21 20 7 14 3 15 14 3 12 3 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 31 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
31 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 188;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"379 12 OFFCURVE",
"364.333 28 OFFCURVE",
"355 40 CURVE",
"317.667 100 OFFCURVE",
"279 178 OFFCURVE",
"239 274 CURVE SMOOTH",
"206.333 355.333 OFFCURVE",
"174 436.667 OFFCURVE",
"142 518 CURVE SMOOTH",
"126.667 554.667 OFFCURVE",
"116.667 584 OFFCURVE",
"112 606 CURVE SMOOTH",
"107.333 628 OFFCURVE",
"104 644.667 OFFCURVE",
"102 656 CURVE",
"94 674.667 OFFCURVE",
"67.333 690 OFFCURVE",
"46 690 CURVE SMOOTH",
"37.333 690 OFFCURVE",
"28.667 685.333 OFFCURVE",
"20 676 CURVE",
"34 648.667 OFFCURVE",
"45 628 OFFCURVE",
"53 614 CURVE",
"240 165 LINE SMOOTH",
"290.667 44.333 OFFCURVE",
"330.667 -16 OFFCURVE",
"360 -16 CURVE SMOOTH",
"372.667 -16 OFFCURVE",
"379 -10.667 OFFCURVE",
"379 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 22 22 64 23 0 7 0 9 3 2 1 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 22 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
22 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 399;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"168 -86 OFFCURVE",
"166 -77.5 OFFCURVE",
"162 -66.5 CURVE SMOOTH",
"158 -55.5 OFFCURVE",
"156 -47 OFFCURVE",
"156 -41 CURVE SMOOTH",
"158.667 287 OFFCURVE",
"160 480.333 OFFCURVE",
"160 539 CURVE SMOOTH",
"160 639.667 OFFCURVE",
"145.333 690 OFFCURVE",
"116 690 CURVE SMOOTH",
"110.667 690 OFFCURVE",
"105.333 688.333 OFFCURVE",
"100 685 CURVE",
"20 685 LINE",
"6.667 679 OFFCURVE",
"0 672.333 OFFCURVE",
"0 665 CURVE SMOOTH",
"0 656.333 OFFCURVE",
"6.667 649.333 OFFCURVE",
"20 644 CURVE",
"92 644 LINE",
"104.667 607.333 OFFCURVE",
"111 526.333 OFFCURVE",
"111 401 CURVE SMOOTH",
"111 246 LINE SMOOTH",
"111 87.333 OFFCURVE",
"104.333 -18.333 OFFCURVE",
"91 -71 CURVE",
"27 -71 LINE",
"17 -79.667 OFFCURVE",
"12 -87.667 OFFCURVE",
"12 -95 CURVE SMOOTH",
"12 -103 OFFCURVE",
"17 -108.667 OFFCURVE",
"27 -112 CURVE",
"114 -112 LINE",
"119.333 -114.667 OFFCURVE",
"125 -116 OFFCURVE",
"131 -116 CURVE SMOOTH",
"155.667 -116 OFFCURVE",
"168 -108 OFFCURVE",
"168 -92 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 30 30 64 31 0 25 18 0 5 7 13 12 4 27 10 9 7 5 4 16 15 7 20 2 23 3 21 20 3 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 30 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
30 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 188;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"268 722 OFFCURVE",
"267.667 723.667 OFFCURVE",
"267 727 CURVE",
"192.333 793.667 OFFCURVE",
"151.333 827 OFFCURVE",
"144 827 CURVE SMOOTH",
"136 827 OFFCURVE",
"95 793.667 OFFCURVE",
"21 727 CURVE",
"20.333 723.667 OFFCURVE",
"20 722 OFFCURVE",
"20 722 CURVE",
"20 716.667 OFFCURVE",
"28 702 OFFCURVE",
"32 702 CURVE SMOOTH",
"44.667 702 OFFCURVE",
"65.333 715.333 OFFCURVE",
"94 742 CURVE",
"118 758 OFFCURVE",
"134.667 767 OFFCURVE",
"144 769 CURVE",
"149.333 766.333 OFFCURVE",
"157.667 762.667 OFFCURVE",
"169 758 CURVE",
"177 755.333 OFFCURVE",
"185.333 750 OFFCURVE",
"194 742 CURVE SMOOTH",
"222.667 715.333 OFFCURVE",
"243.333 702 OFFCURVE",
"256 702 CURVE SMOOTH",
"260 702 OFFCURVE",
"268 716.667 OFFCURVE",
"268 722 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 24 24 64 25 0 16 0 9 6 20 20 13 3 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 288;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"467 -94 LINE",
"0 -94 LINE",
"0 -129 LINE",
"467 -129 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 4 4 64 5 0 3 2 1 0 3 2 1 0 1 1 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
4 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 467;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"176 702 OFFCURVE",
"176 703.667 OFFCURVE",
"176 707 CURVE",
"108 779.667 OFFCURVE",
"66.333 816 OFFCURVE",
"51 816 CURVE SMOOTH",
"40.333 816 OFFCURVE",
"20 788 OFFCURVE",
"20 776 CURVE",
"23 769 LINE",
"34.333 765 OFFCURVE",
"43.667 762 OFFCURVE",
"51 760 CURVE",
"67 752.667 OFFCURVE",
"84.333 740 OFFCURVE",
"103 722 CURVE SMOOTH",
"130.333 695.333 OFFCURVE",
"150.667 682 OFFCURVE",
"164 682 CURVE SMOOTH",
"169.333 682 OFFCURVE",
"176 696.667 OFFCURVE",
"176 702 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 17 17 64 18 0 15 10 0 0 7 3 13 3 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
17 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 196;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"333 295 LINE SMOOTH",
"332.333 331.667 OFFCURVE",
"315 363 OFFCURVE",
"281 389 CURVE SMOOTH",
"249 413 OFFCURVE",
"214 425 OFFCURVE",
"176 425 CURVE SMOOTH",
"151.333 425 OFFCURVE",
"130.667 416 OFFCURVE",
"114 398 CURVE SMOOTH",
"87.333 368.667 OFFCURVE",
"60 300.333 OFFCURVE",
"60 263 CURVE SMOOTH",
"60 251 OFFCURVE",
"80.667 230 OFFCURVE",
"94 230 CURVE SMOOTH",
"99.333 230 OFFCURVE",
"102 232.667 OFFCURVE",
"102 238 CURVE SMOOTH",
"102 238.667 OFFCURVE",
"102 240.333 OFFCURVE",
"102 243 CURVE SMOOTH",
"102 245.667 OFFCURVE",
"102 247.667 OFFCURVE",
"102 249 CURVE SMOOTH",
"102 275.667 OFFCURVE",
"111.667 303.667 OFFCURVE",
"131 333 CURVE SMOOTH",
"152.333 365 OFFCURVE",
"175.667 381 OFFCURVE",
"201 381 CURVE SMOOTH",
"236.333 381 OFFCURVE",
"260 362 OFFCURVE",
"272 324 CURVE SMOOTH",
"279.333 301.333 OFFCURVE",
"283 267.667 OFFCURVE",
"283 223 CURVE SMOOTH",
"283 213 OFFCURVE",
"281 206 OFFCURVE",
"277 202 CURVE",
"178 202 LINE SMOOTH",
"148.667 202 OFFCURVE",
"116.667 190 OFFCURVE",
"82 166 CURVE SMOOTH",
"44 140 OFFCURVE",
"25 113.333 OFFCURVE",
"25 86 CURVE SMOOTH",
"25 58 OFFCURVE",
"41 34.667 OFFCURVE",
"73 16 CURVE SMOOTH",
"101 -0.667 OFFCURVE",
"130 -9 OFFCURVE",
"160 -9 CURVE SMOOTH",
"203.333 -9 OFFCURVE",
"243.667 4.667 OFFCURVE",
"281 32 CURVE",
"283 28 OFFCURVE",
"284 22.667 OFFCURVE",
"284 16 CURVE SMOOTH",
"284 -8 OFFCURVE",
"284.333 -21 OFFCURVE",
"285 -23 CURVE",
"288.333 -36.333 OFFCURVE",
"298 -43 OFFCURVE",
"314 -43 CURVE SMOOTH",
"328.667 -43 OFFCURVE",
"336 -38.333 OFFCURVE",
"336 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"283 74 OFFCURVE",
"220.333 32 OFFCURVE",
"163 32 CURVE SMOOTH",
"143.667 32 OFFCURVE",
"127 36.333 OFFCURVE",
"113 45 CURVE SMOOTH",
"96.333 55 OFFCURVE",
"88 69 OFFCURVE",
"88 87 CURVE SMOOTH",
"88 116.333 OFFCURVE",
"103.667 138.333 OFFCURVE",
"135 153 CURVE SMOOTH",
"159.667 164.333 OFFCURVE",
"188.333 170 OFFCURVE",
"221 170 CURVE SMOOTH",
"262.333 170 OFFCURVE",
"283 156.667 OFFCURVE",
"283 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 60 60 64 61 0 57 34 47 21 32 29 4 37 53 5 14 6 4 0 8 7 10 19 18 7 49 25 6 42 2 42 2 10 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 361;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"317 260.667 OFFCURVE",
"314.667 291.333 OFFCURVE",
"310 314 CURVE SMOOTH",
"302 348 OFFCURVE",
"286 377 OFFCURVE",
"262 401 CURVE SMOOTH",
"235.333 427.667 OFFCURVE",
"205.667 441 OFFCURVE",
"173 441 CURVE SMOOTH",
"153.667 441 OFFCURVE",
"137.333 435 OFFCURVE",
"124 423 CURVE SMOOTH",
"116.667 416.333 OFFCURVE",
"108 404.667 OFFCURVE",
"98 388 CURVE SMOOTH",
"90 374.667 OFFCURVE",
"83.333 367 OFFCURVE",
"78 365 CURVE",
"78 387.667 OFFCURVE",
"78 400.333 OFFCURVE",
"78 403 CURVE SMOOTH",
"78 427.667 OFFCURVE",
"81.167 464.333 OFFCURVE",
"87.5 513 CURVE SMOOTH",
"93.833 561.667 OFFCURVE",
"97 598.333 OFFCURVE",
"97 623 CURVE SMOOTH",
"97 643 OFFCURVE",
"76.667 667 OFFCURVE",
"58 667 CURVE SMOOTH",
"44 667 LINE",
"25 109 LINE",
"25 103 LINE SMOOTH",
"25 87.667 OFFCURVE",
"26 66.333 OFFCURVE",
"28 39 CURVE SMOOTH",
"30.667 4.333 OFFCURVE",
"34.333 -15.333 OFFCURVE",
"39 -20 CURVE",
"46.333 -29.333 OFFCURVE",
"55.667 -34 OFFCURVE",
"67 -34 CURVE SMOOTH",
"78.333 -34 OFFCURVE",
"84 -29 OFFCURVE",
"84 -19 CURVE SMOOTH",
"84 -15.667 OFFCURVE",
"83.667 -10.833 OFFCURVE",
"83 -4.5 CURVE SMOOTH",
"82.333 1.833 OFFCURVE",
"82 6.667 OFFCURVE",
"82 10 CURVE SMOOTH",
"82 14.667 OFFCURVE",
"82.667 19 OFFCURVE",
"84 23 CURVE",
"100.667 17 OFFCURVE",
"117.333 11 OFFCURVE",
"134 5 CURVE SMOOTH",
"155.333 -2.333 OFFCURVE",
"172.333 -6 OFFCURVE",
"185 -6 CURVE SMOOTH",
"235 -6 OFFCURVE",
"271 21.333 OFFCURVE",
"293 76 CURVE SMOOTH",
"309 115.333 OFFCURVE",
"317 164 OFFCURVE",
"317 222 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"264 173.333 OFFCURVE",
"258.333 135 OFFCURVE",
"247 101 CURVE SMOOTH",
"230.333 53 OFFCURVE",
"205 29 OFFCURVE",
"171 29 CURVE SMOOTH",
"137 29 OFFCURVE",
"111.667 47.333 OFFCURVE",
"95 84 CURVE SMOOTH",
"81.667 111.333 OFFCURVE",
"75 144.333 OFFCURVE",
"75 183 CURVE SMOOTH",
"75 226.333 OFFCURVE",
"83.333 269.333 OFFCURVE",
"100 312 CURVE SMOOTH",
"121.333 366 OFFCURVE",
"150.333 393 OFFCURVE",
"187 393 CURVE SMOOTH",
"217 393 OFFCURVE",
"238.333 369.667 OFFCURVE",
"251 323 CURVE SMOOTH",
"259.667 293 OFFCURVE",
"264 257.333 OFFCURVE",
"264 216 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 60 60 64 61 0 32 8 13 10 27 5 21 32 30 4 21 52 4 22 21 44 4 0 56 7 4 48 6 38 24 23 38 2 15 1 4 1 1 21 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
21 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 342;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"339 113.333 OFFCURVE",
"324 138 OFFCURVE",
"316 138 CURVE SMOOTH",
"310 138 OFFCURVE",
"305.333 135.667 OFFCURVE",
"302 131 CURVE",
"296.667 119 OFFCURVE",
"292.667 109.667 OFFCURVE",
"290 103 CURVE",
"278.667 83 OFFCURVE",
"261.333 64 OFFCURVE",
"238 46 CURVE SMOOTH",
"212 26 OFFCURVE",
"189.333 16 OFFCURVE",
"170 16 CURVE SMOOTH",
"138 16 OFFCURVE",
"114.333 31.667 OFFCURVE",
"99 63 CURVE SMOOTH",
"87.667 87 OFFCURVE",
"82 117 OFFCURVE",
"82 153 CURVE SMOOTH",
"82 199.667 OFFCURVE",
"90.667 249 OFFCURVE",
"108 301 CURVE SMOOTH",
"131.333 368.333 OFFCURVE",
"161.333 402 OFFCURVE",
"198 402 CURVE SMOOTH",
"231.333 402 OFFCURVE",
"248 365 OFFCURVE",
"248 291 CURVE SMOOTH",
"248 259.667 OFFCURVE",
"246.667 239.667 OFFCURVE",
"244 231 CURVE",
"243.333 229.667 OFFCURVE",
"241.667 226.833 OFFCURVE",
"239 222.5 CURVE SMOOTH",
"236.333 218.167 OFFCURVE",
"235 214.667 OFFCURVE",
"235 212 CURVE SMOOTH",
"235 201.333 OFFCURVE",
"254.333 192 OFFCURVE",
"265 192 CURVE SMOOTH",
"287 192 OFFCURVE",
"298 228.667 OFFCURVE",
"298 302 CURVE SMOOTH",
"298 322 OFFCURVE",
"295.667 342.333 OFFCURVE",
"291 363 CURVE SMOOTH",
"283 397.667 OFFCURVE",
"198.667 446 OFFCURVE",
"160 446 CURVE SMOOTH",
"119.333 446 OFFCURVE",
"85.333 406.667 OFFCURVE",
"58 328 CURVE SMOOTH",
"36 264.667 OFFCURVE",
"25 207.333 OFFCURVE",
"25 156 CURVE SMOOTH",
"25 106 OFFCURVE",
"37 65.333 OFFCURVE",
"61 34 CURVE SMOOTH",
"87 -1.333 OFFCURVE",
"124.333 -19 OFFCURVE",
"173 -19 CURVE SMOOTH",
"188.333 -19 OFFCURVE",
"207.667 -15.333 OFFCURVE",
"231 -8 CURVE",
"265.667 1.333 OFFCURVE",
"339 72 OFFCURVE",
"339 104 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
1 49 49 64 50 0 46 20 23 0 5 9 34 5 9 28 4 18 38 7 5 30 6 13 13 2 5 1 1 9 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
9 49 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
49 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 364;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 660.333 OFFCURVE",
"320.333 682 OFFCURVE",
"295 682 CURVE SMOOTH",
"287 682 OFFCURVE",
"280.667 679.667 OFFCURVE",
"276 675 CURVE",
"276 521.667 OFFCURVE",
"272.667 422.333 OFFCURVE",
"266 377 CURVE",
"238.667 402.333 OFFCURVE",
"223 416.333 OFFCURVE",
"219 419 CURVE",
"199.667 433 OFFCURVE",
"180.667 440 OFFCURVE",
"162 440 CURVE SMOOTH",
"118 440 OFFCURVE",
"82.667 400.667 OFFCURVE",
"56 322 CURVE SMOOTH",
"35.333 262 OFFCURVE",
"25 204 OFFCURVE",
"25 148 CURVE SMOOTH",
"25 102 OFFCURVE",
"35 65 OFFCURVE",
"55 37 CURVE SMOOTH",
"78.333 4.333 OFFCURVE",
"111.667 -12 OFFCURVE",
"155 -12 CURVE SMOOTH",
"191 -12 OFFCURVE",
"228.667 13 OFFCURVE",
"268 63 CURVE",
"272 35.667 OFFCURVE",
"274 15.333 OFFCURVE",
"274 2 CURVE",
"278 -11.333 OFFCURVE",
"298.667 -28 OFFCURVE",
"312 -28 CURVE SMOOTH",
"319.333 -28 OFFCURVE",
"325.333 -24.333 OFFCURVE",
"330 -17 CURVE",
"317.333 12.333 OFFCURVE",
"311 62.667 OFFCURVE",
"311 134 CURVE SMOOTH",
"311 145.333 OFFCURVE",
"313 204.333 OFFCURVE",
"317 311 CURVE SMOOTH",
"321.667 427.667 OFFCURVE",
"325 496.333 OFFCURVE",
"327 517 CURVE",
"328.333 525 OFFCURVE",
"331.333 544.667 OFFCURVE",
"336 576 CURVE SMOOTH",
"340 600 OFFCURVE",
"342 619.667 OFFCURVE",
"342 635 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"267 213.333 OFFCURVE",
"259 164 OFFCURVE",
"243 118 CURVE SMOOTH",
"221.667 54 OFFCURVE",
"190.333 22 OFFCURVE",
"149 22 CURVE SMOOTH",
"123.667 22 OFFCURVE",
"104.667 36 OFFCURVE",
"92 64 CURVE SMOOTH",
"82.667 85.333 OFFCURVE",
"78 110.667 OFFCURVE",
"78 140 CURVE SMOOTH",
"78 185.333 OFFCURVE",
"86 233.667 OFFCURVE",
"102 285 CURVE SMOOTH",
"122 353 OFFCURVE",
"148.667 387 OFFCURVE",
"182 387 CURVE SMOOTH",
"209.333 387 OFFCURVE",
"231 373 OFFCURVE",
"247 345 CURVE SMOOTH",
"260.333 321.667 OFFCURVE",
"267 295.333 OFFCURVE",
"267 266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 54 54 64 55 0 31 17 10 38 4 8 33 5 0 46 4 23 42 6 27 50 7 19 35 3 27 2 19 1 12 1 1 23 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
23 54 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
54 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 367;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 45 45 64 46 0 29 0 5 6 38 5 6 31 5 13 21 4 6 19 6 10 23 7 4 41 6 16 34 6 10 10 2 4 1 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 45 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
45 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 338;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"348 665 OFFCURVE",
"319.333 689 OFFCURVE",
"262 689 CURVE SMOOTH",
"172.667 689 OFFCURVE",
"123 600.333 OFFCURVE",
"113 423 CURVE SMOOTH",
"111.667 402.333 OFFCURVE",
"110.333 385.333 OFFCURVE",
"109 372 CURVE",
"73 372 LINE SMOOTH",
"46.333 372 OFFCURVE",
"33 362.333 OFFCURVE",
"33 343 CURVE SMOOTH",
"33 328.333 OFFCURVE",
"40.667 321 OFFCURVE",
"56 321 CURVE SMOOTH",
"91.333 321 OFFCURVE",
"108.333 321 OFFCURVE",
"107 321 CURVE",
"104.333 294.333 OFFCURVE",
"103 207.667 OFFCURVE",
"103 61 CURVE SMOOTH",
"103 7 OFFCURVE",
"113 -20 OFFCURVE",
"133 -20 CURVE SMOOTH",
"155.667 -20 OFFCURVE",
"167 -12 OFFCURVE",
"167 4 CURVE SMOOTH",
"167 6.667 OFFCURVE",
"166.333 9.667 OFFCURVE",
"165 13 CURVE",
"157.667 45.667 OFFCURVE",
"154 78 OFFCURVE",
"154 110 CURVE SMOOTH",
"154 182 LINE SMOOTH",
"154 250 OFFCURVE",
"155 297 OFFCURVE",
"157 323 CURVE",
"161 325.667 OFFCURVE",
"171.667 327 OFFCURVE",
"189 327 CURVE SMOOTH",
"211.667 327 OFFCURVE",
"228.333 330 OFFCURVE",
"239 336 CURVE",
"240.333 344.667 OFFCURVE",
"241 351.333 OFFCURVE",
"241 356 CURVE SMOOTH",
"241 370.667 OFFCURVE",
"228.667 378 OFFCURVE",
"204 378 CURVE SMOOTH",
"202 378 OFFCURVE",
"193 378 OFFCURVE",
"177 378 CURVE",
"169.667 378.667 OFFCURVE",
"163.667 378.667 OFFCURVE",
"159 378 CURVE",
"159 426 OFFCURVE",
"165 476.333 OFFCURVE",
"177 529 CURVE SMOOTH",
"195 603.667 OFFCURVE",
"220.333 641 OFFCURVE",
"253 641 CURVE SMOOTH",
"287.667 641 OFFCURVE",
"306.333 627 OFFCURVE",
"309 599 CURVE",
"311 597.667 OFFCURVE",
"314 597 OFFCURVE",
"318 597 CURVE SMOOTH",
"338 597 OFFCURVE",
"348 603.667 OFFCURVE",
"348 617 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
1 48 48 64 49 0 42 41 37 35 2 35 29 0 16 13 10 39 13 44 25 24 4 33 42 4 10 10 4 44 6 6 46 20 6 14 10 46 3 31 1 1 39 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
39 48 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
48 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 290;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"317.333 310 OFFCURVE",
"304.667 316.333 OFFCURVE",
"296 319 CURVE",
"287.333 331 OFFCURVE",
"281 340.667 OFFCURVE",
"277 348 CURVE",
"238.333 410.667 OFFCURVE",
"201.667 442 OFFCURVE",
"167 442 CURVE SMOOTH",
"123.667 442 OFFCURVE",
"88.667 399.667 OFFCURVE",
"62 315 CURVE SMOOTH",
"41.333 249.667 OFFCURVE",
"31 188.667 OFFCURVE",
"31 132 CURVE SMOOTH",
"31 86 OFFCURVE",
"40 52.333 OFFCURVE",
"58 31 CURVE SMOOTH",
"75.333 9.667 OFFCURVE",
"118.333 -12 OFFCURVE",
"145 -12 CURVE SMOOTH",
"189.667 -12 OFFCURVE",
"228 9 OFFCURVE",
"260 51 CURVE",
"267.333 25.667 OFFCURVE",
"271 -8.333 OFFCURVE",
"271 -51 CURVE SMOOTH",
"271 -91 OFFCURVE",
"262.667 -123.333 OFFCURVE",
"246 -148 CURVE SMOOTH",
"226.667 -177.333 OFFCURVE",
"198.333 -192 OFFCURVE",
"161 -192 CURVE SMOOTH",
"151 -192 OFFCURVE",
"136 -189.333 OFFCURVE",
"116 -184 CURVE",
"94 -179.333 OFFCURVE",
"80.333 -174.333 OFFCURVE",
"75 -169 CURVE",
"73 -167.667 OFFCURVE",
"68.667 -161.333 OFFCURVE",
"62 -150 CURVE SMOOTH",
"57.333 -142 OFFCURVE",
"52 -138 OFFCURVE",
"46 -138 CURVE SMOOTH",
"32 -138 OFFCURVE",
"25 -147 OFFCURVE",
"25 -165 CURVE SMOOTH",
"25 -185.667 OFFCURVE",
"48.333 -203.333 OFFCURVE",
"95 -218 CURVE SMOOTH",
"131.667 -230 OFFCURVE",
"164 -236 OFFCURVE",
"192 -236 CURVE SMOOTH",
"240 -236 OFFCURVE",
"292 -203 OFFCURVE",
"308 -159 CURVE SMOOTH",
"314.667 -140.333 OFFCURVE",
"318 -110.333 OFFCURVE",
"318 -69 CURVE SMOOTH",
"318 -47.667 OFFCURVE",
"317 -15.667 OFFCURVE",
"315 27 CURVE SMOOTH",
"313 69.667 OFFCURVE",
"312 101.333 OFFCURVE",
"312 122 CURVE SMOOTH",
"312 162.667 OFFCURVE",
"319 216.333 OFFCURVE",
"333 283 CURVE",
"333.667 290.333 OFFCURVE",
"334 296 OFFCURVE",
"334 300 CURVE"
);
},
{
closed = 1;
nodes = (
"274 201.667 OFFCURVE",
"264.667 155.667 OFFCURVE",
"246 107 CURVE SMOOTH",
"222 47 OFFCURVE",
"192 17 OFFCURVE",
"156 17 CURVE SMOOTH",
"108.667 17 OFFCURVE",
"85 58 OFFCURVE",
"85 140 CURVE SMOOTH",
"85 168 OFFCURVE",
"88.333 202 OFFCURVE",
"95 242 CURVE SMOOTH",
"99.667 268.667 OFFCURVE",
"108.667 297.333 OFFCURVE",
"122 328 CURVE SMOOTH",
"140 368.667 OFFCURVE",
"158 389 OFFCURVE",
"176 389 CURVE SMOOTH",
"202 389 OFFCURVE",
"222.667 376.667 OFFCURVE",
"238 352 CURVE SMOOTH",
"250 332 OFFCURVE",
"257 308 OFFCURVE",
"259 280 CURVE",
"269 270.667 OFFCURVE",
"274 259 OFFCURVE",
"274 245 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 67 67 64 68 0 32 18 49 16 4 0 30 4 7 61 4 39 55 6 43 63 7 34 26 6 12 12 43 2 34 1 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 67 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
67 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 359;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"294 200 LINE SMOOTH",
"294 302.667 OFFCURVE",
"265 366 OFFCURVE",
"207 390 CURVE SMOOTH",
"177 402.667 OFFCURVE",
"151.333 409 OFFCURVE",
"130 409 CURVE SMOOTH",
"116.667 409 OFFCURVE",
"97.667 398 OFFCURVE",
"73 376 CURVE",
"71.667 463.333 OFFCURVE",
"71 507.667 OFFCURVE",
"71 509 CURVE SMOOTH",
"71 524.333 OFFCURVE",
"74.167 547 OFFCURVE",
"80.5 577 CURVE SMOOTH",
"86.833 607 OFFCURVE",
"90 630 OFFCURVE",
"90 646 CURVE SMOOTH",
"90 658 OFFCURVE",
"54.333 682 OFFCURVE",
"41 682 CURVE SMOOTH",
"27.667 682 OFFCURVE",
"21 676 OFFCURVE",
"21 664 CURVE SMOOTH",
"21 660 OFFCURVE",
"21.667 656 OFFCURVE",
"23 652 CURVE",
"17 37 LINE SMOOTH",
"17 14.333 OFFCURVE",
"34.333 -12 OFFCURVE",
"57 -12 CURVE SMOOTH",
"73 -12 OFFCURVE",
"81 -6.667 OFFCURVE",
"81 4 CURVE SMOOTH",
"81 14.667 OFFCURVE",
"79.333 30.667 OFFCURVE",
"76 52 CURVE SMOOTH",
"72.667 73.333 OFFCURVE",
"71 89.667 OFFCURVE",
"71 101 CURVE SMOOTH",
"71 229 LINE SMOOTH",
"71 231.667 OFFCURVE",
"71.833 235.833 OFFCURVE",
"73.5 241.5 CURVE SMOOTH",
"75.167 247.167 OFFCURVE",
"76 251.333 OFFCURVE",
"76 254 CURVE SMOOTH",
"76 279.333 OFFCURVE",
"83 304 OFFCURVE",
"97 328 CURVE SMOOTH",
"113 356 OFFCURVE",
"133 370 OFFCURVE",
"157 370 CURVE SMOOTH",
"213.667 370 OFFCURVE",
"242 285.333 OFFCURVE",
"242 116 CURVE SMOOTH",
"242 82 OFFCURVE",
"241.667 36.333 OFFCURVE",
"241 -21 CURVE",
"249 -30.333 OFFCURVE",
"256.667 -35 OFFCURVE",
"264 -35 CURVE SMOOTH",
"278.667 -35 OFFCURVE",
"288.667 -32.333 OFFCURVE",
"294 -27 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 44 44 64 45 0 37 27 25 19 32 5 24 12 5 24 37 5 24 6 4 4 43 0 35 16 15 4 24 8 7 39 29 3 21 1 2 1 1 24 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
24 44 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
44 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 327;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"116 567.667 OFFCURVE",
"93.667 587 OFFCURVE",
"67 587 CURVE SMOOTH",
"44.333 587 OFFCURVE",
"33 575.667 OFFCURVE",
"33 553 CURVE SMOOTH",
"33 529 OFFCURVE",
"58.667 507 OFFCURVE",
"84 507 CURVE SMOOTH",
"105.333 507 OFFCURVE",
"116 518.333 OFFCURVE",
"116 541 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 397.667 OFFCURVE",
"91.333 403.333 OFFCURVE",
"80 408 CURVE",
"71.333 412.667 OFFCURVE",
"63 415 OFFCURVE",
"55 415 CURVE SMOOTH",
"47 415 OFFCURVE",
"38.667 412.667 OFFCURVE",
"30 408 CURVE",
"30 41 LINE SMOOTH",
"30 9.667 OFFCURVE",
"46.333 -6 OFFCURVE",
"79 -6 CURVE SMOOTH",
"83.667 -6 OFFCURVE",
"87.333 -3.333 OFFCURVE",
"90 2 CURVE",
"84 27.333 OFFCURVE",
"81 47.333 OFFCURVE",
"81 62 CURVE SMOOTH",
"81 283 LINE SMOOTH",
"81 295 OFFCURVE",
"83.667 313 OFFCURVE",
"89 337 CURVE SMOOTH",
"94.333 361 OFFCURVE",
"97 379 OFFCURVE",
"97 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
1 27 27 64 28 0 23 16 5 5 0 10 5 20 14 13 4 21 20 2 6 7 7 18 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 27 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
27 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 141;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"153 519.667 OFFCURVE",
"127.667 539 OFFCURVE",
"101 539 CURVE SMOOTH",
"81 539 OFFCURVE",
"71 529 OFFCURVE",
"71 509 CURVE SMOOTH",
"71 502.333 OFFCURVE",
"71 497.667 OFFCURVE",
"71 495 CURVE",
"89.667 471 OFFCURVE",
"104 459 OFFCURVE",
"114 459 CURVE SMOOTH",
"132.667 459 OFFCURVE",
"153 474.333 OFFCURVE",
"153 493 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139.667 398.333 OFFCURVE",
"131.667 402 OFFCURVE",
"123 402 CURVE SMOOTH",
"120.333 402 OFFCURVE",
"108.667 399.333 OFFCURVE",
"88 394 CURVE",
"80 385 LINE",
"84.667 95.667 OFFCURVE",
"87 -50.667 OFFCURVE",
"87 -54 CURVE SMOOTH",
"87 -174.667 OFFCURVE",
"52.333 -235 OFFCURVE",
"-17 -235 CURVE SMOOTH",
"-62.333 -235 OFFCURVE",
"-100.333 -216.333 OFFCURVE",
"-131 -179 CURVE",
"-133 -178.333 OFFCURVE",
"-136.333 -178 OFFCURVE",
"-141 -178 CURVE SMOOTH",
"-155 -178 OFFCURVE",
"-162 -183.667 OFFCURVE",
"-162 -195 CURVE SMOOTH",
"-162 -213.667 OFFCURVE",
"-138.667 -233.333 OFFCURVE",
"-92 -254 CURVE SMOOTH",
"-50 -273.333 OFFCURVE",
"-18 -283 OFFCURVE",
"4 -283 CURVE SMOOTH",
"45.333 -283 OFFCURVE",
"78.667 -263.667 OFFCURVE",
"104 -225 CURVE SMOOTH",
"125.333 -191.667 OFFCURVE",
"136 -153 OFFCURVE",
"136 -109 CURVE SMOOTH",
"136 -63.667 OFFCURVE",
"135 4.167 OFFCURVE",
"133 94.5 CURVE SMOOTH",
"131 184.833 OFFCURVE",
"130 252.667 OFFCURVE",
"130 298 CURVE SMOOTH",
"130 326.667 OFFCURVE",
"135.667 357.667 OFFCURVE",
"147 391 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 40 40 64 41 0 38 27 35 25 12 7 5 5 0 14 4 33 33 4 17 3 6 9 31 6 21 9 21 0 1 25 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
25 40 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
40 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 178;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"376 -28 LINE",
"346.667 -14 OFFCURVE",
"311 16 OFFCURVE",
"269 62 CURVE",
"238.333 98.667 OFFCURVE",
"207.333 135.333 OFFCURVE",
"176 172 CURVE SMOOTH",
"156 196 OFFCURVE",
"146 211 OFFCURVE",
"146 217 CURVE SMOOTH",
"146 233 OFFCURVE",
"174.333 266 OFFCURVE",
"231 316 CURVE SMOOTH",
"280.333 359.333 OFFCURVE",
"317.667 389.333 OFFCURVE",
"343 406 CURVE",
"344 411 LINE",
"345.333 431 OFFCURVE",
"332 453 OFFCURVE",
"312 453 CURVE SMOOTH",
"305.333 453 OFFCURVE",
"283 433.667 OFFCURVE",
"245 395 CURVE SMOOTH",
"221.667 371 OFFCURVE",
"198.333 347 OFFCURVE",
"175 323 CURVE SMOOTH",
"137.667 287 OFFCURVE",
"108.333 262.333 OFFCURVE",
"87 249 CURVE",
"82 254 LINE",
"86 544 LINE SMOOTH",
"86 596 OFFCURVE",
"88.333 631 OFFCURVE",
"93 649 CURVE",
"96.333 664.333 OFFCURVE",
"98 672.333 OFFCURVE",
"98 673 CURVE SMOOTH",
"98 683.667 OFFCURVE",
"80 692 OFFCURVE",
"68 692 CURVE SMOOTH",
"52 692 OFFCURVE",
"25 675.333 OFFCURVE",
"25 662 CURVE SMOOTH",
"25 656 OFFCURVE",
"26 648.333 OFFCURVE",
"28 639 CURVE",
"31.333 627.667 OFFCURVE",
"33 620.333 OFFCURVE",
"33 617 CURVE",
"36.333 594.333 OFFCURVE",
"38 563.333 OFFCURVE",
"38 524 CURVE SMOOTH",
"38 248 LINE SMOOTH",
"38 239.333 OFFCURVE",
"36.833 226.5 OFFCURVE",
"34.5 209.5 CURVE SMOOTH",
"32.167 192.5 OFFCURVE",
"31 179.667 OFFCURVE",
"31 171 CURVE SMOOTH",
"31 31 LINE SMOOTH",
"31 2.333 OFFCURVE",
"44.333 -12 OFFCURVE",
"71 -12 CURVE SMOOTH",
"80.333 -12 OFFCURVE",
"95 -3 OFFCURVE",
"95 5 CURVE SMOOTH",
"95 11 OFFCURVE",
"92.833 19.5 OFFCURVE",
"88.5 30.5 CURVE SMOOTH",
"84.167 41.5 OFFCURVE",
"82 50 OFFCURVE",
"82 56 CURVE SMOOTH",
"82 155 LINE",
"100 179 LINE",
"113.333 171 OFFCURVE",
"128.667 156.667 OFFCURVE",
"146 136 CURVE SMOOTH",
"166 111.333 OFFCURVE",
"180 95.667 OFFCURVE",
"188 89 CURVE",
"190.667 86.333 OFFCURVE",
"214.667 58 OFFCURVE",
"260 4 CURVE SMOOTH",
"296 -38 OFFCURVE",
"321.333 -59 OFFCURVE",
"336 -59 CURVE SMOOTH",
"346 -59 OFFCURVE",
"359.333 -52.333 OFFCURVE",
"376 -39 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 64 64 64 65 0 49 43 10 63 52 15 0 57 5 24 25 24 4 11 37 5 31 42 12 11 4 21 20 2 34 3 18 1 1 31 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
31 64 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
64 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 381;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"99 14 OFFCURVE",
"97.5 19.5 OFFCURVE",
"94.5 26.5 CURVE SMOOTH",
"91.5 33.5 OFFCURVE",
"90 38 OFFCURVE",
"90 40 CURVE",
"81.333 81.333 OFFCURVE",
"76 143 OFFCURVE",
"74 225 CURVE",
"74.667 220.333 OFFCURVE",
"75 283.667 OFFCURVE",
"75 415 CURVE SMOOTH",
"75 496.333 OFFCURVE",
"79 559.667 OFFCURVE",
"87 605 CURVE SMOOTH",
"87.667 608.333 OFFCURVE",
"90 616.667 OFFCURVE",
"94 630 CURVE SMOOTH",
"97.333 640.667 OFFCURVE",
"99 649.333 OFFCURVE",
"99 656 CURVE SMOOTH",
"99 674.667 OFFCURVE",
"75.667 690 OFFCURVE",
"57 690 CURVE SMOOTH",
"48.333 690 OFFCURVE",
"37.667 685.333 OFFCURVE",
"25 676 CURVE",
"25 669.333 OFFCURVE",
"26 659.167 OFFCURVE",
"28 645.5 CURVE SMOOTH",
"30 631.833 OFFCURVE",
"31 621.333 OFFCURVE",
"31 614 CURVE SMOOTH",
"28 165 LINE SMOOTH",
"27.333 44.333 OFFCURVE",
"41.667 -16 OFFCURVE",
"71 -16 CURVE SMOOTH",
"89.667 -16 OFFCURVE",
"99 -7.333 OFFCURVE",
"99 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 26 26 64 27 0 21 13 8 5 0 19 4 4 10 3 2 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 26 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
26 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 124;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"484 178 LINE SMOOTH",
"484 291.333 OFFCURVE",
"463.667 369.667 OFFCURVE",
"423 413 CURVE SMOOTH",
"401 437 OFFCURVE",
"381 449 OFFCURVE",
"363 449 CURVE SMOOTH",
"344.333 449 OFFCURVE",
"328.667 441 OFFCURVE",
"316 425 CURVE SMOOTH",
"308 414.333 OFFCURVE",
"299 396.333 OFFCURVE",
"289 371 CURVE SMOOTH",
"279 345.667 OFFCURVE",
"270.667 329 OFFCURVE",
"264 321 CURVE",
"238.667 395.667 OFFCURVE",
"208.667 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"149.333 433 OFFCURVE",
"128 414.667 OFFCURVE",
"110 378 CURVE",
"97.333 349.333 OFFCURVE",
"84.667 320.667 OFFCURVE",
"72 292 CURVE",
"67 297 LINE",
"67.667 304.333 OFFCURVE",
"70 322.667 OFFCURVE",
"74 352 CURVE",
"78 374.667 OFFCURVE",
"80 393 OFFCURVE",
"80 407 CURVE SMOOTH",
"80 420.333 OFFCURVE",
"62.333 436 OFFCURVE",
"49 436 CURVE SMOOTH",
"33 436 OFFCURVE",
"25 402 OFFCURVE",
"25 334 CURVE SMOOTH",
"25 98 LINE SMOOTH",
"25 89.333 OFFCURVE",
"26.667 73 OFFCURVE",
"30 49 CURVE SMOOTH",
"33.333 22.333 OFFCURVE",
"36.333 7.333 OFFCURVE",
"39 4 CURVE",
"45 -2.667 OFFCURVE",
"52 -6 OFFCURVE",
"60 -6 CURVE SMOOTH",
"76.667 -6 OFFCURVE",
"85 4 OFFCURVE",
"85 24 CURVE SMOOTH",
"85 34.667 OFFCURVE",
"83.667 51.167 OFFCURVE",
"81 73.5 CURVE SMOOTH",
"78.333 95.833 OFFCURVE",
"77 112.667 OFFCURVE",
"77 124 CURVE SMOOTH",
"77 217.333 OFFCURVE",
"102 296 OFFCURVE",
"152 360 CURVE SMOOTH",
"166.667 378.667 OFFCURVE",
"177.667 388 OFFCURVE",
"185 388 CURVE SMOOTH",
"198.333 388 OFFCURVE",
"209.667 367.333 OFFCURVE",
"219 326 CURVE SMOOTH",
"226.333 293.333 OFFCURVE",
"230 266.333 OFFCURVE",
"230 245 CURVE SMOOTH",
"230 44 LINE SMOOTH",
"230 32 OFFCURVE",
"249 10 OFFCURVE",
"261 10 CURVE SMOOTH",
"271.667 10 OFFCURVE",
"291 23.333 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 38.667 OFFCURVE",
"289.5 45.833 OFFCURVE",
"286.5 55.5 CURVE SMOOTH",
"283.5 65.167 OFFCURVE",
"282 72.667 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 178 LINE SMOOTH",
"282 213.333 OFFCURVE",
"289.333 256.667 OFFCURVE",
"304 308 CURVE SMOOTH",
"322.667 372 OFFCURVE",
"344.667 404 OFFCURVE",
"370 404 CURVE SMOOTH",
"412.667 404 OFFCURVE",
"434 301.333 OFFCURVE",
"434 96 CURVE SMOOTH",
"434 83.333 OFFCURVE",
"433.667 65.333 OFFCURVE",
"433 42 CURVE SMOOTH",
"433 16.667 OFFCURVE",
"432.667 -1.333 OFFCURVE",
"432 -12 CURVE",
"440.667 -16.667 OFFCURVE",
"447.333 -19 OFFCURVE",
"452 -19 CURVE SMOOTH",
"459.333 -19 OFFCURVE",
"470 -14.667 OFFCURVE",
"484 -6 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
1 71 71 64 72 0 55 54 50 36 18 5 24 8 4 4 70 0 25 24 4 15 14 33 4 45 44 61 6 21 10 6 66 29 6 59 66 2 59 2 47 2 38 1 2 1 1 44 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
44 71 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
71 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 509;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 146 LINE SMOOTH",
"342 232.667 OFFCURVE",
"329 302.333 OFFCURVE",
"303 355 CURVE SMOOTH",
"287.667 385.667 OFFCURVE",
"262 407.667 OFFCURVE",
"226 421 CURVE SMOOTH",
"210 427 OFFCURVE",
"198 430 OFFCURVE",
"190 430 CURVE SMOOTH",
"169.333 430 OFFCURVE",
"151 420.667 OFFCURVE",
"135 402 CURVE",
"126.333 392.667 OFFCURVE",
"115.667 375.333 OFFCURVE",
"103 350 CURVE SMOOTH",
"93 330 OFFCURVE",
"85 319 OFFCURVE",
"79 317 CURVE",
"78.333 326.333 OFFCURVE",
"78 336 OFFCURVE",
"78 346 CURVE SMOOTH",
"78 353.333 OFFCURVE",
"79 378.667 OFFCURVE",
"81 422 CURVE",
"73.667 431.333 OFFCURVE",
"65.667 436 OFFCURVE",
"57 436 CURVE SMOOTH",
"47.667 436 OFFCURVE",
"25 417.667 OFFCURVE",
"25 407 CURVE SMOOTH",
"25 399 OFFCURVE",
"26.167 386.667 OFFCURVE",
"28.5 370 CURVE SMOOTH",
"30.833 353.333 OFFCURVE",
"32 340.667 OFFCURVE",
"32 332 CURVE SMOOTH",
"32 326 OFFCURVE",
"31.333 317.333 OFFCURVE",
"30 306 CURVE SMOOTH",
"28.667 294.667 OFFCURVE",
"28 286 OFFCURVE",
"28 280 CURVE SMOOTH",
"28 53 LINE SMOOTH",
"28 11 OFFCURVE",
"41.333 -10 OFFCURVE",
"68 -10 CURVE SMOOTH",
"82 -10 OFFCURVE",
"89 -5 OFFCURVE",
"89 5 CURVE SMOOTH",
"89 17.667 OFFCURVE",
"86.833 36.167 OFFCURVE",
"82.5 60.5 CURVE SMOOTH",
"78.167 84.833 OFFCURVE",
"76 103.333 OFFCURVE",
"76 116 CURVE SMOOTH",
"76 211.333 OFFCURVE",
"101.333 290.333 OFFCURVE",
"152 353 CURVE SMOOTH",
"172 378.333 OFFCURVE",
"190.667 391 OFFCURVE",
"208 391 CURVE SMOOTH",
"263.333 391 OFFCURVE",
"291 280.333 OFFCURVE",
"291 59 CURVE SMOOTH",
"291 53.667 OFFCURVE",
"290.667 45 OFFCURVE",
"290 33 CURVE SMOOTH",
"289.333 21 OFFCURVE",
"289 12 OFFCURVE",
"289 6 CURVE SMOOTH",
"289 -2 LINE",
"305.667 -11.333 OFFCURVE",
"317.667 -16 OFFCURVE",
"325 -16 CURVE SMOOTH",
"332.333 -16 OFFCURVE",
"338 -12.333 OFFCURVE",
"342 -5 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 50 50 64 51 0 37 33 28 17 5 4 8 4 49 0 22 21 4 14 14 35 4 25 10 7 43 43 2 31 2 19 1 2 1 1 28 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
28 50 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
50 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 367;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 301 OFFCURVE",
"307.667 374.333 OFFCURVE",
"239 417 CURVE SMOOTH",
"215.667 431.667 OFFCURVE",
"197.667 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"135.667 439 OFFCURVE",
"95 405.333 OFFCURVE",
"63 338 CURVE SMOOTH",
"37.667 283.333 OFFCURVE",
"25 227.667 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 113.667 OFFCURVE",
"36 67.667 OFFCURVE",
"58 33 CURVE SMOOTH",
"84.667 -9 OFFCURVE",
"125 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"232.333 -30 OFFCURVE",
"274 -4.333 OFFCURVE",
"304 47 CURVE SMOOTH",
"329.333 89.667 OFFCURVE",
"342 139.667 OFFCURVE",
"342 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 152.667 OFFCURVE",
"286 112.333 OFFCURVE",
"270 77 CURVE SMOOTH",
"249.333 31.667 OFFCURVE",
"219 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"142.333 9 OFFCURVE",
"115.333 28.667 OFFCURVE",
"98 68 CURVE SMOOTH",
"86 96.667 OFFCURVE",
"80 132 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 220.667 OFFCURVE",
"88.667 264.333 OFFCURVE",
"106 305 CURVE SMOOTH",
"128.667 357.667 OFFCURVE",
"160 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"234.667 384 OFFCURVE",
"260.333 360.333 OFFCURVE",
"277 313 CURVE SMOOTH",
"288.333 279 OFFCURVE",
"294 240.667 OFFCURVE",
"294 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 32 32 64 33 0 24 5 8 16 4 0 20 6 12 28 7 4 12 2 4 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 32 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
32 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 367;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"325 293 OFFCURVE",
"315.667 333 OFFCURVE",
"297 365 CURVE SMOOTH",
"274.333 405 OFFCURVE",
"240.667 425 OFFCURVE",
"196 425 CURVE SMOOTH",
"169.333 425 OFFCURVE",
"147 413.333 OFFCURVE",
"129 390 CURVE SMOOTH",
"113.667 368.667 OFFCURVE",
"98.333 347.667 OFFCURVE",
"83 327 CURVE",
"79 327 LINE",
"79 343 OFFCURVE",
"80.333 367 OFFCURVE",
"83 399 CURVE SMOOTH",
"85.667 431 OFFCURVE",
"87 455.333 OFFCURVE",
"87 472 CURVE SMOOTH",
"87 480.667 OFFCURVE",
"81 485 OFFCURVE",
"69 485 CURVE SMOOTH",
"45 485 OFFCURVE",
"33 462 OFFCURVE",
"33 416 CURVE SMOOTH",
"33 405.333 OFFCURVE",
"33.333 381.667 OFFCURVE",
"34 345 CURVE SMOOTH",
"34.667 316.333 OFFCURVE",
"34.667 293 OFFCURVE",
"34 275 CURVE SMOOTH",
"33.333 258.333 OFFCURVE",
"31.667 227 OFFCURVE",
"29 181 CURVE SMOOTH",
"26.333 141.667 OFFCURVE",
"25 110.333 OFFCURVE",
"25 87 CURVE SMOOTH",
"25 -167 LINE SMOOTH",
"25 -179.667 OFFCURVE",
"27 -197 OFFCURVE",
"31 -219 CURVE SMOOTH",
"40.333 -271 OFFCURVE",
"49 -272 OFFCURVE",
"81 -272 CURVE SMOOTH",
"94.333 -272 OFFCURVE",
"101 -266.667 OFFCURVE",
"101 -256 CURVE SMOOTH",
"101 -253.333 OFFCURVE",
"98.167 -245.667 OFFCURVE",
"92.5 -233 CURVE SMOOTH",
"86.833 -220.333 OFFCURVE",
"83.667 -212.333 OFFCURVE",
"83 -209 CURVE",
"74.333 -173 OFFCURVE",
"70 -111.667 OFFCURVE",
"70 -25 CURVE SMOOTH",
"70 14.333 OFFCURVE",
"72.333 35 OFFCURVE",
"77 37 CURVE",
"104.333 3 OFFCURVE",
"136.333 -14 OFFCURVE",
"173 -14 CURVE SMOOTH",
"229 -14 OFFCURVE",
"270 17 OFFCURVE",
"296 79 CURVE SMOOTH",
"315.333 123.667 OFFCURVE",
"325 179 OFFCURVE",
"325 245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 193.667 OFFCURVE",
"269.333 148.667 OFFCURVE",
"256 106 CURVE SMOOTH",
"237.333 46 OFFCURVE",
"209.667 16 OFFCURVE",
"173 16 CURVE SMOOTH",
"129 16 OFFCURVE",
"112.333 55.333 OFFCURVE",
"91 86 CURVE",
"87 89.333 OFFCURVE",
"83 92.333 OFFCURVE",
"79 95 CURVE",
"73 99.667 OFFCURVE",
"70 103 OFFCURVE",
"70 105 CURVE",
"70 103.667 OFFCURVE",
"71.667 119 OFFCURVE",
"75 151 CURVE SMOOTH",
"79.667 195 OFFCURVE",
"85.667 228.333 OFFCURVE",
"93 251 CURVE SMOOTH",
"102.333 281 OFFCURVE",
"118.667 310.333 OFFCURVE",
"142 339 CURVE SMOOTH",
"168.667 371.667 OFFCURVE",
"191.333 388 OFFCURVE",
"210 388 CURVE SMOOTH",
"235.333 388 OFFCURVE",
"253.667 369.333 OFFCURVE",
"265 332 CURVE SMOOTH",
"272.333 306.667 OFFCURVE",
"276 276.333 OFFCURVE",
"276 241 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 68 68 64 69 0 37 36 6 36 13 55 4 25 33 5 27 25 29 57 8 4 21 20 45 4 0 64 7 4 49 7 41 31 41 2 15 0 4 1 1 20 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
20 68 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
68 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 350;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"328 329.333 OFFCURVE",
"318.333 338 OFFCURVE",
"299 338 CURVE",
"302.333 338 OFFCURVE",
"297.667 337 OFFCURVE",
"285 335 CURVE",
"267 355.667 OFFCURVE",
"248.667 376.333 OFFCURVE",
"230 397 CURVE",
"207.333 420.333 OFFCURVE",
"183.333 432 OFFCURVE",
"158 432 CURVE SMOOTH",
"113.333 432 OFFCURVE",
"78.333 395.333 OFFCURVE",
"53 322 CURVE SMOOTH",
"34.333 266.667 OFFCURVE",
"25 211 OFFCURVE",
"25 155 CURVE SMOOTH",
"25 109 OFFCURVE",
"32.333 71.667 OFFCURVE",
"47 43 CURVE SMOOTH",
"66.333 5.667 OFFCURVE",
"96.667 -13 OFFCURVE",
"138 -13 CURVE SMOOTH",
"176.667 -13 OFFCURVE",
"208 -2 OFFCURVE",
"232 20 CURVE",
"237 15 LINE",
"236.333 -173.667 OFFCURVE",
"257.333 -268 OFFCURVE",
"300 -268 CURVE SMOOTH",
"304.667 -268 OFFCURVE",
"313.667 -264.667 OFFCURVE",
"327 -258 CURVE",
"327 -244 LINE",
"299 -234.667 OFFCURVE",
"285 -161.667 OFFCURVE",
"285 -25 CURVE SMOOTH",
"285 117.667 OFFCURVE",
"293.333 213.667 OFFCURVE",
"310 263 CURVE SMOOTH",
"322 297.667 OFFCURVE",
"328 314 OFFCURVE",
"328 312 CURVE"
);
},
{
closed = 1;
nodes = (
"255 203 OFFCURVE",
"248.333 154.333 OFFCURVE",
"235 111 CURVE SMOOTH",
"215.667 48.333 OFFCURVE",
"185.667 17 OFFCURVE",
"145 17 CURVE SMOOTH",
"97 17 OFFCURVE",
"73 63.333 OFFCURVE",
"73 156 CURVE SMOOTH",
"73 199.333 OFFCURVE",
"80.667 245 OFFCURVE",
"96 293 CURVE SMOOTH",
"115.333 357 OFFCURVE",
"141 389 OFFCURVE",
"173 389 CURVE SMOOTH",
"203.667 389 OFFCURVE",
"246 341.667 OFFCURVE",
"246 311 CURVE SMOOTH",
"246 304.333 OFFCURVE",
"245.333 297.667 OFFCURVE",
"244 291 CURVE",
"251.333 284.333 OFFCURVE",
"255 273 OFFCURVE",
"255 257 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 47 47 64 48 0 28 26 12 30 4 32 34 5 7 6 0 41 4 18 43 7 14 37 6 22 22 2 14 1 9 0 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 47 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
47 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 353;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"247 369.333 OFFCURVE",
"215.333 414 OFFCURVE",
"202 422 CURVE SMOOTH",
"190 429.333 OFFCURVE",
"178 433 OFFCURVE",
"166 433 CURVE SMOOTH",
"150 433 OFFCURVE",
"134.667 424.667 OFFCURVE",
"120 408 CURVE",
"117.333 404.667 OFFCURVE",
"107.333 389.667 OFFCURVE",
"90 363 CURVE",
"89.333 375.667 OFFCURVE",
"88.667 388.667 OFFCURVE",
"88 402 CURVE",
"85.333 414 OFFCURVE",
"75.667 420 OFFCURVE",
"59 420 CURVE SMOOTH",
"32.333 420 OFFCURVE",
"25 417.667 OFFCURVE",
"25 391 CURVE SMOOTH",
"25 354.333 OFFCURVE",
"26.667 299.333 OFFCURVE",
"30 226 CURVE SMOOTH",
"33.333 152.667 OFFCURVE",
"35 97.667 OFFCURVE",
"35 61 CURVE SMOOTH",
"35 57.667 OFFCURVE",
"34.167 52.833 OFFCURVE",
"32.5 46.5 CURVE SMOOTH",
"30.833 40.167 OFFCURVE",
"30 35.333 OFFCURVE",
"30 32 CURVE SMOOTH",
"30 8.667 OFFCURVE",
"41.333 -3 OFFCURVE",
"64 -3 CURVE SMOOTH",
"84 -3 OFFCURVE",
"94 4.333 OFFCURVE",
"94 19 CURVE SMOOTH",
"94 22.333 OFFCURVE",
"92.667 27.167 OFFCURVE",
"90 33.5 CURVE SMOOTH",
"87.333 39.833 OFFCURVE",
"85.667 44 OFFCURVE",
"85 46 CURVE",
"81.667 60 OFFCURVE",
"80 97.667 OFFCURVE",
"80 159 CURVE SMOOTH",
"80 207 OFFCURVE",
"84 245.333 OFFCURVE",
"92 274 CURVE SMOOTH",
"112.667 352.667 OFFCURVE",
"133.667 392 OFFCURVE",
"155 392 CURVE SMOOTH",
"187.667 392 OFFCURVE",
"205 371 OFFCURVE",
"207 329 CURVE",
"211 322.333 OFFCURVE",
"215.667 319 OFFCURVE",
"221 319 CURVE SMOOTH",
"229 319 OFFCURVE",
"237.333 325.667 OFFCURVE",
"246 339 CURVE",
"246.667 347.667 OFFCURVE",
"247 353.333 OFFCURVE",
"247 356 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
1 43 43 64 44 0 34 30 4 27 5 0 17 5 21 12 4 24 8 7 38 38 2 19 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 43 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
43 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 272;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"332 72.333 OFFCURVE",
"313 90.667 OFFCURVE",
"275 114 CURVE SMOOTH",
"217.667 149.333 OFFCURVE",
"182.667 172.333 OFFCURVE",
"170 183 CURVE SMOOTH",
"132 213.667 OFFCURVE",
"113 245.333 OFFCURVE",
"113 278 CURVE SMOOTH",
"113 304 OFFCURVE",
"119 329.667 OFFCURVE",
"131 355 CURVE SMOOTH",
"145 386.333 OFFCURVE",
"163.667 402 OFFCURVE",
"187 402 CURVE SMOOTH",
"231.667 402 OFFCURVE",
"254 366.333 OFFCURVE",
"254 295 CURVE SMOOTH",
"254 265 OFFCURVE",
"251.333 244.333 OFFCURVE",
"246 233 CURVE",
"238.667 215.667 OFFCURVE",
"235 208.333 OFFCURVE",
"235 211 CURVE",
"235 203 OFFCURVE",
"262.667 194 OFFCURVE",
"272 194 CURVE SMOOTH",
"280 194 OFFCURVE",
"287 196.333 OFFCURVE",
"293 201 CURVE",
"302.333 231.667 OFFCURVE",
"307 260 OFFCURVE",
"307 286 CURVE SMOOTH",
"307 310 OFFCURVE",
"304.333 331 OFFCURVE",
"299 349 CURVE",
"288.333 391.667 OFFCURVE",
"206.333 444 OFFCURVE",
"161 444 CURVE SMOOTH",
"129.667 444 OFFCURVE",
"103.667 425.333 OFFCURVE",
"83 388 CURVE SMOOTH",
"65 356.667 OFFCURVE",
"56 323.667 OFFCURVE",
"56 289 CURVE SMOOTH",
"56 243 OFFCURVE",
"74.333 202.333 OFFCURVE",
"111 167 CURVE SMOOTH",
"129 149.667 OFFCURVE",
"162.667 126.667 OFFCURVE",
"212 98 CURVE SMOOTH",
"248 76.667 OFFCURVE",
"266 60 OFFCURVE",
"266 48 CURVE SMOOTH",
"266 28 OFFCURVE",
"251.333 18 OFFCURVE",
"222 18 CURVE SMOOTH",
"199.333 18 OFFCURVE",
"169.333 28.667 OFFCURVE",
"132 50 CURVE SMOOTH",
"90.667 73.333 OFFCURVE",
"69.333 95 OFFCURVE",
"68 115 CURVE",
"62 115 LINE",
"37.333 117 OFFCURVE",
"25 107.667 OFFCURVE",
"25 87 CURVE SMOOTH",
"25 77.667 OFFCURVE",
"40.333 60.667 OFFCURVE",
"71 36 CURVE SMOOTH",
"99 13.333 OFFCURVE",
"119.333 -0.667 OFFCURVE",
"132 -6 CURVE",
"155.333 -14.667 OFFCURVE",
"176 -19 OFFCURVE",
"194 -19 CURVE SMOOTH",
"221.333 -19 OFFCURVE",
"249.667 -12.667 OFFCURVE",
"279 0 CURVE SMOOTH",
"314.333 16 OFFCURVE",
"332 35.667 OFFCURVE",
"332 59 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 57 57 64 58 0 38 13 12 41 13 4 10 19 5 0 51 5 25 45 4 34 17 7 4 47 6 29 29 2 4 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 57 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
57 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"242.667 321 OFFCURVE",
"247 329.333 OFFCURVE",
"247 340 CURVE SMOOTH",
"247 354.667 OFFCURVE",
"237.667 362 OFFCURVE",
"219 362 CURVE",
"164 359 LINE",
"162.667 366.333 OFFCURVE",
"162 374 OFFCURVE",
"162 382 CURVE SMOOTH",
"162 398 OFFCURVE",
"164.333 422.667 OFFCURVE",
"169 456 CURVE SMOOTH",
"173.667 489.333 OFFCURVE",
"176 514.333 OFFCURVE",
"176 531 CURVE SMOOTH",
"176 552.333 OFFCURVE",
"164.333 564 OFFCURVE",
"141 566 CURVE SMOOTH",
"126.333 567.333 OFFCURVE",
"114 558 OFFCURVE",
"114 550 CURVE SMOOTH",
"114 548 OFFCURVE",
"114.833 544.833 OFFCURVE",
"116.5 540.5 CURVE SMOOTH",
"118.167 536.167 OFFCURVE",
"119 533 OFFCURVE",
"119 531 CURVE",
"106 350 LINE",
"52 352 OFFCURVE",
"25 340.333 OFFCURVE",
"25 315 CURVE SMOOTH",
"25 297 OFFCURVE",
"35.667 289.333 OFFCURVE",
"57 292 CURVE SMOOTH",
"83.667 295.333 OFFCURVE",
"99 295.333 OFFCURVE",
"103 292 CURVE",
"101.667 247.333 OFFCURVE",
"101 178 OFFCURVE",
"101 84 CURVE SMOOTH",
"101 66 OFFCURVE",
"103.667 47 OFFCURVE",
"109 27 CURVE SMOOTH",
"117 -0.333 OFFCURVE",
"127.667 -14 OFFCURVE",
"141 -14 CURVE SMOOTH",
"151.667 -14 OFFCURVE",
"169 -0.667 OFFCURVE",
"169 10 CURVE SMOOTH",
"169 18.667 OFFCURVE",
"167.333 31 OFFCURVE",
"164 47 CURVE SMOOTH",
"160.667 63 OFFCURVE",
"159 74.667 OFFCURVE",
"159 82 CURVE",
"157.667 100 OFFCURVE",
"157 135 OFFCURVE",
"157 187 CURVE SMOOTH",
"157 253.667 OFFCURVE",
"157.333 290.667 OFFCURVE",
"158 298 CURVE",
"161.333 300 OFFCURVE",
"174 302.333 OFFCURVE",
"196 305 CURVE SMOOTH",
"216 307.667 OFFCURVE",
"228.667 311 OFFCURVE",
"234 315 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 45 45 64 46 43 41 40 22 20 35 30 27 11 43 13 38 24 13 26 6 5 20 18 38 5 26 33 14 1 1 24 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
24 45 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
45 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 272;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"311 400 OFFCURVE",
"296 411.667 OFFCURVE",
"266 409 CURVE SMOOTH",
"256.667 408.333 OFFCURVE",
"247.333 403.667 OFFCURVE",
"238 395 CURVE",
"237.333 391 OFFCURVE",
"237 387.333 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"238.833 370.167 OFFCURVE",
"242.5 360.5 CURVE SMOOTH",
"246.167 350.833 OFFCURVE",
"248 343.333 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 166.333 OFFCURVE",
"241.333 129 OFFCURVE",
"228 95 CURVE SMOOTH",
"209.333 49.667 OFFCURVE",
"183 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"128.333 27 OFFCURVE",
"111.333 41.333 OFFCURVE",
"98 70 CURVE SMOOTH",
"86.667 94 OFFCURVE",
"81.333 118 OFFCURVE",
"82 142 CURVE SMOOTH",
"82 160 OFFCURVE",
"83 201.667 OFFCURVE",
"85 267 CURVE SMOOTH",
"87 318.333 OFFCURVE",
"88 360 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413.333 OFFCURVE",
"78.667 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"33.333 424 OFFCURVE",
"22 414 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 114.333 OFFCURVE",
"30.667 72 OFFCURVE",
"40 50 CURVE SMOOTH",
"46.667 34 OFFCURVE",
"60.333 18 OFFCURVE",
"81 2 CURVE SMOOTH",
"103.667 -16 OFFCURVE",
"123.667 -23.667 OFFCURVE",
"141 -21 CURVE SMOOTH",
"187.667 -13.667 OFFCURVE",
"220.667 4.333 OFFCURVE",
"240 33 CURVE",
"242.667 21 OFFCURVE",
"245.333 8.667 OFFCURVE",
"248 -4 CURVE",
"253.333 -16.667 OFFCURVE",
"263.333 -23 OFFCURVE",
"278 -23 CURVE SMOOTH",
"285.333 -23 OFFCURVE",
"291 -21.667 OFFCURVE",
"295 -19 CURVE",
"301.667 -13 OFFCURVE",
"305 4.667 OFFCURVE",
"305 34 CURVE SMOOTH",
"305 48.667 OFFCURVE",
"303.833 72.833 OFFCURVE",
"301.5 106.5 CURVE SMOOTH",
"299.167 140.167 OFFCURVE",
"298 163 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 205 OFFCURVE",
"300.167 240.5 OFFCURVE",
"304.5 281.5 CURVE SMOOTH",
"308.833 322.5 OFFCURVE",
"311 353.333 OFFCURVE",
"311 374 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 49 49 64 50 0 47 35 14 27 6 43 5 0 31 5 23 22 0 5 39 40 39 4 3 25 2 16 10 1 1 22 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
22 49 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
49 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 331;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"327.333 419.333 OFFCURVE",
"318.667 430 OFFCURVE",
"302 430 CURVE SMOOTH",
"292.667 430 OFFCURVE",
"276 418 OFFCURVE",
"276 410 CURVE SMOOTH",
"276 359.333 OFFCURVE",
"268.667 293.333 OFFCURVE",
"254 212 CURVE SMOOTH",
"234.667 107.333 OFFCURVE",
"212 55 OFFCURVE",
"186 55 CURVE SMOOTH",
"178.667 55 OFFCURVE",
"169.333 66.333 OFFCURVE",
"158 89 CURVE SMOOTH",
"138 130.333 OFFCURVE",
"120.667 177 OFFCURVE",
"106 229 CURVE SMOOTH",
"90 286.333 OFFCURVE",
"82 335.333 OFFCURVE",
"82 376 CURVE SMOOTH",
"82 387.333 OFFCURVE",
"83.333 398.667 OFFCURVE",
"86 410 CURVE",
"70 423.333 OFFCURVE",
"58 430 OFFCURVE",
"50 430 CURVE SMOOTH",
"39.333 430 OFFCURVE",
"25 415.667 OFFCURVE",
"25 405 CURVE SMOOTH",
"25 369 OFFCURVE",
"28.333 334.667 OFFCURVE",
"35 302 CURVE SMOOTH",
"49 232 OFFCURVE",
"66.333 171.333 OFFCURVE",
"87 120 CURVE SMOOTH",
"120.333 35.333 OFFCURVE",
"157 -7 OFFCURVE",
"197 -7 CURVE SMOOTH",
"230.333 -7 OFFCURVE",
"262 49 OFFCURVE",
"292 161 CURVE SMOOTH",
"320 261.667 OFFCURVE",
"332 340.667 OFFCURVE",
"328 398 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 32 32 64 33 0 15 17 5 10 27 4 0 15 7 13 23 6 4 30 13 2 4 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 32 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
32 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 353;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"485 393 OFFCURVE",
"473 430 OFFCURVE",
"449 430 CURVE SMOOTH",
"434.333 430 OFFCURVE",
"419 413.667 OFFCURVE",
"419 399 CURVE SMOOTH",
"419 397 OFFCURVE",
"421.333 393.333 OFFCURVE",
"426 388 CURVE SMOOTH",
"430.667 382.667 OFFCURVE",
"433 379.667 OFFCURVE",
"433 379 CURVE",
"438.333 369.667 OFFCURVE",
"441 344 OFFCURVE",
"441 302 CURVE SMOOTH",
"441 260 OFFCURVE",
"433.667 211 OFFCURVE",
"419 155 CURVE SMOOTH",
"399.667 82.333 OFFCURVE",
"375.667 46 OFFCURVE",
"347 46 CURVE SMOOTH",
"325.667 46 OFFCURVE",
"308.667 67.667 OFFCURVE",
"296 111 CURVE SMOOTH",
"286 143.667 OFFCURVE",
"281 174.333 OFFCURVE",
"281 203 CURVE SMOOTH",
"281 326 LINE SMOOTH",
"281 329.333 OFFCURVE",
"281.5 334.333 OFFCURVE",
"282.5 341 CURVE SMOOTH",
"283.5 347.667 OFFCURVE",
"284 352.667 OFFCURVE",
"284 356 CURVE SMOOTH",
"284 382.667 OFFCURVE",
"274.333 396 OFFCURVE",
"255 396 CURVE SMOOTH",
"239 396 OFFCURVE",
"231 389 OFFCURVE",
"231 375 CURVE SMOOTH",
"231 279 LINE SMOOTH",
"231.667 239 OFFCURVE",
"225 194 OFFCURVE",
"211 144 CURVE SMOOTH",
"193.667 78.667 OFFCURVE",
"170.667 46 OFFCURVE",
"142 46 CURVE SMOOTH",
"97.333 46 OFFCURVE",
"75 132.667 OFFCURVE",
"75 306 CURVE SMOOTH",
"75 316.667 OFFCURVE",
"77.167 331.167 OFFCURVE",
"81.5 349.5 CURVE SMOOTH",
"85.833 367.833 OFFCURVE",
"88 381.333 OFFCURVE",
"88 390 CURVE SMOOTH",
"88 404.667 OFFCURVE",
"61.667 418 OFFCURVE",
"47 418 CURVE SMOOTH",
"39.667 418 OFFCURVE",
"33.667 414.667 OFFCURVE",
"29 408 CURVE",
"26.333 381.333 OFFCURVE",
"25 344.667 OFFCURVE",
"25 298 CURVE SMOOTH",
"25 94.667 OFFCURVE",
"67.333 -7 OFFCURVE",
"152 -7 CURVE SMOOTH",
"180 -7 OFFCURVE",
"201 8.333 OFFCURVE",
"215 39 CURVE",
"225 65.667 OFFCURVE",
"234.667 92.333 OFFCURVE",
"244 119 CURVE",
"248 121 LINE",
"256.667 100.333 OFFCURVE",
"265.333 80 OFFCURVE",
"274 60 CURVE",
"297.333 19.333 OFFCURVE",
"325.333 -1 OFFCURVE",
"358 -1 CURVE SMOOTH",
"402.667 -1 OFFCURVE",
"436.667 43 OFFCURVE",
"460 131 CURVE SMOOTH",
"476.667 193 OFFCURVE",
"485 255.667 OFFCURVE",
"485 319 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 58 58 64 59 0 34 19 8 53 22 48 4 0 25 4 15 36 4 31 32 31 4 40 39 44 27 6 4 56 2 13 1 4 1 1 15 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
15 58 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
58 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 510;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"391 31 LINE",
"382.333 29 OFFCURVE",
"376.333 28 OFFCURVE",
"373 28 CURVE SMOOTH",
"349 28 OFFCURVE",
"224 185.333 OFFCURVE",
"224 212 CURVE SMOOTH",
"224 223.333 OFFCURVE",
"249.333 255.667 OFFCURVE",
"300 309 CURVE SMOOTH",
"350.667 362.333 OFFCURVE",
"376 391.667 OFFCURVE",
"376 397 CURVE SMOOTH",
"376 411.667 OFFCURVE",
"363.667 427 OFFCURVE",
"349 427 CURVE SMOOTH",
"339 427 OFFCURVE",
"313.667 401.667 OFFCURVE",
"273 351 CURVE SMOOTH",
"247.667 319.667 OFFCURVE",
"222.333 288 OFFCURVE",
"197 256 CURVE",
"179 286 OFFCURVE",
"163 317.667 OFFCURVE",
"149 351 CURVE SMOOTH",
"135.667 380.333 OFFCURVE",
"128.667 396 OFFCURVE",
"128 398 CURVE",
"118.667 408.667 OFFCURVE",
"108.333 414 OFFCURVE",
"97 414 CURVE SMOOTH",
"76.333 414 OFFCURVE",
"62.667 405 OFFCURVE",
"56 387 CURVE",
"65.333 376.333 OFFCURVE",
"85.333 346.333 OFFCURVE",
"116 297 CURVE SMOOTH",
"148 245 OFFCURVE",
"164 215.667 OFFCURVE",
"164 209 CURVE SMOOTH",
"164 205 OFFCURVE",
"139.167 168.667 OFFCURVE",
"89.5 100 CURVE SMOOTH",
"39.833 31.333 OFFCURVE",
"15 -9 OFFCURVE",
"15 -21 CURVE SMOOTH",
"15 -43 OFFCURVE",
"28.333 -57 OFFCURVE",
"55 -63 CURVE",
"108.333 49.667 OFFCURVE",
"153.667 125.333 OFFCURVE",
"191 164 CURVE",
"213.667 130 OFFCURVE",
"236.667 96 OFFCURVE",
"260 62 CURVE SMOOTH",
"293.333 16 OFFCURVE",
"323.333 -7 OFFCURVE",
"350 -7 CURVE SMOOTH",
"366 -7 OFFCURVE",
"391 3.667 OFFCURVE",
"391 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 42 42 64 43 0 41 26 20 7 41 33 18 11 0 36 5 14 39 7 3 9 30 2 3 1 1 11 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
11 42 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
42 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 396;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"346.333 404.667 OFFCURVE",
"335 412 OFFCURVE",
"311 414 CURVE SMOOTH",
"290.333 415.333 OFFCURVE",
"279.5 407.333 OFFCURVE",
"278.5 390 CURVE SMOOTH",
"277.5 372.667 OFFCURVE",
"276.667 358.333 OFFCURVE",
"276 347 CURVE",
"277 233 LINE SMOOTH",
"277.667 193.667 OFFCURVE",
"270.667 154.667 OFFCURVE",
"256 116 CURVE SMOOTH",
"236.667 66 OFFCURVE",
"210.667 41 OFFCURVE",
"178 41 CURVE SMOOTH",
"124.667 41 OFFCURVE",
"98 87.667 OFFCURVE",
"98 181 CURVE SMOOTH",
"98 301.667 OFFCURVE",
"104.333 379.333 OFFCURVE",
"117 414 CURVE",
"119.667 422.667 OFFCURVE",
"108.333 427 OFFCURVE",
"83 427 CURVE SMOOTH",
"62.333 427 OFFCURVE",
"50.667 416.333 OFFCURVE",
"48 395 CURVE",
"45.333 333 OFFCURVE",
"44 257 OFFCURVE",
"44 167 CURVE SMOOTH",
"44 119.667 OFFCURVE",
"54.333 80.667 OFFCURVE",
"75 50 CURVE SMOOTH",
"98.333 14.667 OFFCURVE",
"132.667 -3 OFFCURVE",
"178 -3 CURVE SMOOTH",
"195.333 -3 OFFCURVE",
"211.333 1.667 OFFCURVE",
"226 11 CURVE",
"234 15.667 OFFCURVE",
"247.333 26.667 OFFCURVE",
"266 44 CURVE",
"264.667 31.333 OFFCURVE",
"265.333 16.667 OFFCURVE",
"268 0 CURVE SMOOTH",
"270.667 -20 OFFCURVE",
"272 -33.333 OFFCURVE",
"272 -40 CURVE SMOOTH",
"272 -90.667 OFFCURVE",
"267.667 -125.667 OFFCURVE",
"259 -145 CURVE SMOOTH",
"244.333 -175.667 OFFCURVE",
"215 -191 OFFCURVE",
"171 -191 CURVE SMOOTH",
"136.333 -191 OFFCURVE",
"107.667 -180.667 OFFCURVE",
"85 -160 CURVE",
"73.667 -148.667 OFFCURVE",
"62.333 -137 OFFCURVE",
"51 -125 CURVE",
"46.333 -122.333 OFFCURVE",
"42 -121 OFFCURVE",
"38 -121 CURVE SMOOTH",
"19.333 -121 OFFCURVE",
"10 -130.667 OFFCURVE",
"10 -150 CURVE SMOOTH",
"10 -156 OFFCURVE",
"11.667 -162 OFFCURVE",
"15 -168 CURVE",
"28.333 -190 OFFCURVE",
"52.667 -208.333 OFFCURVE",
"88 -223 CURVE SMOOTH",
"118.667 -236.333 OFFCURVE",
"146.333 -243 OFFCURVE",
"171 -243 CURVE SMOOTH",
"261.667 -243 OFFCURVE",
"320 -186.333 OFFCURVE",
"320 -97 CURVE SMOOTH",
"321 216 LINE SMOOTH",
"321 243.333 OFFCURVE",
"324 272.667 OFFCURVE",
"330 304 CURVE SMOOTH",
"334.667 333.333 OFFCURVE",
"339.667 362.667 OFFCURVE",
"345 392 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
1 58 58 64 59 0 56 30 16 44 0 14 5 5 53 52 4 4 26 4 4 5 46 4 38 22 6 8 48 6 34 8 42 2 34 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 58 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
58 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 369;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"322 411.333 OFFCURVE",
"302 424 OFFCURVE",
"262 424 CURVE SMOOTH",
"230 424 OFFCURVE",
"188.667 417.333 OFFCURVE",
"138 404 CURVE SMOOTH",
"75.333 387.333 OFFCURVE",
"44 368 OFFCURVE",
"44 346 CURVE SMOOTH",
"44 324 OFFCURVE",
"52.333 313 OFFCURVE",
"69 313 CURVE SMOOTH",
"70.333 313 OFFCURVE",
"78.333 318.667 OFFCURVE",
"93 330 CURVE SMOOTH",
"110.333 344 OFFCURVE",
"127.333 354.667 OFFCURVE",
"144 362 CURVE SMOOTH",
"168.667 373.333 OFFCURVE",
"194.333 379 OFFCURVE",
"221 379 CURVE SMOOTH",
"235.667 379 OFFCURVE",
"246.333 376.333 OFFCURVE",
"253 371 CURVE",
"250.333 357.667 OFFCURVE",
"229.333 327.667 OFFCURVE",
"190 281 CURVE SMOOTH",
"131.333 212.333 OFFCURVE",
"95.333 169.333 OFFCURVE",
"82 152 CURVE SMOOTH",
"44 101.333 OFFCURVE",
"25 63.333 OFFCURVE",
"25 38 CURVE SMOOTH",
"25 21.333 OFFCURVE",
"32.667 8.333 OFFCURVE",
"48 -1 CURVE SMOOTH",
"60.667 -9 OFFCURVE",
"75.667 -13 OFFCURVE",
"93 -13 CURVE SMOOTH",
"113 -13 OFFCURVE",
"142.667 -10.833 OFFCURVE",
"182 -6.5 CURVE SMOOTH",
"221.333 -2.167 OFFCURVE",
"252.667 0 OFFCURVE",
"276 0 CURVE SMOOTH",
"302 0 OFFCURVE",
"315 9 OFFCURVE",
"315 27 CURVE SMOOTH",
"315 43 OFFCURVE",
"300 64.333 OFFCURVE",
"292 63 CURVE",
"210 44.333 OFFCURVE",
"150.333 35 OFFCURVE",
"113 35 CURVE SMOOTH",
"96.333 35 OFFCURVE",
"85 38.667 OFFCURVE",
"79 46 CURVE",
"80.333 72 OFFCURVE",
"111.333 121 OFFCURVE",
"172 193 CURVE SMOOTH",
"214 239.667 OFFCURVE",
"256 286.333 OFFCURVE",
"298 333 CURVE SMOOTH",
"314 351.667 OFFCURVE",
"322 369.333 OFFCURVE",
"322 386 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 44 44 64 45 0 36 10 38 5 0 13 5 22 28 5 0 6 4 22 8 6 18 30 6 42 42 2 18 1 1 22 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
22 44 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
44 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 347;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"267 715 LINE",
"187 715.667 OFFCURVE",
"138.333 686.667 OFFCURVE",
"121 628 CURVE",
"117 568.667 OFFCURVE",
"112.667 509.667 OFFCURVE",
"108 451 CURVE SMOOTH",
"102 379.667 OFFCURVE",
"72.667 335.333 OFFCURVE",
"20 318 CURVE",
"20 296 LINE",
"70.667 278.667 OFFCURVE",
"100 235 OFFCURVE",
"108 165 CURVE SMOOTH",
"112.667 106.333 OFFCURVE",
"117.333 47.667 OFFCURVE",
"122 -11 CURVE",
"136.667 -70.333 OFFCURVE",
"178.667 -100 OFFCURVE",
"248 -100 CURVE SMOOTH",
"266 -100 LINE",
"266 -81 LINE",
"203.333 -77 OFFCURVE",
"167 -33.667 OFFCURVE",
"167 25 CURVE SMOOTH",
"167 37 OFFCURVE",
"167.667 55.333 OFFCURVE",
"169 80 CURVE SMOOTH",
"170.333 104.667 OFFCURVE",
"171 123.333 OFFCURVE",
"171 136 CURVE SMOOTH",
"171 218 OFFCURVE",
"144.333 275 OFFCURVE",
"91 307 CURVE",
"145 339 OFFCURVE",
"172 396 OFFCURVE",
"172 478 CURVE SMOOTH",
"172 490 OFFCURVE",
"171.167 508.333 OFFCURVE",
"169.5 533 CURVE SMOOTH",
"167.833 557.667 OFFCURVE",
"167 576.333 OFFCURVE",
"167 589 CURVE SMOOTH",
"167 647.667 OFFCURVE",
"204.333 691 OFFCURVE",
"267 695 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 32 32 64 33 0 31 17 16 13 10 6 3 0 8 5 25 24 0 7 31 31 18 17 1 24 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
24 32 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
32 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 287;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"94 14 OFFCURVE",
"92.5 19.5 OFFCURVE",
"89.5 26.5 CURVE SMOOTH",
"86.5 33.5 OFFCURVE",
"85 38 OFFCURVE",
"85 40 CURVE",
"76.333 81.333 OFFCURVE",
"71 143 OFFCURVE",
"69 225 CURVE",
"69.667 220.333 OFFCURVE",
"70 283.667 OFFCURVE",
"70 415 CURVE SMOOTH",
"70 496.333 OFFCURVE",
"74 559.667 OFFCURVE",
"82 605 CURVE SMOOTH",
"82.667 608.333 OFFCURVE",
"85 616.667 OFFCURVE",
"89 630 CURVE SMOOTH",
"92.333 640.667 OFFCURVE",
"94 649.333 OFFCURVE",
"94 656 CURVE SMOOTH",
"94 674.667 OFFCURVE",
"70.667 690 OFFCURVE",
"52 690 CURVE SMOOTH",
"43.333 690 OFFCURVE",
"32.667 685.333 OFFCURVE",
"20 676 CURVE",
"20 669.333 OFFCURVE",
"21 659.167 OFFCURVE",
"23 645.5 CURVE SMOOTH",
"25 631.833 OFFCURVE",
"26 621.333 OFFCURVE",
"26 614 CURVE SMOOTH",
"23 165 LINE SMOOTH",
"22.333 44.333 OFFCURVE",
"36.667 -16 OFFCURVE",
"66 -16 CURVE SMOOTH",
"84.667 -16 OFFCURVE",
"94 -7.333 OFFCURVE",
"94 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 26 26 64 27 0 21 13 8 5 0 19 4 4 10 3 2 1 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 26 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
26 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 114;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"267 319 LINE",
"216.333 336.333 OFFCURVE",
"187 380 OFFCURVE",
"179 450 CURVE SMOOTH",
"174.333 508.667 OFFCURVE",
"169.667 567.333 OFFCURVE",
"165 626 CURVE",
"150.333 685.333 OFFCURVE",
"108.333 715 OFFCURVE",
"39 715 CURVE SMOOTH",
"21 715 LINE",
"21 696 LINE",
"83.667 692 OFFCURVE",
"120 648.667 OFFCURVE",
"120 590 CURVE SMOOTH",
"120 578 OFFCURVE",
"119.333 559.667 OFFCURVE",
"118 535 CURVE SMOOTH",
"116.667 510.333 OFFCURVE",
"116 491.667 OFFCURVE",
"116 479 CURVE SMOOTH",
"116 397 OFFCURVE",
"142.667 340 OFFCURVE",
"196 308 CURVE",
"142 276 OFFCURVE",
"115 219 OFFCURVE",
"115 137 CURVE SMOOTH",
"115 125 OFFCURVE",
"115.833 106.667 OFFCURVE",
"117.5 82 CURVE SMOOTH",
"119.167 57.333 OFFCURVE",
"120 38.667 OFFCURVE",
"120 26 CURVE SMOOTH",
"120 -32.667 OFFCURVE",
"82.667 -76 OFFCURVE",
"20 -80 CURVE",
"20 -100 LINE",
"100 -100.667 OFFCURVE",
"148.667 -71.667 OFFCURVE",
"166 -13 CURVE",
"170 46.333 OFFCURVE",
"174.333 105.333 OFFCURVE",
"179 164 CURVE SMOOTH",
"185 235.333 OFFCURVE",
"214.333 279.667 OFFCURVE",
"267 297 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 32 32 64 33 0 24 23 20 17 13 10 7 6 15 5 31 0 7 7 6 25 24 6 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 32 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
32 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 287;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"403.333 375.333 OFFCURVE",
"394 381 OFFCURVE",
"382 381 CURVE SMOOTH",
"369.381 381 OFFCURVE",
"308.823 331 OFFCURVE",
"287 331 CURVE SMOOTH",
"245.018 331 OFFCURVE",
"209.623 381 OFFCURVE",
"164 381 CURVE SMOOTH",
"132.589 381 OFFCURVE",
"34 327.767 OFFCURVE",
"34 300 CURVE SMOOTH",
"34 286.667 OFFCURVE",
"41 280 OFFCURVE",
"55 280 CURVE",
"0 0 OFFCURVE",
"73.11 292.92 OFFCURVE",
"89 302 CURVE SMOOTH",
"107.667 312.667 OFFCURVE",
"130 323 OFFCURVE",
"146 323 CURVE SMOOTH",
"175.754 323 OFFCURVE",
"229.404 277 OFFCURVE",
"275 277 CURVE SMOOTH",
"304.653 277 OFFCURVE",
"402 331.813 OFFCURVE",
"402 362 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
27 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 931 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 439;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = Adieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"409 770.333 OFFCURVE",
"391.667 790 OFFCURVE",
"369 790 CURVE SMOOTH",
"346.333 790 OFFCURVE",
"329 770.333 OFFCURVE",
"329 749 CURVE SMOOTH",
"329 726.333 OFFCURVE",
"346.333 707 OFFCURVE",
"369 707 CURVE SMOOTH",
"391.667 707 OFFCURVE",
"409 726.333 OFFCURVE",
"409 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 770.333 OFFCURVE",
"241.667 790 OFFCURVE",
"219 790 CURVE SMOOTH",
"196.333 790 OFFCURVE",
"179 770.333 OFFCURVE",
"179 749 CURVE SMOOTH",
"179 726.333 OFFCURVE",
"196.333 707 OFFCURVE",
"219 707 CURVE SMOOTH",
"241.667 707 OFFCURVE",
"259 726.333 OFFCURVE",
"259 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 85 85 64 86 24 81 45 33 28 26 79 69 55 40 37 30 28 24 6 5 0 12 5 18 15 3 6 9 73 6 61 21 9 61 3 52 1 1 55 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
55 85 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
85 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"358 803.667 OFFCURVE",
"331.667 830 OFFCURVE",
"301 830 CURVE SMOOTH",
"270.333 830 OFFCURVE",
"244 803.667 OFFCURVE",
"244 773 CURVE SMOOTH",
"244 742.333 OFFCURVE",
"270.333 716 OFFCURVE",
"301 716 CURVE SMOOTH",
"331.667 716 OFFCURVE",
"358 742.333 OFFCURVE",
"358 773 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 753 OFFCURVE",
"321 736 OFFCURVE",
"301 736 CURVE SMOOTH",
"281 736 OFFCURVE",
"264 753 OFFCURVE",
"264 773 CURVE SMOOTH",
"264 793 OFFCURVE",
"281 810 OFFCURVE",
"301 810 CURVE SMOOTH",
"321 810 OFFCURVE",
"338 793 OFFCURVE",
"338 773 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
1 85 85 64 86 12 81 33 21 16 14 79 69 43 28 25 18 16 12 6 4 63 57 4 0 3 7 66 60 7 9 73 6 49 9 49 3 40 1 1 43 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
43 85 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
85 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"468 168.667 OFFCURVE",
"461.333 176 OFFCURVE",
"448 176 CURVE SMOOTH",
"440 176 OFFCURVE",
"433.333 171.667 OFFCURVE",
"428 163 CURVE",
"419.333 145 OFFCURVE",
"413.667 131 OFFCURVE",
"411 121 CURVE",
"381.667 59.667 OFFCURVE",
"319.333 20 OFFCURVE",
"250 20 CURVE SMOOTH",
"186.667 20 OFFCURVE",
"140 45.333 OFFCURVE",
"110 96 CURVE SMOOTH",
"86 136.667 OFFCURVE",
"74 191.333 OFFCURVE",
"74 260 CURVE SMOOTH",
"74 364 OFFCURVE",
"91 451 OFFCURVE",
"125 521 CURVE SMOOTH",
"140.333 551.667 OFFCURVE",
"158.667 578.667 OFFCURVE",
"180 602 CURVE SMOOTH",
"208.667 633.333 OFFCURVE",
"236 649 OFFCURVE",
"262 649 CURVE SMOOTH",
"294.667 649 OFFCURVE",
"320.333 625.667 OFFCURVE",
"339 579 CURVE SMOOTH",
"353.667 543 OFFCURVE",
"361 505.333 OFFCURVE",
"361 466 CURVE SMOOTH",
"361 400.667 OFFCURVE",
"352.333 360 OFFCURVE",
"335 344 CURVE",
"326.333 337.333 OFFCURVE",
"320 332.667 OFFCURVE",
"316 330 CURVE",
"322.667 315.333 OFFCURVE",
"332.667 308 OFFCURVE",
"346 308 CURVE SMOOTH",
"364 308 OFFCURVE",
"378.667 332 OFFCURVE",
"390 380 CURVE SMOOTH",
"398.667 416.667 OFFCURVE",
"403 449 OFFCURVE",
"403 477 CURVE SMOOTH",
"403 533.667 OFFCURVE",
"393 581.333 OFFCURVE",
"373 620 CURVE SMOOTH",
"347.667 669.333 OFFCURVE",
"309.333 694 OFFCURVE",
"258 694 CURVE SMOOTH",
"222.667 694 OFFCURVE",
"188.333 679 OFFCURVE",
"155 649 CURVE SMOOTH",
"109 608.333 OFFCURVE",
"74.333 551.667 OFFCURVE",
"51 479 CURVE SMOOTH",
"30.333 417 OFFCURVE",
"20 350.333 OFFCURVE",
"20 279 CURVE SMOOTH",
"20 199 OFFCURVE",
"35.667 132.667 OFFCURVE",
"67 80 CURVE SMOOTH",
"105 16 OFFCURVE",
"161 -17.333 OFFCURVE",
"235 -20 CURVE",
"228.333 -26 OFFCURVE",
"221.333 -32 OFFCURVE",
"214 -38 CURVE",
"205.333 -46 OFFCURVE",
"201 -53.333 OFFCURVE",
"201 -60 CURVE SMOOTH",
"201 -64 OFFCURVE",
"205 -67.333 OFFCURVE",
"213 -70 CURVE",
"217.667 -73.333 OFFCURVE",
"230.667 -76.667 OFFCURVE",
"252 -80 CURVE SMOOTH",
"273.333 -83.333 OFFCURVE",
"286.333 -88 OFFCURVE",
"291 -94 CURVE",
"289 -104 OFFCURVE",
"279.333 -113.667 OFFCURVE",
"262 -123 CURVE SMOOTH",
"252 -128.333 OFFCURVE",
"238.333 -134.333 OFFCURVE",
"221 -141 CURVE",
"231 -169 LINE",
"260.333 -158.333 OFFCURVE",
"280.667 -149.333 OFFCURVE",
"292 -142 CURVE SMOOTH",
"315.333 -127.333 OFFCURVE",
"327 -110 OFFCURVE",
"327 -90 CURVE SMOOTH",
"327 -76 OFFCURVE",
"316.333 -65.333 OFFCURVE",
"295 -58 CURVE",
"288.333 -56 OFFCURVE",
"271.667 -53 OFFCURVE",
"245 -49 CURVE",
"254.333 -36.333 OFFCURVE",
"261 -26.333 OFFCURVE",
"265 -19 CURVE",
"315 -15 OFFCURVE",
"360 2 OFFCURVE",
"400 32 CURVE SMOOTH",
"445.333 66 OFFCURVE",
"468 106.667 OFFCURVE",
"468 154 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 75 75 64 76 0 73 66 46 48 28 19 15 6 0 24 5 10 52 4 42 62 4 32 56 6 38 14 38 3 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 75 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
75 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 488;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"300.667 788 OFFCURVE",
"282 816 OFFCURVE",
"270 816 CURVE SMOOTH",
"255.333 816 OFFCURVE",
"214 779.667 OFFCURVE",
"146 707 CURVE",
"145.333 703.667 OFFCURVE",
"145 702 OFFCURVE",
"145 702 CURVE",
"145 696.667 OFFCURVE",
"153 682 OFFCURVE",
"157 682 CURVE SMOOTH",
"171 682 OFFCURVE",
"191.667 695.333 OFFCURVE",
"219 722 CURVE SMOOTH",
"237.667 740 OFFCURVE",
"255 752.667 OFFCURVE",
"271 760 CURVE",
"283 764.667 OFFCURVE",
"292.333 767.667 OFFCURVE",
"299 769 CURVE",
"302 776 LINE"
);
},
{
closed = 1;
nodes = (
"432.333 66 OFFCURVE",
"404.667 78 OFFCURVE",
"362 78 CURVE SMOOTH",
"337.333 78 OFFCURVE",
"301.833 69.667 OFFCURVE",
"255.5 53 CURVE SMOOTH",
"209.167 36.333 OFFCURVE",
"173.667 28 OFFCURVE",
"149 28 CURVE SMOOTH",
"97.667 28 OFFCURVE",
"72 78.333 OFFCURVE",
"72 179 CURVE SMOOTH",
"72 219 OFFCURVE",
"73.333 246.333 OFFCURVE",
"76 261 CURVE",
"106.667 274.333 OFFCURVE",
"229 299 OFFCURVE",
"265 299 CURVE SMOOTH",
"279.667 299 OFFCURVE",
"291.667 296 OFFCURVE",
"301 290 CURVE",
"319.667 296.667 OFFCURVE",
"328.333 301.333 OFFCURVE",
"327 304 CURVE",
"319 334 LINE",
"302.333 342.667 OFFCURVE",
"285.667 347 OFFCURVE",
"269 347 CURVE SMOOTH",
"248.333 347 OFFCURVE",
"218.333 342.333 OFFCURVE",
"179 333 CURVE SMOOTH",
"139.667 323.667 OFFCURVE",
"110 319 OFFCURVE",
"90 319 CURVE SMOOTH",
"85.333 319 OFFCURVE",
"81.667 320.667 OFFCURVE",
"79 324 CURVE",
"86.333 438.667 OFFCURVE",
"92.667 524.667 OFFCURVE",
"98 582 CURVE",
"114 595.333 OFFCURVE",
"155.333 608.333 OFFCURVE",
"222 621 CURVE SMOOTH",
"281.333 631.667 OFFCURVE",
"326.333 637 OFFCURVE",
"357 637 CURVE SMOOTH",
"361 637 OFFCURVE",
"367.167 636.5 OFFCURVE",
"375.5 635.5 CURVE SMOOTH",
"383.833 634.5 OFFCURVE",
"390 634 OFFCURVE",
"394 634 CURVE SMOOTH",
"403.333 634 OFFCURVE",
"411.667 637.667 OFFCURVE",
"419 645 CURVE",
"395.667 673 OFFCURVE",
"365.333 687 OFFCURVE",
"328 687 CURVE SMOOTH",
"299.333 687 OFFCURVE",
"255.333 679.333 OFFCURVE",
"196 664 CURVE SMOOTH",
"130 646.667 OFFCURVE",
"84.667 636.667 OFFCURVE",
"60 634 CURVE",
"44 627.333 OFFCURVE",
"32.667 621 OFFCURVE",
"26 615 CURVE",
"27.333 607 OFFCURVE",
"32 581 OFFCURVE",
"32 569 CURVE",
"32 569 OFFCURVE",
"31.333 558.333 OFFCURVE",
"30 537 CURVE SMOOTH",
"23.333 448.333 OFFCURVE",
"20 341.333 OFFCURVE",
"20 216 CURVE SMOOTH",
"20 58 OFFCURVE",
"67 -21 OFFCURVE",
"161 -21 CURVE SMOOTH",
"189.667 -21 OFFCURVE",
"231.167 -11.833 OFFCURVE",
"285.5 6.5 CURVE SMOOTH",
"339.833 24.833 OFFCURVE",
"381.333 34 OFFCURVE",
"410 34 CURVE SMOOTH",
"412.667 34 OFFCURVE",
"416.5 33.5 OFFCURVE",
"421.5 32.5 CURVE SMOOTH",
"426.5 31.5 OFFCURVE",
"430.333 31 OFFCURVE",
"433 31 CURVE SMOOTH",
"437.667 31 OFFCURVE",
"441.667 34.667 OFFCURVE",
"445 42 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
1 77 77 64 78 17 63 55 44 19 7 70 61 42 34 17 10 0 27 5 53 29 4 53 53 4 31 75 6 22 72 6 25 47 6 40 58 6 65 14 40 3 25 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"383 783 OFFCURVE",
"378 788 OFFCURVE",
"368 788 CURVE SMOOTH",
"366 788 OFFCURVE",
"356.833 781.5 OFFCURVE",
"340.5 768.5 CURVE SMOOTH",
"324.167 755.5 OFFCURVE",
"309.333 749 OFFCURVE",
"296 749 CURVE SMOOTH",
"283.333 749 OFFCURVE",
"269.167 755.5 OFFCURVE",
"253.5 768.5 CURVE SMOOTH",
"237.833 781.5 OFFCURVE",
"221.333 788 OFFCURVE",
"204 788 CURVE SMOOTH",
"191.333 788 OFFCURVE",
"172.667 781 OFFCURVE",
"148 767 CURVE SMOOTH",
"121.333 751.667 OFFCURVE",
"108 738.333 OFFCURVE",
"108 727 CURVE SMOOTH",
"108 717 OFFCURVE",
"113.333 712 OFFCURVE",
"124 712 CURVE",
"124 712 OFFCURVE",
"163.333 743 OFFCURVE",
"190 743 CURVE SMOOTH",
"201.333 743 OFFCURVE",
"215.667 737 OFFCURVE",
"233 725 CURVE SMOOTH",
"250.333 713 OFFCURVE",
"268.333 707 OFFCURVE",
"287 707 CURVE SMOOTH",
"312.333 707 OFFCURVE",
"383 750.333 OFFCURVE",
"383 773 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"461.333 678.667 OFFCURVE",
"451 682 OFFCURVE",
"441 682 CURVE SMOOTH",
"414.333 682 OFFCURVE",
"392.667 653.667 OFFCURVE",
"376 597 CURVE SMOOTH",
"363.333 553.667 OFFCURVE",
"357 514.333 OFFCURVE",
"357 479 CURVE SMOOTH",
"360 179 LINE SMOOTH",
"360.667 107.667 OFFCURVE",
"352 72 OFFCURVE",
"334 72 CURVE SMOOTH",
"313.333 72 OFFCURVE",
"279.667 142.667 OFFCURVE",
"233 284 CURVE SMOOTH",
"193 406.667 OFFCURVE",
"168.667 494.333 OFFCURVE",
"160 547 CURVE",
"158 563.667 OFFCURVE",
"156 580 OFFCURVE",
"154 596 CURVE SMOOTH",
"151.333 620.667 OFFCURVE",
"148.667 635.333 OFFCURVE",
"146 640 CURVE SMOOTH",
"135.333 657.333 OFFCURVE",
"116.667 666 OFFCURVE",
"90 666 CURVE SMOOTH",
"56 666 OFFCURVE",
"39 657.333 OFFCURVE",
"39 640 CURVE SMOOTH",
"39 638.667 OFFCURVE",
"39.5 636.5 OFFCURVE",
"40.5 633.5 CURVE SMOOTH",
"41.5 630.5 OFFCURVE",
"42 628.333 OFFCURVE",
"42 627 CURVE SMOOTH",
"42 498 LINE SMOOTH",
"42 468.667 OFFCURVE",
"38.667 425.5 OFFCURVE",
"32 368.5 CURVE SMOOTH",
"25.333 311.5 OFFCURVE",
"22 268.667 OFFCURVE",
"22 240 CURVE SMOOTH",
"22 228 OFFCURVE",
"21.667 210 OFFCURVE",
"21 186 CURVE SMOOTH",
"20.333 162 OFFCURVE",
"20 144 OFFCURVE",
"20 132 CURVE SMOOTH",
"20 44.667 OFFCURVE",
"33.333 1 OFFCURVE",
"60 1 CURVE SMOOTH",
"74.667 1 OFFCURVE",
"100 17.333 OFFCURVE",
"100 32 CURVE SMOOTH",
"100 33.333 OFFCURVE",
"96.333 39.333 OFFCURVE",
"89 50 CURVE",
"75.667 66.667 OFFCURVE",
"69 128.667 OFFCURVE",
"69 236 CURVE SMOOTH",
"69 272 OFFCURVE",
"72.667 318.667 OFFCURVE",
"80 376 CURVE SMOOTH",
"89.333 451.333 OFFCURVE",
"94.667 498 OFFCURVE",
"96 516 CURVE SMOOTH",
"96.667 528 OFFCURVE",
"100.667 534.667 OFFCURVE",
"108 536 CURVE",
"148 402 OFFCURVE",
"178 301.333 OFFCURVE",
"198 234 CURVE SMOOTH",
"243.333 88.667 OFFCURVE",
"292.333 16 OFFCURVE",
"345 16 CURVE SMOOTH",
"366.333 16 OFFCURVE",
"382.667 34.667 OFFCURVE",
"394 72 CURVE SMOOTH",
"402 98.667 OFFCURVE",
"406.333 126 OFFCURVE",
"407 154 CURVE SMOOTH",
"410 457 LINE SMOOTH",
"410 483 OFFCURVE",
"413 517.667 OFFCURVE",
"419 561 CURVE SMOOTH",
"426.333 615.667 OFFCURVE",
"434.667 645.667 OFFCURVE",
"444 651 CURVE",
"450 653.667 OFFCURVE",
"456.333 656.333 OFFCURVE",
"463 659 CURVE SMOOTH",
"469.667 661.667 OFFCURVE",
"472.667 666 OFFCURVE",
"472 672 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
1 85 85 64 86 23 66 39 9 79 64 49 23 11 0 54 4 45 45 4 57 41 4 61 60 78 4 31 76 6 35 3 6 18 6 6 15 21 15 83 3 52 1 1 54 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
54 85 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
85 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 492;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"409 770.333 OFFCURVE",
"391.667 790 OFFCURVE",
"369 790 CURVE SMOOTH",
"346.333 790 OFFCURVE",
"329 770.333 OFFCURVE",
"329 749 CURVE SMOOTH",
"329 726.333 OFFCURVE",
"346.333 707 OFFCURVE",
"369 707 CURVE SMOOTH",
"391.667 707 OFFCURVE",
"409 726.333 OFFCURVE",
"409 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 770.333 OFFCURVE",
"241.667 790 OFFCURVE",
"219 790 CURVE SMOOTH",
"196.333 790 OFFCURVE",
"179 770.333 OFFCURVE",
"179 749 CURVE SMOOTH",
"179 726.333 OFFCURVE",
"196.333 707 OFFCURVE",
"219 707 CURVE SMOOTH",
"241.667 707 OFFCURVE",
"259 726.333 OFFCURVE",
"259 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 60 60 64 61 24 6 5 0 12 5 18 42 5 24 50 4 34 15 3 6 9 46 6 38 56 7 28 21 9 38 3 28 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"329 770.333 OFFCURVE",
"311.667 790 OFFCURVE",
"289 790 CURVE SMOOTH",
"266.333 790 OFFCURVE",
"249 770.333 OFFCURVE",
"249 749 CURVE SMOOTH",
"249 726.333 OFFCURVE",
"266.333 707 OFFCURVE",
"289 707 CURVE SMOOTH",
"311.667 707 OFFCURVE",
"329 726.333 OFFCURVE",
"329 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 770.333 OFFCURVE",
"161.667 790 OFFCURVE",
"139 790 CURVE SMOOTH",
"116.333 790 OFFCURVE",
"99 770.333 OFFCURVE",
"99 749 CURVE SMOOTH",
"99 726.333 OFFCURVE",
"116.333 707 OFFCURVE",
"139 707 CURVE SMOOTH",
"161.667 707 OFFCURVE",
"179 726.333 OFFCURVE",
"179 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"405 661 LINE SMOOTH",
"405 674.333 OFFCURVE",
"377.667 690 OFFCURVE",
"363 690 CURVE SMOOTH",
"349.667 690 OFFCURVE",
"338 668.333 OFFCURVE",
"338 655 CURVE SMOOTH",
"338 653.667 OFFCURVE",
"340.667 647.333 OFFCURVE",
"346 636 CURVE SMOOTH",
"357.333 613.333 OFFCURVE",
"363 571 OFFCURVE",
"363 509 CURVE SMOOTH",
"363 186.333 OFFCURVE",
"307.333 25 OFFCURVE",
"196 25 CURVE SMOOTH",
"154.667 25 OFFCURVE",
"123 47 OFFCURVE",
"101 91 CURVE SMOOTH",
"83.667 125.667 OFFCURVE",
"75 166 OFFCURVE",
"75 212 CURVE SMOOTH",
"75 342 LINE SMOOTH",
"75 370.667 OFFCURVE",
"81.333 446.667 OFFCURVE",
"94 570 CURVE SMOOTH",
"97.333 602.667 OFFCURVE",
"106 619.333 OFFCURVE",
"120 620 CURVE",
"122.667 649.333 OFFCURVE",
"94.667 665 OFFCURVE",
"64 665 CURVE SMOOTH",
"49.333 665 OFFCURVE",
"20 646.333 OFFCURVE",
"20 633 CURVE SMOOTH",
"20 627.667 OFFCURVE",
"22 619.5 OFFCURVE",
"26 608.5 CURVE SMOOTH",
"30 597.5 OFFCURVE",
"32 589 OFFCURVE",
"32 583 CURVE SMOOTH",
"32 551 OFFCURVE",
"30 502.5 OFFCURVE",
"26 437.5 CURVE SMOOTH",
"22 372.5 OFFCURVE",
"20 323.667 OFFCURVE",
"20 291 CURVE SMOOTH",
"20 227.667 OFFCURVE",
"24.333 178 OFFCURVE",
"33 142 CURVE SMOOTH",
"45.667 88 OFFCURVE",
"69.667 46 OFFCURVE",
"105 16 CURVE SMOOTH",
"135.667 -10 OFFCURVE",
"171 -23 OFFCURVE",
"211 -23 CURVE SMOOTH",
"254.333 -23 OFFCURVE",
"292.333 -5.667 OFFCURVE",
"325 29 CURVE SMOOTH",
"350.333 56.333 OFFCURVE",
"370.667 110.333 OFFCURVE",
"386 191 CURVE SMOOTH",
"398.667 255.667 OFFCURVE",
"405 315 OFFCURVE",
"405 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
1 70 70 64 71 24 45 48 6 5 0 12 5 18 59 4 24 63 5 69 24 53 52 5 42 36 50 5 39 15 3 6 9 57 6 30 21 9 66 3 30 1 1 36 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
36 70 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
70 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 425;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"258.667 534.333 OFFCURVE",
"242.333 559 OFFCURVE",
"233 559 CURVE SMOOTH",
"220.333 559 OFFCURVE",
"185 528 OFFCURVE",
"127 466 CURVE",
"127 463.333 OFFCURVE",
"127 462 OFFCURVE",
"127 462 CURVE",
"127 458 OFFCURVE",
"133 445 OFFCURVE",
"137 445 CURVE SMOOTH",
"149 445 OFFCURVE",
"166.667 456.333 OFFCURVE",
"190 479 CURVE SMOOTH",
"205.333 494.333 OFFCURVE",
"220 505.333 OFFCURVE",
"234 512 CURVE",
"244 515.333 OFFCURVE",
"252 517.667 OFFCURVE",
"258 519 CURVE",
"260 525 LINE"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 77 77 64 78 17 74 51 7 64 38 12 10 0 49 46 4 54 70 5 31 23 4 17 25 7 27 36 35 7 66 42 6 59 14 19 59 2 27 1 1 31 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
31 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"239 463.333 OFFCURVE",
"239 464.667 OFFCURVE",
"239 466 CURVE",
"181 528 OFFCURVE",
"145.667 559 OFFCURVE",
"133 559 CURVE SMOOTH",
"123.667 559 OFFCURVE",
"107.333 534.333 OFFCURVE",
"106 525 CURVE",
"108 519 LINE",
"118 515 OFFCURVE",
"126 512.667 OFFCURVE",
"132 512 CURVE",
"146 505.333 OFFCURVE",
"160.667 494.333 OFFCURVE",
"176 479 CURVE SMOOTH",
"199.333 456.333 OFFCURVE",
"217 445 OFFCURVE",
"229 445 CURVE SMOOTH",
"233 445 OFFCURVE",
"239 458 OFFCURVE",
"239 462 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 77 77 64 78 17 74 51 3 64 38 15 10 0 49 46 4 54 70 5 31 23 4 17 25 7 27 36 35 7 66 42 6 59 13 19 59 2 27 1 1 31 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
31 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"294 459 OFFCURVE",
"294 460.333 OFFCURVE",
"294 461 CURVE",
"230.667 517.667 OFFCURVE",
"195.667 546 OFFCURVE",
"189 546 CURVE SMOOTH",
"182.333 546 OFFCURVE",
"147.333 517.667 OFFCURVE",
"84 461 CURVE",
"84 459 OFFCURVE",
"84 457.667 OFFCURVE",
"84 457 CURVE SMOOTH",
"84 453 OFFCURVE",
"90 440 OFFCURVE",
"94 440 CURVE SMOOTH",
"104.667 440 OFFCURVE",
"122 451.333 OFFCURVE",
"146 474 CURVE",
"166.667 488 OFFCURVE",
"181 495.667 OFFCURVE",
"189 497 CURVE",
"193 494.333 OFFCURVE",
"200 491.333 OFFCURVE",
"210 488 CURVE",
"216.667 485.333 OFFCURVE",
"224 480.667 OFFCURVE",
"232 474 CURVE",
"256 451.333 OFFCURVE",
"273.333 440 OFFCURVE",
"284 440 CURVE SMOOTH",
"288 440 OFFCURVE",
"294 453 OFFCURVE",
"294 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
1 84 84 64 85 24 81 58 13 3 71 45 22 18 16 0 56 53 4 61 77 5 38 30 4 24 32 7 34 43 42 7 73 9 6 20 49 6 66 20 26 66 2 34 1 1 38 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
38 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"275 500.333 OFFCURVE",
"261.333 515 OFFCURVE",
"244 515 CURVE SMOOTH",
"228 515 OFFCURVE",
"214 500.333 OFFCURVE",
"214 483 CURVE SMOOTH",
"214 467 OFFCURVE",
"228 452 OFFCURVE",
"244 452 CURVE SMOOTH",
"261.333 452 OFFCURVE",
"275 467 OFFCURVE",
"275 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160 500.333 OFFCURVE",
"146 515 OFFCURVE",
"130 515 CURVE SMOOTH",
"112.667 515 OFFCURVE",
"99 500.333 OFFCURVE",
"99 483 CURVE SMOOTH",
"99 467 OFFCURVE",
"112.667 452 OFFCURVE",
"130 452 CURVE SMOOTH",
"146 452 OFFCURVE",
"160 467 OFFCURVE",
"160 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 84 84 64 85 24 81 58 71 45 56 53 4 61 6 5 0 12 5 18 77 5 38 30 4 24 15 3 6 9 32 7 34 43 42 7 73 49 6 66 21 9 26 66 2 34 1 1 38 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
38 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"311 528.667 OFFCURVE",
"306.333 533 OFFCURVE",
"297 533 CURVE SMOOTH",
"295.667 533 OFFCURVE",
"288 527.5 OFFCURVE",
"274 516.5 CURVE SMOOTH",
"260 505.5 OFFCURVE",
"247.333 500 OFFCURVE",
"236 500 CURVE SMOOTH",
"225.333 500 OFFCURVE",
"213.333 505.5 OFFCURVE",
"200 516.5 CURVE SMOOTH",
"186.667 527.5 OFFCURVE",
"172.667 533 OFFCURVE",
"158 533 CURVE SMOOTH",
"136.667 533 OFFCURVE",
"77 501 OFFCURVE",
"77 481 CURVE SMOOTH",
"77 472.333 OFFCURVE",
"81.333 468 OFFCURVE",
"90 468 CURVE",
"90 468 OFFCURVE",
"123 495 OFFCURVE",
"147 495 CURVE SMOOTH",
"156.333 495 OFFCURVE",
"168.333 489.833 OFFCURVE",
"183 479.5 CURVE SMOOTH",
"197.667 469.167 OFFCURVE",
"213 464 OFFCURVE",
"229 464 CURVE SMOOTH",
"250.333 464 OFFCURVE",
"311 501.333 OFFCURVE",
"311 520 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 82 82 64 83 22 79 56 9 69 43 11 5 0 54 51 4 59 75 5 36 28 4 22 3 7 17 6 7 14 30 7 32 41 40 7 71 47 6 64 20 14 24 64 2 32 1 1 36 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
36 82 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
82 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"248 543.667 OFFCURVE",
"221.667 570 OFFCURVE",
"191 570 CURVE SMOOTH",
"160.333 570 OFFCURVE",
"134 543.667 OFFCURVE",
"134 513 CURVE SMOOTH",
"134 482.333 OFFCURVE",
"160.333 456 OFFCURVE",
"191 456 CURVE SMOOTH",
"221.667 456 OFFCURVE",
"248 482.333 OFFCURVE",
"248 513 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"228 493 OFFCURVE",
"211 476 OFFCURVE",
"191 476 CURVE SMOOTH",
"171 476 OFFCURVE",
"154 493 OFFCURVE",
"154 513 CURVE SMOOTH",
"154 533 OFFCURVE",
"171 550 OFFCURVE",
"191 550 CURVE SMOOTH",
"211 550 OFFCURVE",
"228 533 OFFCURVE",
"228 513 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
1 84 84 64 85 12 81 46 71 33 65 4 6 59 4 0 44 41 4 49 77 5 26 18 4 12 3 7 68 62 7 9 20 7 22 31 30 7 73 37 6 54 9 14 54 2 22 1 1 26 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
26 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 351;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"334 113.333 OFFCURVE",
"319 138 OFFCURVE",
"311 138 CURVE SMOOTH",
"305 138 OFFCURVE",
"300.333 135.667 OFFCURVE",
"297 131 CURVE",
"291 119 OFFCURVE",
"287 109.667 OFFCURVE",
"285 103 CURVE",
"273.667 83 OFFCURVE",
"256.333 64 OFFCURVE",
"233 46 CURVE SMOOTH",
"207 26 OFFCURVE",
"184.333 16 OFFCURVE",
"165 16 CURVE SMOOTH",
"133 16 OFFCURVE",
"109.333 31.667 OFFCURVE",
"94 63 CURVE SMOOTH",
"82.667 87 OFFCURVE",
"77 117 OFFCURVE",
"77 153 CURVE SMOOTH",
"77 199.667 OFFCURVE",
"85.667 249 OFFCURVE",
"103 301 CURVE SMOOTH",
"126.333 368.333 OFFCURVE",
"156.333 402 OFFCURVE",
"193 402 CURVE SMOOTH",
"226.333 402 OFFCURVE",
"243 365 OFFCURVE",
"243 291 CURVE SMOOTH",
"243 259 OFFCURVE",
"241.667 239 OFFCURVE",
"239 231 CURVE",
"233 216.333 OFFCURVE",
"230 210 OFFCURVE",
"230 212 CURVE",
"230 201.333 OFFCURVE",
"249.333 192 OFFCURVE",
"260 192 CURVE SMOOTH",
"282 192 OFFCURVE",
"293 228.667 OFFCURVE",
"293 302 CURVE SMOOTH",
"293 321.333 OFFCURVE",
"290.667 341.667 OFFCURVE",
"286 363 CURVE SMOOTH",
"278 397.667 OFFCURVE",
"193.667 446 OFFCURVE",
"155 446 CURVE SMOOTH",
"114.333 446 OFFCURVE",
"80.333 406.667 OFFCURVE",
"53 328 CURVE SMOOTH",
"31 264.667 OFFCURVE",
"20 207.333 OFFCURVE",
"20 156 CURVE SMOOTH",
"20 110.667 OFFCURVE",
"30 72.667 OFFCURVE",
"50 42 CURVE SMOOTH",
"72.667 7.333 OFFCURVE",
"105 -12.667 OFFCURVE",
"147 -18 CURVE",
"139.667 -24 OFFCURVE",
"132.333 -30.333 OFFCURVE",
"125 -37 CURVE SMOOTH",
"115.667 -45 OFFCURVE",
"111 -52.667 OFFCURVE",
"111 -60 CURVE SMOOTH",
"111 -64.667 OFFCURVE",
"115 -68 OFFCURVE",
"123 -70 CURVE",
"126.333 -73.333 OFFCURVE",
"139.333 -76.833 OFFCURVE",
"162 -80.5 CURVE SMOOTH",
"184.667 -84.167 OFFCURVE",
"197.667 -88.667 OFFCURVE",
"201 -94 CURVE",
"199.667 -103.333 OFFCURVE",
"190 -113 OFFCURVE",
"172 -123 CURVE SMOOTH",
"162.667 -128.333 OFFCURVE",
"149 -134.333 OFFCURVE",
"131 -141 CURVE",
"141 -169 LINE",
"171 -157.667 OFFCURVE",
"191.333 -148.667 OFFCURVE",
"202 -142 CURVE SMOOTH",
"225.333 -127.333 OFFCURVE",
"237 -110 OFFCURVE",
"237 -90 CURVE SMOOTH",
"237 -75.333 OFFCURVE",
"226.333 -64.667 OFFCURVE",
"205 -58 CURVE SMOOTH",
"200.333 -56.667 OFFCURVE",
"183.667 -53.667 OFFCURVE",
"155 -49 CURVE",
"165 -35.667 OFFCURVE",
"172 -25.333 OFFCURVE",
"176 -18 CURVE",
"233.568 -12.767 OFFCURVE",
"334 32.336 OFFCURVE",
"334 104 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 71 71 64 72 0 68 60 43 46 28 19 15 6 0 13 10 10 5 24 56 5 32 50 4 41 52 6 36 14 36 2 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 71 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
71 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 354;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"243.667 534.333 OFFCURVE",
"227.333 559 OFFCURVE",
"218 559 CURVE SMOOTH",
"205.333 559 OFFCURVE",
"170 528 OFFCURVE",
"112 466 CURVE",
"112 463.333 OFFCURVE",
"112 462 OFFCURVE",
"112 462 CURVE",
"112 458 OFFCURVE",
"118 445 OFFCURVE",
"122 445 CURVE SMOOTH",
"134 445 OFFCURVE",
"151.667 456.333 OFFCURVE",
"175 479 CURVE SMOOTH",
"190.333 494.333 OFFCURVE",
"205 505.333 OFFCURVE",
"219 512 CURVE",
"229 515.333 OFFCURVE",
"237 517.667 OFFCURVE",
"243 519 CURVE",
"245 525 LINE"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 62 62 64 63 17 46 7 12 10 0 17 5 23 55 5 23 48 5 30 38 4 23 36 6 27 40 7 21 58 6 33 51 6 27 14 27 2 21 1 1 23 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
23 62 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
62 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 343;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"236 463.333 OFFCURVE",
"236 464.667 OFFCURVE",
"236 466 CURVE",
"178 528 OFFCURVE",
"142.667 559 OFFCURVE",
"130 559 CURVE SMOOTH",
"120.667 559 OFFCURVE",
"104.333 534.333 OFFCURVE",
"103 525 CURVE",
"105 519 LINE",
"115 515 OFFCURVE",
"123 512.667 OFFCURVE",
"129 512 CURVE",
"143 505.333 OFFCURVE",
"157.667 494.333 OFFCURVE",
"173 479 CURVE SMOOTH",
"196.333 456.333 OFFCURVE",
"214 445 OFFCURVE",
"226 445 CURVE SMOOTH",
"230 445 OFFCURVE",
"236 458 OFFCURVE",
"236 462 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
1 62 62 64 63 17 46 3 15 10 0 17 5 23 55 5 23 48 5 30 38 4 23 36 6 27 40 7 21 58 6 33 51 6 27 13 27 2 21 1 1 23 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
23 62 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
62 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 343;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"259 459 OFFCURVE",
"259 460.333 OFFCURVE",
"259 461 CURVE",
"195.667 517.667 OFFCURVE",
"160.667 546 OFFCURVE",
"154 546 CURVE SMOOTH",
"147.333 546 OFFCURVE",
"112.333 517.667 OFFCURVE",
"49 461 CURVE",
"49 459 OFFCURVE",
"49 457.667 OFFCURVE",
"49 457 CURVE SMOOTH",
"49 453 OFFCURVE",
"55 440 OFFCURVE",
"59 440 CURVE SMOOTH",
"69.667 440 OFFCURVE",
"87 451.333 OFFCURVE",
"111 474 CURVE",
"131.667 488 OFFCURVE",
"146 495.667 OFFCURVE",
"154 497 CURVE",
"158 494.333 OFFCURVE",
"165 491.333 OFFCURVE",
"175 488 CURVE SMOOTH",
"181.667 486 OFFCURVE",
"189 481.333 OFFCURVE",
"197 474 CURVE SMOOTH",
"221 451.333 OFFCURVE",
"238.333 440 OFFCURVE",
"249 440 CURVE SMOOTH",
"253 440 OFFCURVE",
"259 453 OFFCURVE",
"259 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
1 69 69 64 70 24 53 13 3 22 18 16 0 24 5 30 62 5 30 55 5 37 45 4 30 43 6 34 47 7 28 9 6 20 65 6 40 58 6 34 20 34 2 28 1 1 30 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
30 69 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
69 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 343;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"250 500.333 OFFCURVE",
"236.333 515 OFFCURVE",
"219 515 CURVE SMOOTH",
"203 515 OFFCURVE",
"189 500.333 OFFCURVE",
"189 483 CURVE SMOOTH",
"189 467 OFFCURVE",
"203 452 OFFCURVE",
"219 452 CURVE SMOOTH",
"236.333 452 OFFCURVE",
"250 467 OFFCURVE",
"250 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 500.333 OFFCURVE",
"121 515 OFFCURVE",
"105 515 CURVE SMOOTH",
"87.667 515 OFFCURVE",
"74 500.333 OFFCURVE",
"74 483 CURVE SMOOTH",
"74 467 OFFCURVE",
"87.667 452 OFFCURVE",
"105 452 CURVE SMOOTH",
"121 452 OFFCURVE",
"135 467 OFFCURVE",
"135 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 69 69 64 70 24 53 24 5 30 62 5 30 6 5 0 12 5 18 55 5 37 45 4 30 43 6 34 15 3 6 9 47 7 28 65 6 40 58 6 34 21 9 34 2 28 1 1 30 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
30 69 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
69 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 343;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"153 534.333 OFFCURVE",
"136.333 559 OFFCURVE",
"127 559 CURVE SMOOTH",
"113.667 559 OFFCURVE",
"78.333 528 OFFCURVE",
"21 466 CURVE",
"20.333 463.333 OFFCURVE",
"20 462 OFFCURVE",
"20 462 CURVE",
"20 458 OFFCURVE",
"26 445 OFFCURVE",
"30 445 CURVE SMOOTH",
"42 445 OFFCURVE",
"59.667 456.333 OFFCURVE",
"83 479 CURVE SMOOTH",
"99 494.333 OFFCURVE",
"113.667 505.333 OFFCURVE",
"127 512 CURVE",
"137 515.333 OFFCURVE",
"145 517.667 OFFCURVE",
"151 519 CURVE",
"153 525 LINE"
);
},
{
closed = 1;
nodes = (
"90 404.333 OFFCURVE",
"63.667 415 OFFCURVE",
"49 415 CURVE SMOOTH",
"40.333 415 OFFCURVE",
"31.667 412.667 OFFCURVE",
"23 408 CURVE",
"23 41 LINE SMOOTH",
"23 9.667 OFFCURVE",
"39.667 -6 OFFCURVE",
"73 -6 CURVE SMOOTH",
"77 -6 OFFCURVE",
"80.667 -3.333 OFFCURVE",
"84 2 CURVE",
"77.333 27.333 OFFCURVE",
"74 47.333 OFFCURVE",
"74 62 CURVE SMOOTH",
"74 283 LINE SMOOTH",
"74 295 OFFCURVE",
"76.667 313 OFFCURVE",
"82 337 CURVE SMOOTH",
"87.333 361 OFFCURVE",
"90 379 OFFCURVE",
"90 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 33 33 64 34 0 30 7 23 10 0 17 5 27 21 20 4 28 27 14 25 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 33 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
33 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 128;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"143 453.333 OFFCURVE",
"142.667 454.667 OFFCURVE",
"142 456 CURVE",
"84.667 518 OFFCURVE",
"49.333 549 OFFCURVE",
"36 549 CURVE SMOOTH",
"26.667 549 OFFCURVE",
"10 524.333 OFFCURVE",
"10 515 CURVE",
"12 509 LINE",
"22 505 OFFCURVE",
"30 502.667 OFFCURVE",
"36 502 CURVE",
"49.333 495.333 OFFCURVE",
"64 484.333 OFFCURVE",
"80 469 CURVE SMOOTH",
"103.333 446.333 OFFCURVE",
"121 435 OFFCURVE",
"133 435 CURVE SMOOTH",
"137 435 OFFCURVE",
"143 448 OFFCURVE",
"143 452 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"110 413.333 OFFCURVE",
"83.667 424 OFFCURVE",
"69 424 CURVE SMOOTH",
"60.333 424 OFFCURVE",
"51.667 421.667 OFFCURVE",
"43 417 CURVE",
"43 50 LINE SMOOTH",
"43 18.667 OFFCURVE",
"59.333 3 OFFCURVE",
"92 3 CURVE SMOOTH",
"96.667 3 OFFCURVE",
"100.333 5.667 OFFCURVE",
"103 11 CURVE",
"97 36.333 OFFCURVE",
"94 56.333 OFFCURVE",
"94 71 CURVE SMOOTH",
"94 292 LINE SMOOTH",
"94 304 OFFCURVE",
"96.667 322 OFFCURVE",
"102 346 CURVE SMOOTH",
"107.333 370 OFFCURVE",
"110 388 OFFCURVE",
"110 400 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
1 33 33 64 34 0 3 23 10 0 17 5 27 21 20 4 28 27 13 25 30 2 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 33 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
33 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 148;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"161.333 462 OFFCURVE",
"161 463.333 OFFCURVE",
"161 464 CURVE",
"120.333 505.333 OFFCURVE",
"94.667 526 OFFCURVE",
"84 526 CURVE SMOOTH",
"70 526 OFFCURVE",
"42.333 501.667 OFFCURVE",
"1 453 CURVE",
"0.333 450.333 OFFCURVE",
"0 449 OFFCURVE",
"0 449 CURVE",
"0 445 OFFCURVE",
"7 432 OFFCURVE",
"11 432 CURVE SMOOTH",
"16.333 432 OFFCURVE",
"26.667 439.333 OFFCURVE",
"42 454 CURVE",
"62.667 468 OFFCURVE",
"76.667 475.667 OFFCURVE",
"84 477 CURVE",
"88.667 474.333 OFFCURVE",
"96 471.333 OFFCURVE",
"106 468 CURVE SMOOTH",
"112.667 466 OFFCURVE",
"120.167 461 OFFCURVE",
"128.5 453 CURVE SMOOTH",
"136.833 445 OFFCURVE",
"143 441 OFFCURVE",
"147 441 CURVE SMOOTH",
"153.667 441 OFFCURVE",
"162 453.333 OFFCURVE",
"162 460 CURVE"
);
},
{
closed = 1;
nodes = (
"112 404.333 OFFCURVE",
"85.667 415 OFFCURVE",
"71 415 CURVE SMOOTH",
"62.333 415 OFFCURVE",
"53.667 412.667 OFFCURVE",
"45 408 CURVE",
"45 41 LINE SMOOTH",
"45 9.667 OFFCURVE",
"61.667 -6 OFFCURVE",
"95 -6 CURVE SMOOTH",
"99 -6 OFFCURVE",
"102.667 -3.333 OFFCURVE",
"106 2 CURVE",
"99.333 27.333 OFFCURVE",
"96 47.333 OFFCURVE",
"96 62 CURVE SMOOTH",
"96 283 LINE SMOOTH",
"96 295 OFFCURVE",
"98.667 313 OFFCURVE",
"104 337 CURVE SMOOTH",
"109.333 361 OFFCURVE",
"112 379 OFFCURVE",
"112 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 39 39 64 40 0 36 12 3 29 15 0 23 5 33 27 26 4 34 33 8 6 19 19 31 1 1 15 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
15 39 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
39 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 147;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"145 500.333 OFFCURVE",
"131.333 515 OFFCURVE",
"114 515 CURVE SMOOTH",
"98 515 OFFCURVE",
"84 500.333 OFFCURVE",
"84 483 CURVE SMOOTH",
"84 467 OFFCURVE",
"98 452 OFFCURVE",
"114 452 CURVE SMOOTH",
"131.333 452 OFFCURVE",
"145 467 OFFCURVE",
"145 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"50 500.333 OFFCURVE",
"36 515 OFFCURVE",
"20 515 CURVE SMOOTH",
"2.667 515 OFFCURVE",
"-11 500.333 OFFCURVE",
"-11 483 CURVE SMOOTH",
"-11 467 OFFCURVE",
"2.667 452 OFFCURVE",
"20 452 CURVE SMOOTH",
"36 452 OFFCURVE",
"50 467 OFFCURVE",
"50 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 397.667 OFFCURVE",
"91.333 403.333 OFFCURVE",
"80 408 CURVE",
"71.333 412.667 OFFCURVE",
"63 415 OFFCURVE",
"55 415 CURVE SMOOTH",
"47 415 OFFCURVE",
"38.667 412.667 OFFCURVE",
"30 408 CURVE",
"30 41 LINE SMOOTH",
"30 9.667 OFFCURVE",
"46.333 -6 OFFCURVE",
"79 -6 CURVE SMOOTH",
"83.667 -6 OFFCURVE",
"87.333 -3.333 OFFCURVE",
"90 2 CURVE",
"84 27.333 OFFCURVE",
"81 47.333 OFFCURVE",
"81 62 CURVE SMOOTH",
"81 283 LINE SMOOTH",
"81 295 OFFCURVE",
"83.667 313 OFFCURVE",
"89 337 CURVE SMOOTH",
"94.333 361 OFFCURVE",
"97 379 OFFCURVE",
"97 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 41 41 64 42 0 37 30 24 5 34 6 5 0 12 5 18 28 27 4 35 34 15 3 6 9 21 9 32 1 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 41 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
41 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 134;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"301 528.667 OFFCURVE",
"296.333 533 OFFCURVE",
"287 533 CURVE SMOOTH",
"285.667 533 OFFCURVE",
"278 527.5 OFFCURVE",
"264 516.5 CURVE SMOOTH",
"250 505.5 OFFCURVE",
"237.333 500 OFFCURVE",
"226 500 CURVE SMOOTH",
"215.333 500 OFFCURVE",
"203.333 505.5 OFFCURVE",
"190 516.5 CURVE SMOOTH",
"176.667 527.5 OFFCURVE",
"162.667 533 OFFCURVE",
"148 533 CURVE SMOOTH",
"126.667 533 OFFCURVE",
"67 501 OFFCURVE",
"67 481 CURVE SMOOTH",
"67 472.333 OFFCURVE",
"71.333 468 OFFCURVE",
"80 468 CURVE",
"80 468 OFFCURVE",
"113 495 OFFCURVE",
"137 495 CURVE SMOOTH",
"146.333 495 OFFCURVE",
"158.333 489.833 OFFCURVE",
"173 479.5 CURVE SMOOTH",
"187.667 469.167 OFFCURVE",
"203 464 OFFCURVE",
"219 464 CURVE SMOOTH",
"240.333 464 OFFCURVE",
"301 501.333 OFFCURVE",
"301 520 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 146 LINE SMOOTH",
"337 232.667 OFFCURVE",
"324 302.333 OFFCURVE",
"298 355 CURVE SMOOTH",
"282.667 385.667 OFFCURVE",
"257 407.667 OFFCURVE",
"221 421 CURVE SMOOTH",
"205 427 OFFCURVE",
"193 430 OFFCURVE",
"185 430 CURVE SMOOTH",
"164.333 430 OFFCURVE",
"146 420.667 OFFCURVE",
"130 402 CURVE",
"121.333 392.667 OFFCURVE",
"110.667 375.333 OFFCURVE",
"98 350 CURVE SMOOTH",
"88 330 OFFCURVE",
"80 319 OFFCURVE",
"74 317 CURVE",
"73.333 326.333 OFFCURVE",
"73 336 OFFCURVE",
"73 346 CURVE SMOOTH",
"73 353.333 OFFCURVE",
"74 378.667 OFFCURVE",
"76 422 CURVE",
"68.667 431.333 OFFCURVE",
"60.667 436 OFFCURVE",
"52 436 CURVE SMOOTH",
"42.667 436 OFFCURVE",
"20 417.667 OFFCURVE",
"20 407 CURVE SMOOTH",
"20 399 OFFCURVE",
"21.167 386.667 OFFCURVE",
"23.5 370 CURVE SMOOTH",
"25.833 353.333 OFFCURVE",
"27 340.667 OFFCURVE",
"27 332 CURVE SMOOTH",
"27 326 OFFCURVE",
"26.333 317.333 OFFCURVE",
"25 306 CURVE SMOOTH",
"23.667 294.667 OFFCURVE",
"23 286 OFFCURVE",
"23 280 CURVE SMOOTH",
"23 53 LINE SMOOTH",
"23 11 OFFCURVE",
"36.333 -10 OFFCURVE",
"63 -10 CURVE SMOOTH",
"77 -10 OFFCURVE",
"84 -5 OFFCURVE",
"84 5 CURVE SMOOTH",
"84 17 OFFCURVE",
"81.833 35.333 OFFCURVE",
"77.5 60 CURVE SMOOTH",
"73.167 84.667 OFFCURVE",
"71 103.333 OFFCURVE",
"71 116 CURVE SMOOTH",
"71 211.333 OFFCURVE",
"96.333 290.333 OFFCURVE",
"147 353 CURVE SMOOTH",
"167 378.333 OFFCURVE",
"185.667 391 OFFCURVE",
"203 391 CURVE SMOOTH",
"258.333 391 OFFCURVE",
"286 280.333 OFFCURVE",
"286 59 CURVE SMOOTH",
"286 53.667 OFFCURVE",
"285.667 45 OFFCURVE",
"285 33 CURVE SMOOTH",
"284.333 21 OFFCURVE",
"284 12 OFFCURVE",
"284 6 CURVE SMOOTH",
"284 -2 LINE",
"300.667 -11.333 OFFCURVE",
"312.667 -16 OFFCURVE",
"320 -16 CURVE SMOOTH",
"327.333 -16 OFFCURVE",
"333 -12.333 OFFCURVE",
"337 -5 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 72 72 64 73 22 59 9 55 50 39 11 5 0 27 26 30 4 71 22 44 43 4 36 36 57 4 47 3 7 17 6 7 14 32 7 65 20 14 65 2 53 2 41 1 24 1 1 50 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
50 72 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
72 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = oacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"238.667 544.333 OFFCURVE",
"222.333 569 OFFCURVE",
"213 569 CURVE SMOOTH",
"200.333 569 OFFCURVE",
"165 538 OFFCURVE",
"107 476 CURVE",
"107 473.333 OFFCURVE",
"107 472 OFFCURVE",
"107 472 CURVE",
"107 468 OFFCURVE",
"113 455 OFFCURVE",
"117 455 CURVE SMOOTH",
"129 455 OFFCURVE",
"146.667 466.333 OFFCURVE",
"170 489 CURVE SMOOTH",
"185.333 504.333 OFFCURVE",
"200 515.333 OFFCURVE",
"214 522 CURVE",
"224 525.333 OFFCURVE",
"232 527.667 OFFCURVE",
"238 529 CURVE",
"240 535 LINE"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 49 49 64 50 17 7 12 10 0 41 5 25 33 4 17 37 6 29 45 7 21 14 29 2 21 1 1 25 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
25 49 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
49 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ograve;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"251 463.333 OFFCURVE",
"251 464.667 OFFCURVE",
"251 466 CURVE",
"193 528 OFFCURVE",
"157.667 559 OFFCURVE",
"145 559 CURVE SMOOTH",
"135.667 559 OFFCURVE",
"119.333 534.333 OFFCURVE",
"118 525 CURVE",
"120 519 LINE",
"130 515 OFFCURVE",
"138 512.667 OFFCURVE",
"144 512 CURVE",
"158 505.333 OFFCURVE",
"172.667 494.333 OFFCURVE",
"188 479 CURVE SMOOTH",
"211.333 456.333 OFFCURVE",
"229 445 OFFCURVE",
"241 445 CURVE SMOOTH",
"245 445 OFFCURVE",
"251 458 OFFCURVE",
"251 462 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 49 49 64 50 17 3 15 10 0 41 5 25 33 4 17 37 6 29 45 7 21 13 29 2 21 1 1 25 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
25 49 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
49 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"284 459 OFFCURVE",
"284 460.333 OFFCURVE",
"284 461 CURVE",
"220.667 517.667 OFFCURVE",
"185.667 546 OFFCURVE",
"179 546 CURVE SMOOTH",
"172.333 546 OFFCURVE",
"137.333 517.667 OFFCURVE",
"74 461 CURVE",
"74 459 OFFCURVE",
"74 457.667 OFFCURVE",
"74 457 CURVE SMOOTH",
"74 453 OFFCURVE",
"80 440 OFFCURVE",
"84 440 CURVE SMOOTH",
"94.667 440 OFFCURVE",
"112 451.333 OFFCURVE",
"136 474 CURVE",
"156.667 488 OFFCURVE",
"171 495.667 OFFCURVE",
"179 497 CURVE",
"183 494.333 OFFCURVE",
"190 491.333 OFFCURVE",
"200 488 CURVE SMOOTH",
"206.667 486 OFFCURVE",
"214 481.333 OFFCURVE",
"222 474 CURVE SMOOTH",
"246 451.333 OFFCURVE",
"263.333 440 OFFCURVE",
"274 440 CURVE SMOOTH",
"278 440 OFFCURVE",
"284 453 OFFCURVE",
"284 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 56 56 64 57 24 13 3 22 18 16 0 48 5 32 40 4 24 44 6 36 52 7 28 9 6 20 20 36 2 28 1 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 56 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
56 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"265 500.333 OFFCURVE",
"251.333 515 OFFCURVE",
"234 515 CURVE SMOOTH",
"218 515 OFFCURVE",
"204 500.333 OFFCURVE",
"204 483 CURVE SMOOTH",
"204 467 OFFCURVE",
"218 452 OFFCURVE",
"234 452 CURVE SMOOTH",
"251.333 452 OFFCURVE",
"265 467 OFFCURVE",
"265 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 500.333 OFFCURVE",
"136 515 OFFCURVE",
"120 515 CURVE SMOOTH",
"102.667 515 OFFCURVE",
"89 500.333 OFFCURVE",
"89 483 CURVE SMOOTH",
"89 467 OFFCURVE",
"102.667 452 OFFCURVE",
"120 452 CURVE SMOOTH",
"136 452 OFFCURVE",
"150 467 OFFCURVE",
"150 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 56 56 64 57 24 6 5 0 12 5 18 48 5 32 40 4 24 15 3 6 9 44 6 36 52 7 28 21 9 36 2 28 1 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 56 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
56 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"301 538.667 OFFCURVE",
"296.333 543 OFFCURVE",
"287 543 CURVE SMOOTH",
"285.667 543 OFFCURVE",
"278 537.5 OFFCURVE",
"264 526.5 CURVE SMOOTH",
"250 515.5 OFFCURVE",
"237.333 510 OFFCURVE",
"226 510 CURVE SMOOTH",
"215.333 510 OFFCURVE",
"203.333 515.5 OFFCURVE",
"190 526.5 CURVE SMOOTH",
"176.667 537.5 OFFCURVE",
"162.667 543 OFFCURVE",
"148 543 CURVE SMOOTH",
"126.667 543 OFFCURVE",
"67 511 OFFCURVE",
"67 491 CURVE SMOOTH",
"67 482.333 OFFCURVE",
"71.333 478 OFFCURVE",
"80 478 CURVE",
"80 478 OFFCURVE",
"113 505 OFFCURVE",
"137 505 CURVE SMOOTH",
"146.333 505 OFFCURVE",
"158.333 499.833 OFFCURVE",
"173 489.5 CURVE SMOOTH",
"187.667 479.167 OFFCURVE",
"203 474 OFFCURVE",
"219 474 CURVE SMOOTH",
"240.333 474 OFFCURVE",
"301 511.333 OFFCURVE",
"301 530 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 54 54 64 55 22 9 11 0 46 5 30 38 4 22 42 6 34 3 7 17 6 7 14 50 7 26 20 14 34 2 26 1 1 30 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
30 54 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
54 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"238.667 534.333 OFFCURVE",
"222.333 559 OFFCURVE",
"213 559 CURVE SMOOTH",
"200.333 559 OFFCURVE",
"165 528 OFFCURVE",
"107 466 CURVE",
"107 464 OFFCURVE",
"107 462.667 OFFCURVE",
"107 462 CURVE SMOOTH",
"107 458 OFFCURVE",
"113 445 OFFCURVE",
"117 445 CURVE SMOOTH",
"129 445 OFFCURVE",
"146.667 456.333 OFFCURVE",
"170 479 CURVE SMOOTH",
"185.333 494.333 OFFCURVE",
"200 505.333 OFFCURVE",
"214 512 CURVE",
"224 515.333 OFFCURVE",
"232 517.667 OFFCURVE",
"238 519 CURVE",
"240 525 LINE"
);
},
{
closed = 1;
nodes = (
"301 389.333 OFFCURVE",
"279.333 405 OFFCURVE",
"258 405 CURVE SMOOTH",
"248.667 405 OFFCURVE",
"240.333 401.667 OFFCURVE",
"233 395 CURVE",
"239 375.667 OFFCURVE",
"242 356.667 OFFCURVE",
"242 338 CURVE SMOOTH",
"242 207 LINE SMOOTH",
"242 166.333 OFFCURVE",
"235.333 129 OFFCURVE",
"222 95 CURVE SMOOTH",
"204 49.667 OFFCURVE",
"178 27 OFFCURVE",
"144 27 CURVE SMOOTH",
"123.333 27 OFFCURVE",
"107.333 36.333 OFFCURVE",
"96 55 CURVE SMOOTH",
"90 65.667 OFFCURVE",
"84 84 OFFCURVE",
"78 110 CURVE SMOOTH",
"74.667 125.333 OFFCURVE",
"73 133.667 OFFCURVE",
"73 135 CURVE SMOOTH",
"73 289 LINE SMOOTH",
"73 300.333 OFFCURVE",
"74.5 317.5 OFFCURVE",
"77.5 340.5 CURVE SMOOTH",
"80.5 363.5 OFFCURVE",
"82 380.667 OFFCURVE",
"82 392 CURVE SMOOTH",
"82 413.333 OFFCURVE",
"72.667 424 OFFCURVE",
"54 424 CURVE SMOOTH",
"45.333 424 OFFCURVE",
"35.333 419.667 OFFCURVE",
"24 411 CURVE",
"24.667 382.333 OFFCURVE",
"24.333 343.333 OFFCURVE",
"23 294 CURVE SMOOTH",
"21 238 OFFCURVE",
"20 199 OFFCURVE",
"20 177 CURVE SMOOTH",
"20 114.333 OFFCURVE",
"28.667 68.667 OFFCURVE",
"46 40 CURVE SMOOTH",
"60.667 16 OFFCURVE",
"115 -7 OFFCURVE",
"147 -7 CURVE SMOOTH",
"167.667 -7 OFFCURVE",
"196.667 6.333 OFFCURVE",
"234 33 CURVE",
"239.333 9 OFFCURVE",
"242.667 -23 OFFCURVE",
"272 -23 CURVE SMOOTH",
"279.333 -23 OFFCURVE",
"285 -21.667 OFFCURVE",
"289 -19 CURVE",
"287 101 OFFCURVE",
"286 161.667 OFFCURVE",
"286 163 CURVE SMOOTH",
"286 185.667 OFFCURVE",
"288.5 219.833 OFFCURVE",
"293.5 265.5 CURVE SMOOTH",
"298.5 311.167 OFFCURVE",
"301 345.333 OFFCURVE",
"301 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 64 64 64 65 17 61 27 7 22 20 12 10 0 59 5 17 42 5 38 57 56 5 17 46 45 4 34 52 7 29 14 40 2 29 1 24 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 64 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
64 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 321;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"211 463.333 OFFCURVE",
"211 464.667 OFFCURVE",
"211 466 CURVE",
"153 528 OFFCURVE",
"117.667 559 OFFCURVE",
"105 559 CURVE SMOOTH",
"95.667 559 OFFCURVE",
"79.333 534.333 OFFCURVE",
"78 525 CURVE",
"80 519 LINE",
"90 515 OFFCURVE",
"98 512.667 OFFCURVE",
"104 512 CURVE",
"118 505.333 OFFCURVE",
"132.667 494.333 OFFCURVE",
"148 479 CURVE SMOOTH",
"171.333 456.333 OFFCURVE",
"189 445 OFFCURVE",
"201 445 CURVE SMOOTH",
"205 445 OFFCURVE",
"211 458 OFFCURVE",
"211 462 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 389.333 OFFCURVE",
"279.333 405 OFFCURVE",
"258 405 CURVE SMOOTH",
"248.667 405 OFFCURVE",
"240.333 401.667 OFFCURVE",
"233 395 CURVE",
"239 375.667 OFFCURVE",
"242 356.667 OFFCURVE",
"242 338 CURVE SMOOTH",
"242 207 LINE SMOOTH",
"242 166.333 OFFCURVE",
"235.333 129 OFFCURVE",
"222 95 CURVE SMOOTH",
"204 49.667 OFFCURVE",
"178 27 OFFCURVE",
"144 27 CURVE SMOOTH",
"123.333 27 OFFCURVE",
"107.333 36.333 OFFCURVE",
"96 55 CURVE SMOOTH",
"90 65.667 OFFCURVE",
"84 84 OFFCURVE",
"78 110 CURVE SMOOTH",
"74.667 125.333 OFFCURVE",
"73 133.667 OFFCURVE",
"73 135 CURVE SMOOTH",
"73 289 LINE SMOOTH",
"73 300.333 OFFCURVE",
"74.5 317.5 OFFCURVE",
"77.5 340.5 CURVE SMOOTH",
"80.5 363.5 OFFCURVE",
"82 380.667 OFFCURVE",
"82 392 CURVE SMOOTH",
"82 413.333 OFFCURVE",
"72.667 424 OFFCURVE",
"54 424 CURVE SMOOTH",
"45.333 424 OFFCURVE",
"35.333 419.667 OFFCURVE",
"24 411 CURVE",
"24.667 382.333 OFFCURVE",
"24.333 343.333 OFFCURVE",
"23 294 CURVE SMOOTH",
"21 238 OFFCURVE",
"20 199 OFFCURVE",
"20 177 CURVE SMOOTH",
"20 114.333 OFFCURVE",
"28.667 68.667 OFFCURVE",
"46 40 CURVE SMOOTH",
"60.667 16 OFFCURVE",
"115 -7 OFFCURVE",
"147 -7 CURVE SMOOTH",
"167.667 -7 OFFCURVE",
"196.667 6.333 OFFCURVE",
"234 33 CURVE",
"239.333 9 OFFCURVE",
"242.667 -23 OFFCURVE",
"272 -23 CURVE SMOOTH",
"279.333 -23 OFFCURVE",
"285 -21.667 OFFCURVE",
"289 -19 CURVE",
"287 101 OFFCURVE",
"286 161.667 OFFCURVE",
"286 163 CURVE SMOOTH",
"286 185.667 OFFCURVE",
"288.5 219.833 OFFCURVE",
"293.5 265.5 CURVE SMOOTH",
"298.5 311.167 OFFCURVE",
"301 345.333 OFFCURVE",
"301 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 64 64 64 65 17 61 27 3 22 20 15 10 0 59 5 17 42 5 38 57 56 5 17 46 45 4 34 52 7 29 13 40 2 29 1 24 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 64 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
64 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 321;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"264 459 OFFCURVE",
"264 460.333 OFFCURVE",
"264 461 CURVE",
"200.667 517.667 OFFCURVE",
"165.667 546 OFFCURVE",
"159 546 CURVE SMOOTH",
"152.333 546 OFFCURVE",
"117.333 517.667 OFFCURVE",
"54 461 CURVE",
"54 459 OFFCURVE",
"54 457.667 OFFCURVE",
"54 457 CURVE SMOOTH",
"54 453 OFFCURVE",
"60 440 OFFCURVE",
"64 440 CURVE SMOOTH",
"74.667 440 OFFCURVE",
"92 451.333 OFFCURVE",
"116 474 CURVE",
"136.667 488 OFFCURVE",
"151 495.667 OFFCURVE",
"159 497 CURVE",
"163 494.333 OFFCURVE",
"170 491.333 OFFCURVE",
"180 488 CURVE SMOOTH",
"186.667 486 OFFCURVE",
"194 481.333 OFFCURVE",
"202 474 CURVE SMOOTH",
"226 451.333 OFFCURVE",
"243.333 440 OFFCURVE",
"254 440 CURVE SMOOTH",
"258 440 OFFCURVE",
"264 453 OFFCURVE",
"264 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 389.333 OFFCURVE",
"279.333 405 OFFCURVE",
"258 405 CURVE SMOOTH",
"248.667 405 OFFCURVE",
"240.333 401.667 OFFCURVE",
"233 395 CURVE",
"239 375.667 OFFCURVE",
"242 356.667 OFFCURVE",
"242 338 CURVE SMOOTH",
"242 207 LINE SMOOTH",
"242 166.333 OFFCURVE",
"235.333 129 OFFCURVE",
"222 95 CURVE SMOOTH",
"204 49.667 OFFCURVE",
"178 27 OFFCURVE",
"144 27 CURVE SMOOTH",
"123.333 27 OFFCURVE",
"107.333 36.333 OFFCURVE",
"96 55 CURVE SMOOTH",
"90 65.667 OFFCURVE",
"84 84 OFFCURVE",
"78 110 CURVE SMOOTH",
"74.667 125.333 OFFCURVE",
"73 133.667 OFFCURVE",
"73 135 CURVE SMOOTH",
"73 289 LINE SMOOTH",
"73 300.333 OFFCURVE",
"74.5 317.5 OFFCURVE",
"77.5 340.5 CURVE SMOOTH",
"80.5 363.5 OFFCURVE",
"82 380.667 OFFCURVE",
"82 392 CURVE SMOOTH",
"82 413.333 OFFCURVE",
"72.667 424 OFFCURVE",
"54 424 CURVE SMOOTH",
"45.333 424 OFFCURVE",
"35.333 419.667 OFFCURVE",
"24 411 CURVE",
"24.667 382.333 OFFCURVE",
"24.333 343.333 OFFCURVE",
"23 294 CURVE SMOOTH",
"21 238 OFFCURVE",
"20 199 OFFCURVE",
"20 177 CURVE SMOOTH",
"20 114.333 OFFCURVE",
"28.667 68.667 OFFCURVE",
"46 40 CURVE SMOOTH",
"60.667 16 OFFCURVE",
"115 -7 OFFCURVE",
"147 -7 CURVE SMOOTH",
"167.667 -7 OFFCURVE",
"196.667 6.333 OFFCURVE",
"234 33 CURVE",
"239.333 9 OFFCURVE",
"242.667 -23 OFFCURVE",
"272 -23 CURVE SMOOTH",
"279.333 -23 OFFCURVE",
"285 -21.667 OFFCURVE",
"289 -19 CURVE",
"287 101 OFFCURVE",
"286 161.667 OFFCURVE",
"286 163 CURVE SMOOTH",
"286 185.667 OFFCURVE",
"288.5 219.833 OFFCURVE",
"293.5 265.5 CURVE SMOOTH",
"298.5 311.167 OFFCURVE",
"301 345.333 OFFCURVE",
"301 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
1 71 71 64 72 24 68 34 13 3 29 27 22 18 16 0 66 5 24 49 5 45 64 63 5 24 53 52 4 41 59 7 36 9 6 20 20 47 2 36 1 31 1 1 41 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
41 71 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
71 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 321;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"245 500.333 OFFCURVE",
"231.333 515 OFFCURVE",
"214 515 CURVE SMOOTH",
"198 515 OFFCURVE",
"184 500.333 OFFCURVE",
"184 483 CURVE SMOOTH",
"184 467 OFFCURVE",
"198 452 OFFCURVE",
"214 452 CURVE SMOOTH",
"231.333 452 OFFCURVE",
"245 467 OFFCURVE",
"245 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"130 500.333 OFFCURVE",
"116 515 OFFCURVE",
"100 515 CURVE SMOOTH",
"82.667 515 OFFCURVE",
"69 500.333 OFFCURVE",
"69 483 CURVE SMOOTH",
"69 467 OFFCURVE",
"82.667 452 OFFCURVE",
"100 452 CURVE SMOOTH",
"116 452 OFFCURVE",
"130 467 OFFCURVE",
"130 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 389.333 OFFCURVE",
"279.333 405 OFFCURVE",
"258 405 CURVE SMOOTH",
"248.667 405 OFFCURVE",
"240.333 401.667 OFFCURVE",
"233 395 CURVE",
"239 375.667 OFFCURVE",
"242 356.667 OFFCURVE",
"242 338 CURVE SMOOTH",
"242 207 LINE SMOOTH",
"242 166.333 OFFCURVE",
"235.333 129 OFFCURVE",
"222 95 CURVE SMOOTH",
"204 49.667 OFFCURVE",
"178 27 OFFCURVE",
"144 27 CURVE SMOOTH",
"123.333 27 OFFCURVE",
"107.333 36.333 OFFCURVE",
"96 55 CURVE SMOOTH",
"90 65.667 OFFCURVE",
"84 84 OFFCURVE",
"78 110 CURVE SMOOTH",
"74.667 125.333 OFFCURVE",
"73 133.667 OFFCURVE",
"73 135 CURVE SMOOTH",
"73 289 LINE SMOOTH",
"73 300.333 OFFCURVE",
"74.5 317.5 OFFCURVE",
"77.5 340.5 CURVE SMOOTH",
"80.5 363.5 OFFCURVE",
"82 380.667 OFFCURVE",
"82 392 CURVE SMOOTH",
"82 413.333 OFFCURVE",
"72.667 424 OFFCURVE",
"54 424 CURVE SMOOTH",
"45.333 424 OFFCURVE",
"35.333 419.667 OFFCURVE",
"24 411 CURVE",
"24.667 382.333 OFFCURVE",
"24.333 343.333 OFFCURVE",
"23 294 CURVE SMOOTH",
"21 238 OFFCURVE",
"20 199 OFFCURVE",
"20 177 CURVE SMOOTH",
"20 114.333 OFFCURVE",
"28.667 68.667 OFFCURVE",
"46 40 CURVE SMOOTH",
"60.667 16 OFFCURVE",
"115 -7 OFFCURVE",
"147 -7 CURVE SMOOTH",
"167.667 -7 OFFCURVE",
"196.667 6.333 OFFCURVE",
"234 33 CURVE",
"239.333 9 OFFCURVE",
"242.667 -23 OFFCURVE",
"272 -23 CURVE SMOOTH",
"279.333 -23 OFFCURVE",
"285 -21.667 OFFCURVE",
"289 -19 CURVE",
"287 101 OFFCURVE",
"286 161.667 OFFCURVE",
"286 163 CURVE SMOOTH",
"286 185.667 OFFCURVE",
"288.5 219.833 OFFCURVE",
"293.5 265.5 CURVE SMOOTH",
"298.5 311.167 OFFCURVE",
"301 345.333 OFFCURVE",
"301 368 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
1 71 71 64 72 24 68 34 29 27 66 5 24 6 5 0 12 5 18 49 5 45 64 63 5 24 53 52 4 41 15 3 6 9 59 7 36 21 9 47 2 36 1 31 1 1 41 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
41 71 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
71 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 321;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = dagger;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"255.333 540 OFFCURVE",
"265 546.333 OFFCURVE",
"265 553 CURVE SMOOTH",
"265 574.333 OFFCURVE",
"239 587.667 OFFCURVE",
"187 593 CURVE",
"185.667 595.667 OFFCURVE",
"185 598.333 OFFCURVE",
"185 601 CURVE SMOOTH",
"185 603.667 OFFCURVE",
"185 606.333 OFFCURVE",
"185 609 CURVE SMOOTH",
"185 619.667 OFFCURVE",
"186.833 629.333 OFFCURVE",
"190.5 638 CURVE SMOOTH",
"194.167 646.667 OFFCURVE",
"196 655.667 OFFCURVE",
"196 665 CURVE SMOOTH",
"196 689 OFFCURVE",
"176 707 OFFCURVE",
"152 707 CURVE SMOOTH",
"120 707 OFFCURVE",
"108 693.667 OFFCURVE",
"108 671 CURVE SMOOTH",
"108 657.546 OFFCURVE",
"123 614.042 OFFCURVE",
"123 604 CURVE SMOOTH",
"123 562.666 OFFCURVE",
"31 595.433 OFFCURVE",
"31 544 CURVE SMOOTH",
"31 531.765 OFFCURVE",
"64.422 524 OFFCURVE",
"75 524 CURVE",
"113 518 LINE",
"114.333 467.333 OFFCURVE",
"115.667 417.333 OFFCURVE",
"117 352 CURVE SMOOTH",
"118.333 286.667 OFFCURVE",
"120 206.667 OFFCURVE",
"120 96 CURVE SMOOTH",
"120 29.333 OFFCURVE",
"127 -4 OFFCURVE",
"141 -4 CURVE SMOOTH",
"176.76 -4 OFFCURVE",
"178 135.096 OFFCURVE",
"178 217 CURVE SMOOTH",
"178 273.667 OFFCURVE",
"178.333 326.333 OFFCURVE",
"179 375 CURVE SMOOTH",
"179.667 423.667 OFFCURVE",
"180 473 OFFCURVE",
"180 523 CURVE",
"206.667 527 OFFCURVE",
"225.333 531.333 OFFCURVE",
"236 534 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
6 24 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 6 22 6 38 6 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 6 69 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 310;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"277 550 OFFCURVE",
"269.333 578.667 OFFCURVE",
"254 604 CURVE SMOOTH",
"236 633.333 OFFCURVE",
"211.667 648 OFFCURVE",
"181 648 CURVE SMOOTH",
"174.333 648 OFFCURVE",
"169.333 646 OFFCURVE",
"166 642 CURVE",
"157 666 LINE",
"140.333 673.333 OFFCURVE",
"128 677 OFFCURVE",
"120 677 CURVE SMOOTH",
"114.667 677 OFFCURVE",
"105.667 673 OFFCURVE",
"93 665 CURVE SMOOTH",
"70.333 651.667 OFFCURVE",
"52 627 OFFCURVE",
"38 591 CURVE SMOOTH",
"26 560.333 OFFCURVE",
"20 529.667 OFFCURVE",
"20 499 CURVE SMOOTH",
"20 456.333 OFFCURVE",
"30 421.667 OFFCURVE",
"50 395 CURVE SMOOTH",
"72 366.333 OFFCURVE",
"103.667 352 OFFCURVE",
"145 352 CURVE SMOOTH",
"189 352 OFFCURVE",
"223 369.333 OFFCURVE",
"247 404 CURVE SMOOTH",
"267 434 OFFCURVE",
"277 472 OFFCURVE",
"277 518 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 487.333 OFFCURVE",
"227.333 459 OFFCURVE",
"210 433 CURVE SMOOTH",
"190.667 404.333 OFFCURVE",
"166.333 390 OFFCURVE",
"137 390 CURVE SMOOTH",
"86.333 390 OFFCURVE",
"61 427.333 OFFCURVE",
"61 502 CURVE SMOOTH",
"61 551.333 OFFCURVE",
"95.667 622 OFFCURVE",
"137 642 CURVE",
"148 642 LINE",
"146.667 623.333 OFFCURVE",
"168.667 618.667 OFFCURVE",
"186 612 CURVE",
"219.333 593.333 OFFCURVE",
"236 562 OFFCURVE",
"236 518 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 38 38 64 39 0 29 28 17 32 4 8 23 4 0 19 6 4 34 7 4 4 14 3 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 38 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
38 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 297;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"441 504 OFFCURVE",
"422.667 523 OFFCURVE",
"386 539 CURVE SMOOTH",
"356.667 551.667 OFFCURVE",
"329 558 OFFCURVE",
"303 558 CURVE SMOOTH",
"299 558 OFFCURVE",
"293.167 557.5 OFFCURVE",
"285.5 556.5 CURVE SMOOTH",
"277.833 555.5 OFFCURVE",
"272 555 OFFCURVE",
"268 555 CURVE SMOOTH",
"260.667 555 OFFCURVE",
"257 559.667 OFFCURVE",
"257 569 CURVE SMOOTH",
"257 579.667 OFFCURVE",
"259.667 595.167 OFFCURVE",
"265 615.5 CURVE SMOOTH",
"270.333 635.833 OFFCURVE",
"273 651 OFFCURVE",
"273 661 CURVE SMOOTH",
"273 682.333 OFFCURVE",
"251.333 703 OFFCURVE",
"230 703 CURVE SMOOTH",
"216 703 OFFCURVE",
"204.333 697 OFFCURVE",
"195 685 CURVE",
"195 679 LINE SMOOTH",
"195 678.333 OFFCURVE",
"196.5 670.667 OFFCURVE",
"199.5 656 CURVE SMOOTH",
"202.5 641.333 OFFCURVE",
"204 619 OFFCURVE",
"204 589 CURVE SMOOTH",
"204 573.667 OFFCURVE",
"203.667 558.667 OFFCURVE",
"203 544 CURVE",
"180.333 528.667 OFFCURVE",
"160.667 517.667 OFFCURVE",
"144 511 CURVE",
"61.333 463.667 OFFCURVE",
"20 407 OFFCURVE",
"20 341 CURVE SMOOTH",
"20 291.667 OFFCURVE",
"39 252 OFFCURVE",
"77 222 CURVE SMOOTH",
"109.667 196 OFFCURVE",
"152 180 OFFCURVE",
"204 174 CURVE",
"204 93 LINE SMOOTH",
"204 87.667 OFFCURVE",
"203.333 80 OFFCURVE",
"202 70 CURVE SMOOTH",
"200.667 60 OFFCURVE",
"200 52.667 OFFCURVE",
"200 48 CURVE SMOOTH",
"200 32.667 OFFCURVE",
"203.333 18.333 OFFCURVE",
"210 5 CURVE SMOOTH",
"218 -12.333 OFFCURVE",
"228.667 -21 OFFCURVE",
"242 -21 CURVE SMOOTH",
"248 -21 OFFCURVE",
"257.333 -17.333 OFFCURVE",
"270 -10 CURVE",
"261.333 51.333 OFFCURVE",
"255.667 112.667 OFFCURVE",
"253 174 CURVE",
"289 186.667 OFFCURVE",
"324.667 199.333 OFFCURVE",
"360 212 CURVE SMOOTH",
"409.333 231.333 OFFCURVE",
"434 254 OFFCURVE",
"434 280 CURVE SMOOTH",
"434 286.667 OFFCURVE",
"432.667 291.667 OFFCURVE",
"430 295 CURVE",
"403 295 LINE SMOOTH",
"401 295 OFFCURVE",
"388.333 286.833 OFFCURVE",
"365 270.5 CURVE SMOOTH",
"341.667 254.167 OFFCURVE",
"327.667 245 OFFCURVE",
"323 243 CURVE",
"295 233 OFFCURVE",
"273.667 226 OFFCURVE",
"259 222 CURVE",
"250 231 LINE",
"250 481 LINE SMOOTH",
"250 501.667 OFFCURVE",
"261 512 OFFCURVE",
"283 512 CURVE SMOOTH",
"295.667 512 OFFCURVE",
"314.5 502.667 OFFCURVE",
"339.5 484 CURVE SMOOTH",
"364.5 465.333 OFFCURVE",
"385.667 456 OFFCURVE",
"403 456 CURVE SMOOTH",
"428.333 456 OFFCURVE",
"441 464.667 OFFCURVE",
"441 482 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 217.333 OFFCURVE",
"193.333 216 OFFCURVE",
"188 216 CURVE SMOOTH",
"125.333 216 OFFCURVE",
"66 267.667 OFFCURVE",
"66 329 CURVE SMOOTH",
"66 388.333 OFFCURVE",
"111.333 438.333 OFFCURVE",
"202 479 CURVE",
"202 220 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
1 72 72 64 73 0 70 65 15 14 9 2 52 47 46 21 0 5 64 17 5 64 23 5 29 67 4 37 55 4 41 8 7 4 65 43 33 32 29 5 64 57 6 5 5 6 60 49 25 1 1 37 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
37 72 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
72 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 461;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"518 80.333 OFFCURVE",
"514 83.167 OFFCURVE",
"510 87.5 CURVE SMOOTH",
"506 91.833 OFFCURVE",
"502.333 94 OFFCURVE",
"499 94 CURVE SMOOTH",
"493 94 OFFCURVE",
"486 91 OFFCURVE",
"478 85 CURVE",
"469.333 55 OFFCURVE",
"437 40 OFFCURVE",
"381 40 CURVE SMOOTH",
"353.667 40 OFFCURVE",
"312.833 41.167 OFFCURVE",
"258.5 43.5 CURVE SMOOTH",
"204.167 45.833 OFFCURVE",
"163.667 47 OFFCURVE",
"137 47 CURVE",
"140.333 58.333 OFFCURVE",
"152.667 83.667 OFFCURVE",
"174 123 CURVE SMOOTH",
"193.333 157.667 OFFCURVE",
"203 181.667 OFFCURVE",
"203 195 CURVE SMOOTH",
"203 228.333 OFFCURVE",
"187.333 266.333 OFFCURVE",
"156 309 CURVE",
"306 300 LINE SMOOTH",
"317.333 299.333 OFFCURVE",
"323 307 OFFCURVE",
"323 323 CURVE SMOOTH",
"323 335 OFFCURVE",
"317.333 341 OFFCURVE",
"306 341 CURVE SMOOTH",
"140 341 LINE",
"118 365.667 OFFCURVE",
"107 404 OFFCURVE",
"107 456 CURVE SMOOTH",
"107 550.667 OFFCURVE",
"172.667 629 OFFCURVE",
"266 629 CURVE SMOOTH",
"305.333 629 OFFCURVE",
"343.667 617 OFFCURVE",
"381 593 CURVE SMOOTH",
"416.333 570.333 OFFCURVE",
"444 541 OFFCURVE",
"464 505 CURVE",
"462 493 OFFCURVE",
"458.667 487 OFFCURVE",
"454 487 CURVE SMOOTH",
"452 487 OFFCURVE",
"449 487.5 OFFCURVE",
"445 488.5 CURVE SMOOTH",
"441 489.5 OFFCURVE",
"437.667 490 OFFCURVE",
"435 490 CURVE SMOOTH",
"421.667 490 OFFCURVE",
"415 482.667 OFFCURVE",
"415 468 CURVE SMOOTH",
"415 453.333 OFFCURVE",
"438 440 OFFCURVE",
"454 440 CURVE SMOOTH",
"478 440 OFFCURVE",
"520 476.333 OFFCURVE",
"520 499 CURVE SMOOTH",
"520 521 OFFCURVE",
"499.667 550 OFFCURVE",
"459 586 CURVE SMOOTH",
"422.333 618 OFFCURVE",
"391.333 638 OFFCURVE",
"366 646 CURVE SMOOTH",
"323.333 660 OFFCURVE",
"288.333 667 OFFCURVE",
"261 667 CURVE SMOOTH",
"178.333 667 OFFCURVE",
"72 580.333 OFFCURVE",
"72 499 CURVE SMOOTH",
"72 491.667 OFFCURVE",
"71.167 481 OFFCURVE",
"69.5 467 CURVE SMOOTH",
"67.833 453 OFFCURVE",
"67 442.333 OFFCURVE",
"67 435 CURVE SMOOTH",
"67 417.667 OFFCURVE",
"79 358.333 OFFCURVE",
"87 341 CURVE",
"42.333 343.667 OFFCURVE",
"20 338.667 OFFCURVE",
"20 326 CURVE SMOOTH",
"20 306.667 OFFCURVE",
"24.667 297.333 OFFCURVE",
"34 298 CURVE",
"105 306 LINE",
"117 288.667 OFFCURVE",
"129.333 271.333 OFFCURVE",
"142 254 CURVE",
"151.333 238 OFFCURVE",
"157 217 OFFCURVE",
"159 191 CURVE",
"147 163 OFFCURVE",
"135 135 OFFCURVE",
"123 107 CURVE SMOOTH",
"107 71.667 OFFCURVE",
"89.333 48 OFFCURVE",
"70 36 CURVE",
"68 33.333 OFFCURVE",
"67 30.333 OFFCURVE",
"67 27 CURVE SMOOTH",
"67 13.667 OFFCURVE",
"84.667 3 OFFCURVE",
"98 3 CURVE SMOOTH",
"132.667 3 OFFCURVE",
"184.833 2 OFFCURVE",
"254.5 0 CURVE SMOOTH",
"324.167 -2 OFFCURVE",
"376.333 -3 OFFCURVE",
"411 -3 CURVE SMOOTH",
"437.667 -3 OFFCURVE",
"461.667 4 OFFCURVE",
"483 18 CURVE SMOOTH",
"507.667 34 OFFCURVE",
"520.667 54.333 OFFCURVE",
"522 79 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
1 84 84 64 85 0 81 68 48 20 74 70 68 53 25 16 46 5 0 40 65 5 23 28 10 4 60 60 4 31 7 7 77 57 7 34 63 62 7 21 67 77 6 4 43 6 51 34 4 1 1 23 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
23 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 542;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = bullet;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"183 354 OFFCURVE",
"149.667 373 OFFCURVE",
"111 373 CURVE SMOOTH",
"77.667 373 OFFCURVE",
"50 342.333 OFFCURVE",
"50 309 CURVE SMOOTH",
"50 282.333 OFFCURVE",
"56.667 264 OFFCURVE",
"70 254 CURVE",
"81.333 244.667 OFFCURVE",
"100.667 240 OFFCURVE",
"128 240 CURVE SMOOTH",
"146.667 240 OFFCURVE",
"161 248.667 OFFCURVE",
"171 266 CURVE SMOOTH",
"179 280 OFFCURVE",
"183 297.333 OFFCURVE",
"183 318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
1 14 14 64 15 0 0 5 8 11 4 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 14 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
14 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 233;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"412 304 OFFCURVE",
"405.667 311 OFFCURVE",
"393 311 CURVE SMOOTH",
"389.667 311 OFFCURVE",
"383.333 309.667 OFFCURVE",
"374 307 CURVE",
"378.667 350.333 OFFCURVE",
"381 391 OFFCURVE",
"381 429 CURVE SMOOTH",
"381 451 OFFCURVE",
"378.667 506.333 OFFCURVE",
"374 595 CURVE",
"381.333 593 OFFCURVE",
"386.667 592 OFFCURVE",
"390 592 CURVE SMOOTH",
"402.667 592 OFFCURVE",
"409 598.667 OFFCURVE",
"409 612 CURVE SMOOTH",
"409 624 OFFCURVE",
"396.667 632 OFFCURVE",
"372 636 CURVE",
"372 640 LINE SMOOTH",
"372 654 OFFCURVE",
"372 667.667 OFFCURVE",
"372 681 CURVE",
"370 699.667 OFFCURVE",
"363 709 OFFCURVE",
"351 709 CURVE SMOOTH",
"337.667 709 OFFCURVE",
"331 702.333 OFFCURVE",
"331 689 CURVE SMOOTH",
"331 674.333 OFFCURVE",
"331.333 658.667 OFFCURVE",
"332 642 CURVE",
"320 644 OFFCURVE",
"308.333 645.667 OFFCURVE",
"297 647 CURVE",
"295 681.667 OFFCURVE",
"287 699 OFFCURVE",
"273 699 CURVE SMOOTH",
"259 699 OFFCURVE",
"252 692.333 OFFCURVE",
"252 679 CURVE SMOOTH",
"252 675.667 OFFCURVE",
"252.833 670.667 OFFCURVE",
"254.5 664 CURVE SMOOTH",
"256.167 657.333 OFFCURVE",
"257 653 OFFCURVE",
"257 651 CURVE",
"243 651.667 OFFCURVE",
"228.333 652 OFFCURVE",
"213 652 CURVE SMOOTH",
"99.667 652 OFFCURVE",
"20 571.333 OFFCURVE",
"20 458 CURVE SMOOTH",
"20 331.333 OFFCURVE",
"116.333 245.667 OFFCURVE",
"243 247 CURVE",
"241 135.667 OFFCURVE",
"243 60 OFFCURVE",
"249 20 CURVE SMOOTH",
"251 6.667 OFFCURVE",
"257.667 0 OFFCURVE",
"269 0 CURVE SMOOTH",
"282.333 0 OFFCURVE",
"289 7 OFFCURVE",
"289 21 CURVE SMOOTH",
"289 42.333 OFFCURVE",
"288.167 75 OFFCURVE",
"286.5 119 CURVE SMOOTH",
"284.833 163 OFFCURVE",
"284 196.333 OFFCURVE",
"284 219 CURVE SMOOTH",
"284 250 LINE",
"298 251.333 OFFCURVE",
"312.667 253.333 OFFCURVE",
"328 256 CURVE",
"319.333 189.333 OFFCURVE",
"315 139.333 OFFCURVE",
"315 106 CURVE SMOOTH",
"315 94 OFFCURVE",
"316.833 76.167 OFFCURVE",
"320.5 52.5 CURVE SMOOTH",
"324.167 28.833 OFFCURVE",
"326 10.667 OFFCURVE",
"326 -2 CURVE SMOOTH",
"326 -10.667 OFFCURVE",
"328.333 -21.333 OFFCURVE",
"333 -34 CURVE SMOOTH",
"338.333 -49.333 OFFCURVE",
"344.667 -57 OFFCURVE",
"352 -57 CURVE SMOOTH",
"361.333 -57 OFFCURVE",
"366 -38.667 OFFCURVE",
"366 -2 CURVE SMOOTH",
"366 10 OFFCURVE",
"364.167 28 OFFCURVE",
"360.5 52 CURVE SMOOTH",
"356.833 76 OFFCURVE",
"355 94 OFFCURVE",
"355 106 CURVE SMOOTH",
"355 139.333 OFFCURVE",
"359.667 192 OFFCURVE",
"369 264 CURVE",
"397.667 270.667 OFFCURVE",
"412 279.333 OFFCURVE",
"412 290 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"336 385 OFFCURVE",
"334.333 334 OFFCURVE",
"331 292 CURVE",
"285 295 LINE",
"294 612 LINE",
"331 612 LINE",
"334.333 568.667 OFFCURVE",
"336 513 OFFCURVE",
"336 445 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"254.333 568 OFFCURVE",
"252.667 536.333 OFFCURVE",
"254 515 CURVE",
"250 415.667 OFFCURVE",
"247 341.333 OFFCURVE",
"245 292 CURVE",
"241 292 LINE SMOOTH",
"138.333 290.667 OFFCURVE",
"60 357.667 OFFCURVE",
"60 459 CURVE SMOOTH",
"60 549.667 OFFCURVE",
"123.667 612 OFFCURVE",
"213 612 CURVE SMOOTH",
"228.333 612 OFFCURVE",
"243.667 611.333 OFFCURVE",
"259 610 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
1 90 90 64 91 0 86 85 79 75 73 72 68 66 62 60 47 43 18 77 58 41 38 24 18 0 5 49 13 4 7 16 4 4 82 4 33 70 4 64 47 49 4 66 56 53 3 62 86 4 21 20 74 77 7 36 38 51 9 26 1 1 33 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
33 90 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
90 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 432;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"400 184.333 OFFCURVE",
"387.333 235.333 OFFCURVE",
"362 282 CURVE SMOOTH",
"334 333.333 OFFCURVE",
"295.667 368.667 OFFCURVE",
"247 388 CURVE",
"245 390 OFFCURVE",
"244 391.333 OFFCURVE",
"244 392 CURVE",
"272 414 OFFCURVE",
"294.667 441 OFFCURVE",
"312 473 CURVE SMOOTH",
"331.333 507.667 OFFCURVE",
"341 541.333 OFFCURVE",
"341 574 CURVE SMOOTH",
"341 646 OFFCURVE",
"295.333 691 OFFCURVE",
"226 691 CURVE SMOOTH",
"133.333 691 OFFCURVE",
"72.333 631.333 OFFCURVE",
"43 512 CURVE SMOOTH",
"27.667 451.333 OFFCURVE",
"20 354 OFFCURVE",
"20 220 CURVE SMOOTH",
"20 92 OFFCURVE",
"23.333 22.667 OFFCURVE",
"30 12 CURVE SMOOTH",
"36.667 1.333 OFFCURVE",
"44 -4 OFFCURVE",
"52 -4 CURVE SMOOTH",
"62.667 -4 OFFCURVE",
"79 10.667 OFFCURVE",
"79 20 CURVE",
"79 14.667 OFFCURVE",
"76.667 33.333 OFFCURVE",
"72 76 CURVE SMOOTH",
"68.667 106.667 OFFCURVE",
"67 149.667 OFFCURVE",
"67 205 CURVE SMOOTH",
"67 329 OFFCURVE",
"72 417.667 OFFCURVE",
"82 471 CURVE SMOOTH",
"104.667 589.667 OFFCURVE",
"152.667 649 OFFCURVE",
"226 649 CURVE SMOOTH",
"270 649 OFFCURVE",
"292 622.667 OFFCURVE",
"292 570 CURVE SMOOTH",
"292 534.667 OFFCURVE",
"276.667 498.667 OFFCURVE",
"246 462 CURVE SMOOTH",
"210.667 420 OFFCURVE",
"186.667 396.333 OFFCURVE",
"174 391 CURVE",
"171.333 385.667 OFFCURVE",
"170 380.333 OFFCURVE",
"170 375 CURVE SMOOTH",
"170 361 OFFCURVE",
"177.333 354 OFFCURVE",
"192 354 CURVE SMOOTH",
"193.333 354 OFFCURVE",
"195 354.333 OFFCURVE",
"197 355 CURVE",
"199.667 355 OFFCURVE",
"201.667 355 OFFCURVE",
"203 355 CURVE SMOOTH",
"209.667 355 OFFCURVE",
"222 350 OFFCURVE",
"240 340 CURVE SMOOTH",
"308 302.667 OFFCURVE",
"351 221.333 OFFCURVE",
"351 140 CURVE SMOOTH",
"351 116 OFFCURVE",
"337.667 57.333 OFFCURVE",
"327 36 CURVE SMOOTH",
"288.333 -38.667 OFFCURVE",
"254.333 -62.333 OFFCURVE",
"169 -81 CURVE SMOOTH",
"155 -84.333 OFFCURVE",
"148 -89.667 OFFCURVE",
"148 -97 CURVE SMOOTH",
"148 -110.333 OFFCURVE",
"157.333 -117 OFFCURVE",
"176 -117 CURVE SMOOTH",
"194 -117 OFFCURVE",
"215.333 -113.333 OFFCURVE",
"240 -106 CURVE SMOOTH",
"345.333 -72.667 OFFCURVE",
"400 14.333 OFFCURVE",
"400 129 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 65 65 64 66 0 24 22 20 59 42 26 7 15 4 0 32 4 55 38 4 48 34 6 52 5 52 3 45 1 1 48 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
48 65 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
65 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 418;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"400 597 OFFCURVE",
"314 683 OFFCURVE",
"210 683 CURVE SMOOTH",
"106 683 OFFCURVE",
"20 597 OFFCURVE",
"20 493 CURVE SMOOTH",
"20 389 OFFCURVE",
"106 303 OFFCURVE",
"210 303 CURVE SMOOTH",
"314 303 OFFCURVE",
"400 389 OFFCURVE",
"400 493 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"380 399.667 OFFCURVE",
"303.333 323 OFFCURVE",
"210 323 CURVE SMOOTH",
"116.667 323 OFFCURVE",
"40 399.667 OFFCURVE",
"40 493 CURVE SMOOTH",
"40 586.333 OFFCURVE",
"116.667 663 OFFCURVE",
"210 663 CURVE SMOOTH",
"303.333 663 OFFCURVE",
"380 586.333 OFFCURVE",
"380 493 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 395.333 OFFCURVE",
"300 411 OFFCURVE",
"278 427 CURVE SMOOTH",
"260.667 439 OFFCURVE",
"243.333 451 OFFCURVE",
"226 463 CURVE",
"241.333 473.667 OFFCURVE",
"257 484 OFFCURVE",
"273 494 CURVE",
"287 505.333 OFFCURVE",
"294 522.667 OFFCURVE",
"294 546 CURVE SMOOTH",
"294 570.667 OFFCURVE",
"283 589.667 OFFCURVE",
"261 603 CURVE SMOOTH",
"243 613.667 OFFCURVE",
"220.667 619 OFFCURVE",
"194 619 CURVE SMOOTH",
"189.333 619 OFFCURVE",
"184.167 620.167 OFFCURVE",
"178.5 622.5 CURVE SMOOTH",
"172.833 624.833 OFFCURVE",
"168.667 626 OFFCURVE",
"166 626 CURVE",
"165.333 625.333 OFFCURVE",
"160.833 622.5 OFFCURVE",
"152.5 617.5 CURVE SMOOTH",
"144.167 612.5 OFFCURVE",
"140 608.333 OFFCURVE",
"140 605 CURVE SMOOTH",
"140 601 OFFCURVE",
"142.833 598.833 OFFCURVE",
"148.5 598.5 CURVE SMOOTH",
"154.167 598.167 OFFCURVE",
"157 598 OFFCURVE",
"157 598 CURVE",
"157 603.333 OFFCURVE",
"155.333 588.667 OFFCURVE",
"152 554 CURVE SMOOTH",
"149.333 523.333 OFFCURVE",
"147.667 500.333 OFFCURVE",
"147 485 CURVE",
"131 481 OFFCURVE",
"123 476.333 OFFCURVE",
"123 471 CURVE SMOOTH",
"123 467 OFFCURVE",
"127.333 463.667 OFFCURVE",
"136 461 CURVE SMOOTH",
"144.667 458.333 OFFCURVE",
"149 455.333 OFFCURVE",
"149 452 CURVE SMOOTH",
"149 422.667 OFFCURVE",
"149 407.667 OFFCURVE",
"149 407 CURVE",
"151 385 OFFCURVE",
"158 374 OFFCURVE",
"170 374 CURVE SMOOTH",
"176 374 OFFCURVE",
"179 376.667 OFFCURVE",
"179 382 CURVE",
"171 392.667 OFFCURVE",
"167 409.667 OFFCURVE",
"167 433 CURVE SMOOTH",
"167 455 LINE",
"167 455 OFFCURVE",
"174 455 OFFCURVE",
"188 455 CURVE SMOOTH",
"209.333 455 OFFCURVE",
"297 394.667 OFFCURVE",
"301 376 CURVE",
"305 374 LINE",
"311 378 LINE",
"311 380 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 510.667 OFFCURVE",
"237.333 473 OFFCURVE",
"200 473 CURVE SMOOTH",
"195.333 473 OFFCURVE",
"184 476.333 OFFCURVE",
"166 483 CURVE",
"167.333 512.333 OFFCURVE",
"169.333 534 OFFCURVE",
"172 548 CURVE",
"172.667 550 OFFCURVE",
"175.333 558.333 OFFCURVE",
"180 573 CURVE SMOOTH",
"182.667 582.333 OFFCURVE",
"184 590.667 OFFCURVE",
"184 598 CURVE SMOOTH",
"184 601 LINE",
"188.667 601.667 OFFCURVE",
"194.333 602 OFFCURVE",
"201 602 CURVE SMOOTH",
"220.333 602 OFFCURVE",
"237 598 OFFCURVE",
"251 590 CURVE SMOOTH",
"267.667 580 OFFCURVE",
"276 566 OFFCURVE",
"276 548 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
1 89 89 64 90 0 56 67 53 50 35 78 77 5 6 44 5 0 18 4 6 12 4 0 84 33 32 4 41 39 71 4 63 25 24 5 6 21 7 3 15 7 9 86 7 32 30 75 7 59 37 26 6 9 3 9 3 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 89 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
89 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 420;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"744 531 OFFCURVE",
"582 693 OFFCURVE",
"382 693 CURVE SMOOTH",
"182 693 OFFCURVE",
"20 531 OFFCURVE",
"20 331 CURVE SMOOTH",
"20 131 OFFCURVE",
"182 -31 OFFCURVE",
"382 -31 CURVE SMOOTH",
"582 -31 OFFCURVE",
"744 131 OFFCURVE",
"744 331 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"704 153.667 OFFCURVE",
"559.333 9 OFFCURVE",
"382 9 CURVE SMOOTH",
"204.667 9 OFFCURVE",
"60 153.667 OFFCURVE",
"60 331 CURVE SMOOTH",
"60 508.333 OFFCURVE",
"204.667 653 OFFCURVE",
"382 653 CURVE SMOOTH",
"559.333 653 OFFCURVE",
"704 508.333 OFFCURVE",
"704 331 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"574 222.333 OFFCURVE",
"566.667 229 OFFCURVE",
"552 229 CURVE SMOOTH",
"543.333 229 OFFCURVE",
"536.333 225.333 OFFCURVE",
"531 218 CURVE",
"524.333 205.333 OFFCURVE",
"519.667 195.667 OFFCURVE",
"517 189 CURVE",
"490.333 143 OFFCURVE",
"446.667 120 OFFCURVE",
"386 120 CURVE SMOOTH",
"290.667 120 OFFCURVE",
"243 174.333 OFFCURVE",
"243 283 CURVE SMOOTH",
"243 354.333 OFFCURVE",
"257.333 414.333 OFFCURVE",
"286 463 CURVE SMOOTH",
"298 485 OFFCURVE",
"313.333 504 OFFCURVE",
"332 520 CURVE SMOOTH",
"354.667 540 OFFCURVE",
"376 550 OFFCURVE",
"396 550 CURVE SMOOTH",
"421.333 550 OFFCURVE",
"441.333 535 OFFCURVE",
"456 505 CURVE SMOOTH",
"468 481 OFFCURVE",
"474 455 OFFCURVE",
"474 427 CURVE SMOOTH",
"474 383 OFFCURVE",
"466.333 355.333 OFFCURVE",
"451 344 CURVE SMOOTH",
"443.667 338.667 OFFCURVE",
"438.333 335 OFFCURVE",
"435 333 CURVE",
"443 318.333 OFFCURVE",
"453.667 311 OFFCURVE",
"467 311 CURVE SMOOTH",
"482.333 311 OFFCURVE",
"495.333 328.333 OFFCURVE",
"506 363 CURVE SMOOTH",
"514.667 390.333 OFFCURVE",
"519 414.333 OFFCURVE",
"519 435 CURVE SMOOTH",
"519 479 OFFCURVE",
"509.333 515 OFFCURVE",
"490 543 CURVE SMOOTH",
"467.333 575 OFFCURVE",
"435 591 OFFCURVE",
"393 591 CURVE SMOOTH",
"362.333 591 OFFCURVE",
"332.333 580.333 OFFCURVE",
"303 559 CURVE SMOOTH",
"265 531.667 OFFCURVE",
"235.667 492.667 OFFCURVE",
"215 442 CURVE SMOOTH",
"197 396.667 OFFCURVE",
"188 348 OFFCURVE",
"188 296 CURVE SMOOTH",
"188 232.667 OFFCURVE",
"204.333 181.667 OFFCURVE",
"237 143 CURVE SMOOTH",
"271.667 102.333 OFFCURVE",
"320.333 82 OFFCURVE",
"383 82 CURVE SMOOTH",
"425 82 OFFCURVE",
"465.667 92.333 OFFCURVE",
"505 113 CURVE SMOOTH",
"551 138.333 OFFCURVE",
"574 170.333 OFFCURVE",
"574 209 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
1 72 72 64 73 0 24 48 5 0 18 4 6 12 4 0 62 5 32 52 4 42 70 19 64 46 6 38 21 7 3 15 7 9 64 7 28 56 7 38 9 3 3 1 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 72 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
72 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 764;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"373 650.667 OFFCURVE",
"367.333 655 OFFCURVE",
"356 655 CURVE SMOOTH",
"342 655 OFFCURVE",
"333.667 649 OFFCURVE",
"331 637 CURVE SMOOTH",
"325 607 OFFCURVE",
"319.333 577.333 OFFCURVE",
"314 548 CURVE",
"303.333 500.667 OFFCURVE",
"292 477 OFFCURVE",
"280 477 CURVE SMOOTH",
"272.667 477 OFFCURVE",
"263.667 497.333 OFFCURVE",
"253 538 CURVE SMOOTH",
"244.333 571.333 OFFCURVE",
"239 597 OFFCURVE",
"237 615 CURVE SMOOTH",
"235.667 628.333 OFFCURVE",
"234.667 638 OFFCURVE",
"234 644 CURVE",
"227.333 650 OFFCURVE",
"222 653 OFFCURVE",
"218 653 CURVE SMOOTH",
"198.667 653 OFFCURVE",
"189 647.333 OFFCURVE",
"189 636 CURVE SMOOTH",
"189 635.333 OFFCURVE",
"189.833 633.667 OFFCURVE",
"191.5 631 CURVE SMOOTH",
"193.167 628.333 OFFCURVE",
"194 625.667 OFFCURVE",
"194 623 CURVE SMOOTH",
"194 608.333 OFFCURVE",
"193.167 586.333 OFFCURVE",
"191.5 557 CURVE SMOOTH",
"189.833 527.667 OFFCURVE",
"189 505.667 OFFCURVE",
"189 491 CURVE SMOOTH",
"189 455 OFFCURVE",
"195.333 437 OFFCURVE",
"208 437 CURVE SMOOTH",
"219.333 437 OFFCURVE",
"224.667 443 OFFCURVE",
"224 455 CURVE",
"219.333 455 OFFCURVE",
"217 457.333 OFFCURVE",
"217 462 CURVE SMOOTH",
"217 532 LINE SMOOTH",
"217 543.333 OFFCURVE",
"218 558.333 OFFCURVE",
"220 577 CURVE",
"241.333 490.333 OFFCURVE",
"261 447 OFFCURVE",
"279 447 CURVE SMOOTH",
"298.333 447 OFFCURVE",
"314.667 472.667 OFFCURVE",
"328 524 CURVE",
"328.667 460.667 OFFCURVE",
"338 429 OFFCURVE",
"356 429 CURVE SMOOTH",
"360.667 429 OFFCURVE",
"364 431.333 OFFCURVE",
"366 436 CURVE",
"366 444 LINE",
"358 447.333 OFFCURVE",
"354 461.333 OFFCURVE",
"354 486 CURVE SMOOTH",
"354 563.333 OFFCURVE",
"360.333 615.333 OFFCURVE",
"373 642 CURVE"
);
},
{
closed = 1;
nodes = (
"160 639.667 OFFCURVE",
"147 646 OFFCURVE",
"121 646 CURVE SMOOTH",
"109.667 646 OFFCURVE",
"91.667 644 OFFCURVE",
"67 640 CURVE SMOOTH",
"37.667 636 OFFCURVE",
"22 631.667 OFFCURVE",
"20 627 CURVE",
"23.333 617 OFFCURVE",
"30.333 612 OFFCURVE",
"41 612 CURVE SMOOTH",
"44.333 612 OFFCURVE",
"49.5 612.667 OFFCURVE",
"56.5 614 CURVE SMOOTH",
"63.5 615.333 OFFCURVE",
"68.333 616 OFFCURVE",
"71 616 CURVE",
"72 607 LINE",
"72 595 OFFCURVE",
"70.833 577.5 OFFCURVE",
"68.5 554.5 CURVE SMOOTH",
"66.167 531.5 OFFCURVE",
"65 514.333 OFFCURVE",
"65 503 CURVE SMOOTH",
"65 475 LINE SMOOTH",
"65 446.333 OFFCURVE",
"73.667 432 OFFCURVE",
"91 432 CURVE SMOOTH",
"91.667 432 OFFCURVE",
"94.333 433 OFFCURVE",
"99 435 CURVE",
"99 443 LINE",
"93.667 451.667 OFFCURVE",
"91 468.667 OFFCURVE",
"91 494 CURVE SMOOTH",
"91 525.333 OFFCURVE",
"94.333 564.667 OFFCURVE",
"101 612 CURVE SMOOTH",
"101.667 617.333 OFFCURVE",
"103.667 620 OFFCURVE",
"107 620 CURVE SMOOTH",
"121 620 LINE SMOOTH",
"131 620 OFFCURVE",
"140.667 618 OFFCURVE",
"150 614 CURVE",
"156.667 614 OFFCURVE",
"160 618.333 OFFCURVE",
"160 627 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
1 78 78 64 79 0 70 67 60 48 20 13 9 66 58 57 25 18 5 4 0 2 5 22 28 22 4 16 15 55 4 63 62 46 5 72 51 50 7 76 38 7 11 30 44 7 1 72 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
72 78 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
78 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 393;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"176 788 OFFCURVE",
"157 816 OFFCURVE",
"145 816 CURVE SMOOTH",
"130.333 816 OFFCURVE",
"89 779.667 OFFCURVE",
"21 707 CURVE",
"20.333 703.667 OFFCURVE",
"20 702 OFFCURVE",
"20 702 CURVE",
"20 696.667 OFFCURVE",
"28 682 OFFCURVE",
"32 682 CURVE SMOOTH",
"46 682 OFFCURVE",
"66.667 695.333 OFFCURVE",
"94 722 CURVE SMOOTH",
"112.667 740 OFFCURVE",
"130 752.667 OFFCURVE",
"146 760 CURVE",
"158 764.667 OFFCURVE",
"167.333 767.667 OFFCURVE",
"174 769 CURVE",
"176 776 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
1 17 17 64 18 0 10 0 10 7 7 14 7 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
17 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 196;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"250 770.333 OFFCURVE",
"232.667 790 OFFCURVE",
"210 790 CURVE SMOOTH",
"187.333 790 OFFCURVE",
"170 770.333 OFFCURVE",
"170 749 CURVE SMOOTH",
"170 726.333 OFFCURVE",
"187.333 707 OFFCURVE",
"210 707 CURVE SMOOTH",
"232.667 707 OFFCURVE",
"250 726.333 OFFCURVE",
"250 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 770.333 OFFCURVE",
"82.667 790 OFFCURVE",
"60 790 CURVE SMOOTH",
"37.333 790 OFFCURVE",
"20 770.333 OFFCURVE",
"20 749 CURVE SMOOTH",
"20 726.333 OFFCURVE",
"37.333 707 OFFCURVE",
"60 707 CURVE SMOOTH",
"82.667 707 OFFCURVE",
"100 726.333 OFFCURVE",
"100 749 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
1 24 24 64 25 0 6 5 0 12 5 18 21 9 15 3 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 270;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = AE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"836 52.333 OFFCURVE",
"835.667 54.5 OFFCURVE",
"835 57.5 CURVE SMOOTH",
"834.333 60.5 OFFCURVE",
"834 63 OFFCURVE",
"834 65 CURVE",
"826 80.333 OFFCURVE",
"805 88 OFFCURVE",
"771 88 CURVE SMOOTH",
"743.667 88 OFFCURVE",
"705.833 78.667 OFFCURVE",
"657.5 60 CURVE SMOOTH",
"609.167 41.333 OFFCURVE",
"571.667 32 OFFCURVE",
"545 32 CURVE SMOOTH",
"501.667 32 OFFCURVE",
"479.333 68.333 OFFCURVE",
"478 141 CURVE",
"484.667 138.333 OFFCURVE",
"491.333 137 OFFCURVE",
"498 137 CURVE SMOOTH",
"517.333 137 OFFCURVE",
"527 147.667 OFFCURVE",
"527 169 CURVE SMOOTH",
"527 177.667 OFFCURVE",
"521.333 183.333 OFFCURVE",
"510 186 CURVE SMOOTH",
"495.333 189.333 OFFCURVE",
"486.333 192.667 OFFCURVE",
"483 196 CURVE",
"483.667 250 OFFCURVE",
"484 277.667 OFFCURVE",
"484 279 CURVE",
"500 285.667 OFFCURVE",
"532.667 293.333 OFFCURVE",
"582 302 CURVE SMOOTH",
"629.333 309.333 OFFCURVE",
"663 313 OFFCURVE",
"683 313 CURVE SMOOTH",
"691 313 OFFCURVE",
"700.333 308 OFFCURVE",
"711 298 CURVE",
"720.333 305.333 OFFCURVE",
"725 312 OFFCURVE",
"725 318 CURVE SMOOTH",
"725 334 LINE",
"700.333 346 OFFCURVE",
"677.667 352 OFFCURVE",
"657 352 CURVE SMOOTH",
"653 352 OFFCURVE",
"646.333 351.333 OFFCURVE",
"637 350 CURVE SMOOTH",
"600.333 345.333 OFFCURVE",
"561.333 343 OFFCURVE",
"520 343 CURVE SMOOTH",
"516.667 343 OFFCURVE",
"511.833 341.333 OFFCURVE",
"505.5 338 CURVE SMOOTH",
"499.167 334.667 OFFCURVE",
"494.333 333 OFFCURVE",
"491 333 CURVE",
"487 334 LINE",
"491 454 OFFCURVE",
"495.333 544 OFFCURVE",
"500 604 CURVE",
"516 616.667 OFFCURVE",
"558.333 627.667 OFFCURVE",
"627 637 CURVE SMOOTH",
"681.667 643.667 OFFCURVE",
"727.667 647 OFFCURVE",
"765 647 CURVE SMOOTH",
"769 647 OFFCURVE",
"775.167 646.5 OFFCURVE",
"783.5 645.5 CURVE SMOOTH",
"791.833 644.5 OFFCURVE",
"798 644 OFFCURVE",
"802 644 CURVE SMOOTH",
"811.333 644 OFFCURVE",
"819.667 647.667 OFFCURVE",
"827 655 CURVE",
"803.667 683 OFFCURVE",
"773.333 697 OFFCURVE",
"736 697 CURVE SMOOTH",
"728 697 OFFCURVE",
"708.667 693.667 OFFCURVE",
"678 687 CURVE SMOOTH",
"598 671 OFFCURVE",
"527 663 OFFCURVE",
"465 663 CURVE SMOOTH",
"456.333 663 OFFCURVE",
"444 665.167 OFFCURVE",
"428 669.5 CURVE SMOOTH",
"412 673.833 OFFCURVE",
"399.667 676 OFFCURVE",
"391 676 CURVE SMOOTH",
"343 676 OFFCURVE",
"258.667 551 OFFCURVE",
"138 301 CURVE",
"94.667 201.667 OFFCURVE",
"63.333 126.667 OFFCURVE",
"44 76 CURVE",
"28 41.333 OFFCURVE",
"20 23.667 OFFCURVE",
"20 23 CURVE SMOOTH",
"20 5.667 OFFCURVE",
"41.333 -15 OFFCURVE",
"60 -15 CURVE SMOOTH",
"66 -15 OFFCURVE",
"70.667 -12.667 OFFCURVE",
"74 -8 CURVE",
"86.667 64.667 OFFCURVE",
"98 104.667 OFFCURVE",
"108 112 CURVE SMOOTH",
"121.333 121.333 OFFCURVE",
"164.333 129 OFFCURVE",
"237 135 CURVE SMOOTH",
"293.667 139.667 OFFCURVE",
"340.667 142 OFFCURVE",
"378 142 CURVE",
"371.333 142 OFFCURVE",
"388 140.667 OFFCURVE",
"428 138 CURVE",
"430.667 37.333 OFFCURVE",
"467 -13 OFFCURVE",
"537 -13 CURVE SMOOTH",
"567.667 -13 OFFCURVE",
"611.333 -3.5 OFFCURVE",
"668 15.5 CURVE SMOOTH",
"724.667 34.5 OFFCURVE",
"768 44 OFFCURVE",
"798 44 CURVE SMOOTH",
"800.667 44 OFFCURVE",
"804.5 43.5 OFFCURVE",
"809.5 42.5 CURVE SMOOTH",
"814.5 41.5 OFFCURVE",
"818.333 41 OFFCURVE",
"821 41 CURVE SMOOTH",
"831 41 OFFCURVE",
"836 44.333 OFFCURVE",
"836 51 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"438 529.667 OFFCURVE",
"436.667 490.333 OFFCURVE",
"434 441 CURVE SMOOTH",
"431.333 383 OFFCURVE",
"429.667 343.667 OFFCURVE",
"429 323 CURVE",
"415.667 321 OFFCURVE",
"407.333 318.667 OFFCURVE",
"404 316 CURVE",
"397.333 312 OFFCURVE",
"394 304 OFFCURVE",
"394 292 CURVE SMOOTH",
"394 276.667 OFFCURVE",
"399.667 269 OFFCURVE",
"411 269 CURVE SMOOTH",
"413 269 OFFCURVE",
"418.667 270.333 OFFCURVE",
"428 273 CURVE",
"428 235 OFFCURVE",
"428 206.667 OFFCURVE",
"428 188 CURVE",
"342.667 191.333 OFFCURVE",
"274 189 OFFCURVE",
"222 181 CURVE SMOOTH",
"217.333 180.333 OFFCURVE",
"204 177.667 OFFCURVE",
"182 173 CURVE",
"166 169 OFFCURVE",
"152.667 167 OFFCURVE",
"142 167 CURVE SMOOTH",
"133.333 167 OFFCURVE",
"129 169.333 OFFCURVE",
"129 174 CURVE SMOOTH",
"129 179.333 OFFCURVE",
"137.333 198.667 OFFCURVE",
"154 232 CURVE SMOOTH",
"192 308 OFFCURVE",
"231 381 OFFCURVE",
"271 451 CURVE SMOOTH",
"337.667 568.333 OFFCURVE",
"380.667 627 OFFCURVE",
"400 627 CURVE SMOOTH",
"415.333 627 OFFCURVE",
"427.667 619.333 OFFCURVE",
"437 604 CURVE",
"437 598 OFFCURVE",
"437 590.333 OFFCURVE",
"437 581 CURVE",
"437.667 569.667 OFFCURVE",
"438 562.333 OFFCURVE",
"438 559 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
1 122 122 64 123 0 112 110 102 78 62 40 32 12 2 114 100 78 74 38 23 0 118 5 60 59 110 108 5 70 92 90 88 4 49 50 6 76 57 7 64 83 6 5 80 6 8 43 6 36 94 6 29 36 3 29 3 20 8 1 1 23 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
23 122 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
122 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 856;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Oslash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"532 393.667 OFFCURVE",
"523.333 446.333 OFFCURVE",
"506 497 CURVE SMOOTH",
"486.667 553.667 OFFCURVE",
"459.333 598.667 OFFCURVE",
"424 632 CURVE",
"446 684 LINE",
"460 712 OFFCURVE",
"471 732.667 OFFCURVE",
"479 746 CURVE",
"470.333 755.333 OFFCURVE",
"461.667 760 OFFCURVE",
"453 760 CURVE SMOOTH",
"431.667 760 OFFCURVE",
"405 744.667 OFFCURVE",
"397 726 CURVE",
"389 698 OFFCURVE",
"384.333 676.667 OFFCURVE",
"383 662 CURVE",
"355.667 676.667 OFFCURVE",
"325.667 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 167 OFFCURVE",
"50 83 OFFCURVE",
"110 35 CURVE",
"102 21 OFFCURVE",
"94 7 OFFCURVE",
"86 -7 CURVE SMOOTH",
"72.667 -29.667 OFFCURVE",
"66 -42 OFFCURVE",
"66 -44 CURVE SMOOTH",
"66 -54.667 OFFCURVE",
"72.333 -60 OFFCURVE",
"85 -60 CURVE SMOOTH",
"105.667 -60 OFFCURVE",
"128 -37 OFFCURVE",
"152 9 CURVE",
"191.333 -9 OFFCURVE",
"228.667 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"226.667 22 OFFCURVE",
"195.667 29 OFFCURVE",
"169 43 CURVE",
"206.333 117 OFFCURVE",
"246.667 205.667 OFFCURVE",
"290 309 CURVE SMOOTH",
"327.333 399 OFFCURVE",
"364.667 489 OFFCURVE",
"402 579 CURVE",
"451.333 532.333 OFFCURVE",
"476 455.333 OFFCURVE",
"476 348 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301.333 440 OFFCURVE",
"223.333 262.667 OFFCURVE",
"130 74 CURVE",
"111.333 94.667 OFFCURVE",
"96.333 123.667 OFFCURVE",
"85 161 CURVE SMOOTH",
"74.333 195 OFFCURVE",
"69 227.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 396.667 OFFCURVE",
"104 499.667 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"317.333 626 OFFCURVE",
"338.667 619.333 OFFCURVE",
"364 606 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 60 60 64 61 0 58 38 22 6 48 42 32 29 14 10 36 5 0 54 4 16 50 6 20 44 7 4 27 8 20 3 4 1 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = yen;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"545 717.667 OFFCURVE",
"526 731 OFFCURVE",
"512 731 CURVE SMOOTH",
"502.667 731 OFFCURVE",
"492 726.333 OFFCURVE",
"480 717 CURVE",
"468.667 677 OFFCURVE",
"449.667 632.333 OFFCURVE",
"423 583 CURVE SMOOTH",
"386.368 518.894 OFFCURVE",
"343.366 381.409 OFFCURVE",
"305 391 CURVE",
"183.667 583.667 OFFCURVE",
"101.333 680 OFFCURVE",
"58 680 CURVE SMOOTH",
"40.667 680 OFFCURVE",
"20 667 OFFCURVE",
"20 651 CURVE SMOOTH",
"20 645 OFFCURVE",
"22.333 638.667 OFFCURVE",
"27 632 CURVE",
"38 632 LINE",
"42 638 OFFCURVE",
"46.667 641 OFFCURVE",
"52 641 CURVE SMOOTH",
"70 641 OFFCURVE",
"110 596 OFFCURVE",
"172 506 CURVE SMOOTH",
"223.333 432 OFFCURVE",
"259.333 375 OFFCURVE",
"280 335 CURVE",
"277 289 LINE",
"153 289 LINE SMOOTH",
"141.667 289 OFFCURVE",
"136 283.333 OFFCURVE",
"136 272 CURVE SMOOTH",
"136 254.667 OFFCURVE",
"141.667 246 OFFCURVE",
"153 246 CURVE SMOOTH",
"275 246 LINE",
"273.667 220.667 OFFCURVE",
"272 196.667 OFFCURVE",
"270 174 CURVE",
"150 174 LINE SMOOTH",
"138.667 174 OFFCURVE",
"133 168.333 OFFCURVE",
"133 157 CURVE SMOOTH",
"133 139 OFFCURVE",
"138.667 130 OFFCURVE",
"150 130 CURVE SMOOTH",
"267 130 LINE",
"261 68.667 OFFCURVE",
"256.333 34.667 OFFCURVE",
"253 28 CURVE",
"247 18.667 OFFCURVE",
"244 13.333 OFFCURVE",
"244 12 CURVE SMOOTH",
"244 0 OFFCURVE",
"272 -18 OFFCURVE",
"284 -18 CURVE SMOOTH",
"302.667 -18 OFFCURVE",
"336 10.667 OFFCURVE",
"336 28 CURVE SMOOTH",
"336 130 LINE",
"468 130 LINE SMOOTH",
"479.333 130 OFFCURVE",
"485 135.667 OFFCURVE",
"485 147 CURVE SMOOTH",
"485 165 OFFCURVE",
"479.333 174 OFFCURVE",
"468 174 CURVE SMOOTH",
"336 174 LINE",
"336 246 LINE",
"468 246 LINE SMOOTH",
"479.333 246 OFFCURVE",
"485 251.667 OFFCURVE",
"485 263 CURVE SMOOTH",
"485 280.333 OFFCURVE",
"479.333 289 OFFCURVE",
"468 289 CURVE SMOOTH",
"336 289 LINE",
"336 336 LINE SMOOTH",
"336 346.667 OFFCURVE",
"503.667 622.667 OFFCURVE",
"525 648 CURVE",
"543.667 668 OFFCURVE",
"558.333 682.333 OFFCURVE",
"569 691 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
1 69 69 64 70 0 59 52 51 54 45 41 30 0 16 9 13 5 33 13 44 26 5 5 36 5 5 38 44 5 20 19 13 12 6 5 5 49 7 57 44 43 7 3 6 6 39 38 12 3 11 36 35 14 3 13 6 31 30 19 3 18 67 57 3 23 1 1 54 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
54 69 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
69 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 589;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = ae;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"574 117.667 OFFCURVE",
"566.333 127 OFFCURVE",
"551 127 CURVE SMOOTH",
"546.333 127 OFFCURVE",
"538 118.333 OFFCURVE",
"526 101 CURVE",
"510 79.667 OFFCURVE",
"496.333 64 OFFCURVE",
"485 54 CURVE SMOOTH",
"465 37.333 OFFCURVE",
"443 29 OFFCURVE",
"419 29 CURVE SMOOTH",
"355.667 29 OFFCURVE",
"324 67.333 OFFCURVE",
"324 144 CURVE SMOOTH",
"324 149.333 OFFCURVE",
"328.333 152 OFFCURVE",
"337 152 CURVE SMOOTH",
"343.667 152 OFFCURVE",
"354.167 148.667 OFFCURVE",
"368.5 142 CURVE SMOOTH",
"382.833 135.333 OFFCURVE",
"393 132 OFFCURVE",
"399 132 CURVE SMOOTH",
"483 132 OFFCURVE",
"562 203.333 OFFCURVE",
"562 286 CURVE SMOOTH",
"562 350 OFFCURVE",
"464 431 OFFCURVE",
"400 431 CURVE SMOOTH",
"366.667 431 OFFCURVE",
"339 401.333 OFFCURVE",
"317 342 CURVE",
"307.667 364.667 OFFCURVE",
"287 384.667 OFFCURVE",
"255 402 CURVE SMOOTH",
"225 417.333 OFFCURVE",
"197 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"139 425 OFFCURVE",
"111 405.333 OFFCURVE",
"87 366 CURVE SMOOTH",
"65.667 332 OFFCURVE",
"55 297.667 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"207 -9 OFFCURVE",
"256 8 OFFCURVE",
"302 42 CURVE",
"311.333 26 OFFCURVE",
"328 12.667 OFFCURVE",
"352 2 CURVE SMOOTH",
"373.333 -7.333 OFFCURVE",
"394.333 -12 OFFCURVE",
"415 -12 CURVE SMOOTH",
"446.333 -12 OFFCURVE",
"479.667 -1.333 OFFCURVE",
"515 20 CURVE SMOOTH",
"554.333 43.333 OFFCURVE",
"574 69.667 OFFCURVE",
"574 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"505 255 OFFCURVE",
"496.667 230.333 OFFCURVE",
"480 209 CURVE SMOOTH",
"462 185.667 OFFCURVE",
"439.333 174 OFFCURVE",
"412 174 CURVE SMOOTH",
"373.333 174 OFFCURVE",
"336 203 OFFCURVE",
"336 239 CURVE SMOOTH",
"336 266.333 OFFCURVE",
"345.333 295.667 OFFCURVE",
"364 327 CURVE SMOOTH",
"384.667 361.667 OFFCURVE",
"407.333 379 OFFCURVE",
"432 379 CURVE SMOOTH",
"454 379 OFFCURVE",
"472.333 368.333 OFFCURVE",
"487 347 CURVE",
"499 327.667 OFFCURVE",
"505 306.333 OFFCURVE",
"505 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
1 96 96 64 97 0 66 56 45 34 8 0 5 21 32 29 4 37 89 5 14 76 5 21 68 5 50 83 21 4 58 60 7 4 93 7 10 19 18 7 85 79 6 53 25 72 6 47 47 2 41 2 10 1 4 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 96 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
96 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 594;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = oslash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"337 273 OFFCURVE",
"318.667 333 OFFCURVE",
"282 377 CURVE",
"296 408 LINE",
"312 435.333 OFFCURVE",
"325 455.333 OFFCURVE",
"335 468 CURVE",
"327.667 475.333 OFFCURVE",
"320.333 479 OFFCURVE",
"313 479 CURVE SMOOTH",
"294.333 479 OFFCURVE",
"279.667 471 OFFCURVE",
"269 455 CURVE SMOOTH",
"263.667 447 OFFCURVE",
"257 431 OFFCURVE",
"249 407 CURVE",
"219.667 428.333 OFFCURVE",
"196.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 101.667 OFFCURVE",
"35.333 49.333 OFFCURVE",
"66 14 CURVE",
"39.333 -36.667 OFFCURVE",
"26 -60.667 OFFCURVE",
"26 -58 CURVE",
"26 -67.333 OFFCURVE",
"31 -72 OFFCURVE",
"41 -72 CURVE SMOOTH",
"59 -72 OFFCURVE",
"78.333 -52 OFFCURVE",
"99 -12 CURVE",
"120.333 -24 OFFCURVE",
"145.333 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 234.333 OFFCURVE",
"126.333 134 OFFCURVE",
"93 68 CURVE",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"210.333 384 OFFCURVE",
"224 379 OFFCURVE",
"236 369 CURVE"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"152.667 9 OFFCURVE",
"134.667 15.667 OFFCURVE",
"120 29 CURVE",
"184.667 164.333 OFFCURVE",
"232.333 266 OFFCURVE",
"263 334 CURVE",
"280.333 297.333 OFFCURVE",
"289 252 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
1 51 51 64 52 0 43 39 20 45 31 29 12 10 39 31 8 45 43 43 45 37 5 14 41 4 26 0 33 6 18 47 7 4 24 8 18 2 6 1 4 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MIRP[11100]\011/* MoveIndirectRelPt */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 51 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
51 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 357;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = questiondown;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"367 440 OFFCURVE",
"341 465 OFFCURVE",
"305 465 CURVE SMOOTH",
"277.667 465 OFFCURVE",
"264 450.333 OFFCURVE",
"264 421 CURVE SMOOTH",
"264 393 OFFCURVE",
"283 371 OFFCURVE",
"311 371 CURVE SMOOTH",
"331 371 OFFCURVE",
"367 386.667 OFFCURVE",
"367 404 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"486 -2 OFFCURVE",
"444 34 OFFCURVE",
"420 34 CURVE SMOOTH",
"405.333 34 OFFCURVE",
"376 13.667 OFFCURVE",
"376 -1 CURVE SMOOTH",
"376 -11 OFFCURVE",
"384.333 -16 OFFCURVE",
"401 -16 CURVE SMOOTH",
"403.667 -16 OFFCURVE",
"407 -15.5 OFFCURVE",
"411 -14.5 CURVE SMOOTH",
"415 -13.5 OFFCURVE",
"418 -13 OFFCURVE",
"420 -13 CURVE SMOOTH",
"424.667 -13 OFFCURVE",
"428 -14.667 OFFCURVE",
"430 -18 CURVE",
"396.667 -76.667 OFFCURVE",
"270.667 -151 OFFCURVE",
"204 -151 CURVE SMOOTH",
"140 -151 OFFCURVE",
"86 -107.667 OFFCURVE",
"86 -45 CURVE SMOOTH",
"86 -1 OFFCURVE",
"131.667 53.333 OFFCURVE",
"223 118 CURVE",
"255 138.667 OFFCURVE",
"287.333 159.333 OFFCURVE",
"320 180 CURVE",
"360 209.333 OFFCURVE",
"380 239.333 OFFCURVE",
"380 270 CURVE SMOOTH",
"380 294 OFFCURVE",
"332 349 OFFCURVE",
"308 349 CURVE SMOOTH",
"303.333 349 OFFCURVE",
"300 347.667 OFFCURVE",
"298 345 CURVE",
"298 329.667 OFFCURVE",
"301.333 319.333 OFFCURVE",
"308 314 CURVE",
"317.333 307.333 OFFCURVE",
"326.667 301 OFFCURVE",
"336 295 CURVE",
"334 267 OFFCURVE",
"293.333 225.667 OFFCURVE",
"214 171 CURVE SMOOTH",
"123.333 108.333 OFFCURVE",
"69 63.333 OFFCURVE",
"51 36 CURVE SMOOTH",
"30.333 4.667 OFFCURVE",
"20 -22.333 OFFCURVE",
"20 -45 CURVE SMOOTH",
"20 -84.333 OFFCURVE",
"44 -121.333 OFFCURVE",
"92 -156 CURVE SMOOTH",
"137.333 -188 OFFCURVE",
"180.667 -204 OFFCURVE",
"222 -204 CURVE SMOOTH",
"242 -204 OFFCURVE",
"276.333 -195.333 OFFCURVE",
"325 -178 CURVE SMOOTH",
"351.667 -168.667 OFFCURVE",
"384 -147.333 OFFCURVE",
"422 -114 CURVE SMOOTH",
"464.667 -77.333 OFFCURVE",
"486 -48 OFFCURVE",
"486 -26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 61 61 64 62 11 58 33 48 36 31 27 6 5 0 55 5 11 42 5 21 3 6 8 45 6 17 8 17 53 1 50 1 1 21 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
21 61 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
61 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 506;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"189 437 OFFCURVE",
"186.667 448.333 OFFCURVE",
"182 459 CURVE",
"155.333 470.333 OFFCURVE",
"137.667 476 OFFCURVE",
"129 476 CURVE SMOOTH",
"77.667 476 OFFCURVE",
"52 453 OFFCURVE",
"52 407 CURVE SMOOTH",
"52 387 OFFCURVE",
"78 377 OFFCURVE",
"130 377 CURVE SMOOTH",
"170 377 OFFCURVE",
"189 386.333 OFFCURVE",
"189 425 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"136.333 244 OFFCURVE",
"133 270 OFFCURVE",
"125 286 CURVE",
"119.667 289.333 OFFCURVE",
"112.333 291 OFFCURVE",
"103 291 CURVE SMOOTH",
"96.333 291 OFFCURVE",
"91.333 290.667 OFFCURVE",
"88 290 CURVE",
"82 284.667 OFFCURVE",
"77.333 280.333 OFFCURVE",
"74 277 CURVE",
"84.667 234.333 OFFCURVE",
"90 209 OFFCURVE",
"90 201 CURVE SMOOTH",
"90 195.667 OFFCURVE",
"89.167 187.667 OFFCURVE",
"87.5 177 CURVE SMOOTH",
"85.833 166.333 OFFCURVE",
"85 159 OFFCURVE",
"85 155 CURVE",
"76.333 27 OFFCURVE",
"59.667 -78.333 OFFCURVE",
"35 -161 CURVE",
"29 -173 OFFCURVE",
"24 -181.667 OFFCURVE",
"20 -187 CURVE",
"35.333 -203 OFFCURVE",
"51.333 -211 OFFCURVE",
"68 -211 CURVE SMOOTH",
"87.333 -211 OFFCURVE",
"104.333 -204.333 OFFCURVE",
"119 -191 CURVE",
"118.333 -189.667 OFFCURVE",
"115.667 -181.333 OFFCURVE",
"111 -166 CURVE SMOOTH",
"107.667 -154.667 OFFCURVE",
"106 -147.333 OFFCURVE",
"106 -144 CURVE",
"135 205 LINE",
"135 208 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 38 38 64 39 0 34 30 21 17 12 11 5 5 0 25 4 13 13 4 28 3 6 7 7 19 1 21 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
21 38 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
38 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 209;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"450 414.667 OFFCURVE",
"447.667 418.333 OFFCURVE",
"443 421 CURVE",
"417.667 415 OFFCURVE",
"397.333 412 OFFCURVE",
"382 412 CURVE SMOOTH",
"152 412 LINE SMOOTH",
"109.872 412 OFFCURVE",
"88.175 420 OFFCURVE",
"46 420 CURVE SMOOTH",
"32.667 420 OFFCURVE",
"20 400.667 OFFCURVE",
"20 386 CURVE SMOOTH",
"20 378 OFFCURVE",
"22.333 369.667 OFFCURVE",
"27 361 CURVE",
"398 361 LINE",
"398 47 LINE SMOOTH",
"398 15.667 OFFCURVE",
"414.333 0 OFFCURVE",
"447 0 CURVE SMOOTH",
"451 0 OFFCURVE",
"454.667 2.667 OFFCURVE",
"458 8 CURVE",
"452 32.667 OFFCURVE",
"449 52.667 OFFCURVE",
"449 68 CURVE SMOOTH",
"449 344 LINE SMOOTH",
"449 362 OFFCURVE",
"449.167 376.5 OFFCURVE",
"449.5 387.5 CURVE SMOOTH",
"449.833 398.5 OFFCURVE",
"450 406 OFFCURVE",
"450 410 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 933 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
23 931 11 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 520;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = florin;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"378 333.667 OFFCURVE",
"344 338 OFFCURVE",
"316 338 CURVE SMOOTH",
"249 338 LINE",
"258.333 430 OFFCURVE",
"267.5 501.333 OFFCURVE",
"281.5 548 CURVE SMOOTH",
"295.5 594.667 OFFCURVE",
"314.667 619 OFFCURVE",
"344 619 CURVE SMOOTH",
"362.667 619 OFFCURVE",
"373.333 616.333 OFFCURVE",
"388 579 CURVE",
"388.667 578.333 OFFCURVE",
"391 578 OFFCURVE",
"395 578 CURVE SMOOTH",
"405.667 578 OFFCURVE",
"411 585.667 OFFCURVE",
"411 601 CURVE SMOOTH",
"411 640.408 OFFCURVE",
"371.697 667 OFFCURVE",
"337 667 CURVE SMOOTH",
"273.338 667 OFFCURVE",
"237.35 617.364 OFFCURVE",
"217 493 CURVE SMOOTH",
"205 415.667 OFFCURVE",
"199.667 372 OFFCURVE",
"197 336 CURVE",
"187.585 336 OFFCURVE",
"87 329.589 OFFCURVE",
"87 317 CURVE SMOOTH",
"87 299.645 OFFCURVE",
"92.839 271 OFFCURVE",
"113 271 CURVE SMOOTH",
"125 271 OFFCURVE",
"137.333 273 OFFCURVE",
"150 277 CURVE SMOOTH",
"162.667 281 OFFCURVE",
"176.667 284.333 OFFCURVE",
"192 287 CURVE",
"189.691 252.367 OFFCURVE",
"179.388 174.798 OFFCURVE",
"172 112 CURVE SMOOTH",
"163.333 51.333 OFFCURVE",
"153.167 6 OFFCURVE",
"141.5 -24 CURVE SMOOTH",
"129.833 -54 OFFCURVE",
"113.333 -69 OFFCURVE",
"92 -69 CURVE SMOOTH",
"72 -69 OFFCURVE",
"60.667 -59.333 OFFCURVE",
"46 -22 CURVE",
"45.333 -21.333 OFFCURVE",
"43 -21 OFFCURVE",
"39 -21 CURVE SMOOTH",
"28.333 -21 OFFCURVE",
"23 -28.667 OFFCURVE",
"23 -44 CURVE SMOOTH",
"23 -85.333 OFFCURVE",
"44.333 -117 OFFCURVE",
"99 -117 CURVE SMOOTH",
"163.613 -117 OFFCURVE",
"203.054 -68.289 OFFCURVE",
"219 57 CURVE SMOOTH",
"225.667 109 OFFCURVE",
"230 149.833 OFFCURVE",
"234 186.5 CURVE SMOOTH",
"236.979 213.81 OFFCURVE",
"240.853 262.726 OFFCURVE",
"244 290 CURVE",
"283.403 290 OFFCURVE",
"340.974 281 OFFCURVE",
"361 281 CURVE SMOOTH",
"375.667 281 OFFCURVE",
"378 284.333 OFFCURVE",
"378 307 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 931 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 931 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 931 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 429;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = guillemotleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 162.333 OFFCURVE",
"308.667 170 OFFCURVE",
"306 174 CURVE SMOOTH",
"194 344 LINE",
"214 368.667 OFFCURVE",
"233.667 393.667 OFFCURVE",
"253 419 CURVE SMOOTH",
"283 458.333 OFFCURVE",
"298 482.667 OFFCURVE",
"298 492 CURVE SMOOTH",
"298 512.667 OFFCURVE",
"289.333 523 OFFCURVE",
"272 523 CURVE SMOOTH",
"268 523 OFFCURVE",
"264 522 OFFCURVE",
"260 520 CURVE",
"150 355 LINE",
"143.333 351 OFFCURVE",
"140 346 OFFCURVE",
"140 340 CURVE SMOOTH",
"140 334 OFFCURVE",
"160 301.667 OFFCURVE",
"200 243 CURVE SMOOTH",
"237.333 188.333 OFFCURVE",
"261.333 154.667 OFFCURVE",
"272 142 CURVE",
"278.667 134.667 OFFCURVE",
"286.333 131 OFFCURVE",
"295 131 CURVE SMOOTH",
"305 131 OFFCURVE",
"310 137.667 OFFCURVE",
"310 151 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"178 512.667 OFFCURVE",
"169.333 523 OFFCURVE",
"152 523 CURVE SMOOTH",
"148 523 OFFCURVE",
"144 522 OFFCURVE",
"140 520 CURVE",
"30 355 LINE",
"23.333 351 OFFCURVE",
"20 346 OFFCURVE",
"20 340 CURVE SMOOTH",
"20 333.333 OFFCURVE",
"37.333 305.667 OFFCURVE",
"72 257 CURVE SMOOTH",
"102.667 215 OFFCURVE",
"124.333 186.333 OFFCURVE",
"137 171 CURVE",
"143.667 163.667 OFFCURVE",
"151.333 160 OFFCURVE",
"160 160 CURVE SMOOTH",
"170 160 OFFCURVE",
"175 166.667 OFFCURVE",
"175 180 CURVE SMOOTH",
"175 192 OFFCURVE",
"173.667 199.667 OFFCURVE",
"171 203 CURVE",
"74 344 LINE",
"172 474 LINE SMOOTH",
"176 479.333 OFFCURVE",
"178 485.333 OFFCURVE",
"178 492 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 43 43 64 44 0 30 36 28 25 22 19 15 8 0 41 13 2 1 36 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
36 43 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
43 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 330;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"300 355.667 OFFCURVE",
"202.667 492.667 OFFCURVE",
"188 506 CURVE",
"184 509.333 OFFCURVE",
"179.333 511 OFFCURVE",
"174 511 CURVE SMOOTH",
"157.333 511 OFFCURVE",
"149 504.333 OFFCURVE",
"149 491 CURVE SMOOTH",
"149 482.333 OFFCURVE",
"163 457.667 OFFCURVE",
"191 417 CURVE SMOOTH",
"209 391.667 OFFCURVE",
"227.333 366.333 OFFCURVE",
"246 341 CURVE",
"228 315.667 OFFCURVE",
"210.333 290.667 OFFCURVE",
"193 266 CURVE SMOOTH",
"165.667 226.667 OFFCURVE",
"152 202.333 OFFCURVE",
"152 193 CURVE SMOOTH",
"152 172.333 OFFCURVE",
"160.667 162 OFFCURVE",
"178 162 CURVE SMOOTH",
"182 162 OFFCURVE",
"186 163 OFFCURVE",
"190 165 CURVE",
"290 330 LINE",
"296.667 333.333 OFFCURVE",
"300 338.333 OFFCURVE",
"300 345 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180 355.667 OFFCURVE",
"75 506.667 OFFCURVE",
"59 520 CURVE SMOOTH",
"55 523.333 OFFCURVE",
"50 525 OFFCURVE",
"44 525 CURVE SMOOTH",
"28 525 OFFCURVE",
"20 518.667 OFFCURVE",
"20 506 CURVE SMOOTH",
"20 496 OFFCURVE",
"35.333 469 OFFCURVE",
"66 425 CURVE SMOOTH",
"86 397 OFFCURVE",
"106 369 OFFCURVE",
"126 341 CURVE",
"106.667 314.333 OFFCURVE",
"87 287.667 OFFCURVE",
"67 261 CURVE SMOOTH",
"37 218.333 OFFCURVE",
"22 192.333 OFFCURVE",
"22 183 CURVE SMOOTH",
"22 162.333 OFFCURVE",
"30.667 152 OFFCURVE",
"48 152 CURVE SMOOTH",
"52 152 OFFCURVE",
"56 153 OFFCURVE",
"60 155 CURVE",
"170 330 LINE",
"176.667 333.333 OFFCURVE",
"180 338.333 OFFCURVE",
"180 345 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
1 44 44 64 45 0 17 5 37 29 15 7 11 4 0 22 4 33 39 27 1 37 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
37 44 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
44 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 320;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"553 46.333 OFFCURVE",
"521.667 63 OFFCURVE",
"495 63 CURVE SMOOTH",
"471.667 63 OFFCURVE",
"460 51.667 OFFCURVE",
"460 29 CURVE SMOOTH",
"460 7.667 OFFCURVE",
"480.333 -11 OFFCURVE",
"503 -11 CURVE SMOOTH",
"513.667 -11 OFFCURVE",
"524 -8.333 OFFCURVE",
"534 -3 CURVE SMOOTH",
"546.667 3.667 OFFCURVE",
"553 11.667 OFFCURVE",
"553 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 46.333 OFFCURVE",
"301.667 63 OFFCURVE",
"275 63 CURVE SMOOTH",
"251.667 63 OFFCURVE",
"240 51.667 OFFCURVE",
"240 29 CURVE SMOOTH",
"240 7.667 OFFCURVE",
"260.333 -11 OFFCURVE",
"283 -11 CURVE SMOOTH",
"293.667 -11 OFFCURVE",
"304 -8.333 OFFCURVE",
"314 -3 CURVE SMOOTH",
"326.667 3.667 OFFCURVE",
"333 11.667 OFFCURVE",
"333 21 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113 46.333 OFFCURVE",
"81.667 63 OFFCURVE",
"55 63 CURVE SMOOTH",
"31.667 63 OFFCURVE",
"20 51.667 OFFCURVE",
"20 29 CURVE SMOOTH",
"20 7.667 OFFCURVE",
"40.333 -11 OFFCURVE",
"63 -11 CURVE SMOOTH",
"73.667 -11 OFFCURVE",
"84 -8.333 OFFCURVE",
"94 -3 CURVE SMOOTH",
"106.667 3.667 OFFCURVE",
"113 11.667 OFFCURVE",
"113 21 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
1 36 36 64 37 0 24 4 31 19 7 4 0 12 4 19 33 21 9 28 16 4 1 1 31 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDRP[11101]\011/* MoveDirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[11101]\011/* MoveDirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
31 36 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
36 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 573;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = nonbreakingspace;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 211;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = Agrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"383 702 OFFCURVE",
"382.667 703.667 OFFCURVE",
"382 707 CURVE",
"314 779.667 OFFCURVE",
"272.667 816 OFFCURVE",
"258 816 CURVE SMOOTH",
"246 816 OFFCURVE",
"227.333 788 OFFCURVE",
"226 776 CURVE",
"229 769 LINE",
"240.333 765 OFFCURVE",
"249.667 762 OFFCURVE",
"257 760 CURVE",
"273 752.667 OFFCURVE",
"290.333 740 OFFCURVE",
"309 722 CURVE SMOOTH",
"336.333 695.333 OFFCURVE",
"357 682 OFFCURVE",
"371 682 CURVE SMOOTH",
"375 682 OFFCURVE",
"383 696.667 OFFCURVE",
"383 702 CURVE"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 78 78 64 79 17 74 38 26 21 19 3 72 62 48 33 30 23 21 17 10 0 66 6 54 13 54 3 45 1 1 48 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
48 78 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
78 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"433 793 OFFCURVE",
"428 798 OFFCURVE",
"418 798 CURVE SMOOTH",
"416 798 OFFCURVE",
"406.833 791.5 OFFCURVE",
"390.5 778.5 CURVE SMOOTH",
"374.167 765.5 OFFCURVE",
"359.333 759 OFFCURVE",
"346 759 CURVE SMOOTH",
"333.333 759 OFFCURVE",
"319.167 765.5 OFFCURVE",
"303.5 778.5 CURVE SMOOTH",
"287.833 791.5 OFFCURVE",
"271.333 798 OFFCURVE",
"254 798 CURVE SMOOTH",
"241.333 798 OFFCURVE",
"222.667 791 OFFCURVE",
"198 777 CURVE SMOOTH",
"171.333 761.667 OFFCURVE",
"158 748.333 OFFCURVE",
"158 737 CURVE SMOOTH",
"158 727 OFFCURVE",
"163.333 722 OFFCURVE",
"174 722 CURVE",
"174 722 OFFCURVE",
"213.333 753 OFFCURVE",
"240 753 CURVE SMOOTH",
"251.333 753 OFFCURVE",
"265.667 747 OFFCURVE",
"283 735 CURVE SMOOTH",
"300.333 723 OFFCURVE",
"318.333 717 OFFCURVE",
"337 717 CURVE SMOOTH",
"362.333 717 OFFCURVE",
"433 760.333 OFFCURVE",
"433 783 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
1 84 84 64 85 23 80 44 32 27 25 9 78 68 54 39 36 29 27 23 11 0 72 6 60 3 6 18 6 6 15 21 15 60 3 51 1 1 54 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
54 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"433 793 OFFCURVE",
"428 798 OFFCURVE",
"418 798 CURVE SMOOTH",
"416 798 OFFCURVE",
"406.833 791.5 OFFCURVE",
"390.5 778.5 CURVE SMOOTH",
"374.167 765.5 OFFCURVE",
"359.333 759 OFFCURVE",
"346 759 CURVE SMOOTH",
"333.333 759 OFFCURVE",
"319.167 765.5 OFFCURVE",
"303.5 778.5 CURVE SMOOTH",
"287.833 791.5 OFFCURVE",
"271.333 798 OFFCURVE",
"254 798 CURVE SMOOTH",
"241.333 798 OFFCURVE",
"222.667 791 OFFCURVE",
"198 777 CURVE SMOOTH",
"171.333 761.667 OFFCURVE",
"158 748.333 OFFCURVE",
"158 737 CURVE SMOOTH",
"158 727 OFFCURVE",
"163.333 722 OFFCURVE",
"174 722 CURVE",
"174 722 OFFCURVE",
"213.333 753 OFFCURVE",
"240 753 CURVE SMOOTH",
"251.333 753 OFFCURVE",
"265.667 747 OFFCURVE",
"283 735 CURVE SMOOTH",
"300.333 723 OFFCURVE",
"318.333 717 OFFCURVE",
"337 717 CURVE SMOOTH",
"362.333 717 OFFCURVE",
"433 760.333 OFFCURVE",
"433 783 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 59 59 64 60 23 9 11 0 41 5 23 49 4 33 45 6 37 55 7 27 3 6 18 6 6 15 21 15 37 3 27 1 1 33 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
33 59 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
59 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"811.667 66 OFFCURVE",
"783.667 78 OFFCURVE",
"741 78 CURVE SMOOTH",
"718.333 78 OFFCURVE",
"686.167 69.667 OFFCURVE",
"644.5 53 CURVE SMOOTH",
"602.833 36.333 OFFCURVE",
"570.667 28 OFFCURVE",
"548 28 CURVE SMOOTH",
"497.333 28 OFFCURVE",
"472 76.333 OFFCURVE",
"472 173 CURVE SMOOTH",
"472 182.333 OFFCURVE",
"471.5 196.167 OFFCURVE",
"470.5 214.5 CURVE SMOOTH",
"469.5 232.833 OFFCURVE",
"469 246.333 OFFCURVE",
"469 255 CURVE SMOOTH",
"469 259 OFFCURVE",
"469.333 262.667 OFFCURVE",
"470 266 CURVE",
"484.667 272.667 OFFCURVE",
"516.333 280 OFFCURVE",
"565 288 CURVE SMOOTH",
"611 295.333 OFFCURVE",
"644.333 299 OFFCURVE",
"665 299 CURVE SMOOTH",
"679.667 299 OFFCURVE",
"691.667 296 OFFCURVE",
"701 290 CURVE",
"719 296 OFFCURVE",
"727.667 300.667 OFFCURVE",
"727 304 CURVE",
"719 334 LINE",
"701.667 342.667 OFFCURVE",
"684.667 347 OFFCURVE",
"668 347 CURVE SMOOTH",
"647.333 347 OFFCURVE",
"616.667 342.333 OFFCURVE",
"576 333 CURVE SMOOTH",
"535.333 323.667 OFFCURVE",
"504.667 319 OFFCURVE",
"484 319 CURVE SMOOTH",
"478 319 OFFCURVE",
"473.333 320 OFFCURVE",
"470 322 CURVE",
"472.667 402.667 OFFCURVE",
"477.667 487.333 OFFCURVE",
"485 576 CURVE",
"501 589.333 OFFCURVE",
"544.333 603.333 OFFCURVE",
"615 618 CURVE SMOOTH",
"679 630.667 OFFCURVE",
"726.333 637 OFFCURVE",
"757 637 CURVE SMOOTH",
"761 637 OFFCURVE",
"767.167 636.5 OFFCURVE",
"775.5 635.5 CURVE SMOOTH",
"783.833 634.5 OFFCURVE",
"790 634 OFFCURVE",
"794 634 CURVE SMOOTH",
"803.333 634 OFFCURVE",
"811.667 637.667 OFFCURVE",
"819 645 CURVE",
"795.667 673 OFFCURVE",
"765 687 OFFCURVE",
"727 687 CURVE SMOOTH",
"699 687 OFFCURVE",
"655.333 679.333 OFFCURVE",
"596 664 CURVE SMOOTH",
"529.333 646.667 OFFCURVE",
"484 636.667 OFFCURVE",
"460 634 CURVE",
"450.667 633.333 OFFCURVE",
"442.333 629 OFFCURVE",
"435 621 CURVE",
"395.667 663 OFFCURVE",
"348.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 127.667 OFFCURVE",
"75.667 31 OFFCURVE",
"187 -3 CURVE SMOOTH",
"217.667 -13 OFFCURVE",
"243.333 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"336 -18 OFFCURVE",
"395.333 9 OFFCURVE",
"442 63 CURVE",
"464.667 7 OFFCURVE",
"504 -21 OFFCURVE",
"560 -21 CURVE SMOOTH",
"587.333 -21 OFFCURVE",
"625.667 -11.833 OFFCURVE",
"675 6.5 CURVE SMOOTH",
"724.333 24.833 OFFCURVE",
"762.333 34 OFFCURVE",
"789 34 CURVE SMOOTH",
"791.667 34 OFFCURVE",
"795.667 33.5 OFFCURVE",
"801 32.5 CURVE SMOOTH",
"806.333 31.5 OFFCURVE",
"810.333 31 OFFCURVE",
"813 31 CURVE SMOOTH",
"817.667 31 OFFCURVE",
"821.667 34.667 OFFCURVE",
"825 42 CURVE"
);
},
{
closed = 1;
nodes = (
"422.667 476.667 OFFCURVE",
"419 366 OFFCURVE",
"419 216 CURVE SMOOTH",
"419 146.667 OFFCURVE",
"410.667 99 OFFCURVE",
"394 73 CURVE SMOOTH",
"372 39 OFFCURVE",
"328 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"193.333 22 OFFCURVE",
"142.667 53 OFFCURVE",
"110 115 CURVE SMOOTH",
"84.667 163.667 OFFCURVE",
"72 225.667 OFFCURVE",
"72 301 CURVE SMOOTH",
"72 420.333 OFFCURVE",
"105.667 512 OFFCURVE",
"173 576 CURVE SMOOTH",
"215 616 OFFCURVE",
"257.333 636 OFFCURVE",
"300 636 CURVE SMOOTH",
"346.667 636 OFFCURVE",
"390 606.667 OFFCURVE",
"430 548 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 85 85 64 86 0 51 43 22 10 2 69 49 30 0 75 4 16 83 4 59 41 79 7 12 67 6 5 64 6 8 46 6 53 35 32 71 6 20 28 3 20 3 12 1 8 1 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 85 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
85 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 845;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"582 117.667 OFFCURVE",
"574 127 OFFCURVE",
"558 127 CURVE SMOOTH",
"554 127 OFFCURVE",
"545.667 118.667 OFFCURVE",
"533 102 CURVE SMOOTH",
"517 80.667 OFFCURVE",
"502.333 65 OFFCURVE",
"489 55 CURVE",
"467.667 37.667 OFFCURVE",
"444 29 OFFCURVE",
"418 29 CURVE SMOOTH",
"391.333 29 OFFCURVE",
"370 40.667 OFFCURVE",
"354 64 CURVE SMOOTH",
"339.333 84.667 OFFCURVE",
"332 108.667 OFFCURVE",
"332 136 CURVE SMOOTH",
"332 138 OFFCURVE",
"331.167 140.833 OFFCURVE",
"329.5 144.5 CURVE SMOOTH",
"327.833 148.167 OFFCURVE",
"327 151 OFFCURVE",
"327 153 CURVE SMOOTH",
"327 158.333 OFFCURVE",
"330.333 160.667 OFFCURVE",
"337 160 CURVE",
"342.333 148 OFFCURVE",
"391.333 127 OFFCURVE",
"406 127 CURVE SMOOTH",
"490 127 OFFCURVE",
"569 202 OFFCURVE",
"569 286 CURVE SMOOTH",
"569 367.333 OFFCURVE",
"497.667 429 OFFCURVE",
"415 429 CURVE SMOOTH",
"391 429 OFFCURVE",
"369.333 418 OFFCURVE",
"350 396 CURVE SMOOTH",
"334 378 OFFCURVE",
"321.667 356 OFFCURVE",
"313 330 CURVE",
"301 360.667 OFFCURVE",
"284 385.667 OFFCURVE",
"262 405 CURVE SMOOTH",
"237.333 427.667 OFFCURVE",
"210 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"232 -30 OFFCURVE",
"275.667 -1 OFFCURVE",
"305 57 CURVE",
"325.667 11 OFFCURVE",
"364.667 -12 OFFCURVE",
"422 -12 CURVE SMOOTH",
"453.333 -12 OFFCURVE",
"486.667 -1.333 OFFCURVE",
"522 20 CURVE SMOOTH",
"562 43.333 OFFCURVE",
"582 69.667 OFFCURVE",
"582 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"519 261 OFFCURVE",
"509.667 235.333 OFFCURVE",
"491 212 CURVE SMOOTH",
"471 186.667 OFFCURVE",
"447 174 OFFCURVE",
"419 174 CURVE SMOOTH",
"376.333 174 OFFCURVE",
"337 207.333 OFFCURVE",
"337 250 CURVE SMOOTH",
"337 293.333 OFFCURVE",
"351 330 OFFCURVE",
"379 360 CURVE SMOOTH",
"391 372.667 OFFCURVE",
"411.333 379 OFFCURVE",
"440 379 CURVE SMOOTH",
"482.667 379 OFFCURVE",
"519 333 OFFCURVE",
"519 289 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
1 80 80 64 81 0 48 33 20 6 0 35 4 64 38 4 64 72 5 12 50 4 27 64 4 57 68 6 16 42 7 4 76 7 8 60 6 30 53 6 24 24 2 16 2 8 1 4 1 1 12 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
12 80 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
80 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 602;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = endash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"373 300.667 OFFCURVE",
"339 315 OFFCURVE",
"311 315 CURVE SMOOTH",
"216.333 315 OFFCURVE",
"123.333 311.667 OFFCURVE",
"26 301 CURVE",
"21.333 301 OFFCURVE",
"19 298.667 OFFCURVE",
"19 294 CURVE SMOOTH",
"19 275.692 OFFCURVE",
"24.781 238 OFFCURVE",
"45 238 CURVE SMOOTH",
"55.667 238 OFFCURVE",
"65.833 241.5 OFFCURVE",
"75.5 248.5 CURVE SMOOTH",
"85.167 255.5 OFFCURVE",
"96.333 260 OFFCURVE",
"109 262 CURVE SMOOTH",
"127.667 264.667 OFFCURVE",
"154.333 267 OFFCURVE",
"185 267 CURVE SMOOTH",
"225 267 OFFCURVE",
"257 266.333 OFFCURVE",
"281 265 CURVE SMOOTH",
"305 263.667 OFFCURVE",
"321.667 261 OFFCURVE",
"331 257 CURVE SMOOTH",
"334.333 255.667 OFFCURVE",
"338.833 253.5 OFFCURVE",
"344.5 250.5 CURVE SMOOTH",
"350.167 247.5 OFFCURVE",
"354 246 OFFCURVE",
"356 246 CURVE SMOOTH",
"370.667 246 OFFCURVE",
"373 251.333 OFFCURVE",
"373 274 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
25 931 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 393;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"773 287.333 OFFCURVE",
"765.667 297.667 OFFCURVE",
"751 305 CURVE",
"739 311.667 OFFCURVE",
"726 315 OFFCURVE",
"712 315 CURVE",
"20 280 LINE",
"20 254 LINE SMOOTH",
"20 244.667 OFFCURVE",
"35.667 218 OFFCURVE",
"45 218 CURVE SMOOTH",
"47 218 OFFCURVE",
"56.833 221.667 OFFCURVE",
"74.5 229 CURVE SMOOTH",
"92.167 236.333 OFFCURVE",
"103.667 240.667 OFFCURVE",
"109 242 CURVE",
"138.333 247.333 OFFCURVE",
"174.667 250.667 OFFCURVE",
"218 252 CURVE SMOOTH",
"254.667 252 OFFCURVE",
"291.333 252.333 OFFCURVE",
"328 253 CURVE SMOOTH",
"502 259 OFFCURVE",
"618 262 OFFCURVE",
"676 262 CURVE SMOOTH",
"703.333 262 OFFCURVE",
"721.667 260.333 OFFCURVE",
"731 257 CURVE",
"732.333 257 OFFCURVE",
"736.667 255 OFFCURVE",
"744 251 CURVE",
"749.333 247.667 OFFCURVE",
"753.333 246 OFFCURVE",
"756 246 CURVE SMOOTH",
"758 246 OFFCURVE",
"762.667 247.333 OFFCURVE",
"770 250 CURVE",
"772 268 OFFCURVE",
"773 276 OFFCURVE",
"773 274 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 28 28 64 29 0 4 23 22 0 10 6 24 12 6 24 24 19 1 22 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
22 28 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
28 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 793;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
layers = (
{
components = (
{
name = quoteleft;
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 122, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 300;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
components = (
{
name = quoteright;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 133, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 320;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 513.667 OFFCURVE",
"119.667 519.333 OFFCURVE",
"97 534 CURVE SMOOTH",
"74.333 548.667 OFFCURVE",
"61.333 583.333 OFFCURVE",
"72 610 CURVE SMOOTH",
"78.667 626 OFFCURVE",
"88.167 638.333 OFFCURVE",
"100.5 647 CURVE SMOOTH",
"112.833 655.667 OFFCURVE",
"124.667 665 OFFCURVE",
"136 675 CURVE SMOOTH",
"154.667 691 OFFCURVE",
"151.333 714 OFFCURVE",
"130 714 CURVE SMOOTH",
"103.333 714 OFFCURVE",
"75.667 688.667 OFFCURVE",
"53 650 CURVE SMOOTH",
"27.667 607.333 OFFCURVE",
"28.667 571 OFFCURVE",
"38 515 CURVE SMOOTH",
"44.667 479 OFFCURVE",
"65 465 OFFCURVE",
"89 465 CURVE SMOOTH",
"125 465 OFFCURVE",
"132 483 OFFCURVE",
"132 499 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 178;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"50 665.333 OFFCURVE",
"62.333 659.667 OFFCURVE",
"85 645 CURVE SMOOTH",
"107.667 630.333 OFFCURVE",
"120.667 595.667 OFFCURVE",
"110 569 CURVE SMOOTH",
"103.333 553 OFFCURVE",
"93.833 540.667 OFFCURVE",
"81.5 532 CURVE SMOOTH",
"69.167 523.333 OFFCURVE",
"57.333 514 OFFCURVE",
"46 504 CURVE SMOOTH",
"27.333 488 OFFCURVE",
"30.667 465 OFFCURVE",
"52 465 CURVE SMOOTH",
"78.667 465 OFFCURVE",
"106.333 490.333 OFFCURVE",
"129 529 CURVE SMOOTH",
"154.333 571.667 OFFCURVE",
"153.333 608 OFFCURVE",
"144 664 CURVE SMOOTH",
"137.333 700 OFFCURVE",
"117 714 OFFCURVE",
"93 714 CURVE SMOOTH",
"57 714 OFFCURVE",
"50 696 OFFCURVE",
"50 680 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 178;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = ydieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"285 500.333 OFFCURVE",
"271.333 515 OFFCURVE",
"254 515 CURVE SMOOTH",
"238 515 OFFCURVE",
"224 500.333 OFFCURVE",
"224 483 CURVE SMOOTH",
"224 467 OFFCURVE",
"238 452 OFFCURVE",
"254 452 CURVE SMOOTH",
"271.333 452 OFFCURVE",
"285 467 OFFCURVE",
"285 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 500.333 OFFCURVE",
"156 515 OFFCURVE",
"140 515 CURVE SMOOTH",
"122.667 515 OFFCURVE",
"109 500.333 OFFCURVE",
"109 483 CURVE SMOOTH",
"109 467 OFFCURVE",
"122.667 452 OFFCURVE",
"140 452 CURVE SMOOTH",
"156 452 OFFCURVE",
"170 467 OFFCURVE",
"170 483 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"329.667 398.667 OFFCURVE",
"320.333 402 OFFCURVE",
"311 402 CURVE SMOOTH",
"301 402 OFFCURVE",
"287.667 397.333 OFFCURVE",
"271 388 CURVE",
"271 386 OFFCURVE",
"271.333 382.333 OFFCURVE",
"272 377 CURVE SMOOTH",
"272.667 371.667 OFFCURVE",
"273 367.667 OFFCURVE",
"273 365 CURVE SMOOTH",
"273 236 LINE SMOOTH",
"273 195.333 OFFCURVE",
"265.333 153 OFFCURVE",
"250 109 CURVE SMOOTH",
"229.333 53 OFFCURVE",
"202.667 25 OFFCURVE",
"170 25 CURVE SMOOTH",
"118 25 OFFCURVE",
"92 76.667 OFFCURVE",
"92 180 CURVE SMOOTH",
"92 301.333 OFFCURVE",
"98.667 379 OFFCURVE",
"112 413 CURVE",
"98 422.333 OFFCURVE",
"86.333 427 OFFCURVE",
"77 427 CURVE SMOOTH",
"69 427 OFFCURVE",
"59.667 424.667 OFFCURVE",
"49 420 CURVE",
"42.333 255.333 OFFCURVE",
"39 170.667 OFFCURVE",
"39 166 CURVE SMOOTH",
"39 118.667 OFFCURVE",
"49 80 OFFCURVE",
"69 50 CURVE SMOOTH",
"92.333 14.667 OFFCURVE",
"126.667 -3 OFFCURVE",
"172 -3 CURVE SMOOTH",
"201.333 -3 OFFCURVE",
"231.333 10.667 OFFCURVE",
"262 38 CURVE",
"265.333 20 OFFCURVE",
"267 -6 OFFCURVE",
"267 -40 CURVE SMOOTH",
"267 -89.333 OFFCURVE",
"261.333 -125.667 OFFCURVE",
"250 -149 CURVE SMOOTH",
"233.333 -183 OFFCURVE",
"202.667 -200 OFFCURVE",
"158 -200 CURVE SMOOTH",
"133.333 -200 OFFCURVE",
"111.667 -195 OFFCURVE",
"93 -185 CURVE SMOOTH",
"81 -179 OFFCURVE",
"69 -169.667 OFFCURVE",
"57 -157 CURVE",
"47 -147.667 OFFCURVE",
"40.333 -143 OFFCURVE",
"37 -143 CURVE SMOOTH",
"25.667 -143 OFFCURVE",
"20 -147.667 OFFCURVE",
"20 -157 CURVE SMOOTH",
"20 -181.667 OFFCURVE",
"40.333 -202 OFFCURVE",
"81 -218 CURVE SMOOTH",
"113.667 -231.333 OFFCURVE",
"145 -238 OFFCURVE",
"175 -238 CURVE SMOOTH",
"267.667 -238 OFFCURVE",
"314 -191 OFFCURVE",
"314 -97 CURVE SMOOTH",
"314 192 LINE SMOOTH",
"314 219.333 OFFCURVE",
"317 252.667 OFFCURVE",
"323 292 CURVE SMOOTH",
"328.333 325.333 OFFCURVE",
"333.667 358.667 OFFCURVE",
"339 392 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
1 77 77 64 78 24 75 49 37 61 47 35 5 28 29 28 4 69 73 70 69 5 24 6 5 0 12 5 18 63 4 55 15 3 6 9 43 7 31 65 7 51 21 9 31 59 2 51 1 1 35 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
35 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 359;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"349 750.333 OFFCURVE",
"331.667 770 OFFCURVE",
"309 770 CURVE SMOOTH",
"286.333 770 OFFCURVE",
"269 750.333 OFFCURVE",
"269 729 CURVE SMOOTH",
"269 706.333 OFFCURVE",
"286.333 687 OFFCURVE",
"309 687 CURVE SMOOTH",
"331.667 687 OFFCURVE",
"349 706.333 OFFCURVE",
"349 729 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"199 750.333 OFFCURVE",
"181.667 770 OFFCURVE",
"159 770 CURVE SMOOTH",
"136.333 770 OFFCURVE",
"119 750.333 OFFCURVE",
"119 729 CURVE SMOOTH",
"119 706.333 OFFCURVE",
"136.333 687 OFFCURVE",
"159 687 CURVE SMOOTH",
"181.667 687 OFFCURVE",
"199 706.333 OFFCURVE",
"199 729 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"464 659.667 OFFCURVE",
"451 669 OFFCURVE",
"427 669 CURVE SMOOTH",
"404.333 669 OFFCURVE",
"370 614.667 OFFCURVE",
"324 506 CURVE SMOOTH",
"272 384.667 OFFCURVE",
"240.333 318 OFFCURVE",
"229 306 CURVE",
"204.333 305.333 OFFCURVE",
"173.667 345 OFFCURVE",
"137 425 CURVE SMOOTH",
"103.667 499 OFFCURVE",
"87 551.333 OFFCURVE",
"87 582 CURVE SMOOTH",
"87 586 OFFCURVE",
"88.5 591.667 OFFCURVE",
"91.5 599 CURVE SMOOTH",
"94.5 606.333 OFFCURVE",
"96 612.333 OFFCURVE",
"96 617 CURVE SMOOTH",
"96 631.667 OFFCURVE",
"92.667 645.667 OFFCURVE",
"86 659 CURVE",
"77.333 673.667 OFFCURVE",
"66 681 OFFCURVE",
"52 681 CURVE SMOOTH",
"30.667 681 OFFCURVE",
"20 667.333 OFFCURVE",
"20 640 CURVE SMOOTH",
"20 597.333 OFFCURVE",
"46 516.333 OFFCURVE",
"98 397 CURVE SMOOTH",
"129.333 325.667 OFFCURVE",
"166.333 273.333 OFFCURVE",
"209 240 CURVE",
"196.333 203.333 OFFCURVE",
"184 166.667 OFFCURVE",
"172 130 CURVE SMOOTH",
"152.667 75.333 OFFCURVE",
"138.5 43.5 OFFCURVE",
"129.5 34.5 CURVE SMOOTH",
"120.5 25.5 OFFCURVE",
"114 19.333 OFFCURVE",
"110 16 CURVE",
"122.667 -21.333 OFFCURVE",
"139.667 -40 OFFCURVE",
"161 -40 CURVE SMOOTH",
"171.667 -40 OFFCURVE",
"183 -35.667 OFFCURVE",
"195 -27 CURVE",
"189.667 29.667 OFFCURVE",
"213.333 125.333 OFFCURVE",
"266 260 CURVE SMOOTH",
"302 352 OFFCURVE",
"344.333 445.667 OFFCURVE",
"393 541 CURVE SMOOTH",
"399 553.667 OFFCURVE",
"411 570.5 OFFCURVE",
"429 591.5 CURVE SMOOTH",
"447 612.5 OFFCURVE",
"459.333 629 OFFCURVE",
"466 641 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
1 63 63 64 64 24 61 57 40 24 31 5 35 6 5 0 12 5 18 50 5 44 53 5 44 15 3 6 9 21 9 46 3 33 1 1 44 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
44 63 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
63 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 486;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = currency;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"423 350.333 OFFCURVE",
"413.333 383.333 OFFCURVE",
"396 414 CURVE",
"419.325 437.325 OFFCURVE",
"498 483.911 OFFCURVE",
"498 500 CURVE SMOOTH",
"498 524 OFFCURVE",
"480.333 542.333 OFFCURVE",
"459 549 CURVE",
"363 459 LINE",
"336.333 485.667 OFFCURVE",
"299.333 504 OFFCURVE",
"258 504 CURVE SMOOTH",
"218 504 OFFCURVE",
"181.667 485.667 OFFCURVE",
"155 459 CURVE",
"132.333 487 OFFCURVE",
"112.333 509.833 OFFCURVE",
"95 527.5 CURVE SMOOTH",
"77.667 545.167 OFFCURVE",
"66 554 OFFCURVE",
"60 554 CURVE SMOOTH",
"40 554 OFFCURVE",
"26.667 540 OFFCURVE",
"20 520 CURVE",
"121 415 LINE",
"99.667 379 OFFCURVE",
"88 337 OFFCURVE",
"88 297 CURVE SMOOTH",
"88 262.333 OFFCURVE",
"95.333 233 OFFCURVE",
"110 209 CURVE",
"83.333 181 OFFCURVE",
"64.167 159.667 OFFCURVE",
"52.5 145 CURVE SMOOTH",
"40.833 130.333 OFFCURVE",
"35 121.333 OFFCURVE",
"35 118 CURVE SMOOTH",
"35 108.371 OFFCURVE",
"45.443 80 OFFCURVE",
"60 80 CURVE SMOOTH",
"63.333 80 OFFCURVE",
"70.833 87 OFFCURVE",
"82.5 101 CURVE SMOOTH",
"94.167 115 OFFCURVE",
"115 138 OFFCURVE",
"145 170 CURVE",
"173 151.333 OFFCURVE",
"208.333 142 OFFCURVE",
"251 142 CURVE SMOOTH",
"293.667 142 OFFCURVE",
"330 154.333 OFFCURVE",
"358 177 CURVE",
"390 147 OFFCURVE",
"414 125.667 OFFCURVE",
"430 113 CURVE SMOOTH",
"446 100.333 OFFCURVE",
"456 94 OFFCURVE",
"460 94 CURVE SMOOTH",
"474.667 94 OFFCURVE",
"498 100.333 OFFCURVE",
"498 119 CURVE SMOOTH",
"498 121.667 OFFCURVE",
"488.333 131.5 OFFCURVE",
"469 148.5 CURVE SMOOTH",
"449.667 165.5 OFFCURVE",
"424.667 188 OFFCURVE",
"394 216 CURVE",
"412.667 245.333 OFFCURVE",
"423 278.333 OFFCURVE",
"423 317 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"373 237.691 OFFCURVE",
"326.053 172 OFFCURVE",
"251 172 CURVE SMOOTH",
"181.667 172 OFFCURVE",
"147 223 OFFCURVE",
"147 299 CURVE SMOOTH",
"147 384.571 OFFCURVE",
"199.3 461 OFFCURVE",
"273 461 CURVE SMOOTH",
"339.137 461 OFFCURVE",
"373 395.655 OFFCURVE",
"373 318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
68 934 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 58 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 58 25 58 41 58 57 58 73 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 68 118 68 134 68 150 68 166 68 182 68 198 68 214 68 230 68 246 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 68 22 68 38 68 54 68 70 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 68 101 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
71 929 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 930 63 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 526;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = guilsinglleft;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"178 512.667 OFFCURVE",
"169.333 523 OFFCURVE",
"152 523 CURVE SMOOTH",
"148 523 OFFCURVE",
"144 522 OFFCURVE",
"140 520 CURVE",
"30 355 LINE",
"23.333 351 OFFCURVE",
"20 346 OFFCURVE",
"20 340 CURVE SMOOTH",
"20 333.333 OFFCURVE",
"37.333 305.667 OFFCURVE",
"72 257 CURVE SMOOTH",
"102.667 215 OFFCURVE",
"124.333 186.333 OFFCURVE",
"137 171 CURVE",
"143.667 163.667 OFFCURVE",
"151.333 160 OFFCURVE",
"160 160 CURVE SMOOTH",
"170 160 OFFCURVE",
"175 166.667 OFFCURVE",
"175 180 CURVE SMOOTH",
"175 192 OFFCURVE",
"173.667 199.667 OFFCURVE",
"171 203 CURVE",
"74 344 LINE",
"172 474 LINE SMOOTH",
"176 479.333 OFFCURVE",
"178 485.333 OFFCURVE",
"178 492 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 21 21 64 22 0 14 6 3 0 19 8 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 21 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
21 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 198;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"178 349.667 OFFCURVE",
"160.667 377.333 OFFCURVE",
"126 426 CURVE SMOOTH",
"95.333 468 OFFCURVE",
"73.667 496.667 OFFCURVE",
"61 512 CURVE",
"54.333 519.333 OFFCURVE",
"46.667 523 OFFCURVE",
"38 523 CURVE SMOOTH",
"28 523 OFFCURVE",
"23 516.333 OFFCURVE",
"23 503 CURVE SMOOTH",
"23 491 OFFCURVE",
"24.333 483.333 OFFCURVE",
"27 480 CURVE",
"124 339 LINE",
"26 209 LINE SMOOTH",
"22 203.667 OFFCURVE",
"20 197.667 OFFCURVE",
"20 191 CURVE SMOOTH",
"20 170.333 OFFCURVE",
"28.667 160 OFFCURVE",
"46 160 CURVE SMOOTH",
"50 160 OFFCURVE",
"54 161 OFFCURVE",
"58 163 CURVE",
"168 328 LINE",
"174.667 332 OFFCURVE",
"178 337 OFFCURVE",
"178 343 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 21 21 64 22 0 13 10 7 0 15 5 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 21 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
21 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 198;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = periodcentered;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"122 335 OFFCURVE",
"99 355 OFFCURVE",
"79 355 CURVE SMOOTH",
"64.333 355 OFFCURVE",
"51.333 351.667 OFFCURVE",
"40 345 CURVE SMOOTH",
"26.667 337.667 OFFCURVE",
"20 327 OFFCURVE",
"20 313 CURVE SMOOTH",
"20 291.667 OFFCURVE",
"49.667 272 OFFCURVE",
"71 272 CURVE SMOOTH",
"97.667 272 OFFCURVE",
"122 289.667 OFFCURVE",
"122 315 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
1 13 13 64 14 0 0 5 6 10 3 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
13 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 142;
}
);
note = periodcentered;
unicode = "00B7,2219";
},
{
glyphname = quotesinglbase;
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 0, -630}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 184;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -6, -626}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 126, -626}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 313;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = Acircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"423 702 OFFCURVE",
"422.667 703.667 OFFCURVE",
"422 707 CURVE",
"348 773.667 OFFCURVE",
"307 807 OFFCURVE",
"299 807 CURVE SMOOTH",
"291 807 OFFCURVE",
"250 773.667 OFFCURVE",
"176 707 CURVE",
"175.333 703.667 OFFCURVE",
"175 702 OFFCURVE",
"175 702 CURVE",
"175 696.667 OFFCURVE",
"183 682 OFFCURVE",
"187 682 CURVE SMOOTH",
"199.667 682 OFFCURVE",
"220.333 695.333 OFFCURVE",
"249 722 CURVE",
"273 738 OFFCURVE",
"289.667 747 OFFCURVE",
"299 749 CURVE",
"304.333 746.333 OFFCURVE",
"312.667 742.667 OFFCURVE",
"324 738 CURVE",
"332 735.333 OFFCURVE",
"340.333 730 OFFCURVE",
"349 722 CURVE SMOOTH",
"377.667 695.333 OFFCURVE",
"398.333 682 OFFCURVE",
"411 682 CURVE SMOOTH",
"415 682 OFFCURVE",
"423 696.667 OFFCURVE",
"423 702 CURVE"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 85 85 64 86 24 81 45 33 28 26 13 3 79 69 55 40 37 30 28 24 16 0 73 6 61 9 6 20 20 61 3 52 1 1 55 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
55 85 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
85 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"347 734 OFFCURVE",
"346.333 736 OFFCURVE",
"345 740 CURVE",
"265 797.333 OFFCURVE",
"220.667 826 OFFCURVE",
"212 826 CURVE SMOOTH",
"205.333 826 OFFCURVE",
"168 788.667 OFFCURVE",
"100 714 CURVE",
"100 711 LINE SMOOTH",
"100 704.333 OFFCURVE",
"108.667 691 OFFCURVE",
"114 691 CURVE SMOOTH",
"125.333 691 OFFCURVE",
"144.667 706.333 OFFCURVE",
"172 737 CURVE",
"194 755.667 OFFCURVE",
"209.333 766.333 OFFCURVE",
"218 769 CURVE",
"223.333 766.333 OFFCURVE",
"232 763.667 OFFCURVE",
"244 761 CURVE SMOOTH",
"252.667 759 OFFCURVE",
"261.667 754.333 OFFCURVE",
"271 747 CURVE SMOOTH",
"300.333 725 OFFCURVE",
"321.667 714 OFFCURVE",
"335 714 CURVE SMOOTH",
"343 714 OFFCURVE",
"347 720.667 OFFCURVE",
"347 734 CURVE"
);
},
{
closed = 1;
nodes = (
"432.333 66 OFFCURVE",
"404.667 78 OFFCURVE",
"362 78 CURVE SMOOTH",
"337.333 78 OFFCURVE",
"301.833 69.667 OFFCURVE",
"255.5 53 CURVE SMOOTH",
"209.167 36.333 OFFCURVE",
"173.667 28 OFFCURVE",
"149 28 CURVE SMOOTH",
"97.667 28 OFFCURVE",
"72 78.333 OFFCURVE",
"72 179 CURVE SMOOTH",
"72 219 OFFCURVE",
"73.333 246.333 OFFCURVE",
"76 261 CURVE",
"106.667 274.333 OFFCURVE",
"229 299 OFFCURVE",
"265 299 CURVE SMOOTH",
"279.667 299 OFFCURVE",
"291.667 296 OFFCURVE",
"301 290 CURVE",
"319.667 296.667 OFFCURVE",
"328.333 301.333 OFFCURVE",
"327 304 CURVE",
"319 334 LINE",
"302.333 342.667 OFFCURVE",
"285.667 347 OFFCURVE",
"269 347 CURVE SMOOTH",
"248.333 347 OFFCURVE",
"218.333 342.333 OFFCURVE",
"179 333 CURVE SMOOTH",
"139.667 323.667 OFFCURVE",
"110 319 OFFCURVE",
"90 319 CURVE SMOOTH",
"85.333 319 OFFCURVE",
"81.667 320.667 OFFCURVE",
"79 324 CURVE",
"86.333 438.667 OFFCURVE",
"92.667 524.667 OFFCURVE",
"98 582 CURVE",
"114 595.333 OFFCURVE",
"155.333 608.333 OFFCURVE",
"222 621 CURVE SMOOTH",
"281.333 631.667 OFFCURVE",
"326.333 637 OFFCURVE",
"357 637 CURVE SMOOTH",
"361 637 OFFCURVE",
"367.167 636.5 OFFCURVE",
"375.5 635.5 CURVE SMOOTH",
"383.833 634.5 OFFCURVE",
"390 634 OFFCURVE",
"394 634 CURVE SMOOTH",
"403.333 634 OFFCURVE",
"411.667 637.667 OFFCURVE",
"419 645 CURVE",
"395.667 673 OFFCURVE",
"365.333 687 OFFCURVE",
"328 687 CURVE SMOOTH",
"299.333 687 OFFCURVE",
"255.333 679.333 OFFCURVE",
"196 664 CURVE SMOOTH",
"130 646.667 OFFCURVE",
"84.667 636.667 OFFCURVE",
"60 634 CURVE",
"44 627.333 OFFCURVE",
"32.667 621 OFFCURVE",
"26 615 CURVE",
"27.333 607 OFFCURVE",
"32 581 OFFCURVE",
"32 569 CURVE",
"32 569 OFFCURVE",
"31.333 558.333 OFFCURVE",
"30 537 CURVE SMOOTH",
"23.333 448.333 OFFCURVE",
"20 341.333 OFFCURVE",
"20 216 CURVE SMOOTH",
"20 58 OFFCURVE",
"67 -21 OFFCURVE",
"161 -21 CURVE SMOOTH",
"189.667 -21 OFFCURVE",
"231.167 -11.833 OFFCURVE",
"285.5 6.5 CURVE SMOOTH",
"339.833 24.833 OFFCURVE",
"381.333 34 OFFCURVE",
"410 34 CURVE SMOOTH",
"412.667 34 OFFCURVE",
"416.5 33.5 OFFCURVE",
"421.5 32.5 CURVE SMOOTH",
"426.5 31.5 OFFCURVE",
"430.333 31 OFFCURVE",
"433 31 CURVE SMOOTH",
"437.667 31 OFFCURVE",
"441.667 34.667 OFFCURVE",
"445 42 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
1 82 82 64 83 22 68 60 49 24 12 8 2 75 66 47 39 22 16 15 0 32 5 58 34 4 58 58 4 36 80 6 27 77 6 30 52 6 45 63 6 70 18 45 3 30 1 1 32 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
32 82 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
82 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"370.667 788 OFFCURVE",
"352 816 OFFCURVE",
"340 816 CURVE SMOOTH",
"325.333 816 OFFCURVE",
"284 779.667 OFFCURVE",
"216 707 CURVE",
"215.333 703.667 OFFCURVE",
"215 702 OFFCURVE",
"215 702 CURVE",
"215 696.667 OFFCURVE",
"223 682 OFFCURVE",
"227 682 CURVE SMOOTH",
"241 682 OFFCURVE",
"261.667 695.333 OFFCURVE",
"289 722 CURVE SMOOTH",
"307.667 740 OFFCURVE",
"325 752.667 OFFCURVE",
"341 760 CURVE",
"353 764.667 OFFCURVE",
"362.333 767.667 OFFCURVE",
"369 769 CURVE",
"372 776 LINE"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 78 78 64 79 17 74 38 26 21 19 7 72 62 48 33 30 23 21 17 10 0 66 6 54 14 54 3 45 1 1 48 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
48 78 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
78 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 518;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"329 780.333 OFFCURVE",
"311.667 800 OFFCURVE",
"289 800 CURVE SMOOTH",
"266.333 800 OFFCURVE",
"249 780.333 OFFCURVE",
"249 759 CURVE SMOOTH",
"249 736.333 OFFCURVE",
"266.333 717 OFFCURVE",
"289 717 CURVE SMOOTH",
"311.667 717 OFFCURVE",
"329 736.333 OFFCURVE",
"329 759 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"179 770.333 OFFCURVE",
"161.667 790 OFFCURVE",
"139 790 CURVE SMOOTH",
"116.333 790 OFFCURVE",
"99 770.333 OFFCURVE",
"99 749 CURVE SMOOTH",
"99 726.333 OFFCURVE",
"116.333 707 OFFCURVE",
"139 707 CURVE SMOOTH",
"161.667 707 OFFCURVE",
"179 726.333 OFFCURVE",
"179 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"432.333 66 OFFCURVE",
"404.667 78 OFFCURVE",
"362 78 CURVE SMOOTH",
"337.333 78 OFFCURVE",
"301.833 69.667 OFFCURVE",
"255.5 53 CURVE SMOOTH",
"209.167 36.333 OFFCURVE",
"173.667 28 OFFCURVE",
"149 28 CURVE SMOOTH",
"97.667 28 OFFCURVE",
"72 78.333 OFFCURVE",
"72 179 CURVE SMOOTH",
"72 219 OFFCURVE",
"73.333 246.333 OFFCURVE",
"76 261 CURVE",
"106.667 274.333 OFFCURVE",
"229 299 OFFCURVE",
"265 299 CURVE SMOOTH",
"279.667 299 OFFCURVE",
"291.667 296 OFFCURVE",
"301 290 CURVE",
"319.667 296.667 OFFCURVE",
"328.333 301.333 OFFCURVE",
"327 304 CURVE",
"319 334 LINE",
"302.333 342.667 OFFCURVE",
"285.667 347 OFFCURVE",
"269 347 CURVE SMOOTH",
"248.333 347 OFFCURVE",
"218.333 342.333 OFFCURVE",
"179 333 CURVE SMOOTH",
"139.667 323.667 OFFCURVE",
"110 319 OFFCURVE",
"90 319 CURVE SMOOTH",
"85.333 319 OFFCURVE",
"81.667 320.667 OFFCURVE",
"79 324 CURVE",
"86.333 438.667 OFFCURVE",
"92.667 524.667 OFFCURVE",
"98 582 CURVE",
"114 595.333 OFFCURVE",
"155.333 608.333 OFFCURVE",
"222 621 CURVE SMOOTH",
"281.333 631.667 OFFCURVE",
"326.333 637 OFFCURVE",
"357 637 CURVE SMOOTH",
"361 637 OFFCURVE",
"367.167 636.5 OFFCURVE",
"375.5 635.5 CURVE SMOOTH",
"383.833 634.5 OFFCURVE",
"390 634 OFFCURVE",
"394 634 CURVE SMOOTH",
"403.333 634 OFFCURVE",
"411.667 637.667 OFFCURVE",
"419 645 CURVE",
"395.667 673 OFFCURVE",
"365.333 687 OFFCURVE",
"328 687 CURVE SMOOTH",
"299.333 687 OFFCURVE",
"255.333 679.333 OFFCURVE",
"196 664 CURVE SMOOTH",
"130 646.667 OFFCURVE",
"84.667 636.667 OFFCURVE",
"60 634 CURVE",
"44 627.333 OFFCURVE",
"32.667 621 OFFCURVE",
"26 615 CURVE",
"27.333 607 OFFCURVE",
"32 581 OFFCURVE",
"32 569 CURVE",
"32 569 OFFCURVE",
"31.333 558.333 OFFCURVE",
"30 537 CURVE SMOOTH",
"23.333 448.333 OFFCURVE",
"20 341.333 OFFCURVE",
"20 216 CURVE SMOOTH",
"20 58 OFFCURVE",
"67 -21 OFFCURVE",
"161 -21 CURVE SMOOTH",
"189.667 -21 OFFCURVE",
"231.167 -11.833 OFFCURVE",
"285.5 6.5 CURVE SMOOTH",
"339.833 24.833 OFFCURVE",
"381.333 34 OFFCURVE",
"410 34 CURVE SMOOTH",
"412.667 34 OFFCURVE",
"416.5 33.5 OFFCURVE",
"421.5 32.5 CURVE SMOOTH",
"426.5 31.5 OFFCURVE",
"430.333 31 OFFCURVE",
"433 31 CURVE SMOOTH",
"437.667 31 OFFCURVE",
"441.667 34.667 OFFCURVE",
"445 42 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
1 84 84 64 85 24 70 62 51 26 77 49 41 24 6 5 68 0 12 5 18 34 5 60 36 4 60 60 4 38 3 6 9 15 6 21 82 6 29 79 6 32 54 6 47 65 6 72 9 47 3 32 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 84 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
84 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"273 732 OFFCURVE",
"272.667 733.667 OFFCURVE",
"272 737 CURVE",
"204 809.667 OFFCURVE",
"162.667 846 OFFCURVE",
"148 846 CURVE SMOOTH",
"136 846 OFFCURVE",
"117.333 818 OFFCURVE",
"116 806 CURVE",
"119 799 LINE",
"130.333 795 OFFCURVE",
"139.667 792 OFFCURVE",
"147 790 CURVE",
"163 782.667 OFFCURVE",
"180.333 770 OFFCURVE",
"199 752 CURVE SMOOTH",
"226.333 725.333 OFFCURVE",
"247 712 OFFCURVE",
"261 712 CURVE SMOOTH",
"265 712 OFFCURVE",
"273 726.667 OFFCURVE",
"273 732 CURVE"
);
},
{
closed = 1;
nodes = (
"432.333 66 OFFCURVE",
"404.667 78 OFFCURVE",
"362 78 CURVE SMOOTH",
"337.333 78 OFFCURVE",
"301.833 69.667 OFFCURVE",
"255.5 53 CURVE SMOOTH",
"209.167 36.333 OFFCURVE",
"173.667 28 OFFCURVE",
"149 28 CURVE SMOOTH",
"97.667 28 OFFCURVE",
"72 78.333 OFFCURVE",
"72 179 CURVE SMOOTH",
"72 219 OFFCURVE",
"73.333 246.333 OFFCURVE",
"76 261 CURVE",
"106.667 274.333 OFFCURVE",
"229 299 OFFCURVE",
"265 299 CURVE SMOOTH",
"279.667 299 OFFCURVE",
"291.667 296 OFFCURVE",
"301 290 CURVE",
"319.667 296.667 OFFCURVE",
"328.333 301.333 OFFCURVE",
"327 304 CURVE",
"319 334 LINE",
"302.333 342.667 OFFCURVE",
"285.667 347 OFFCURVE",
"269 347 CURVE SMOOTH",
"248.333 347 OFFCURVE",
"218.333 342.333 OFFCURVE",
"179 333 CURVE SMOOTH",
"139.667 323.667 OFFCURVE",
"110 319 OFFCURVE",
"90 319 CURVE SMOOTH",
"85.333 319 OFFCURVE",
"81.667 320.667 OFFCURVE",
"79 324 CURVE",
"86.333 438.667 OFFCURVE",
"92.667 524.667 OFFCURVE",
"98 582 CURVE",
"114 595.333 OFFCURVE",
"155.333 608.333 OFFCURVE",
"222 621 CURVE SMOOTH",
"281.333 631.667 OFFCURVE",
"326.333 637 OFFCURVE",
"357 637 CURVE SMOOTH",
"361 637 OFFCURVE",
"367.167 636.5 OFFCURVE",
"375.5 635.5 CURVE SMOOTH",
"383.833 634.5 OFFCURVE",
"390 634 OFFCURVE",
"394 634 CURVE SMOOTH",
"403.333 634 OFFCURVE",
"411.667 637.667 OFFCURVE",
"419 645 CURVE",
"395.667 673 OFFCURVE",
"365.333 687 OFFCURVE",
"328 687 CURVE SMOOTH",
"299.333 687 OFFCURVE",
"255.333 679.333 OFFCURVE",
"196 664 CURVE SMOOTH",
"130 646.667 OFFCURVE",
"84.667 636.667 OFFCURVE",
"60 634 CURVE",
"44 627.333 OFFCURVE",
"32.667 621 OFFCURVE",
"26 615 CURVE",
"27.333 607 OFFCURVE",
"32 581 OFFCURVE",
"32 569 CURVE",
"32 569 OFFCURVE",
"31.333 558.333 OFFCURVE",
"30 537 CURVE SMOOTH",
"23.333 448.333 OFFCURVE",
"20 341.333 OFFCURVE",
"20 216 CURVE SMOOTH",
"20 58 OFFCURVE",
"67 -21 OFFCURVE",
"161 -21 CURVE SMOOTH",
"189.667 -21 OFFCURVE",
"231.167 -11.833 OFFCURVE",
"285.5 6.5 CURVE SMOOTH",
"339.833 24.833 OFFCURVE",
"381.333 34 OFFCURVE",
"410 34 CURVE SMOOTH",
"412.667 34 OFFCURVE",
"416.5 33.5 OFFCURVE",
"421.5 32.5 CURVE SMOOTH",
"426.5 31.5 OFFCURVE",
"430.333 31 OFFCURVE",
"433 31 CURVE SMOOTH",
"437.667 31 OFFCURVE",
"441.667 34.667 OFFCURVE",
"445 42 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
1 77 77 64 78 17 63 55 44 19 3 70 61 42 34 17 10 0 27 5 53 29 4 53 53 4 31 75 6 22 72 6 25 47 6 40 58 6 65 13 40 3 25 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 77 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
77 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 465;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"176 788 OFFCURVE",
"157 816 OFFCURVE",
"145 816 CURVE SMOOTH",
"130.333 816 OFFCURVE",
"89 779.667 OFFCURVE",
"21 707 CURVE",
"20.333 703.667 OFFCURVE",
"20 702 OFFCURVE",
"20 702 CURVE",
"20 696.667 OFFCURVE",
"28 682 OFFCURVE",
"32 682 CURVE SMOOTH",
"46 682 OFFCURVE",
"66.667 695.333 OFFCURVE",
"94 722 CURVE SMOOTH",
"112.667 740 OFFCURVE",
"130 752.667 OFFCURVE",
"146 760 CURVE",
"158 764.667 OFFCURVE",
"167.333 767.667 OFFCURVE",
"174 769 CURVE",
"176 776 LINE"
);
},
{
closed = 1;
nodes = (
"147 651.667 OFFCURVE",
"119 670 OFFCURVE",
"107 670 CURVE SMOOTH",
"88.333 670 OFFCURVE",
"55 642.667 OFFCURVE",
"55 624 CURVE SMOOTH",
"58 160 LINE SMOOTH",
"58 140 OFFCURVE",
"60.667 110.667 OFFCURVE",
"66 72 CURVE SMOOTH",
"72 25.333 OFFCURVE",
"86 2 OFFCURVE",
"108 2 CURVE SMOOTH",
"115.333 2 OFFCURVE",
"125.333 6.333 OFFCURVE",
"138 15 CURVE",
"118 44.333 OFFCURVE",
"108 106.667 OFFCURVE",
"108 202 CURVE SMOOTH",
"108 311.333 OFFCURVE",
"115.333 434.333 OFFCURVE",
"130 571 CURVE SMOOTH",
"132.667 601 OFFCURVE",
"135.333 618.667 OFFCURVE",
"138 624 CURVE",
"144 634.667 OFFCURVE",
"147 640.333 OFFCURVE",
"147 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
1 38 38 64 39 0 7 25 10 0 32 5 17 21 5 31 23 4 31 14 27 35 3 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 38 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
38 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 196;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"268 692 OFFCURVE",
"267.667 693.667 OFFCURVE",
"267 697 CURVE",
"192.333 763.667 OFFCURVE",
"151.333 797 OFFCURVE",
"144 797 CURVE SMOOTH",
"136 797 OFFCURVE",
"95 763.667 OFFCURVE",
"21 697 CURVE",
"20.333 693.667 OFFCURVE",
"20 692 OFFCURVE",
"20 692 CURVE",
"20 686.667 OFFCURVE",
"28 672 OFFCURVE",
"32 672 CURVE SMOOTH",
"44.667 672 OFFCURVE",
"65.333 685.333 OFFCURVE",
"94 712 CURVE",
"118 728 OFFCURVE",
"134.667 737 OFFCURVE",
"144 739 CURVE",
"149.333 736.333 OFFCURVE",
"157.667 732.667 OFFCURVE",
"169 728 CURVE",
"177 725.333 OFFCURVE",
"185.333 720 OFFCURVE",
"194 712 CURVE SMOOTH",
"222.667 685.333 OFFCURVE",
"243.333 672 OFFCURVE",
"256 672 CURVE SMOOTH",
"260 672 OFFCURVE",
"268 686.667 OFFCURVE",
"268 692 CURVE"
);
},
{
closed = 1;
nodes = (
"187 651.667 OFFCURVE",
"159 670 OFFCURVE",
"147 670 CURVE SMOOTH",
"128.333 670 OFFCURVE",
"95 642.667 OFFCURVE",
"95 624 CURVE SMOOTH",
"98 160 LINE SMOOTH",
"98 140 OFFCURVE",
"100.667 110.667 OFFCURVE",
"106 72 CURVE SMOOTH",
"112 25.333 OFFCURVE",
"126 2 OFFCURVE",
"148 2 CURVE SMOOTH",
"155.333 2 OFFCURVE",
"165.333 6.333 OFFCURVE",
"178 15 CURVE",
"158 44.333 OFFCURVE",
"148 106.667 OFFCURVE",
"148 202 CURVE SMOOTH",
"148 311.333 OFFCURVE",
"155.333 434.333 OFFCURVE",
"170 571 CURVE SMOOTH",
"172.667 601 OFFCURVE",
"175.333 618.667 OFFCURVE",
"178 624 CURVE",
"184 634.667 OFFCURVE",
"187 640.333 OFFCURVE",
"187 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
1 45 45 64 46 0 13 3 32 16 0 24 5 39 28 5 38 30 4 38 9 6 20 20 34 42 3 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 45 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
45 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 288;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"220 770.333 OFFCURVE",
"202.667 790 OFFCURVE",
"180 790 CURVE SMOOTH",
"157.333 790 OFFCURVE",
"140 770.333 OFFCURVE",
"140 749 CURVE SMOOTH",
"140 726.333 OFFCURVE",
"157.333 707 OFFCURVE",
"180 707 CURVE SMOOTH",
"202.667 707 OFFCURVE",
"220 726.333 OFFCURVE",
"220 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 760.333 OFFCURVE",
"82.667 780 OFFCURVE",
"60 780 CURVE SMOOTH",
"37.333 780 OFFCURVE",
"20 760.333 OFFCURVE",
"20 739 CURVE SMOOTH",
"20 716.333 OFFCURVE",
"37.333 697 OFFCURVE",
"60 697 CURVE SMOOTH",
"82.667 697 OFFCURVE",
"100 716.333 OFFCURVE",
"100 739 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"163 651.667 OFFCURVE",
"135 670 OFFCURVE",
"123 670 CURVE SMOOTH",
"104.333 670 OFFCURVE",
"71 642.667 OFFCURVE",
"71 624 CURVE SMOOTH",
"74 160 LINE SMOOTH",
"74 140 OFFCURVE",
"76.667 110.667 OFFCURVE",
"82 72 CURVE SMOOTH",
"88 25.333 OFFCURVE",
"102 2 OFFCURVE",
"124 2 CURVE SMOOTH",
"131.333 2 OFFCURVE",
"141.333 6.333 OFFCURVE",
"154 15 CURVE",
"134 44.333 OFFCURVE",
"124 106.667 OFFCURVE",
"124 202 CURVE SMOOTH",
"124 311.333 OFFCURVE",
"131.333 434.333 OFFCURVE",
"146 571 CURVE SMOOTH",
"148.667 601 OFFCURVE",
"151.333 618.667 OFFCURVE",
"154 624 CURVE",
"160 634.667 OFFCURVE",
"163 640.333 OFFCURVE",
"163 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
1 45 45 64 46 0 32 24 5 39 6 5 0 12 5 18 28 5 38 30 4 38 3 6 9 15 6 21 9 34 42 3 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 45 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
45 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 240;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"176 702 OFFCURVE",
"176 703.667 OFFCURVE",
"176 707 CURVE",
"108 779.667 OFFCURVE",
"66.333 816 OFFCURVE",
"51 816 CURVE SMOOTH",
"40.333 816 OFFCURVE",
"20 788 OFFCURVE",
"20 776 CURVE",
"23 769 LINE",
"34.333 765 OFFCURVE",
"43.667 762 OFFCURVE",
"51 760 CURVE",
"67 752.667 OFFCURVE",
"84.333 740 OFFCURVE",
"103 722 CURVE SMOOTH",
"130.333 695.333 OFFCURVE",
"150.667 682 OFFCURVE",
"164 682 CURVE SMOOTH",
"169.333 682 OFFCURVE",
"176 696.667 OFFCURVE",
"176 702 CURVE"
);
},
{
closed = 1;
nodes = (
"145 651.667 OFFCURVE",
"117 670 OFFCURVE",
"105 670 CURVE SMOOTH",
"87.667 670 OFFCURVE",
"52.667 642.667 OFFCURVE",
"54 624 CURVE",
"56 160 LINE SMOOTH",
"56.667 140 OFFCURVE",
"59.333 110.667 OFFCURVE",
"64 72 CURVE SMOOTH",
"70 25.333 OFFCURVE",
"84.333 2 OFFCURVE",
"107 2 CURVE SMOOTH",
"114.333 2 OFFCURVE",
"124 6.333 OFFCURVE",
"136 15 CURVE",
"116.667 44.333 OFFCURVE",
"107 106.667 OFFCURVE",
"107 202 CURVE SMOOTH",
"107 311.333 OFFCURVE",
"114 434.333 OFFCURVE",
"128 571 CURVE SMOOTH",
"131.333 601 OFFCURVE",
"134.333 618.667 OFFCURVE",
"137 624 CURVE SMOOTH",
"142.333 634.667 OFFCURVE",
"145 640.333 OFFCURVE",
"145 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
1 38 38 64 39 0 3 25 15 10 0 17 5 32 21 5 31 23 4 32 31 13 27 35 3 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 38 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
38 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 196;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"360.667 798 OFFCURVE",
"342 826 OFFCURVE",
"330 826 CURVE SMOOTH",
"315.333 826 OFFCURVE",
"274 789.667 OFFCURVE",
"206 717 CURVE",
"205.333 713.667 OFFCURVE",
"205 712 OFFCURVE",
"205 712 CURVE",
"205 706.667 OFFCURVE",
"213 692 OFFCURVE",
"217 692 CURVE SMOOTH",
"231 692 OFFCURVE",
"251.667 705.333 OFFCURVE",
"279 732 CURVE SMOOTH",
"297.667 750 OFFCURVE",
"315 762.667 OFFCURVE",
"331 770 CURVE",
"343 774.667 OFFCURVE",
"352.333 777.667 OFFCURVE",
"359 779 CURVE",
"362 786 LINE"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 53 53 64 54 17 7 10 0 35 5 17 43 4 27 39 6 31 49 7 21 14 31 3 21 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 53 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
53 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"413 712 OFFCURVE",
"412.667 713.667 OFFCURVE",
"412 717 CURVE",
"338 783.667 OFFCURVE",
"297 817 OFFCURVE",
"289 817 CURVE SMOOTH",
"281 817 OFFCURVE",
"240 783.667 OFFCURVE",
"166 717 CURVE",
"165.333 713.667 OFFCURVE",
"165 712 OFFCURVE",
"165 712 CURVE",
"165 706.667 OFFCURVE",
"173 692 OFFCURVE",
"177 692 CURVE SMOOTH",
"189.667 692 OFFCURVE",
"210.333 705.333 OFFCURVE",
"239 732 CURVE",
"263 748 OFFCURVE",
"279.667 757 OFFCURVE",
"289 759 CURVE",
"294.333 756.333 OFFCURVE",
"302.667 752.667 OFFCURVE",
"314 748 CURVE",
"322 745.333 OFFCURVE",
"330.333 740 OFFCURVE",
"339 732 CURVE SMOOTH",
"367.667 705.333 OFFCURVE",
"388.333 692 OFFCURVE",
"401 692 CURVE SMOOTH",
"405 692 OFFCURVE",
"413 706.667 OFFCURVE",
"413 712 CURVE"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
1 60 60 64 61 24 13 3 16 0 42 5 24 50 4 34 9 6 20 46 6 38 56 7 28 20 38 3 28 1 1 34 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
34 60 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
60 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ograve;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"373 722 OFFCURVE",
"372.667 723.667 OFFCURVE",
"372 727 CURVE",
"304 799.667 OFFCURVE",
"262.667 836 OFFCURVE",
"248 836 CURVE SMOOTH",
"236 836 OFFCURVE",
"217.333 808 OFFCURVE",
"216 796 CURVE",
"219 789 LINE",
"230.333 785 OFFCURVE",
"239.667 782 OFFCURVE",
"247 780 CURVE",
"263 772.667 OFFCURVE",
"280.333 760 OFFCURVE",
"299 742 CURVE SMOOTH",
"326.333 715.333 OFFCURVE",
"347 702 OFFCURVE",
"361 702 CURVE SMOOTH",
"365 702 OFFCURVE",
"373 716.667 OFFCURVE",
"373 722 CURVE"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
1 53 53 64 54 17 3 10 0 35 5 17 43 4 27 39 6 31 49 7 21 13 31 3 21 1 1 27 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
27 53 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
53 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 552;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"300.667 788 OFFCURVE",
"282 816 OFFCURVE",
"270 816 CURVE SMOOTH",
"255.333 816 OFFCURVE",
"214 779.667 OFFCURVE",
"146 707 CURVE",
"145.333 703.667 OFFCURVE",
"145 702 OFFCURVE",
"145 702 CURVE",
"145 696.667 OFFCURVE",
"153 682 OFFCURVE",
"157 682 CURVE SMOOTH",
"171 682 OFFCURVE",
"191.667 695.333 OFFCURVE",
"219 722 CURVE SMOOTH",
"237.667 740 OFFCURVE",
"255 752.667 OFFCURVE",
"271 760 CURVE",
"283 764.667 OFFCURVE",
"292.333 767.667 OFFCURVE",
"299 769 CURVE",
"302 776 LINE"
);
},
{
closed = 1;
nodes = (
"405 661 LINE SMOOTH",
"405 674.333 OFFCURVE",
"377.667 690 OFFCURVE",
"363 690 CURVE SMOOTH",
"349.667 690 OFFCURVE",
"338 668.333 OFFCURVE",
"338 655 CURVE SMOOTH",
"338 653.667 OFFCURVE",
"340.667 647.333 OFFCURVE",
"346 636 CURVE SMOOTH",
"357.333 613.333 OFFCURVE",
"363 571 OFFCURVE",
"363 509 CURVE SMOOTH",
"363 186.333 OFFCURVE",
"307.333 25 OFFCURVE",
"196 25 CURVE SMOOTH",
"154.667 25 OFFCURVE",
"123 47 OFFCURVE",
"101 91 CURVE SMOOTH",
"83.667 125.667 OFFCURVE",
"75 166 OFFCURVE",
"75 212 CURVE SMOOTH",
"75 342 LINE SMOOTH",
"75 370.667 OFFCURVE",
"81.333 446.667 OFFCURVE",
"94 570 CURVE SMOOTH",
"97.333 602.667 OFFCURVE",
"106 619.333 OFFCURVE",
"120 620 CURVE",
"122.667 649.333 OFFCURVE",
"94.667 665 OFFCURVE",
"64 665 CURVE SMOOTH",
"49.333 665 OFFCURVE",
"20 646.333 OFFCURVE",
"20 633 CURVE SMOOTH",
"20 627.667 OFFCURVE",
"22 619.5 OFFCURVE",
"26 608.5 CURVE SMOOTH",
"30 597.5 OFFCURVE",
"32 589 OFFCURVE",
"32 583 CURVE SMOOTH",
"32 551 OFFCURVE",
"30 502.5 OFFCURVE",
"26 437.5 CURVE SMOOTH",
"22 372.5 OFFCURVE",
"20 323.667 OFFCURVE",
"20 291 CURVE SMOOTH",
"20 227.667 OFFCURVE",
"24.333 178 OFFCURVE",
"33 142 CURVE SMOOTH",
"45.667 88 OFFCURVE",
"69.667 46 OFFCURVE",
"105 16 CURVE SMOOTH",
"135.667 -10 OFFCURVE",
"171 -23 OFFCURVE",
"211 -23 CURVE SMOOTH",
"254.333 -23 OFFCURVE",
"292.333 -5.667 OFFCURVE",
"325 29 CURVE SMOOTH",
"350.333 56.333 OFFCURVE",
"370.667 110.333 OFFCURVE",
"386 191 CURVE SMOOTH",
"398.667 255.667 OFFCURVE",
"405 315 OFFCURVE",
"405 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 63 63 64 64 17 38 7 41 10 0 52 4 17 56 5 62 17 46 45 5 35 29 43 5 32 50 6 23 14 59 3 23 1 1 29 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
29 63 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
63 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 425;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"333 722 OFFCURVE",
"332.667 723.667 OFFCURVE",
"332 727 CURVE",
"258 793.667 OFFCURVE",
"217 827 OFFCURVE",
"209 827 CURVE SMOOTH",
"201 827 OFFCURVE",
"160 793.667 OFFCURVE",
"86 727 CURVE",
"85.333 723.667 OFFCURVE",
"85 722 OFFCURVE",
"85 722 CURVE",
"85 716.667 OFFCURVE",
"93 702 OFFCURVE",
"97 702 CURVE SMOOTH",
"109.667 702 OFFCURVE",
"130.333 715.333 OFFCURVE",
"159 742 CURVE",
"183 758 OFFCURVE",
"199.667 767 OFFCURVE",
"209 769 CURVE",
"214.333 766.333 OFFCURVE",
"222.667 762.667 OFFCURVE",
"234 758 CURVE",
"242 755.333 OFFCURVE",
"250.333 750 OFFCURVE",
"259 742 CURVE SMOOTH",
"287.667 715.333 OFFCURVE",
"308.333 702 OFFCURVE",
"321 702 CURVE SMOOTH",
"325 702 OFFCURVE",
"333 716.667 OFFCURVE",
"333 722 CURVE"
);
},
{
closed = 1;
nodes = (
"405 661 LINE SMOOTH",
"405 674.333 OFFCURVE",
"377.667 690 OFFCURVE",
"363 690 CURVE SMOOTH",
"349.667 690 OFFCURVE",
"338 668.333 OFFCURVE",
"338 655 CURVE SMOOTH",
"338 653.667 OFFCURVE",
"340.667 647.333 OFFCURVE",
"346 636 CURVE SMOOTH",
"357.333 613.333 OFFCURVE",
"363 571 OFFCURVE",
"363 509 CURVE SMOOTH",
"363 186.333 OFFCURVE",
"307.333 25 OFFCURVE",
"196 25 CURVE SMOOTH",
"154.667 25 OFFCURVE",
"123 47 OFFCURVE",
"101 91 CURVE SMOOTH",
"83.667 125.667 OFFCURVE",
"75 166 OFFCURVE",
"75 212 CURVE SMOOTH",
"75 342 LINE SMOOTH",
"75 370.667 OFFCURVE",
"81.333 446.667 OFFCURVE",
"94 570 CURVE SMOOTH",
"97.333 602.667 OFFCURVE",
"106 619.333 OFFCURVE",
"120 620 CURVE",
"122.667 649.333 OFFCURVE",
"94.667 665 OFFCURVE",
"64 665 CURVE SMOOTH",
"49.333 665 OFFCURVE",
"20 646.333 OFFCURVE",
"20 633 CURVE SMOOTH",
"20 627.667 OFFCURVE",
"22 619.5 OFFCURVE",
"26 608.5 CURVE SMOOTH",
"30 597.5 OFFCURVE",
"32 589 OFFCURVE",
"32 583 CURVE SMOOTH",
"32 551 OFFCURVE",
"30 502.5 OFFCURVE",
"26 437.5 CURVE SMOOTH",
"22 372.5 OFFCURVE",
"20 323.667 OFFCURVE",
"20 291 CURVE SMOOTH",
"20 227.667 OFFCURVE",
"24.333 178 OFFCURVE",
"33 142 CURVE SMOOTH",
"45.667 88 OFFCURVE",
"69.667 46 OFFCURVE",
"105 16 CURVE SMOOTH",
"135.667 -10 OFFCURVE",
"171 -23 OFFCURVE",
"211 -23 CURVE SMOOTH",
"254.333 -23 OFFCURVE",
"292.333 -5.667 OFFCURVE",
"325 29 CURVE SMOOTH",
"350.333 56.333 OFFCURVE",
"370.667 110.333 OFFCURVE",
"386 191 CURVE SMOOTH",
"398.667 255.667 OFFCURVE",
"405 315 OFFCURVE",
"405 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 70 70 64 71 24 45 13 3 48 16 0 59 4 24 63 5 69 24 53 52 5 42 36 50 5 39 9 6 20 57 6 30 20 66 3 30 1 1 36 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
36 70 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
70 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 425;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Ugrave;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"273 702 OFFCURVE",
"272.667 703.667 OFFCURVE",
"272 707 CURVE",
"204 779.667 OFFCURVE",
"162.667 816 OFFCURVE",
"148 816 CURVE SMOOTH",
"136 816 OFFCURVE",
"117.333 788 OFFCURVE",
"116 776 CURVE",
"119 769 LINE",
"130.333 765 OFFCURVE",
"139.667 762 OFFCURVE",
"147 760 CURVE",
"163 752.667 OFFCURVE",
"180.333 740 OFFCURVE",
"199 722 CURVE SMOOTH",
"226.333 695.333 OFFCURVE",
"247 682 OFFCURVE",
"261 682 CURVE SMOOTH",
"265 682 OFFCURVE",
"273 696.667 OFFCURVE",
"273 702 CURVE"
);
},
{
closed = 1;
nodes = (
"405 661 LINE SMOOTH",
"405 674.333 OFFCURVE",
"377.667 690 OFFCURVE",
"363 690 CURVE SMOOTH",
"349.667 690 OFFCURVE",
"338 668.333 OFFCURVE",
"338 655 CURVE SMOOTH",
"338 653.667 OFFCURVE",
"340.667 647.333 OFFCURVE",
"346 636 CURVE SMOOTH",
"357.333 613.333 OFFCURVE",
"363 571 OFFCURVE",
"363 509 CURVE SMOOTH",
"363 186.333 OFFCURVE",
"307.333 25 OFFCURVE",
"196 25 CURVE SMOOTH",
"154.667 25 OFFCURVE",
"123 47 OFFCURVE",
"101 91 CURVE SMOOTH",
"83.667 125.667 OFFCURVE",
"75 166 OFFCURVE",
"75 212 CURVE SMOOTH",
"75 342 LINE SMOOTH",
"75 370.667 OFFCURVE",
"81.333 446.667 OFFCURVE",
"94 570 CURVE SMOOTH",
"97.333 602.667 OFFCURVE",
"106 619.333 OFFCURVE",
"120 620 CURVE",
"122.667 649.333 OFFCURVE",
"94.667 665 OFFCURVE",
"64 665 CURVE SMOOTH",
"49.333 665 OFFCURVE",
"20 646.333 OFFCURVE",
"20 633 CURVE SMOOTH",
"20 627.667 OFFCURVE",
"22 619.5 OFFCURVE",
"26 608.5 CURVE SMOOTH",
"30 597.5 OFFCURVE",
"32 589 OFFCURVE",
"32 583 CURVE SMOOTH",
"32 551 OFFCURVE",
"30 502.5 OFFCURVE",
"26 437.5 CURVE SMOOTH",
"22 372.5 OFFCURVE",
"20 323.667 OFFCURVE",
"20 291 CURVE SMOOTH",
"20 227.667 OFFCURVE",
"24.333 178 OFFCURVE",
"33 142 CURVE SMOOTH",
"45.667 88 OFFCURVE",
"69.667 46 OFFCURVE",
"105 16 CURVE SMOOTH",
"135.667 -10 OFFCURVE",
"171 -23 OFFCURVE",
"211 -23 CURVE SMOOTH",
"254.333 -23 OFFCURVE",
"292.333 -5.667 OFFCURVE",
"325 29 CURVE SMOOTH",
"350.333 56.333 OFFCURVE",
"370.667 110.333 OFFCURVE",
"386 191 CURVE SMOOTH",
"398.667 255.667 OFFCURVE",
"405 315 OFFCURVE",
"405 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
1 63 63 64 64 17 38 3 41 10 0 52 4 17 56 5 62 17 46 45 5 35 29 43 5 32 50 6 23 13 59 3 23 1 1 29 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
29 63 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
63 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 425;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = circumflex;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"268 722 OFFCURVE",
"267.667 723.667 OFFCURVE",
"267 727 CURVE",
"192.333 793.667 OFFCURVE",
"151.333 827 OFFCURVE",
"144 827 CURVE SMOOTH",
"136 827 OFFCURVE",
"95 793.667 OFFCURVE",
"21 727 CURVE",
"20.333 723.667 OFFCURVE",
"20 722 OFFCURVE",
"20 722 CURVE",
"20 716.667 OFFCURVE",
"28 702 OFFCURVE",
"32 702 CURVE SMOOTH",
"44.667 702 OFFCURVE",
"65.333 715.333 OFFCURVE",
"94 742 CURVE",
"118 758 OFFCURVE",
"134.667 767 OFFCURVE",
"144 769 CURVE",
"149.333 766.333 OFFCURVE",
"157.667 762.667 OFFCURVE",
"169 758 CURVE",
"177 755.333 OFFCURVE",
"185.333 750 OFFCURVE",
"194 742 CURVE SMOOTH",
"222.667 715.333 OFFCURVE",
"243.333 702 OFFCURVE",
"256 702 CURVE SMOOTH",
"260 702 OFFCURVE",
"268 716.667 OFFCURVE",
"268 722 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 24 24 64 25 0 16 0 9 6 20 20 13 3 1 16 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
16 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 288;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"295 783 OFFCURVE",
"290 788 OFFCURVE",
"280 788 CURVE SMOOTH",
"278 788 OFFCURVE",
"268.833 781.5 OFFCURVE",
"252.5 768.5 CURVE SMOOTH",
"236.167 755.5 OFFCURVE",
"221.333 749 OFFCURVE",
"208 749 CURVE SMOOTH",
"195.333 749 OFFCURVE",
"181.167 755.5 OFFCURVE",
"165.5 768.5 CURVE SMOOTH",
"149.833 781.5 OFFCURVE",
"133.333 788 OFFCURVE",
"116 788 CURVE SMOOTH",
"103.333 788 OFFCURVE",
"84.667 781 OFFCURVE",
"60 767 CURVE SMOOTH",
"33.333 751.667 OFFCURVE",
"20 738.333 OFFCURVE",
"20 727 CURVE SMOOTH",
"20 717 OFFCURVE",
"25.333 712 OFFCURVE",
"36 712 CURVE",
"36 712 OFFCURVE",
"75.333 743 OFFCURVE",
"102 743 CURVE SMOOTH",
"113.333 743 OFFCURVE",
"127.667 737 OFFCURVE",
"145 725 CURVE SMOOTH",
"162.333 713 OFFCURVE",
"180.333 707 OFFCURVE",
"199 707 CURVE SMOOTH",
"224.333 707 OFFCURVE",
"295 750.333 OFFCURVE",
"295 773 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 23 23 64 24 0 9 11 0 18 6 3 6 6 15 21 15 3 1 11 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
11 23 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
23 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 315;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"204 762 LINE",
"20 762 LINE",
"20 724 LINE",
"204 724 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
1 4 4 64 5 0 3 0 5 2 1 3 2 1 0 1 1 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
4 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 224;
}
);
note = macron;
unicode = "00AF,02C9";
},
{
glyphname = cedilla;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"146 -65.333 OFFCURVE",
"135.333 -54.667 OFFCURVE",
"114 -48 CURVE",
"110.667 -47.333 OFFCURVE",
"94 -44.333 OFFCURVE",
"64 -39 CURVE",
"75.333 -23 OFFCURVE",
"83.667 -10.667 OFFCURVE",
"89 -2 CURVE",
"60 -3 LINE",
"59.333 -3.667 OFFCURVE",
"51.333 -11 OFFCURVE",
"36 -25 CURVE SMOOTH",
"25.333 -35 OFFCURVE",
"20 -43.333 OFFCURVE",
"20 -50 CURVE SMOOTH",
"20 -54.667 OFFCURVE",
"24 -58 OFFCURVE",
"32 -60 CURVE",
"34.667 -63.333 OFFCURVE",
"47.5 -66.833 OFFCURVE",
"70.5 -70.5 CURVE SMOOTH",
"93.5 -74.167 OFFCURVE",
"106.667 -78.667 OFFCURVE",
"110 -84 CURVE",
"108.667 -93.333 OFFCURVE",
"98.667 -103 OFFCURVE",
"80 -113 CURVE SMOOTH",
"70.667 -118.333 OFFCURVE",
"57 -124.333 OFFCURVE",
"39 -131 CURVE",
"50 -159 LINE",
"80 -147.667 OFFCURVE",
"100.333 -138.667 OFFCURVE",
"111 -132 CURVE SMOOTH",
"134.333 -117.333 OFFCURVE",
"146 -100 OFFCURVE",
"146 -80 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
1 25 25 64 26 0 21 19 9 5 14 5 0 4 19 1 1 14 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
14 25 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
25 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 166;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = Lslash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"408 44.667 OFFCURVE",
"394.333 68 OFFCURVE",
"373 68 CURVE SMOOTH",
"349.599 68 OFFCURVE",
"227.401 34 OFFCURVE",
"204 34 CURVE SMOOTH",
"144 34 OFFCURVE",
"114 79 OFFCURVE",
"114 169 CURVE SMOOTH",
"114 206.333 OFFCURVE",
"115.667 257.333 OFFCURVE",
"121 324 CURVE",
"197.911 362.982 OFFCURVE",
"264.489 385.755 OFFCURVE",
"296.5 391.5 CURVE SMOOTH",
"315.684 394.943 OFFCURVE",
"325 390.906 OFFCURVE",
"325 405 CURVE SMOOTH",
"325 423.667 OFFCURVE",
"307.667 444 OFFCURVE",
"281 444 CURVE SMOOTH",
"238.609 444 OFFCURVE",
"165.474 400.204 OFFCURVE",
"126 378 CURVE",
"126 412.667 OFFCURVE",
"128.333 447.833 OFFCURVE",
"133 483.5 CURVE SMOOTH",
"137.667 519.167 OFFCURVE",
"140 556.333 OFFCURVE",
"140 595 CURVE SMOOTH",
"140 649.667 OFFCURVE",
"128.333 677 OFFCURVE",
"105 677 CURVE SMOOTH",
"82.333 677 OFFCURVE",
"74 669.667 OFFCURVE",
"74 643 CURVE SMOOTH",
"74 627.497 OFFCURVE",
"78 582.503 OFFCURVE",
"78 567 CURVE SMOOTH",
"78 525.667 OFFCURVE",
"74.667 465.667 OFFCURVE",
"68 383 CURVE SMOOTH",
"65 345 LINE",
"52.189 337.68 OFFCURVE",
"-11 304.94 OFFCURVE",
"-11 295 CURVE SMOOTH",
"-11 281.947 OFFCURVE",
"15.94 251 OFFCURVE",
"30 251 CURVE SMOOTH",
"43.333 251 OFFCURVE",
"53 266 OFFCURVE",
"61 278 CURVE",
"59.667 246 OFFCURVE",
"59 219.333 OFFCURVE",
"59 198 CURVE SMOOTH",
"59 56.65 OFFCURVE",
"93.948 -13 OFFCURVE",
"200 -13 CURVE SMOOTH",
"276.667 -13 OFFCURVE",
"346 -1.333 OFFCURVE",
"408 22 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
56 18 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 56 22 56 38 56 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 56 69 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
32 18 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 2 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
40 2 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
58 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 58 119 58 135 58 151 58 167 58 183 58 199 58 215 58 231 58 247 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 58 23 58 39 58 55 58 71 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 58 102 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
63 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 63 119 63 135 63 151 63 167 63 183 63 199 63 215 63 231 63 247 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 63 23 63 39 63 55 63 71 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 63 102 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 418;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = radical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"854 783.667 OFFCURVE",
"820 798 OFFCURVE",
"792 798 CURVE SMOOTH",
"722.667 800 OFFCURVE",
"668 798 OFFCURVE",
"628 792 CURVE SMOOTH",
"616.667 790 OFFCURVE",
"609.333 788.333 OFFCURVE",
"606 787 CURVE",
"582.667 785.667 OFFCURVE",
"492.333 613.333 OFFCURVE",
"335 270 CURVE SMOOTH",
"283 148.667 OFFCURVE",
"251.333 82 OFFCURVE",
"240 70 CURVE",
"215.333 69.333 OFFCURVE",
"184.667 109 OFFCURVE",
"148 189 CURVE SMOOTH",
"114.667 263 OFFCURVE",
"98 315.333 OFFCURVE",
"98 346 CURVE SMOOTH",
"98 350 OFFCURVE",
"99.5 355.667 OFFCURVE",
"102.5 363 CURVE SMOOTH",
"105.5 370.333 OFFCURVE",
"107 376.333 OFFCURVE",
"107 381 CURVE SMOOTH",
"107 395.667 OFFCURVE",
"103.667 409.667 OFFCURVE",
"97 423 CURVE",
"88.333 437.667 OFFCURVE",
"77 445 OFFCURVE",
"63 445 CURVE SMOOTH",
"41.667 445 OFFCURVE",
"31 431.333 OFFCURVE",
"31 404 CURVE SMOOTH",
"31 361.333 OFFCURVE",
"57 280.333 OFFCURVE",
"109 161 CURVE SMOOTH",
"140.333 89.667 OFFCURVE",
"177.333 37.333 OFFCURVE",
"220 4 CURVE",
"244 -12 OFFCURVE",
"263 -5.333 OFFCURVE",
"277 24 CURVE",
"313 116 OFFCURVE",
"411 327 OFFCURVE",
"571 657 CURVE",
"578.333 669.667 OFFCURVE",
"591 688 OFFCURVE",
"609 712 CURVE SMOOTH",
"634.178 743.473 OFFCURVE",
"690.862 751.708 OFFCURVE",
"766 750 CURVE SMOOTH",
"778.667 750 OFFCURVE",
"794 746.667 OFFCURVE",
"812 740 CURVE",
"813.333 740 OFFCURVE",
"817.333 738.167 OFFCURVE",
"824 734.5 CURVE SMOOTH",
"830.667 730.833 OFFCURVE",
"835 729 OFFCURVE",
"837 729 CURVE SMOOTH",
"837.667 729 OFFCURVE",
"842.333 730.333 OFFCURVE",
"851 733 CURVE",
"851 735 OFFCURVE",
"851.5 738.833 OFFCURVE",
"852.5 744.5 CURVE SMOOTH",
"853.5 750.167 OFFCURVE",
"854 754.333 OFFCURVE",
"854 757 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
33 934 24 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 33 22 33 38 33 54 33 70 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 33 101 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
45 931 10 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 626;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = dotlessi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"87 397.667 OFFCURVE",
"81.333 403.333 OFFCURVE",
"70 408 CURVE",
"61.333 412.667 OFFCURVE",
"53 415 OFFCURVE",
"45 415 CURVE SMOOTH",
"37 415 OFFCURVE",
"28.667 412.667 OFFCURVE",
"20 408 CURVE",
"20 41 LINE SMOOTH",
"20 9.667 OFFCURVE",
"36.333 -6 OFFCURVE",
"69 -6 CURVE SMOOTH",
"73.667 -6 OFFCURVE",
"77.333 -3.333 OFFCURVE",
"80 2 CURVE",
"74 27.333 OFFCURVE",
"71 47.333 OFFCURVE",
"71 62 CURVE SMOOTH",
"71 283 LINE SMOOTH",
"71 295 OFFCURVE",
"73.667 313 OFFCURVE",
"79 337 CURVE SMOOTH",
"84.333 361 OFFCURVE",
"87 379 OFFCURVE",
"87 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 17 17 64 18 0 6 0 5 10 4 3 4 11 10 13 8 1 1 10 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
17 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 107;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = breve;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"240 811 OFFCURVE",
"235 816 OFFCURVE",
"225 816 CURVE SMOOTH",
"215 816 OFFCURVE",
"210 811 OFFCURVE",
"210 801 CURVE SMOOTH",
"210 784.333 OFFCURVE",
"199.667 771.667 OFFCURVE",
"179 763 CURVE SMOOTH",
"163.667 756.333 OFFCURVE",
"146.333 753 OFFCURVE",
"127 753 CURVE SMOOTH",
"75.667 753 OFFCURVE",
"50 769 OFFCURVE",
"50 801 CURVE SMOOTH",
"50 811 OFFCURVE",
"45 816 OFFCURVE",
"35 816 CURVE SMOOTH",
"25 816 OFFCURVE",
"20 811 OFFCURVE",
"20 801 CURVE SMOOTH",
"20 774.333 OFFCURVE",
"32 752.667 OFFCURVE",
"56 736 CURVE SMOOTH",
"78 721.333 OFFCURVE",
"102.667 714 OFFCURVE",
"130 714 CURVE SMOOTH",
"184.667 714 OFFCURVE",
"240 747.667 OFFCURVE",
"240 801 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
1 21 21 64 22 0 11 4 7 17 4 0 13 7 3 19 9 3 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 21 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
21 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 260;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"100 780.333 OFFCURVE",
"82.667 800 OFFCURVE",
"60 800 CURVE SMOOTH",
"37.333 800 OFFCURVE",
"20 780.333 OFFCURVE",
"20 759 CURVE SMOOTH",
"20 736.333 OFFCURVE",
"37.333 717 OFFCURVE",
"60 717 CURVE SMOOTH",
"82.667 717 OFFCURVE",
"100 736.333 OFFCURVE",
"100 759 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
1 12 12 64 13 0 0 5 6 9 3 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 12 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
12 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 120;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"134 803.667 OFFCURVE",
"107.667 830 OFFCURVE",
"77 830 CURVE SMOOTH",
"46.333 830 OFFCURVE",
"20 803.667 OFFCURVE",
"20 773 CURVE SMOOTH",
"20 742.333 OFFCURVE",
"46.333 716 OFFCURVE",
"77 716 CURVE SMOOTH",
"107.667 716 OFFCURVE",
"134 742.333 OFFCURVE",
"134 773 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 753 OFFCURVE",
"97 736 OFFCURVE",
"77 736 CURVE SMOOTH",
"57 736 OFFCURVE",
"40 753 OFFCURVE",
"40 773 CURVE SMOOTH",
"40 793 OFFCURVE",
"57 810 OFFCURVE",
"77 810 CURVE SMOOTH",
"97 810 OFFCURVE",
"114 793 OFFCURVE",
"114 773 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
1 24 24 64 25 0 18 4 6 12 4 0 21 7 3 15 7 9 9 3 1 6 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
6 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 154;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = hungarumlaut;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"173 796 OFFCURVE",
"168 801 OFFCURVE",
"158 801 CURVE SMOOTH",
"148.667 801 OFFCURVE",
"138 789 OFFCURVE",
"126 765 CURVE SMOOTH",
"112 736.333 OFFCURVE",
"102.5 720 OFFCURVE",
"97.5 716 CURVE SMOOTH",
"92.5 712 OFFCURVE",
"90 707.667 OFFCURVE",
"90 703 CURVE SMOOTH",
"90 693 OFFCURVE",
"95 688 OFFCURVE",
"105 688 CURVE SMOOTH",
"113.667 688 OFFCURVE",
"127.667 703.333 OFFCURVE",
"147 734 CURVE SMOOTH",
"164.333 762.667 OFFCURVE",
"173 780 OFFCURVE",
"173 786 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 796 OFFCURVE",
"89 801 OFFCURVE",
"79 801 CURVE SMOOTH",
"72.333 801 OFFCURVE",
"62.667 788.333 OFFCURVE",
"50 763 CURVE SMOOTH",
"42 746.333 OFFCURVE",
"34 729.667 OFFCURVE",
"26 713 CURVE",
"22 710.333 OFFCURVE",
"20 706.333 OFFCURVE",
"20 701 CURVE SMOOTH",
"20 691 OFFCURVE",
"25 686 OFFCURVE",
"35 686 CURVE SMOOTH",
"48.333 686 OFFCURVE",
"94 770 OFFCURVE",
"94 786 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 26 26 64 27 0 18 13 6 0 24 11 4 16 1 18 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
18 26 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
26 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 193;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"166 -125 OFFCURVE",
"161 -120 OFFCURVE",
"151 -120 CURVE SMOOTH",
"147.667 -120 OFFCURVE",
"142.167 -123.167 OFFCURVE",
"134.5 -129.5 CURVE SMOOTH",
"126.833 -135.833 OFFCURVE",
"119 -139 OFFCURVE",
"111 -139 CURVE SMOOTH",
"85.667 -139 OFFCURVE",
"64 -107.667 OFFCURVE",
"64 -81 CURVE SMOOTH",
"64 -65.667 OFFCURVE",
"71 -46.833 OFFCURVE",
"85 -24.5 CURVE SMOOTH",
"99 -2.167 OFFCURVE",
"106 11.333 OFFCURVE",
"106 16 CURVE SMOOTH",
"106 24.667 OFFCURVE",
"101.667 29 OFFCURVE",
"93 29 CURVE SMOOTH",
"87.667 29 OFFCURVE",
"82.333 26.333 OFFCURVE",
"77 21 CURVE SMOOTH",
"39 -15.667 OFFCURVE",
"20 -51.333 OFFCURVE",
"20 -86 CURVE SMOOTH",
"20 -131.333 OFFCURVE",
"55.667 -169 OFFCURVE",
"101 -169 CURVE SMOOTH",
"113 -169 OFFCURVE",
"126 -166.333 OFFCURVE",
"140 -161 CURVE",
"157.333 -153.667 OFFCURVE",
"166 -145 OFFCURVE",
"166 -135 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
1 24 24 64 25 0 22 13 0 16 4 7 19 7 4 11 4 1 7 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
7 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 186;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"268 812.333 OFFCURVE",
"260 826 OFFCURVE",
"256 826 CURVE SMOOTH",
"243.333 826 OFFCURVE",
"222.667 813 OFFCURVE",
"194 787 CURVE",
"170 771 OFFCURVE",
"153.333 762 OFFCURVE",
"144 760 CURVE",
"138.667 762.667 OFFCURVE",
"130.333 766 OFFCURVE",
"119 770 CURVE",
"111 773.333 OFFCURVE",
"102.667 779 OFFCURVE",
"94 787 CURVE SMOOTH",
"65.333 813 OFFCURVE",
"44.667 826 OFFCURVE",
"32 826 CURVE SMOOTH",
"28 826 OFFCURVE",
"20 812.333 OFFCURVE",
"20 807 CURVE",
"20 807 OFFCURVE",
"20.333 805.333 OFFCURVE",
"21 802 CURVE",
"95 735.333 OFFCURVE",
"136 702 OFFCURVE",
"144 702 CURVE SMOOTH",
"152 702 OFFCURVE",
"193 735.333 OFFCURVE",
"267 802 CURVE",
"267.667 805.333 OFFCURVE",
"268 807 OFFCURVE",
"268 807 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
1 24 24 64 25 0 8 0 17 6 4 21 11 4 1 8 70 
SROUND[ ]\011/* SuperRound */
MDAP[1]\011/* MoveDirectAbsPt */
SHZ[1]\011/* ShiftZoneByLastPoint */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
PUSHW[ ]\011/* 2 values pushed */
8 24 
MD[0]\011/* MeasureDistance */
ROUND[00]\011/* Round */
SUB[ ]\011/* Subtract */
PUSHB[ ]\011/* 1 value pushed */
64 
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
SHPIX[ ]\011/* ShiftZoneByPixel */
SRP1[ ]\011/* SetRefPoint1 */
SHZ[1]\011/* ShiftZoneByLastPoint */
PUSHW[ ]\011/* 2 values pushed */
24 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */";
};
width = 288;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = gravecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 702 OFFCURVE",
"-20 703.667 OFFCURVE",
"-20 707 CURVE",
"-88 779.667 OFFCURVE",
"-129.667 816 OFFCURVE",
"-145 816 CURVE SMOOTH",
"-155.667 816 OFFCURVE",
"-176 788 OFFCURVE",
"-176 776 CURVE",
"-173 769 LINE",
"-161.667 765 OFFCURVE",
"-152.333 762 OFFCURVE",
"-145 760 CURVE",
"-129 752.667 OFFCURVE",
"-111.667 740 OFFCURVE",
"-93 722 CURVE SMOOTH",
"-65.667 695.333 OFFCURVE",
"-45.333 682 OFFCURVE",
"-32 682 CURVE SMOOTH",
"-26.667 682 OFFCURVE",
"-20 696.667 OFFCURVE",
"-20 702 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = gravecmb;
unicode = 0300;
},
{
glyphname = acutecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 788 OFFCURVE",
"-39 816 OFFCURVE",
"-51 816 CURVE SMOOTH",
"-65.667 816 OFFCURVE",
"-107 779.667 OFFCURVE",
"-175 707 CURVE",
"-175.667 703.667 OFFCURVE",
"-176 702 OFFCURVE",
"-176 702 CURVE",
"-176 696.667 OFFCURVE",
"-168 682 OFFCURVE",
"-164 682 CURVE SMOOTH",
"-150 682 OFFCURVE",
"-129.333 695.333 OFFCURVE",
"-102 722 CURVE SMOOTH",
"-83.333 740 OFFCURVE",
"-66 752.667 OFFCURVE",
"-50 760 CURVE",
"-38 764.667 OFFCURVE",
"-28.667 767.667 OFFCURVE",
"-22 769 CURVE",
"-20 776 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = acutecmb;
unicode = 0301;
},
{
glyphname = circumflexcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 722 OFFCURVE",
"-20.333 723.667 OFFCURVE",
"-21 727 CURVE",
"-95.667 793.667 OFFCURVE",
"-136.667 827 OFFCURVE",
"-144 827 CURVE SMOOTH",
"-152 827 OFFCURVE",
"-193 793.667 OFFCURVE",
"-267 727 CURVE",
"-267.667 723.667 OFFCURVE",
"-268 722 OFFCURVE",
"-268 722 CURVE",
"-268 716.667 OFFCURVE",
"-260 702 OFFCURVE",
"-256 702 CURVE SMOOTH",
"-243.333 702 OFFCURVE",
"-222.667 715.333 OFFCURVE",
"-194 742 CURVE",
"-170 758 OFFCURVE",
"-153.333 767 OFFCURVE",
"-144 769 CURVE",
"-138.667 766.333 OFFCURVE",
"-130.333 762.667 OFFCURVE",
"-119 758 CURVE",
"-111 755.333 OFFCURVE",
"-102.667 750 OFFCURVE",
"-94 742 CURVE SMOOTH",
"-65.333 715.333 OFFCURVE",
"-44.667 702 OFFCURVE",
"-32 702 CURVE SMOOTH",
"-28 702 OFFCURVE",
"-20 716.667 OFFCURVE",
"-20 722 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflexcmb;
unicode = 0302;
},
{
glyphname = tildecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 783 OFFCURVE",
"-25 788 OFFCURVE",
"-35 788 CURVE SMOOTH",
"-37 788 OFFCURVE",
"-46.167 781.5 OFFCURVE",
"-62.5 768.5 CURVE SMOOTH",
"-78.833 755.5 OFFCURVE",
"-93.667 749 OFFCURVE",
"-107 749 CURVE SMOOTH",
"-119.667 749 OFFCURVE",
"-133.833 755.5 OFFCURVE",
"-149.5 768.5 CURVE SMOOTH",
"-165.167 781.5 OFFCURVE",
"-181.667 788 OFFCURVE",
"-199 788 CURVE SMOOTH",
"-211.667 788 OFFCURVE",
"-230.333 781 OFFCURVE",
"-255 767 CURVE SMOOTH",
"-281.667 751.667 OFFCURVE",
"-295 738.333 OFFCURVE",
"-295 727 CURVE SMOOTH",
"-295 717 OFFCURVE",
"-289.667 712 OFFCURVE",
"-279 712 CURVE",
"-279 712 OFFCURVE",
"-239.667 743 OFFCURVE",
"-213 743 CURVE SMOOTH",
"-201.667 743 OFFCURVE",
"-187.333 737 OFFCURVE",
"-170 725 CURVE SMOOTH",
"-152.667 713 OFFCURVE",
"-134.667 707 OFFCURVE",
"-116 707 CURVE SMOOTH",
"-90.667 707 OFFCURVE",
"-20 750.333 OFFCURVE",
"-20 773 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
18 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
15 6 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = tildecmb;
unicode = 0303;
},
{
glyphname = macroncmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-245.667 725.667 OFFCURVE",
"-241.667 723 OFFCURVE",
"-235 723 CURVE SMOOTH",
"-228.396 723 OFFCURVE",
"-178.295 729 OFFCURVE",
"-145 729 CURVE SMOOTH",
"-129 729 OFFCURVE",
"-112.167 728.667 OFFCURVE",
"-94.5 728 CURVE SMOOTH",
"-76.833 727.333 OFFCURVE",
"-62.333 727 OFFCURVE",
"-51 727 CURVE SMOOTH",
"-38.333 727 OFFCURVE",
"-32 733.667 OFFCURVE",
"-32 747 CURVE SMOOTH",
"-32 761.667 OFFCURVE",
"-36.667 769 OFFCURVE",
"-66 769 CURVE SMOOTH",
"-135.333 769 OFFCURVE",
"-206 764 OFFCURVE",
"-242 760 CURVE",
"-247.333 756 OFFCURVE",
"-248 747.667 OFFCURVE",
"-248 741 CURVE SMOOTH",
"-248 736.333 OFFCURVE",
"-247.667 733 OFFCURVE",
"-247 731 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
8 928 16 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = macroncmb;
unicode = 0304;
},
{
glyphname = brevecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 811 OFFCURVE",
"-25 816 OFFCURVE",
"-35 816 CURVE SMOOTH",
"-45 816 OFFCURVE",
"-50 811 OFFCURVE",
"-50 801 CURVE SMOOTH",
"-50 784.333 OFFCURVE",
"-60.333 771.667 OFFCURVE",
"-81 763 CURVE SMOOTH",
"-96.333 756.333 OFFCURVE",
"-113.667 753 OFFCURVE",
"-133 753 CURVE SMOOTH",
"-184.333 753 OFFCURVE",
"-210 769 OFFCURVE",
"-210 801 CURVE SMOOTH",
"-210 811 OFFCURVE",
"-215 816 OFFCURVE",
"-225 816 CURVE SMOOTH",
"-235 816 OFFCURVE",
"-240 811 OFFCURVE",
"-240 801 CURVE SMOOTH",
"-240 774.333 OFFCURVE",
"-228 752.667 OFFCURVE",
"-204 736 CURVE SMOOTH",
"-182 721.333 OFFCURVE",
"-157.333 714 OFFCURVE",
"-130 714 CURVE SMOOTH",
"-75.333 714 OFFCURVE",
"-20 747.667 OFFCURVE",
"-20 801 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 7 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 11 22 11 38 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 11 69 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
13 3 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = brevecmb;
unicode = 0306;
},
{
glyphname = dotaccentcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 780.333 OFFCURVE",
"-37.333 800 OFFCURVE",
"-60 800 CURVE SMOOTH",
"-82.667 800 OFFCURVE",
"-100 780.333 OFFCURVE",
"-100 759 CURVE SMOOTH",
"-100 736.333 OFFCURVE",
"-82.667 717 OFFCURVE",
"-60 717 CURVE SMOOTH",
"-37.333 717 OFFCURVE",
"-20 736.333 OFFCURVE",
"-20 759 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 6 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 0 22 0 38 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 0 69 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotaccentcmb;
unicode = 0307;
},
{
glyphname = diaeresiscmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-59 770.333 OFFCURVE",
"-76.333 790 OFFCURVE",
"-99 790 CURVE SMOOTH",
"-121.667 790 OFFCURVE",
"-139 770.333 OFFCURVE",
"-139 749 CURVE SMOOTH",
"-139 726.333 OFFCURVE",
"-121.667 707 OFFCURVE",
"-99 707 CURVE SMOOTH",
"-76.333 707 OFFCURVE",
"-59 726.333 OFFCURVE",
"-59 749 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-209 770.333 OFFCURVE",
"-226.333 790 OFFCURVE",
"-249 790 CURVE SMOOTH",
"-271.667 790 OFFCURVE",
"-289 770.333 OFFCURVE",
"-289 749 CURVE SMOOTH",
"-289 726.333 OFFCURVE",
"-271.667 707 OFFCURVE",
"-249 707 CURVE SMOOTH",
"-226.333 707 OFFCURVE",
"-209 726.333 OFFCURVE",
"-209 749 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 6 74 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 6 25 6 41 6 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 12 22 12 38 12 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 12 69 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = diaeresiscmb;
},
{
glyphname = hookabovecmb;
lastChange = "2019-03-01 19:05:15 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 10 74 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 10 25 10 41 10 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 20 22 20 38 20 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 20 69 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
31 15 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = hookabovecmb;
},
{
glyphname = ringcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 803.667 OFFCURVE",
"-46.333 830 OFFCURVE",
"-77 830 CURVE SMOOTH",
"-107.667 830 OFFCURVE",
"-134 803.667 OFFCURVE",
"-134 773 CURVE SMOOTH",
"-134 742.333 OFFCURVE",
"-107.667 716 OFFCURVE",
"-77 716 CURVE SMOOTH",
"-46.333 716 OFFCURVE",
"-20 742.333 OFFCURVE",
"-20 773 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-40 753 OFFCURVE",
"-57 736 OFFCURVE",
"-77 736 CURVE SMOOTH",
"-97 736 OFFCURVE",
"-114 753 OFFCURVE",
"-114 773 CURVE SMOOTH",
"-114 793 OFFCURVE",
"-97 810 OFFCURVE",
"-77 810 CURVE SMOOTH",
"-57 810 OFFCURVE",
"-40 793 OFFCURVE",
"-40 773 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 12 74 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 12 25 12 41 12 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 18 22 18 38 18 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 18 69 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
21 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 15 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ringcmb;
unicode = 030A;
},
{
glyphname = hungarumlautcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 796 OFFCURVE",
"-25 801 OFFCURVE",
"-35 801 CURVE SMOOTH",
"-44.333 801 OFFCURVE",
"-55 789 OFFCURVE",
"-67 765 CURVE SMOOTH",
"-81 736.333 OFFCURVE",
"-90.5 720 OFFCURVE",
"-95.5 716 CURVE SMOOTH",
"-100.5 712 OFFCURVE",
"-103 707.667 OFFCURVE",
"-103 703 CURVE SMOOTH",
"-103 693 OFFCURVE",
"-98 688 OFFCURVE",
"-88 688 CURVE SMOOTH",
"-79.333 688 OFFCURVE",
"-65.333 703.333 OFFCURVE",
"-46 734 CURVE SMOOTH",
"-28.667 762.667 OFFCURVE",
"-20 780 OFFCURVE",
"-20 786 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-99 796 OFFCURVE",
"-104 801 OFFCURVE",
"-114 801 CURVE SMOOTH",
"-120.667 801 OFFCURVE",
"-130.333 788.333 OFFCURVE",
"-143 763 CURVE SMOOTH",
"-151 746.333 OFFCURVE",
"-159 729.667 OFFCURVE",
"-167 713 CURVE",
"-171 710.333 OFFCURVE",
"-173 706.333 OFFCURVE",
"-173 701 CURVE SMOOTH",
"-173 691 OFFCURVE",
"-168 686 OFFCURVE",
"-158 686 CURVE SMOOTH",
"-144.667 686 OFFCURVE",
"-99 770 OFFCURVE",
"-99 786 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
24 16 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = hungarumlautcmb;
unicode = 030B;
},
{
glyphname = caroncmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 812.333 OFFCURVE",
"-28 826 OFFCURVE",
"-32 826 CURVE SMOOTH",
"-44.667 826 OFFCURVE",
"-65.333 813 OFFCURVE",
"-94 787 CURVE",
"-118 771 OFFCURVE",
"-134.667 762 OFFCURVE",
"-144 760 CURVE",
"-149.333 762.667 OFFCURVE",
"-157.667 766 OFFCURVE",
"-169 770 CURVE",
"-177 773.333 OFFCURVE",
"-185.333 779 OFFCURVE",
"-194 787 CURVE SMOOTH",
"-222.667 813 OFFCURVE",
"-243.333 826 OFFCURVE",
"-256 826 CURVE SMOOTH",
"-260 826 OFFCURVE",
"-268 812.333 OFFCURVE",
"-268 807 CURVE",
"-268 807 OFFCURVE",
"-267.667 805.333 OFFCURVE",
"-267 802 CURVE",
"-193 735.333 OFFCURVE",
"-152 702 OFFCURVE",
"-144 702 CURVE SMOOTH",
"-136 702 OFFCURVE",
"-95 735.333 OFFCURVE",
"-21 802 CURVE",
"-20.333 805.333 OFFCURVE",
"-20 807 OFFCURVE",
"-20 807 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = caroncmb;
unicode = 030C;
},
{
glyphname = doublegravecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-59 702 OFFCURVE",
"-59 703.667 OFFCURVE",
"-59 707 CURVE",
"-127 779.667 OFFCURVE",
"-168.667 816 OFFCURVE",
"-184 816 CURVE SMOOTH",
"-194.667 816 OFFCURVE",
"-215 788 OFFCURVE",
"-215 776 CURVE",
"-212 769 LINE",
"-200.667 765 OFFCURVE",
"-191.333 762 OFFCURVE",
"-184 760 CURVE",
"-168 752.667 OFFCURVE",
"-150.667 740 OFFCURVE",
"-132 722 CURVE SMOOTH",
"-104.667 695.333 OFFCURVE",
"-84.333 682 OFFCURVE",
"-71 682 CURVE SMOOTH",
"-65.667 682 OFFCURVE",
"-59 696.667 OFFCURVE",
"-59 702 CURVE"
);
},
{
closed = 1;
nodes = (
"-193 702 OFFCURVE",
"-193 703.667 OFFCURVE",
"-193 707 CURVE",
"-261 779.667 OFFCURVE",
"-302.667 816 OFFCURVE",
"-318 816 CURVE SMOOTH",
"-328.667 816 OFFCURVE",
"-349 788 OFFCURVE",
"-349 776 CURVE",
"-346 769 LINE",
"-334.667 765 OFFCURVE",
"-325.333 762 OFFCURVE",
"-318 760 CURVE",
"-302 752.667 OFFCURVE",
"-284.667 740 OFFCURVE",
"-266 722 CURVE SMOOTH",
"-238.667 695.333 OFFCURVE",
"-218.333 682 OFFCURVE",
"-205 682 CURVE SMOOTH",
"-199.667 682 OFFCURVE",
"-193 696.667 OFFCURVE",
"-193 702 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
13 20 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = doublegravecmb;
},
{
glyphname = invertedbrevecmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-33 782.333 OFFCURVE",
"-88.333 816 OFFCURVE",
"-143 816 CURVE SMOOTH",
"-170.333 816 OFFCURVE",
"-195 808.667 OFFCURVE",
"-217 794 CURVE SMOOTH",
"-241 777.333 OFFCURVE",
"-253 755.667 OFFCURVE",
"-253 729 CURVE SMOOTH",
"-253 719 OFFCURVE",
"-248 714 OFFCURVE",
"-238 714 CURVE SMOOTH",
"-228 714 OFFCURVE",
"-223 719 OFFCURVE",
"-223 729 CURVE SMOOTH",
"-223 761 OFFCURVE",
"-197.333 777 OFFCURVE",
"-146 777 CURVE SMOOTH",
"-126.667 777 OFFCURVE",
"-109.333 773.667 OFFCURVE",
"-94 767 CURVE SMOOTH",
"-73.333 758.333 OFFCURVE",
"-63 745.667 OFFCURVE",
"-63 729 CURVE SMOOTH",
"-63 719 OFFCURVE",
"-58 714 OFFCURVE",
"-48 714 CURVE SMOOTH",
"-38 714 OFFCURVE",
"-33 719 OFFCURVE",
"-33 729 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 14 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 10 22 10 38 10 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 10 69 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
18 8 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = invertedbrevecmb;
},
{
glyphname = horncmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-129.086 690 OFFCURVE",
"-69 718.453 OFFCURVE",
"-69 741 CURVE SMOOTH",
"-69 780.834 OFFCURVE",
"-57.959 804.737 OFFCURVE",
"-64 844 CURVE",
"-64 852.468 OFFCURVE",
"-77.948 876 OFFCURVE",
"-87 876 CURVE SMOOTH",
"-99 876 OFFCURVE",
"-107.667 859.333 OFFCURVE",
"-105 850 CURVE",
"-100.333 827.333 OFFCURVE",
"-99.833 808 OFFCURVE",
"-103.5 792 CURVE SMOOTH",
"-107.167 776 OFFCURVE",
"-109 763.667 OFFCURVE",
"-109 755 CURVE SMOOTH",
"-109 742.45 OFFCURVE",
"-173 726.027 OFFCURVE",
"-173 713 CURVE SMOOTH",
"-173 702.333 OFFCURVE",
"-162.667 690 OFFCURVE",
"-148 690 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
24 3 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 24 22 24 38 24 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 24 69 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = horncmb;
unicode = 031B;
},
{
glyphname = dotbelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-88 -106.667 OFFCURVE",
"-105.333 -87 OFFCURVE",
"-128 -87 CURVE SMOOTH",
"-150.667 -87 OFFCURVE",
"-168 -106.667 OFFCURVE",
"-168 -128 CURVE SMOOTH",
"-168 -150.667 OFFCURVE",
"-150.667 -170 OFFCURVE",
"-128 -170 CURVE SMOOTH",
"-105.333 -170 OFFCURVE",
"-88 -150.667 OFFCURVE",
"-88 -128 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 6 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 0 22 0 38 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 0 69 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotbelowcmb;
unicode = 0323;
},
{
glyphname = diaeresisbelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-76 -122.667 OFFCURVE",
"-93.333 -103 OFFCURVE",
"-116 -103 CURVE SMOOTH",
"-138.667 -103 OFFCURVE",
"-156 -122.667 OFFCURVE",
"-156 -144 CURVE SMOOTH",
"-156 -166.667 OFFCURVE",
"-138.667 -186 OFFCURVE",
"-116 -186 CURVE SMOOTH",
"-93.333 -186 OFFCURVE",
"-76 -166.667 OFFCURVE",
"-76 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-226 -122.667 OFFCURVE",
"-243.333 -103 OFFCURVE",
"-266 -103 CURVE SMOOTH",
"-288.667 -103 OFFCURVE",
"-306 -122.667 OFFCURVE",
"-306 -144 CURVE SMOOTH",
"-306 -166.667 OFFCURVE",
"-288.667 -186 OFFCURVE",
"-266 -186 CURVE SMOOTH",
"-243.333 -186 OFFCURVE",
"-226 -166.667 OFFCURVE",
"-226 -144 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 6 74 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 6 25 6 41 6 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 12 22 12 38 12 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 12 69 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
9 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = diaeresisbelowcmb;
},
{
glyphname = ringbelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-81 -91.333 OFFCURVE",
"-107.333 -65 OFFCURVE",
"-138 -65 CURVE SMOOTH",
"-168.667 -65 OFFCURVE",
"-195 -91.333 OFFCURVE",
"-195 -122 CURVE SMOOTH",
"-195 -152.667 OFFCURVE",
"-168.667 -179 OFFCURVE",
"-138 -179 CURVE SMOOTH",
"-107.333 -179 OFFCURVE",
"-81 -152.667 OFFCURVE",
"-81 -122 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-101 -142 OFFCURVE",
"-118 -159 OFFCURVE",
"-138 -159 CURVE SMOOTH",
"-158 -159 OFFCURVE",
"-175 -142 OFFCURVE",
"-175 -122 CURVE SMOOTH",
"-175 -102 OFFCURVE",
"-158 -85 OFFCURVE",
"-138 -85 CURVE SMOOTH",
"-118 -85 OFFCURVE",
"-101 -102 OFFCURVE",
"-101 -122 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 12 74 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 12 25 12 41 12 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 18 22 18 38 18 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 18 69 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
21 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 15 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ringbelowcmb;
unicode = 0325;
},
{
glyphname = commabelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-81 -60.667 OFFCURVE",
"-107 -37 OFFCURVE",
"-119 -37 CURVE SMOOTH",
"-121 -37 OFFCURVE",
"-125 -38.333 OFFCURVE",
"-131 -41 CURVE",
"-143.667 -115 OFFCURVE",
"-173.333 -173.667 OFFCURVE",
"-220 -217 CURVE",
"-221 -225 LINE",
"-197.667 -234.333 OFFCURVE",
"-181.333 -239 OFFCURVE",
"-172 -239 CURVE SMOOTH",
"-158.667 -239 OFFCURVE",
"-127 -184 OFFCURVE",
"-77 -74 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = commabelowcmb;
},
{
glyphname = cedillacmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 -65.333 OFFCURVE",
"-30.667 -54.667 OFFCURVE",
"-52 -48 CURVE",
"-55.333 -47.333 OFFCURVE",
"-72 -44.333 OFFCURVE",
"-102 -39 CURVE",
"-90.667 -23 OFFCURVE",
"-82.333 -10.667 OFFCURVE",
"-77 -2 CURVE",
"-106 -3 LINE",
"-106.667 -3.667 OFFCURVE",
"-114.667 -11 OFFCURVE",
"-130 -25 CURVE SMOOTH",
"-140.667 -35 OFFCURVE",
"-146 -43.333 OFFCURVE",
"-146 -50 CURVE SMOOTH",
"-146 -54.667 OFFCURVE",
"-142 -58 OFFCURVE",
"-134 -60 CURVE",
"-131.333 -63.333 OFFCURVE",
"-118.5 -66.833 OFFCURVE",
"-95.5 -70.5 CURVE SMOOTH",
"-72.5 -74.167 OFFCURVE",
"-59.333 -78.667 OFFCURVE",
"-56 -84 CURVE",
"-57.333 -93.333 OFFCURVE",
"-67.333 -103 OFFCURVE",
"-86 -113 CURVE SMOOTH",
"-95.333 -118.333 OFFCURVE",
"-109 -124.333 OFFCURVE",
"-127 -131 CURVE",
"-116 -159 LINE",
"-86 -147.667 OFFCURVE",
"-65.667 -138.667 OFFCURVE",
"-55 -132 CURVE SMOOTH",
"-31.667 -117.333 OFFCURVE",
"-20 -100 OFFCURVE",
"-20 -80 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
21 4 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = cedillacmb;
unicode = 0327;
},
{
glyphname = ogonekcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 -125 OFFCURVE",
"-25 -120 OFFCURVE",
"-35 -120 CURVE SMOOTH",
"-38.333 -120 OFFCURVE",
"-43.833 -123.167 OFFCURVE",
"-51.5 -129.5 CURVE SMOOTH",
"-59.167 -135.833 OFFCURVE",
"-67 -139 OFFCURVE",
"-75 -139 CURVE SMOOTH",
"-100.333 -139 OFFCURVE",
"-122 -107.667 OFFCURVE",
"-122 -81 CURVE SMOOTH",
"-122 -65.667 OFFCURVE",
"-115 -46.833 OFFCURVE",
"-101 -24.5 CURVE SMOOTH",
"-87 -2.167 OFFCURVE",
"-80 11.333 OFFCURVE",
"-80 16 CURVE SMOOTH",
"-80 24.667 OFFCURVE",
"-84.333 29 OFFCURVE",
"-93 29 CURVE SMOOTH",
"-98.333 29 OFFCURVE",
"-103.667 26.333 OFFCURVE",
"-109 21 CURVE SMOOTH",
"-147 -15.667 OFFCURVE",
"-166 -51.333 OFFCURVE",
"-166 -86 CURVE SMOOTH",
"-166 -131.333 OFFCURVE",
"-130.333 -169 OFFCURVE",
"-85 -169 CURVE SMOOTH",
"-73 -169 OFFCURVE",
"-60 -166.333 OFFCURVE",
"-46 -161 CURVE",
"-28.667 -153.667 OFFCURVE",
"-20 -145 OFFCURVE",
"-20 -135 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
16 7 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 16 22 16 38 16 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 16 69 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
19 4 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = ogonekcmb;
unicode = 0328;
},
{
glyphname = circumflexbelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-42 -142 OFFCURVE",
"-42.333 -140.333 OFFCURVE",
"-43 -137 CURVE",
"-117.667 -70.333 OFFCURVE",
"-158.667 -37 OFFCURVE",
"-166 -37 CURVE SMOOTH",
"-174 -37 OFFCURVE",
"-215 -70.333 OFFCURVE",
"-289 -137 CURVE",
"-289.667 -140.333 OFFCURVE",
"-290 -142 OFFCURVE",
"-290 -142 CURVE",
"-290 -147.333 OFFCURVE",
"-282 -162 OFFCURVE",
"-278 -162 CURVE SMOOTH",
"-265.333 -162 OFFCURVE",
"-244.667 -148.667 OFFCURVE",
"-216 -122 CURVE",
"-192 -106 OFFCURVE",
"-175.333 -97 OFFCURVE",
"-166 -95 CURVE",
"-160.667 -97.667 OFFCURVE",
"-152.333 -101.333 OFFCURVE",
"-141 -106 CURVE",
"-133 -108.667 OFFCURVE",
"-124.667 -114 OFFCURVE",
"-116 -122 CURVE SMOOTH",
"-87.333 -148.667 OFFCURVE",
"-66.667 -162 OFFCURVE",
"-54 -162 CURVE SMOOTH",
"-50 -162 OFFCURVE",
"-42 -147.333 OFFCURVE",
"-42 -142 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflexbelowcmb;
unicode = 032D;
},
{
glyphname = brevebelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 -58 OFFCURVE",
"-25 -53 OFFCURVE",
"-35 -53 CURVE SMOOTH",
"-45 -53 OFFCURVE",
"-50 -58 OFFCURVE",
"-50 -68 CURVE SMOOTH",
"-50 -84.667 OFFCURVE",
"-60.333 -97.333 OFFCURVE",
"-81 -106 CURVE SMOOTH",
"-96.333 -112.667 OFFCURVE",
"-113.667 -116 OFFCURVE",
"-133 -116 CURVE SMOOTH",
"-184.333 -116 OFFCURVE",
"-210 -100 OFFCURVE",
"-210 -68 CURVE SMOOTH",
"-210 -58 OFFCURVE",
"-215 -53 OFFCURVE",
"-225 -53 CURVE SMOOTH",
"-235 -53 OFFCURVE",
"-240 -58 OFFCURVE",
"-240 -68 CURVE SMOOTH",
"-240 -94.667 OFFCURVE",
"-228 -116.333 OFFCURVE",
"-204 -133 CURVE SMOOTH",
"-182 -147.667 OFFCURVE",
"-157.333 -155 OFFCURVE",
"-130 -155 CURVE SMOOTH",
"-75.333 -155 OFFCURVE",
"-20 -121.333 OFFCURVE",
"-20 -68 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 7 13 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 11 22 11 38 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 11 69 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
13 3 13 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = brevebelowcmb;
unicode = 032E;
},
{
glyphname = tildebelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-20 -48 OFFCURVE",
"-25 -43 OFFCURVE",
"-35 -43 CURVE SMOOTH",
"-37 -43 OFFCURVE",
"-46.167 -49.5 OFFCURVE",
"-62.5 -62.5 CURVE SMOOTH",
"-78.833 -75.5 OFFCURVE",
"-93.667 -82 OFFCURVE",
"-107 -82 CURVE SMOOTH",
"-119.667 -82 OFFCURVE",
"-133.833 -75.5 OFFCURVE",
"-149.5 -62.5 CURVE SMOOTH",
"-165.167 -49.5 OFFCURVE",
"-181.667 -43 OFFCURVE",
"-199 -43 CURVE SMOOTH",
"-211.667 -43 OFFCURVE",
"-230.333 -50 OFFCURVE",
"-255 -64 CURVE SMOOTH",
"-281.667 -79.333 OFFCURVE",
"-295 -92.667 OFFCURVE",
"-295 -104 CURVE SMOOTH",
"-295 -114 OFFCURVE",
"-289.667 -119 OFFCURVE",
"-279 -119 CURVE",
"-279 -119 OFFCURVE",
"-239.667 -88 OFFCURVE",
"-213 -88 CURVE SMOOTH",
"-201.667 -88 OFFCURVE",
"-187.333 -94 OFFCURVE",
"-170 -106 CURVE SMOOTH",
"-152.667 -118 OFFCURVE",
"-134.667 -124 OFFCURVE",
"-116 -124 CURVE SMOOTH",
"-90.667 -124 OFFCURVE",
"-20 -80.667 OFFCURVE",
"-20 -58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
18 3 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
15 6 13 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = tildebelowcmb;
unicode = 0330;
},
{
glyphname = macronbelowcmb;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-245.667 -105.333 OFFCURVE",
"-241.667 -108 OFFCURVE",
"-235 -108 CURVE SMOOTH",
"-228.396 -108 OFFCURVE",
"-178.295 -102 OFFCURVE",
"-145 -102 CURVE SMOOTH",
"-129 -102 OFFCURVE",
"-112.167 -102.333 OFFCURVE",
"-94.5 -103 CURVE SMOOTH",
"-76.833 -103.667 OFFCURVE",
"-62.333 -104 OFFCURVE",
"-51 -104 CURVE SMOOTH",
"-38.333 -104 OFFCURVE",
"-32 -97.333 OFFCURVE",
"-32 -84 CURVE SMOOTH",
"-32 -69.333 OFFCURVE",
"-36.667 -62 OFFCURVE",
"-66 -62 CURVE SMOOTH",
"-135.333 -62 OFFCURVE",
"-206 -67 OFFCURVE",
"-242 -71 CURVE",
"-247.333 -75 OFFCURVE",
"-248 -83.333 OFFCURVE",
"-248 -90 CURVE SMOOTH",
"-248 -94.667 OFFCURVE",
"-247.667 -98 OFFCURVE",
"-247 -100 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
8 928 16 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = macronbelowcmb;
unicode = 0331;
},
{
glyphname = clickdental;
layers = (
{
components = (
{
name = bar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 114;
}
);
note = clickdental;
unicode = 01C0;
},
{
glyphname = clicklateral;
layers = (
{
components = (
{
name = bar;
},
{
name = bar;
transform = "{1, 0, 0, 1, 114, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 228;
}
);
note = clicklateral;
unicode = 01C1;
},
{
glyphname = centigrade;
layers = (
{
components = (
{
name = degree;
},
{
name = C;
transform = "{1, 0, 0, 1, 297, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 775;
}
);
note = centigrade;
unicode = 2103;
},
{
glyphname = fahrenheit;
layers = (
{
components = (
{
name = degree;
},
{
name = F;
transform = "{1, 0, 0, 1, 297, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 707;
}
);
note = fahrenheit;
unicode = 2109;
},
{
glyphname = kelvin;
layers = (
{
components = (
{
name = K;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = kelvin;
unicode = 212A;
},
{
glyphname = angstrom;
layers = (
{
components = (
{
name = Aring;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 518;
}
);
note = angstrom;
unicode = 212B;
},
{
glyphname = Oneroman;
layers = (
{
components = (
{
name = I;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Oneroman;
unicode = 2160;
},
{
glyphname = Tworoman;
layers = (
{
components = (
{
name = I;
},
{
name = I;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 344;
}
);
note = Tworoman;
unicode = 2161;
},
{
glyphname = Threeroman;
layers = (
{
components = (
{
name = I;
},
{
name = I;
transform = "{1, 0, 0, 1, 172, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 344, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 516;
}
);
note = Threeroman;
unicode = 2162;
},
{
glyphname = Fourroman;
layers = (
{
components = (
{
name = I;
},
{
name = V;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 646;
}
);
note = Fourroman;
unicode = 2163;
},
{
glyphname = Fiveroman;
layers = (
{
components = (
{
name = V;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Fiveroman;
unicode = 2164;
},
{
glyphname = Sixroman;
layers = (
{
components = (
{
name = V;
},
{
name = I;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 646;
}
);
note = Sixroman;
unicode = 2165;
},
{
glyphname = Sevenroman;
layers = (
{
components = (
{
name = V;
},
{
name = I;
transform = "{1, 0, 0, 1, 474, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 646, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 818;
}
);
note = Sevenroman;
unicode = 2166;
},
{
glyphname = Eightroman;
layers = (
{
components = (
{
name = V;
},
{
name = I;
transform = "{1, 0, 0, 1, 474, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 646, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 818, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 990;
}
);
note = Eightroman;
unicode = 2167;
},
{
glyphname = Nineroman;
layers = (
{
components = (
{
name = I;
},
{
name = X;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 731;
}
);
note = Nineroman;
unicode = 2168;
},
{
glyphname = Tenroman;
layers = (
{
components = (
{
name = X;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = Tenroman;
unicode = 2169;
},
{
glyphname = Elevenroman;
layers = (
{
components = (
{
name = X;
},
{
name = I;
transform = "{1, 0, 0, 1, 559, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 731;
}
);
note = Elevenroman;
unicode = 216A;
},
{
glyphname = Twelveroman;
layers = (
{
components = (
{
name = X;
},
{
name = I;
transform = "{1, 0, 0, 1, 559, 0}";
},
{
name = I;
transform = "{1, 0, 0, 1, 731, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 903;
}
);
note = Twelveroman;
unicode = 216B;
},
{
glyphname = uni216C;
layers = (
{
components = (
{
name = L;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = uni216C;
unicode = 216C;
},
{
glyphname = uni216D;
layers = (
{
components = (
{
name = C;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = uni216D;
unicode = 216D;
},
{
glyphname = uni216E;
layers = (
{
components = (
{
name = D;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = uni216E;
unicode = 216E;
},
{
glyphname = uni216F;
layers = (
{
components = (
{
name = M;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = uni216F;
unicode = 216F;
},
{
glyphname = oneroman;
layers = (
{
components = (
{
name = i;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = oneroman;
unicode = 2170;
},
{
glyphname = tworoman;
layers = (
{
components = (
{
name = i;
},
{
name = i;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 282;
}
);
note = tworoman;
unicode = 2171;
},
{
glyphname = threeroman;
layers = (
{
components = (
{
name = i;
},
{
name = i;
transform = "{1, 0, 0, 1, 141, 0}";
},
{
name = i;
transform = "{1, 0, 0, 1, 282, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 423;
}
);
note = threeroman;
unicode = 2172;
},
{
glyphname = fourroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = i;
},
{
alignment = -1;
name = v;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 494;
}
);
note = fourroman;
unicode = 2173;
},
{
glyphname = fiveroman;
layers = (
{
components = (
{
name = v;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 353;
}
);
note = fiveroman;
unicode = 2174;
},
{
glyphname = sixroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = v;
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 353, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 494;
}
);
note = sixroman;
unicode = 2175;
},
{
glyphname = sevenroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = v;
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 353, 0}";
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 494, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 635;
}
);
note = sevenroman;
unicode = 2176;
},
{
glyphname = eightroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = v;
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 353, 0}";
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 494, 0}";
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 635, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 776;
}
);
note = eightroman;
unicode = 2177;
},
{
glyphname = nineroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = i;
},
{
alignment = -1;
name = x;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 537;
}
);
note = nineroman;
unicode = 2178;
},
{
glyphname = tenroman;
layers = (
{
components = (
{
name = x;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = tenroman;
unicode = 2179;
},
{
glyphname = elevenroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = x;
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 537;
}
);
note = elevenroman;
unicode = 217A;
},
{
glyphname = twelveroman;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = x;
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 396, 0}";
},
{
alignment = -1;
name = i;
transform = "{1, 0, 0, 1, 537, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 678;
}
);
note = twelveroman;
unicode = 217B;
},
{
glyphname = uni217C;
layers = (
{
components = (
{
name = l;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = uni217C;
unicode = 217C;
},
{
glyphname = uni217D;
layers = (
{
components = (
{
name = c;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = uni217D;
unicode = 217D;
},
{
glyphname = uni217E;
layers = (
{
components = (
{
name = d;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = uni217E;
unicode = 217E;
},
{
glyphname = thousandroman;
layers = (
{
components = (
{
name = m;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
note = thousandroman;
unicode = 217F;
},
{
glyphname = Ibreve;
layers = (
{
components = (
{
name = I;
},
{
name = breve;
transform = "{1, 0, 0, 1, -47, -3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Ibreve;
unicode = 012C;
},
{
glyphname = ibreve;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = breve;
transform = "{1, 0, 0, 1, -76, -258}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = ibreve;
unicode = 012D;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 22, -6}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = IJ;
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 591;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = ij;
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 141, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 319;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = Jcircumflex;
layers = (
{
components = (
{
name = J;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 100, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 419;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = napostrophe;
layers = (
{
components = (
{
name = quoteright;
},
{
name = n;
transform = "{1, 0, 0, 1, 178, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 545;
}
);
note = napostrophe;
unicode = 0149;
},
{
glyphname = clickretroflex;
layers = (
{
components = (
{
name = exclam;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 209;
}
);
note = clickretroflex;
unicode = 01C3;
},
{
glyphname = DZcaron;
layers = (
{
components = (
{
name = D;
},
{
name = Z;
transform = "{1, 0, 0, 1, 499, 0}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 638, 64}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 1065;
}
);
note = DZcaron;
unicode = 01C4;
},
{
glyphname = Dzcaron;
layers = (
{
components = (
{
name = D;
},
{
name = z;
transform = "{1, 0, 0, 1, 499, 0}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 528, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 846;
}
);
note = Dzcaron;
unicode = 01C5;
},
{
glyphname = dzcaron;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = d;
},
{
alignment = -1;
name = z;
transform = "{1, 0, 0, 1, 367, 0}";
},
{
alignment = -1;
name = caron;
transform = "{1, 0, 0, 1, 396, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 714;
}
);
note = dzcaron;
unicode = 01C6;
},
{
glyphname = LJ;
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 379, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 798;
}
);
note = LJ;
unicode = 01C7;
},
{
glyphname = Lj;
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 379, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 557;
}
);
note = Lj;
unicode = 01C8;
},
{
glyphname = lj;
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 124, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 302;
}
);
note = lj;
unicode = 01C9;
},
{
glyphname = NJ;
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 875;
}
);
note = NJ;
unicode = 01CA;
},
{
glyphname = Nj;
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 456, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 634;
}
);
note = Nj;
unicode = 01CB;
},
{
glyphname = nj;
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 545;
}
);
note = nj;
unicode = 01CC;
},
{
glyphname = Udieresismacron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, 23}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 115, 129}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udieresismacron;
unicode = 01D5;
},
{
glyphname = udieresismacron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -242}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 53, -136}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udieresismacron;
unicode = 01D6;
},
{
glyphname = Udieresisacute;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, 23}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 129, 171}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udieresisacute;
unicode = 01D7;
},
{
glyphname = udieresisacute;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -242}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 67, -94}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udieresisacute;
unicode = 01D8;
},
{
glyphname = Udieresiscaron;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, 23}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 83, 151}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udieresiscaron;
unicode = 01D9;
},
{
glyphname = udieresiscaron;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -242}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 21, -114}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udieresiscaron;
unicode = 01DA;
},
{
glyphname = Udieresisgrave;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, 23}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 129, 171}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udieresisgrave;
unicode = 01DB;
},
{
glyphname = udieresisgrave;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -242}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 67, -94}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udieresisgrave;
unicode = 01DC;
},
{
glyphname = Adieresismacron;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 119, 9}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 142, 115}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Adieresismacron;
unicode = 01DE;
},
{
glyphname = adieresismacron;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 45, -241}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 68, -135}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = adieresismacron;
unicode = 01DF;
},
{
glyphname = Adotmacron;
layers = (
{
components = (
{
name = A;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 194, 0}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 142, 115}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Adotmacron;
unicode = 01E0;
},
{
glyphname = adotmacron;
layers = (
{
components = (
{
name = a;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 120, -251}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 68, -135}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = adotmacron;
unicode = 01E1;
},
{
glyphname = AEmacron;
layers = (
{
components = (
{
name = AE;
},
{
name = macron;
transform = "{1, 0, 0, 1, 316, 13}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 856;
}
);
note = AEmacron;
unicode = 01E2;
},
{
glyphname = aemacron;
layers = (
{
components = (
{
name = ae;
},
{
name = macron;
transform = "{1, 0, 0, 1, 185, -252}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 594;
}
);
note = aemacron;
unicode = 01E3;
},
{
glyphname = Gcaron;
layers = (
{
components = (
{
name = G;
},
{
name = caron;
transform = "{1, 0, 0, 1, 97, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gcaron;
unicode = 01E6;
},
{
glyphname = gcaron;
layers = (
{
components = (
{
name = g;
},
{
name = caron;
transform = "{1, 0, 0, 1, 35, -219}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gcaron;
unicode = 01E7;
},
{
glyphname = Kcaron;
layers = (
{
components = (
{
name = K;
},
{
name = caron;
transform = "{1, 0, 0, 1, 130, 25}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = Kcaron;
unicode = 01E8;
},
{
glyphname = kcaron;
layers = (
{
components = (
{
name = k;
},
{
name = caron;
transform = "{1, 0, 0, 1, 56, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kcaron;
unicode = 01E9;
},
{
glyphname = Oogonek;
layers = (
{
components = (
{
name = O;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 187, -56}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Oogonek;
unicode = 01EA;
},
{
glyphname = oogonek;
layers = (
{
components = (
{
name = o;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 90, -58}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oogonek;
unicode = 01EB;
},
{
glyphname = Oogonekmacron;
layers = (
{
components = (
{
name = O;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 187, -56}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Oogonekmacron;
unicode = 01EC;
},
{
glyphname = oogonekmacron;
layers = (
{
components = (
{
name = o;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 90, -58}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -244}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oogonekmacron;
unicode = 01ED;
},
{
glyphname = DZ;
layers = (
{
components = (
{
name = D;
},
{
name = Z;
transform = "{1, 0, 0, 1, 499, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 1065;
}
);
note = DZ;
unicode = 01F1;
},
{
glyphname = Dz;
layers = (
{
components = (
{
name = D;
},
{
name = z;
transform = "{1, 0, 0, 1, 499, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 846;
}
);
note = Dz;
unicode = 01F2;
},
{
glyphname = dz;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = d;
},
{
alignment = -1;
name = z;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 714;
}
);
note = dz;
unicode = 01F3;
},
{
glyphname = Gacute;
layers = (
{
components = (
{
name = G;
},
{
name = acute;
transform = "{1, 0, 0, 1, 143, 50}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gacute;
unicode = 01F4;
},
{
glyphname = gacute;
layers = (
{
components = (
{
name = g;
},
{
name = acute;
transform = "{1, 0, 0, 1, 81, -199}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gacute;
unicode = 01F5;
},
{
glyphname = Ngrave;
layers = (
{
components = (
{
name = N;
},
{
name = grave;
transform = "{1, 0, 0, 1, 150, 40}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ngrave;
unicode = 01F8;
},
{
glyphname = ngrave;
layers = (
{
components = (
{
name = n;
},
{
name = grave;
transform = "{1, 0, 0, 1, 85, -205}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ngrave;
unicode = 01F9;
},
{
glyphname = Aringacute;
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 177, 0}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 156, 188}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Aringacute;
unicode = 01FA;
},
{
glyphname = aringacute;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 103, -250}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 82, -62}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aringacute;
unicode = 01FB;
},
{
glyphname = AEacute;
layers = (
{
components = (
{
name = AE;
},
{
name = acute;
transform = "{1, 0, 0, 1, 330, 55}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 856;
}
);
note = AEacute;
unicode = 01FC;
},
{
glyphname = aeacute;
layers = (
{
components = (
{
name = ae;
},
{
name = acute;
transform = "{1, 0, 0, 1, 199, -210}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 594;
}
);
note = aeacute;
unicode = 01FD;
},
{
glyphname = Oslashacute;
layers = (
{
components = (
{
name = Oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 178, 118}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 552;
}
);
note = Oslashacute;
unicode = 01FE;
},
{
glyphname = oslashacute;
layers = (
{
components = (
{
name = oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 80, -162}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = oslashacute;
unicode = 01FF;
},
{
glyphname = Adblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = A;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 458, 34}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Adblgrave;
unicode = 0200;
},
{
glyphname = adblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = a;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 384, -216}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = adblgrave;
unicode = 0201;
},
{
glyphname = Ainvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = A;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 397, 2}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Ainvertedbreve;
unicode = 0202;
},
{
glyphname = ainvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = a;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 323, -248}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = ainvertedbreve;
unicode = 0203;
},
{
glyphname = Edblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = E;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 446, 47}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Edblgrave;
unicode = 0204;
},
{
glyphname = edblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = e;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 375, -210}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = edblgrave;
unicode = 0205;
},
{
glyphname = Einvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = E;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 385, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Einvertedbreve;
unicode = 0206;
},
{
glyphname = einvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = e;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 314, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = einvertedbreve;
unicode = 0207;
},
{
glyphname = Idblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = I;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 286, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Idblgrave;
unicode = 0208;
},
{
glyphname = idblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = dotlessi;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 257, -226}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = idblgrave;
unicode = 0209;
},
{
glyphname = Iinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = I;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 225, -3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Iinvertedbreve;
unicode = 020A;
},
{
glyphname = iinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = dotlessi;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 196, -258}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = iinvertedbreve;
unicode = 020B;
},
{
glyphname = Odblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = O;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 484, 42}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Odblgrave;
unicode = 020C;
},
{
glyphname = odblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = o;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 387, -202}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = odblgrave;
unicode = 020D;
},
{
glyphname = Oinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = O;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 423, 10}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Oinvertedbreve;
unicode = 020E;
},
{
glyphname = oinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = o;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 326, -234}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oinvertedbreve;
unicode = 020F;
},
{
glyphname = Rdblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = R;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 475, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rdblgrave;
unicode = 0210;
},
{
glyphname = rdblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = r;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 340, -208}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rdblgrave;
unicode = 0211;
},
{
glyphname = Rinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = R;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 414, 17}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rinvertedbreve;
unicode = 0212;
},
{
glyphname = rinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = r;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 279, -240}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rinvertedbreve;
unicode = 0213;
},
{
glyphname = Udblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = U;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 431, 48}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udblgrave;
unicode = 0214;
},
{
glyphname = udblgrave;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = u;
},
{
alignment = -1;
name = doublegravecmb;
transform = "{1, 0, 0, 1, 369, -217}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udblgrave;
unicode = 0215;
},
{
glyphname = Uinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = U;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 370, 16}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Uinvertedbreve;
unicode = 0216;
},
{
glyphname = uinvertedbreve;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = u;
},
{
alignment = -1;
name = invertedbrevecmb;
transform = "{1, 0, 0, 1, 308, -249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = uinvertedbreve;
unicode = 0217;
},
{
glyphname = Scommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = S;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 373, -27}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Scommaaccent;
unicode = 0218;
},
{
glyphname = scommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = s;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 327, -21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = scommaaccent;
unicode = 0219;
},
{
glyphname = Tcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = T;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 380, -19}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tcommaaccent;
unicode = 0162;
},
{
glyphname = tcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = t;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 285, -16}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tcommaaccent;
unicode = 0163;
},
{
glyphname = Hcaron;
layers = (
{
components = (
{
name = H;
},
{
name = caron;
transform = "{1, 0, 0, 1, 130, 32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hcaron;
unicode = 021E;
},
{
glyphname = hcaron;
layers = (
{
components = (
{
name = h;
},
{
name = caron;
transform = "{1, 0, 0, 1, 11, 20}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hcaron;
unicode = 021F;
},
{
glyphname = Adotaccent;
layers = (
{
components = (
{
name = A;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 194, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Adotaccent;
unicode = 0226;
},
{
glyphname = adotaccent;
layers = (
{
components = (
{
name = a;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 120, -251}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = adotaccent;
unicode = 0227;
},
{
glyphname = Ecedilla;
layers = (
{
components = (
{
name = E;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 159, -18}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecedilla;
unicode = 0228;
},
{
glyphname = ecedilla;
layers = (
{
components = (
{
name = e;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 88, -9}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecedilla;
unicode = 0229;
},
{
glyphname = Odieresismacron;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 145, 17}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 123}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Odieresismacron;
unicode = 022A;
},
{
glyphname = odieresismacron;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 48, -227}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -121}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = odieresismacron;
unicode = 022B;
},
{
glyphname = Otildemacron;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 123, 17}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 121}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Otildemacron;
unicode = 022C;
},
{
glyphname = otildemacron;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 26, -227}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -123}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = otildemacron;
unicode = 022D;
},
{
glyphname = Odotaccent;
layers = (
{
components = (
{
name = O;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 220, 7}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Odotaccent;
unicode = 022E;
},
{
glyphname = odotaccent;
layers = (
{
components = (
{
name = o;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = odotaccent;
unicode = 022F;
},
{
glyphname = Odotaccentmacron;
layers = (
{
components = (
{
name = O;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 220, 7}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 123}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Odotaccentmacron;
unicode = 0230;
},
{
glyphname = odotaccentmacron;
layers = (
{
components = (
{
name = o;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -237}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -121}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = odotaccentmacron;
unicode = 0231;
},
{
glyphname = Ymacron;
layers = (
{
components = (
{
name = Y;
},
{
name = macron;
transform = "{1, 0, 0, 1, 131, -2}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = Ymacron;
unicode = 0232;
},
{
glyphname = ymacron;
layers = (
{
components = (
{
name = y;
},
{
name = macron;
transform = "{1, 0, 0, 1, 66, -256}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = ymacron;
unicode = 0233;
},
{
glyphname = commaturnedmod;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"140.667 375 OFFCURVE",
"151.667 376.833 OFFCURVE",
"159 380.5 CURVE SMOOTH",
"166.333 384.167 OFFCURVE",
"170.667 388.333 OFFCURVE",
"172 393 CURVE SMOOTH",
"176.667 409 OFFCURVE",
"168 417 OFFCURVE",
"146 417 CURVE",
"129.333 417.667 OFFCURVE",
"114.667 420.333 OFFCURVE",
"102 425 CURVE SMOOTH",
"79.333 433 OFFCURVE",
"58 449.333 OFFCURVE",
"58 484 CURVE SMOOTH",
"58 552.522 OFFCURVE",
"106.478 592.118 OFFCURVE",
"151 643 CURVE",
"156.333 650.333 OFFCURVE",
"159 657.5 OFFCURVE",
"159 664.5 CURVE SMOOTH",
"159 671.5 OFFCURVE",
"153.333 675 OFFCURVE",
"142 675 CURVE SMOOTH",
"89.682 675 OFFCURVE",
"18 560.08 OFFCURVE",
"18 484 CURVE SMOOTH",
"18 426.162 OFFCURVE",
"66.773 375 OFFCURVE",
"126 375 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 932 5 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 18 22 18 38 18 54 18 70 18 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 18 101 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
23 928 0 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 178;
}
);
note = commaturnedmod;
unicode = 02BB;
},
{
glyphname = afii57929;
layers = (
{
components = (
{
name = quoteright;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 178;
}
);
note = afii57929;
unicode = 02BC;
},
{
glyphname = uni02EE;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 187;
}
);
note = uni02EE;
unicode = 02EE;
},
{
glyphname = Aringbelow;
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 177, -904}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Aringbelow;
unicode = 1E00;
},
{
glyphname = aringbelow;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 103, -912}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aringbelow;
unicode = 1E01;
},
{
glyphname = Bdotaccent;
layers = (
{
components = (
{
name = B;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 187, 11}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 505;
}
);
note = Bdotaccent;
unicode = 1E02;
},
{
glyphname = bdotaccent;
layers = (
{
components = (
{
name = b;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 111, -9}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 342;
}
);
note = bdotaccent;
unicode = 1E03;
},
{
glyphname = Bdotbelow;
layers = (
{
components = (
{
name = B;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 187, -854}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 505;
}
);
note = Bdotbelow;
unicode = 1E04;
},
{
glyphname = bdotbelow;
layers = (
{
components = (
{
name = b;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 111, -873}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 342;
}
);
note = bdotbelow;
unicode = 1E05;
},
{
glyphname = Blinebelow;
layers = (
{
components = (
{
name = B;
},
{
name = macron;
transform = "{1, 0, 0, 1, 135, -816}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 505;
}
);
note = Blinebelow;
unicode = 1E06;
},
{
glyphname = blinebelow;
layers = (
{
components = (
{
name = b;
},
{
name = macron;
transform = "{1, 0, 0, 1, 59, -835}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 342;
}
);
note = blinebelow;
unicode = 1E07;
},
{
glyphname = Ccedillaacute;
layers = (
{
components = (
{
name = Ccedilla;
},
{
name = acute;
transform = "{1, 0, 0, 1, 146, 52}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 488;
}
);
note = Ccedillaacute;
unicode = 1E08;
},
{
glyphname = ccedillaacute;
layers = (
{
components = (
{
name = ccedilla;
},
{
name = acute;
transform = "{1, 0, 0, 1, 79, -195}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 354;
}
);
note = ccedillaacute;
unicode = 1E09;
},
{
glyphname = Ddotaccent;
layers = (
{
components = (
{
name = D;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 189, 19}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Ddotaccent;
unicode = 1E0A;
},
{
glyphname = ddotaccent;
layers = (
{
components = (
{
name = d;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, 5}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ddotaccent;
unicode = 1E0B;
},
{
glyphname = Ddotbelow;
layers = (
{
components = (
{
name = D;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 189, -867}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Ddotbelow;
unicode = 1E0C;
},
{
glyphname = ddotbelow;
layers = (
{
components = (
{
name = d;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -867}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ddotbelow;
unicode = 1E0D;
},
{
glyphname = Dlinebelow;
layers = (
{
components = (
{
name = D;
},
{
name = macron;
transform = "{1, 0, 0, 1, 137, -829}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Dlinebelow;
unicode = 1E0E;
},
{
glyphname = dlinebelow;
layers = (
{
components = (
{
name = d;
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -829}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = dlinebelow;
unicode = 1E0F;
},
{
glyphname = Dcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = D;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 398, -30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Dcommaaccent;
},
{
glyphname = dcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = d;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 332, -30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = dcommaaccent;
},
{
glyphname = Dcircumflexbelow;
layers = (
{
components = (
{
name = D;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 105, -894}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Dcircumflexbelow;
unicode = 1E12;
},
{
glyphname = dcircumflexbelow;
layers = (
{
components = (
{
name = d;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 39, -894}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = dcircumflexbelow;
unicode = 1E13;
},
{
glyphname = Emacrongrave;
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 130, 5}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 144, 125}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Emacrongrave;
unicode = 1E14;
},
{
glyphname = emacrongrave;
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 59, -252}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 73, -132}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = emacrongrave;
unicode = 1E15;
},
{
glyphname = Emacronacute;
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 130, 5}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 144, 125}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Emacronacute;
unicode = 1E16;
},
{
glyphname = emacronacute;
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 59, -252}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 73, -132}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = emacronacute;
unicode = 1E17;
},
{
glyphname = Ecircumflexbelow;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 98, -887}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecircumflexbelow;
unicode = 1E18;
},
{
glyphname = ecircumflexbelow;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 27, -878}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecircumflexbelow;
unicode = 1E19;
},
{
glyphname = Etildebelow;
layers = (
{
components = (
{
name = E;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 85, -848}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Etildebelow;
unicode = 1E1A;
},
{
glyphname = etildebelow;
layers = (
{
components = (
{
name = e;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 14, -839}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = etildebelow;
unicode = 1E1B;
},
{
glyphname = Ecedillabreve;
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 112, 15}";
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 159, -18}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecedillabreve;
unicode = 1E1C;
},
{
glyphname = ecedillabreve;
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 41, -242}";
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 88, -9}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecedillabreve;
unicode = 1E1D;
},
{
glyphname = Fdotaccent;
layers = (
{
components = (
{
name = F;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 154, 11}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 410;
}
);
note = Fdotaccent;
unicode = 1E1E;
},
{
glyphname = fdotaccent;
layers = (
{
components = (
{
name = f;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 130, 12}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 290;
}
);
note = fdotaccent;
unicode = 1E1F;
},
{
glyphname = Gmacron;
layers = (
{
components = (
{
name = G;
},
{
name = macron;
transform = "{1, 0, 0, 1, 129, 8}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gmacron;
unicode = 1E20;
},
{
glyphname = gmacron;
layers = (
{
components = (
{
name = g;
},
{
name = macron;
transform = "{1, 0, 0, 1, 67, -241}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gmacron;
unicode = 1E21;
},
{
glyphname = Hdotaccent;
layers = (
{
components = (
{
name = H;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 214, 17}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hdotaccent;
unicode = 1E22;
},
{
glyphname = hdotaccent;
layers = (
{
components = (
{
name = h;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 95, 5}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hdotaccent;
unicode = 1E23;
},
{
glyphname = Hdotbelow;
layers = (
{
components = (
{
name = H;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 214, -860}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hdotbelow;
unicode = 1E24;
},
{
glyphname = hdotbelow;
layers = (
{
components = (
{
name = h;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 95, -874}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hdotbelow;
unicode = 1E25;
},
{
glyphname = Hdieresis;
layers = (
{
components = (
{
name = H;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 139, 27}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hdieresis;
unicode = 1E26;
},
{
glyphname = hdieresis;
layers = (
{
components = (
{
name = h;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 20, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hdieresis;
unicode = 1E27;
},
{
glyphname = Hcedilla;
layers = (
{
components = (
{
name = H;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, -4, -18}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hcedilla;
unicode = 1E28;
},
{
glyphname = hcedilla;
layers = (
{
components = (
{
name = h;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, -2, -32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hcedilla;
unicode = 1E29;
},
{
glyphname = Hbrevebelow;
layers = (
{
components = (
{
name = H;
},
{
name = breve;
transform = "{1, 0, 0, 1, 144, -876}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hbrevebelow;
unicode = 1E2A;
},
{
glyphname = hbrevebelow;
layers = (
{
components = (
{
name = h;
},
{
name = breve;
transform = "{1, 0, 0, 1, 25, -890}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hbrevebelow;
unicode = 1E2B;
},
{
glyphname = Itildebelow;
layers = (
{
components = (
{
name = I;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -74, -835}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Itildebelow;
unicode = 1E2C;
},
{
glyphname = itildebelow;
layers = (
{
components = (
{
name = i;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -83, -833}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = itildebelow;
unicode = 1E2D;
},
{
glyphname = Idieresisacute;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -52, 3}";
},
{
name = acute;
transform = "{1, 0, 0, 1, -15, 151}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Idieresisacute;
unicode = 1E2E;
},
{
glyphname = idieresisacute;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -81, -251}";
},
{
name = acute;
transform = "{1, 0, 0, 1, -44, -103}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = idieresisacute;
unicode = 1E2F;
},
{
glyphname = Kacute;
layers = (
{
components = (
{
name = K;
},
{
name = acute;
transform = "{1, 0, 0, 1, 176, 45}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = Kacute;
unicode = 1E30;
},
{
glyphname = kacute;
layers = (
{
components = (
{
name = k;
},
{
name = acute;
transform = "{1, 0, 0, 1, 102, 50}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kacute;
unicode = 1E31;
},
{
glyphname = Kdotbelow;
layers = (
{
components = (
{
name = K;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 214, -870}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = Kdotbelow;
unicode = 1E32;
},
{
glyphname = kdotbelow;
layers = (
{
components = (
{
name = k;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 140, -898}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kdotbelow;
unicode = 1E33;
},
{
glyphname = Klinebelow;
layers = (
{
components = (
{
name = K;
},
{
name = macron;
transform = "{1, 0, 0, 1, 162, -832}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = Klinebelow;
unicode = 1E34;
},
{
glyphname = klinebelow;
layers = (
{
components = (
{
name = k;
},
{
name = macron;
transform = "{1, 0, 0, 1, 88, -860}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = klinebelow;
unicode = 1E35;
},
{
glyphname = Ldotbelow;
layers = (
{
components = (
{
name = L;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 134, -852}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Ldotbelow;
unicode = 1E36;
},
{
glyphname = ldotbelow;
layers = (
{
components = (
{
name = l;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 2, -855}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = ldotbelow;
unicode = 1E37;
},
{
glyphname = Ldotbelowmacron;
layers = (
{
components = (
{
name = L;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 134, -852}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 82, -6}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Ldotbelowmacron;
unicode = 1E38;
},
{
glyphname = ldotbelowmacron;
layers = (
{
components = (
{
name = l;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 2, -855}";
},
{
name = macron;
transform = "{1, 0, 0, 1, -49, 6}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = ldotbelowmacron;
unicode = 1E39;
},
{
glyphname = Llinebelow;
layers = (
{
components = (
{
name = L;
},
{
name = macron;
transform = "{1, 0, 0, 1, 82, -814}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Llinebelow;
unicode = 1E3A;
},
{
glyphname = llinebelow;
layers = (
{
components = (
{
name = l;
},
{
name = macron;
transform = "{1, 0, 0, 1, -49, -817}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = llinebelow;
unicode = 1E3B;
},
{
glyphname = Lcircumflexbelow;
layers = (
{
components = (
{
name = L;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 50, -879}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Lcircumflexbelow;
unicode = 1E3C;
},
{
glyphname = lcircumflexbelow;
layers = (
{
components = (
{
name = l;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -81, -882}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = lcircumflexbelow;
unicode = 1E3D;
},
{
glyphname = Macute;
layers = (
{
components = (
{
name = M;
},
{
name = acute;
transform = "{1, 0, 0, 1, 231, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = Macute;
unicode = 1E3E;
},
{
glyphname = macute;
layers = (
{
components = (
{
name = m;
},
{
name = acute;
transform = "{1, 0, 0, 1, 156, -192}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
note = macute;
unicode = 1E3F;
},
{
glyphname = Mdotaccent;
layers = (
{
components = (
{
name = M;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 269, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = Mdotaccent;
unicode = 1E40;
},
{
glyphname = mdotaccent;
layers = (
{
components = (
{
name = m;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 194, -227}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
note = mdotaccent;
unicode = 1E41;
},
{
glyphname = Mdotbelow;
layers = (
{
components = (
{
name = M;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 269, -866}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = Mdotbelow;
unicode = 1E42;
},
{
glyphname = mdotbelow;
layers = (
{
components = (
{
name = m;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 194, -858}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
note = mdotbelow;
unicode = 1E43;
},
{
glyphname = Ndotaccent;
layers = (
{
components = (
{
name = N;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 188, 5}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ndotaccent;
unicode = 1E44;
},
{
glyphname = ndotaccent;
layers = (
{
components = (
{
name = n;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -240}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ndotaccent;
unicode = 1E45;
},
{
glyphname = Ndotbelow;
layers = (
{
components = (
{
name = N;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 188, -838}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ndotbelow;
unicode = 1E46;
},
{
glyphname = ndotbelow;
layers = (
{
components = (
{
name = n;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 123, -855}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ndotbelow;
unicode = 1E47;
},
{
glyphname = Nlinebelow;
layers = (
{
components = (
{
name = N;
},
{
name = macron;
transform = "{1, 0, 0, 1, 136, -800}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Nlinebelow;
unicode = 1E48;
},
{
glyphname = nlinebelow;
layers = (
{
components = (
{
name = n;
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -817}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = nlinebelow;
unicode = 1E49;
},
{
glyphname = Ncircumflexbelow;
layers = (
{
components = (
{
name = N;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, -865}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ncircumflexbelow;
unicode = 1E4A;
},
{
glyphname = ncircumflexbelow;
layers = (
{
components = (
{
name = n;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 39, -882}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ncircumflexbelow;
unicode = 1E4B;
},
{
glyphname = Otildeacute;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 123, 17}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 182, 163}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Otildeacute;
unicode = 1E4C;
},
{
glyphname = otildeacute;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 26, -227}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 85, -81}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = otildeacute;
unicode = 1E4D;
},
{
glyphname = Otildedieresis;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 123, 17}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 145, 138}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Otildedieresis;
unicode = 1E4E;
},
{
glyphname = otildedieresis;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 26, -227}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 48, -106}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = otildedieresis;
unicode = 1E4F;
},
{
glyphname = Omacrongrave;
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 0}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 182, 120}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Omacrongrave;
unicode = 1E50;
},
{
glyphname = omacrongrave;
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -244}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 85, -124}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = omacrongrave;
unicode = 1E51;
},
{
glyphname = Omacronacute;
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 168, 0}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 182, 120}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Omacronacute;
unicode = 1E52;
},
{
glyphname = omacronacute;
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 71, -244}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 85, -124}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = omacronacute;
unicode = 1E53;
},
{
glyphname = Pacute;
layers = (
{
components = (
{
name = P;
},
{
name = acute;
transform = "{1, 0, 0, 1, 152, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 501;
}
);
note = Pacute;
unicode = 1E54;
},
{
glyphname = pacute;
layers = (
{
components = (
{
name = p;
},
{
name = acute;
transform = "{1, 0, 0, 1, 77, -156}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 350;
}
);
note = pacute;
unicode = 1E55;
},
{
glyphname = Pdotaccent;
layers = (
{
components = (
{
name = P;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 190, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 501;
}
);
note = Pdotaccent;
unicode = 1E56;
},
{
glyphname = pdotaccent;
layers = (
{
components = (
{
name = p;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 115, -191}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 350;
}
);
note = pdotaccent;
unicode = 1E57;
},
{
glyphname = Rdotaccent;
layers = (
{
components = (
{
name = R;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 211, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rdotaccent;
unicode = 1E58;
},
{
glyphname = rdotaccent;
layers = (
{
components = (
{
name = r;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 76, -243}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rdotaccent;
unicode = 1E59;
},
{
glyphname = Rdotbelow;
layers = (
{
components = (
{
name = R;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 211, -849}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rdotbelow;
unicode = 1E5A;
},
{
glyphname = rdotbelow;
layers = (
{
components = (
{
name = r;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 76, -842}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rdotbelow;
unicode = 1E5B;
},
{
glyphname = Rdotbelowmacron;
layers = (
{
components = (
{
name = R;
},
{
name = macron;
transform = "{1, 0, 0, 1, 159, 7}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 211, -849}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rdotbelowmacron;
unicode = 1E5C;
},
{
glyphname = rdotbelowmacron;
layers = (
{
components = (
{
name = r;
},
{
name = macron;
transform = "{1, 0, 0, 1, 24, -250}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 76, -842}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rdotbelowmacron;
unicode = 1E5D;
},
{
glyphname = Rlinebelow;
layers = (
{
components = (
{
name = R;
},
{
name = macron;
transform = "{1, 0, 0, 1, 159, -811}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rlinebelow;
unicode = 1E5E;
},
{
glyphname = rlinebelow;
layers = (
{
components = (
{
name = r;
},
{
name = macron;
transform = "{1, 0, 0, 1, 24, -804}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rlinebelow;
unicode = 1E5F;
},
{
glyphname = Sdotaccent;
layers = (
{
components = (
{
name = S;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, 13}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Sdotaccent;
unicode = 1E60;
},
{
glyphname = sdotaccent;
layers = (
{
components = (
{
name = s;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -232}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = sdotaccent;
unicode = 1E61;
},
{
glyphname = Sdotbelow;
layers = (
{
components = (
{
name = S;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, -864}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Sdotbelow;
unicode = 1E62;
},
{
glyphname = sdotbelow;
layers = (
{
components = (
{
name = s;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -858}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = sdotbelow;
unicode = 1E63;
},
{
glyphname = Sacutedotaccent;
layers = (
{
components = (
{
name = S;
},
{
name = acute;
transform = "{1, 0, 0, 1, 126, 48}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, 187}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Sacutedotaccent;
unicode = 1E64;
},
{
glyphname = sacutedotaccent;
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 80, -197}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -58}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = sacutedotaccent;
unicode = 1E65;
},
{
glyphname = Scarondotaccent;
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 80, 28}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, 177}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Scarondotaccent;
unicode = 1E66;
},
{
glyphname = scarondotaccent;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 34, -217}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -68}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = scarondotaccent;
unicode = 1E67;
},
{
glyphname = Sdotbelowdotaccent;
layers = (
{
components = (
{
name = S;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, -864}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 164, 13}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Sdotbelowdotaccent;
unicode = 1E68;
},
{
glyphname = sdotbelowdotaccent;
layers = (
{
components = (
{
name = s;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -858}";
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -232}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = sdotbelowdotaccent;
unicode = 1E69;
},
{
glyphname = Tdotaccent;
layers = (
{
components = (
{
name = T;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 171, -4}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tdotaccent;
unicode = 1E6A;
},
{
glyphname = tdotaccent;
layers = (
{
components = (
{
name = t;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 76, -109}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tdotaccent;
unicode = 1E6B;
},
{
glyphname = Tdotbelow;
layers = (
{
components = (
{
name = T;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 171, -856}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tdotbelow;
unicode = 1E6C;
},
{
glyphname = tdotbelow;
layers = (
{
components = (
{
name = t;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 76, -853}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tdotbelow;
unicode = 1E6D;
},
{
glyphname = Tlinebelow;
layers = (
{
components = (
{
name = T;
},
{
name = macron;
transform = "{1, 0, 0, 1, 119, -818}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tlinebelow;
unicode = 1E6E;
},
{
glyphname = tlinebelow;
layers = (
{
components = (
{
name = t;
},
{
name = macron;
transform = "{1, 0, 0, 1, 24, -815}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tlinebelow;
unicode = 1E6F;
},
{
glyphname = Tcircumflexbelow;
layers = (
{
components = (
{
name = T;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 87, -883}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tcircumflexbelow;
unicode = 1E70;
},
{
glyphname = tcircumflexbelow;
layers = (
{
components = (
{
name = t;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -7, -880}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tcircumflexbelow;
unicode = 1E71;
},
{
glyphname = Udieresisbelow;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, -852}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Udieresisbelow;
unicode = 1E72;
},
{
glyphname = udieresisbelow;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -854}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = udieresisbelow;
unicode = 1E73;
},
{
glyphname = Utildebelow;
layers = (
{
components = (
{
name = U;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 70, -850}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Utildebelow;
unicode = 1E74;
},
{
glyphname = utildebelow;
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 8, -852}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = utildebelow;
unicode = 1E75;
},
{
glyphname = Ucircumflexbelow;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 83, -889}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Ucircumflexbelow;
unicode = 1E76;
},
{
glyphname = ucircumflexbelow;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 21, -891}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = ucircumflexbelow;
unicode = 1E77;
},
{
glyphname = Utildeacute;
layers = (
{
components = (
{
name = U;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 70, 23}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 129, 169}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Utildeacute;
unicode = 1E78;
},
{
glyphname = utildeacute;
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 8, -242}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 67, -96}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = utildeacute;
unicode = 1E79;
},
{
glyphname = Umacrondieresis;
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 115, 6}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 92, 101}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Umacrondieresis;
unicode = 1E7A;
},
{
glyphname = umacrondieresis;
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 53, -259}";
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 30, -164}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = umacrondieresis;
unicode = 1E7B;
},
{
glyphname = Vtilde;
layers = (
{
components = (
{
name = V;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 80, 43}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Vtilde;
unicode = 1E7C;
},
{
glyphname = vtilde;
layers = (
{
components = (
{
name = v;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 22, -236}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 353;
}
);
note = vtilde;
unicode = 1E7D;
},
{
glyphname = Vdotbelow;
layers = (
{
components = (
{
name = V;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 177, -851}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Vdotbelow;
unicode = 1E7E;
},
{
glyphname = vdotbelow;
layers = (
{
components = (
{
name = v;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 119, -846}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 353;
}
);
note = vdotbelow;
unicode = 1E7F;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = grave;
transform = "{1, 0, 0, 1, 200, 55}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = Wgrave;
unicode = 1E80;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 157, -211}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wgrave;
unicode = 1E81;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acute;
transform = "{1, 0, 0, 1, 200, 55}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = Wacute;
unicode = 1E82;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 157, -211}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wacute;
unicode = 1E83;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 163, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = Wdieresis;
unicode = 1E84;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 120, -236}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wdieresis;
unicode = 1E85;
},
{
glyphname = Wdotaccent;
layers = (
{
components = (
{
name = W;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 238, 20}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = Wdotaccent;
unicode = 1E86;
},
{
glyphname = wdotaccent;
layers = (
{
components = (
{
name = w;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 195, -246}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wdotaccent;
unicode = 1E87;
},
{
glyphname = Wdotbelow;
layers = (
{
components = (
{
name = W;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 238, -848}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = Wdotbelow;
unicode = 1E88;
},
{
glyphname = wdotbelow;
layers = (
{
components = (
{
name = w;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 195, -846}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wdotbelow;
unicode = 1E89;
},
{
glyphname = Xdotaccent;
layers = (
{
components = (
{
name = X;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 219, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = Xdotaccent;
unicode = 1E8A;
},
{
glyphname = xdotaccent;
layers = (
{
components = (
{
name = x;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 143, -249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = xdotaccent;
unicode = 1E8B;
},
{
glyphname = Xdieresis;
layers = (
{
components = (
{
name = X;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 144, 24}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = Xdieresis;
unicode = 1E8C;
},
{
glyphname = xdieresis;
layers = (
{
components = (
{
name = x;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 68, -239}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = xdieresis;
unicode = 1E8D;
},
{
glyphname = Ydotaccent;
layers = (
{
components = (
{
name = Y;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 183, 4}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = Ydotaccent;
unicode = 1E8E;
},
{
glyphname = ydotaccent;
layers = (
{
components = (
{
name = y;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 118, -249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = ydotaccent;
unicode = 1E8F;
},
{
glyphname = Zcircumflex;
layers = (
{
components = (
{
name = Z;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 139, 64}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zcircumflex;
unicode = 1E90;
},
{
glyphname = zcircumflex;
layers = (
{
components = (
{
name = z;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 29, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zcircumflex;
unicode = 1E91;
},
{
glyphname = Zdotbelow;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 223, -857}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zdotbelow;
unicode = 1E92;
},
{
glyphname = zdotbelow;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 113, -852}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zdotbelow;
unicode = 1E93;
},
{
glyphname = Zlinebelow;
layers = (
{
components = (
{
name = Z;
},
{
name = macron;
transform = "{1, 0, 0, 1, 171, -819}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zlinebelow;
unicode = 1E94;
},
{
glyphname = zlinebelow;
layers = (
{
components = (
{
name = z;
},
{
name = macron;
transform = "{1, 0, 0, 1, 61, -814}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zlinebelow;
unicode = 1E95;
},
{
glyphname = hlinebelow;
layers = (
{
components = (
{
name = h;
},
{
name = macron;
transform = "{1, 0, 0, 1, 43, -836}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hlinebelow;
unicode = 1E96;
},
{
glyphname = tdieresis;
layers = (
{
components = (
{
name = t;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, -99}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tdieresis;
unicode = 1E97;
},
{
glyphname = wring;
layers = (
{
components = (
{
name = w;
},
{
name = ring;
transform = "{1, 0, 0, 1, 178, -245}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = wring;
unicode = 1E98;
},
{
glyphname = yring;
layers = (
{
components = (
{
name = y;
},
{
name = ring;
transform = "{1, 0, 0, 1, 101, -248}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = yring;
unicode = 1E99;
},
{
glyphname = Ecircumflexmacron;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 98, 27}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 130, 170}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecircumflexmacron;
},
{
glyphname = ecircumflexmacron;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 27, -230}";
},
{
name = macron;
transform = "{1, 0, 0, 1, 59, -87}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecircumflexmacron;
},
{
glyphname = Ecircumflexcaron;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 98, 27}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 98, 192}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecircumflexcaron;
},
{
glyphname = ecircumflexcaron;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 27, -230}";
},
{
name = caron;
transform = "{1, 0, 0, 1, 27, -65}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecircumflexcaron;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 341, 39}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 276, -214}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 394, -7}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Amacron;
unicode = 0100;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 320, -258}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = amacron;
unicode = 0101;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 384, 2}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 310, -248}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = Aogonek;
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 518, -63}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = aogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 356, -71}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 342, 52}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 280, -195}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 388, 32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = Ccircumflex;
unicode = 0108;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 326, -215}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = ccircumflex;
unicode = 0109;
},
{
glyphname = Cdotaccent;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 304, 17}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = Cdotaccent;
unicode = 010A;
},
{
glyphname = cdotaccent;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 242, -230}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = cdotaccent;
unicode = 010B;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 388, 32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 326, -215}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 393, 34}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 499;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = dcaron;
layers = (
{
components = (
{
name = d;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 367, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 545;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 382, 5}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 311, -252}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = emacron;
unicode = 0113;
},
{
glyphname = Ebreve;
layers = (
{
components = (
{
name = E;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 372, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ebreve;
unicode = 0114;
},
{
glyphname = ebreve;
layers = (
{
components = (
{
name = e;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 301, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ebreve;
unicode = 0115;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 302, 12}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 231, -245}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = edotaccent;
unicode = 0117;
},
{
glyphname = Eogonek;
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 335, -49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = eogonek;
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 264, -40}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 386, 27}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 315, -230}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 385, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gcircumflex;
unicode = 011C;
},
{
glyphname = gcircumflex;
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 323, -219}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gcircumflex;
unicode = 011D;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 371, 18}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 309, -231}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = Gdotaccent;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 301, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gdotaccent;
unicode = 0120;
},
{
glyphname = gdotaccent;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcmb;
transform = "{1, 0, 0, 1, 239, -234}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = gdotaccent;
unicode = 0121;
},
{
glyphname = Gcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = G;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 390, 26}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Gcommaaccent;
unicode = 0122;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 418, 32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Hcircumflex;
unicode = 0124;
},
{
glyphname = hcircumflex;
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 299, 20}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = hcircumflex;
unicode = 0125;
},
{
glyphname = Itilde;
layers = (
{
components = (
{
name = I;
},
{
name = tildecmb;
transform = "{1, 0, 0, 1, 239, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Itilde;
unicode = 0128;
},
{
glyphname = itilde;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = tildecmb;
transform = "{1, 0, 0, 1, 210, -251}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = itilde;
unicode = 0129;
},
{
glyphname = Imacron;
layers = (
{
components = (
{
name = I;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 222, -13}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = imacron;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 193, -268}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = Kcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = K;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 423, 6}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 491;
}
);
note = Kcommaaccent;
unicode = 0136;
},
{
glyphname = kcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = k;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 349, -21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kcommaaccent;
unicode = 0137;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 292, 35}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 160, 48}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = Lcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = L;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 343, 24}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Lcommaaccent;
unicode = 013B;
},
{
glyphname = lcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = l;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 211, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = lcommaaccent;
unicode = 013C;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 338, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = lcaron;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"183.667 697.667 OFFCURVE",
"149.667 701.333 OFFCURVE",
"143 692 CURVE",
"133.667 680.667 OFFCURVE",
"135.667 625.667 OFFCURVE",
"149 527 CURVE",
"151 524.333 OFFCURVE",
"152 523 OFFCURVE",
"152 523 CURVE",
"157.333 519 OFFCURVE",
"173.333 516 OFFCURVE",
"176 520 CURVE",
"184.667 530.667 OFFCURVE",
"187 555 OFFCURVE",
"183 593 CURVE SMOOTH",
"181 619 OFFCURVE",
"182.333 640.333 OFFCURVE",
"187 657 CURVE SMOOTH",
"191 669.667 OFFCURVE",
"194.333 679 OFFCURVE",
"197 685 CURVE",
"193 691 LINE"
);
},
{
closed = 1;
nodes = (
"99 14 OFFCURVE",
"97.5 19.5 OFFCURVE",
"94.5 26.5 CURVE SMOOTH",
"91.5 33.5 OFFCURVE",
"90 38 OFFCURVE",
"90 40 CURVE",
"81.333 81.333 OFFCURVE",
"76 143 OFFCURVE",
"74 225 CURVE",
"74.667 220.333 OFFCURVE",
"75 283.667 OFFCURVE",
"75 415 CURVE SMOOTH",
"75 496.333 OFFCURVE",
"79 559.667 OFFCURVE",
"87 605 CURVE SMOOTH",
"87.667 608.333 OFFCURVE",
"90 616.667 OFFCURVE",
"94 630 CURVE SMOOTH",
"97.333 640.667 OFFCURVE",
"99 649.333 OFFCURVE",
"99 656 CURVE SMOOTH",
"99 674.667 OFFCURVE",
"75.667 690 OFFCURVE",
"57 690 CURVE SMOOTH",
"48.333 690 OFFCURVE",
"37.667 685.333 OFFCURVE",
"25 676 CURVE",
"25 669.333 OFFCURVE",
"26 659.167 OFFCURVE",
"28 645.5 CURVE SMOOTH",
"30 631.833 OFFCURVE",
"31 621.333 OFFCURVE",
"31 614 CURVE SMOOTH",
"28 165 LINE SMOOTH",
"27.333 44.333 OFFCURVE",
"41.667 -16 OFFCURVE",
"71 -16 CURVE SMOOTH",
"89.667 -16 OFFCURVE",
"99 -7.333 OFFCURVE",
"99 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 932 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 139;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 346, 40}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 281, -205}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = Ncommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = N;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 397, 38}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ncommaaccent;
unicode = 0145;
},
{
glyphname = ncedilla;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = n;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 332, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ncedilla;
unicode = 0146;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 392, 20}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 327, -225}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 420, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Omacron;
unicode = 014C;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 323, -244}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = omacron;
unicode = 014D;
},
{
glyphname = Obreve;
layers = (
{
components = (
{
name = O;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 410, 10}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Obreve;
unicode = 014E;
},
{
glyphname = obreve;
layers = (
{
components = (
{
name = o;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 313, -234}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = obreve;
unicode = 014F;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcmb;
transform = "{1, 0, 0, 1, 376, 38}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Ohungarumlaut;
unicode = 0150;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcmb;
transform = "{1, 0, 0, 1, 279, -206}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = ohungarumlaut;
unicode = 0151;
},
{
glyphname = Rcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = R;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 420, 27}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rcommaaccent;
unicode = 0156;
},
{
glyphname = rcommaaccent;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = r;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 285, 34}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rcommaaccent;
unicode = 0157;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 415, 29}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 322, 48}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 276, -197}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 368, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Scircumflex;
unicode = 015C;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 322, -217}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = scircumflex;
unicode = 015D;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedillacmb;
transform = "{1, 0, 0, 1, 307, -22}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedillacmb;
transform = "{1, 0, 0, 1, 261, -16}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = scedilla;
unicode = 015F;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 368, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 322, -217}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = Tcedilla;
layers = (
{
components = (
{
name = T;
},
{
name = cedillacmb;
transform = "{1, 0, 0, 1, 314, -14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tcedilla;
},
{
glyphname = tcedilla;
layers = (
{
components = (
{
name = t;
},
{
name = cedillacmb;
transform = "{1, 0, 0, 1, 219, -11}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = tcedilla;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 375, 10}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = tcaron;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"277.667 617.667 OFFCURVE",
"243.667 621.333 OFFCURVE",
"237 612 CURVE",
"227.667 600.667 OFFCURVE",
"229.667 545.667 OFFCURVE",
"243 447 CURVE",
"245 444.333 OFFCURVE",
"246 443 OFFCURVE",
"246 443 CURVE",
"251.333 439 OFFCURVE",
"267.333 436 OFFCURVE",
"270 440 CURVE",
"278.667 450.667 OFFCURVE",
"281 475 OFFCURVE",
"277 513 CURVE SMOOTH",
"275 539 OFFCURVE",
"276.333 560.333 OFFCURVE",
"281 577 CURVE SMOOTH",
"285 589.667 OFFCURVE",
"288.333 599 OFFCURVE",
"291 605 CURVE",
"287 611 LINE"
);
},
{
closed = 1;
nodes = (
"242.667 321 OFFCURVE",
"247 329.333 OFFCURVE",
"247 340 CURVE SMOOTH",
"247 354.667 OFFCURVE",
"237.667 362 OFFCURVE",
"219 362 CURVE",
"164 359 LINE",
"162.667 366.333 OFFCURVE",
"162 374 OFFCURVE",
"162 382 CURVE SMOOTH",
"162 398 OFFCURVE",
"164.333 422.667 OFFCURVE",
"169 456 CURVE SMOOTH",
"173.667 489.333 OFFCURVE",
"176 514.333 OFFCURVE",
"176 531 CURVE SMOOTH",
"176 552.333 OFFCURVE",
"164.333 564 OFFCURVE",
"141 566 CURVE SMOOTH",
"126.333 567.333 OFFCURVE",
"114 558 OFFCURVE",
"114 550 CURVE SMOOTH",
"114 548 OFFCURVE",
"114.833 544.833 OFFCURVE",
"116.5 540.5 CURVE SMOOTH",
"118.167 536.167 OFFCURVE",
"119 533 OFFCURVE",
"119 531 CURVE",
"106 350 LINE",
"52 352 OFFCURVE",
"25 340.333 OFFCURVE",
"25 315 CURVE SMOOTH",
"25 297 OFFCURVE",
"35.667 289.333 OFFCURVE",
"57 292 CURVE SMOOTH",
"83.667 295.333 OFFCURVE",
"99 295.333 OFFCURVE",
"103 292 CURVE",
"101.667 247.333 OFFCURVE",
"101 178 OFFCURVE",
"101 84 CURVE SMOOTH",
"101 66 OFFCURVE",
"103.667 47 OFFCURVE",
"109 27 CURVE SMOOTH",
"117 -0.333 OFFCURVE",
"127.667 -14 OFFCURVE",
"141 -14 CURVE SMOOTH",
"151.667 -14 OFFCURVE",
"169 -0.667 OFFCURVE",
"169 10 CURVE SMOOTH",
"169 18.667 OFFCURVE",
"167.333 31 OFFCURVE",
"164 47 CURVE SMOOTH",
"160.667 63 OFFCURVE",
"159 74.667 OFFCURVE",
"159 82 CURVE",
"157.667 100 OFFCURVE",
"157 135 OFFCURVE",
"157 187 CURVE SMOOTH",
"157 253.667 OFFCURVE",
"157.333 290.667 OFFCURVE",
"158 298 CURVE",
"161.333 300 OFFCURVE",
"174 302.333 OFFCURVE",
"196 305 CURVE SMOOTH",
"216 307.667 OFFCURVE",
"228.667 311 OFFCURVE",
"234 315 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 41 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 55 22 55 38 55 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 55 69 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 280;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tildecmb;
transform = "{1, 0, 0, 1, 384, 23}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Utilde;
unicode = 0168;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tildecmb;
transform = "{1, 0, 0, 1, 322, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = utilde;
unicode = 0169;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 367, 6}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Umacron;
unicode = 016A;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 305, -259}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = umacron;
unicode = 016B;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 357, 16}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Ubreve;
unicode = 016C;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 295, -249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = ubreve;
unicode = 016D;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ringcmb;
transform = "{1, 0, 0, 1, 304, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Uring;
unicode = 016E;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ringcmb;
transform = "{1, 0, 0, 1, 242, -251}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcmb;
transform = "{1, 0, 0, 1, 323, 44}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Uhungarumlaut;
unicode = 0170;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcmb;
transform = "{1, 0, 0, 1, 261, -221}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = Uogonek;
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 320, -51}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Uogonek;
unicode = 0172;
},
{
glyphname = uogonek;
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 258, -53}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = uogonek;
unicode = 0173;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 381, 84}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 271, -217}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 427, 64}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 317, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = gravetonecmb;
layers = (
{
components = (
{
name = gravecmb;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = gravetonecmb;
unicode = 0340;
},
{
glyphname = acutetonecmb;
layers = (
{
components = (
{
name = acutecmb;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = acutetonecmb;
unicode = 0341;
},
{
glyphname = dialytikatonoscmb;
layers = (
{
components = (
{
name = diaeresiscmb;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, -75, 148}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = dialytikatonoscmb;
unicode = 0344;
},
{
glyphname = questiongreek;
layers = (
{
components = (
{
name = semicolon;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 193;
}
);
note = questiongreek;
unicode = 037E;
},
{
glyphname = anoteleia;
layers = (
{
components = (
{
name = periodcentered;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 142;
}
);
note = anoteleia;
unicode = 0387;
},
{
glyphname = Amacrongrave;
layers = (
{
components = (
{
name = A;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 394, -7}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 352, 112}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Amacrongrave;
},
{
glyphname = amacrongrave;
layers = (
{
components = (
{
name = a;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 320, -258}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 278, -138}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = amacrongrave;
},
{
glyphname = aacuteogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 273, -71}";
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 278, -216}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aacuteogonek;
},
{
glyphname = Imacrongrave;
layers = (
{
components = (
{
name = I;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 222, -13}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 180, 106}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Imacrongrave;
},
{
glyphname = imacrongrave;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 193, -268}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 151, -148}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = imacrongrave;
},
{
glyphname = idotaboveacute;
layers = (
{
components = (
{
name = i;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 171, -54}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = idotaboveacute;
},
{
glyphname = Umacrongrave;
layers = (
{
components = (
{
name = U;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 367, 6}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 325, 126}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = Umacrongrave;
},
{
glyphname = umacrongrave;
layers = (
{
components = (
{
name = u;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 305, -259}";
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 263, -139}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = umacrongrave;
},
{
glyphname = xdotbelow;
layers = (
{
components = (
{
name = x;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 331, -15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = xdotbelow;
},
{
glyphname = Mgrave;
layers = (
{
components = (
{
name = M;
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 427, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = Mgrave;
},
{
glyphname = mgrave;
layers = (
{
components = (
{
name = m;
},
{
name = gravecmb;
transform = "{1, 0, 0, 1, 352, -192}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
note = mgrave;
},
{
glyphname = Rbreve;
layers = (
{
components = (
{
name = R;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 401, 17}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Rbreve;
},
{
glyphname = rbreve;
layers = (
{
components = (
{
name = r;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 266, -240}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = rbreve;
},
{
glyphname = uniFE10;
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 3, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 184;
}
);
note = uniFE10;
unicode = FE10;
},
{
glyphname = uniFE13;
layers = (
{
components = (
{
name = colon;
transform = "{1, 0, 0, 1, 3, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 142;
}
);
note = uniFE13;
unicode = FE13;
},
{
glyphname = uniFE14;
layers = (
{
components = (
{
name = semicolon;
transform = "{1, 0, 0, 1, 3, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 193;
}
);
note = uniFE14;
unicode = FE14;
},
{
glyphname = uniFE15;
layers = (
{
components = (
{
name = exclam;
transform = "{1, 0, 0, 1, 3, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 209;
}
);
note = uniFE15;
unicode = FE15;
},
{
glyphname = uniFE16;
layers = (
{
components = (
{
name = question;
transform = "{1, 0, 0, 1, 3, 3}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 506;
}
);
note = uniFE16;
unicode = FE16;
},
{
glyphname = uniFE19;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"306 -239.667 OFFCURVE",
"323 -208.667 OFFCURVE",
"323 -182 CURVE SMOOTH",
"323 -158.667 OFFCURVE",
"311.667 -147 OFFCURVE",
"289 -147 CURVE",
"269 -148.333 OFFCURVE",
"250 -168.333 OFFCURVE",
"250 -191 CURVE SMOOTH",
"250 -201.667 OFFCURVE",
"252.667 -212 OFFCURVE",
"258 -222 CURVE SMOOTH",
"264.667 -234.667 OFFCURVE",
"272.667 -241 OFFCURVE",
"282 -241 CURVE"
);
},
{
closed = 1;
nodes = (
"306 -19.667 OFFCURVE",
"323.333 11.667 OFFCURVE",
"322 37 CURVE",
"322 60.333 OFFCURVE",
"310.667 72 OFFCURVE",
"288 72 CURVE",
"268 70.667 OFFCURVE",
"249 50.667 OFFCURVE",
"249 28 CURVE",
"249.667 18 OFFCURVE",
"252.667 8 OFFCURVE",
"258 -2 CURVE SMOOTH",
"264.667 -14.667 OFFCURVE",
"272.667 -21 OFFCURVE",
"282 -21 CURVE"
);
},
{
closed = 1;
nodes = (
"305 199.333 OFFCURVE",
"322 230.333 OFFCURVE",
"322 257 CURVE SMOOTH",
"322 280.333 OFFCURVE",
"310.667 292 OFFCURVE",
"288 292 CURVE",
"268 290.667 OFFCURVE",
"249 270.667 OFFCURVE",
"249 248 CURVE SMOOTH",
"249 237.333 OFFCURVE",
"251.667 227 OFFCURVE",
"257 217 CURVE SMOOTH",
"263.667 204.333 OFFCURVE",
"271.667 198 OFFCURVE",
"281 198 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 934 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 21 22 21 38 21 54 21 70 21 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 21 101 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 573;
}
);
note = uniFE19;
unicode = FE19;
},
{
glyphname = emdashvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"417.333 -110 OFFCURVE",
"427.667 -102.667 OFFCURVE",
"435 -88 CURVE",
"441.667 -76 OFFCURVE",
"445 -63 OFFCURVE",
"445 -49 CURVE",
"409 642 LINE",
"384 641 LINE",
"374.667 641 OFFCURVE",
"348 625.333 OFFCURVE",
"348 616 CURVE SMOOTH",
"348 614 OFFCURVE",
"351.667 604.167 OFFCURVE",
"359 586.5 CURVE SMOOTH",
"366.333 568.833 OFFCURVE",
"370.667 557.333 OFFCURVE",
"372 552 CURVE",
"377.333 522.667 OFFCURVE",
"380.667 486.333 OFFCURVE",
"382 443 CURVE SMOOTH",
"382 406.333 OFFCURVE",
"382.333 369.667 OFFCURVE",
"383 333 CURVE SMOOTH",
"389.667 159.667 OFFCURVE",
"393 44 OFFCURVE",
"393 -14 CURVE SMOOTH",
"393 -41.333 OFFCURVE",
"391.333 -59.667 OFFCURVE",
"388 -69 CURVE",
"388 -70.333 OFFCURVE",
"386 -74.667 OFFCURVE",
"382 -82 CURVE",
"378.667 -87.333 OFFCURVE",
"377 -91.333 OFFCURVE",
"377 -94 CURVE SMOOTH",
"377 -96 OFFCURVE",
"378.333 -100.667 OFFCURVE",
"381 -108 CURVE",
"398.333 -109.333 OFFCURVE",
"406 -110 OFFCURVE",
"404 -110 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 793;
}
);
note = emdashvertical;
unicode = FE31;
},
{
glyphname = endashvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"220.333 100.333 OFFCURVE",
"235 134 OFFCURVE",
"235 162 CURVE SMOOTH",
"235 200.667 OFFCURVE",
"232.667 249 OFFCURVE",
"228 307 CURVE SMOOTH",
"225.333 355 OFFCURVE",
"222.333 403.333 OFFCURVE",
"219 452 CURVE",
"194 451 LINE",
"184.667 451 OFFCURVE",
"158 435.333 OFFCURVE",
"158 426 CURVE SMOOTH",
"158 424 OFFCURVE",
"161.667 414.333 OFFCURVE",
"169 397 CURVE SMOOTH",
"176.333 379.667 OFFCURVE",
"180.667 368 OFFCURVE",
"182 362 CURVE",
"185.333 342.667 OFFCURVE",
"187 317.333 OFFCURVE",
"187 286 CURVE SMOOTH",
"187.667 207.333 OFFCURVE",
"184.667 159 OFFCURVE",
"178 141 CURVE",
"178 139.667 OFFCURVE",
"176.167 135.667 OFFCURVE",
"172.5 129 CURVE SMOOTH",
"168.833 122.333 OFFCURVE",
"167 118 OFFCURVE",
"167 116 CURVE SMOOTH",
"167 115.333 OFFCURVE",
"168.333 110.667 OFFCURVE",
"171 102 CURVE",
"173 102 OFFCURVE",
"176.833 101.5 OFFCURVE",
"182.5 100.5 CURVE SMOOTH",
"188.167 99.5 OFFCURVE",
"192.333 99 OFFCURVE",
"195 99 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 932 10 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 10 106 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 10 121 10 137 10 153 10 169 10 185 10 201 10 217 10 233 10 249 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 10 25 10 41 10 57 10 73 10 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 393;
}
);
note = endashvertical;
unicode = FE32;
},
{
glyphname = underscorevertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"250 -344 LINE",
"249 122 LINE",
"215 121 LINE",
"216 -345 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 932 1 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 467;
}
);
note = underscorevertical;
unicode = FE33;
},
{
glyphname = wavyunderscorevertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"250 -344 LINE",
"249 122 LINE",
"215 121 LINE",
"216 -345 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 932 1 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 467;
}
);
note = wavyunderscorevertical;
unicode = FE34;
},
{
glyphname = parenleftvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"459.667 281 OFFCURVE",
"476 291 OFFCURVE",
"476 311 CURVE SMOOTH",
"476 315 OFFCURVE",
"474.333 318.333 OFFCURVE",
"471 321 CURVE",
"444.333 345 OFFCURVE",
"382.667 365.667 OFFCURVE",
"286 383 CURVE SMOOTH",
"206 397.667 OFFCURVE",
"138.333 405 OFFCURVE",
"83 405 CURVE SMOOTH",
"-33.667 404.333 OFFCURVE",
"-140 389.667 OFFCURVE",
"-236 361 CURVE SMOOTH",
"-286 347 OFFCURVE",
"-311 334 OFFCURVE",
"-311 322 CURVE SMOOTH",
"-311 298 OFFCURVE",
"-301.667 286 OFFCURVE",
"-283 286 CURVE SMOOTH",
"-281 286 OFFCURVE",
"-267.667 291.333 OFFCURVE",
"-243 302 CURVE SMOOTH",
"-218.333 312.667 OFFCURVE",
"-203.667 318.667 OFFCURVE",
"-199 320 CURVE SMOOTH",
"-132.333 340.667 OFFCURVE",
"-24.333 351.333 OFFCURVE",
"125 352 CURVE SMOOTH",
"172.333 352 OFFCURVE",
"227.333 348.667 OFFCURVE",
"290 342 CURVE SMOOTH",
"378.667 331.333 OFFCURVE",
"423 316.667 OFFCURVE",
"423 298 CURVE SMOOTH",
"423 296.667 OFFCURVE",
"422.5 295.5 OFFCURVE",
"421.5 294.5 CURVE SMOOTH",
"420.5 293.5 OFFCURVE",
"420 292 OFFCURVE",
"420 290 CURVE SMOOTH",
"420 286 OFFCURVE",
"422.333 283 OFFCURVE",
"427 281 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 933 5 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 5 106 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 5 25 5 41 5 57 5 73 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
20 931 9 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = parenleftvertical;
unicode = FE35;
},
{
glyphname = parenrightvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"165.333 279.667 OFFCURVE",
"234 286 OFFCURVE",
"306 298 CURVE SMOOTH",
"399.333 314 OFFCURVE",
"461.667 336 OFFCURVE",
"493 364 CURVE",
"494.333 367.333 OFFCURVE",
"495 372.667 OFFCURVE",
"495 380 CURVE SMOOTH",
"495 393.333 OFFCURVE",
"480.333 415 OFFCURVE",
"467 415 CURVE SMOOTH",
"450 415 LINE",
"447.333 405 OFFCURVE",
"442 396.667 OFFCURVE",
"434 390 CURVE SMOOTH",
"410.667 371.333 OFFCURVE",
"351 357.333 OFFCURVE",
"255 348 CURVE SMOOTH",
"187.667 341.333 OFFCURVE",
"122 337.667 OFFCURVE",
"58 337 CURVE SMOOTH",
"-112 337 OFFCURVE",
"-206 362.667 OFFCURVE",
"-224 414 CURVE",
"-242 414 LINE",
"-253.333 388.667 OFFCURVE",
"-259 373 OFFCURVE",
"-259 367 CURVE SMOOTH",
"-259 355.667 OFFCURVE",
"-241 343.333 OFFCURVE",
"-205 330 CURVE SMOOTH",
"-118.333 296 OFFCURVE",
"-16.667 279 OFFCURVE",
"100 279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
9 931 0 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 206;
}
);
note = parenrightvertical;
unicode = FE36;
},
{
glyphname = braceleftvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"133 460 LINE",
"115.667 407.333 OFFCURVE",
"71.333 378 OFFCURVE",
"0 372 CURVE SMOOTH",
"-58.667 367.333 OFFCURVE",
"-117.667 363 OFFCURVE",
"-177 359 CURVE",
"-235.667 341.667 OFFCURVE",
"-264.667 293 OFFCURVE",
"-264 213 CURVE",
"-244 213 LINE",
"-240 275.667 OFFCURVE",
"-196.667 313 OFFCURVE",
"-138 313 CURVE SMOOTH",
"-125.333 313 OFFCURVE",
"-106.667 312.167 OFFCURVE",
"-82 310.5 CURVE SMOOTH",
"-57.333 308.833 OFFCURVE",
"-39 308 OFFCURVE",
"-27 308 CURVE SMOOTH",
"55 308 OFFCURVE",
"112 335 OFFCURVE",
"144 389 CURVE",
"176 335.667 OFFCURVE",
"233 309 OFFCURVE",
"315 309 CURVE SMOOTH",
"327.667 309 OFFCURVE",
"346.333 309.667 OFFCURVE",
"371 311 CURVE SMOOTH",
"395.667 312.333 OFFCURVE",
"414 313 OFFCURVE",
"426 313 CURVE SMOOTH",
"484.667 313 OFFCURVE",
"528 276.667 OFFCURVE",
"532 214 CURVE",
"551 214 LINE",
"551 232 LINE SMOOTH",
"551 301.333 OFFCURVE",
"521.333 343.333 OFFCURVE",
"462 358 CURVE",
"403.333 362.667 OFFCURVE",
"344.667 367.333 OFFCURVE",
"286 372 CURVE SMOOTH",
"216 380 OFFCURVE",
"172.333 409.333 OFFCURVE",
"155 460 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 25 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 24 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 287;
}
);
note = braceleftvertical;
unicode = FE37;
},
{
glyphname = bracerightvertical;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"155 193 LINE",
"172.333 243.667 OFFCURVE",
"216 273 OFFCURVE",
"286 281 CURVE SMOOTH",
"344.667 285.667 OFFCURVE",
"403.333 290.333 OFFCURVE",
"462 295 CURVE",
"521.333 309.667 OFFCURVE",
"551 351.667 OFFCURVE",
"551 421 CURVE SMOOTH",
"551 439 LINE",
"532 439 LINE",
"528 376.333 OFFCURVE",
"484.667 340 OFFCURVE",
"426 340 CURVE SMOOTH",
"414 340 OFFCURVE",
"395.667 340.667 OFFCURVE",
"371 342 CURVE SMOOTH",
"346.333 343.333 OFFCURVE",
"327.667 344 OFFCURVE",
"315 344 CURVE SMOOTH",
"233 344 OFFCURVE",
"176 317.333 OFFCURVE",
"144 264 CURVE",
"112 318 OFFCURVE",
"55 345 OFFCURVE",
"-27 345 CURVE SMOOTH",
"-39 345 OFFCURVE",
"-57.333 344.167 OFFCURVE",
"-82 342.5 CURVE SMOOTH",
"-106.667 340.833 OFFCURVE",
"-125.333 340 OFFCURVE",
"-138 340 CURVE SMOOTH",
"-196.667 340 OFFCURVE",
"-240 377.333 OFFCURVE",
"-244 440 CURVE",
"-264 440 LINE",
"-264.667 360 OFFCURVE",
"-235.667 311.333 OFFCURVE",
"-177 294 CURVE",
"-117.667 290 OFFCURVE",
"-58.667 285.667 OFFCURVE",
"0 281 CURVE SMOOTH",
"71.333 275 OFFCURVE",
"115.667 245.667 OFFCURVE",
"133 193 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 6 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
15 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 287;
}
);
note = bracerightvertical;
unicode = FE38;
},
{
glyphname = uniFE47;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-310 401 OFFCURVE",
"-318 388.667 OFFCURVE",
"-318 364 CURVE SMOOTH",
"-318 358 OFFCURVE",
"-316.667 352.333 OFFCURVE",
"-314 347 CURVE",
"-315 261 LINE",
"-311.667 251 OFFCURVE",
"-306 246 OFFCURVE",
"-298 246 CURVE SMOOTH",
"-290.667 246 OFFCURVE",
"-282.667 251 OFFCURVE",
"-274 261 CURVE",
"-273 324 LINE",
"-220.333 337.333 OFFCURVE",
"-114.667 344 OFFCURVE",
"44 344 CURVE SMOOTH",
"198 343 LINE SMOOTH",
"323.333 343 OFFCURVE",
"404.333 336.667 OFFCURVE",
"441 324 CURVE",
"440 253 LINE",
"445.333 239.667 OFFCURVE",
"452.333 233 OFFCURVE",
"461 233 CURVE SMOOTH",
"468.333 233 OFFCURVE",
"475 239.667 OFFCURVE",
"481 253 CURVE",
"482 332 LINE",
"485.333 337.333 OFFCURVE",
"487 342.667 OFFCURVE",
"487 348 CURVE SMOOTH",
"487 377.333 OFFCURVE",
"436.667 392 OFFCURVE",
"336 392 CURVE SMOOTH",
"277.333 392 OFFCURVE",
"84.333 391 OFFCURVE",
"-243 389 CURVE SMOOTH",
"-249 389 OFFCURVE",
"-257.5 391 OFFCURVE",
"-268.5 395 CURVE SMOOTH",
"-279.5 399 OFFCURVE",
"-288 401 OFFCURVE",
"-294 401 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
3 930 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 188;
}
);
note = uniFE47;
unicode = FE47;
},
{
glyphname = uniFE48;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-288 203 OFFCURVE",
"-279.5 205 OFFCURVE",
"-268.5 209 CURVE SMOOTH",
"-257.5 213 OFFCURVE",
"-249 215 OFFCURVE",
"-243 215 CURVE SMOOTH",
"84.333 213 OFFCURVE",
"277.333 212 OFFCURVE",
"336 212 CURVE SMOOTH",
"436.667 212 OFFCURVE",
"487 226.667 OFFCURVE",
"487 256 CURVE SMOOTH",
"487 261.333 OFFCURVE",
"485.333 266.667 OFFCURVE",
"482 272 CURVE",
"481 351 LINE",
"475 364.333 OFFCURVE",
"468.333 371 OFFCURVE",
"461 371 CURVE SMOOTH",
"452.333 371 OFFCURVE",
"445.333 364.333 OFFCURVE",
"440 351 CURVE",
"441 280 LINE",
"404.333 267.333 OFFCURVE",
"323.333 261 OFFCURVE",
"198 261 CURVE SMOOTH",
"44 260 LINE SMOOTH",
"-114.667 260 OFFCURVE",
"-220.333 266.667 OFFCURVE",
"-273 280 CURVE",
"-274 343 LINE",
"-282.667 353 OFFCURVE",
"-290.667 358 OFFCURVE",
"-298 358 CURVE SMOOTH",
"-306 358 OFFCURVE",
"-311.667 353 OFFCURVE",
"-315 343 CURVE",
"-314 257 LINE",
"-316.667 251.667 OFFCURVE",
"-318 246 OFFCURVE",
"-318 240 CURVE SMOOTH",
"-318 215.333 OFFCURVE",
"-310 203 OFFCURVE",
"-294 203 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
13 930 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 188;
}
);
note = uniFE48;
unicode = FE48;
},
{
glyphname = section;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"329 306.333 OFFCURVE",
"310 324.667 OFFCURVE",
"272 348 CURVE SMOOTH",
"214.667 382.667 OFFCURVE",
"179.667 405.667 OFFCURVE",
"167 417 CURVE",
"129 447.667 OFFCURVE",
"110 479.333 OFFCURVE",
"110 512 CURVE SMOOTH",
"110 567.917 OFFCURVE",
"142.803 636 OFFCURVE",
"184 636 CURVE SMOOTH",
"228.667 636 OFFCURVE",
"251 600.333 OFFCURVE",
"251 529 CURVE SMOOTH",
"251 499.667 OFFCURVE",
"248.333 479 OFFCURVE",
"243 467 CURVE",
"237 451.667 OFFCURVE",
"233.333 444 OFFCURVE",
"232 444 CURVE",
"234.667 436 OFFCURVE",
"259.667 428 OFFCURVE",
"269 428 CURVE SMOOTH",
"277.667 428 OFFCURVE",
"284.667 430.333 OFFCURVE",
"290 435 CURVE",
"299.333 467 OFFCURVE",
"304 495.333 OFFCURVE",
"304 520 CURVE SMOOTH",
"304 544 OFFCURVE",
"300 564.333 OFFCURVE",
"296 583 CURVE",
"285.14 623.727 OFFCURVE",
"201.027 678 OFFCURVE",
"158 678 CURVE SMOOTH",
"100.224 678 OFFCURVE",
"53 595.364 OFFCURVE",
"53 523 CURVE SMOOTH",
"53 465 OFFCURVE",
"81.333 416 OFFCURVE",
"138 376 CURVE",
"87.089 356.201 OFFCURVE",
"45 301.28 OFFCURVE",
"45 232 CURVE SMOOTH",
"45 101.831 OFFCURVE",
"146.88 26.256 OFFCURVE",
"248 -53 CURVE",
"261.333 -64.333 OFFCURVE",
"268 -73.333 OFFCURVE",
"268 -80 CURVE SMOOTH",
"268 -100 OFFCURVE",
"253.333 -110 OFFCURVE",
"224 -110 CURVE SMOOTH",
"177.448 -110 OFFCURVE",
"72.701 -50.808 OFFCURVE",
"70 -13 CURVE",
"64 -13 LINE SMOOTH",
"38.667 -13 OFFCURVE",
"27 -18.333 OFFCURVE",
"27 -41 CURVE SMOOTH",
"27 -50.333 OFFCURVE",
"42.333 -67.333 OFFCURVE",
"73 -92 CURVE SMOOTH",
"131.046 -138.436 OFFCURVE",
"151.253 -147 OFFCURVE",
"192 -147 CURVE SMOOTH",
"250.7 -147 OFFCURVE",
"334 -113.996 OFFCURVE",
"334 -69 CURVE SMOOTH",
"334 -55.667 OFFCURVE",
"315 -37.333 OFFCURVE",
"277 -14 CURVE SMOOTH",
"203.768 29.397 OFFCURVE",
"120.669 100.818 OFFCURVE",
"105 187 CURVE",
"125 176.333 OFFCURVE",
"155.667 173 OFFCURVE",
"185 173 CURVE SMOOTH",
"243.546 173 OFFCURVE",
"329 245.355 OFFCURVE",
"329 293 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104.584 289.519 OFFCURVE",
"138.356 339.959 OFFCURVE",
"177 351 CURVE",
"205 333.667 OFFCURVE",
"226.333 320 OFFCURVE",
"241 310 CURVE SMOOTH",
"255.667 300 OFFCURVE",
"263 290.667 OFFCURVE",
"263 282 CURVE SMOOTH",
"263 256.973 OFFCURVE",
"241.586 210 OFFCURVE",
"205 210 CURVE SMOOTH",
"170.333 210 OFFCURVE",
"135.333 220.333 OFFCURVE",
"102 243 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
83 934 52 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 933 76 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 76 106 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 76 121 76 137 76 153 76 169 76 185 76 201 76 217 76 233 76 249 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 76 25 76 41 76 57 76 73 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
97 76 65 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 97 106 97 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 97 25 97 41 97 57 97 73 97 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
15 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 83 118 83 134 83 150 83 166 83 182 83 198 83 214 83 230 83 246 83 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 83 22 83 38 83 54 83 70 83 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 83 101 83 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
97 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
50 52 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
106 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 929 20 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 928 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
92 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 5 92 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 357;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = notequal;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"373 240 LINE SMOOTH",
"373 255.795 OFFCURVE",
"370.47 291 OFFCURVE",
"355 291 CURVE SMOOTH",
"342.392 291 OFFCURVE",
"295.662 276 OFFCURVE",
"284 276 CURVE SMOOTH",
"268.77 276 OFFCURVE",
"235.805 280 OFFCURVE",
"220 280 CURVE SMOOTH",
"216.667 280 OFFCURVE",
"213.167 280 OFFCURVE",
"209.5 280 CURVE SMOOTH",
"205.833 280 OFFCURVE",
"201.667 279.667 OFFCURVE",
"197 279 CURVE",
"244 366 LINE",
"281.03 366 OFFCURVE",
"340.523 346 OFFCURVE",
"356 346 CURVE SMOOTH",
"364.263 346 OFFCURVE",
"373 350.427 OFFCURVE",
"373 374 CURVE SMOOTH",
"373 400.667 OFFCURVE",
"339 415 OFFCURVE",
"311 415 CURVE SMOOTH",
"304.333 415 OFFCURVE",
"297.5 415 OFFCURVE",
"290.5 415 CURVE SMOOTH",
"283.5 415 OFFCURVE",
"276.333 414.667 OFFCURVE",
"269 414 CURVE",
"302.333 475.333 OFFCURVE",
"322 509 OFFCURVE",
"334 529 CURVE SMOOTH",
"342.241 542.734 OFFCURVE",
"351.094 557.094 OFFCURVE",
"354 560 CURVE",
"346.667 566.667 OFFCURVE",
"338.667 570 OFFCURVE",
"330 570 CURVE SMOOTH",
"284.268 570 OFFCURVE",
"273.448 535.69 OFFCURVE",
"269 509 CURVE",
"266.333 501.667 OFFCURVE",
"262 491.333 OFFCURVE",
"256 478 CURVE SMOOTH",
"250 464.667 OFFCURVE",
"239.333 442.667 OFFCURVE",
"224 412 CURVE",
"165 409 LINE SMOOTH",
"141.667 407.667 OFFCURVE",
"118 405.667 OFFCURVE",
"94 403 CURVE SMOOTH",
"70 400.333 OFFCURVE",
"45.333 399.333 OFFCURVE",
"20 400 CURVE",
"18.667 396.667 OFFCURVE",
"18 392.333 OFFCURVE",
"18 387 CURVE SMOOTH",
"18 385 OFFCURVE",
"18 382.833 OFFCURVE",
"18 380.5 CURVE SMOOTH",
"18 378.167 OFFCURVE",
"18.667 376 OFFCURVE",
"20 374 CURVE",
"22.563 366.31 OFFCURVE",
"36.667 338 OFFCURVE",
"45 338 CURVE SMOOTH",
"71.762 338 OFFCURVE",
"146.805 367 OFFCURVE",
"185 367 CURVE SMOOTH",
"201 367 LINE",
"154 276 LINE",
"124.667 273.333 OFFCURVE",
"105.667 272 OFFCURVE",
"91 272 CURVE SMOOTH",
"85 272 OFFCURVE",
"76 272.833 OFFCURVE",
"64 274.5 CURVE SMOOTH",
"52 276.167 OFFCURVE",
"43 277 OFFCURVE",
"37 277 CURVE SMOOTH",
"36.333 277 OFFCURVE",
"35.333 276.667 OFFCURVE",
"34 276 CURVE SMOOTH",
"32.667 275.333 OFFCURVE",
"29.333 274.333 OFFCURVE",
"24 273 CURVE",
"22.667 269 OFFCURVE",
"20 254.333 OFFCURVE",
"20 249 CURVE SMOOTH",
"20 228.333 OFFCURVE",
"39.667 218 OFFCURVE",
"79 218 CURVE SMOOTH",
"84.333 218 OFFCURVE",
"90.833 218 OFFCURVE",
"98.5 218 CURVE SMOOTH",
"106.167 218 OFFCURVE",
"114.333 218.667 OFFCURVE",
"123 220 CURVE",
"96.333 173.333 OFFCURVE",
"71.667 133.667 OFFCURVE",
"45 103 CURVE SMOOTH",
"40.333 97.667 OFFCURVE",
"35.333 92.667 OFFCURVE",
"30 88 CURVE SMOOTH",
"24.667 83.333 OFFCURVE",
"22 78.667 OFFCURVE",
"22 74 CURVE SMOOTH",
"22 66 OFFCURVE",
"28 62 OFFCURVE",
"40 62 CURVE",
"53.333 62.667 OFFCURVE",
"70 74.833 OFFCURVE",
"90 98.5 CURVE SMOOTH",
"110 122.167 OFFCURVE",
"135.333 163.333 OFFCURVE",
"166 222 CURVE",
"216.055 222 OFFCURVE",
"298.985 224.292 OFFCURVE",
"373 233 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
26 931 19 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 929 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 19 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
73 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
70 36 73 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
90 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
87 26 90 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 393;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = infinity;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"17 165.875 OFFCURVE",
"68.86 98 OFFCURVE",
"143 98 CURVE SMOOTH",
"193.156 98 OFFCURVE",
"242.292 144.297 OFFCURVE",
"268 188 CURVE",
"290.492 133.02 OFFCURVE",
"348.187 92 OFFCURVE",
"401 92 CURVE SMOOTH",
"479.009 92 OFFCURVE",
"534 166.931 OFFCURVE",
"534 252 CURVE SMOOTH",
"534 320.212 OFFCURVE",
"489.126 388 OFFCURVE",
"406 388 CURVE SMOOTH",
"355.538 388 OFFCURVE",
"309.135 341.417 OFFCURVE",
"282 298 CURVE",
"256.667 358 OFFCURVE",
"199.333 395 OFFCURVE",
"150 395 CURVE SMOOTH",
"71.991 395 OFFCURVE",
"17 320.069 OFFCURVE",
"17 235 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98.667 151 OFFCURVE",
"69 189.333 OFFCURVE",
"69 236 CURVE SMOOTH",
"69 283.433 OFFCURVE",
"100.925 346 OFFCURVE",
"152 346 CURVE SMOOTH",
"204 346 OFFCURVE",
"236 303.333 OFFCURVE",
"252 254 CURVE",
"234.857 208.286 OFFCURVE",
"194.049 151 OFFCURVE",
"144 151 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"452 336 OFFCURVE",
"482 297.333 OFFCURVE",
"482 252 CURVE SMOOTH",
"482 203.576 OFFCURVE",
"452.628 141 OFFCURVE",
"399 141 CURVE SMOOTH",
"347 141 OFFCURVE",
"314.667 183.667 OFFCURVE",
"300 233 CURVE",
"316.898 278.063 OFFCURVE",
"356.489 336 OFFCURVE",
"408 336 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 67 106 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 67 25 67 41 67 57 67 73 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 0 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 51 22 51 38 51 54 51 70 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 51 101 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
38 931 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 928 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 23 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 23 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
62 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 554;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = plusminus;
layers = (
{
components = (
{
name = plus;
},
{
name = minus;
transform = "{1, 0, 0, 1, 0, -329}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 520;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = lessequal;
layers = (
{
components = (
{
name = less;
},
{
name = minus;
transform = "{0.67084, 0, 0, 1.03333, 7, -339}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
layers = (
{
components = (
{
name = greater;
},
{
name = minus;
transform = "{0.67084, 0, 0, 1.03333, 7, -339}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = mu;
layers = (
{
components = (
{
name = mu.Greek;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = mu;
unicode = "00B5,03BC";
},
{
glyphname = partialdiff;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"471.667 307.333 OFFCURVE",
"472 311.333 OFFCURVE",
"472 316 CURVE SMOOTH",
"472 323.333 OFFCURVE",
"470.833 328.167 OFFCURVE",
"468.5 330.5 CURVE SMOOTH",
"466.167 332.833 OFFCURVE",
"465 336.667 OFFCURVE",
"465 342 CURVE SMOOTH",
"465 351.333 OFFCURVE",
"465.333 360.333 OFFCURVE",
"466 369 CURVE SMOOTH",
"466.667 377.667 OFFCURVE",
"467 386.333 OFFCURVE",
"467 395 CURVE SMOOTH",
"467 554.375 OFFCURVE",
"403.322 686 OFFCURVE",
"269 686 CURVE SMOOTH",
"185.157 686 OFFCURVE",
"101 617.603 OFFCURVE",
"101 559 CURVE SMOOTH",
"101 545.667 OFFCURVE",
"109 540 OFFCURVE",
"117 540 CURVE SMOOTH",
"146.253 540 OFFCURVE",
"146.351 579.307 OFFCURVE",
"170 600 CURVE SMOOTH",
"196.667 622.667 OFFCURVE",
"225.667 637 OFFCURVE",
"263 637 CURVE SMOOTH",
"365.667 637 OFFCURVE",
"421 547.333 OFFCURVE",
"421 410 CURVE SMOOTH",
"421 392.072 OFFCURVE",
"421.515 328 OFFCURVE",
"407 328 CURVE SMOOTH",
"405 328 OFFCURVE",
"401.333 328.667 OFFCURVE",
"396 330 CURVE",
"307.774 347.645 OFFCURVE",
"263.315 415 OFFCURVE",
"180 415 CURVE SMOOTH",
"100 415 OFFCURVE",
"42 346.333 OFFCURVE",
"42 205 CURVE SMOOTH",
"42 83.362 OFFCURVE",
"111.666 -23 OFFCURVE",
"215 -23 CURVE SMOOTH",
"346.11 -23 OFFCURVE",
"427.083 144.789 OFFCURVE",
"455 276 CURVE",
"455.667 280 OFFCURVE",
"458.167 284 OFFCURVE",
"462.5 288 CURVE SMOOTH",
"466.833 292 OFFCURVE",
"469.667 297.333 OFFCURVE",
"471 304 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140.816 33 OFFCURVE",
"87 125.493 OFFCURVE",
"87 213 CURVE SMOOTH",
"87 313 OFFCURVE",
"126 361 OFFCURVE",
"186 361 CURVE SMOOTH",
"228.667 361 OFFCURVE",
"295.333 340 OFFCURVE",
"398 276 CURVE",
"402 272.667 OFFCURVE",
"404 267.667 OFFCURVE",
"404 261 CURVE",
"376.691 146.798 OFFCURVE",
"315.078 33 OFFCURVE",
"228 33 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 28 106 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 28 25 28 41 28 57 28 73 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
52 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
73 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 73 22 73 38 73 54 73 70 73 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 73 101 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
47 931 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 931 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 60 23 60 39 60 55 60 71 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 60 102 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 506;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = summation;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"468 -71.714 OFFCURVE",
"426.84 -58 OFFCURVE",
"395 -58 CURVE SMOOTH",
"303 -58 OFFCURVE",
"208 -59.333 OFFCURVE",
"112 -66 CURVE",
"186.667 66 OFFCURVE",
"262 190 OFFCURVE",
"346 306 CURVE",
"360.667 311.333 OFFCURVE",
"369 327.333 OFFCURVE",
"369 338 CURVE SMOOTH",
"369 342.667 OFFCURVE",
"367.167 349.333 OFFCURVE",
"363.5 358 CURVE SMOOTH",
"359.833 366.667 OFFCURVE",
"353 378 OFFCURVE",
"343 392 CURVE SMOOTH",
"290.326 463.11 OFFCURVE",
"188.369 574.2 OFFCURVE",
"119 641 CURVE",
"151 658.333 OFFCURVE",
"190.333 659 OFFCURVE",
"233 659 CURVE SMOOTH",
"298.333 659 OFFCURVE",
"342 658.5 OFFCURVE",
"370 656.5 CURVE SMOOTH",
"390.062 655.067 OFFCURVE",
"412.578 652.211 OFFCURVE",
"419 649 CURVE",
"422.333 647.667 OFFCURVE",
"426.667 645.333 OFFCURVE",
"432 642 CURVE SMOOTH",
"437.333 638.667 OFFCURVE",
"442.667 637 OFFCURVE",
"448 637 CURVE SMOOTH",
"465.333 637 OFFCURVE",
"468 641.667 OFFCURVE",
"468 667 CURVE SMOOTH",
"468 696.286 OFFCURVE",
"426.84 710 OFFCURVE",
"395 710 CURVE SMOOTH",
"281.667 710 OFFCURVE",
"170.333 708.667 OFFCURVE",
"53 694 CURVE",
"34.333 689.333 OFFCURVE",
"25 679.667 OFFCURVE",
"25 665 CURVE SMOOTH",
"25 658.333 OFFCURVE",
"26.667 650.667 OFFCURVE",
"30 642 CURVE",
"101.352 580.841 OFFCURVE",
"242.199 433.201 OFFCURVE",
"301 345 CURVE",
"247.667 277 OFFCURVE",
"190.667 192.333 OFFCURVE",
"144 115 CURVE SMOOTH",
"97.333 37.667 OFFCURVE",
"59.667 -32 OFFCURVE",
"45 -72 CURVE SMOOTH",
"43.667 -76 OFFCURVE",
"43 -80.667 OFFCURVE",
"43 -86 CURVE SMOOTH",
"43 -106.828 OFFCURVE",
"51.647 -140 OFFCURVE",
"70 -140 CURVE SMOOTH",
"90.739 -140 OFFCURVE",
"120.733 -118.594 OFFCURVE",
"146 -114 CURVE",
"168.667 -111.333 OFFCURVE",
"198.667 -109 OFFCURVE",
"236 -109 CURVE SMOOTH",
"282.667 -109 OFFCURVE",
"322 -109.667 OFFCURVE",
"354 -111 CURVE SMOOTH",
"386 -112.333 OFFCURVE",
"407.667 -115 OFFCURVE",
"419 -119 CURVE",
"425.667 -123 OFFCURVE",
"444 -131 OFFCURVE",
"448 -131 CURVE SMOOTH",
"465.333 -131 OFFCURVE",
"468 -126.333 OFFCURVE",
"468 -101 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
77 931 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 931 57 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
60 41 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
74 17 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 499;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = product;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"142.015 596.173 OFFCURVE",
"273.936 610.513 OFFCURVE",
"339 615 CURVE",
"336.333 543 OFFCURVE",
"335.333 452 OFFCURVE",
"334 360 CURVE SMOOTH",
"332.667 268 OFFCURVE",
"332 175 OFFCURVE",
"332 95 CURVE SMOOTH",
"332 28.816 OFFCURVE",
"335.628 -128.071 OFFCURVE",
"348 -159 CURVE SMOOTH",
"358 -182.333 OFFCURVE",
"372.667 -194 OFFCURVE",
"392 -194 CURVE SMOOTH",
"399.333 -194 OFFCURVE",
"409.333 -189.667 OFFCURVE",
"422 -181 CURVE",
"399.563 -150.149 OFFCURVE",
"392 44.044 OFFCURVE",
"392 122 CURVE SMOOTH",
"392 222.527 OFFCURVE",
"400.518 456.407 OFFCURVE",
"414 571 CURVE SMOOTH",
"415.333 586.333 OFFCURVE",
"416.667 598.333 OFFCURVE",
"418 607 CURVE SMOOTH",
"419.333 615.667 OFFCURVE",
"420.667 621.333 OFFCURVE",
"422 624 CURVE",
"430 626.667 OFFCURVE",
"436 628.333 OFFCURVE",
"436 643 CURVE SMOOTH",
"436 663.92 OFFCURVE",
"398.028 675 OFFCURVE",
"376 675 CURVE SMOOTH",
"352.448 675 OFFCURVE",
"267.096 663.333 OFFCURVE",
"216.5 656 CURVE SMOOTH",
"178.174 650.446 OFFCURVE",
"84.731 636.104 OFFCURVE",
"70 634 CURVE",
"48 632 OFFCURVE",
"37 623 OFFCURVE",
"37 607 CURVE SMOOTH",
"37 603.667 OFFCURVE",
"37.833 597.833 OFFCURVE",
"39.5 589.5 CURVE SMOOTH",
"41.167 581.167 OFFCURVE",
"42 574.333 OFFCURVE",
"42 569 CURVE",
"34.968 486.955 OFFCURVE",
"31 300.331 OFFCURVE",
"31 217 CURVE SMOOTH",
"31 142.647 OFFCURVE",
"33.065 -55.234 OFFCURVE",
"41 -124 CURVE SMOOTH",
"45.667 -170.667 OFFCURVE",
"63 -194 OFFCURVE",
"93 -194 CURVE SMOOTH",
"100.333 -194 OFFCURVE",
"110.333 -189.667 OFFCURVE",
"123 -181 CURVE",
"93.776 -137.164 OFFCURVE",
"92 92.401 OFFCURVE",
"92 214 CURVE SMOOTH",
"92 327.555 OFFCURVE",
"101.742 513.164 OFFCURVE",
"108 582 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 19 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 934 66 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
36 931 71 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 478;
}
);
note = product;
unicode = 220F;
},
{
glyphname = integral;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"252 627.667 OFFCURVE",
"286.667 688 OFFCURVE",
"356 688 CURVE SMOOTH",
"384 688 OFFCURVE",
"401.333 685.333 OFFCURVE",
"432 648 CURVE",
"433.333 647.333 OFFCURVE",
"436.667 647 OFFCURVE",
"442 647 CURVE SMOOTH",
"456 647 OFFCURVE",
"463 652.667 OFFCURVE",
"463 664 CURVE SMOOTH",
"463 705.395 OFFCURVE",
"371.902 736 OFFCURVE",
"335 736 CURVE SMOOTH",
"256.569 736 OFFCURVE",
"203 655.239 OFFCURVE",
"203 562 CURVE SMOOTH",
"203 490 OFFCURVE",
"204.5 428.167 OFFCURVE",
"206.5 371.5 CURVE SMOOTH",
"208.049 327.612 OFFCURVE",
"211.921 252.07 OFFCURVE",
"213 210 CURVE SMOOTH",
"213.999 148.066 OFFCURVE",
"215.965 65.046 OFFCURVE",
"216.5 34 CURVE SMOOTH",
"216.993 5.395 OFFCURVE",
"217 -35.248 OFFCURVE",
"217 -54 CURVE SMOOTH",
"217 -174.667 OFFCURVE",
"182.333 -235 OFFCURVE",
"113 -235 CURVE SMOOTH",
"82.333 -235 OFFCURVE",
"61.667 -225.333 OFFCURVE",
"31 -188 CURVE",
"29.667 -187.333 OFFCURVE",
"26.333 -187 OFFCURVE",
"21 -187 CURVE SMOOTH",
"7 -187 OFFCURVE",
"0 -192.667 OFFCURVE",
"0 -204 CURVE SMOOTH",
"0 -246.072 OFFCURVE",
"97.889 -283 OFFCURVE",
"134 -283 CURVE SMOOTH",
"212.085 -283 OFFCURVE",
"266 -202.653 OFFCURVE",
"266 -109 CURVE SMOOTH",
"266 -25 OFFCURVE",
"263 90.667 OFFCURVE",
"259 204 CURVE SMOOTH",
"255 317.333 OFFCURVE",
"252 429.667 OFFCURVE",
"252 507 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 34 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
5 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
22 931 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 931 51 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 463;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = ordfeminine;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"260 504 OFFCURVE",
"222.667 555 OFFCURVE",
"148 555 CURVE SMOOTH",
"102.667 555 OFFCURVE",
"66 523.333 OFFCURVE",
"66 478 CURVE SMOOTH",
"66 464.667 OFFCURVE",
"84.667 449 OFFCURVE",
"98 449 CURVE SMOOTH",
"109.333 449 OFFCURVE",
"115 454 OFFCURVE",
"115 464 CURVE SMOOTH",
"115 494 OFFCURVE",
"131 509 OFFCURVE",
"163 509 CURVE SMOOTH",
"187.667 509 OFFCURVE",
"200 488 OFFCURVE",
"200 446 CURVE SMOOTH",
"200 427 LINE",
"189.333 429.667 OFFCURVE",
"176.333 431 OFFCURVE",
"161 431 CURVE SMOOTH",
"116.314 431 OFFCURVE",
"45 398.597 OFFCURVE",
"45 356 CURVE SMOOTH",
"45 321.091 OFFCURVE",
"94.157 293 OFFCURVE",
"138 293 CURVE SMOOTH",
"159.333 293 OFFCURVE",
"180 298 OFFCURVE",
"200 308 CURVE",
"200 285.333 OFFCURVE",
"206 274 OFFCURVE",
"230 274 CURVE SMOOTH",
"256.667 274 OFFCURVE",
"261 300.333 OFFCURVE",
"261 347 CURVE SMOOTH",
"261 355 OFFCURVE",
"260.833 363.5 OFFCURVE",
"260.5 372.5 CURVE SMOOTH",
"260.167 381.5 OFFCURVE",
"260 391.333 OFFCURVE",
"260 402 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"200 358.667 OFFCURVE",
"170.667 338 OFFCURVE",
"140 338 CURVE SMOOTH",
"118 338 OFFCURVE",
"107 344.333 OFFCURVE",
"107 357 CURVE SMOOTH",
"107 380.333 OFFCURVE",
"132 392 OFFCURVE",
"182 392 CURVE SMOOTH",
"194 392 OFFCURVE",
"200 388 OFFCURVE",
"200 380 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 934 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 38 106 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 38 25 38 41 38 57 38 73 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 42 22 42 38 42 54 42 70 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 42 101 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 932 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
44 931 6 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 930 26 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 928 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 6 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 306;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"259 466.667 OFFCURVE",
"244.667 504.333 OFFCURVE",
"216 531 CURVE",
"201.333 545.667 OFFCURVE",
"177 563 OFFCURVE",
"153 563 CURVE SMOOTH",
"91.552 563 OFFCURVE",
"45 478.529 OFFCURVE",
"45 404 CURVE SMOOTH",
"45 328 OFFCURVE",
"82.333 282 OFFCURVE",
"149 282 CURVE SMOOTH",
"215.313 282 OFFCURVE",
"259 343.706 OFFCURVE",
"259 418 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"206 364.333 OFFCURVE",
"186.333 326 OFFCURVE",
"149 326 CURVE SMOOTH",
"117.667 326 OFFCURVE",
"102 352.667 OFFCURVE",
"102 406 CURVE SMOOTH",
"102 466 OFFCURVE",
"126 511 OFFCURVE",
"162 511 CURVE SMOOTH",
"191.333 511 OFFCURVE",
"206 480.333 OFFCURVE",
"206 419 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 18 106 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 18 25 18 41 18 57 18 73 18 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
23 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 23 22 23 38 23 54 23 70 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 23 101 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
25 930 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 931 20 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 304;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = approxequal;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"403.333 275.333 OFFCURVE",
"394 281 OFFCURVE",
"382 281 CURVE SMOOTH",
"369.381 281 OFFCURVE",
"308.823 231 OFFCURVE",
"287 231 CURVE SMOOTH",
"245.018 231 OFFCURVE",
"209.623 281 OFFCURVE",
"164 281 CURVE SMOOTH",
"132.589 281 OFFCURVE",
"34 227.767 OFFCURVE",
"34 200 CURVE SMOOTH",
"34 186.667 OFFCURVE",
"41 180 OFFCURVE",
"55 180 CURVE",
"0 0 OFFCURVE",
"73.11 192.92 OFFCURVE",
"89 202 CURVE SMOOTH",
"107.667 212.667 OFFCURVE",
"130 223 OFFCURVE",
"146 223 CURVE SMOOTH",
"175.754 223 OFFCURVE",
"229.404 177 OFFCURVE",
"275 177 CURVE SMOOTH",
"304.653 177 OFFCURVE",
"402 231.813 OFFCURVE",
"402 262 CURVE"
);
},
{
closed = 1;
nodes = (
"410 460.667 OFFCURVE",
"403.333 467 OFFCURVE",
"390 467 CURVE SMOOTH",
"380.535 467 OFFCURVE",
"305.425 411 OFFCURVE",
"287 411 CURVE SMOOTH",
"245.018 411 OFFCURVE",
"209.623 461 OFFCURVE",
"164 461 CURVE SMOOTH",
"132.241 461 OFFCURVE",
"37 412.306 OFFCURVE",
"37 383 CURVE SMOOTH",
"37 369.667 OFFCURVE",
"44 363 OFFCURVE",
"58 363 CURVE",
"58 370.755 OFFCURVE",
"131.331 403 OFFCURVE",
"146 403 CURVE SMOOTH",
"175.754 403 OFFCURVE",
"229.404 357 OFFCURVE",
"275 357 CURVE SMOOTH",
"307.361 357 OFFCURVE",
"410 418.711 OFFCURVE",
"410 448 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
27 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 931 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 931 45 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 931 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 439;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = divide;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"500 364.667 OFFCURVE",
"497.667 368.333 OFFCURVE",
"493 371 CURVE",
"467.667 365 OFFCURVE",
"447.333 362 OFFCURVE",
"432 362 CURVE SMOOTH",
"152 362 LINE SMOOTH",
"109.872 362 OFFCURVE",
"88.175 370 OFFCURVE",
"46 370 CURVE SMOOTH",
"32.667 370 OFFCURVE",
"20 350.667 OFFCURVE",
"20 336 CURVE SMOOTH",
"20 328 OFFCURVE",
"22.333 319.667 OFFCURVE",
"27 311 CURVE",
"454 311 LINE SMOOTH",
"484.667 311 OFFCURVE",
"500 327.333 OFFCURVE",
"500 360 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"309 549 OFFCURVE",
"286 569 OFFCURVE",
"266 569 CURVE SMOOTH",
"235.333 569 OFFCURVE",
"207 553.667 OFFCURVE",
"207 527 CURVE SMOOTH",
"207 505.667 OFFCURVE",
"236.667 486 OFFCURVE",
"258 486 CURVE SMOOTH",
"284.667 486 OFFCURVE",
"309 503.667 OFFCURVE",
"309 529 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"300 171 OFFCURVE",
"270 193 OFFCURVE",
"242 193 CURVE SMOOTH",
"227.333 193 OFFCURVE",
"207 169 OFFCURVE",
"207 153 CURVE SMOOTH",
"207 130.847 OFFCURVE",
"243.241 103 OFFCURVE",
"265 103 CURVE SMOOTH",
"282.333 103 OFFCURVE",
"300 125.667 OFFCURVE",
"300 143 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 30 22 30 38 30 54 30 70 30 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 30 101 30 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
41 931 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 931 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 931 2 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 520;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = lozenge;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"403.667 379.667 OFFCURVE",
"398.667 392 OFFCURVE",
"380 392 CURVE SMOOTH",
"376 392 OFFCURVE",
"372.667 391.667 OFFCURVE",
"370 391 CURVE",
"332.332 473.098 OFFCURVE",
"286.891 574.077 OFFCURVE",
"273.5 603 CURVE SMOOTH",
"262.528 626.699 OFFCURVE",
"249.343 654.314 OFFCURVE",
"246 661 CURVE",
"246.667 663.667 OFFCURVE",
"247 667.333 OFFCURVE",
"247 672 CURVE SMOOTH",
"247 687.333 OFFCURVE",
"239.667 695 OFFCURVE",
"225 695 CURVE SMOOTH",
"197.096 695 OFFCURVE",
"174.061 666.488 OFFCURVE",
"171 642 CURVE",
"168.333 626.667 OFFCURVE",
"157 594.167 OFFCURVE",
"137 544.5 CURVE SMOOTH",
"117 494.833 OFFCURVE",
"86.667 429 OFFCURVE",
"46 347 CURVE",
"36.667 335 OFFCURVE",
"22 319 OFFCURVE",
"22 307 CURVE SMOOTH",
"22 296.333 OFFCURVE",
"28.333 291 OFFCURVE",
"41 291 CURVE SMOOTH",
"44.333 291 OFFCURVE",
"48.333 292.333 OFFCURVE",
"53 295 CURVE",
"146.333 87.667 OFFCURVE",
"207 -16 OFFCURVE",
"235 -16 CURVE SMOOTH",
"247.667 -16 OFFCURVE",
"254 -10.667 OFFCURVE",
"254 0 CURVE SMOOTH",
"254 6 OFFCURVE",
"250 14 OFFCURVE",
"242 24 CURVE",
"252.667 40 OFFCURVE",
"271.167 74.833 OFFCURVE",
"297.5 128.5 CURVE SMOOTH",
"323.833 182.167 OFFCURVE",
"359.667 259.667 OFFCURVE",
"405 361 CURVE"
);
},
{
closed = 1;
nodes = (
"143.333 435.333 OFFCURVE",
"187 527.667 OFFCURVE",
"219 621 CURVE",
"275 485 OFFCURVE",
"312.333 402.667 OFFCURVE",
"335 360 CURVE",
"302.961 247.863 OFFCURVE",
"280.702 178.837 OFFCURVE",
"213 66 CURVE",
"161 155.333 OFFCURVE",
"116.667 240.667 OFFCURVE",
"94 350 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
41 7 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 7 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 436;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = fraction;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"258 659 OFFCURVE",
"234 675 OFFCURVE",
"214 675 CURVE SMOOTH",
"195.333 675 OFFCURVE",
"187.333 649.333 OFFCURVE",
"182 628 CURVE",
"168.667 601.333 OFFCURVE",
"144 553.333 OFFCURVE",
"108 484 CURVE SMOOTH",
"52 376 OFFCURVE",
"3 262.667 OFFCURVE",
"-45 136 CURVE SMOOTH",
"-58.333 100 OFFCURVE",
"-67 74.333 OFFCURVE",
"-71 59 CURVE SMOOTH",
"-75 43.667 OFFCURVE",
"-77 34.333 OFFCURVE",
"-77 31 CURVE SMOOTH",
"-77 3.525 OFFCURVE",
"-56.629 -8 OFFCURVE",
"-45 -8 CURVE SMOOTH",
"-35 -8 OFFCURVE",
"-30 -3.333 OFFCURVE",
"-30 6 CURVE SMOOTH",
"-30 8.667 OFFCURVE",
"-32.167 11.833 OFFCURVE",
"-36.5 15.5 CURVE SMOOTH",
"-40.833 19.167 OFFCURVE",
"-43 22.333 OFFCURVE",
"-43 25 CURVE SMOOTH",
"-43 31 OFFCURVE",
"-32 64.667 OFFCURVE",
"-10 126 CURVE SMOOTH",
"34 247.333 OFFCURVE",
"86.333 361.333 OFFCURVE",
"141 464 CURVE SMOOTH",
"167 514 OFFCURVE",
"189.5 552.5 OFFCURVE",
"208.5 579.5 CURVE SMOOTH",
"227.5 606.5 OFFCURVE",
"242.333 623 OFFCURVE",
"253 629 CURVE SMOOTH",
"256.333 631 OFFCURVE",
"258 634.333 OFFCURVE",
"258 639 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 162;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = Euro;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"544 123 OFFCURVE",
"537 128 OFFCURVE",
"523 128 CURVE SMOOTH",
"513.667 128 OFFCURVE",
"505 125 OFFCURVE",
"497 119 CURVE",
"460.333 54.333 OFFCURVE",
"404.667 22 OFFCURVE",
"330 22 CURVE SMOOTH",
"228.667 22 OFFCURVE",
"167 80.667 OFFCURVE",
"145 198 CURVE SMOOTH",
"139.667 227.333 OFFCURVE",
"137 246 OFFCURVE",
"137 254 CURVE",
"138 280 LINE",
"341 280 LINE SMOOTH",
"352.333 280 OFFCURVE",
"358 285.667 OFFCURVE",
"358 297 CURVE SMOOTH",
"358 313.667 OFFCURVE",
"352.333 322 OFFCURVE",
"341 322 CURVE SMOOTH",
"140 322 LINE",
"141.333 341.333 OFFCURVE",
"143.667 360 OFFCURVE",
"147 378 CURVE",
"318 378 LINE SMOOTH",
"329.333 378 OFFCURVE",
"335 383.667 OFFCURVE",
"335 395 CURVE SMOOTH",
"335 411.667 OFFCURVE",
"329.333 420 OFFCURVE",
"318 420 CURVE SMOOTH",
"156 420 LINE",
"170.667 480 OFFCURVE",
"194.333 529 OFFCURVE",
"227 567 CURVE SMOOTH",
"266.333 613 OFFCURVE",
"313.333 636 OFFCURVE",
"368 636 CURVE SMOOTH",
"389.333 636 OFFCURVE",
"411.333 628.667 OFFCURVE",
"434 614 CURVE SMOOTH",
"448 604.667 OFFCURVE",
"464 591 OFFCURVE",
"482 573 CURVE SMOOTH",
"496.667 558.333 OFFCURVE",
"505 551 OFFCURVE",
"507 551 CURVE SMOOTH",
"519 551 OFFCURVE",
"531 565.667 OFFCURVE",
"531 579 CURVE SMOOTH",
"531 583 OFFCURVE",
"529.667 587 OFFCURVE",
"527 591 CURVE",
"495 647 OFFCURVE",
"426.333 684 OFFCURVE",
"361 684 CURVE SMOOTH",
"293.667 684 OFFCURVE",
"236.333 655.667 OFFCURVE",
"189 599 CURVE SMOOTH",
"149.667 553 OFFCURVE",
"121.333 493.333 OFFCURVE",
"104 420 CURVE",
"100 420 OFFCURVE",
"93.167 420.333 OFFCURVE",
"83.5 421 CURVE SMOOTH",
"73.833 421.667 OFFCURVE",
"66.667 422 OFFCURVE",
"62 422 CURVE SMOOTH",
"34 422 OFFCURVE",
"20 415.667 OFFCURVE",
"20 403 CURVE SMOOTH",
"20 386.333 OFFCURVE",
"25.667 378 OFFCURVE",
"37 378 CURVE SMOOTH",
"96 378 LINE",
"92.667 359.333 OFFCURVE",
"90.333 340.667 OFFCURVE",
"89 322 CURVE",
"52.333 324 OFFCURVE",
"34 318.333 OFFCURVE",
"34 305 CURVE SMOOTH",
"34 287.667 OFFCURVE",
"43 279 OFFCURVE",
"61 279 CURVE",
"55.667 279 OFFCURVE",
"64.667 279.333 OFFCURVE",
"88 280 CURVE",
"88 125.333 OFFCURVE",
"143.667 31 OFFCURVE",
"255 -3 CURVE SMOOTH",
"285 -13 OFFCURVE",
"310.667 -18 OFFCURVE",
"332 -18 CURVE SMOOTH",
"378 -18 OFFCURVE",
"416.667 -8 OFFCURVE",
"448 12 CURVE SMOOTH",
"472.667 27.333 OFFCURVE",
"501.667 55.333 OFFCURVE",
"535 96 CURVE SMOOTH",
"541 103.333 OFFCURVE",
"544 109 OFFCURVE",
"544 113 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
63 934 14 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 14 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
30 931 44 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 928 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 928 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
67 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 67 119 67 135 67 151 67 167 67 183 67 199 67 215 67 231 67 247 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 67 23 67 39 67 55 67 71 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 67 102 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 564;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = daggerdbl;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"40.667 158 OFFCURVE",
"31 151.667 OFFCURVE",
"31 145 CURVE SMOOTH",
"31 123 OFFCURVE",
"57 109.667 OFFCURVE",
"109 105 CURVE",
"110.333 102.333 OFFCURVE",
"111 99.667 OFFCURVE",
"111 97 CURVE SMOOTH",
"111 94.333 OFFCURVE",
"111 91.667 OFFCURVE",
"111 89 CURVE SMOOTH",
"111 78.333 OFFCURVE",
"109.167 68.667 OFFCURVE",
"105.5 60 CURVE SMOOTH",
"101.833 51.333 OFFCURVE",
"100 42.333 OFFCURVE",
"100 33 CURVE SMOOTH",
"100 9 OFFCURVE",
"120 -9 OFFCURVE",
"144 -9 CURVE SMOOTH",
"176 -9 OFFCURVE",
"188 4.333 OFFCURVE",
"188 27 CURVE SMOOTH",
"188 40.454 OFFCURVE",
"173 83.958 OFFCURVE",
"173 94 CURVE SMOOTH",
"173 135.334 OFFCURVE",
"265 102.567 OFFCURVE",
"265 154 CURVE SMOOTH",
"265 166.235 OFFCURVE",
"231.578 174 OFFCURVE",
"221 174 CURVE",
"183 180 LINE",
"179 242.667 OFFCURVE",
"175 307 OFFCURVE",
"175 383 CURVE SMOOTH",
"175 425.667 OFFCURVE",
"177.333 472.333 OFFCURVE",
"180 523 CURVE",
"213.333 528.333 OFFCURVE",
"235.833 533.333 OFFCURVE",
"247.5 538 CURVE SMOOTH",
"259.167 542.667 OFFCURVE",
"265 547.667 OFFCURVE",
"265 553 CURVE SMOOTH",
"265 574.333 OFFCURVE",
"239 587.667 OFFCURVE",
"187 593 CURVE",
"185.667 595.667 OFFCURVE",
"185 598.333 OFFCURVE",
"185 601 CURVE SMOOTH",
"185 603.667 OFFCURVE",
"185 606.333 OFFCURVE",
"185 609 CURVE SMOOTH",
"185 619.667 OFFCURVE",
"186.833 629.333 OFFCURVE",
"190.5 638 CURVE SMOOTH",
"194.167 646.667 OFFCURVE",
"196 655.667 OFFCURVE",
"196 665 CURVE SMOOTH",
"196 689 OFFCURVE",
"176 707 OFFCURVE",
"152 707 CURVE SMOOTH",
"120 707 OFFCURVE",
"108 693.667 OFFCURVE",
"108 671 CURVE SMOOTH",
"108 657.546 OFFCURVE",
"123 614.042 OFFCURVE",
"123 604 CURVE SMOOTH",
"123 562.666 OFFCURVE",
"31 595.433 OFFCURVE",
"31 544 CURVE SMOOTH",
"31 531.765 OFFCURVE",
"64.422 524 OFFCURVE",
"75 524 CURVE",
"113 518 LINE",
"119.667 460.667 OFFCURVE",
"125 398 OFFCURVE",
"125 326 CURVE SMOOTH",
"125 279.333 OFFCURVE",
"122.667 231 OFFCURVE",
"116 175 CURVE",
"89.333 171 OFFCURVE",
"70.667 166.667 OFFCURVE",
"60 164 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
45 15 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 45 22 45 38 45 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 45 69 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
64 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
67 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 290;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = apple;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"551 797.333 OFFCURVE",
"550 804.333 OFFCURVE",
"548 811 CURVE",
"440 785.667 OFFCURVE",
"385.333 718 OFFCURVE",
"384 608 CURVE",
"408 610 OFFCURVE",
"425 612.667 OFFCURVE",
"435 616 CURVE SMOOTH",
"466.333 626.667 OFFCURVE",
"493.667 650.333 OFFCURVE",
"517 687 CURVE SMOOTH",
"539.667 721.667 OFFCURVE",
"551 756 OFFCURVE",
"551 790 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"705 212 OFFCURVE",
"677.333 235 OFFCURVE",
"656 271 CURVE SMOOTH",
"635.333 304.333 OFFCURVE",
"625 339.667 OFFCURVE",
"625 377 CURVE SMOOTH",
"625 415 OFFCURVE",
"636 449.333 OFFCURVE",
"658 480 CURVE SMOOTH",
"670 497.333 OFFCURVE",
"689 517.333 OFFCURVE",
"715 540 CURVE",
"670.333 594.667 OFFCURVE",
"617.333 622 OFFCURVE",
"556 622 CURVE SMOOTH",
"536 622 OFFCURVE",
"508.5 616.333 OFFCURVE",
"473.5 605 CURVE SMOOTH",
"438.5 593.667 OFFCURVE",
"413.333 588 OFFCURVE",
"398 588 CURVE SMOOTH",
"384.667 588 OFFCURVE",
"360.167 593 OFFCURVE",
"324.5 603 CURVE SMOOTH",
"288.833 613 OFFCURVE",
"260.667 618 OFFCURVE",
"240 618 CURVE SMOOTH",
"176 618 OFFCURVE",
"125.667 589.667 OFFCURVE",
"89 533 CURVE SMOOTH",
"57 485 OFFCURVE",
"41 427 OFFCURVE",
"41 359 CURVE SMOOTH",
"41 291 OFFCURVE",
"61.667 214 OFFCURVE",
"103 128 CURVE SMOOTH",
"151.667 28 OFFCURVE",
"205.667 -22 OFFCURVE",
"265 -22 CURVE SMOOTH",
"280.333 -22 OFFCURVE",
"302.833 -16.5 OFFCURVE",
"332.5 -5.5 CURVE SMOOTH",
"362.167 5.5 OFFCURVE",
"385.667 11 OFFCURVE",
"403 11 CURVE SMOOTH",
"420.333 11 OFFCURVE",
"444.833 5.833 OFFCURVE",
"476.5 -4.5 CURVE SMOOTH",
"508.167 -14.833 OFFCURVE",
"532.333 -20 OFFCURVE",
"549 -20 CURVE SMOOTH",
"591.667 -20 OFFCURVE",
"634.667 12.333 OFFCURVE",
"678 77 CURVE SMOOTH",
"706 120.333 OFFCURVE",
"726.333 162 OFFCURVE",
"739 202 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 6 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
58 6 74 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 6 25 6 41 6 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 772;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = dieresiscmb;
layers = (
{
components = (
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, -83, 0}";
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 36, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = dieresiscmb;
unicode = 0308;
},
{
glyphname = soliduslongoverlaycmb;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, -287, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = soliduslongoverlaycmb;
unicode = 0338;
},
{
glyphname = Schwa;
layers = (
{
components = (
{
name = SchwaCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 565;
}
);
note = Schwa;
unicode = 018F;
},
{
glyphname = OI;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"526 411 OFFCURVE",
"523.667 471 OFFCURVE",
"497 531 CURVE",
"518.333 525.667 OFFCURVE",
"535 523 OFFCURVE",
"551 523 CURVE SMOOTH",
"579 523 OFFCURVE",
"601.333 531.333 OFFCURVE",
"632 558 CURVE",
"630.842 485.067 OFFCURVE",
"630.094 351.21 OFFCURVE",
"629 267.5 CURVE SMOOTH",
"627.905 183.727 OFFCURVE",
"627.202 60.479 OFFCURVE",
"626 -2 CURVE SMOOTH",
"626 -19.333 OFFCURVE",
"628.667 -48.667 OFFCURVE",
"634 -90 CURVE SMOOTH",
"640 -136.667 OFFCURVE",
"657.333 -160 OFFCURVE",
"686 -160 CURVE SMOOTH",
"693.333 -160 OFFCURVE",
"703.333 -155.667 OFFCURVE",
"716 -147 CURVE",
"696 -118.333 OFFCURVE",
"686 -56 OFFCURVE",
"686 40 CURVE SMOOTH",
"686 78.667 OFFCURVE",
"686.5 135.167 OFFCURVE",
"688.5 198.5 CURVE SMOOTH",
"689.5 230.167 OFFCURVE",
"690.667 263.167 OFFCURVE",
"692 297.5 CURVE SMOOTH",
"694.667 366.167 OFFCURVE",
"698 433.167 OFFCURVE",
"702 492.5 CURVE SMOOTH",
"704 522.167 OFFCURVE",
"706 548.333 OFFCURVE",
"708 571 CURVE SMOOTH",
"709.748 589.067 OFFCURVE",
"725 640.168 OFFCURVE",
"725 641 CURVE SMOOTH",
"725 651.768 OFFCURVE",
"697.005 670 OFFCURVE",
"685 670 CURVE SMOOTH",
"667.097 670 OFFCURVE",
"633 642.219 OFFCURVE",
"633 624 CURVE SMOOTH",
"633 613 LINE",
"602.333 579.667 OFFCURVE",
"574 570 OFFCURVE",
"542 570 CURVE SMOOTH",
"520.667 570 OFFCURVE",
"496.667 574.667 OFFCURVE",
"470 580 CURVE",
"426 649.333 OFFCURVE",
"368.333 684 OFFCURVE",
"297 684 CURVE SMOOTH",
"208.333 684 OFFCURVE",
"138.667 638 OFFCURVE",
"88 546 CURVE SMOOTH",
"45.333 469.333 OFFCURVE",
"24 383 OFFCURVE",
"24 287 CURVE SMOOTH",
"24 117.667 OFFCURVE",
"77.667 23 OFFCURVE",
"191 -13 CURVE SMOOTH",
"219.667 -23 OFFCURVE",
"245.333 -28 OFFCURVE",
"268 -28 CURVE SMOOTH",
"364 -28 OFFCURVE",
"429 24.833 OFFCURVE",
"469 97.5 CURVE SMOOTH",
"509 170.167 OFFCURVE",
"526 261.667 OFFCURVE",
"526 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"470 197.693 OFFCURVE",
"422.793 22 OFFCURVE",
"266 22 CURVE SMOOTH",
"162 22 OFFCURVE",
"103.667 72.667 OFFCURVE",
"81 198 CURVE",
"74.333 227.333 OFFCURVE",
"73 247.333 OFFCURVE",
"73 258 CURVE SMOOTH",
"73 396.667 OFFCURVE",
"108 499.667 OFFCURVE",
"178 567 CURVE SMOOTH",
"219.333 606.333 OFFCURVE",
"261.333 626 OFFCURVE",
"304 626 CURVE SMOOTH",
"311.333 626 OFFCURVE",
"320.667 624 OFFCURVE",
"332 620 CURVE SMOOTH",
"439.983 584.978 OFFCURVE",
"470 505.015 OFFCURVE",
"470 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
79 932 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 933 59 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 59 106 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 59 25 59 41 59 57 59 73 59 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
65 68 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 79 22 79 38 79 54 79 70 79 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 79 101 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
85 49 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 931 75 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 931 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
59 62 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
65 62 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 765;
}
);
note = OI;
unicode = 01A2;
},
{
glyphname = oi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"335 249 OFFCURVE",
"328 293.667 OFFCURVE",
"312 331 CURVE",
"328 325 OFFCURVE",
"342.333 322 OFFCURVE",
"355 322 CURVE SMOOTH",
"375 322 OFFCURVE",
"394.333 332.333 OFFCURVE",
"413 353 CURVE",
"411.667 307 OFFCURVE",
"410.333 261.333 OFFCURVE",
"409 216 CURVE SMOOTH",
"407.667 170.667 OFFCURVE",
"407 124 OFFCURVE",
"407 76 CURVE SMOOTH",
"407 -28 OFFCURVE",
"409.333 -104.333 OFFCURVE",
"414 -153 CURVE SMOOTH",
"418.667 -201.667 OFFCURVE",
"431.667 -226 OFFCURVE",
"453 -226 CURVE SMOOTH",
"471.667 -226 OFFCURVE",
"481 -217.333 OFFCURVE",
"481 -200 CURVE SMOOTH",
"481 -196 OFFCURVE",
"479.667 -190.5 OFFCURVE",
"477 -183.5 CURVE SMOOTH",
"474.333 -176.5 OFFCURVE",
"472.667 -172 OFFCURVE",
"472 -170 CURVE SMOOTH",
"460.688 -133.237 OFFCURVE",
"456 -92.774 OFFCURVE",
"456 -25 CURVE SMOOTH",
"456 -19.667 OFFCURVE",
"456.167 -2.5 OFFCURVE",
"456.5 26.5 CURVE SMOOTH",
"456.833 55.5 OFFCURVE",
"457 101.667 OFFCURVE",
"457 165 CURVE SMOOTH",
"457 246.333 OFFCURVE",
"461 309.667 OFFCURVE",
"469 355 CURVE",
"476 380 LINE SMOOTH",
"479.333 393.333 OFFCURVE",
"481 402 OFFCURVE",
"481 406 CURVE SMOOTH",
"481 424.667 OFFCURVE",
"457.667 440 OFFCURVE",
"439 440 CURVE SMOOTH",
"431 440 OFFCURVE",
"420.333 435.333 OFFCURVE",
"407 426 CURVE",
"407 420.667 OFFCURVE",
"407.667 412.333 OFFCURVE",
"409 403 CURVE",
"394.333 369.667 OFFCURVE",
"373.667 357 OFFCURVE",
"347 357 CURVE SMOOTH",
"328.333 357 OFFCURVE",
"308.333 362.667 OFFCURVE",
"287 374 CURVE",
"260.203 405.67 OFFCURVE",
"210.434 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"133.667 439 OFFCURVE",
"93 405.333 OFFCURVE",
"63 338 CURVE SMOOTH",
"36.333 282 OFFCURVE",
"25 225.667 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 43 OFFCURVE",
"79 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"232.333 -30 OFFCURVE",
"274 -4.333 OFFCURVE",
"304 47 CURVE SMOOTH",
"329.333 89.667 OFFCURVE",
"335 139.667 OFFCURVE",
"335 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 152.667 OFFCURVE",
"286 111.667 OFFCURVE",
"270 77 CURVE SMOOTH",
"248.667 31.667 OFFCURVE",
"218.333 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"115 9 OFFCURVE",
"80 74 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 278.349 OFFCURVE",
"126.579 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"264 384 OFFCURVE",
"287 315.333 OFFCURVE",
"287 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
70 933 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 932 52 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 52 106 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 52 25 52 41 52 57 52 73 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
55 52 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 62 106 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 62 25 62 41 62 57 62 73 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
59 62 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 70 22 70 38 70 54 70 70 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 70 101 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
20 929 57 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 928 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 57 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
59 57 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 506;
}
);
note = oi;
unicode = 01A3;
},
{
glyphname = Zstroke;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"531 378.133 OFFCURVE",
"479.094 391 OFFCURVE",
"440 391 CURVE SMOOTH",
"425.333 391 OFFCURVE",
"410.833 391 OFFCURVE",
"396.5 391 CURVE SMOOTH",
"382.167 391 OFFCURVE",
"368 390.667 OFFCURVE",
"354 390 CURVE",
"418.667 446 OFFCURVE",
"466.833 491.833 OFFCURVE",
"498.5 527.5 CURVE SMOOTH",
"530.167 563.167 OFFCURVE",
"546 593.667 OFFCURVE",
"546 619 CURVE SMOOTH",
"546 642.215 OFFCURVE",
"521.803 685.883 OFFCURVE",
"503 702 CURVE SMOOTH",
"483.667 718 OFFCURVE",
"459 726 OFFCURVE",
"429 726 CURVE SMOOTH",
"379 726 OFFCURVE",
"310 712 OFFCURVE",
"222 684 CURVE SMOOTH",
"138 656.667 OFFCURVE",
"73 629 OFFCURVE",
"27 601 CURVE",
"27 590 LINE SMOOTH",
"27 556.667 OFFCURVE",
"35.333 540 OFFCURVE",
"52 540 CURVE",
"0 0 OFFCURVE",
"67.195 549.505 OFFCURVE",
"81 558 CURVE SMOOTH",
"95.564 566.962 OFFCURVE",
"124.788 584.569 OFFCURVE",
"144 597 CURVE SMOOTH",
"212.38 640.054 OFFCURVE",
"352.34 678 OFFCURVE",
"432 678 CURVE SMOOTH",
"474 678 OFFCURVE",
"495 664.333 OFFCURVE",
"495 637 CURVE SMOOTH",
"495 606.634 OFFCURVE",
"445.05 528.253 OFFCURVE",
"402 492 CURVE SMOOTH",
"338 436 OFFCURVE",
"298.333 407.667 OFFCURVE",
"273 389 CURVE",
"191 387 OFFCURVE",
"108.667 383 OFFCURVE",
"26 377 CURVE",
"20.667 377 OFFCURVE",
"16 371.667 OFFCURVE",
"16 369 CURVE SMOOTH",
"16 346.774 OFFCURVE",
"23.622 309 OFFCURVE",
"53 309 CURVE SMOOTH",
"68.333 309 OFFCURVE",
"83.167 312.5 OFFCURVE",
"97.5 319.5 CURVE SMOOTH",
"111.833 326.5 OFFCURVE",
"128.333 331.667 OFFCURVE",
"147 335 CURVE SMOOTH",
"155 336.333 OFFCURVE",
"164.167 337.167 OFFCURVE",
"174.5 337.5 CURVE SMOOTH",
"184.833 337.833 OFFCURVE",
"196 338.333 OFFCURVE",
"208 339 CURVE",
"111.236 264.008 OFFCURVE",
"20 186.098 OFFCURVE",
"20 98 CURVE SMOOTH",
"20 24.667 OFFCURVE",
"88.667 -18 OFFCURVE",
"190 -18 CURVE SMOOTH",
"192 -18 OFFCURVE",
"199.5 -17.167 OFFCURVE",
"212.5 -15.5 CURVE SMOOTH",
"225.5 -13.833 OFFCURVE",
"244.333 -11.333 OFFCURVE",
"269 -8 CURVE SMOOTH",
"432 11 LINE",
"437.333 11 OFFCURVE",
"445.167 9.333 OFFCURVE",
"455.5 6 CURVE SMOOTH",
"465.833 2.667 OFFCURVE",
"473.667 1 OFFCURVE",
"479 1 CURVE SMOOTH",
"487.667 1 OFFCURVE",
"495 5.667 OFFCURVE",
"501 15 CURVE",
"495.667 39 OFFCURVE",
"451.333 59 OFFCURVE",
"410 59 CURVE SMOOTH",
"354.632 59 OFFCURVE",
"177.59 36 OFFCURVE",
"121 36 CURVE SMOOTH",
"87.667 36 OFFCURVE",
"71 49.667 OFFCURVE",
"71 77 CURVE SMOOTH",
"71 117.667 OFFCURVE",
"112 175.667 OFFCURVE",
"194 251 CURVE SMOOTH",
"210.667 266.333 OFFCURVE",
"227.5 281.167 OFFCURVE",
"244.5 295.5 CURVE SMOOTH",
"261.5 309.833 OFFCURVE",
"278.667 324.667 OFFCURVE",
"296 340 CURVE",
"342 339.333 OFFCURVE",
"379.5 338.333 OFFCURVE",
"408.5 337 CURVE SMOOTH",
"437.5 335.667 OFFCURVE",
"458 333.333 OFFCURVE",
"470 330 CURVE",
"478 326 OFFCURVE",
"499.333 318 OFFCURVE",
"506 318 CURVE SMOOTH",
"526 318 OFFCURVE",
"531 322.667 OFFCURVE",
"531 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
102 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 14 22 14 38 14 54 14 70 14 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 14 101 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 65 106 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 65 25 65 41 65 57 65 73 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
91 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 52 91 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
94 52 91 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
84 931 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 931 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
97 931 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 16 119 16 135 16 151 16 167 16 183 16 199 16 215 16 231 16 247 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 16 23 16 39 16 55 16 71 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 16 102 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
97 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
97 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 566;
}
);
note = Zstroke;
unicode = 01B5;
},
{
glyphname = zstroke;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 221.333 OFFCURVE",
"310.667 235 OFFCURVE",
"284 235 CURVE SMOOTH",
"271.333 235 OFFCURVE",
"258.833 235 OFFCURVE",
"246.5 235 CURVE SMOOTH",
"234.167 235 OFFCURVE",
"221.667 234.667 OFFCURVE",
"209 234 CURVE",
"298 333 LINE",
"314 353 OFFCURVE",
"322 370.667 OFFCURVE",
"322 386 CURVE SMOOTH",
"322 411.333 OFFCURVE",
"302 424 OFFCURVE",
"262 424 CURVE SMOOTH",
"198.37 424 OFFCURVE",
"44 387.161 OFFCURVE",
"44 346 CURVE SMOOTH",
"44 324 OFFCURVE",
"52.333 313 OFFCURVE",
"69 313 CURVE",
"75 317 LINE",
"127 355.667 OFFCURVE",
"166.333 379 OFFCURVE",
"221 379 CURVE SMOOTH",
"235 379 OFFCURVE",
"245.667 376.333 OFFCURVE",
"253 371 CURVE",
"244.14 348.851 OFFCURVE",
"197.356 289.317 OFFCURVE",
"148 232 CURVE",
"138.286 232 OFFCURVE",
"13 226.692 OFFCURVE",
"13 215 CURVE SMOOTH",
"13 197.64 OFFCURVE",
"17.879 163 OFFCURVE",
"37 163 CURVE SMOOTH",
"47 163 OFFCURVE",
"58.667 166.333 OFFCURVE",
"72 173 CURVE SMOOTH",
"85.333 179.667 OFFCURVE",
"98 184.333 OFFCURVE",
"110 187 CURVE",
"54.812 119.076 OFFCURVE",
"25 67.143 OFFCURVE",
"25 38 CURVE SMOOTH",
"25 6 OFFCURVE",
"57 -13 OFFCURVE",
"93 -13 CURVE SMOOTH",
"113 -13 OFFCURVE",
"143.333 -10 OFFCURVE",
"182 -6 CURVE SMOOTH",
"246.556 0.247 OFFCURVE",
"315 -10.953 OFFCURVE",
"315 27 CURVE SMOOTH",
"315 44.333 OFFCURVE",
"300 63 OFFCURVE",
"292 63 CURVE",
"212.667 44.333 OFFCURVE",
"153 35 OFFCURVE",
"113 35 CURVE SMOOTH",
"96.333 35 OFFCURVE",
"85 38.667 OFFCURVE",
"79 46 CURVE",
"79.667 70.667 OFFCURVE",
"109.667 118.667 OFFCURVE",
"169 190 CURVE",
"205 190 OFFCURVE",
"234.167 189.333 OFFCURVE",
"256.5 188 CURVE SMOOTH",
"278.833 186.667 OFFCURVE",
"294.333 184 OFFCURVE",
"303 180 CURVE SMOOTH",
"305.667 178.667 OFFCURVE",
"309.667 176.667 OFFCURVE",
"315 174 CURVE SMOOTH",
"320.333 171.333 OFFCURVE",
"324 170 OFFCURVE",
"326 170 CURVE SMOOTH",
"339.333 170 OFFCURVE",
"342 174.667 OFFCURVE",
"342 196 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
65 930 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 930 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 13 23 13 39 13 55 13 71 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 13 102 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 347;
}
);
note = zstroke;
unicode = 01B6;
},
{
glyphname = schwa;
layers = (
{
components = (
{
name = schwaCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = schwa;
unicode = 0259;
},
{
glyphname = EgraveCyrillic;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 105, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = EgraveCyrillic;
unicode = 0400;
},
{
glyphname = IOCyrillic;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 103, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = IOCyrillic;
unicode = 0401;
},
{
glyphname = DJECyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"457.293 -6.257 OFFCURVE",
"500 90.98 OFFCURVE",
"500 193 CURVE SMOOTH",
"500 311.584 OFFCURVE",
"453.258 357.485 OFFCURVE",
"379 393 CURVE SMOOTH",
"351.599 406.701 OFFCURVE",
"303.388 415 OFFCURVE",
"282 415 CURVE SMOOTH",
"276.667 415 OFFCURVE",
"269.167 411.667 OFFCURVE",
"259.5 405 CURVE SMOOTH",
"249.833 398.333 OFFCURVE",
"237.667 387 OFFCURVE",
"223 371 CURVE",
"229.137 461.009 OFFCURVE",
"239.119 549.697 OFFCURVE",
"250.5 582.5 CURVE SMOOTH",
"261.833 615.167 OFFCURVE",
"274.333 618 OFFCURVE",
"293 618 CURVE SMOOTH",
"340.688 618 OFFCURVE",
"395.415 616.793 OFFCURVE",
"409 610 CURVE",
"423.667 604 OFFCURVE",
"431 600.333 OFFCURVE",
"431 599 CURVE",
"442.333 599 OFFCURVE",
"448 607.333 OFFCURVE",
"448 624 CURVE SMOOTH",
"448 656 OFFCURVE",
"409.333 672 OFFCURVE",
"332 672 CURVE SMOOTH",
"297.333 672 OFFCURVE",
"240.333 668.333 OFFCURVE",
"163 659 CURVE SMOOTH",
"70.333 647.667 OFFCURVE",
"20.667 636.333 OFFCURVE",
"14 625 CURVE",
"22 603.667 OFFCURVE",
"39.333 593 OFFCURVE",
"66 593 CURVE SMOOTH",
"88.177 593 OFFCURVE",
"150.774 607 OFFCURVE",
"173 607 CURVE SMOOTH",
"181.667 607 OFFCURVE",
"186 602 OFFCURVE",
"186 592 CURVE SMOOTH",
"184.667 541.333 OFFCURVE",
"182.333 494 OFFCURVE",
"177 438 CURVE SMOOTH",
"167.022 338.217 OFFCURVE",
"162 262.956 OFFCURVE",
"162 224 CURVE SMOOTH",
"162 80.174 OFFCURVE",
"158.136 -17 OFFCURVE",
"234 -17 CURVE SMOOTH",
"240.667 -17 OFFCURVE",
"244 -12.333 OFFCURVE",
"244 -3 CURVE",
"226 27 OFFCURVE",
"217 85 OFFCURVE",
"217 171 CURVE SMOOTH",
"217 184.333 OFFCURVE",
"217 197.667 OFFCURVE",
"217 211 CURVE SMOOTH",
"217 224.333 OFFCURVE",
"217.333 237.667 OFFCURVE",
"218 251 CURVE",
"227.9 305.451 OFFCURVE",
"265.162 370 OFFCURVE",
"309 370 CURVE SMOOTH",
"396.029 370 OFFCURVE",
"452 295.898 OFFCURVE",
"452 207 CURVE SMOOTH",
"452 119 OFFCURVE",
"418 43.667 OFFCURVE",
"334 9 CURVE",
"333.333 7 OFFCURVE",
"333 3.667 OFFCURVE",
"333 -1 CURVE SMOOTH",
"333 -17.667 OFFCURVE",
"341.333 -29 OFFCURVE",
"358 -35 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 934 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 932 7 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 7 106 7 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 7 121 7 137 7 153 7 169 7 185 7 201 7 217 7 233 7 249 7 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 7 25 7 41 7 57 7 73 7 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 67 22 67 38 67 54 67 70 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 67 101 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
51 931 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
70 930 12 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
67 12 70 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 528;
}
);
note = DJECyrillic;
unicode = 0402;
},
{
glyphname = GjeCyrillic;
layers = (
{
components = (
{
name = Gamma;
},
{
name = acute;
transform = "{1, 0, 0, 1, 138, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 428;
}
);
note = GjeCyrillic;
unicode = 0403;
},
{
glyphname = IECyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"353 324.667 OFFCURVE",
"319 339 OFFCURVE",
"291 339 CURVE SMOOTH",
"257 339 OFFCURVE",
"223.667 338 OFFCURVE",
"191 336 CURVE SMOOTH",
"158.333 334 OFFCURVE",
"125 332 OFFCURVE",
"91 330 CURVE",
"77.667 330 OFFCURVE",
"77 336.333 OFFCURVE",
"77 343 CURVE",
"91.369 486.686 OFFCURVE",
"174.469 649 OFFCURVE",
"262 649 CURVE SMOOTH",
"331.308 649 OFFCURVE",
"375 557.02 OFFCURVE",
"375 492 CURVE SMOOTH",
"375 484 OFFCURVE",
"374.333 473.667 OFFCURVE",
"373 463 CURVE",
"367.667 457.667 OFFCURVE",
"363.667 451 OFFCURVE",
"361 443 CURVE",
"367 428.333 OFFCURVE",
"377 421 OFFCURVE",
"391 421 CURVE SMOOTH",
"399.667 421 OFFCURVE",
"406.833 425.333 OFFCURVE",
"412.5 434 CURVE SMOOTH",
"418.167 442.667 OFFCURVE",
"421 457 OFFCURVE",
"421 477 CURVE SMOOTH",
"421 586.12 OFFCURVE",
"368.294 694 OFFCURVE",
"258 694 CURVE SMOOTH",
"196.667 694 OFFCURVE",
"141.333 650.5 OFFCURVE",
"100 584.5 CURVE SMOOTH",
"58.667 518.5 OFFCURVE",
"30 429 OFFCURVE",
"22 337 CURVE",
"22 322.238 OFFCURVE",
"0 325.389 OFFCURVE",
"0 305 CURVE SMOOTH",
"0 299 OFFCURVE",
"3.333 291.167 OFFCURVE",
"10 281.5 CURVE SMOOTH",
"16.667 271.833 OFFCURVE",
"20 262.333 OFFCURVE",
"20 253 CURVE",
"27.734 90.583 OFFCURVE",
"105.82 -20 OFFCURVE",
"246 -20 CURVE SMOOTH",
"357.085 -20 OFFCURVE",
"468 58.393 OFFCURVE",
"468 154 CURVE SMOOTH",
"468 168.667 OFFCURVE",
"461.333 176 OFFCURVE",
"448 176 CURVE SMOOTH",
"428.003 176 OFFCURVE",
"414.704 135.815 OFFCURVE",
"411 121 CURVE",
"385.667 57 OFFCURVE",
"319.333 20 OFFCURVE",
"250 20 CURVE SMOOTH",
"128.667 20 OFFCURVE",
"74 108.667 OFFCURVE",
"74 270 CURVE SMOOTH",
"74 289.612 OFFCURVE",
"115.908 291 OFFCURVE",
"143 291 CURVE SMOOTH",
"189 291 OFFCURVE",
"226 290.333 OFFCURVE",
"254 289 CURVE SMOOTH",
"282 287.667 OFFCURVE",
"301 285 OFFCURVE",
"311 281 CURVE SMOOTH",
"316.333 279 OFFCURVE",
"321.667 276.667 OFFCURVE",
"327 274 CURVE SMOOTH",
"332.333 271.333 OFFCURVE",
"336.667 270 OFFCURVE",
"340 270 CURVE SMOOTH",
"343.333 270 OFFCURVE",
"346.333 271.833 OFFCURVE",
"349 275.5 CURVE SMOOTH",
"351.667 279.167 OFFCURVE",
"353 286.667 OFFCURVE",
"353 298 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 934 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 932 65 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 14 22 14 38 14 54 14 70 14 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 14 101 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 65 106 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 65 25 65 41 65 57 65 73 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
81 931 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 17 119 17 135 17 151 17 167 17 183 17 199 17 215 17 231 17 247 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 17 23 17 39 17 55 17 71 17 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 17 102 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 25 23 25 39 25 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 25 70 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 70 105 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 70 120 70 136 70 152 70 168 70 184 70 200 70 216 70 232 70 248 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 70 24 70 40 70 56 70 72 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 478;
}
);
note = IECyrillic;
unicode = 0404;
},
{
glyphname = DzeCyrillic;
layers = (
{
components = (
{
name = S;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = DzeCyrillic;
unicode = 0405;
},
{
glyphname = ICyrillic;
layers = (
{
components = (
{
name = I;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = ICyrillic;
unicode = 0406;
},
{
glyphname = YiCyrillic;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -38, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = YiCyrillic;
unicode = 0407;
},
{
glyphname = JeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"371 665.333 OFFCURVE",
"358 677 OFFCURVE",
"334 677 CURVE SMOOTH",
"319.333 677 OFFCURVE",
"304 668.667 OFFCURVE",
"304 646 CURVE SMOOTH",
"304 372 LINE SMOOTH",
"304 150.667 OFFCURVE",
"266.667 40 OFFCURVE",
"192 40 CURVE SMOOTH",
"141.866 40 OFFCURVE",
"91 104.83 OFFCURVE",
"91 153 CURVE SMOOTH",
"91 161 OFFCURVE",
"91.333 172.167 OFFCURVE",
"92 186.5 CURVE SMOOTH",
"92.667 200.833 OFFCURVE",
"93 212.333 OFFCURVE",
"93 221 CURVE SMOOTH",
"93 271.667 OFFCURVE",
"78 297 OFFCURVE",
"48 297 CURVE SMOOTH",
"29.333 297 OFFCURVE",
"20 269.667 OFFCURVE",
"20 215 CURVE SMOOTH",
"20 117.021 OFFCURVE",
"109.714 -12 OFFCURVE",
"198 -12 CURVE SMOOTH",
"252 -12 OFFCURVE",
"292.333 20.333 OFFCURVE",
"319 85 CURVE SMOOTH",
"335 125 OFFCURVE",
"346.833 181.5 OFFCURVE",
"355.5 263.5 CURVE SMOOTH",
"364.167 345.5 OFFCURVE",
"368 452 OFFCURVE",
"368 592 CURVE SMOOTH",
"368 597.333 OFFCURVE",
"368.833 604.667 OFFCURVE",
"370.5 614 CURVE SMOOTH",
"372.167 623.333 OFFCURVE",
"373 632.667 OFFCURVE",
"373 642 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
22 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 22 22 22 38 22 54 22 70 22 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 22 101 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
27 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 27 23 27 39 27 55 27 71 27 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 27 102 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 413;
}
);
note = JeCyrillic;
unicode = 0408;
},
{
glyphname = LjeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"568.255 408.881 OFFCURVE",
"573.331 500.725 OFFCURVE",
"578 544.5 CURVE SMOOTH",
"582.166 583.56 OFFCURVE",
"588.657 624.582 OFFCURVE",
"600 626 CURVE",
"605.333 627.333 OFFCURVE",
"612.333 628.167 OFFCURVE",
"621 628.5 CURVE SMOOTH",
"629.667 628.833 OFFCURVE",
"634 631.667 OFFCURVE",
"634 637 CURVE SMOOTH",
"634 651.902 OFFCURVE",
"604.591 670 OFFCURVE",
"590 670 CURVE SMOOTH",
"580.16 670 OFFCURVE",
"507.403 659.416 OFFCURVE",
"476 657 CURVE",
"435.84 651.98 OFFCURVE",
"347.642 641 OFFCURVE",
"332 641 CURVE SMOOTH",
"328 641 OFFCURVE",
"321.833 644 OFFCURVE",
"313.5 650 CURVE SMOOTH",
"305.167 656 OFFCURVE",
"299 659 OFFCURVE",
"295 659 CURVE SMOOTH",
"279.667 659 OFFCURVE",
"270.667 648.667 OFFCURVE",
"268 628 CURVE",
"264 624.667 OFFCURVE",
"259.333 622.667 OFFCURVE",
"254 622 CURVE SMOOTH",
"248.667 621.333 OFFCURVE",
"239 618.667 OFFCURVE",
"225 614 CURVE SMOOTH",
"205 607.333 OFFCURVE",
"200 599.333 OFFCURVE",
"200 586 CURVE SMOOTH",
"200 570 OFFCURVE",
"210 549 OFFCURVE",
"226 549 CURVE SMOOTH",
"229.333 549 OFFCURVE",
"234.5 551 OFFCURVE",
"241.5 555 CURVE SMOOTH",
"248.5 559 OFFCURVE",
"256.333 561.667 OFFCURVE",
"265 563 CURVE",
"265 372 LINE SMOOTH",
"265 150.667 OFFCURVE",
"227.667 40 OFFCURVE",
"153 40 CURVE SMOOTH",
"125.007 40 OFFCURVE",
"89.059 47.646 OFFCURVE",
"84 78 CURVE SMOOTH",
"76 120.667 OFFCURVE",
"54.667 142 OFFCURVE",
"36 142 CURVE SMOOTH",
"22.667 142 OFFCURVE",
"12 130.333 OFFCURVE",
"12 109 CURVE SMOOTH",
"12 97 OFFCURVE",
"16 82 OFFCURVE",
"24 64 CURVE SMOOTH",
"48.552 7.531 OFFCURVE",
"109.52 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"219 -12 OFFCURVE",
"261.167 23.5 OFFCURVE",
"288.5 109.5 CURVE SMOOTH",
"315.833 195.5 OFFCURVE",
"329 329.333 OFFCURVE",
"329 528 CURVE SMOOTH",
"329 574 LINE SMOOTH",
"329 592.354 OFFCURVE",
"474.07 611.936 OFFCURVE",
"512 616 CURVE",
"516 616 OFFCURVE",
"518.833 612.333 OFFCURVE",
"520.5 605 CURVE SMOOTH",
"522.167 597.667 OFFCURVE",
"523 589.667 OFFCURVE",
"523 581 CURVE SMOOTH",
"523 539 OFFCURVE",
"521.167 497.667 OFFCURVE",
"517.5 457 CURVE SMOOTH",
"513.833 416.333 OFFCURVE",
"511 375.667 OFFCURVE",
"509 335 CURVE",
"496.333 328.333 OFFCURVE",
"490 320 OFFCURVE",
"490 310 CURVE SMOOTH",
"490 302 OFFCURVE",
"497 295.667 OFFCURVE",
"511 291 CURVE",
"509 223 OFFCURVE",
"508 158 OFFCURVE",
"508 96 CURVE",
"505.047 87.142 OFFCURVE",
"478 89.86 OFFCURVE",
"478 73 CURVE SMOOTH",
"478 65 OFFCURVE",
"482.667 59 OFFCURVE",
"492 55 CURVE SMOOTH",
"512 47 OFFCURVE",
"515.333 43.667 OFFCURVE",
"518 9 CURVE",
"518.667 -7 OFFCURVE",
"526.333 -15 OFFCURVE",
"541 -15 CURVE SMOOTH",
"557 -15 OFFCURVE",
"560.333 -8 OFFCURVE",
"563 0 CURVE",
"560.333 12 OFFCURVE",
"560 16.333 OFFCURVE",
"560 23 CURVE",
"614.667 9.667 OFFCURVE",
"657.667 3 OFFCURVE",
"689 3 CURVE SMOOTH",
"797.483 3 OFFCURVE",
"933 67.511 OFFCURVE",
"933 178 CURVE SMOOTH",
"933 245.904 OFFCURVE",
"882.696 287.104 OFFCURVE",
"819 309 CURVE SMOOTH",
"759.897 329.317 OFFCURVE",
"684.533 336 OFFCURVE",
"635 336 CURVE SMOOTH",
"609 336 OFFCURVE",
"585 335 OFFCURVE",
"563 333 CURVE",
"563 334.333 OFFCURVE",
"563.167 336 OFFCURVE",
"563.5 338 CURVE SMOOTH",
"563.833 340 OFFCURVE",
"564 342 OFFCURVE",
"564 344 CURVE"
);
},
{
closed = 1;
nodes = (
"882 108.835 OFFCURVE",
"774.042 44 OFFCURVE",
"687 44 CURVE SMOOTH",
"633 44 OFFCURVE",
"590.667 53.333 OFFCURVE",
"560 72 CURVE",
"558 110.667 OFFCURVE",
"557 149.667 OFFCURVE",
"557 189 CURVE SMOOTH",
"557 223 OFFCURVE",
"558 256.667 OFFCURVE",
"560 290 CURVE",
"576.667 294 OFFCURVE",
"599 296 OFFCURVE",
"627 296 CURVE SMOOTH",
"785.585 296 OFFCURVE",
"882 255.135 OFFCURVE",
"882 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
54 87 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
130 934 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 933 121 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 32 106 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 32 25 32 41 32 57 32 73 32 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
113 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 121 106 121 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 121 121 121 137 121 153 121 169 121 185 121 201 121 217 121 233 121 249 121 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 121 25 121 41 121 57 121 73 121 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
128 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
130 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
132 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
132 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
140 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
5 928 126 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 78 119 78 135 78 151 78 167 78 183 78 199 78 215 78 231 78 247 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 78 23 78 39 78 55 78 71 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 78 102 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
134 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
17 928 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 70 23 70 39 70 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 70 70 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 963;
}
);
note = LjeCyrillic;
unicode = 0409;
},
{
glyphname = NjeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"439.667 590 OFFCURVE",
"443 602.333 OFFCURVE",
"443 617 CURVE SMOOTH",
"443 620.333 OFFCURVE",
"441 624.167 OFFCURVE",
"437 628.5 CURVE SMOOTH",
"433 632.833 OFFCURVE",
"425.333 635 OFFCURVE",
"414 635 CURVE SMOOTH",
"371.333 635 OFFCURVE",
"367 620 OFFCURVE",
"367 596 CURVE SMOOTH",
"367 577.333 OFFCURVE",
"367.167 560.333 OFFCURVE",
"367.5 545 CURVE SMOOTH",
"367.833 529.667 OFFCURVE",
"368 511.667 OFFCURVE",
"368 491 CURVE SMOOTH",
"368 455 OFFCURVE",
"367 409 OFFCURVE",
"363 329 CURVE",
"291 313 OFFCURVE",
"215 298 OFFCURVE",
"151 298 CURVE SMOOTH",
"124.333 298 OFFCURVE",
"118 300 OFFCURVE",
"118 340 CURVE SMOOTH",
"118 428 OFFCURVE",
"125 505 OFFCURVE",
"145 569 CURVE SMOOTH",
"148.333 579.667 OFFCURVE",
"152.5 589.667 OFFCURVE",
"157.5 599 CURVE SMOOTH",
"162.5 608.333 OFFCURVE",
"165 617 OFFCURVE",
"165 625 CURVE SMOOTH",
"165 646.333 OFFCURVE",
"140.333 662 OFFCURVE",
"119 662 CURVE SMOOTH",
"88.333 662 OFFCURVE",
"74 627.5 OFFCURVE",
"66 565.5 CURVE SMOOTH",
"58 503.5 OFFCURVE",
"58 411.333 OFFCURVE",
"58 298 CURVE SMOOTH",
"58 282.514 OFFCURVE",
"15 285.664 OFFCURVE",
"15 255 CURVE SMOOTH",
"15 228.543 OFFCURVE",
"61 234.229 OFFCURVE",
"61 219 CURVE SMOOTH",
"61 152 LINE SMOOTH",
"61 109.342 OFFCURVE",
"59.51 -21 OFFCURVE",
"88 -21 CURVE SMOOTH",
"92 -21 OFFCURVE",
"97.833 -19.5 OFFCURVE",
"105.5 -16.5 CURVE SMOOTH",
"113.167 -13.5 OFFCURVE",
"119.667 -12 OFFCURVE",
"125 -12 CURVE SMOOTH",
"131 -12 OFFCURVE",
"135.333 -7.667 OFFCURVE",
"138 1 CURVE",
"117.015 24.983 OFFCURVE",
"118 64.842 OFFCURVE",
"118 141 CURVE SMOOTH",
"118 221 LINE SMOOTH",
"118 231.667 OFFCURVE",
"124 237.667 OFFCURVE",
"136 239 CURVE SMOOTH",
"224 248.333 OFFCURVE",
"296 264 OFFCURVE",
"364 280 CURVE",
"362.667 260.667 OFFCURVE",
"362 241.667 OFFCURVE",
"362 223 CURVE SMOOTH",
"362 204.333 OFFCURVE",
"362 186 OFFCURVE",
"362 168 CURVE SMOOTH",
"362 96 LINE",
"359.047 87.142 OFFCURVE",
"332 89.86 OFFCURVE",
"332 73 CURVE SMOOTH",
"332 65 OFFCURVE",
"336.667 59 OFFCURVE",
"346 55 CURVE SMOOTH",
"366 47 OFFCURVE",
"369.333 43.667 OFFCURVE",
"372 9 CURVE",
"372.667 -7 OFFCURVE",
"380.333 -15 OFFCURVE",
"395 -15 CURVE SMOOTH",
"411 -15 OFFCURVE",
"414.333 -8 OFFCURVE",
"417 0 CURVE",
"414.333 12 OFFCURVE",
"414 16.333 OFFCURVE",
"414 23 CURVE",
"468.667 9.667 OFFCURVE",
"511.667 3 OFFCURVE",
"543 3 CURVE SMOOTH",
"658.75 3 OFFCURVE",
"773 65.99 OFFCURVE",
"773 178 CURVE SMOOTH",
"773 304.951 OFFCURVE",
"622.778 347 OFFCURVE",
"536 347 CURVE SMOOTH",
"476 347 OFFCURVE",
"437 342 OFFCURVE",
"417 338 CURVE",
"422.333 430 OFFCURVE",
"426.333 504.667 OFFCURVE",
"437 582 CURVE"
);
},
{
closed = 1;
nodes = (
"722 105.975 OFFCURVE",
"629.133 44 OFFCURVE",
"541 44 CURVE SMOOTH",
"487 44 OFFCURVE",
"444.667 53.333 OFFCURVE",
"414 72 CURVE",
"412 110.667 OFFCURVE",
"411 149.667 OFFCURVE",
"411 189 CURVE SMOOTH",
"411 223 OFFCURVE",
"412 256.667 OFFCURVE",
"414 290 CURVE",
"431.333 295.333 OFFCURVE",
"479 303 OFFCURVE",
"543 303 CURVE SMOOTH",
"655.729 303 OFFCURVE",
"722 251.439 OFFCURVE",
"722 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 934 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
117 934 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 933 107 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 13 values pushed */
150 117 166 117 182 117 198 117 214 117 230 117 6 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
102 117 118 117 134 117 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
246 117 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 117 22 117 38 117 54 117 70 117 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 117 101 117 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
98 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
104 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 98 104 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 107 106 107 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 107 121 107 137 107 153 107 169 107 185 107 201 107 217 107 233 107 249 107 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 107 25 107 41 107 57 107 73 107 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
119 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
119 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
127 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 930 112 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 112 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
121 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 121 119 121 135 121 151 121 167 121 183 121 199 121 215 121 231 121 247 121 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 121 23 121 39 121 55 121 71 121 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 121 102 121 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
16 928 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 56 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 803;
}
);
note = NjeCyrillic;
unicode = 040A;
},
{
glyphname = TsheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"484.667 2.333 OFFCURVE",
"484 30.333 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 84.333 OFFCURVE",
"484.333 107.5 OFFCURVE",
"485 130.5 CURVE SMOOTH",
"485.667 153.5 OFFCURVE",
"486 176.667 OFFCURVE",
"486 200 CURVE SMOOTH",
"486 349.854 OFFCURVE",
"385.718 409 OFFCURVE",
"282 409 CURVE SMOOTH",
"276.667 409 OFFCURVE",
"269.833 406.5 OFFCURVE",
"261.5 401.5 CURVE SMOOTH",
"253.167 396.5 OFFCURVE",
"240.333 386.333 OFFCURVE",
"223 371 CURVE",
"229.137 461.009 OFFCURVE",
"239.119 549.697 OFFCURVE",
"250.5 582.5 CURVE SMOOTH",
"261.833 615.167 OFFCURVE",
"274.333 618 OFFCURVE",
"293 618 CURVE SMOOTH",
"340.688 618 OFFCURVE",
"395.415 616.793 OFFCURVE",
"409 610 CURVE",
"423.667 604 OFFCURVE",
"431 600.333 OFFCURVE",
"431 599 CURVE",
"442.333 599 OFFCURVE",
"448 607.333 OFFCURVE",
"448 624 CURVE SMOOTH",
"448 656 OFFCURVE",
"409.333 672 OFFCURVE",
"332 672 CURVE SMOOTH",
"297.333 672 OFFCURVE",
"240.333 668.333 OFFCURVE",
"163 659 CURVE SMOOTH",
"70.333 647.667 OFFCURVE",
"20.667 636.333 OFFCURVE",
"14 625 CURVE",
"22 603.667 OFFCURVE",
"39.333 593 OFFCURVE",
"66 593 CURVE SMOOTH",
"88.177 593 OFFCURVE",
"150.774 607 OFFCURVE",
"173 607 CURVE SMOOTH",
"181.667 607 OFFCURVE",
"186 602 OFFCURVE",
"186 592 CURVE SMOOTH",
"184.667 541.333 OFFCURVE",
"182.333 494 OFFCURVE",
"177 438 CURVE SMOOTH",
"166.726 335.258 OFFCURVE",
"162 278.743 OFFCURVE",
"162 224 CURVE SMOOTH",
"162 76.918 OFFCURVE",
"153.149 -17 OFFCURVE",
"234 -17 CURVE SMOOTH",
"240.667 -17 OFFCURVE",
"244 -12.333 OFFCURVE",
"244 -3 CURVE",
"226 27 OFFCURVE",
"217 85 OFFCURVE",
"217 171 CURVE SMOOTH",
"217 184.333 OFFCURVE",
"217 197.667 OFFCURVE",
"217 211 CURVE SMOOTH",
"217 224.333 OFFCURVE",
"217.333 237.667 OFFCURVE",
"218 251 CURVE",
"227.9 305.451 OFFCURVE",
"265.162 370 OFFCURVE",
"309 370 CURVE SMOOTH",
"392.333 370 OFFCURVE",
"434 285.333 OFFCURVE",
"434 116 CURVE SMOOTH",
"434 98.667 OFFCURVE",
"434 78.667 OFFCURVE",
"434 56 CURVE SMOOTH",
"434 33.333 OFFCURVE",
"433.667 7.667 OFFCURVE",
"433 -21 CURVE",
"441 -30.333 OFFCURVE",
"448.667 -35 OFFCURVE",
"456 -35 CURVE SMOOTH",
"470.667 -35 OFFCURVE",
"480.667 -32.333 OFFCURVE",
"486 -27 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 934 26 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
72 933 7 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 7 106 7 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 7 121 7 137 7 153 7 169 7 185 7 201 7 217 7 233 7 249 7 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 7 25 7 41 7 57 7 73 7 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 64 22 64 38 64 54 64 70 64 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 64 101 64 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
48 931 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 928 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
64 9 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 519;
}
);
note = TsheCyrillic;
unicode = 040B;
},
{
glyphname = KjeCyrillic;
layers = (
{
components = (
{
name = KaCyrillic;
},
{
name = acute;
transform = "{1, 0, 0, 1, 200, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = KjeCyrillic;
unicode = 040C;
},
{
glyphname = IgraveCyrillic;
layers = (
{
components = (
{
name = ICyrillic2;
},
{
name = grave;
transform = "{1, 0, 0, 1, 110, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 517;
}
);
note = IgraveCyrillic;
unicode = 040D;
},
{
glyphname = UshortCyrillic;
layers = (
{
components = (
{
name = UCyrillic;
},
{
name = breve;
transform = "{1, 0, 0, 1, 210, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 591;
}
);
note = UshortCyrillic;
unicode = 040E;
},
{
glyphname = DzheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"464 651.768 OFFCURVE",
"436.005 670 OFFCURVE",
"424 670 CURVE SMOOTH",
"406.097 670 OFFCURVE",
"372 642.219 OFFCURVE",
"372 624 CURVE",
"365.333 512 OFFCURVE",
"365 405 OFFCURVE",
"365 297 CURVE SMOOTH",
"365 219.667 OFFCURVE",
"366.667 144 OFFCURVE",
"372 64 CURVE",
"314.506 47.902 OFFCURVE",
"219.041 34 OFFCURVE",
"179 34 CURVE SMOOTH",
"87.799 34 OFFCURVE",
"90 54.727 OFFCURVE",
"90 154 CURVE SMOOTH",
"90 222 OFFCURVE",
"96.5 313 OFFCURVE",
"102.5 397 CURVE SMOOTH",
"107.527 467.385 OFFCURVE",
"115 557.284 OFFCURVE",
"115 595 CURVE SMOOTH",
"115 649.667 OFFCURVE",
"103.333 677 OFFCURVE",
"80 677 CURVE SMOOTH",
"57.333 677 OFFCURVE",
"49 669.667 OFFCURVE",
"49 643 CURVE SMOOTH",
"49 627.497 OFFCURVE",
"53 582.503 OFFCURVE",
"53 567 CURVE SMOOTH",
"53 497.699 OFFCURVE",
"34 267.301 OFFCURVE",
"34 198 CURVE SMOOTH",
"34 37.6 OFFCURVE",
"35.194 -14 OFFCURVE",
"164 -14 CURVE SMOOTH",
"169.333 -14 OFFCURVE",
"175 -14 OFFCURVE",
"181 -14 CURVE SMOOTH",
"187 -14 OFFCURVE",
"193.333 -13.333 OFFCURVE",
"200 -12 CURVE",
"200 -94.972 OFFCURVE",
"205.66 -197 OFFCURVE",
"260 -197 CURVE SMOOTH",
"267.333 -197 OFFCURVE",
"277.333 -192.667 OFFCURVE",
"290 -184 CURVE",
"271.333 -156 OFFCURVE",
"261.333 -97.333 OFFCURVE",
"260 -8 CURVE",
"316 -2.667 OFFCURVE",
"369 3 OFFCURVE",
"425 15 CURVE SMOOTH",
"439.667 17.667 OFFCURVE",
"455 29.333 OFFCURVE",
"455 44 CURVE SMOOTH",
"455 56 OFFCURVE",
"447.667 65.333 OFFCURVE",
"433 72 CURVE",
"427.667 101.333 OFFCURVE",
"425 138.667 OFFCURVE",
"425 192 CURVE SMOOTH",
"425 309.333 OFFCURVE",
"432.333 433.667 OFFCURVE",
"447 571 CURVE SMOOTH",
"448.727 588.847 OFFCURVE",
"464 640.462 OFFCURVE",
"464 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 934 28 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 933 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 19 22 19 38 19 54 19 70 19 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 19 101 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 56 22 56 38 56 54 56 70 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 56 101 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
61 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 61 119 61 135 61 151 61 167 61 183 61 199 61 215 61 231 61 247 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 61 23 61 39 61 55 61 71 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 61 102 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 484;
}
);
note = DzheCyrillic;
unicode = 040F;
},
{
glyphname = ACyrillic;
layers = (
{
components = (
{
name = A;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = ACyrillic;
unicode = 0410;
},
{
glyphname = BeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"138 588.667 OFFCURVE",
"151.333 595.667 OFFCURVE",
"170 603 CURVE SMOOTH",
"188.667 610.333 OFFCURVE",
"215 616.333 OFFCURVE",
"249 621 CURVE SMOOTH",
"315.667 630.302 OFFCURVE",
"435 622.36 OFFCURVE",
"435 650 CURVE SMOOTH",
"435 674.079 OFFCURVE",
"395.465 682 OFFCURVE",
"375 682 CURVE SMOOTH",
"345.667 682 OFFCURVE",
"305 676.667 OFFCURVE",
"233 662 CURVE SMOOTH",
"195 654.667 OFFCURVE",
"165.167 648.5 OFFCURVE",
"143.5 643.5 CURVE SMOOTH",
"121.833 638.5 OFFCURVE",
"104.667 635.333 OFFCURVE",
"92 634 CURVE SMOOTH",
"70 632 OFFCURVE",
"59 623 OFFCURVE",
"59 607 CURVE SMOOTH",
"59 603.667 OFFCURVE",
"59.833 597.833 OFFCURVE",
"61.5 589.5 CURVE SMOOTH",
"63.167 581.167 OFFCURVE",
"64 574.333 OFFCURVE",
"64 569 CURVE",
"61.333 537 OFFCURVE",
"59.167 502.667 OFFCURVE",
"57.5 466 CURVE SMOOTH",
"55.833 429.333 OFFCURVE",
"53.667 385.667 OFFCURVE",
"51 335 CURVE",
"38.333 328.333 OFFCURVE",
"32 320 OFFCURVE",
"32 310 CURVE SMOOTH",
"32 302 OFFCURVE",
"39 295.667 OFFCURVE",
"53 291 CURVE",
"51 223 OFFCURVE",
"50 158 OFFCURVE",
"50 96 CURVE",
"47.047 87.142 OFFCURVE",
"20 89.86 OFFCURVE",
"20 73 CURVE SMOOTH",
"20 65 OFFCURVE",
"24.667 59 OFFCURVE",
"34 55 CURVE SMOOTH",
"54 47 OFFCURVE",
"57.333 43.667 OFFCURVE",
"60 9 CURVE",
"60.667 -7 OFFCURVE",
"68.333 -15 OFFCURVE",
"83 -15 CURVE SMOOTH",
"99 -15 OFFCURVE",
"107.333 -8 OFFCURVE",
"110 0 CURVE",
"107.333 12 OFFCURVE",
"107 16.333 OFFCURVE",
"107 23 CURVE",
"159 9.667 OFFCURVE",
"196.333 3 OFFCURVE",
"231 3 CURVE SMOOTH",
"339.483 3 OFFCURVE",
"475 67.511 OFFCURVE",
"475 178 CURVE SMOOTH",
"475 245.904 OFFCURVE",
"424.696 287.104 OFFCURVE",
"361 309 CURVE SMOOTH",
"301.897 329.317 OFFCURVE",
"226.533 336 OFFCURVE",
"177 336 CURVE SMOOTH",
"151.667 336 OFFCURVE",
"132.667 335.667 OFFCURVE",
"110 333 CURVE",
"115.333 414.333 OFFCURVE",
"122 498 OFFCURVE",
"130 582 CURVE"
);
},
{
closed = 1;
nodes = (
"421 108.867 OFFCURVE",
"315.978 44 OFFCURVE",
"229 44 CURVE SMOOTH",
"175.667 44 OFFCURVE",
"139 53.333 OFFCURVE",
"107 72 CURVE",
"105 110.667 OFFCURVE",
"104 149.667 OFFCURVE",
"104 189 CURVE SMOOTH",
"104 223 OFFCURVE",
"105 256.667 OFFCURVE",
"107 290 CURVE",
"123.667 294 OFFCURVE",
"146 296 OFFCURVE",
"174 296 CURVE SMOOTH",
"334.192 296 OFFCURVE",
"421 256.03 OFFCURVE",
"421 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 934 34 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 933 72 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 81 22 81 38 81 54 81 70 81 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 81 101 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 72 106 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 72 25 72 41 72 57 72 73 72 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 928 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
86 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 86 119 86 135 86 151 86 167 86 183 86 199 86 215 86 231 86 247 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 86 23 86 39 86 55 86 71 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 86 102 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
18 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 505;
}
);
note = BeCyrillic;
unicode = 0411;
},
{
glyphname = VeCyrillic;
layers = (
{
components = (
{
name = B;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 505;
}
);
note = VeCyrillic;
unicode = 0412;
},
{
glyphname = GheCyrillic;
layers = (
{
components = (
{
name = Gamma;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 428;
}
);
note = GheCyrillic;
unicode = 0413;
},
{
glyphname = DeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"32.928 24.066 OFFCURVE",
"9 19.27 OFFCURVE",
"9 -15 CURVE SMOOTH",
"9 -48.333 OFFCURVE",
"8.667 -91 OFFCURVE",
"18 -127 CURVE",
"27.333 -135 OFFCURVE",
"38.333 -135 OFFCURVE",
"45 -135 CURVE",
"51.667 -133.667 OFFCURVE",
"76.333 -125.333 OFFCURVE",
"79 -116 CURVE",
"75 -94.667 OFFCURVE",
"71 -73.333 OFFCURVE",
"71 -52 CURVE SMOOTH",
"71 -48.667 OFFCURVE",
"71 -45.5 OFFCURVE",
"71 -42.5 CURVE SMOOTH",
"71 -39.5 OFFCURVE",
"71.333 -36.333 OFFCURVE",
"72 -33 CURVE",
"137.272 -19.402 OFFCURVE",
"347.833 -6 OFFCURVE",
"449 -6 CURVE SMOOTH",
"487.667 -6 OFFCURVE",
"519.667 -9.333 OFFCURVE",
"541 -12 CURVE",
"543.667 -22.667 OFFCURVE",
"545 -34 OFFCURVE",
"545 -46 CURVE SMOOTH",
"545 -56.667 OFFCURVE",
"544.333 -66.667 OFFCURVE",
"543 -76 CURVE",
"545.667 -89.333 OFFCURVE",
"564.333 -96 OFFCURVE",
"575 -96 CURVE SMOOTH",
"585 -96 OFFCURVE",
"592.167 -93.167 OFFCURVE",
"596.5 -87.5 CURVE SMOOTH",
"600.833 -81.833 OFFCURVE",
"603 -68 OFFCURVE",
"603 -46 CURVE SMOOTH",
"603 -24.667 OFFCURVE",
"601.667 0.333 OFFCURVE",
"599 27 CURVE SMOOTH",
"597.667 37 OFFCURVE",
"593 43.667 OFFCURVE",
"585 47 CURVE SMOOTH",
"577 50.333 OFFCURVE",
"558.667 52 OFFCURVE",
"530 52 CURVE",
"516.667 120 OFFCURVE",
"513 193.667 OFFCURVE",
"513 271 CURVE SMOOTH",
"513 399 OFFCURVE",
"523 505.667 OFFCURVE",
"535 615 CURVE",
"542.333 619.667 OFFCURVE",
"548 626.167 OFFCURVE",
"552 634.5 CURVE SMOOTH",
"556 642.833 OFFCURVE",
"558 647.333 OFFCURVE",
"558 648 CURVE SMOOTH",
"558 658.667 OFFCURVE",
"552.667 677.333 OFFCURVE",
"522 680 CURVE SMOOTH",
"461.779 684.818 OFFCURVE",
"302.999 689 OFFCURVE",
"285 689 CURVE SMOOTH",
"249.105 689 OFFCURVE",
"221.692 664.647 OFFCURVE",
"217 606 CURVE SMOOTH",
"214.333 567.333 OFFCURVE",
"208.667 499.833 OFFCURVE",
"198 424.5 CURVE SMOOTH",
"192.667 386.833 OFFCURVE",
"186.5 348 OFFCURVE",
"179.5 308 CURVE SMOOTH",
"165.5 228 OFFCURVE",
"147.667 153.667 OFFCURVE",
"125 95 CURVE SMOOTH",
"113.667 65.667 OFFCURVE",
"101.333 43.333 OFFCURVE",
"88 28 CURVE"
);
},
{
closed = 1;
nodes = (
"374 47 OFFCURVE",
"263.333 43 OFFCURVE",
"158 35 CURVE",
"198 103 OFFCURVE",
"221.167 198 OFFCURVE",
"236.5 298 CURVE SMOOTH",
"249.336 381.711 OFFCURVE",
"262.854 517.598 OFFCURVE",
"273 592 CURVE SMOOTH",
"277 621.333 OFFCURVE",
"299.667 626 OFFCURVE",
"341 626 CURVE SMOOTH",
"360.671 626 OFFCURVE",
"456.62 624 OFFCURVE",
"471 624 CURVE",
"467.865 570.699 OFFCURVE",
"462.092 482.821 OFFCURVE",
"460.5 434 CURVE SMOOTH",
"458.5 372.667 OFFCURVE",
"457 309.333 OFFCURVE",
"457 240 CURVE SMOOTH",
"457 174.667 OFFCURVE",
"458 111 OFFCURVE",
"470 47 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 934 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 934 44 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 44 106 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 44 25 44 41 44 57 44 73 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 77 106 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 77 25 77 41 77 57 77 73 77 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 931 87 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 29 119 29 135 29 151 29 167 29 183 29 199 29 215 29 231 29 247 29 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 29 23 29 39 29 55 29 71 29 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 29 102 29 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
95 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 95 119 95 135 95 151 95 167 95 183 95 199 95 215 95 231 95 247 95 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 95 23 95 39 95 55 95 71 95 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 95 102 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 616;
}
);
note = DeCyrillic;
unicode = 0414;
},
{
glyphname = IeCyrillic;
layers = (
{
components = (
{
name = E;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = IeCyrillic;
unicode = 0415;
},
{
glyphname = ZheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"492 651.768 OFFCURVE",
"464.005 670 OFFCURVE",
"452 670 CURVE SMOOTH",
"434.097 670 OFFCURVE",
"400 642.219 OFFCURVE",
"400 624 CURVE SMOOTH",
"400 544 OFFCURVE",
"398.667 470 OFFCURVE",
"396 394 CURVE",
"314.667 462 OFFCURVE",
"236 531.667 OFFCURVE",
"164 609 CURVE SMOOTH",
"129.333 645 OFFCURVE",
"111 664 OFFCURVE",
"87 664 CURVE SMOOTH",
"53.667 664 OFFCURVE",
"36 649.667 OFFCURVE",
"36 635 CURVE SMOOTH",
"36 629 OFFCURVE",
"38.333 624.667 OFFCURVE",
"43 622 CURVE",
"167 527.333 OFFCURVE",
"275.333 436.333 OFFCURVE",
"390 335 CURVE",
"294.575 234.552 OFFCURVE",
"161.773 106.401 OFFCURVE",
"48 34 CURVE SMOOTH",
"32.552 23.702 OFFCURVE",
"9 17.478 OFFCURVE",
"9 3 CURVE SMOOTH",
"9 -3.667 OFFCURVE",
"18.333 -15 OFFCURVE",
"37 -15 CURVE SMOOTH",
"74.782 -15 OFFCURVE",
"157.757 47.223 OFFCURVE",
"206 90.5 CURVE SMOOTH",
"251.333 131.167 OFFCURVE",
"296.667 175.167 OFFCURVE",
"338 218.5 CURVE SMOOTH",
"358.667 240.167 OFFCURVE",
"377.667 260 OFFCURVE",
"395 278 CURVE",
"395 147.596 OFFCURVE",
"382.887 -8 OFFCURVE",
"453 -8 CURVE SMOOTH",
"460.333 -8 OFFCURVE",
"470.333 -3.667 OFFCURVE",
"483 5 CURVE",
"473 19.667 OFFCURVE",
"465.5 49 OFFCURVE",
"460.5 93 CURVE SMOOTH",
"455.5 137 OFFCURVE",
"453 200 OFFCURVE",
"453 282 CURVE",
"531 188.667 OFFCURVE",
"598.5 119.667 OFFCURVE",
"655.5 75 CURVE SMOOTH",
"712.5 30.333 OFFCURVE",
"761 8 OFFCURVE",
"801 8 CURVE SMOOTH",
"833.408 8 OFFCURVE",
"887 35.341 OFFCURVE",
"887 69 CURVE SMOOTH",
"887 81.667 OFFCURVE",
"882.333 88 OFFCURVE",
"873 88 CURVE SMOOTH",
"852.266 88 OFFCURVE",
"828.996 54 OFFCURVE",
"798 54 CURVE SMOOTH",
"762 54 OFFCURVE",
"717 84.667 OFFCURVE",
"653 146 CURVE SMOOTH",
"608.781 187.762 OFFCURVE",
"507.795 284.756 OFFCURVE",
"470 332 CURVE",
"528.667 397.333 OFFCURVE",
"603.833 467.5 OFFCURVE",
"668.5 521.5 CURVE SMOOTH",
"719.612 564.181 OFFCURVE",
"781.575 613 OFFCURVE",
"801 613 CURVE",
"824 605 LINE",
"832.667 605 OFFCURVE",
"837.333 609.333 OFFCURVE",
"838 618 CURVE",
"838 631.856 OFFCURVE",
"822.514 672 OFFCURVE",
"803 672 CURVE SMOOTH",
"788.333 672 OFFCURVE",
"766.333 664.333 OFFCURVE",
"737 639 CURVE SMOOTH",
"690.333 599 OFFCURVE",
"643.5 559.5 OFFCURVE",
"596.5 520.5 CURVE SMOOTH",
"549.5 481.5 OFFCURVE",
"503 436.667 OFFCURVE",
"457 386 CURVE",
"458.383 420.565 OFFCURVE",
"470.057 526.509 OFFCURVE",
"475 571 CURVE SMOOTH",
"476.459 586.324 OFFCURVE",
"492 638.64 OFFCURVE",
"492 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 933 99 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 52 118 52 134 52 150 52 166 52 182 52 198 52 214 52 230 52 246 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 52 22 52 38 52 54 52 70 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 52 101 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
69 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
42 931 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 69 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 69 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
62 69 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
96 69 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 852;
}
);
note = ZheCyrillic;
unicode = 0416;
},
{
glyphname = ZeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"528 322 OFFCURVE",
"470.333 375.333 OFFCURVE",
"357 394 CURVE",
"414.789 439.226 OFFCURVE",
"476 519.96 OFFCURVE",
"476 580 CURVE SMOOTH",
"476 656 OFFCURVE",
"421 697 OFFCURVE",
"345 697 CURVE SMOOTH",
"299.667 697 OFFCURVE",
"241 677.667 OFFCURVE",
"185 647 CURVE SMOOTH",
"120.923 610.384 OFFCURVE",
"42 537.502 OFFCURVE",
"42 499 CURVE SMOOTH",
"42 488.333 OFFCURVE",
"62 475 OFFCURVE",
"74 475 CURVE SMOOTH",
"77.333 475 OFFCURVE",
"86.5 479.833 OFFCURVE",
"101.5 489.5 CURVE SMOOTH",
"116.5 499.167 OFFCURVE",
"133 515.667 OFFCURVE",
"151 539 CURVE",
"150.333 542.333 OFFCURVE",
"149.833 545 OFFCURVE",
"149.5 547 CURVE SMOOTH",
"149.167 549 OFFCURVE",
"149 550.333 OFFCURVE",
"149 551 CURVE SMOOTH",
"149 591.078 OFFCURVE",
"297.998 653 OFFCURVE",
"345 653 CURVE SMOOTH",
"391.667 653 OFFCURVE",
"422 620.667 OFFCURVE",
"422 574 CURVE SMOOTH",
"422 506.002 OFFCURVE",
"327.047 409.877 OFFCURVE",
"283 391 CURVE SMOOTH",
"273 387 OFFCURVE",
"245 383 OFFCURVE",
"199 379 CURVE SMOOTH",
"133.178 372.418 OFFCURVE",
"108 352.571 OFFCURVE",
"108 324 CURVE SMOOTH",
"108 313.333 OFFCURVE",
"119.667 308 OFFCURVE",
"143 308 CURVE SMOOTH",
"170.247 308 OFFCURVE",
"296.166 355 OFFCURVE",
"312 355 CURVE SMOOTH",
"400.972 355 OFFCURVE",
"468 314.036 OFFCURVE",
"468 220 CURVE SMOOTH",
"468 105.045 OFFCURVE",
"345.122 22 OFFCURVE",
"233 22 CURVE SMOOTH",
"161 22 OFFCURVE",
"117.333 46.333 OFFCURVE",
"96 77 CURVE",
"76.004 118.991 OFFCURVE",
"61.985 138 OFFCURVE",
"48 138 CURVE SMOOTH",
"36 138 OFFCURVE",
"20 123 OFFCURVE",
"20 111 CURVE SMOOTH",
"20 91.667 OFFCURVE",
"34 70.667 OFFCURVE",
"62 48 CURVE SMOOTH",
"125.268 -4.724 OFFCURVE",
"178.063 -16 OFFCURVE",
"264 -16 CURVE SMOOTH",
"395.801 -16 OFFCURVE",
"528 82.684 OFFCURVE",
"528 226 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 934 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 933 52 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 52 106 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 52 25 52 41 52 57 52 73 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 52 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 28 106 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 28 25 28 41 28 57 28 73 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 60 22 60 38 60 54 60 70 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 60 101 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
85 69 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
77 930 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 15 23 15 39 15 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 15 70 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 23 119 23 135 23 151 23 167 23 183 23 199 23 215 23 231 23 247 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 23 23 23 39 23 55 23 71 23 87 23 103 23 119 23 135 23 151 23 167 23 183 23 199 23 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 23 230 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 555;
}
);
note = ZeCyrillic;
unicode = 0417;
},
{
glyphname = ICyrillic2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"47 93 OFFCURVE",
"52.5 60.333 OFFCURVE",
"63.5 39 CURVE SMOOTH",
"74.5 17.667 OFFCURVE",
"88 7 OFFCURVE",
"104 7 CURVE SMOOTH",
"136 7 OFFCURVE",
"169.333 37.333 OFFCURVE",
"204 98 CURVE SMOOTH",
"217.333 123.333 OFFCURVE",
"237.833 164.667 OFFCURVE",
"266.5 234 CURVE SMOOTH",
"295.167 303.333 OFFCURVE",
"332.333 400 OFFCURVE",
"383 536 CURVE",
"389.667 535.333 OFFCURVE",
"393 530.333 OFFCURVE",
"393 521 CURVE SMOOTH",
"393 501.488 OFFCURVE",
"388.38 442.021 OFFCURVE",
"385 388.5 CURVE SMOOTH",
"381 325.167 OFFCURVE",
"377 251.333 OFFCURVE",
"377 198 CURVE SMOOTH",
"377 112.396 OFFCURVE",
"377.731 -8 OFFCURVE",
"437 -8 CURVE SMOOTH",
"446.333 -8 OFFCURVE",
"457.667 -4.333 OFFCURVE",
"467 5 CURVE",
"447 33.667 OFFCURVE",
"437 96 OFFCURVE",
"437 192 CURVE SMOOTH",
"437 258.667 OFFCURVE",
"438.333 317.167 OFFCURVE",
"441 384.5 CURVE SMOOTH",
"443.667 451.833 OFFCURVE",
"449 527 OFFCURVE",
"457 627 CURVE",
"462 640 LINE",
"462 657.333 OFFCURVE",
"447.667 666 OFFCURVE",
"413 666 CURVE SMOOTH",
"361.563 666 OFFCURVE",
"348.38 638.899 OFFCURVE",
"330 547 CURVE",
"315.333 493.667 OFFCURVE",
"286.333 405.333 OFFCURVE",
"237 280 CURVE SMOOTH",
"208.333 207.333 OFFCURVE",
"183.167 154.5 OFFCURVE",
"161.5 121.5 CURVE SMOOTH",
"139.833 88.5 OFFCURVE",
"123.667 72 OFFCURVE",
"113 72 CURVE SMOOTH",
"100.333 72 OFFCURVE",
"94 90 OFFCURVE",
"94 126 CURVE SMOOTH",
"94 231.333 OFFCURVE",
"103.333 344 OFFCURVE",
"114 436 CURVE SMOOTH",
"122.542 509.678 OFFCURVE",
"135.565 594.007 OFFCURVE",
"144 621 CURVE",
"145.333 627 OFFCURVE",
"147.167 631 OFFCURVE",
"149.5 633 CURVE SMOOTH",
"151.833 635 OFFCURVE",
"153 637.667 OFFCURVE",
"153 641 CURVE SMOOTH",
"153 651.768 OFFCURVE",
"125.005 670 OFFCURVE",
"113 670 CURVE SMOOTH",
"93.554 670 OFFCURVE",
"63.691 642.84 OFFCURVE",
"61 624 CURVE SMOOTH",
"54.333 580 OFFCURVE",
"51.5 505.833 OFFCURVE",
"49.5 418.5 CURVE SMOOTH",
"47.5 331.167 OFFCURVE",
"47 231.667 OFFCURVE",
"47 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 932 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 934 55 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 23 22 23 38 23 54 23 70 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 23 101 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
40 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 55 106 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 55 25 55 41 55 57 55 73 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 931 69 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 517;
}
);
note = ICyrillic2;
unicode = 0418;
},
{
glyphname = IshortCyrillic;
layers = (
{
components = (
{
name = ICyrillic2;
},
{
name = breve;
transform = "{1, 0, 0, 1, 140, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 517;
}
);
note = IshortCyrillic;
unicode = 0419;
},
{
glyphname = KaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"483.266 77 OFFCURVE",
"459.996 43 OFFCURVE",
"429 43 CURVE SMOOTH",
"393 43 OFFCURVE",
"349 74.667 OFFCURVE",
"285 136 CURVE SMOOTH",
"240.633 177.902 OFFCURVE",
"149.679 270.981 OFFCURVE",
"119 317 CURVE",
"173.667 385 OFFCURVE",
"244.667 458.667 OFFCURVE",
"306 516 CURVE SMOOTH",
"354.259 561.111 OFFCURVE",
"413.001 613 OFFCURVE",
"432 613 CURVE",
"455 605 LINE",
"463.667 605 OFFCURVE",
"468.333 609.333 OFFCURVE",
"469 618 CURVE",
"469 631.333 OFFCURVE",
"455.667 655 OFFCURVE",
"445 671 CURVE",
"444.333 671.667 OFFCURVE",
"440.667 672 OFFCURVE",
"434 672 CURVE SMOOTH",
"419.333 672 OFFCURVE",
"397.333 664.333 OFFCURVE",
"368 639 CURVE SMOOTH",
"268 555 OFFCURVE",
"167 448 OFFCURVE",
"75 340 CURVE",
"77.667 417.333 OFFCURVE",
"83.333 491 OFFCURVE",
"94 583 CURVE SMOOTH",
"96 601.667 OFFCURVE",
"98.333 614 OFFCURVE",
"101 620 CURVE SMOOTH",
"103.667 626 OFFCURVE",
"109 630.667 OFFCURVE",
"117 634 CURVE SMOOTH",
"121.667 636 OFFCURVE",
"124 639 OFFCURVE",
"124 643 CURVE SMOOTH",
"124 662.011 OFFCURVE",
"79.124 687 OFFCURVE",
"61 687 CURVE SMOOTH",
"42.333 687 OFFCURVE",
"33 674.667 OFFCURVE",
"33 650 CURVE SMOOTH",
"33 644.667 OFFCURVE",
"34 638.667 OFFCURVE",
"36 632 CURVE",
"32.667 557.333 OFFCURVE",
"29.167 482.667 OFFCURVE",
"25.5 408 CURVE SMOOTH",
"21.833 333.333 OFFCURVE",
"20 257.667 OFFCURVE",
"20 181 CURVE SMOOTH",
"20 91.667 OFFCURVE",
"28 38.667 OFFCURVE",
"40 8 CURVE SMOOTH",
"49.824 -17.105 OFFCURVE",
"64.293 -31 OFFCURVE",
"79 -31 CURVE SMOOTH",
"85.667 -31 OFFCURVE",
"104 -26.333 OFFCURVE",
"104 -13 CURVE SMOOTH",
"104 -9 OFFCURVE",
"103 -5 OFFCURVE",
"101 -1 CURVE",
"86.333 25.667 OFFCURVE",
"74 93 OFFCURVE",
"74 181 CURVE SMOOTH",
"74 274 LINE",
"125.068 213.647 OFFCURVE",
"243.894 97.685 OFFCURVE",
"276 72 CURVE SMOOTH",
"337.333 22.667 OFFCURVE",
"385.333 -3 OFFCURVE",
"432 -3 CURVE SMOOTH",
"464.408 -3 OFFCURVE",
"518 24.341 OFFCURVE",
"518 58 CURVE SMOOTH",
"518 70.667 OFFCURVE",
"513.333 77 OFFCURVE",
"504 77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 933 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
32 29 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 0 23 0 39 0 55 0 71 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 0 102 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
15 24 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 24 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
76 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 76 119 76 135 76 151 76 167 76 183 76 199 76 215 76 231 76 247 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 76 23 76 39 76 55 76 71 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 76 102 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 483;
}
);
note = KaCyrillic;
unicode = 041A;
},
{
glyphname = ElCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"193 570 OFFCURVE",
"203 549 OFFCURVE",
"219 549 CURVE SMOOTH",
"222.333 549 OFFCURVE",
"227.5 551 OFFCURVE",
"234.5 555 CURVE SMOOTH",
"241.5 559 OFFCURVE",
"249.333 561.667 OFFCURVE",
"258 563 CURVE",
"258 372 LINE SMOOTH",
"258 150.667 OFFCURVE",
"220.667 40 OFFCURVE",
"146 40 CURVE SMOOTH",
"118.007 40 OFFCURVE",
"82.059 47.646 OFFCURVE",
"77 78 CURVE SMOOTH",
"69 120.667 OFFCURVE",
"47.667 142 OFFCURVE",
"29 142 CURVE SMOOTH",
"15.667 142 OFFCURVE",
"5 130.333 OFFCURVE",
"5 109 CURVE SMOOTH",
"5 97 OFFCURVE",
"9 82 OFFCURVE",
"17 64 CURVE SMOOTH",
"41.552 7.531 OFFCURVE",
"102.52 -12 OFFCURVE",
"152 -12 CURVE SMOOTH",
"212 -12 OFFCURVE",
"254.167 23.5 OFFCURVE",
"281.5 109.5 CURVE SMOOTH",
"308.833 195.5 OFFCURVE",
"322 329.333 OFFCURVE",
"322 528 CURVE SMOOTH",
"322 574 LINE SMOOTH",
"322 592.145 OFFCURVE",
"477.13 613.157 OFFCURVE",
"513 617 CURVE",
"523.667 617 OFFCURVE",
"529 616.667 OFFCURVE",
"529 606 CURVE",
"522.333 476.667 OFFCURVE",
"520 346.333 OFFCURVE",
"520 221 CURVE SMOOTH",
"520 179.667 OFFCURVE",
"521.333 139.333 OFFCURVE",
"532 62 CURVE SMOOTH",
"538 15.333 OFFCURVE",
"555.333 -8 OFFCURVE",
"584 -8 CURVE SMOOTH",
"591.333 -8 OFFCURVE",
"601.333 -3.667 OFFCURVE",
"614 5 CURVE",
"594 33.667 OFFCURVE",
"584 96 OFFCURVE",
"584 192 CURVE SMOOTH",
"584 309.333 OFFCURVE",
"591.333 433.667 OFFCURVE",
"606 571 CURVE SMOOTH",
"607.333 583.667 OFFCURVE",
"608.333 594.167 OFFCURVE",
"609 602.5 CURVE SMOOTH",
"609.667 610.833 OFFCURVE",
"610.667 616.667 OFFCURVE",
"612 620 CURVE",
"622 622 OFFCURVE",
"627 627.667 OFFCURVE",
"627 637 CURVE SMOOTH",
"627 651.902 OFFCURVE",
"597.591 670 OFFCURVE",
"583 670 CURVE SMOOTH",
"573.16 670 OFFCURVE",
"500.403 659.416 OFFCURVE",
"469 657 CURVE",
"428.84 651.98 OFFCURVE",
"340.642 641 OFFCURVE",
"325 641 CURVE SMOOTH",
"321 641 OFFCURVE",
"314.833 644 OFFCURVE",
"306.5 650 CURVE SMOOTH",
"298.167 656 OFFCURVE",
"292 659 OFFCURVE",
"288 659 CURVE SMOOTH",
"272.667 659 OFFCURVE",
"263.667 648.667 OFFCURVE",
"261 628 CURVE",
"257 624.667 OFFCURVE",
"252.333 622.667 OFFCURVE",
"247 622 CURVE SMOOTH",
"241.667 621.333 OFFCURVE",
"232 618.667 OFFCURVE",
"218 614 CURVE SMOOTH",
"198 607.333 OFFCURVE",
"193 599.333 OFFCURVE",
"193 586 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
54 0 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 934 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
26 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 43 106 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 43 25 43 41 43 57 43 73 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 70 23 70 39 70 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 70 70 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 78 119 78 135 78 151 78 167 78 183 78 199 78 215 78 231 78 247 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 78 23 78 39 78 55 78 71 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 78 102 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 646;
}
);
note = ElCyrillic;
unicode = 041B;
},
{
glyphname = EmCyrillic;
layers = (
{
components = (
{
name = M;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = EmCyrillic;
unicode = 041C;
},
{
glyphname = EnCyrillic;
layers = (
{
components = (
{
name = H;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = EnCyrillic;
unicode = 041D;
},
{
glyphname = OCyrillic;
layers = (
{
components = (
{
name = O;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = OCyrillic;
unicode = 041E;
},
{
glyphname = PeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"142.015 596.173 OFFCURVE",
"273.936 610.513 OFFCURVE",
"339 615 CURVE",
"335 469.667 OFFCURVE",
"332 326.333 OFFCURVE",
"332 165 CURVE SMOOTH",
"332 47.185 OFFCURVE",
"346.627 -8 OFFCURVE",
"392 -8 CURVE SMOOTH",
"399.333 -8 OFFCURVE",
"409.333 -3.667 OFFCURVE",
"422 5 CURVE",
"402 33.667 OFFCURVE",
"392 96 OFFCURVE",
"392 192 CURVE SMOOTH",
"392 309.333 OFFCURVE",
"399.333 433.667 OFFCURVE",
"414 571 CURVE SMOOTH",
"417.333 602.333 OFFCURVE",
"420 620 OFFCURVE",
"422 624 CURVE",
"430 626.667 OFFCURVE",
"436 628.333 OFFCURVE",
"436 643 CURVE SMOOTH",
"436 663.92 OFFCURVE",
"398.028 675 OFFCURVE",
"376 675 CURVE SMOOTH",
"352.448 675 OFFCURVE",
"267.096 663.333 OFFCURVE",
"216.5 656 CURVE SMOOTH",
"178.174 650.446 OFFCURVE",
"84.731 636.104 OFFCURVE",
"70 634 CURVE SMOOTH",
"48 630.667 OFFCURVE",
"37 621.667 OFFCURVE",
"37 607 CURVE SMOOTH",
"37 603.667 OFFCURVE",
"37.833 597.833 OFFCURVE",
"39.5 589.5 CURVE SMOOTH",
"41.167 581.167 OFFCURVE",
"42 574.333 OFFCURVE",
"42 569 CURVE",
"35.333 477 OFFCURVE",
"31 383 OFFCURVE",
"31 287 CURVE SMOOTH",
"31 207 OFFCURVE",
"34.333 134 OFFCURVE",
"41 62 CURVE SMOOTH",
"45.667 15.333 OFFCURVE",
"63 -8 OFFCURVE",
"93 -8 CURVE SMOOTH",
"100.333 -8 OFFCURVE",
"110.333 -3.667 OFFCURVE",
"123 5 CURVE",
"109.667 24.333 OFFCURVE",
"101.167 57 OFFCURVE",
"97.5 103 CURVE SMOOTH",
"93.833 149 OFFCURVE",
"92 209.333 OFFCURVE",
"92 284 CURVE SMOOTH",
"92 384.386 OFFCURVE",
"102.956 526.52 OFFCURVE",
"108 582 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 934 52 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 52 106 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 52 25 52 41 52 57 52 73 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
30 931 55 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 478;
}
);
note = PeCyrillic;
unicode = 041F;
},
{
glyphname = ErCyrillic;
layers = (
{
components = (
{
name = P;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 501;
}
);
note = ErCyrillic;
unicode = 0420;
},
{
glyphname = EsCyrillic;
layers = (
{
components = (
{
name = C;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = EsCyrillic;
unicode = 0421;
},
{
glyphname = TeCyrillic;
layers = (
{
components = (
{
name = T;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = TeCyrillic;
unicode = 0422;
},
{
glyphname = UCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"203.985 548.031 OFFCURVE",
"159.467 643 OFFCURVE",
"157 680 CURVE",
"138.333 690.667 OFFCURVE",
"114.667 697 OFFCURVE",
"104 697 CURVE SMOOTH",
"80.667 697 OFFCURVE",
"69 686 OFFCURVE",
"69 664 CURVE SMOOTH",
"69 637.482 OFFCURVE",
"137.362 538.859 OFFCURVE",
"159.5 505 CURVE SMOOTH",
"187.729 461.827 OFFCURVE",
"234.892 389.226 OFFCURVE",
"261.5 348.5 CURVE SMOOTH",
"277.833 323.5 OFFCURVE",
"291.667 301 OFFCURVE",
"303 281 CURVE",
"305 275.667 OFFCURVE",
"306 271 OFFCURVE",
"306 267 CURVE SMOOTH",
"306 245.667 OFFCURVE",
"278.667 201 OFFCURVE",
"240 145 CURVE SMOOTH",
"205.725 94.905 OFFCURVE",
"160.344 40 OFFCURVE",
"109 40 CURVE SMOOTH",
"94.333 40 OFFCURVE",
"83 45.333 OFFCURVE",
"63 72 CURVE",
"54.333 82.667 OFFCURVE",
"45 88 OFFCURVE",
"35 88 CURVE SMOOTH",
"19 88 OFFCURVE",
"5 73.667 OFFCURVE",
"5 55 CURVE SMOOTH",
"5 10.894 OFFCURVE",
"70.967 -12 OFFCURVE",
"114 -12 CURVE SMOOTH",
"201.84 -12 OFFCURVE",
"261.586 65.025 OFFCURVE",
"313 155 CURVE SMOOTH",
"333.759 192.366 OFFCURVE",
"408.976 327.074 OFFCURVE",
"429.5 364.5 CURVE SMOOTH",
"463.5 426.5 OFFCURVE",
"496.5 488.333 OFFCURVE",
"526.5 547 CURVE SMOOTH",
"541.5 576.333 OFFCURVE",
"554.667 602.667 OFFCURVE",
"566 626 CURVE SMOOTH",
"568.667 632 OFFCURVE",
"572.5 639.5 OFFCURVE",
"577.5 648.5 CURVE SMOOTH",
"582.5 657.5 OFFCURVE",
"585.333 665.333 OFFCURVE",
"586 672 CURVE",
"586 684 OFFCURVE",
"573.333 691 OFFCURVE",
"560 691 CURVE SMOOTH",
"525.475 691 OFFCURVE",
"514.757 666.123 OFFCURVE",
"488 597 CURVE SMOOTH",
"442.667 483.667 OFFCURVE",
"398.667 410.333 OFFCURVE",
"356 345 CURVE",
"352 339.667 OFFCURVE",
"347 337 OFFCURVE",
"341 337 CURVE SMOOTH",
"337.032 337 OFFCURVE",
"321.306 349.833 OFFCURVE",
"307 367 CURVE SMOOTH",
"287 391 OFFCURVE",
"260.333 431.333 OFFCURVE",
"227 502 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 41 23 41 39 41 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 41 70 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 46 23 46 39 46 55 46 71 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 46 102 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 591;
}
);
note = UCyrillic;
unicode = 0423;
},
{
glyphname = EfCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"433 648.768 OFFCURVE",
"405.005 667 OFFCURVE",
"393 667 CURVE SMOOTH",
"357.606 667 OFFCURVE",
"338 626.075 OFFCURVE",
"338 605 CURVE SMOOTH",
"338 595.667 OFFCURVE",
"338.167 585.667 OFFCURVE",
"338.5 575 CURVE SMOOTH",
"338.833 564.333 OFFCURVE",
"339 554 OFFCURVE",
"339 544 CURVE SMOOTH",
"339 505.333 OFFCURVE",
"326 500.333 OFFCURVE",
"286 495 CURVE SMOOTH",
"134.289 470.531 OFFCURVE",
"32 376.237 OFFCURVE",
"32 267 CURVE SMOOTH",
"32 181.667 OFFCURVE",
"128 137.667 OFFCURVE",
"320 135 CURVE SMOOTH",
"328 135 OFFCURVE",
"333 129.667 OFFCURVE",
"335 119 CURVE",
"337.667 79 OFFCURVE",
"343 47.833 OFFCURVE",
"351 25.5 CURVE SMOOTH",
"359 3.167 OFFCURVE",
"373.333 -8 OFFCURVE",
"394 -8 CURVE SMOOTH",
"401.333 -8 OFFCURVE",
"411.333 -3.667 OFFCURVE",
"424 5 CURVE",
"409.333 26.333 OFFCURVE",
"396 62 OFFCURVE",
"396 118 CURVE SMOOTH",
"396 129.333 OFFCURVE",
"401.333 136.333 OFFCURVE",
"412 139 CURVE",
"548.802 156.1 OFFCURVE",
"683 223.855 OFFCURVE",
"683 318 CURVE SMOOTH",
"683 413.398 OFFCURVE",
"562.978 500.847 OFFCURVE",
"422 513 CURVE",
"418 513 OFFCURVE",
"411 518.333 OFFCURVE",
"411 525 CURVE SMOOTH",
"411 575.348 OFFCURVE",
"433 634.978 OFFCURVE",
"433 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 361.394 OFFCURVE",
"207.278 432.922 OFFCURVE",
"308 451 CURVE",
"310.667 451.667 OFFCURVE",
"313.167 452 OFFCURVE",
"315.5 452 CURVE SMOOTH",
"317.833 452 OFFCURVE",
"320 452 OFFCURVE",
"322 452 CURVE SMOOTH",
"327.333 452 OFFCURVE",
"338 447.333 OFFCURVE",
"338 438 CURVE",
"335.333 382 OFFCURVE",
"334 336 OFFCURVE",
"334 280 CURVE SMOOTH",
"334 266 OFFCURVE",
"334 251.5 OFFCURVE",
"334 236.5 CURVE SMOOTH",
"334 221.5 OFFCURVE",
"334.333 205.667 OFFCURVE",
"335 189 CURVE",
"335 181.667 OFFCURVE",
"330.667 178 OFFCURVE",
"322 178 CURVE SMOOTH",
"213.387 178 OFFCURVE",
"95 198.132 OFFCURVE",
"95 273 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"611 243.888 OFFCURVE",
"520.717 181 OFFCURVE",
"408 181 CURVE SMOOTH",
"401.333 181 OFFCURVE",
"394 181.333 OFFCURVE",
"394 192 CURVE SMOOTH",
"394 272 OFFCURVE",
"397.333 355 OFFCURVE",
"404 447 CURVE",
"406.667 457.667 OFFCURVE",
"410.333 469 OFFCURVE",
"425 469 CURVE SMOOTH",
"524.407 466.451 OFFCURVE",
"611 403.961 OFFCURVE",
"611 321 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 934 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 53 22 53 38 53 54 53 70 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 53 101 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 77 106 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 77 25 77 41 77 57 77 73 77 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
85 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
48 82 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 58 119 58 135 58 151 58 167 58 183 58 199 58 215 58 231 58 247 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 58 23 58 39 58 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 58 70 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
30 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 713;
}
);
note = EfCyrillic;
unicode = 0424;
},
{
glyphname = HaCyrillic;
layers = (
{
components = (
{
name = X;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = HaCyrillic;
unicode = 0425;
},
{
glyphname = TseCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"522 77 OFFCURVE",
"510.667 85 OFFCURVE",
"492 85 CURVE SMOOTH",
"475.333 85 OFFCURVE",
"457.667 82 OFFCURVE",
"439 76 CURVE",
"436.333 90.667 OFFCURVE",
"434.333 111.833 OFFCURVE",
"433 139.5 CURVE SMOOTH",
"431.667 167.167 OFFCURVE",
"431 207.333 OFFCURVE",
"431 260 CURVE SMOOTH",
"431 307.472 OFFCURVE",
"442.433 463.216 OFFCURVE",
"453 571 CURVE SMOOTH",
"454.748 589.067 OFFCURVE",
"470 640.168 OFFCURVE",
"470 641 CURVE SMOOTH",
"470 651.768 OFFCURVE",
"442.005 670 OFFCURVE",
"430 670 CURVE SMOOTH",
"412.097 670 OFFCURVE",
"378 642.219 OFFCURVE",
"378 624 CURVE",
"371.333 513.333 OFFCURVE",
"371 404.333 OFFCURVE",
"371 267 CURVE SMOOTH",
"371 205.289 OFFCURVE",
"373.742 121.481 OFFCURVE",
"378 64 CURVE",
"320.506 47.902 OFFCURVE",
"225.041 34 OFFCURVE",
"185 34 CURVE SMOOTH",
"93.799 34 OFFCURVE",
"96 54.727 OFFCURVE",
"96 154 CURVE SMOOTH",
"96 222 OFFCURVE",
"102.5 313 OFFCURVE",
"108.5 397 CURVE SMOOTH",
"113.527 467.385 OFFCURVE",
"121 557.284 OFFCURVE",
"121 595 CURVE SMOOTH",
"121 649.667 OFFCURVE",
"109.333 677 OFFCURVE",
"86 677 CURVE SMOOTH",
"63.333 677 OFFCURVE",
"55 669.667 OFFCURVE",
"55 643 CURVE SMOOTH",
"55 627.497 OFFCURVE",
"59 582.503 OFFCURVE",
"59 567 CURVE SMOOTH",
"59 497.699 OFFCURVE",
"40 267.301 OFFCURVE",
"40 198 CURVE SMOOTH",
"40 37.288 OFFCURVE",
"49.07 -14 OFFCURVE",
"148 -14 CURVE SMOOTH",
"248 -14 OFFCURVE",
"354.333 -2.667 OFFCURVE",
"461 24 CURVE",
"460.333 18.667 OFFCURVE",
"460 13.667 OFFCURVE",
"460 9 CURVE SMOOTH",
"460 4.333 OFFCURVE",
"460 -0.667 OFFCURVE",
"460 -6 CURVE SMOOTH",
"460 -69.493 OFFCURVE",
"467.09 -138 OFFCURVE",
"508 -138 CURVE SMOOTH",
"521.333 -138 OFFCURVE",
"531.667 -133.667 OFFCURVE",
"539 -125 CURVE",
"529.857 -103.666 OFFCURVE",
"522 -10.362 OFFCURVE",
"522 53 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 933 53 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 12 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 12 106 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 17 values pushed */
137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 8 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 12 25 12 41 12 57 12 73 12 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
105 12 121 12 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 43 22 43 38 43 54 43 70 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 43 101 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 53 106 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 53 25 53 41 53 57 53 73 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
48 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 48 23 48 39 48 55 48 71 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 48 102 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
15 18 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 540;
}
);
note = TseCyrillic;
unicode = 0426;
},
{
glyphname = cheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"31 644 LINE SMOOTH",
"31 532 OFFCURVE",
"30.167 443.333 OFFCURVE",
"41.5 378 CURVE SMOOTH",
"52.833 312.667 OFFCURVE",
"74.333 270 OFFCURVE",
"121 250 CURVE SMOOTH",
"149 237.333 OFFCURVE",
"174.667 231 OFFCURVE",
"198 231 CURVE SMOOTH",
"221.817 231 OFFCURVE",
"300.059 255.059 OFFCURVE",
"323 278 CURVE",
"325.667 240.667 OFFCURVE",
"326 203.667 OFFCURVE",
"326 181 CURVE SMOOTH",
"326 173.667 OFFCURVE",
"325.833 167.333 OFFCURVE",
"325.5 162 CURVE SMOOTH",
"325.167 156.667 OFFCURVE",
"325 152.333 OFFCURVE",
"325 149 CURVE SMOOTH",
"325 138 LINE",
"322.333 72.667 OFFCURVE",
"318.833 37.667 OFFCURVE",
"315.5 15 CURVE SMOOTH",
"313.262 -0.221 OFFCURVE",
"310 -21.107 OFFCURVE",
"310 -30 CURVE SMOOTH",
"310 -36.667 OFFCURVE",
"319.667 -40 OFFCURVE",
"333 -40 CURVE SMOOTH",
"355.667 -40 OFFCURVE",
"386 -30.667 OFFCURVE",
"386 -12 CURVE SMOOTH",
"386 -8.667 OFFCURVE",
"384.833 -5.833 OFFCURVE",
"382.5 -3.5 CURVE SMOOTH",
"380.167 -1.167 OFFCURVE",
"379 1.667 OFFCURVE",
"379 5 CURVE",
"383 105 OFFCURVE",
"383 200 OFFCURVE",
"383 300 CURVE SMOOTH",
"383 420 LINE",
"383 504 LINE SMOOTH",
"383 578.616 OFFCURVE",
"394.903 682 OFFCURVE",
"339 682 CURVE SMOOTH",
"323 682 OFFCURVE",
"315 676.667 OFFCURVE",
"315 666 CURVE SMOOTH",
"315 651.526 OFFCURVE",
"319.155 618.141 OFFCURVE",
"321 596 CURVE SMOOTH",
"323.667 564 OFFCURVE",
"327 520.333 OFFCURVE",
"327 455 CURVE SMOOTH",
"327 405.667 OFFCURVE",
"321.667 360.333 OFFCURVE",
"299 319 CURVE SMOOTH",
"284.424 292.278 OFFCURVE",
"197.328 270 OFFCURVE",
"171 270 CURVE SMOOTH",
"142.333 270 OFFCURVE",
"122.333 292 OFFCURVE",
"111 336 CURVE SMOOTH",
"99.667 380 OFFCURVE",
"94 445 OFFCURVE",
"94 531 CURVE SMOOTH",
"94 548.333 OFFCURVE",
"94 566.167 OFFCURVE",
"94 584.5 CURVE SMOOTH",
"94 602.833 OFFCURVE",
"94.333 626.333 OFFCURVE",
"95 655 CURVE",
"87 664.333 OFFCURVE",
"75.667 669 OFFCURVE",
"69 669 CURVE SMOOTH",
"54.333 669 OFFCURVE",
"36.333 666.333 OFFCURVE",
"31 661 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 934 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 46 106 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 46 25 46 41 46 57 46 73 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
12 928 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
58 43 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 431;
}
);
note = cheCyrillic;
unicode = 0427;
},
{
glyphname = ShaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"671 41 OFFCURVE",
"672 46.333 OFFCURVE",
"672 51 CURVE SMOOTH",
"672 68.333 OFFCURVE",
"660.333 77 OFFCURVE",
"647 77 CURVE SMOOTH",
"643 77 OFFCURVE",
"640.333 76.667 OFFCURVE",
"639 76 CURVE",
"636.333 90.667 OFFCURVE",
"634.333 111.833 OFFCURVE",
"633 139.5 CURVE SMOOTH",
"631.667 167.167 OFFCURVE",
"631 207.333 OFFCURVE",
"631 260 CURVE SMOOTH",
"631 307.404 OFFCURVE",
"642.559 462.501 OFFCURVE",
"653 569 CURVE SMOOTH",
"654.748 587.067 OFFCURVE",
"670 638.168 OFFCURVE",
"670 639 CURVE SMOOTH",
"670 649.768 OFFCURVE",
"642.005 668 OFFCURVE",
"630 668 CURVE SMOOTH",
"612.097 668 OFFCURVE",
"578 640.219 OFFCURVE",
"578 622 CURVE",
"571.333 511.333 OFFCURVE",
"571 404.333 OFFCURVE",
"571 267 CURVE SMOOTH",
"571 205.289 OFFCURVE",
"573.742 121.481 OFFCURVE",
"578 64 CURVE",
"547.333 56 OFFCURVE",
"477.333 48.333 OFFCURVE",
"400 43 CURVE",
"389.333 43 OFFCURVE",
"377.667 44.667 OFFCURVE",
"375 58 CURVE SMOOTH",
"364.333 108.667 OFFCURVE",
"362 163 OFFCURVE",
"362 223 CURVE SMOOTH",
"362 235 OFFCURVE",
"361.833 257 OFFCURVE",
"361.5 289 CURVE SMOOTH",
"361.167 321 OFFCURVE",
"361 359 OFFCURVE",
"361 403 CURVE SMOOTH",
"361 483 OFFCURVE",
"362 549.333 OFFCURVE",
"378 592 CURVE SMOOTH",
"388.667 620 OFFCURVE",
"393 629.667 OFFCURVE",
"393 643 CURVE SMOOTH",
"393 660.333 OFFCURVE",
"363.667 676 OFFCURVE",
"341 676 CURVE SMOOTH",
"318.333 676 OFFCURVE",
"303 668 OFFCURVE",
"303 652 CURVE SMOOTH",
"303 644 OFFCURVE",
"304 635 OFFCURVE",
"306 625 CURVE SMOOTH",
"308 615 OFFCURVE",
"309 607 OFFCURVE",
"309 601 CURVE",
"302.333 521 OFFCURVE",
"299 442.333 OFFCURVE",
"299 365 CURVE SMOOTH",
"299 273.404 OFFCURVE",
"301.434 120.858 OFFCURVE",
"314 53 CURVE",
"314 45 OFFCURVE",
"310.667 37 OFFCURVE",
"300 37 CURVE",
"246.667 34.333 OFFCURVE",
"199.667 34 OFFCURVE",
"185 34 CURVE SMOOTH",
"93.799 34 OFFCURVE",
"96 54.727 OFFCURVE",
"96 154 CURVE SMOOTH",
"96 222 OFFCURVE",
"102.5 313 OFFCURVE",
"108.5 397 CURVE SMOOTH",
"113.527 467.385 OFFCURVE",
"121 557.284 OFFCURVE",
"121 595 CURVE SMOOTH",
"121 649.667 OFFCURVE",
"109.333 677 OFFCURVE",
"86 677 CURVE SMOOTH",
"63.333 677 OFFCURVE",
"55 669.667 OFFCURVE",
"55 643 CURVE SMOOTH",
"55 627.497 OFFCURVE",
"59 582.503 OFFCURVE",
"59 567 CURVE SMOOTH",
"59 497.699 OFFCURVE",
"40 267.301 OFFCURVE",
"40 198 CURVE SMOOTH",
"40 37.288 OFFCURVE",
"49.07 -14 OFFCURVE",
"148 -14 CURVE SMOOTH",
"180 -14 OFFCURVE",
"249.667 -13.667 OFFCURVE",
"323 -11 CURVE",
"329.667 -11 OFFCURVE",
"335.5 -13 OFFCURVE",
"340.5 -17 CURVE SMOOTH",
"345.5 -21 OFFCURVE",
"351.333 -23 OFFCURVE",
"358 -23 CURVE SMOOTH",
"379.737 -23 OFFCURVE",
"387.077 -9 OFFCURVE",
"402 -9 CURVE SMOOTH",
"490.846 -6.779 OFFCURVE",
"573.593 7.986 OFFCURVE",
"646 22 CURVE SMOOTH",
"658.667 24 OFFCURVE",
"666.333 28.333 OFFCURVE",
"669 35 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 934 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
117 933 89 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 43 22 43 38 43 54 43 70 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 43 101 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 77 22 77 38 77 54 77 70 77 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 77 101 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 89 106 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 89 121 89 137 89 153 89 169 89 185 89 201 89 217 89 233 89 249 89 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 89 25 89 41 89 57 89 73 89 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
125 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
107 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 48 23 48 39 48 55 48 71 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 48 102 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
86 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 86 119 86 135 86 151 86 167 86 183 86 199 86 215 86 231 86 247 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 86 23 86 39 86 55 86 71 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 86 102 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 700;
}
);
note = ShaCyrillic;
unicode = 0428;
},
{
glyphname = ShchaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"722 77 OFFCURVE",
"710.667 85 OFFCURVE",
"692 85 CURVE SMOOTH",
"675.333 85 OFFCURVE",
"657.667 82 OFFCURVE",
"639 76 CURVE",
"636.333 90.667 OFFCURVE",
"634.333 111.833 OFFCURVE",
"633 139.5 CURVE SMOOTH",
"631.667 167.167 OFFCURVE",
"631 207.333 OFFCURVE",
"631 260 CURVE SMOOTH",
"631 307.472 OFFCURVE",
"642.433 463.216 OFFCURVE",
"653 571 CURVE SMOOTH",
"654.748 589.067 OFFCURVE",
"670 640.168 OFFCURVE",
"670 641 CURVE SMOOTH",
"670 651.768 OFFCURVE",
"642.005 670 OFFCURVE",
"630 670 CURVE SMOOTH",
"612.097 670 OFFCURVE",
"578 642.219 OFFCURVE",
"578 624 CURVE",
"571.333 513.333 OFFCURVE",
"571 404.333 OFFCURVE",
"571 267 CURVE SMOOTH",
"571 205.289 OFFCURVE",
"573.742 121.481 OFFCURVE",
"578 64 CURVE",
"547.333 56 OFFCURVE",
"477.333 48.333 OFFCURVE",
"400 43 CURVE",
"389.333 43 OFFCURVE",
"377.667 44.667 OFFCURVE",
"375 58 CURVE SMOOTH",
"364.333 108.667 OFFCURVE",
"362 163 OFFCURVE",
"362 223 CURVE SMOOTH",
"362 235 OFFCURVE",
"361.833 257 OFFCURVE",
"361.5 289 CURVE SMOOTH",
"361.167 321 OFFCURVE",
"361 359 OFFCURVE",
"361 403 CURVE SMOOTH",
"361 483 OFFCURVE",
"362 547.333 OFFCURVE",
"378 590 CURVE SMOOTH",
"388.667 618 OFFCURVE",
"393 627.667 OFFCURVE",
"393 641 CURVE SMOOTH",
"393 658.333 OFFCURVE",
"363.667 674 OFFCURVE",
"341 674 CURVE SMOOTH",
"318.333 674 OFFCURVE",
"303 666 OFFCURVE",
"303 650 CURVE SMOOTH",
"303 642 OFFCURVE",
"304 633 OFFCURVE",
"306 623 CURVE SMOOTH",
"308 613 OFFCURVE",
"309 605 OFFCURVE",
"309 599 CURVE",
"302.333 519 OFFCURVE",
"299 442.333 OFFCURVE",
"299 365 CURVE SMOOTH",
"299 273.404 OFFCURVE",
"301.434 120.858 OFFCURVE",
"314 53 CURVE",
"314 45 OFFCURVE",
"310.667 37 OFFCURVE",
"300 37 CURVE",
"246.667 34.333 OFFCURVE",
"199.667 34 OFFCURVE",
"185 34 CURVE SMOOTH",
"93.799 34 OFFCURVE",
"96 54.727 OFFCURVE",
"96 154 CURVE SMOOTH",
"96 222 OFFCURVE",
"102.5 313 OFFCURVE",
"108.5 397 CURVE SMOOTH",
"113.527 467.385 OFFCURVE",
"121 557.284 OFFCURVE",
"121 595 CURVE SMOOTH",
"121 649.667 OFFCURVE",
"109.333 677 OFFCURVE",
"86 677 CURVE SMOOTH",
"63.333 677 OFFCURVE",
"55 669.667 OFFCURVE",
"55 643 CURVE SMOOTH",
"55 627.497 OFFCURVE",
"59 582.503 OFFCURVE",
"59 567 CURVE SMOOTH",
"59 497.699 OFFCURVE",
"40 267.301 OFFCURVE",
"40 198 CURVE SMOOTH",
"40 37.288 OFFCURVE",
"49.07 -14 OFFCURVE",
"148 -14 CURVE SMOOTH",
"180 -14 OFFCURVE",
"249.667 -13.667 OFFCURVE",
"323 -11 CURVE",
"329.667 -11 OFFCURVE",
"335.5 -13 OFFCURVE",
"340.5 -17 CURVE SMOOTH",
"345.5 -21 OFFCURVE",
"351.333 -23 OFFCURVE",
"358 -23 CURVE SMOOTH",
"379.737 -23 OFFCURVE",
"387.077 -9 OFFCURVE",
"402 -9 CURVE SMOOTH",
"496.987 -6.625 OFFCURVE",
"581.085 8.533 OFFCURVE",
"661 24 CURVE",
"660.333 18.667 OFFCURVE",
"660 13.667 OFFCURVE",
"660 9 CURVE SMOOTH",
"660 4.333 OFFCURVE",
"660 -0.667 OFFCURVE",
"660 -6 CURVE SMOOTH",
"660 -69.493 OFFCURVE",
"667.09 -138 OFFCURVE",
"708 -138 CURVE SMOOTH",
"721.333 -138 OFFCURVE",
"731.667 -133.667 OFFCURVE",
"739 -125 CURVE",
"729.857 -103.666 OFFCURVE",
"722 -10.362 OFFCURVE",
"722 53 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 934 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
130 933 102 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 12 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 12 106 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 11 values pushed */
185 12 201 12 217 12 233 12 249 12 5 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 12 25 12 41 12 57 12 73 12 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 11 values pushed */
105 12 121 12 137 12 153 12 169 12 5 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 56 22 56 38 56 54 56 70 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 56 101 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
84 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
54 90 70 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 90 118 90 134 90 150 90 166 90 182 90 198 90 214 90 230 90 246 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 90 22 90 38 90 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 90 101 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 102 106 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 102 25 102 41 102 57 102 73 102 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
120 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
99 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 99 119 99 135 99 151 99 167 99 183 99 199 99 215 99 231 99 247 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 99 23 99 39 99 55 99 71 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 99 102 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
15 20 99 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 61 119 61 135 61 151 61 167 61 183 61 199 61 215 61 231 61 247 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 61 23 61 39 61 55 61 71 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 61 102 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 740;
}
);
note = ShchaCyrillic;
unicode = 0429;
},
{
glyphname = HardSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"333 649.667 OFFCURVE",
"303 659 OFFCURVE",
"275 659 CURVE SMOOTH",
"246.52 659 OFFCURVE",
"151.387 657.28 OFFCURVE",
"113 656 CURVE SMOOTH",
"77.062 654.802 OFFCURVE",
"4 648.954 OFFCURVE",
"4 635 CURVE SMOOTH",
"4 619.441 OFFCURVE",
"10.028 582 OFFCURVE",
"30 582 CURVE SMOOTH",
"40.667 582 OFFCURVE",
"50.833 585.5 OFFCURVE",
"60.5 592.5 CURVE SMOOTH",
"70.167 599.5 OFFCURVE",
"81.333 604 OFFCURVE",
"94 606 CURVE SMOOTH",
"112.667 608.667 OFFCURVE",
"134.333 611 OFFCURVE",
"165 611 CURVE SMOOTH",
"199.667 611 OFFCURVE",
"224.333 610.333 OFFCURVE",
"243 609 CURVE",
"243 569 LINE",
"240.333 537 OFFCURVE",
"238.167 502.667 OFFCURVE",
"236.5 466 CURVE SMOOTH",
"234.833 429.333 OFFCURVE",
"232.667 385.667 OFFCURVE",
"230 335 CURVE",
"217.333 328.333 OFFCURVE",
"211 320 OFFCURVE",
"211 310 CURVE SMOOTH",
"211 302 OFFCURVE",
"217.333 291.333 OFFCURVE",
"232 286 CURVE",
"229.333 218 OFFCURVE",
"229 160 OFFCURVE",
"229 96 CURVE",
"226.047 87.142 OFFCURVE",
"199 89.86 OFFCURVE",
"199 73 CURVE SMOOTH",
"199 65 OFFCURVE",
"203.667 59 OFFCURVE",
"213 55 CURVE SMOOTH",
"233 47 OFFCURVE",
"236.333 43.667 OFFCURVE",
"239 9 CURVE",
"239.667 -7 OFFCURVE",
"247.333 -15 OFFCURVE",
"262 -15 CURVE SMOOTH",
"278 -15 OFFCURVE",
"281.333 -8 OFFCURVE",
"284 0 CURVE",
"281.333 12 OFFCURVE",
"281 16.333 OFFCURVE",
"281 23 CURVE",
"335.667 9.667 OFFCURVE",
"378.667 3 OFFCURVE",
"410 3 CURVE SMOOTH",
"519.788 3 OFFCURVE",
"646 67.316 OFFCURVE",
"646 178 CURVE SMOOTH",
"646 311.656 OFFCURVE",
"487.705 340 OFFCURVE",
"356 340 CURVE SMOOTH",
"330 340 OFFCURVE",
"306 339 OFFCURVE",
"284 337 CURVE",
"289.333 437 OFFCURVE",
"294 515 OFFCURVE",
"302 599 CURVE",
"304 598.333 OFFCURVE",
"308 598 OFFCURVE",
"314 598 CURVE SMOOTH",
"328.667 598 OFFCURVE",
"333 604.333 OFFCURVE",
"333 623 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"590 108.252 OFFCURVE",
"495.246 47 OFFCURVE",
"408 47 CURVE SMOOTH",
"354 47 OFFCURVE",
"311.667 56.333 OFFCURVE",
"281 75 CURVE",
"279 113.667 OFFCURVE",
"278 151.667 OFFCURVE",
"278 189 CURVE SMOOTH",
"278 223.667 OFFCURVE",
"278.333 251.667 OFFCURVE",
"281 285 CURVE",
"297.667 289 OFFCURVE",
"320 291 OFFCURVE",
"348 291 CURVE SMOOTH",
"507.273 291 OFFCURVE",
"590 254.934 OFFCURVE",
"590 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 934 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 934 76 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 88 22 88 38 88 54 88 70 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 88 101 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
52 35 88 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 76 106 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 76 121 76 137 76 153 76 169 76 185 76 201 76 217 76 233 76 249 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 76 25 76 41 76 57 76 73 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
73 931 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 931 81 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
90 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 90 23 90 39 90 55 90 71 90 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 90 102 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
20 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 676;
}
);
note = HardSignCyrillic;
unicode = 042A;
},
{
glyphname = YeruCyrillic;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = SoftSignCyrillic;
},
{
alignment = -1;
name = I;
transform = "{1, 0, 0, 1, 532, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 704;
}
);
note = YeruCyrillic;
unicode = 042B;
},
{
glyphname = SoftSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"151.333 611.333 OFFCURVE",
"156 626.667 OFFCURVE",
"156 640 CURVE SMOOTH",
"156 660 OFFCURVE",
"144.333 673 OFFCURVE",
"123 673 CURVE SMOOTH",
"95 673 OFFCURVE",
"82.667 663.667 OFFCURVE",
"80 645 CURVE SMOOTH",
"72 597 OFFCURVE",
"65.333 546 OFFCURVE",
"60 474 CURVE SMOOTH",
"51 335 LINE",
"38.333 328.333 OFFCURVE",
"32 320 OFFCURVE",
"32 310 CURVE SMOOTH",
"32 302 OFFCURVE",
"39 295.667 OFFCURVE",
"53 291 CURVE",
"51 223 OFFCURVE",
"50 158 OFFCURVE",
"50 96 CURVE",
"47.047 87.142 OFFCURVE",
"20 89.86 OFFCURVE",
"20 73 CURVE SMOOTH",
"20 65 OFFCURVE",
"24.667 59 OFFCURVE",
"34 55 CURVE SMOOTH",
"54 47 OFFCURVE",
"57.333 43.667 OFFCURVE",
"60 9 CURVE",
"60.667 -7 OFFCURVE",
"68.333 -15 OFFCURVE",
"83 -15 CURVE SMOOTH",
"99 -15 OFFCURVE",
"102.333 -8 OFFCURVE",
"105 0 CURVE",
"102.333 12 OFFCURVE",
"102 16.333 OFFCURVE",
"102 23 CURVE",
"156.667 9.667 OFFCURVE",
"199.667 3 OFFCURVE",
"231 3 CURVE SMOOTH",
"339.483 3 OFFCURVE",
"475 67.511 OFFCURVE",
"475 178 CURVE SMOOTH",
"475 245.904 OFFCURVE",
"424.696 287.104 OFFCURVE",
"361 309 CURVE SMOOTH",
"301.897 329.317 OFFCURVE",
"226.533 336 OFFCURVE",
"177 336 CURVE SMOOTH",
"151 336 OFFCURVE",
"127 335 OFFCURVE",
"105 333 CURVE",
"110.333 414.333 OFFCURVE",
"126 514 OFFCURVE",
"142 594 CURVE"
);
},
{
closed = 1;
nodes = (
"424 108.835 OFFCURVE",
"316.042 44 OFFCURVE",
"229 44 CURVE SMOOTH",
"175 44 OFFCURVE",
"132.667 53.333 OFFCURVE",
"102 72 CURVE",
"100 110.667 OFFCURVE",
"99 149.667 OFFCURVE",
"99 189 CURVE SMOOTH",
"99 223 OFFCURVE",
"100 256.667 OFFCURVE",
"102 290 CURVE",
"118.667 294 OFFCURVE",
"141 296 OFFCURVE",
"169 296 CURVE SMOOTH",
"327.585 296 OFFCURVE",
"424 255.135 OFFCURVE",
"424 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 934 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 933 55 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 64 22 64 38 64 54 64 70 64 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 64 101 64 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
90 55 106 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 7 values pushed */
41 55 57 55 73 55 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
9 55 25 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
5 928 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
68 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 68 23 68 39 68 55 68 71 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 68 102 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
17 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 505;
}
);
note = SoftSignCyrillic;
unicode = 042C;
},
{
glyphname = ECyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"520 318.667 OFFCURVE",
"517.833 324.333 OFFCURVE",
"513.5 329 CURVE SMOOTH",
"509.167 333.667 OFFCURVE",
"507 338 OFFCURVE",
"507 342 CURVE SMOOTH",
"507 435.333 OFFCURVE",
"481.5 520.5 OFFCURVE",
"439.5 582.5 CURVE SMOOTH",
"397.5 644.5 OFFCURVE",
"337.333 684 OFFCURVE",
"268 684 CURVE SMOOTH",
"176 684 OFFCURVE",
"101.667 631.333 OFFCURVE",
"59 546 CURVE SMOOTH",
"49 526 OFFCURVE",
"44 510.333 OFFCURVE",
"44 499 CURVE SMOOTH",
"44 476.333 OFFCURVE",
"59.333 466 OFFCURVE",
"78 466 CURVE SMOOTH",
"86 466 OFFCURVE",
"90 468.333 OFFCURVE",
"90 473 CURVE SMOOTH",
"90 495.796 OFFCURVE",
"130.467 548.467 OFFCURVE",
"149 567 CURVE SMOOTH",
"188.333 606.333 OFFCURVE",
"230.333 626 OFFCURVE",
"275 626 CURVE SMOOTH",
"388.459 626 OFFCURVE",
"445.771 500.342 OFFCURVE",
"451 367 CURVE",
"451 357.667 OFFCURVE",
"447.667 353 OFFCURVE",
"441 353 CURVE SMOOTH",
"396.955 353 OFFCURVE",
"296.715 351.134 OFFCURVE",
"245 348 CURVE SMOOTH",
"208.517 345.789 OFFCURVE",
"128 341.525 OFFCURVE",
"128 329 CURVE SMOOTH",
"128 310.692 OFFCURVE",
"133.781 273 OFFCURVE",
"154 273 CURVE SMOOTH",
"164.667 273 OFFCURVE",
"174.833 277 OFFCURVE",
"184.5 285 CURVE SMOOTH",
"194.167 293 OFFCURVE",
"205.333 298 OFFCURVE",
"218 300 CURVE SMOOTH",
"236.667 302.667 OFFCURVE",
"263.333 305 OFFCURVE",
"294 305 CURVE SMOOTH",
"344.667 305 OFFCURVE",
"398.667 303.667 OFFCURVE",
"436 301 CURVE",
"448 301 OFFCURVE",
"448 295.667 OFFCURVE",
"448 285 CURVE",
"432.757 132.572 OFFCURVE",
"360.054 22 OFFCURVE",
"237 22 CURVE SMOOTH",
"175.667 22 OFFCURVE",
"133.333 44 OFFCURVE",
"100 80 CURVE",
"73.792 106.208 OFFCURVE",
"85.819 148 OFFCURVE",
"48 148 CURVE SMOOTH",
"35.333 148 OFFCURVE",
"29 140.333 OFFCURVE",
"29 125 CURVE SMOOTH",
"29 54.558 OFFCURVE",
"123.364 -28 OFFCURVE",
"239 -28 CURVE SMOOTH",
"386.968 -28 OFFCURVE",
"479.583 103.877 OFFCURVE",
"503 273 CURVE SMOOTH",
"505.884 290.303 OFFCURVE",
"520 285.912 OFFCURVE",
"520 312 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 56 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 56 106 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 56 25 56 41 56 57 56 73 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
83 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
25 931 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
78 931 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 931 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 549;
}
);
note = ECyrillic;
unicode = 042D;
},
{
glyphname = YuCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"718 432.333 OFFCURVE",
"696 518.167 OFFCURVE",
"656 581.5 CURVE SMOOTH",
"616 644.833 OFFCURVE",
"558.333 684 OFFCURVE",
"489 684 CURVE SMOOTH",
"331.195 684 OFFCURVE",
"257.118 531.292 OFFCURVE",
"232 375 CURVE SMOOTH",
"229.351 356.454 OFFCURVE",
"150.706 358.366 OFFCURVE",
"112 355 CURVE",
"101.333 355 OFFCURVE",
"98 364.333 OFFCURVE",
"98 371 CURVE",
"102 435 OFFCURVE",
"108.333 499 OFFCURVE",
"115 571 CURVE SMOOTH",
"116.748 589.067 OFFCURVE",
"132 640.168 OFFCURVE",
"132 641 CURVE SMOOTH",
"132 651.768 OFFCURVE",
"104.005 670 OFFCURVE",
"92 670 CURVE SMOOTH",
"71.258 670 OFFCURVE",
"40 648.909 OFFCURVE",
"40 624 CURVE",
"36 532 OFFCURVE",
"36 446.333 OFFCURVE",
"36 361 CURVE SMOOTH",
"36 343.332 OFFCURVE",
"26 342.422 OFFCURVE",
"26 323 CURVE SMOOTH",
"26 314.333 OFFCURVE",
"27.5 308 OFFCURVE",
"30.5 304 CURVE SMOOTH",
"33.5 300 OFFCURVE",
"35 292.667 OFFCURVE",
"35 282 CURVE SMOOTH",
"35 263.333 OFFCURVE",
"34.667 243.833 OFFCURVE",
"34 223.5 CURVE SMOOTH",
"33.333 203.167 OFFCURVE",
"33 186 OFFCURVE",
"33 172 CURVE SMOOTH",
"33 148 OFFCURVE",
"34.333 122 OFFCURVE",
"41 62 CURVE SMOOTH",
"45.667 15.333 OFFCURVE",
"63 -8 OFFCURVE",
"93 -8 CURVE SMOOTH",
"100.333 -8 OFFCURVE",
"110.333 -3.667 OFFCURVE",
"123 5 CURVE",
"103 33.667 OFFCURVE",
"93 96 OFFCURVE",
"93 192 CURVE SMOOTH",
"93 210 OFFCURVE",
"93.333 228.167 OFFCURVE",
"94 246.5 CURVE SMOOTH",
"94.667 264.833 OFFCURVE",
"95 283.667 OFFCURVE",
"95 303 CURVE SMOOTH",
"95 309 OFFCURVE",
"100.333 312.833 OFFCURVE",
"111 314.5 CURVE SMOOTH",
"121.667 316.167 OFFCURVE",
"143.333 317 OFFCURVE",
"176 317 CURVE SMOOTH",
"204 317 OFFCURVE",
"226 313.667 OFFCURVE",
"226 287 CURVE SMOOTH",
"226 189.667 OFFCURVE",
"244.333 111.667 OFFCURVE",
"283 57 CURVE SMOOTH",
"321.667 2.333 OFFCURVE",
"380 -28 OFFCURVE",
"460 -28 CURVE SMOOTH",
"540 -28 OFFCURVE",
"604.833 12.5 OFFCURVE",
"649.5 78.5 CURVE SMOOTH",
"694.167 144.5 OFFCURVE",
"718 236.333 OFFCURVE",
"718 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"662 252 OFFCURVE",
"644.5 170.333 OFFCURVE",
"610.5 113 CURVE SMOOTH",
"576.5 55.667 OFFCURVE",
"524.667 22 OFFCURVE",
"458 22 CURVE SMOOTH",
"329.863 22 OFFCURVE",
"275 125.454 OFFCURVE",
"275 258 CURVE SMOOTH",
"275 339.333 OFFCURVE",
"288.333 432.167 OFFCURVE",
"323 503.5 CURVE SMOOTH",
"357.667 574.833 OFFCURVE",
"413.333 626 OFFCURVE",
"496 626 CURVE SMOOTH",
"616.438 626 OFFCURVE",
"662 487.99 OFFCURVE",
"662 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 934 34 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 932 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 78 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 19 22 19 38 19 54 19 70 19 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 19 101 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 78 106 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 78 121 78 137 78 153 78 169 78 185 78 201 78 217 78 233 78 249 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 78 25 78 41 78 57 78 73 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 88 22 88 38 88 54 88 70 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 88 101 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
93 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 931 83 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 761;
}
);
note = YuCyrillic;
unicode = 042E;
},
{
glyphname = YaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"-6 -13 OFFCURVE",
"3.333 -18 OFFCURVE",
"10 -18 CURVE SMOOTH",
"18.667 -18 OFFCURVE",
"24.667 -16.333 OFFCURVE",
"28 -13 CURVE",
"31.333 0.333 OFFCURVE",
"44.333 17.667 OFFCURVE",
"67 39 CURVE SMOOTH",
"89.667 60.333 OFFCURVE",
"122 87.333 OFFCURVE",
"164 120 CURVE SMOOTH",
"240 180 OFFCURVE",
"312.667 211 OFFCURVE",
"346 211 CURVE SMOOTH",
"370.667 211 OFFCURVE",
"386.333 210.167 OFFCURVE",
"393 208.5 CURVE SMOOTH",
"399.667 206.833 OFFCURVE",
"403 203 OFFCURVE",
"403 197 CURVE SMOOTH",
"403 134.673 OFFCURVE",
"386.037 33.027 OFFCURVE",
"365 18 CURVE SMOOTH",
"359 14 LINE",
"359 -0.667 OFFCURVE",
"369.667 -8 OFFCURVE",
"391 -8 CURVE SMOOTH",
"407.667 -8 OFFCURVE",
"420.667 -2 OFFCURVE",
"430 10 CURVE SMOOTH",
"435.333 17.333 OFFCURVE",
"439.833 35.667 OFFCURVE",
"443.5 65 CURVE SMOOTH",
"447.167 94.333 OFFCURVE",
"450.667 138.333 OFFCURVE",
"454 197 CURVE",
"454 214.897 OFFCURVE",
"507 222.242 OFFCURVE",
"507 253 CURVE SMOOTH",
"507 266.333 OFFCURVE",
"498.667 278 OFFCURVE",
"472 286 CURVE SMOOTH",
"467.333 287.333 OFFCURVE",
"464.167 292.333 OFFCURVE",
"462.5 301 CURVE SMOOTH",
"460.833 309.667 OFFCURVE",
"460 326.667 OFFCURVE",
"460 352 CURVE SMOOTH",
"460 394 OFFCURVE",
"458.167 435 OFFCURVE",
"454.5 475 CURVE SMOOTH",
"450.833 515 OFFCURVE",
"449 555 OFFCURVE",
"449 595 CURVE SMOOTH",
"449 601.667 OFFCURVE",
"451.333 605 OFFCURVE",
"462 605 CURVE SMOOTH",
"464.667 605 OFFCURVE",
"466.833 604.833 OFFCURVE",
"468.5 604.5 CURVE SMOOTH",
"470.167 604.167 OFFCURVE",
"472.667 604 OFFCURVE",
"476 604 CURVE SMOOTH",
"489.333 604 OFFCURVE",
"492 610 OFFCURVE",
"492 622 CURVE SMOOTH",
"492 644.667 OFFCURVE",
"473 653 OFFCURVE",
"453 657 CURVE",
"450.333 667.667 OFFCURVE",
"444 683 OFFCURVE",
"424 683 CURVE SMOOTH",
"416.667 683 OFFCURVE",
"409.167 679.833 OFFCURVE",
"401.5 673.5 CURVE SMOOTH",
"393.833 667.167 OFFCURVE",
"387 664 OFFCURVE",
"381 664 CURVE SMOOTH",
"376.333 664 OFFCURVE",
"366.833 664.833 OFFCURVE",
"352.5 666.5 CURVE SMOOTH",
"338.167 668.167 OFFCURVE",
"323.667 669 OFFCURVE",
"309 669 CURVE SMOOTH",
"177.421 669 OFFCURVE",
"62 549.108 OFFCURVE",
"62 408 CURVE SMOOTH",
"62 308.302 OFFCURVE",
"129.031 260.462 OFFCURVE",
"218 241 CURVE",
"225.333 239 OFFCURVE",
"230.167 237.5 OFFCURVE",
"232.5 236.5 CURVE SMOOTH",
"234.833 235.5 OFFCURVE",
"236 234 OFFCURVE",
"236 232 CURVE SMOOTH",
"236 227.946 OFFCURVE",
"168.551 182.578 OFFCURVE",
"148.5 168.5 CURVE SMOOTH",
"114.356 144.526 OFFCURVE",
"54.917 102.917 OFFCURVE",
"42 90 CURVE",
"10 62 OFFCURVE",
"-6 31.667 OFFCURVE",
"-6 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120.745 503.926 OFFCURVE",
"200.935 620 OFFCURVE",
"308 620 CURVE SMOOTH",
"334.667 620 OFFCURVE",
"360.667 618 OFFCURVE",
"378 614 CURVE",
"396.667 522 OFFCURVE",
"409 405.333 OFFCURVE",
"409 292 CURVE SMOOTH",
"409 286 OFFCURVE",
"406.333 282.333 OFFCURVE",
"401 281 CURVE",
"378.333 273.667 OFFCURVE",
"359.833 268.5 OFFCURVE",
"345.5 265.5 CURVE SMOOTH",
"331.167 262.5 OFFCURVE",
"321.333 261 OFFCURVE",
"316 261 CURVE",
"196.467 279.594 OFFCURVE",
"115 302.297 OFFCURVE",
"115 412 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 933 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 932 94 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 94 106 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 94 25 94 41 94 57 94 73 94 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 84 22 84 38 84 54 84 70 84 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 84 101 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
106 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
81 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
22 931 100 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 931 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 528;
}
);
note = YaCyrillic;
unicode = 042F;
},
{
glyphname = aCyrillic;
layers = (
{
components = (
{
name = a;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aCyrillic;
unicode = 0430;
},
{
glyphname = beCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"67 539.333 OFFCURVE",
"79 508 OFFCURVE",
"99 484 CURVE SMOOTH",
"111.667 468.667 OFFCURVE",
"122 457.833 OFFCURVE",
"130 451.5 CURVE SMOOTH",
"138 445.167 OFFCURVE",
"142 439.333 OFFCURVE",
"142 434 CURVE SMOOTH",
"142 430.628 OFFCURVE",
"100.964 398.588 OFFCURVE",
"83 374.5 CURVE SMOOTH",
"53.667 335.167 OFFCURVE",
"24 271.333 OFFCURVE",
"24 166 CURVE SMOOTH",
"24 28.667 OFFCURVE",
"86 -33 OFFCURVE",
"186 -33 CURVE SMOOTH",
"285.201 -33 OFFCURVE",
"341 74.227 OFFCURVE",
"341 192 CURVE SMOOTH",
"341 318.129 OFFCURVE",
"300.686 385.514 OFFCURVE",
"228 437 CURVE SMOOTH",
"156 487.667 OFFCURVE",
"120 528.333 OFFCURVE",
"120 567 CURVE SMOOTH",
"120 630.778 OFFCURVE",
"224.501 638 OFFCURVE",
"266 638 CURVE SMOOTH",
"284.124 638 OFFCURVE",
"294.059 631 OFFCURVE",
"311 631 CURVE SMOOTH",
"329.667 631 OFFCURVE",
"341 636.333 OFFCURVE",
"341 659 CURVE SMOOTH",
"341 673.667 OFFCURVE",
"334.667 684 OFFCURVE",
"308 684 CURVE SMOOTH",
"206.071 684 OFFCURVE",
"67 664.941 OFFCURVE",
"67 562 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 234.333 OFFCURVE",
"100.333 294.167 OFFCURVE",
"123 337.5 CURVE SMOOTH",
"141.475 372.819 OFFCURVE",
"168.912 406 OFFCURVE",
"181 406 CURVE SMOOTH",
"185.667 406 OFFCURVE",
"192.667 403 OFFCURVE",
"202 397 CURVE SMOOTH",
"258.141 359.573 OFFCURVE",
"288 295.435 OFFCURVE",
"288 192 CURVE SMOOTH",
"288 91.736 OFFCURVE",
"244.776 7 OFFCURVE",
"175 7 CURVE SMOOTH",
"115 7 OFFCURVE",
"79 61 OFFCURVE",
"79 165 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
48 933 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 42 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 48 22 48 38 48 54 48 70 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 48 101 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 37 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
21 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 42 74 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 42 25 42 41 42 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
51 928 34 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 930 16 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = beCyrillic;
unicode = 0431;
},
{
glyphname = veCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"382 147.232 OFFCURVE",
"340.901 169.893 OFFCURVE",
"303 180 CURVE",
"297 181.333 OFFCURVE",
"292.333 182.5 OFFCURVE",
"289 183.5 CURVE SMOOTH",
"285.667 184.5 OFFCURVE",
"284 186 OFFCURVE",
"284 188 CURVE SMOOTH",
"284 190 OFFCURVE",
"286 192 OFFCURVE",
"290 194 CURVE SMOOTH",
"338 218 OFFCURVE",
"365 264.667 OFFCURVE",
"365 302 CURVE SMOOTH",
"365 343.333 OFFCURVE",
"349.667 366 OFFCURVE",
"307 398 CURVE SMOOTH",
"280.333 416.667 OFFCURVE",
"258.333 430 OFFCURVE",
"225 430 CURVE SMOOTH",
"145.077 430 OFFCURVE",
"150.628 387.431 OFFCURVE",
"105 338 CURVE",
"105 348.667 OFFCURVE",
"105.667 359.5 OFFCURVE",
"107 370.5 CURVE SMOOTH",
"108.333 381.5 OFFCURVE",
"109 391.333 OFFCURVE",
"109 400 CURVE SMOOTH",
"109 412 OFFCURVE",
"105.333 417 OFFCURVE",
"84 417 CURVE SMOOTH",
"66.667 417 OFFCURVE",
"46 399.333 OFFCURVE",
"46 386 CURVE SMOOTH",
"46 196 LINE SMOOTH",
"46 190.667 OFFCURVE",
"43.5 186.667 OFFCURVE",
"38.5 184 CURVE SMOOTH",
"33.5 181.333 OFFCURVE",
"31 177.333 OFFCURVE",
"31 172 CURVE SMOOTH",
"31 166.667 OFFCURVE",
"33.833 162.833 OFFCURVE",
"39.5 160.5 CURVE SMOOTH",
"45.167 158.167 OFFCURVE",
"48 153.333 OFFCURVE",
"48 146 CURVE SMOOTH",
"48 136 OFFCURVE",
"47.667 124.333 OFFCURVE",
"47 111 CURVE SMOOTH",
"46.333 97.667 OFFCURVE",
"46 86.667 OFFCURVE",
"46 78 CURVE SMOOTH",
"46 65.817 OFFCURVE",
"26 67.47 OFFCURVE",
"26 49 CURVE SMOOTH",
"26 28.791 OFFCURVE",
"55 33.618 OFFCURVE",
"55 18 CURVE SMOOTH",
"55 -8.667 OFFCURVE",
"63.667 -16 OFFCURVE",
"81 -16 CURVE SMOOTH",
"98.333 -16 OFFCURVE",
"103.333 -8 OFFCURVE",
"106 4 CURVE",
"138.667 -2 OFFCURVE",
"168 -5 OFFCURVE",
"194 -5 CURVE SMOOTH",
"267.233 -5 OFFCURVE",
"382 26.494 OFFCURVE",
"382 112 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 203.961 OFFCURVE",
"257.711 198.163 OFFCURVE",
"112 194 CURVE SMOOTH",
"106.667 194 OFFCURVE",
"104 196.333 OFFCURVE",
"104 201 CURVE SMOOTH",
"104 207 OFFCURVE",
"104 213.167 OFFCURVE",
"104 219.5 CURVE SMOOTH",
"104 225.833 OFFCURVE",
"104.333 231.667 OFFCURVE",
"105 237 CURVE",
"110.586 304.029 OFFCURVE",
"155.646 382 OFFCURVE",
"222 382 CURVE SMOOTH",
"271.333 382 OFFCURVE",
"308 355.667 OFFCURVE",
"308 305 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"319 67.182 OFFCURVE",
"276.93 34 OFFCURVE",
"192 34 CURVE SMOOTH",
"160 34 OFFCURVE",
"131.667 40.667 OFFCURVE",
"105 54 CURVE",
"103.667 76.667 OFFCURVE",
"103 114.667 OFFCURVE",
"103 144 CURVE SMOOTH",
"103 150.667 OFFCURVE",
"106.333 154 OFFCURVE",
"113 154 CURVE",
"126.844 154.865 OFFCURVE",
"194.96 159 OFFCURVE",
"207 159 CURVE SMOOTH",
"280.926 159 OFFCURVE",
"319 154.55 OFFCURVE",
"319 114 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 934 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 66 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
84 66 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 84 106 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 84 25 84 41 84 57 84 73 84 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 11 values pushed */
182 96 198 96 214 96 230 96 246 96 5 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 96 22 96 38 96 54 96 70 96 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 11 values pushed */
102 96 118 96 134 96 150 96 166 96 5 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
85 96 101 96 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 929 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 929 89 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
102 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 102 119 102 135 102 151 102 167 102 183 102 199 102 215 102 231 102 247 102 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 102 23 102 39 102 55 102 71 102 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 102 102 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 401;
}
);
note = veCyrillic;
unicode = 0432;
},
{
glyphname = gheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"287 424.667 OFFCURVE",
"266.333 433 OFFCURVE",
"225 433 CURVE SMOOTH",
"149.982 433 OFFCURVE",
"64.95 429.504 OFFCURVE",
"41.5 425.5 CURVE SMOOTH",
"23.829 422.483 OFFCURVE",
"13 418.916 OFFCURVE",
"13 412 CURVE SMOOTH",
"13 402.667 OFFCURVE",
"13.333 385.333 OFFCURVE",
"20 372 CURVE",
"17.333 320 OFFCURVE",
"17 265 OFFCURVE",
"17 209 CURVE SMOOTH",
"17 153.667 OFFCURVE",
"18 97.667 OFFCURVE",
"20 41 CURVE SMOOTH",
"21.333 9.667 OFFCURVE",
"37.667 -6 OFFCURVE",
"69 -6 CURVE SMOOTH",
"73 -6 OFFCURVE",
"76.667 -3.333 OFFCURVE",
"80 2 CURVE",
"68 63.333 OFFCURVE",
"69 124.667 OFFCURVE",
"69 186 CURVE SMOOTH",
"69 253.562 OFFCURVE",
"72.627 320.763 OFFCURVE",
"79 359 CURVE",
"81.629 385.288 OFFCURVE",
"135.39 385 OFFCURVE",
"179 385 CURVE SMOOTH",
"207.626 385 OFFCURVE",
"254.392 373 OFFCURVE",
"270 373 CURVE SMOOTH",
"284.667 373 OFFCURVE",
"287 382 OFFCURVE",
"287 398 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 932 25 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 23 22 23 38 23 54 23 70 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 23 101 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
38 931 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = gheCyrillic;
unicode = 0433;
},
{
glyphname = deCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"8 -21.109 OFFCURVE",
"13.413 -70.361 OFFCURVE",
"18 -91 CURVE",
"28.667 -99 OFFCURVE",
"37.333 -99 OFFCURVE",
"44 -99 CURVE",
"49.333 -97.667 OFFCURVE",
"66.333 -90 OFFCURVE",
"69 -82 CURVE",
"67 -70.667 OFFCURVE",
"64.833 -59 OFFCURVE",
"62.5 -47 CURVE SMOOTH",
"60.167 -35 OFFCURVE",
"59 -25.333 OFFCURVE",
"59 -18 CURVE",
"112.353 -9.108 OFFCURVE",
"281.878 -4 OFFCURVE",
"338 -4 CURVE SMOOTH",
"343.333 -4 OFFCURVE",
"348.333 -4 OFFCURVE",
"353 -4 CURVE SMOOTH",
"357.667 -4 OFFCURVE",
"361.667 -4.667 OFFCURVE",
"365 -6 CURVE",
"365 -31.38 OFFCURVE",
"358 -84.078 OFFCURVE",
"358 -92 CURVE SMOOTH",
"358 -102.667 OFFCURVE",
"377.333 -108 OFFCURVE",
"384 -108 CURVE SMOOTH",
"412.427 -108 OFFCURVE",
"414 -64.852 OFFCURVE",
"414 13 CURVE SMOOTH",
"414 37 OFFCURVE",
"412.667 46 OFFCURVE",
"370 46 CURVE",
"363.333 87.333 OFFCURVE",
"361 130 OFFCURVE",
"361 174 CURVE SMOOTH",
"361 250 OFFCURVE",
"366 313 OFFCURVE",
"374 381 CURVE",
"378 383.667 OFFCURVE",
"381.333 388.667 OFFCURVE",
"384 394 CURVE",
"388 404 LINE",
"388 412 OFFCURVE",
"384.333 430.333 OFFCURVE",
"359 433 CURVE",
"325.819 435.212 OFFCURVE",
"214.571 438 OFFCURVE",
"184 438 CURVE SMOOTH",
"162.667 438 OFFCURVE",
"138.667 426.333 OFFCURVE",
"136 381 CURVE SMOOTH",
"134.16 347.876 OFFCURVE",
"123.364 255.633 OFFCURVE",
"113.5 201 CURVE SMOOTH",
"102.875 142.152 OFFCURVE",
"83.34 60.396 OFFCURVE",
"59 32 CURVE",
"35 30 OFFCURVE",
"20.5 26.167 OFFCURVE",
"15.5 20.5 CURVE SMOOTH",
"10.5 14.833 OFFCURVE",
"8 7.333 OFFCURVE",
"8 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151.957 110.72 OFFCURVE",
"177.5 280.496 OFFCURVE",
"185 368 CURVE SMOOTH",
"185.667 374 OFFCURVE",
"195.833 378.5 OFFCURVE",
"215.5 381.5 CURVE SMOOTH",
"235.167 384.5 OFFCURVE",
"267.333 386 OFFCURVE",
"312 386 CURVE",
"309.333 318 OFFCURVE",
"307 265.333 OFFCURVE",
"307 200 CURVE SMOOTH",
"307 144 OFFCURVE",
"308.667 94.667 OFFCURVE",
"318 44 CURVE",
"270.901 44 OFFCURVE",
"164.91 40.36 OFFCURVE",
"113 38 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
28 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 28 22 28 38 28 54 28 70 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 28 101 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 47 106 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 47 25 47 41 47 57 47 73 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 69 23 69 39 69 55 69 71 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 69 102 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 426;
}
);
note = deCyrillic;
unicode = 0434;
},
{
glyphname = ieCyrillic;
layers = (
{
components = (
{
name = e;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ieCyrillic;
unicode = 0435;
},
{
glyphname = zheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"31.333 -45.333 OFFCURVE",
"44.667 -52 OFFCURVE",
"54 -52 CURVE SMOOTH",
"86.444 -52 OFFCURVE",
"162.826 30.362 OFFCURVE",
"203 75 CURVE SMOOTH",
"215 88.333 OFFCURVE",
"226.833 100.667 OFFCURVE",
"238.5 112 CURVE SMOOTH",
"250.167 123.333 OFFCURVE",
"262.667 136.667 OFFCURVE",
"276 152 CURVE",
"276 95.029 OFFCURVE",
"277.049 62.985 OFFCURVE",
"282 11 CURVE SMOOTH",
"286 -35.667 OFFCURVE",
"295.333 -50 OFFCURVE",
"322 -50 CURVE SMOOTH",
"335.333 -50 OFFCURVE",
"346 -41 OFFCURVE",
"346 -33 CURVE SMOOTH",
"346 -27 OFFCURVE",
"344 -18.5 OFFCURVE",
"340 -7.5 CURVE SMOOTH",
"336 3.5 OFFCURVE",
"333.667 12 OFFCURVE",
"333 18 CURVE",
"333 28.585 OFFCURVE",
"327 107.131 OFFCURVE",
"327 127 CURVE SMOOTH",
"327 139 OFFCURVE",
"327.667 147.667 OFFCURVE",
"329 153 CURVE SMOOTH",
"330.333 158.333 OFFCURVE",
"332 161.667 OFFCURVE",
"334 163 CURVE",
"340.667 159 OFFCURVE",
"348.5 151.667 OFFCURVE",
"357.5 141 CURVE SMOOTH",
"366.5 130.333 OFFCURVE",
"376.333 120 OFFCURVE",
"387 110 CURVE SMOOTH",
"396.869 100.131 OFFCURVE",
"443.137 52.57 OFFCURVE",
"469 28 CURVE SMOOTH",
"499.829 -1.288 OFFCURVE",
"551.096 -44 OFFCURVE",
"574 -44 CURVE SMOOTH",
"589.01 -44 OFFCURVE",
"624 -30.715 OFFCURVE",
"624 -11 CURVE SMOOTH",
"624 5.306 OFFCURVE",
"598.738 -5.159 OFFCURVE",
"582 6 CURVE",
"574 10.667 OFFCURVE",
"564.333 17.5 OFFCURVE",
"553 26.5 CURVE SMOOTH",
"541.667 35.5 OFFCURVE",
"524.333 50.667 OFFCURVE",
"501 72 CURVE SMOOTH",
"470.318 99.76 OFFCURVE",
"356 202.269 OFFCURVE",
"356 216 CURVE SMOOTH",
"356 235.669 OFFCURVE",
"440.133 296.72 OFFCURVE",
"472 321 CURVE SMOOTH",
"493.333 337 OFFCURVE",
"511.333 351 OFFCURVE",
"526 363 CURVE SMOOTH",
"540.667 375 OFFCURVE",
"555 381 OFFCURVE",
"569 381 CURVE SMOOTH",
"572.333 381 OFFCURVE",
"575.167 380.833 OFFCURVE",
"577.5 380.5 CURVE SMOOTH",
"579.833 380.167 OFFCURVE",
"582.333 380 OFFCURVE",
"585 380 CURVE SMOOTH",
"591.667 380 OFFCURVE",
"601 380 OFFCURVE",
"601 400 CURVE SMOOTH",
"601 423.961 OFFCURVE",
"583.417 453 OFFCURVE",
"558 453 CURVE SMOOTH",
"554.667 453 OFFCURVE",
"547.167 448.833 OFFCURVE",
"535.5 440.5 CURVE SMOOTH",
"523.833 432.167 OFFCURVE",
"508 418.333 OFFCURVE",
"488 399 CURVE SMOOTH",
"442.503 353.503 OFFCURVE",
"360.983 280.351 OFFCURVE",
"333 260 CURVE",
"329.667 260 OFFCURVE",
"328 261.667 OFFCURVE",
"328 265 CURVE SMOOTH",
"328 268.333 OFFCURVE",
"328.333 276 OFFCURVE",
"329 288 CURVE SMOOTH",
"329.667 300 OFFCURVE",
"330.667 314 OFFCURVE",
"332 330 CURVE SMOOTH",
"334.667 360 OFFCURVE",
"337.333 382.167 OFFCURVE",
"340 396.5 CURVE SMOOTH",
"342.667 410.833 OFFCURVE",
"344 419 OFFCURVE",
"344 421 CURVE SMOOTH",
"344 431.667 OFFCURVE",
"326 440 OFFCURVE",
"314 440 CURVE SMOOTH",
"298 440 OFFCURVE",
"271 423.333 OFFCURVE",
"271 410 CURVE SMOOTH",
"271 400.43 OFFCURVE",
"275.424 381.136 OFFCURVE",
"277 370.5 CURVE SMOOTH",
"279.214 355.557 OFFCURVE",
"283 305.097 OFFCURVE",
"283 262 CURVE",
"252.333 284.667 OFFCURVE",
"201.167 330.167 OFFCURVE",
"156.5 369.5 CURVE SMOOTH",
"126.417 395.991 OFFCURVE",
"76.269 442 OFFCURVE",
"73 442 CURVE SMOOTH",
"54.333 442 OFFCURVE",
"41 427.333 OFFCURVE",
"41 406 CURVE SMOOTH",
"41 400.667 OFFCURVE",
"41.333 397 OFFCURVE",
"42 395 CURVE",
"67.333 377.667 OFFCURVE",
"104.667 347.667 OFFCURVE",
"154 305 CURVE SMOOTH",
"185.455 276.54 OFFCURVE",
"264 224.851 OFFCURVE",
"264 210 CURVE SMOOTH",
"264 191.611 OFFCURVE",
"190.806 123.308 OFFCURVE",
"157 93 CURVE SMOOTH",
"113.24 53.767 OFFCURVE",
"39.925 -8.038 OFFCURVE",
"14 -21 CURVE",
"12 -22.333 OFFCURVE",
"11 -24.333 OFFCURVE",
"11 -27 CURVE SMOOTH",
"11 -28.333 OFFCURVE",
"12 -30 OFFCURVE",
"14 -32 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
106 934 11 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 106 118 106 134 106 150 106 166 106 182 106 198 106 214 106 230 106 246 106 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 106 22 106 38 106 54 106 70 106 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 106 101 106 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
120 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
120 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
125 11 106 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
133 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
29 133 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
48 133 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
64 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 64 105 64 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 64 120 64 136 64 152 64 168 64 184 64 200 64 216 64 232 64 248 64 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 64 24 64 40 64 56 64 72 64 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
125 133 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 634;
}
);
note = zheCyrillic;
unicode = 0436;
},
{
glyphname = zeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"385 193 OFFCURVE",
"351 234.333 OFFCURVE",
"279 245 CURVE",
"314.2 270.143 OFFCURVE",
"357 324.82 OFFCURVE",
"357 360 CURVE SMOOTH",
"357 400.953 OFFCURVE",
"293.363 443 OFFCURVE",
"243 443 CURVE SMOOTH",
"177.849 443 OFFCURVE",
"42 363.979 OFFCURVE",
"42 321 CURVE SMOOTH",
"42 302.333 OFFCURVE",
"54.333 295 OFFCURVE",
"69 295 CURVE SMOOTH",
"87.838 295 OFFCURVE",
"129 316.614 OFFCURVE",
"129 338 CURVE SMOOTH",
"129 340.667 OFFCURVE",
"127.667 343.333 OFFCURVE",
"125 346 CURVE",
"139.873 366.822 OFFCURVE",
"207.107 397 OFFCURVE",
"256 397 CURVE SMOOTH",
"289.333 397 OFFCURVE",
"298 379.333 OFFCURVE",
"298 354 CURVE SMOOTH",
"298 303.728 OFFCURVE",
"241.044 260.013 OFFCURVE",
"202 248 CURVE",
"196 245.333 OFFCURVE",
"176.667 243 OFFCURVE",
"144 241 CURVE SMOOTH",
"118.667 239 OFFCURVE",
"101.333 233.333 OFFCURVE",
"92 224 CURVE SMOOTH",
"82.667 214.667 OFFCURVE",
"78 205.667 OFFCURVE",
"78 197 CURVE SMOOTH",
"78 183.667 OFFCURVE",
"95.333 175 OFFCURVE",
"114 175 CURVE SMOOTH",
"131.833 175 OFFCURVE",
"215.833 207 OFFCURVE",
"228 207 CURVE SMOOTH",
"304.213 207 OFFCURVE",
"326 193.783 OFFCURVE",
"326 133 CURVE SMOOTH",
"326 57.421 OFFCURVE",
"261.177 1 OFFCURVE",
"174 1 CURVE SMOOTH",
"118 1 OFFCURVE",
"95.333 33 OFFCURVE",
"74 77 CURVE",
"68 88.333 OFFCURVE",
"58.333 94 OFFCURVE",
"45 94 CURVE SMOOTH",
"29 94 OFFCURVE",
"19 82.667 OFFCURVE",
"19 68 CURVE SMOOTH",
"19 53.333 OFFCURVE",
"28.667 37.333 OFFCURVE",
"48 20 CURVE SMOOTH",
"89.333 -17.333 OFFCURVE",
"137.667 -32 OFFCURVE",
"195 -32 CURVE SMOOTH",
"287.507 -32 OFFCURVE",
"385 34.757 OFFCURVE",
"385 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 64 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 934 46 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 46 106 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 46 25 46 41 46 57 46 73 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
23 46 74 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 23 106 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 23 25 23 41 23 57 23 73 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 56 22 56 38 56 54 56 70 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 56 101 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
79 64 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
18 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 930 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 931 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 407;
}
);
note = zeCyrillic;
unicode = 0437;
},
{
glyphname = iCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"27 18 OFFCURVE",
"45.333 -11 OFFCURVE",
"88 -11 CURVE SMOOTH",
"117.333 -11 OFFCURVE",
"131 0.333 OFFCURVE",
"159 43 CURVE SMOOTH",
"172.333 63 OFFCURVE",
"192.667 99.667 OFFCURVE",
"220 153 CURVE SMOOTH",
"247.333 206.333 OFFCURVE",
"277 275 OFFCURVE",
"309 359 CURVE",
"315 359 OFFCURVE",
"318 355.667 OFFCURVE",
"318 349 CURVE SMOOTH",
"318 316.017 OFFCURVE",
"301 167.008 OFFCURVE",
"301 119 CURVE SMOOTH",
"301 57.01 OFFCURVE",
"310.743 -21 OFFCURVE",
"358 -21 CURVE SMOOTH",
"364.667 -21 OFFCURVE",
"376.333 -18.667 OFFCURVE",
"383 -12 CURVE",
"366.333 6.667 OFFCURVE",
"358 49 OFFCURVE",
"358 115 CURVE SMOOTH",
"358 203.11 OFFCURVE",
"361.141 291.195 OFFCURVE",
"375 409 CURVE",
"379 418 LINE",
"379 430 OFFCURVE",
"363.333 436 OFFCURVE",
"332 436 CURVE SMOOTH",
"280.14 436 OFFCURVE",
"266.774 408.664 OFFCURVE",
"241 329 CURVE SMOOTH",
"211.667 241 OFFCURVE",
"183 157 OFFCURVE",
"135 85 CURVE SMOOTH",
"123.667 68.333 OFFCURVE",
"114 55.167 OFFCURVE",
"106 45.5 CURVE SMOOTH",
"98 35.833 OFFCURVE",
"91.333 31 OFFCURVE",
"86 31 CURVE SMOOTH",
"76 31 OFFCURVE",
"71 42.333 OFFCURVE",
"71 65 CURVE SMOOTH",
"71 180.443 OFFCURVE",
"94.824 346.177 OFFCURVE",
"111 385 CURVE",
"117.667 403.667 OFFCURVE",
"118 409.667 OFFCURVE",
"118 419 CURVE SMOOTH",
"118 427 OFFCURVE",
"99.667 439 OFFCURVE",
"89 439 CURVE SMOOTH",
"71.881 439 OFFCURVE",
"41.989 418.956 OFFCURVE",
"39 407 CURVE",
"28.721 347.898 OFFCURVE",
"27 182.271 OFFCURVE",
"27 78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 932 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 934 52 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 21 118 21 134 21 150 21 166 21 182 21 198 21 214 21 230 21 246 21 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 21 22 21 38 21 54 21 70 21 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 21 101 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 52 106 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 52 25 52 41 52 57 52 73 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
44 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
23 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 23 119 23 135 23 151 23 167 23 183 23 199 23 215 23 231 23 247 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 23 23 23 39 23 55 23 71 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 23 102 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 405;
}
);
note = iCyrillic;
unicode = 0438;
},
{
glyphname = iShortCyrillic;
layers = (
{
components = (
{
name = iCyrillic;
},
{
name = breve;
transform = "{1, 0, 0, 1, 77, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 405;
}
);
note = iShortCyrillic;
unicode = 0439;
},
{
glyphname = kaCyrillic;
layers = (
{
components = (
{
name = kappa;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kaCyrillic;
unicode = 043A;
},
{
glyphname = elCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"133 370.333 OFFCURVE",
"141.333 351 OFFCURVE",
"152 351 CURVE SMOOTH",
"155.333 351 OFFCURVE",
"157.833 351.333 OFFCURVE",
"159.5 352 CURVE SMOOTH",
"161.167 352.667 OFFCURVE",
"163 353 OFFCURVE",
"165 353 CURVE SMOOTH",
"170.333 353 OFFCURVE",
"176 353.333 OFFCURVE",
"176 344 CURVE",
"176.667 327.333 OFFCURVE",
"177 310.667 OFFCURVE",
"177 294 CURVE SMOOTH",
"177 277.333 OFFCURVE",
"177 260.667 OFFCURVE",
"177 244 CURVE SMOOTH",
"177 99.19 OFFCURVE",
"158.884 -4 OFFCURVE",
"107 -4 CURVE SMOOTH",
"59.065 -4 OFFCURVE",
"75.716 80 OFFCURVE",
"33 80 CURVE SMOOTH",
"17.667 80 OFFCURVE",
"10 71 OFFCURVE",
"10 53 CURVE SMOOTH",
"10 -3.876 OFFCURVE",
"67.501 -31 OFFCURVE",
"112 -31 CURVE SMOOTH",
"154.667 -31 OFFCURVE",
"187.333 -13.333 OFFCURVE",
"206 48 CURVE SMOOTH",
"223.549 105.662 OFFCURVE",
"230 199.829 OFFCURVE",
"230 260 CURVE SMOOTH",
"230 296 OFFCURVE",
"229.333 331.333 OFFCURVE",
"228 366 CURVE",
"228 376.745 OFFCURVE",
"329.021 386 OFFCURVE",
"350 386 CURVE SMOOTH",
"353.333 386 OFFCURVE",
"355 383.667 OFFCURVE",
"355 379 CURVE",
"352.897 346.405 OFFCURVE",
"348.018 289.225 OFFCURVE",
"345.5 257.5 CURVE SMOOTH",
"342.167 215.5 OFFCURVE",
"339 171 OFFCURVE",
"339 115 CURVE SMOOTH",
"339 24.626 OFFCURVE",
"346.647 -9 OFFCURVE",
"394 -9 CURVE SMOOTH",
"406 -9 OFFCURVE",
"415 -5 OFFCURVE",
"421 3 CURVE",
"406.333 24.333 OFFCURVE",
"396 61 OFFCURVE",
"396 125 CURVE SMOOTH",
"396 198.333 OFFCURVE",
"400.333 280.667 OFFCURVE",
"411 370 CURVE SMOOTH",
"412.6 382.798 OFFCURVE",
"428 411.208 OFFCURVE",
"428 414 CURVE SMOOTH",
"428 426 OFFCURVE",
"405 445 OFFCURVE",
"393 445 CURVE SMOOTH",
"384.248 445 OFFCURVE",
"340.016 438.446 OFFCURVE",
"318 436 CURVE SMOOTH",
"299.529 433.537 OFFCURVE",
"226.712 426 OFFCURVE",
"224 426 CURVE SMOOTH",
"222 426 OFFCURVE",
"219.167 426.333 OFFCURVE",
"215.5 427 CURVE SMOOTH",
"211.833 427.667 OFFCURVE",
"208.333 428 OFFCURVE",
"205 428 CURVE SMOOTH",
"191.177 428 OFFCURVE",
"179.389 415.812 OFFCURVE",
"154 408 CURVE SMOOTH",
"136.667 402.667 OFFCURVE",
"133 395.667 OFFCURVE",
"133 385 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 933 82 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 934 42 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
24 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 42 106 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 42 25 42 41 42 57 42 73 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 57 22 57 38 57 54 57 70 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 57 101 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
77 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
72 65 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 931 91 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 476;
}
);
note = elCyrillic;
unicode = 043B;
},
{
glyphname = emCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"467 417 OFFCURVE",
"449.667 430 OFFCURVE",
"435 430 CURVE SMOOTH",
"383.559 430 OFFCURVE",
"369.691 375.867 OFFCURVE",
"358 333 CURVE SMOOTH",
"339.333 257 OFFCURVE",
"318.667 191 OFFCURVE",
"300 143 CURVE SMOOTH",
"284.708 103.678 OFFCURVE",
"263.523 67 OFFCURVE",
"246 67 CURVE SMOOTH",
"230.667 67 OFFCURVE",
"209 108.667 OFFCURVE",
"181 192 CURVE SMOOTH",
"156.333 263.333 OFFCURVE",
"141.667 316.333 OFFCURVE",
"137 351 CURVE SMOOTH",
"134.542 368.208 OFFCURVE",
"135.296 406.704 OFFCURVE",
"131 411 CURVE SMOOTH",
"121 421 OFFCURVE",
"110.667 426 OFFCURVE",
"100 426 CURVE SMOOTH",
"60 426 OFFCURVE",
"40 416.333 OFFCURVE",
"40 397 CURVE SMOOTH",
"40 394.333 OFFCURVE",
"40.667 390.833 OFFCURVE",
"42 386.5 CURVE SMOOTH",
"43.333 382.167 OFFCURVE",
"44 378.333 OFFCURVE",
"44 375 CURVE SMOOTH",
"44 321.85 OFFCURVE",
"30 149.15 OFFCURVE",
"30 96 CURVE SMOOTH",
"30 24.667 OFFCURVE",
"42.667 -11 OFFCURVE",
"68 -11 CURVE SMOOTH",
"93.333 -11 OFFCURVE",
"106 -4.667 OFFCURVE",
"106 8 CURVE SMOOTH",
"106 11.333 OFFCURVE",
"104 14 OFFCURVE",
"100 16 CURVE SMOOTH",
"83.29 24.355 OFFCURVE",
"82 99.805 OFFCURVE",
"82 143 CURVE SMOOTH",
"82 151.902 OFFCURVE",
"82.846 202.847 OFFCURVE",
"83.5 229 CURVE SMOOTH",
"84.102 253.061 OFFCURVE",
"87.02 306 OFFCURVE",
"95 306 CURVE SMOOTH",
"100.96 306 OFFCURVE",
"107.709 270.164 OFFCURVE",
"110 261 CURVE SMOOTH",
"128.667 183.667 OFFCURVE",
"158 112.667 OFFCURVE",
"174 74 CURVE",
"184.166 46.043 OFFCURVE",
"220.392 10 OFFCURVE",
"249 10 CURVE SMOOTH",
"304.554 10 OFFCURVE",
"350.154 147.716 OFFCURVE",
"376 237 CURVE",
"378 242.333 OFFCURVE",
"379.667 248.5 OFFCURVE",
"381 255.5 CURVE SMOOTH",
"382.333 262.5 OFFCURVE",
"384.333 266 OFFCURVE",
"387 266 CURVE SMOOTH",
"389 266 OFFCURVE",
"390 263.333 OFFCURVE",
"390 258 CURVE SMOOTH",
"390 231.333 OFFCURVE",
"388.667 201.667 OFFCURVE",
"386 169 CURVE SMOOTH",
"383.333 136.333 OFFCURVE",
"382 107.667 OFFCURVE",
"382 83 CURVE SMOOTH",
"382 29.652 OFFCURVE",
"385.596 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"452 -27 OFFCURVE",
"463 -21.667 OFFCURVE",
"463 -11 CURVE SMOOTH",
"463 -6.633 OFFCURVE",
"438 59.582 OFFCURVE",
"438 100 CURVE SMOOTH",
"438 174 OFFCURVE",
"438.167 230.167 OFFCURVE",
"438.5 268.5 CURVE SMOOTH",
"438.833 306.833 OFFCURVE",
"440 332 OFFCURVE",
"442 344 CURVE SMOOTH",
"445.98 366.551 OFFCURVE",
"467 401.766 OFFCURVE",
"467 409 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 933 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 932 24 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 24 106 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 24 25 24 41 24 57 24 73 24 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
63 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
86 931 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 495;
}
);
note = emCyrillic;
unicode = 043C;
},
{
glyphname = enCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"343.333 380.333 OFFCURVE",
"344.667 381.333 OFFCURVE",
"346 382 CURVE SMOOTH",
"347.333 382.667 OFFCURVE",
"348 384.333 OFFCURVE",
"348 387 CURVE SMOOTH",
"348 400.382 OFFCURVE",
"330.197 422 OFFCURVE",
"304 422 CURVE SMOOTH",
"280 422 OFFCURVE",
"268 369.667 OFFCURVE",
"268 265 CURVE SMOOTH",
"268 222 LINE SMOOTH",
"268 213.333 OFFCURVE",
"257 206.167 OFFCURVE",
"235 200.5 CURVE SMOOTH",
"213 194.833 OFFCURVE",
"180 185.333 OFFCURVE",
"136 172 CURVE SMOOTH",
"125.333 168.667 OFFCURVE",
"114.833 165 OFFCURVE",
"104.5 161 CURVE SMOOTH",
"94.167 157 OFFCURVE",
"88.333 155 OFFCURVE",
"87 155 CURVE SMOOTH",
"84.333 155 OFFCURVE",
"82.667 159.667 OFFCURVE",
"82 169 CURVE SMOOTH",
"81.333 178.333 OFFCURVE",
"81 187 OFFCURVE",
"81 195 CURVE SMOOTH",
"81 244.764 OFFCURVE",
"90.856 328.137 OFFCURVE",
"99 358 CURVE SMOOTH",
"101.667 366.667 OFFCURVE",
"104.333 374 OFFCURVE",
"107 380 CURVE SMOOTH",
"109.667 386 OFFCURVE",
"111 391 OFFCURVE",
"111 395 CURVE SMOOTH",
"111 409.667 OFFCURVE",
"91.667 423 OFFCURVE",
"77 423 CURVE SMOOTH",
"59 423 OFFCURVE",
"47.167 408.333 OFFCURVE",
"41.5 379 CURVE SMOOTH",
"35.833 349.667 OFFCURVE",
"33 306.667 OFFCURVE",
"33 250 CURVE SMOOTH",
"33 188.667 OFFCURVE",
"33 121.167 OFFCURVE",
"37 68.5 CURVE SMOOTH",
"40.267 25.483 OFFCURVE",
"46.671 -21 OFFCURVE",
"60 -21 CURVE SMOOTH",
"70.667 -21 OFFCURVE",
"91 -17.667 OFFCURVE",
"95 1 CURVE",
"81.868 16.758 OFFCURVE",
"80 71.063 OFFCURVE",
"80 102 CURVE SMOOTH",
"80 125.29 OFFCURVE",
"248.967 161 OFFCURVE",
"260 161 CURVE SMOOTH",
"269.656 161 OFFCURVE",
"272.545 100.12 OFFCURVE",
"275 72.5 CURVE SMOOTH",
"278.465 33.522 OFFCURVE",
"286.809 -16 OFFCURVE",
"311 -16 CURVE SMOOTH",
"324.333 -16 OFFCURVE",
"335 0 OFFCURVE",
"335 12 CURVE",
"335 -6.955 OFFCURVE",
"314 142.832 OFFCURVE",
"314 164 CURVE SMOOTH",
"314 174.814 OFFCURVE",
"338 181.866 OFFCURVE",
"338 201 CURVE SMOOTH",
"338 216.366 OFFCURVE",
"315 210.419 OFFCURVE",
"315 225 CURVE SMOOTH",
"315 323.185 OFFCURVE",
"319.549 360.291 OFFCURVE",
"342 379 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 932 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 62 22 62 38 62 54 62 70 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 62 101 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 374;
}
);
note = enCyrillic;
unicode = 043D;
},
{
glyphname = oCyrillic;
layers = (
{
components = (
{
name = o;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oCyrillic;
unicode = 043E;
},
{
glyphname = peCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"352 420.667 OFFCURVE",
"338 433 OFFCURVE",
"290 433 CURVE SMOOTH",
"230.667 433 OFFCURVE",
"183.333 430.167 OFFCURVE",
"148 424.5 CURVE SMOOTH",
"112.667 418.833 OFFCURVE",
"86 416 OFFCURVE",
"68 416 CURVE SMOOTH",
"38.667 416 OFFCURVE",
"32 410.667 OFFCURVE",
"32 396 CURVE SMOOTH",
"32 385.333 OFFCURVE",
"31.667 375.333 OFFCURVE",
"37 366 CURVE",
"35 314 OFFCURVE",
"34 261.667 OFFCURVE",
"34 209 CURVE SMOOTH",
"34 153 OFFCURVE",
"34.333 86.333 OFFCURVE",
"37 29 CURVE SMOOTH",
"38.333 -2.333 OFFCURVE",
"54.667 -18 OFFCURVE",
"86 -18 CURVE SMOOTH",
"90 -18 OFFCURVE",
"93.667 -15.333 OFFCURVE",
"97 -10 CURVE",
"86.333 36.667 OFFCURVE",
"86 84.333 OFFCURVE",
"86 131 CURVE SMOOTH",
"86 233.522 OFFCURVE",
"88.22 296.537 OFFCURVE",
"96 351 CURVE SMOOTH",
"100 377.667 OFFCURVE",
"150.667 392 OFFCURVE",
"208 392 CURVE SMOOTH",
"233.333 392 OFFCURVE",
"250.667 391.5 OFFCURVE",
"260 390.5 CURVE SMOOTH",
"269.333 389.5 OFFCURVE",
"274 386.667 OFFCURVE",
"274 382 CURVE",
"268.667 314 OFFCURVE",
"265 233 OFFCURVE",
"265 165 CURVE SMOOTH",
"265 113 OFFCURVE",
"268 66.667 OFFCURVE",
"276 28 CURVE",
"278.667 10.667 OFFCURVE",
"292.333 4 OFFCURVE",
"307 4 CURVE SMOOTH",
"319 4 OFFCURVE",
"337 10.333 OFFCURVE",
"337 17 CURVE SMOOTH",
"337 18.333 OFFCURVE",
"336.667 19.833 OFFCURVE",
"336 21.5 CURVE SMOOTH",
"335.333 23.167 OFFCURVE",
"334.667 25.667 OFFCURVE",
"334 29 CURVE",
"323.333 73 OFFCURVE",
"323 112.333 OFFCURVE",
"323 163 CURVE SMOOTH",
"323 224.431 OFFCURVE",
"324.927 312.847 OFFCURVE",
"336 366 CURVE",
"339.375 379.499 OFFCURVE",
"352 377.748 OFFCURVE",
"352 398 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 932 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 934 25 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 25 106 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 25 25 25 41 25 57 25 73 25 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 25 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 28 106 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 28 25 28 41 28 57 28 73 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 44 22 44 38 44 54 44 70 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 44 101 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
44 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
60 928 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 368;
}
);
note = peCyrillic;
unicode = 043F;
},
{
glyphname = erCyrillic;
layers = (
{
components = (
{
name = p;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 350;
}
);
note = erCyrillic;
unicode = 0440;
},
{
glyphname = esCyrillic;
layers = (
{
components = (
{
name = c;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = esCyrillic;
unicode = 0441;
},
{
glyphname = teCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"336.667 390 OFFCURVE",
"341 398.333 OFFCURVE",
"341 409 CURVE SMOOTH",
"341 423.667 OFFCURVE",
"331.667 431 OFFCURVE",
"313 431 CURVE",
"282.64 428.976 OFFCURVE",
"207.609 424.301 OFFCURVE",
"180 422 CURVE SMOOTH",
"143.505 417.789 OFFCURVE",
"-3 394.492 OFFCURVE",
"-3 375 CURVE SMOOTH",
"-3 356.333 OFFCURVE",
"7.667 348.667 OFFCURVE",
"29 352 CURVE",
"45.872 353.687 OFFCURVE",
"139.343 364.328 OFFCURVE",
"146 361 CURVE",
"145.333 351.667 OFFCURVE",
"144.333 334.5 OFFCURVE",
"143 309.5 CURVE SMOOTH",
"141.667 284.5 OFFCURVE",
"141 248.333 OFFCURVE",
"141 201 CURVE SMOOTH",
"141 152.333 OFFCURVE",
"142.167 113.667 OFFCURVE",
"144.5 85 CURVE SMOOTH",
"146.833 56.333 OFFCURVE",
"149.333 37 OFFCURVE",
"152 27 CURVE SMOOTH",
"160 -0.333 OFFCURVE",
"170.667 -14 OFFCURVE",
"184 -14 CURVE SMOOTH",
"194.667 -14 OFFCURVE",
"212 -0.667 OFFCURVE",
"212 10 CURVE SMOOTH",
"212 14.667 OFFCURVE",
"211.5 20 OFFCURVE",
"210.5 26 CURVE SMOOTH",
"209.5 32 OFFCURVE",
"208.333 39 OFFCURVE",
"207 47 CURVE SMOOTH",
"204.333 63 OFFCURVE",
"202 75.333 OFFCURVE",
"202 82 CURVE",
"199.333 112.667 OFFCURVE",
"196 147.667 OFFCURVE",
"196 205 CURVE SMOOTH",
"196 262.333 OFFCURVE",
"196.667 302.833 OFFCURVE",
"198 326.5 CURVE SMOOTH",
"199.333 350.167 OFFCURVE",
"200.333 363.667 OFFCURVE",
"201 367 CURVE",
"202.797 368.797 OFFCURVE",
"276.582 372.323 OFFCURVE",
"290 374 CURVE",
"310.667 377.333 OFFCURVE",
"323.333 380.667 OFFCURVE",
"328 384 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 37 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 10 22 10 38 10 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 10 69 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 341;
}
);
note = teCyrillic;
unicode = 0442;
},
{
glyphname = uCyrillic;
layers = (
{
components = (
{
name = y;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = uCyrillic;
unicode = 0443;
},
{
glyphname = efCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 -214.667 OFFCURVE",
"307.667 -210 OFFCURVE",
"303 -204 CURVE SMOOTH",
"298.333 -198 OFFCURVE",
"295.333 -192 OFFCURVE",
"294 -186 CURVE SMOOTH",
"284.012 -141.052 OFFCURVE",
"283 -73.043 OFFCURVE",
"283 -19 CURVE SMOOTH",
"283 -11 OFFCURVE",
"287.333 -9.667 OFFCURVE",
"294 -7 CURVE",
"413.654 7.652 OFFCURVE",
"498 101.839 OFFCURVE",
"498 186 CURVE SMOOTH",
"498 303.846 OFFCURVE",
"468.714 343.697 OFFCURVE",
"398 382 CURVE SMOOTH",
"371.333 396.667 OFFCURVE",
"339.333 411.333 OFFCURVE",
"302 422 CURVE",
"295.333 424.667 OFFCURVE",
"289 426 OFFCURVE",
"289 434 CURVE",
"290.622 458.323 OFFCURVE",
"308 638.074 OFFCURVE",
"308 640 CURVE SMOOTH",
"308 658.667 OFFCURVE",
"284.667 674 OFFCURVE",
"266 674 CURVE SMOOTH",
"258 674 OFFCURVE",
"247.333 669.333 OFFCURVE",
"234 660 CURVE",
"234 653.333 OFFCURVE",
"235 643.333 OFFCURVE",
"237 630 CURVE SMOOTH",
"239 616.667 OFFCURVE",
"240 606 OFFCURVE",
"240 598 CURVE SMOOTH",
"240 584.2 OFFCURVE",
"238 470.237 OFFCURVE",
"238 441 CURVE SMOOTH",
"238 430.333 OFFCURVE",
"236.667 424.667 OFFCURVE",
"226 422 CURVE",
"105.072 399.502 OFFCURVE",
"20 312.606 OFFCURVE",
"20 174 CURVE SMOOTH",
"20 74.858 OFFCURVE",
"87.435 -0.346 OFFCURVE",
"225 -10 CURVE",
"231.667 -10 OFFCURVE",
"235 -13.667 OFFCURVE",
"235 -21 CURVE SMOOTH",
"236.794 -76.619 OFFCURVE",
"238.133 -242 OFFCURVE",
"275 -242 CURVE SMOOTH",
"301.667 -242 OFFCURVE",
"310 -239.333 OFFCURVE",
"310 -218 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"447 98.889 OFFCURVE",
"379.591 34 OFFCURVE",
"289 34 CURVE SMOOTH",
"284.333 34 OFFCURVE",
"281.333 38.333 OFFCURVE",
"280 47 CURVE SMOOTH",
"278.667 55.667 OFFCURVE",
"278 65 OFFCURVE",
"278 75 CURVE SMOOTH",
"278 94.778 OFFCURVE",
"277.935 143.571 OFFCURVE",
"279 183.5 CURVE SMOOTH",
"280.333 233.5 OFFCURVE",
"282 295 OFFCURVE",
"286 359 CURVE",
"286 365.667 OFFCURVE",
"289.667 373 OFFCURVE",
"299 373 CURVE SMOOTH",
"385.794 373 OFFCURVE",
"447 321.555 OFFCURVE",
"447 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 283.399 OFFCURVE",
"137.162 364 OFFCURVE",
"220 364 CURVE SMOOTH",
"230.667 364 OFFCURVE",
"236 363.667 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 316.712 OFFCURVE",
"235.065 246.728 OFFCURVE",
"234.5 197 CURVE SMOOTH",
"233.931 146.931 OFFCURVE",
"233 76.629 OFFCURVE",
"233 40 CURVE SMOOTH",
"233 33.333 OFFCURVE",
"229 30 OFFCURVE",
"221 30 CURVE SMOOTH",
"135.356 30 OFFCURVE",
"78 88.906 OFFCURVE",
"78 170 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
89 934 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 932 101 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 933 68 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 101 106 101 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 101 121 101 137 101 153 101 169 101 185 101 201 101 217 101 233 101 249 101 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 101 25 101 41 101 57 101 73 101 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 89 22 89 38 89 54 89 70 89 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 89 101 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
84 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 84 119 84 135 84 151 84 167 84 183 84 199 84 215 84 231 84 247 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 84 23 84 39 84 55 84 71 84 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 84 102 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 522;
}
);
note = efCyrillic;
unicode = 0444;
},
{
glyphname = haCyrillic;
layers = (
{
components = (
{
name = x;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = haCyrillic;
unicode = 0445;
},
{
glyphname = tseCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"313 397.333 OFFCURVE",
"299.667 409 OFFCURVE",
"273 409 CURVE SMOOTH",
"260.531 409 OFFCURVE",
"239 402.554 OFFCURVE",
"239 385 CURVE SMOOTH",
"239 379 OFFCURVE",
"240.833 371 OFFCURVE",
"244.5 361 CURVE SMOOTH",
"248.167 351 OFFCURVE",
"250 343.333 OFFCURVE",
"250 338 CURVE SMOOTH",
"250 207 LINE SMOOTH",
"250 115.141 OFFCURVE",
"212.23 27 OFFCURVE",
"151 27 CURVE SMOOTH",
"111.219 27 OFFCURVE",
"84 91.335 OFFCURVE",
"84 142 CURVE SMOOTH",
"84 177.046 OFFCURVE",
"90 342.416 OFFCURVE",
"90 392 CURVE SMOOTH",
"90 413.333 OFFCURVE",
"80.667 424 OFFCURVE",
"62 424 CURVE SMOOTH",
"38.667 424 OFFCURVE",
"27 416.333 OFFCURVE",
"27 401 CURVE SMOOTH",
"27 397 OFFCURVE",
"27.333 394.667 OFFCURVE",
"28 394 CURVE",
"28 177 LINE SMOOTH",
"28 117 OFFCURVE",
"32.667 74.667 OFFCURVE",
"42 50 CURVE SMOOTH",
"52.787 20.336 OFFCURVE",
"105.659 -22 OFFCURVE",
"136 -22 CURVE SMOOTH",
"184 -22 OFFCURVE",
"223.333 6.333 OFFCURVE",
"242 33 CURVE",
"244.667 18.333 OFFCURVE",
"251 -6 OFFCURVE",
"271 -6 CURVE SMOOTH",
"280.333 -6 OFFCURVE",
"288.333 -2.667 OFFCURVE",
"295 4 CURVE SMOOTH",
"301.667 10.667 OFFCURVE",
"309.667 14 OFFCURVE",
"319 14 CURVE SMOOTH",
"347 14 OFFCURVE",
"349 11.667 OFFCURVE",
"349 -15 CURVE SMOOTH",
"349 -41.463 OFFCURVE",
"335 -76.967 OFFCURVE",
"335 -91 CURVE SMOOTH",
"335 -101.667 OFFCURVE",
"345.333 -107 OFFCURVE",
"356 -107 CURVE SMOOTH",
"372.667 -107 OFFCURVE",
"384 -100 OFFCURVE",
"390 -86 CURVE SMOOTH",
"396 -72 OFFCURVE",
"399 -46.333 OFFCURVE",
"399 -9 CURVE SMOOTH",
"399 37.233 OFFCURVE",
"395.014 61 OFFCURVE",
"343 61 CURVE SMOOTH",
"335 61 OFFCURVE",
"328.667 59.833 OFFCURVE",
"324 57.5 CURVE SMOOTH",
"319.333 55.167 OFFCURVE",
"314 54 OFFCURVE",
"308 54 CURVE SMOOTH",
"298.597 54 OFFCURVE",
"300 134.458 OFFCURVE",
"300 175 CURVE SMOOTH",
"300 225.137 OFFCURVE",
"313 337.153 OFFCURVE",
"313 374 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 934 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 74 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 934 24 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 74 106 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 74 25 74 41 74 57 74 73 74 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
70 74 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 24 106 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 24 25 24 41 24 57 24 73 24 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
38 74 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 21 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
38 21 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 65 23 65 39 65 55 65 71 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 65 102 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 404;
}
);
note = tseCyrillic;
unicode = 0446;
},
{
glyphname = cheCyrillic2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"22 393 LINE SMOOTH",
"22 261.146 OFFCURVE",
"16.016 192.93 OFFCURVE",
"105 154 CURVE SMOOTH",
"133 141.333 OFFCURVE",
"156.333 135 OFFCURVE",
"175 135 CURVE SMOOTH",
"196.333 135 OFFCURVE",
"231.333 157.333 OFFCURVE",
"254 180 CURVE",
"255.333 145.333 OFFCURVE",
"256 109.333 OFFCURVE",
"256 88 CURVE SMOOTH",
"256 67.151 OFFCURVE",
"247 -6.662 OFFCURVE",
"247 -11 CURVE SMOOTH",
"247 -17.667 OFFCURVE",
"256 -20 OFFCURVE",
"268 -20 CURVE SMOOTH",
"288 -20 OFFCURVE",
"317 -11.667 OFFCURVE",
"317 7 CURVE SMOOTH",
"317 10.333 OFFCURVE",
"316 13 OFFCURVE",
"314 15 CURVE SMOOTH",
"312 17 OFFCURVE",
"311 19.667 OFFCURVE",
"311 23 CURVE",
"309.667 34.333 OFFCURVE",
"309 46.833 OFFCURVE",
"309 60.5 CURVE SMOOTH",
"309 74.167 OFFCURVE",
"309 90.333 OFFCURVE",
"309 109 CURVE SMOOTH",
"309 202 LINE SMOOTH",
"309 264.058 OFFCURVE",
"309.058 339.525 OFFCURVE",
"308.5 363.5 CURVE SMOOTH",
"308.061 382.385 OFFCURVE",
"304.762 404.951 OFFCURVE",
"303 412 CURVE",
"297 430.667 OFFCURVE",
"285.333 440 OFFCURVE",
"268 440 CURVE SMOOTH",
"253.333 440 OFFCURVE",
"246 435 OFFCURVE",
"246 425 CURVE SMOOTH",
"246 402.346 OFFCURVE",
"257 386.435 OFFCURVE",
"257 349 CURVE SMOOTH",
"257 301 OFFCURVE",
"253.667 259 OFFCURVE",
"231 219 CURVE",
"219.026 195.051 OFFCURVE",
"171.836 174 OFFCURVE",
"151 174 CURVE SMOOTH",
"97.538 174 OFFCURVE",
"78 225.349 OFFCURVE",
"78 286 CURVE SMOOTH",
"78 302 OFFCURVE",
"78 318.667 OFFCURVE",
"78 336 CURVE SMOOTH",
"78 353.333 OFFCURVE",
"78.333 376 OFFCURVE",
"79 404 CURVE",
"75 412 OFFCURVE",
"61.667 418 OFFCURVE",
"51 418 CURVE SMOOTH",
"36.333 418 OFFCURVE",
"26.667 415 OFFCURVE",
"22 409 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 934 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
53 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
45 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
13 928 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
56 45 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 342;
}
);
note = cheCyrillic2;
unicode = 0447;
},
{
glyphname = shaCyrillic;
layers = (
{
components = (
{
name = w;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = shaCyrillic;
unicode = 0448;
},
{
glyphname = shchaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"485 393 OFFCURVE",
"473 430 OFFCURVE",
"449 430 CURVE SMOOTH",
"434.333 430 OFFCURVE",
"419 413.667 OFFCURVE",
"419 399 CURVE SMOOTH",
"419 397 OFFCURVE",
"421.333 393.333 OFFCURVE",
"426 388 CURVE SMOOTH",
"430.667 382.667 OFFCURVE",
"433 379.667 OFFCURVE",
"433 379 CURVE",
"438.333 369.667 OFFCURVE",
"441 344 OFFCURVE",
"441 302 CURVE SMOOTH",
"441 258 OFFCURVE",
"433.667 209 OFFCURVE",
"419 155 CURVE SMOOTH",
"399 82.333 OFFCURVE",
"375 46 OFFCURVE",
"347 46 CURVE SMOOTH",
"307.654 46 OFFCURVE",
"281 140.717 OFFCURVE",
"281 203 CURVE SMOOTH",
"281 326 LINE SMOOTH",
"281 329.333 OFFCURVE",
"281.5 334.333 OFFCURVE",
"282.5 341 CURVE SMOOTH",
"283.5 347.667 OFFCURVE",
"284 352.667 OFFCURVE",
"284 356 CURVE SMOOTH",
"284 382.667 OFFCURVE",
"274.333 396 OFFCURVE",
"255 396 CURVE SMOOTH",
"239 396 OFFCURVE",
"231 389 OFFCURVE",
"231 375 CURVE SMOOTH",
"231 279 LINE SMOOTH",
"231 191.437 OFFCURVE",
"193.794 46 OFFCURVE",
"142 46 CURVE SMOOTH",
"97.333 46 OFFCURVE",
"75 132.667 OFFCURVE",
"75 306 CURVE SMOOTH",
"75 326.013 OFFCURVE",
"88 374.878 OFFCURVE",
"88 390 CURVE SMOOTH",
"88 404.667 OFFCURVE",
"61.667 418 OFFCURVE",
"47 418 CURVE SMOOTH",
"39.667 418 OFFCURVE",
"33.667 414.667 OFFCURVE",
"29 408 CURVE",
"26.333 381.333 OFFCURVE",
"25 344.667 OFFCURVE",
"25 298 CURVE SMOOTH",
"25 94.667 OFFCURVE",
"67.333 -7 OFFCURVE",
"152 -7 CURVE SMOOTH",
"207.292 -7 OFFCURVE",
"222.432 59.688 OFFCURVE",
"244 119 CURVE",
"248 121 LINE",
"274 60 LINE",
"296.667 19.333 OFFCURVE",
"324.667 -1 OFFCURVE",
"358 -1 CURVE SMOOTH",
"376 -1 OFFCURVE",
"391.333 5.333 OFFCURVE",
"404 18 CURVE",
"418 20 OFFCURVE",
"430 21 OFFCURVE",
"440 21 CURVE SMOOTH",
"468 21 OFFCURVE",
"475 11.667 OFFCURVE",
"475 -15 CURVE SMOOTH",
"475 -41.463 OFFCURVE",
"461 -76.967 OFFCURVE",
"461 -91 CURVE SMOOTH",
"461 -101.667 OFFCURVE",
"471.333 -107 OFFCURVE",
"482 -107 CURVE SMOOTH",
"498.667 -107 OFFCURVE",
"510 -100 OFFCURVE",
"516 -86 CURVE SMOOTH",
"522 -72 OFFCURVE",
"525 -46.333 OFFCURVE",
"525 -9 CURVE SMOOTH",
"525 37.233 OFFCURVE",
"521.014 61 OFFCURVE",
"469 61 CURVE SMOOTH",
"454.333 61 OFFCURVE",
"442 59.667 OFFCURVE",
"432 57 CURVE",
"465.733 114.087 OFFCURVE",
"485 240.211 OFFCURVE",
"485 319 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 932 41 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 932 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 79 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 79 106 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 79 25 79 41 79 57 79 73 79 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 79 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 18 106 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 18 25 18 41 18 57 18 73 18 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
12 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 41 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
23 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
34 61 69 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
90 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
39 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 15 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 15 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 928 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
34 12 87 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 56 119 56 135 56 151 56 167 56 183 56 199 56 215 56 231 56 247 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 56 23 56 39 56 55 56 71 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 56 102 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 530;
}
);
note = shchaCyrillic;
unicode = 0449;
},
{
glyphname = hardSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"257.333 396.667 OFFCURVE",
"259 408 OFFCURVE",
"259 416 CURVE SMOOTH",
"259 432 OFFCURVE",
"247.667 443 OFFCURVE",
"229 443 CURVE SMOOTH",
"178.232 443 OFFCURVE",
"77.402 425.971 OFFCURVE",
"10 406 CURVE",
"6.667 404.667 OFFCURVE",
"5 402.333 OFFCURVE",
"5 399 CURVE SMOOTH",
"5 376.333 OFFCURVE",
"20.333 364 OFFCURVE",
"31 364 CURVE SMOOTH",
"52.333 364 OFFCURVE",
"75 371.667 OFFCURVE",
"107 385 CURVE SMOOTH",
"139 398.333 OFFCURVE",
"174.333 400 OFFCURVE",
"193 400 CURVE",
"185 356 OFFCURVE",
"173.667 295 OFFCURVE",
"167 227 CURVE",
"167 222.333 OFFCURVE",
"165 218.333 OFFCURVE",
"161 215 CURVE SMOOTH",
"157 211.667 OFFCURVE",
"155 207 OFFCURVE",
"155 201 CURVE SMOOTH",
"155 195.667 OFFCURVE",
"157.333 191.667 OFFCURVE",
"162 189 CURVE SMOOTH",
"166.667 186.333 OFFCURVE",
"169 182 OFFCURVE",
"169 176 CURVE",
"165 137.333 OFFCURVE",
"162 96 OFFCURVE",
"162 64 CURVE",
"151.333 62.667 OFFCURVE",
"144 60.333 OFFCURVE",
"144 47 CURVE SMOOTH",
"144 39 OFFCURVE",
"149.667 32.667 OFFCURVE",
"161 28 CURVE",
"170.06 24.98 OFFCURVE",
"165.024 -15 OFFCURVE",
"185 -15 CURVE SMOOTH",
"203.681 -15 OFFCURVE",
"207.696 7 OFFCURVE",
"212 7 CURVE",
"242.667 1.667 OFFCURVE",
"286.667 -3 OFFCURVE",
"308 -3 CURVE SMOOTH",
"381.455 -3 OFFCURVE",
"458 39.541 OFFCURVE",
"458 115 CURVE SMOOTH",
"458 159 OFFCURVE",
"443 175.667 OFFCURVE",
"403 197 CURVE",
"371.046 215.64 OFFCURVE",
"330.549 225 OFFCURVE",
"274 225 CURVE SMOOTH",
"260 225 OFFCURVE",
"249.5 224.667 OFFCURVE",
"242.5 224 CURVE SMOOTH",
"235.5 223.333 OFFCURVE",
"229.667 223 OFFCURVE",
"225 223 CURVE SMOOTH",
"219.667 223 OFFCURVE",
"217 225.333 OFFCURVE",
"217 230 CURVE",
"225 286 OFFCURVE",
"234.667 338 OFFCURVE",
"248 382 CURVE"
);
},
{
closed = 1;
nodes = (
"406 71.008 OFFCURVE",
"361.729 33 OFFCURVE",
"307 33 CURVE SMOOTH",
"275 33 OFFCURVE",
"230 39.333 OFFCURVE",
"210 50 CURVE",
"208.667 54.667 OFFCURVE",
"208 59 OFFCURVE",
"208 63 CURVE SMOOTH",
"208 67 OFFCURVE",
"208 71.333 OFFCURVE",
"208 76 CURVE SMOOTH",
"208 108.395 OFFCURVE",
"209.346 163.037 OFFCURVE",
"217 186 CURVE",
"227.667 187.333 OFFCURVE",
"246.667 188 OFFCURVE",
"268 188 CURVE SMOOTH",
"368.526 188 OFFCURVE",
"406 165.248 OFFCURVE",
"406 120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 933 73 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 73 106 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 73 25 73 41 73 57 73 73 73 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
92 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 92 119 92 135 92 151 92 167 92 183 92 199 92 215 92 231 92 247 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 92 23 92 39 92 55 92 71 92 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 92 102 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 477;
}
);
note = hardSignCyrillic;
unicode = 044A;
},
{
glyphname = yeruCyrillic;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = softSignCyrillic;
},
{
alignment = -1;
name = dotlessi;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 511;
}
);
note = yeruCyrillic;
unicode = 044B;
},
{
glyphname = softSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113 396 OFFCURVE",
"116 406.667 OFFCURVE",
"116 416 CURVE SMOOTH",
"116 432 OFFCURVE",
"104.667 443 OFFCURVE",
"86 443 CURVE SMOOTH",
"66.667 443 OFFCURVE",
"56 435.667 OFFCURVE",
"54 421 CURVE",
"46 377 OFFCURVE",
"40.667 308.333 OFFCURVE",
"34 227 CURVE",
"34 222.333 OFFCURVE",
"32 218.333 OFFCURVE",
"28 215 CURVE SMOOTH",
"24 211.667 OFFCURVE",
"22 207 OFFCURVE",
"22 201 CURVE SMOOTH",
"22 195.667 OFFCURVE",
"24.333 191.667 OFFCURVE",
"29 189 CURVE SMOOTH",
"33.667 186.333 OFFCURVE",
"36 182 OFFCURVE",
"36 176 CURVE",
"34.667 164 OFFCURVE",
"34 152.5 OFFCURVE",
"34 141.5 CURVE SMOOTH",
"34 130.5 OFFCURVE",
"34 119.667 OFFCURVE",
"34 109 CURVE SMOOTH",
"34 64 LINE",
"23.333 62.667 OFFCURVE",
"15 60.333 OFFCURVE",
"15 47 CURVE SMOOTH",
"15 39 OFFCURVE",
"21 32.667 OFFCURVE",
"33 28 CURVE",
"43.339 24.554 OFFCURVE",
"40.382 -15 OFFCURVE",
"61 -15 CURVE SMOOTH",
"79.681 -15 OFFCURVE",
"83.696 7 OFFCURVE",
"88 7 CURVE",
"118.667 0.333 OFFCURVE",
"157 -3 OFFCURVE",
"177 -3 CURVE SMOOTH",
"251.594 -3 OFFCURVE",
"344 39.782 OFFCURVE",
"344 115 CURVE SMOOTH",
"344 152.333 OFFCURVE",
"331.667 166 OFFCURVE",
"289 190 CURVE SMOOTH",
"242.333 216.667 OFFCURVE",
"201.667 224 OFFCURVE",
"143 224 CURVE SMOOTH",
"129 224 OFFCURVE",
"118.167 223.833 OFFCURVE",
"110.5 223.5 CURVE SMOOTH",
"102.833 223.167 OFFCURVE",
"96.667 223 OFFCURVE",
"92 223 CURVE SMOOTH",
"86.667 223 OFFCURVE",
"84 225.333 OFFCURVE",
"84 230 CURVE SMOOTH",
"84 258 OFFCURVE",
"86.667 284.5 OFFCURVE",
"92 309.5 CURVE SMOOTH",
"97.333 334.5 OFFCURVE",
"102.333 359.333 OFFCURVE",
"107 384 CURVE"
);
},
{
closed = 1;
nodes = (
"296 72.839 OFFCURVE",
"232.225 33 OFFCURVE",
"176 33 CURVE SMOOTH",
"144 33 OFFCURVE",
"102 39.333 OFFCURVE",
"82 50 CURVE",
"80 74.667 OFFCURVE",
"79 99 OFFCURVE",
"79 123 CURVE SMOOTH",
"79 137.149 OFFCURVE",
"79.566 186 OFFCURVE",
"88 186 CURVE",
"98.667 187.333 OFFCURVE",
"115.667 188 OFFCURVE",
"137 188 CURVE SMOOTH",
"236.553 188 OFFCURVE",
"296 162.293 OFFCURVE",
"296 120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
70 934 44 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 932 57 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 70 22 70 38 70 54 70 70 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 70 101 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 57 106 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
9 57 25 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 7 values pushed */
41 57 57 57 73 57 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
75 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 75 119 75 135 75 151 75 167 75 183 75 199 75 215 75 231 75 247 75 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 75 23 75 39 75 55 75 71 75 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 75 102 75 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 363;
}
);
note = softSignCyrillic;
unicode = 044C;
},
{
glyphname = eCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"350 203.406 OFFCURVE",
"327 217.362 OFFCURVE",
"327 226 CURVE",
"321.667 313.333 OFFCURVE",
"287.667 377 OFFCURVE",
"225 417 CURVE SMOOTH",
"202.333 431.667 OFFCURVE",
"184.333 439 OFFCURVE",
"171 439 CURVE SMOOTH",
"149 439 OFFCURVE",
"128.667 432.333 OFFCURVE",
"110 419 CURVE SMOOTH",
"82.603 399.075 OFFCURVE",
"39 343.636 OFFCURVE",
"39 312 CURVE SMOOTH",
"39 301.333 OFFCURVE",
"45.333 283 OFFCURVE",
"72 283 CURVE SMOOTH",
"78 283 OFFCURVE",
"81.833 283.833 OFFCURVE",
"83.5 285.5 CURVE SMOOTH",
"85.167 287.167 OFFCURVE",
"86 289 OFFCURVE",
"86 291 CURVE SMOOTH",
"86 303 OFFCURVE",
"96.667 324.333 OFFCURVE",
"110 343 CURVE SMOOTH",
"130 371 OFFCURVE",
"156.667 384 OFFCURVE",
"186 384 CURVE SMOOTH",
"241.397 384 OFFCURVE",
"278 315.444 OFFCURVE",
"278 238 CURVE SMOOTH",
"278 232.667 OFFCURVE",
"276.333 230 OFFCURVE",
"273 230 CURVE SMOOTH",
"229.467 230 OFFCURVE",
"67 229.328 OFFCURVE",
"67 205 CURVE SMOOTH",
"67 190.358 OFFCURVE",
"73.198 153 OFFCURVE",
"93 153 CURVE SMOOTH",
"103.667 153 OFFCURVE",
"113.833 156.5 OFFCURVE",
"123.5 163.5 CURVE SMOOTH",
"133.167 170.5 OFFCURVE",
"144.333 175 OFFCURVE",
"157 177 CURVE SMOOTH",
"175.667 179.667 OFFCURVE",
"191.667 182 OFFCURVE",
"209 182 CURVE SMOOTH",
"227.827 182 OFFCURVE",
"278 184.688 OFFCURVE",
"278 170 CURVE",
"270.459 84.533 OFFCURVE",
"231.709 9 OFFCURVE",
"165 9 CURVE SMOOTH",
"127 9 OFFCURVE",
"100 28.667 OFFCURVE",
"84 68 CURVE SMOOTH",
"81.333 74 OFFCURVE",
"78.333 82 OFFCURVE",
"75 92 CURVE SMOOTH",
"71.667 102 OFFCURVE",
"67.333 107 OFFCURVE",
"62 107 CURVE SMOOTH",
"48.667 107 OFFCURVE",
"39.333 103.833 OFFCURVE",
"34 97.5 CURVE SMOOTH",
"28.667 91.167 OFFCURVE",
"26 86.333 OFFCURVE",
"26 83 CURVE SMOOTH",
"26 69.667 OFFCURVE",
"27.667 62.667 OFFCURVE",
"33 52 CURVE",
"57.667 -2.667 OFFCURVE",
"101.667 -30 OFFCURVE",
"165 -30 CURVE SMOOTH",
"250.214 -30 OFFCURVE",
"308.17 54.299 OFFCURVE",
"324 144 CURVE SMOOTH",
"330.54 183.238 OFFCURVE",
"350 149.018 OFFCURVE",
"350 187 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
79 932 51 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 51 106 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 51 25 51 41 51 57 51 73 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
23 928 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 931 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = eCyrillic;
unicode = 044D;
},
{
glyphname = yuCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"463 301 OFFCURVE",
"439.333 374.333 OFFCURVE",
"370 417 CURVE SMOOTH",
"346.667 431.667 OFFCURVE",
"328.667 439 OFFCURVE",
"316 439 CURVE SMOOTH",
"235.528 439 OFFCURVE",
"185.399 329.657 OFFCURVE",
"170 227 CURVE",
"170 219.214 OFFCURVE",
"110.667 217 OFFCURVE",
"93 217 CURVE SMOOTH",
"79.667 217 OFFCURVE",
"79 223.333 OFFCURVE",
"79 242 CURVE SMOOTH",
"79 248.667 OFFCURVE",
"79.5 255.333 OFFCURVE",
"80.5 262 CURVE SMOOTH",
"81.5 268.667 OFFCURVE",
"82 275.667 OFFCURVE",
"82 283 CURVE SMOOTH",
"82 303.088 OFFCURVE",
"98 369.681 OFFCURVE",
"98 391 CURVE SMOOTH",
"98 401.667 OFFCURVE",
"72 415 OFFCURVE",
"56 415 CURVE SMOOTH",
"48 415 OFFCURVE",
"39.667 412.667 OFFCURVE",
"31 408 CURVE",
"29 346 OFFCURVE",
"28 284.333 OFFCURVE",
"28 223 CURVE SMOOTH",
"28 204.577 OFFCURVE",
"10 214.831 OFFCURVE",
"10 193 CURVE SMOOTH",
"10 181.667 OFFCURVE",
"13 172.5 OFFCURVE",
"19 165.5 CURVE SMOOTH",
"25 158.5 OFFCURVE",
"28 152 OFFCURVE",
"28 146 CURVE SMOOTH",
"28 110.667 OFFCURVE",
"29 75.667 OFFCURVE",
"31 41 CURVE SMOOTH",
"32.333 9.667 OFFCURVE",
"48.667 -6 OFFCURVE",
"80 -6 CURVE SMOOTH",
"86.667 -6 OFFCURVE",
"90 -2.667 OFFCURVE",
"90 4 CURVE SMOOTH",
"90 6.092 OFFCURVE",
"81 47.121 OFFCURVE",
"81 62 CURVE SMOOTH",
"81 80 OFFCURVE",
"80.667 98 OFFCURVE",
"80 116 CURVE SMOOTH",
"79.333 134 OFFCURVE",
"79 152 OFFCURVE",
"79 170 CURVE SMOOTH",
"79 173.333 OFFCURVE",
"81.167 175.833 OFFCURVE",
"85.5 177.5 CURVE SMOOTH",
"89.833 179.167 OFFCURVE",
"101.667 180 OFFCURVE",
"121 180 CURVE SMOOTH",
"140.333 180 OFFCURVE",
"152.667 179.5 OFFCURVE",
"158 178.5 CURVE SMOOTH",
"163.333 177.5 OFFCURVE",
"166 175 OFFCURVE",
"166 171 CURVE SMOOTH",
"166 56.927 OFFCURVE",
"209.466 -30 OFFCURVE",
"310 -30 CURVE SMOOTH",
"408.487 -30 OFFCURVE",
"463 76.869 OFFCURVE",
"463 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 99.865 OFFCURVE",
"383.029 9 OFFCURVE",
"310 9 CURVE SMOOTH",
"246 9 OFFCURVE",
"221 74 OFFCURVE",
"221 174 CURVE SMOOTH",
"221 278.51 OFFCURVE",
"258.357 384 OFFCURVE",
"331 384 CURVE SMOOTH",
"393.072 384 OFFCURVE",
"415 295.637 OFFCURVE",
"415 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 934 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 933 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 71 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 16 22 16 38 16 54 16 70 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 16 101 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 71 106 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 71 25 71 41 71 57 71 73 71 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 81 22 81 38 81 54 81 70 81 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 81 101 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
84 928 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 931 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 929 13 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 486;
}
);
note = yuCyrillic;
unicode = 044E;
},
{
glyphname = yaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"4 -8.667 OFFCURVE",
"14.333 -16 OFFCURVE",
"25 -16 CURVE SMOOTH",
"34.333 -16 OFFCURVE",
"41 -12.167 OFFCURVE",
"45 -4.5 CURVE SMOOTH",
"49 3.167 OFFCURVE",
"53.667 10.333 OFFCURVE",
"59 17 CURVE SMOOTH",
"99.211 67.264 OFFCURVE",
"170.274 123.613 OFFCURVE",
"230 134 CURVE",
"244.667 134 OFFCURVE",
"254.5 133.333 OFFCURVE",
"259.5 132 CURVE SMOOTH",
"264.5 130.667 OFFCURVE",
"267 129 OFFCURVE",
"267 127 CURVE SMOOTH",
"267 71 OFFCURVE",
"256.667 25 OFFCURVE",
"246 9 CURVE",
"242.667 5.667 OFFCURVE",
"241 2.333 OFFCURVE",
"241 -1 CURVE SMOOTH",
"241 -13 OFFCURVE",
"261.333 -15 OFFCURVE",
"268 -15 CURVE SMOOTH",
"280 -15 OFFCURVE",
"290.667 -11 OFFCURVE",
"296 1 CURVE",
"306.667 27.667 OFFCURVE",
"315 80.333 OFFCURVE",
"315 127 CURVE SMOOTH",
"315 136.429 OFFCURVE",
"345 143.464 OFFCURVE",
"345 162 CURVE SMOOTH",
"345 172.667 OFFCURVE",
"341.333 181.333 OFFCURVE",
"324 188 CURVE",
"319.424 188 OFFCURVE",
"312 364.638 OFFCURVE",
"312 379 CURVE SMOOTH",
"312 395.098 OFFCURVE",
"340 382.354 OFFCURVE",
"340 402 CURVE SMOOTH",
"340 418 OFFCURVE",
"328.667 425.333 OFFCURVE",
"314 428 CURVE",
"311.333 436 OFFCURVE",
"298.667 445 OFFCURVE",
"284 445 CURVE SMOOTH",
"279.333 445 OFFCURVE",
"274.833 443 OFFCURVE",
"270.5 439 CURVE SMOOTH",
"266.167 435 OFFCURVE",
"261.667 433 OFFCURVE",
"257 433 CURVE SMOOTH",
"251.667 433 OFFCURVE",
"244.5 433.5 OFFCURVE",
"235.5 434.5 CURVE SMOOTH",
"226.5 435.5 OFFCURVE",
"218 436 OFFCURVE",
"210 436 CURVE SMOOTH",
"124.042 436 OFFCURVE",
"35 363.28 OFFCURVE",
"35 275 CURVE SMOOTH",
"35 192.531 OFFCURVE",
"89.886 161.807 OFFCURVE",
"158 147 CURVE",
"108.571 123.739 OFFCURVE",
"4 59.9 OFFCURVE",
"4 6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93.903 338.066 OFFCURVE",
"142.817 396 OFFCURVE",
"209 396 CURVE SMOOTH",
"226.333 396 OFFCURVE",
"240.667 395 OFFCURVE",
"252 393 CURVE",
"264 333 OFFCURVE",
"271 263 OFFCURVE",
"271 191 CURVE SMOOTH",
"271 187.667 OFFCURVE",
"269.667 185.667 OFFCURVE",
"267 185 CURVE",
"253.667 180.333 OFFCURVE",
"243 177.333 OFFCURVE",
"235 176 CURVE SMOOTH",
"227 174.667 OFFCURVE",
"220.667 174 OFFCURVE",
"216 174 CURVE",
"141.333 184.667 OFFCURVE",
"91 213.333 OFFCURVE",
"91 280 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 934 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 932 81 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 81 106 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 81 121 81 137 81 153 81 169 81 185 81 201 81 217 81 233 81 249 81 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 81 25 81 41 81 57 81 73 81 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 10 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 73 22 73 38 73 54 73 70 73 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 73 101 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 928 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 70 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 356;
}
);
note = yaCyrillic;
unicode = 044F;
},
{
glyphname = egraveCyrillic;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 67, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = egraveCyrillic;
unicode = 0450;
},
{
glyphname = ioCyrillic;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 40, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ioCyrillic;
unicode = 0451;
},
{
glyphname = djeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"330 551 OFFCURVE",
"306.333 566 OFFCURVE",
"273 566 CURVE SMOOTH",
"231.667 566 OFFCURVE",
"193.667 558.667 OFFCURVE",
"159 552 CURVE",
"153.667 552 OFFCURVE",
"151 553 OFFCURVE",
"151 561 CURVE",
"154 577 LINE SMOOTH",
"159.333 606.333 OFFCURVE",
"162.667 626 OFFCURVE",
"164 642 CURVE",
"164 652.931 OFFCURVE",
"132.052 682 OFFCURVE",
"115 682 CURVE SMOOTH",
"101.667 682 OFFCURVE",
"95 676 OFFCURVE",
"95 664 CURVE SMOOTH",
"95 658 OFFCURVE",
"95.333 654 OFFCURVE",
"96 652 CURVE",
"96 549 LINE SMOOTH",
"96 525.232 OFFCURVE",
"1 532.766 OFFCURVE",
"1 510 CURVE SMOOTH",
"1 492.701 OFFCURVE",
"9.511 461 OFFCURVE",
"29 461 CURVE SMOOTH",
"46.315 461 OFFCURVE",
"77.236 490 OFFCURVE",
"88 490 CURVE SMOOTH",
"92.667 490 OFFCURVE",
"95 488 OFFCURVE",
"95 484 CURVE SMOOTH",
"91 37 LINE SMOOTH",
"91 14.333 OFFCURVE",
"108.333 -12 OFFCURVE",
"131 -12 CURVE SMOOTH",
"147 -12 OFFCURVE",
"155 -6.667 OFFCURVE",
"155 4 CURVE SMOOTH",
"155 23.193 OFFCURVE",
"145 81.807 OFFCURVE",
"145 101 CURVE SMOOTH",
"145 229 LINE",
"150.333 238.333 OFFCURVE",
"150 248.667 OFFCURVE",
"150 254 CURVE SMOOTH",
"150 306.752 OFFCURVE",
"185.929 370 OFFCURVE",
"231 370 CURVE SMOOTH",
"323 370 OFFCURVE",
"339 258.348 OFFCURVE",
"339 144 CURVE SMOOTH",
"339 50.667 OFFCURVE",
"330.667 -20.333 OFFCURVE",
"314 -69 CURVE SMOOTH",
"297.333 -117.667 OFFCURVE",
"268.667 -142 OFFCURVE",
"228 -142 CURVE SMOOTH",
"188 -142 OFFCURVE",
"161 -133 OFFCURVE",
"147 -115 CURVE SMOOTH",
"137.667 -103.667 OFFCURVE",
"127.333 -98 OFFCURVE",
"116 -98 CURVE SMOOTH",
"105.333 -98 OFFCURVE",
"89 -116 OFFCURVE",
"89 -128 CURVE SMOOTH",
"89 -134 OFFCURVE",
"92.333 -140.333 OFFCURVE",
"99 -147 CURVE SMOOTH",
"130.844 -178.844 OFFCURVE",
"162.187 -193 OFFCURVE",
"237 -193 CURVE SMOOTH",
"302.333 -193 OFFCURVE",
"341.333 -150.167 OFFCURVE",
"364 -85.5 CURVE SMOOTH",
"386.667 -20.833 OFFCURVE",
"392 67 OFFCURVE",
"392 159 CURVE SMOOTH",
"392 262.356 OFFCURVE",
"386.415 325.057 OFFCURVE",
"313 374 CURVE SMOOTH",
"279.366 396.422 OFFCURVE",
"254.374 409 OFFCURVE",
"204 409 CURVE SMOOTH",
"190.667 409 OFFCURVE",
"171.667 398 OFFCURVE",
"147 376 CURVE",
"146.333 408 OFFCURVE",
"145.833 434 OFFCURVE",
"145.5 454 CURVE SMOOTH",
"145.167 474 OFFCURVE",
"145 488 OFFCURVE",
"145 496 CURVE SMOOTH",
"145 500.667 OFFCURVE",
"147.333 503.333 OFFCURVE",
"152 504 CURVE SMOOTH",
"167 506 LINE SMOOTH",
"197.667 510 OFFCURVE",
"234.333 513 OFFCURVE",
"261 513 CURVE SMOOTH",
"276.333 513 OFFCURVE",
"287.167 511.333 OFFCURVE",
"293.5 508 CURVE SMOOTH",
"299.833 504.667 OFFCURVE",
"307 503 OFFCURVE",
"315 503 CURVE SMOOTH",
"325 503 OFFCURVE",
"330 508.333 OFFCURVE",
"330 519 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 85 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 933 48 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 11 22 11 38 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 11 69 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 48 106 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 48 25 48 41 48 57 48 73 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
90 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
69 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 931 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
110 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 928 53 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
14 53 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 415;
}
);
note = djeCyrillic;
unicode = 0452;
},
{
glyphname = gjeCyrillic;
layers = (
{
components = (
{
name = gheCyrillic;
},
{
name = acute;
transform = "{1, 0, 0, 1, 66, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 300;
}
);
note = gjeCyrillic;
unicode = 0453;
},
{
glyphname = ieCyrillic2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"271 201.667 OFFCURVE",
"247.667 216 OFFCURVE",
"209 216 CURVE SMOOTH",
"178.333 216 OFFCURVE",
"142 215.667 OFFCURVE",
"110 213 CURVE",
"102 213 OFFCURVE",
"98 216.333 OFFCURVE",
"98 223 CURVE",
"120 342.333 OFFCURVE",
"156.667 402 OFFCURVE",
"208 402 CURVE SMOOTH",
"249.13 402 OFFCURVE",
"258 357.2 OFFCURVE",
"258 313 CURVE SMOOTH",
"258 301.526 OFFCURVE",
"250 275.63 OFFCURVE",
"250 274 CURVE SMOOTH",
"250 263.333 OFFCURVE",
"269.333 254 OFFCURVE",
"280 254 CURVE SMOOTH",
"302.667 254 OFFCURVE",
"308 270 OFFCURVE",
"308 302 CURVE SMOOTH",
"308 324.667 OFFCURVE",
"305.667 345 OFFCURVE",
"301 363 CURVE SMOOTH",
"293.072 394.714 OFFCURVE",
"204.526 446 OFFCURVE",
"170 446 CURVE SMOOTH",
"142 446 OFFCURVE",
"116.167 426 OFFCURVE",
"92.5 386 CURVE SMOOTH",
"68.833 346 OFFCURVE",
"51.333 290.667 OFFCURVE",
"40 220 CURVE SMOOTH",
"37.717 201.735 OFFCURVE",
"14 206.085 OFFCURVE",
"14 191 CURVE SMOOTH",
"14 171.794 OFFCURVE",
"31.833 162.585 OFFCURVE",
"36 123 CURVE SMOOTH",
"45.333 39 OFFCURVE",
"99 -19 OFFCURVE",
"183 -19 CURVE SMOOTH",
"196.333 -19 OFFCURVE",
"215.667 -15.333 OFFCURVE",
"241 -8 CURVE",
"262.106 -0.965 OFFCURVE",
"333 46.327 OFFCURVE",
"333 80 CURVE SMOOTH",
"333 89.333 OFFCURVE",
"326.667 109 OFFCURVE",
"312 109 CURVE SMOOTH",
"300 109 OFFCURVE",
"289.333 91 OFFCURVE",
"284 79 CURVE",
"277.987 63.969 OFFCURVE",
"208.521 16 OFFCURVE",
"180 16 CURVE SMOOTH",
"122.667 16 OFFCURVE",
"92 69 OFFCURVE",
"92 153 CURVE SMOOTH",
"92 165 OFFCURVE",
"93.667 168 OFFCURVE",
"103 168 CURVE SMOOTH",
"141 168 OFFCURVE",
"169 167.333 OFFCURVE",
"187 166 CURVE SMOOTH",
"205 164.667 OFFCURVE",
"219.333 162.333 OFFCURVE",
"230 159 CURVE",
"240.667 155 OFFCURVE",
"247.333 152 OFFCURVE",
"254 152 CURVE SMOOTH",
"268.667 152 OFFCURVE",
"271 156.333 OFFCURVE",
"271 175 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 934 41 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 932 67 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 12 22 12 38 12 54 12 70 12 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 12 101 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 67 106 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 67 25 67 41 67 57 67 73 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
49 930 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
79 931 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 15 230 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 344;
}
);
note = ieCyrillic2;
unicode = 0454;
},
{
glyphname = dzeCyrillic;
layers = (
{
components = (
{
name = s;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = dzeCyrillic;
unicode = 0455;
},
{
glyphname = iCyrillic2;
layers = (
{
components = (
{
name = i;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = iCyrillic2;
unicode = 0456;
},
{
glyphname = yiCyrillic;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = dotlessi;
transform = "{1, 0, 0, 1, 41, 0}";
},
{
alignment = -1;
name = dieresis;
transform = "{1, 0, 0, 1, -38, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 188;
}
);
note = yiCyrillic;
unicode = 0457;
},
{
glyphname = jeCyrillic;
layers = (
{
components = (
{
name = j;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 178;
}
);
note = jeCyrillic;
unicode = 0458;
},
{
glyphname = ljeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"128 370.333 OFFCURVE",
"136.333 351 OFFCURVE",
"147 351 CURVE SMOOTH",
"150.333 351 OFFCURVE",
"152.833 351.333 OFFCURVE",
"154.5 352 CURVE SMOOTH",
"156.167 352.667 OFFCURVE",
"158 353 OFFCURVE",
"160 353 CURVE SMOOTH",
"165.333 353 OFFCURVE",
"171 353.333 OFFCURVE",
"171 344 CURVE",
"171.667 327.333 OFFCURVE",
"172 310.667 OFFCURVE",
"172 294 CURVE SMOOTH",
"172 277.333 OFFCURVE",
"172 260.667 OFFCURVE",
"172 244 CURVE SMOOTH",
"172 155.333 OFFCURVE",
"165.5 91.833 OFFCURVE",
"152.5 53.5 CURVE SMOOTH",
"139.5 15.167 OFFCURVE",
"122.667 -4 OFFCURVE",
"102 -4 CURVE SMOOTH",
"55.33 -4 OFFCURVE",
"69.499 80 OFFCURVE",
"28 80 CURVE SMOOTH",
"12.667 80 OFFCURVE",
"5 71 OFFCURVE",
"5 53 CURVE SMOOTH",
"5 -1.727 OFFCURVE",
"62.178 -31 OFFCURVE",
"107 -31 CURVE SMOOTH",
"149.667 -31 OFFCURVE",
"182.333 -13.333 OFFCURVE",
"201 48 CURVE SMOOTH",
"218.549 105.662 OFFCURVE",
"225 199.829 OFFCURVE",
"225 260 CURVE SMOOTH",
"225 296 OFFCURVE",
"224.333 331.333 OFFCURVE",
"223 366 CURVE",
"223 376.745 OFFCURVE",
"324.021 386 OFFCURVE",
"345 386 CURVE SMOOTH",
"348.333 386 OFFCURVE",
"350 383.667 OFFCURVE",
"350 379 CURVE",
"348.667 353.667 OFFCURVE",
"346.833 329.333 OFFCURVE",
"344.5 306 CURVE SMOOTH",
"342.167 282.667 OFFCURVE",
"340 257.667 OFFCURVE",
"338 231 CURVE",
"338 223.667 OFFCURVE",
"335 218.5 OFFCURVE",
"329 215.5 CURVE SMOOTH",
"323 212.5 OFFCURVE",
"320 207.333 OFFCURVE",
"320 200 CURVE SMOOTH",
"320 193.333 OFFCURVE",
"322.5 188.667 OFFCURVE",
"327.5 186 CURVE SMOOTH",
"332.5 183.333 OFFCURVE",
"335 178.667 OFFCURVE",
"335 172 CURVE",
"334.333 162.667 OFFCURVE",
"334 153.333 OFFCURVE",
"334 144 CURVE SMOOTH",
"334 134.667 OFFCURVE",
"334 125 OFFCURVE",
"334 115 CURVE SMOOTH",
"334 72 LINE",
"330.667 65.333 OFFCURVE",
"327.833 61.167 OFFCURVE",
"325.5 59.5 CURVE SMOOTH",
"323.167 57.833 OFFCURVE",
"322 54.333 OFFCURVE",
"322 49 CURVE SMOOTH",
"322 43 OFFCURVE",
"324.833 39 OFFCURVE",
"330.5 37 CURVE SMOOTH",
"336.167 35 OFFCURVE",
"340 31.333 OFFCURVE",
"342 26 CURVE SMOOTH",
"351.333 -0.667 OFFCURVE",
"365 -9 OFFCURVE",
"389 -9 CURVE SMOOTH",
"397.667 -9 OFFCURVE",
"403.333 -4.667 OFFCURVE",
"406 4 CURVE",
"431.333 -1.333 OFFCURVE",
"466.667 -4 OFFCURVE",
"484 -4 CURVE SMOOTH",
"557.295 -4 OFFCURVE",
"646 38.837 OFFCURVE",
"646 114 CURVE SMOOTH",
"646 151.333 OFFCURVE",
"633.667 165 OFFCURVE",
"591 189 CURVE SMOOTH",
"544.333 215.667 OFFCURVE",
"508.667 223 OFFCURVE",
"450 223 CURVE SMOOTH",
"436 223 OFFCURVE",
"425.167 222.833 OFFCURVE",
"417.5 222.5 CURVE SMOOTH",
"409.833 222.167 OFFCURVE",
"403.667 222 OFFCURVE",
"399 222 CURVE SMOOTH",
"396.333 222 OFFCURVE",
"394.333 222.667 OFFCURVE",
"393 224 CURVE",
"394.835 258.869 OFFCURVE",
"400.502 392.335 OFFCURVE",
"418 404 CURVE",
"421.333 407.333 OFFCURVE",
"423 410.667 OFFCURVE",
"423 414 CURVE SMOOTH",
"423 426 OFFCURVE",
"400 445 OFFCURVE",
"388 445 CURVE SMOOTH",
"379.248 445 OFFCURVE",
"335.016 438.446 OFFCURVE",
"313 436 CURVE SMOOTH",
"294.529 433.537 OFFCURVE",
"221.712 426 OFFCURVE",
"219 426 CURVE SMOOTH",
"217 426 OFFCURVE",
"214.167 426.333 OFFCURVE",
"210.5 427 CURVE SMOOTH",
"206.833 427.667 OFFCURVE",
"203.333 428 OFFCURVE",
"200 428 CURVE SMOOTH",
"186.177 428 OFFCURVE",
"174.389 415.812 OFFCURVE",
"149 408 CURVE SMOOTH",
"131.667 402.667 OFFCURVE",
"128 395.667 OFFCURVE",
"128 385 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"598 71.221 OFFCURVE",
"538.282 32 OFFCURVE",
"483 32 CURVE SMOOTH",
"453.667 32 OFFCURVE",
"417.667 36.667 OFFCURVE",
"395 46 CURVE",
"392.333 64.667 OFFCURVE",
"391 90.333 OFFCURVE",
"391 125 CURVE SMOOTH",
"391 181 LINE",
"392.333 184.333 OFFCURVE",
"398.5 186.167 OFFCURVE",
"409.5 186.5 CURVE SMOOTH",
"420.5 186.833 OFFCURVE",
"432 187 OFFCURVE",
"444 187 CURVE SMOOTH",
"544.573 187 OFFCURVE",
"598 162.398 OFFCURVE",
"598 119 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 933 107 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
127 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 932 119 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
127 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
127 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 84 118 84 134 84 150 84 166 84 182 84 198 84 214 84 230 84 246 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 84 22 84 38 84 54 84 70 84 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 84 101 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
107 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
110 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 119 106 119 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 119 121 119 137 119 153 119 169 119 185 119 201 119 217 119 233 119 249 119 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 119 25 119 41 119 57 119 73 119 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
127 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
131 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
131 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
140 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
104 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 929 124 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
92 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
134 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 134 119 134 135 134 151 134 167 134 183 134 199 134 215 134 231 134 247 134 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 134 23 134 39 134 55 134 71 134 87 134 103 134 119 134 135 134 151 134 167 134 183 134 199 134 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 134 230 134 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 664;
}
);
note = ljeCyrillic;
unicode = 0459;
},
{
glyphname = njeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"354 383 OFFCURVE",
"356 385.667 OFFCURVE",
"356 387 CURVE SMOOTH",
"356 400.382 OFFCURVE",
"338.197 422 OFFCURVE",
"312 422 CURVE SMOOTH",
"288 422 OFFCURVE",
"276 369.667 OFFCURVE",
"276 265 CURVE SMOOTH",
"276 222 LINE SMOOTH",
"276 213.333 OFFCURVE",
"265 206.167 OFFCURVE",
"243 200.5 CURVE SMOOTH",
"221 194.833 OFFCURVE",
"188 185.333 OFFCURVE",
"144 172 CURVE SMOOTH",
"133.333 168.667 OFFCURVE",
"122.833 165 OFFCURVE",
"112.5 161 CURVE SMOOTH",
"102.167 157 OFFCURVE",
"96.333 155 OFFCURVE",
"95 155 CURVE SMOOTH",
"92.333 155 OFFCURVE",
"90.667 159.667 OFFCURVE",
"90 169 CURVE SMOOTH",
"89.333 178.333 OFFCURVE",
"89 187 OFFCURVE",
"89 195 CURVE SMOOTH",
"89 244.764 OFFCURVE",
"98.856 328.137 OFFCURVE",
"107 358 CURVE SMOOTH",
"109.667 366.667 OFFCURVE",
"112.333 374 OFFCURVE",
"115 380 CURVE SMOOTH",
"117.667 386 OFFCURVE",
"119 391 OFFCURVE",
"119 395 CURVE SMOOTH",
"119 409.667 OFFCURVE",
"99.667 423 OFFCURVE",
"85 423 CURVE SMOOTH",
"67 423 OFFCURVE",
"55.167 408.333 OFFCURVE",
"49.5 379 CURVE SMOOTH",
"43.833 349.667 OFFCURVE",
"41 306.667 OFFCURVE",
"41 250 CURVE SMOOTH",
"41 188.667 OFFCURVE",
"41 121.167 OFFCURVE",
"45 68.5 CURVE SMOOTH",
"48.267 25.483 OFFCURVE",
"54.671 -21 OFFCURVE",
"68 -21 CURVE SMOOTH",
"78.667 -21 OFFCURVE",
"99 -17.667 OFFCURVE",
"103 1 CURVE",
"89.868 16.758 OFFCURVE",
"88 71.063 OFFCURVE",
"88 102 CURVE SMOOTH",
"88 125.29 OFFCURVE",
"256.967 161 OFFCURVE",
"268 161 CURVE SMOOTH",
"271.333 161 OFFCURVE",
"274.833 154.333 OFFCURVE",
"278.5 141 CURVE SMOOTH",
"282.167 127.667 OFFCURVE",
"284 101.667 OFFCURVE",
"284 63 CURVE SMOOTH",
"284 48.639 OFFCURVE",
"256 59.492 OFFCURVE",
"256 38 CURVE SMOOTH",
"256 26 OFFCURVE",
"271 17.667 OFFCURVE",
"279 15 CURVE",
"299.893 7.165 OFFCURVE",
"301.479 -16 OFFCURVE",
"319 -16 CURVE SMOOTH",
"324.333 -16 OFFCURVE",
"328.167 -14.167 OFFCURVE",
"330.5 -10.5 CURVE SMOOTH",
"332.833 -6.833 OFFCURVE",
"337.667 -5 OFFCURVE",
"345 -5 CURVE",
"371.667 -9 OFFCURVE",
"400.667 -12 OFFCURVE",
"418 -12 CURVE SMOOTH",
"492.594 -12 OFFCURVE",
"585 30.782 OFFCURVE",
"585 106 CURVE SMOOTH",
"585 143.333 OFFCURVE",
"572.667 157 OFFCURVE",
"530 181 CURVE SMOOTH",
"483.333 207.667 OFFCURVE",
"442.667 215 OFFCURVE",
"384 215 CURVE SMOOTH",
"370 215 OFFCURVE",
"359.167 214.833 OFFCURVE",
"351.5 214.5 CURVE SMOOTH",
"343.833 214.167 OFFCURVE",
"337.667 214 OFFCURVE",
"333 214 CURVE SMOOTH",
"326.333 214 OFFCURVE",
"323 217.667 OFFCURVE",
"323 225 CURVE SMOOTH",
"323 323.185 OFFCURVE",
"327.549 360.291 OFFCURVE",
"350 379 CURVE"
);
},
{
closed = 1;
nodes = (
"537 63.839 OFFCURVE",
"473.225 24 OFFCURVE",
"417 24 CURVE SMOOTH",
"387.248 24 OFFCURVE",
"336.706 29.055 OFFCURVE",
"334 48 CURVE",
"329.085 75.031 OFFCURVE",
"322 142.194 OFFCURVE",
"322 164 CURVE SMOOTH",
"322 170.667 OFFCURVE",
"327.167 174.833 OFFCURVE",
"337.5 176.5 CURVE SMOOTH",
"347.833 178.167 OFFCURVE",
"361.333 179 OFFCURVE",
"378 179 CURVE SMOOTH",
"477.553 179 OFFCURVE",
"537 153.293 OFFCURVE",
"537 111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 932 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 84 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 932 94 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 75 22 75 38 75 54 75 70 75 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 75 101 75 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
67 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 94 106 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 94 25 94 41 94 57 94 73 94 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
102 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
102 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
118 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 929 99 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
112 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 112 119 112 135 112 151 112 167 112 183 112 199 112 215 112 231 112 247 112 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 112 23 112 39 112 55 112 71 112 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 112 102 112 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 609;
}
);
note = njeCyrillic;
unicode = 045A;
},
{
glyphname = tsheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"332 551 OFFCURVE",
"308.333 566 OFFCURVE",
"275 566 CURVE SMOOTH",
"233.667 566 OFFCURVE",
"195.667 558.667 OFFCURVE",
"161 552 CURVE",
"155.667 552 OFFCURVE",
"153 553 OFFCURVE",
"153 561 CURVE",
"156 577 LINE SMOOTH",
"161.333 606.333 OFFCURVE",
"164.667 626 OFFCURVE",
"166 642 CURVE",
"166 652.931 OFFCURVE",
"134.052 682 OFFCURVE",
"117 682 CURVE SMOOTH",
"103.667 682 OFFCURVE",
"97 676 OFFCURVE",
"97 664 CURVE SMOOTH",
"97 658 OFFCURVE",
"97.333 654 OFFCURVE",
"98 652 CURVE",
"98 549 LINE SMOOTH",
"98 525.232 OFFCURVE",
"3 532.766 OFFCURVE",
"3 510 CURVE SMOOTH",
"3 492.701 OFFCURVE",
"11.511 461 OFFCURVE",
"31 461 CURVE SMOOTH",
"48.315 461 OFFCURVE",
"79.236 490 OFFCURVE",
"90 490 CURVE SMOOTH",
"94.667 490 OFFCURVE",
"97 488 OFFCURVE",
"97 484 CURVE SMOOTH",
"93 37 LINE SMOOTH",
"93 14.333 OFFCURVE",
"110.333 -12 OFFCURVE",
"133 -12 CURVE SMOOTH",
"149 -12 OFFCURVE",
"157 -6.667 OFFCURVE",
"157 4 CURVE SMOOTH",
"157 23.193 OFFCURVE",
"147 81.807 OFFCURVE",
"147 101 CURVE SMOOTH",
"147 229 LINE",
"152.333 238.333 OFFCURVE",
"152 248.667 OFFCURVE",
"152 254 CURVE SMOOTH",
"152 306.752 OFFCURVE",
"187.929 370 OFFCURVE",
"233 370 CURVE SMOOTH",
"289.667 370 OFFCURVE",
"318 285.333 OFFCURVE",
"318 116 CURVE SMOOTH",
"318 98.667 OFFCURVE",
"318 78.667 OFFCURVE",
"318 56 CURVE SMOOTH",
"318 33.333 OFFCURVE",
"317.667 7.667 OFFCURVE",
"317 -21 CURVE",
"325 -30.333 OFFCURVE",
"332.667 -35 OFFCURVE",
"340 -35 CURVE SMOOTH",
"354.667 -35 OFFCURVE",
"364.667 -32.333 OFFCURVE",
"370 -27 CURVE",
"370 200 LINE SMOOTH",
"370 300 OFFCURVE",
"341.667 366 OFFCURVE",
"283 390 CURVE SMOOTH",
"252.333 402 OFFCURVE",
"226 409 OFFCURVE",
"206 409 CURVE SMOOTH",
"192.667 409 OFFCURVE",
"173.667 398 OFFCURVE",
"149 376 CURVE",
"148.333 408 OFFCURVE",
"147.833 434 OFFCURVE",
"147.5 454 CURVE SMOOTH",
"147.167 474 OFFCURVE",
"147 488 OFFCURVE",
"147 496 CURVE SMOOTH",
"147 500.667 OFFCURVE",
"149.333 503.333 OFFCURVE",
"154 504 CURVE SMOOTH",
"169 506 LINE SMOOTH",
"199.667 510 OFFCURVE",
"236.333 513 OFFCURVE",
"263 513 CURVE SMOOTH",
"278.333 513 OFFCURVE",
"289.167 511.333 OFFCURVE",
"295.5 508 CURVE SMOOTH",
"301.833 504.667 OFFCURVE",
"309 503 OFFCURVE",
"317 503 CURVE SMOOTH",
"327 503 OFFCURVE",
"332 508.333 OFFCURVE",
"332 519 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 64 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 933 30 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 11 22 11 38 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 11 69 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
89 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 928 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
14 32 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 403;
}
);
note = tsheCyrillic;
unicode = 045B;
},
{
glyphname = kjeCyrillic;
layers = (
{
components = (
{
name = kappa;
},
{
name = acute;
transform = "{1, 0, 0, 1, 110, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 381;
}
);
note = kjeCyrillic;
unicode = 045C;
},
{
glyphname = igraveCyrillic;
layers = (
{
components = (
{
name = iCyrillic;
},
{
name = grave;
transform = "{1, 0, 0, 1, 64, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 405;
}
);
note = igraveCyrillic;
unicode = 045D;
},
{
glyphname = uShortCyrillic;
layers = (
{
components = (
{
name = y;
},
{
name = breve;
transform = "{1, 0, 0, 1, 64, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = uShortCyrillic;
unicode = 045E;
},
{
glyphname = dzheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"210 1.333 OFFCURVE",
"227.333 15 OFFCURVE",
"240 33 CURVE",
"248 -4 LINE",
"252.667 -16.667 OFFCURVE",
"262.667 -23 OFFCURVE",
"278 -23 CURVE SMOOTH",
"289.333 -23 OFFCURVE",
"296.667 -19.333 OFFCURVE",
"300 -12 CURVE SMOOTH",
"303.333 -4.667 OFFCURVE",
"305 10.667 OFFCURVE",
"305 34 CURVE SMOOTH",
"305 59.773 OFFCURVE",
"298 153.471 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 225.137 OFFCURVE",
"311 337.153 OFFCURVE",
"311 374 CURVE SMOOTH",
"311 397.333 OFFCURVE",
"298.667 409 OFFCURVE",
"274 409 CURVE SMOOTH",
"249.333 409 OFFCURVE",
"237 400.667 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"238.833 370.167 OFFCURVE",
"242.5 360.5 CURVE SMOOTH",
"246.167 350.833 OFFCURVE",
"248 343.333 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 115.141 OFFCURVE",
"210.23 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"109.219 27 OFFCURVE",
"82 91.335 OFFCURVE",
"82 142 CURVE SMOOTH",
"82 177.046 OFFCURVE",
"88 342.416 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413.333 OFFCURVE",
"78.667 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"36.667 424 OFFCURVE",
"25 416.333 OFFCURVE",
"25 401 CURVE SMOOTH",
"25 397.667 OFFCURVE",
"25.333 395.333 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 116.333 OFFCURVE",
"30.667 74 OFFCURVE",
"40 50 CURVE SMOOTH",
"53.21 18.296 OFFCURVE",
"104.08 -21 OFFCURVE",
"138 -21 CURVE",
"138 -38.333 OFFCURVE",
"135.833 -54.833 OFFCURVE",
"131.5 -70.5 CURVE SMOOTH",
"127.167 -86.167 OFFCURVE",
"125 -96.667 OFFCURVE",
"125 -102 CURVE SMOOTH",
"125 -112.667 OFFCURVE",
"135.333 -118 OFFCURVE",
"146 -118 CURVE SMOOTH",
"183.939 -118 OFFCURVE",
"188 -85.045 OFFCURVE",
"188 -8 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 934 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 934 44 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
63 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 44 106 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 44 25 44 41 44 57 44 73 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
61 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 35 119 35 135 35 151 35 167 35 183 35 199 35 215 35 231 35 247 35 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 35 23 35 39 35 55 35 71 35 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 35 102 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
64 61 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 331;
}
);
note = dzheCyrillic;
unicode = 045F;
},
{
glyphname = YatCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"329 551 OFFCURVE",
"304 566 OFFCURVE",
"272 566 CURVE SMOOTH",
"248.89 566 OFFCURVE",
"179.166 554 OFFCURVE",
"169 554 CURVE SMOOTH",
"164.333 554 OFFCURVE",
"162 556.333 OFFCURVE",
"162 561 CURVE SMOOTH",
"162 576.232 OFFCURVE",
"183 622.374 OFFCURVE",
"183 640 CURVE SMOOTH",
"183 660 OFFCURVE",
"171.333 673 OFFCURVE",
"150 673 CURVE SMOOTH",
"122 673 OFFCURVE",
"109.667 663.667 OFFCURVE",
"107 645 CURVE",
"101.667 615.667 OFFCURVE",
"98 584.667 OFFCURVE",
"94 550 CURVE",
"94 525.916 OFFCURVE",
"0 534.084 OFFCURVE",
"0 510 CURVE SMOOTH",
"0 494 OFFCURVE",
"8 478 OFFCURVE",
"28 478 CURVE SMOOTH",
"44.667 478 OFFCURVE",
"61 482.333 OFFCURVE",
"77 491 CURVE",
"87.667 491 OFFCURVE",
"87 485.667 OFFCURVE",
"87 479 CURVE",
"85.412 452.012 OFFCURVE",
"76.592 285.059 OFFCURVE",
"75 258 CURVE",
"61.667 251.333 OFFCURVE",
"58 239.667 OFFCURVE",
"58 229 CURVE SMOOTH",
"58 221 OFFCURVE",
"66.667 214 OFFCURVE",
"76 214 CURVE",
"76 160.667 OFFCURVE",
"77.333 116.667 OFFCURVE",
"80 70 CURVE",
"77.047 61.142 OFFCURVE",
"50 63.86 OFFCURVE",
"50 47 CURVE SMOOTH",
"50 39 OFFCURVE",
"54.667 33 OFFCURVE",
"64 29 CURVE SMOOTH",
"74 25 OFFCURVE",
"80.167 21.667 OFFCURVE",
"82.5 19 CURVE SMOOTH",
"84.833 16.333 OFFCURVE",
"86.333 13 OFFCURVE",
"87 9 CURVE",
"89 -7 OFFCURVE",
"96.667 -15 OFFCURVE",
"110 -15 CURVE SMOOTH",
"126 -15 OFFCURVE",
"130.667 -3 OFFCURVE",
"132 9 CURVE",
"160.202 3.872 OFFCURVE",
"208.975 3 OFFCURVE",
"258 3 CURVE SMOOTH",
"366.306 3 OFFCURVE",
"477 67.195 OFFCURVE",
"477 178 CURVE SMOOTH",
"477 240.813 OFFCURVE",
"455.597 269.635 OFFCURVE",
"394 303 CURVE SMOOTH",
"347.333 328.333 OFFCURVE",
"321.333 336 OFFCURVE",
"288 336 CURVE SMOOTH",
"220 336 OFFCURVE",
"166 313.667 OFFCURVE",
"130 287 CURVE",
"132.405 330.292 OFFCURVE",
"142.798 442.988 OFFCURVE",
"150 491 CURVE",
"152 500.333 OFFCURVE",
"157.333 505.333 OFFCURVE",
"166 506 CURVE",
"196.667 510 OFFCURVE",
"233.333 513 OFFCURVE",
"260 513 CURVE SMOOTH",
"275.333 513 OFFCURVE",
"286.167 511.833 OFFCURVE",
"292.5 509.5 CURVE SMOOTH",
"298.833 507.167 OFFCURVE",
"306 506 OFFCURVE",
"314 506 CURVE SMOOTH",
"324 506 OFFCURVE",
"329 510.333 OFFCURVE",
"329 519 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 108.066 OFFCURVE",
"342.781 44 OFFCURVE",
"256 44 CURVE SMOOTH",
"222 44 OFFCURVE",
"195.167 45.5 OFFCURVE",
"175.5 48.5 CURVE SMOOTH",
"155.833 51.5 OFFCURVE",
"141.333 54.667 OFFCURVE",
"132 58 CURVE",
"129.333 118 OFFCURVE",
"127 176 OFFCURVE",
"127 240 CURVE",
"153.002 266.002 OFFCURVE",
"226.723 296 OFFCURVE",
"288 296 CURVE SMOOTH",
"378.8 296 OFFCURVE",
"420 248.77 OFFCURVE",
"420 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
92 73 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 934 102 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 92 22 92 38 92 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 92 69 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
46 73 92 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
112 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 102 106 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 102 121 102 137 102 153 102 169 102 185 102 201 102 217 102 233 102 249 102 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 102 25 102 41 102 57 102 73 102 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
124 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
39 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
99 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 928 107 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
15 39 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
118 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 118 119 118 135 118 151 118 167 118 183 118 199 118 215 118 231 118 247 118 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 118 23 118 39 118 55 118 71 118 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 118 102 118 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
31 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 504;
}
);
note = YatCyrillic;
unicode = 0462;
},
{
glyphname = yatCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"330 551 OFFCURVE",
"303.667 566 OFFCURVE",
"273 566 CURVE SMOOTH",
"231.667 566 OFFCURVE",
"195.667 558.667 OFFCURVE",
"161 552 CURVE",
"156.333 552 OFFCURVE",
"153.667 553.333 OFFCURVE",
"153 556 CURVE",
"155.667 584 OFFCURVE",
"158 605.667 OFFCURVE",
"158 623 CURVE SMOOTH",
"158 643 OFFCURVE",
"137.667 667 OFFCURVE",
"119 667 CURVE SMOOTH",
"115 667 OFFCURVE",
"106.333 666.667 OFFCURVE",
"105 656 CURVE SMOOTH",
"103 638 OFFCURVE",
"101.5 619.833 OFFCURVE",
"100.5 601.5 CURVE SMOOTH",
"99.5 583.167 OFFCURVE",
"98.333 564.667 OFFCURVE",
"97 546 CURVE",
"84.578 527.367 OFFCURVE",
"1 534.672 OFFCURVE",
"1 510 CURVE SMOOTH",
"1 492.701 OFFCURVE",
"9.511 461 OFFCURVE",
"29 461 CURVE SMOOTH",
"46.315 461 OFFCURVE",
"77.236 490 OFFCURVE",
"88 490 CURVE SMOOTH",
"92.667 490 OFFCURVE",
"95 488 OFFCURVE",
"95 484 CURVE SMOOTH",
"95 446.464 OFFCURVE",
"92.157 369.352 OFFCURVE",
"90.5 313 CURVE SMOOTH",
"88.5 245 OFFCURVE",
"86 170.333 OFFCURVE",
"86 109 CURVE SMOOTH",
"86 87.154 OFFCURVE",
"91.983 -11.983 OFFCURVE",
"100 -20 CURVE",
"107.333 -29.333 OFFCURVE",
"116.667 -34 OFFCURVE",
"128 -34 CURVE SMOOTH",
"139.333 -34 OFFCURVE",
"145 -29 OFFCURVE",
"145 -19 CURVE SMOOTH",
"145 -15.667 OFFCURVE",
"144.667 -10.833 OFFCURVE",
"144 -4.5 CURVE SMOOTH",
"143.333 1.833 OFFCURVE",
"143 6.667 OFFCURVE",
"143 10 CURVE SMOOTH",
"143 12 OFFCURVE",
"143.667 16.333 OFFCURVE",
"145 23 CURVE",
"195 5 LINE SMOOTH",
"215 -2.333 OFFCURVE",
"232 -6 OFFCURVE",
"246 -6 CURVE SMOOTH",
"331.333 -6 OFFCURVE",
"378 80.667 OFFCURVE",
"378 222 CURVE SMOOTH",
"378 262 OFFCURVE",
"376.333 292.667 OFFCURVE",
"371 314 CURVE SMOOTH",
"355.448 383.986 OFFCURVE",
"296.34 441 OFFCURVE",
"234 441 CURVE SMOOTH",
"171.349 441 OFFCURVE",
"188.918 393.525 OFFCURVE",
"139 365 CURVE",
"139 403 LINE SMOOTH",
"139 411.995 OFFCURVE",
"139.531 501.306 OFFCURVE",
"153 504 CURVE",
"167 506 LINE SMOOTH",
"197.667 510 OFFCURVE",
"234.333 513 OFFCURVE",
"261 513 CURVE SMOOTH",
"276.333 513 OFFCURVE",
"287.167 511.333 OFFCURVE",
"293.5 508 CURVE SMOOTH",
"299.833 504.667 OFFCURVE",
"307 503 OFFCURVE",
"315 503 CURVE SMOOTH",
"325 503 OFFCURVE",
"330 508.333 OFFCURVE",
"330 519 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"325 117.817 OFFCURVE",
"293.514 29 OFFCURVE",
"232 29 CURVE SMOOTH",
"174.667 29 OFFCURVE",
"136 91 OFFCURVE",
"136 183 CURVE SMOOTH",
"136 276.127 OFFCURVE",
"178.771 393 OFFCURVE",
"248 393 CURVE SMOOTH",
"272 393 OFFCURVE",
"290.833 377.167 OFFCURVE",
"304.5 345.5 CURVE SMOOTH",
"318.167 313.833 OFFCURVE",
"325 270.667 OFFCURVE",
"325 216 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
98 932 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 933 90 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 90 106 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 90 25 90 41 90 57 90 73 90 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 98 22 98 38 98 54 98 70 98 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 98 101 98 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
53 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
87 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 931 93 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
15 31 76 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
101 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 101 119 101 135 101 151 101 167 101 183 101 199 101 215 101 231 101 247 101 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 103 101 119 101 135 101 151 101 167 101 183 101 199 101 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 101 230 101 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
41 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 403;
}
);
note = yatCyrillic;
unicode = 0463;
},
{
glyphname = YusCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"668.333 677 OFFCURVE",
"661 675.667 OFFCURVE",
"655 673 CURVE",
"396.333 673 OFFCURVE",
"221.333 664 OFFCURVE",
"108 652 CURVE",
"102.667 655.333 OFFCURVE",
"96.667 657 OFFCURVE",
"90 657 CURVE SMOOTH",
"56.667 657 OFFCURVE",
"39 639.667 OFFCURVE",
"39 625 CURVE SMOOTH",
"39 622.333 OFFCURVE",
"40 619.5 OFFCURVE",
"42 616.5 CURVE SMOOTH",
"44 613.5 OFFCURVE",
"48.333 610 OFFCURVE",
"55 606 CURVE SMOOTH",
"125.023 565.602 OFFCURVE",
"217.887 455.851 OFFCURVE",
"277 366 CURVE",
"198.593 333.33 OFFCURVE",
"86.275 236.518 OFFCURVE",
"40 105 CURVE SMOOTH",
"29.333 73 OFFCURVE",
"17 27 OFFCURVE",
"17 3 CURVE SMOOTH",
"17 -7.667 OFFCURVE",
"18.667 -21 OFFCURVE",
"44 -21 CURVE SMOOTH",
"95.402 -21 OFFCURVE",
"76.546 10.004 OFFCURVE",
"88 52 CURVE",
"94 81.333 OFFCURVE",
"102.333 106.333 OFFCURVE",
"113 127 CURVE SMOOTH",
"168.754 240.831 OFFCURVE",
"262.279 322.662 OFFCURVE",
"332 329 CURVE",
"332 312.72 OFFCURVE",
"330.96 274.818 OFFCURVE",
"330.5 250 CURVE SMOOTH",
"329.833 214 OFFCURVE",
"329 162.333 OFFCURVE",
"329 81 CURVE SMOOTH",
"329 17.253 OFFCURVE",
"334.505 -8 OFFCURVE",
"379 -8 CURVE SMOOTH",
"393.667 -8 OFFCURVE",
"401 -0.333 OFFCURVE",
"401 15 CURVE",
"401 15 OFFCURVE",
"400.333 18.333 OFFCURVE",
"399 25 CURVE",
"384.333 67.667 OFFCURVE",
"382 176 OFFCURVE",
"382 328 CURVE",
"424.667 321.333 OFFCURVE",
"488.167 285.833 OFFCURVE",
"543.5 230.5 CURVE SMOOTH",
"598.833 175.167 OFFCURVE",
"646.667 100 OFFCURVE",
"660 16 CURVE",
"662.667 -6.667 OFFCURVE",
"676 -15 OFFCURVE",
"692 -15 CURVE SMOOTH",
"710.667 -15 OFFCURVE",
"732 1 OFFCURVE",
"732 21 CURVE SMOOTH",
"732 28.333 OFFCURVE",
"728.667 36.833 OFFCURVE",
"722 46.5 CURVE SMOOTH",
"715.333 56.167 OFFCURVE",
"710.333 69.333 OFFCURVE",
"707 86 CURVE SMOOTH",
"700.333 118 OFFCURVE",
"667 182 OFFCURVE",
"611 242 CURVE SMOOTH",
"559 298 OFFCURVE",
"495.333 343.333 OFFCURVE",
"446 366 CURVE",
"504.664 459.428 OFFCURVE",
"619.705 591.882 OFFCURVE",
"665 610 CURVE",
"673 606.667 OFFCURVE",
"680.333 605 OFFCURVE",
"687 605 CURVE SMOOTH",
"700.333 605 OFFCURVE",
"706 618.667 OFFCURVE",
"706 628 CURVE SMOOTH",
"706 650.667 OFFCURVE",
"703.667 677 OFFCURVE",
"677 677 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"389 385.667 OFFCURVE",
"377.333 387 OFFCURVE",
"364 387 CURVE SMOOTH",
"347.333 387 OFFCURVE",
"334 385.667 OFFCURVE",
"324 383 CURVE",
"269.333 477.667 OFFCURVE",
"214.667 538.333 OFFCURVE",
"152 597 CURVE",
"165.253 601.97 OFFCURVE",
"225.646 606.927 OFFCURVE",
"283 610 CURVE SMOOTH",
"357.667 614 OFFCURVE",
"460.667 617 OFFCURVE",
"586 617 CURVE",
"526 567.667 OFFCURVE",
"455 480.333 OFFCURVE",
"399 383 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
33 933 45 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 33 22 33 38 33 54 33 70 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 33 101 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
94 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
99 62 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 741;
}
);
note = YusCyrillic;
unicode = 046A;
},
{
glyphname = yusCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"455 443 OFFCURVE",
"449.667 442 OFFCURVE",
"445 440 CURVE",
"351.667 440 OFFCURVE",
"279.5 437.667 OFFCURVE",
"221.5 435 CURVE SMOOTH",
"163.5 432.333 OFFCURVE",
"120.667 428 OFFCURVE",
"86 424 CURVE",
"80.667 428 OFFCURVE",
"69.333 432 OFFCURVE",
"60 432 CURVE SMOOTH",
"35.333 432 OFFCURVE",
"23 424 OFFCURVE",
"23 408 CURVE SMOOTH",
"23 406.667 OFFCURVE",
"24 404.5 OFFCURVE",
"26 401.5 CURVE SMOOTH",
"28 398.5 OFFCURVE",
"32.667 394.667 OFFCURVE",
"40 390 CURVE",
"85.333 363.333 OFFCURVE",
"139.333 304.333 OFFCURVE",
"186 239 CURVE",
"132.741 213.937 OFFCURVE",
"59.988 150.66 OFFCURVE",
"28 67 CURVE SMOOTH",
"20 45.667 OFFCURVE",
"12 16.333 OFFCURVE",
"12 -1 CURVE SMOOTH",
"12 -10.333 OFFCURVE",
"12.333 -21 OFFCURVE",
"35 -21 CURVE SMOOTH",
"65.667 -21 OFFCURVE",
"65.667 -1.667 OFFCURVE",
"67 17 CURVE",
"67 38.333 OFFCURVE",
"75.667 59.333 OFFCURVE",
"85 78 CURVE SMOOTH",
"119.731 147.462 OFFCURVE",
"179.745 198.517 OFFCURVE",
"224 208 CURVE",
"224 197.531 OFFCURVE",
"222 78.818 OFFCURVE",
"222 50 CURVE SMOOTH",
"222 2 OFFCURVE",
"229.333 -12 OFFCURVE",
"260 -12 CURVE SMOOTH",
"272.667 -12 OFFCURVE",
"279 -5.667 OFFCURVE",
"279 7 CURVE SMOOTH",
"279 12.333 OFFCURVE",
"278.167 17.667 OFFCURVE",
"276.5 23 CURVE SMOOTH",
"274.833 28.333 OFFCURVE",
"273.333 33.667 OFFCURVE",
"272 39 CURVE",
"266.667 73.667 OFFCURVE",
"266 132.667 OFFCURVE",
"266 206 CURVE",
"332.245 190.944 OFFCURVE",
"430.226 100.569 OFFCURVE",
"445 7 CURVE SMOOTH",
"447.667 -9 OFFCURVE",
"459 -17 OFFCURVE",
"471 -17 CURVE SMOOTH",
"485.667 -17 OFFCURVE",
"502 -3.667 OFFCURVE",
"502 11 CURVE SMOOTH",
"502 13 OFFCURVE",
"501.167 15.333 OFFCURVE",
"499.5 18 CURVE SMOOTH",
"497.833 20.667 OFFCURVE",
"496.333 23.667 OFFCURVE",
"495 27 CURVE",
"470.189 76.622 OFFCURVE",
"474.082 101.567 OFFCURVE",
"420 158 CURVE SMOOTH",
"385.333 192.667 OFFCURVE",
"345.333 223.333 OFFCURVE",
"312 238 CURVE",
"348.629 296.175 OFFCURVE",
"423.735 375.867 OFFCURVE",
"452 390 CURVE",
"456 388.667 OFFCURVE",
"461.333 388 OFFCURVE",
"468 388 CURVE SMOOTH",
"480 388 OFFCURVE",
"485 399.333 OFFCURVE",
"485 406 CURVE SMOOTH",
"485 423.333 OFFCURVE",
"483.667 443 OFFCURVE",
"461 443 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239 253 LINE SMOOTH",
"231.667 253 OFFCURVE",
"226.667 252.333 OFFCURVE",
"224 251 CURVE",
"188 313.667 OFFCURVE",
"157.333 349 OFFCURVE",
"116 385 CURVE",
"129.333 388.333 OFFCURVE",
"159.333 391 OFFCURVE",
"206 393 CURVE SMOOTH",
"252.667 395 OFFCURVE",
"313.333 396 OFFCURVE",
"388 396 CURVE",
"349.333 361.333 OFFCURVE",
"308.333 311 OFFCURVE",
"271 251 CURVE",
"264.333 252.333 OFFCURVE",
"257.667 253 OFFCURVE",
"251 253 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
46 59 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 46 22 46 38 46 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 46 69 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
100 59 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
97 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
100 62 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 507;
}
);
note = yusCyrillic;
unicode = 046B;
},
{
glyphname = FitaCyrillic;
layers = (
{
components = (
{
name = theta;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = FitaCyrillic;
unicode = 0472;
},
{
glyphname = fitaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"352 190.667 OFFCURVE",
"348.667 198.333 OFFCURVE",
"342 205 CURVE",
"340 304.333 OFFCURVE",
"305.667 375 OFFCURVE",
"239 417 CURVE SMOOTH",
"216.333 431.667 OFFCURVE",
"198.333 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"106.387 439 OFFCURVE",
"42.731 334.392 OFFCURVE",
"28 219 CURVE",
"28 207.888 OFFCURVE",
"7 211.888 OFFCURVE",
"7 202 CURVE SMOOTH",
"7 186.637 OFFCURVE",
"9.79 154.605 OFFCURVE",
"25 147 CURVE",
"31.667 33.667 OFFCURVE",
"87 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"267.889 -30 OFFCURVE",
"323.757 47.297 OFFCURVE",
"339 154 CURVE",
"344.333 154.667 OFFCURVE",
"347.833 156.833 OFFCURVE",
"349.5 160.5 CURVE SMOOTH",
"351.167 164.167 OFFCURVE",
"352 171.333 OFFCURVE",
"352 182 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109.272 9 OFFCURVE",
"85.55 84.402 OFFCURVE",
"80 151 CURVE",
"80 173.667 OFFCURVE",
"113.667 175 OFFCURVE",
"151 175 CURVE SMOOTH",
"209 175 OFFCURVE",
"252 174 OFFCURVE",
"280 172 CURVE",
"290.667 170.667 OFFCURVE",
"292 167.667 OFFCURVE",
"292 157 CURVE",
"282.667 65 OFFCURVE",
"239 9 OFFCURVE",
"179 9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"246.667 384 OFFCURVE",
"285.333 340.667 OFFCURVE",
"292 234 CURVE",
"292 226.667 OFFCURVE",
"288.667 223 OFFCURVE",
"282 223 CURVE SMOOTH",
"218 223 OFFCURVE",
"155.333 222.333 OFFCURVE",
"90 217 CURVE",
"85.333 217 OFFCURVE",
"83 219.333 OFFCURVE",
"83 224 CURVE",
"97.667 324 OFFCURVE",
"144 384 OFFCURVE",
"200 384 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 934 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 932 58 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 58 25 58 41 58 57 58 73 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 43 22 43 38 43 54 43 70 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 43 101 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
32 928 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 931 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 931 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = fitaCyrillic;
unicode = 0473;
},
{
glyphname = IzhitsaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"589 573.667 OFFCURVE",
"579 584 OFFCURVE",
"559 584 CURVE SMOOTH",
"554.333 584 OFFCURVE",
"548.667 582.833 OFFCURVE",
"542 580.5 CURVE SMOOTH",
"535.333 578.167 OFFCURVE",
"529.667 576.333 OFFCURVE",
"525 575 CURVE",
"496.176 568.824 OFFCURVE",
"473.91 568.455 OFFCURVE",
"442 566 CURVE",
"375.439 557.318 OFFCURVE",
"382.195 466.245 OFFCURVE",
"366 363 CURVE SMOOTH",
"351.333 272.333 OFFCURVE",
"327.5 195.667 OFFCURVE",
"301.5 141 CURVE SMOOTH",
"280.038 95.875 OFFCURVE",
"251.065 55 OFFCURVE",
"229 55 CURVE SMOOTH",
"205.667 55 OFFCURVE",
"176.667 137.333 OFFCURVE",
"142 302 CURVE SMOOTH",
"120 404.667 OFFCURVE",
"109 473.667 OFFCURVE",
"109 509 CURVE SMOOTH",
"109 532.333 OFFCURVE",
"109.833 555 OFFCURVE",
"111.5 577 CURVE SMOOTH",
"113.167 599 OFFCURVE",
"114 615.333 OFFCURVE",
"114 626 CURVE SMOOTH",
"114 648.667 OFFCURVE",
"91.667 670 OFFCURVE",
"69 670 CURVE SMOOTH",
"52.47 670 OFFCURVE",
"20 652.643 OFFCURVE",
"20 637 CURVE SMOOTH",
"20 633.667 OFFCURVE",
"21.5 631 OFFCURVE",
"24.5 629 CURVE SMOOTH",
"27.5 627 OFFCURVE",
"29.667 623.667 OFFCURVE",
"31 619 CURVE",
"43 585.667 OFFCURVE",
"47.333 561.333 OFFCURVE",
"50 540 CURVE SMOOTH",
"61.333 459.333 OFFCURVE",
"71 395 OFFCURVE",
"79 347 CURVE SMOOTH",
"87 299 OFFCURVE",
"92.667 266.667 OFFCURVE",
"96 250 CURVE SMOOTH",
"118.667 131.333 OFFCURVE",
"138 66 OFFCURVE",
"162 30 CURVE SMOOTH",
"186 -6 OFFCURVE",
"215.333 -12 OFFCURVE",
"258 -12 CURVE SMOOTH",
"288.667 -12 OFFCURVE",
"324.667 50.667 OFFCURVE",
"366 176 CURVE SMOOTH",
"386 237.333 OFFCURVE",
"397.833 290.5 OFFCURVE",
"406.5 340.5 CURVE SMOOTH",
"413.399 380.304 OFFCURVE",
"421.814 447.699 OFFCURVE",
"427 484 CURVE SMOOTH",
"431 513.333 OFFCURVE",
"447.333 518 OFFCURVE",
"470 518 CURVE SMOOTH",
"543.268 518 OFFCURVE",
"589 512.093 OFFCURVE",
"589 553 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 934 29 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 40 22 40 38 40 54 40 70 40 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 40 101 40 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
62 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 44 119 44 135 44 151 44 167 44 183 44 199 44 215 44 231 44 247 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 44 23 44 39 44 55 44 71 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 44 102 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 594;
}
);
note = IzhitsaCyrillic;
unicode = 0474;
},
{
glyphname = izhitsaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"427 380.667 OFFCURVE",
"422.667 387 OFFCURVE",
"412 387 CURVE SMOOTH",
"402.709 387 OFFCURVE",
"343.662 356.547 OFFCURVE",
"308 354 CURVE SMOOTH",
"280 351.333 OFFCURVE",
"263 338 OFFCURVE",
"259 306 CURVE SMOOTH",
"249.667 223.333 OFFCURVE",
"237 160.833 OFFCURVE",
"221 118.5 CURVE SMOOTH",
"205 76.167 OFFCURVE",
"190 55 OFFCURVE",
"176 55 CURVE SMOOTH",
"168 55 OFFCURVE",
"158.667 66.333 OFFCURVE",
"148 89 CURVE SMOOTH",
"108.976 169.649 OFFCURVE",
"72 297.636 OFFCURVE",
"72 376 CURVE SMOOTH",
"72 390 OFFCURVE",
"73.333 401.333 OFFCURVE",
"76 410 CURVE",
"58.667 423.333 OFFCURVE",
"46.667 430 OFFCURVE",
"40 430 CURVE SMOOTH",
"29.333 430 OFFCURVE",
"15 415.667 OFFCURVE",
"15 405 CURVE SMOOTH",
"13.667 318.333 OFFCURVE",
"36.333 252.667 OFFCURVE",
"55 190 CURVE SMOOTH",
"74.333 127.333 OFFCURVE",
"94.667 78.833 OFFCURVE",
"116 44.5 CURVE SMOOTH",
"137.333 10.167 OFFCURVE",
"161 -7 OFFCURVE",
"187 -7 CURVE SMOOTH",
"208.333 -7 OFFCURVE",
"229.833 17.833 OFFCURVE",
"251.5 67.5 CURVE SMOOTH",
"273.167 117.167 OFFCURVE",
"292.667 188.667 OFFCURVE",
"310 282 CURVE SMOOTH",
"312.667 296.667 OFFCURVE",
"318 308.667 OFFCURVE",
"334 310 CURVE SMOOTH",
"373.222 313.017 OFFCURVE",
"427 319.639 OFFCURVE",
"427 362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 934 17 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 24 118 24 134 24 150 24 166 24 182 24 198 24 214 24 230 24 246 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 24 22 24 38 24 54 24 70 24 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 24 101 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
31 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 31 23 31 39 31 55 31 71 31 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 31 102 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 432;
}
);
note = izhitsaCyrillic;
unicode = 0475;
},
{
glyphname = SemisoftSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"449 558 OFFCURVE",
"424 573 OFFCURVE",
"392 573 CURVE SMOOTH",
"365.894 573 OFFCURVE",
"188.785 554 OFFCURVE",
"169 554 CURVE SMOOTH",
"164.333 554 OFFCURVE",
"162 556.333 OFFCURVE",
"162 561 CURVE SMOOTH",
"162 576.232 OFFCURVE",
"183 622.374 OFFCURVE",
"183 640 CURVE SMOOTH",
"183 660 OFFCURVE",
"171.333 673 OFFCURVE",
"150 673 CURVE SMOOTH",
"122 673 OFFCURVE",
"109.667 663.667 OFFCURVE",
"107 645 CURVE",
"101.667 615.667 OFFCURVE",
"98 584.667 OFFCURVE",
"94 550 CURVE",
"94 525.916 OFFCURVE",
"0 534.084 OFFCURVE",
"0 510 CURVE SMOOTH",
"0 494 OFFCURVE",
"8 478 OFFCURVE",
"28 478 CURVE SMOOTH",
"44.667 478 OFFCURVE",
"61 482.333 OFFCURVE",
"77 491 CURVE",
"87.667 491 OFFCURVE",
"87 485.667 OFFCURVE",
"87 479 CURVE",
"85.412 452.012 OFFCURVE",
"76.592 285.059 OFFCURVE",
"75 258 CURVE",
"61.667 251.333 OFFCURVE",
"58 239.667 OFFCURVE",
"58 229 CURVE SMOOTH",
"58 221 OFFCURVE",
"66.667 214 OFFCURVE",
"76 214 CURVE",
"76 160.667 OFFCURVE",
"77.333 116.667 OFFCURVE",
"80 70 CURVE",
"77.047 61.142 OFFCURVE",
"50 63.86 OFFCURVE",
"50 47 CURVE SMOOTH",
"50 39 OFFCURVE",
"54.667 33 OFFCURVE",
"64 29 CURVE SMOOTH",
"74 25 OFFCURVE",
"80.167 21.667 OFFCURVE",
"82.5 19 CURVE SMOOTH",
"84.833 16.333 OFFCURVE",
"86.333 13 OFFCURVE",
"87 9 CURVE",
"89 -7 OFFCURVE",
"96.667 -15 OFFCURVE",
"110 -15 CURVE SMOOTH",
"126 -15 OFFCURVE",
"130.667 -3 OFFCURVE",
"132 9 CURVE",
"160.202 3.872 OFFCURVE",
"208.975 3 OFFCURVE",
"258 3 CURVE SMOOTH",
"366.306 3 OFFCURVE",
"477 67.195 OFFCURVE",
"477 178 CURVE SMOOTH",
"477 240.813 OFFCURVE",
"455.597 269.635 OFFCURVE",
"394 303 CURVE SMOOTH",
"347.333 328.333 OFFCURVE",
"321.333 336 OFFCURVE",
"288 336 CURVE SMOOTH",
"220 336 OFFCURVE",
"166 313.667 OFFCURVE",
"130 287 CURVE",
"132.405 330.292 OFFCURVE",
"142.798 442.988 OFFCURVE",
"150 491 CURVE",
"152 500.333 OFFCURVE",
"157.333 505.333 OFFCURVE",
"166 506 CURVE SMOOTH",
"193.298 508.275 OFFCURVE",
"341.408 520 OFFCURVE",
"380 520 CURVE SMOOTH",
"395.333 520 OFFCURVE",
"406.167 518.833 OFFCURVE",
"412.5 516.5 CURVE SMOOTH",
"418.833 514.167 OFFCURVE",
"426 513 OFFCURVE",
"434 513 CURVE SMOOTH",
"444 513 OFFCURVE",
"449 517.333 OFFCURVE",
"449 526 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 108.066 OFFCURVE",
"342.781 44 OFFCURVE",
"256 44 CURVE SMOOTH",
"222 44 OFFCURVE",
"195.167 45.5 OFFCURVE",
"175.5 48.5 CURVE SMOOTH",
"155.833 51.5 OFFCURVE",
"141.333 54.667 OFFCURVE",
"132 58 CURVE",
"129.333 118 OFFCURVE",
"127 176 OFFCURVE",
"127 240 CURVE",
"153.002 266.002 OFFCURVE",
"226.723 296 OFFCURVE",
"288 296 CURVE SMOOTH",
"378.8 296 OFFCURVE",
"420 248.77 OFFCURVE",
"420 184 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
94 75 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 934 104 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 94 22 94 38 94 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 94 69 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
48 75 94 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
114 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 104 106 104 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 104 121 104 137 104 153 104 169 104 185 104 201 104 217 104 233 104 249 104 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 104 25 104 41 104 57 104 73 104 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
117 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
126 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
101 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 928 109 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 41 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
120 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 120 119 120 135 120 151 120 167 120 183 120 199 120 215 120 231 120 247 120 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 120 23 120 39 120 55 120 71 120 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 120 102 120 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
33 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 504;
}
);
note = SemisoftSignCyrillic;
unicode = 048C;
},
{
glyphname = semisoftSignCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"351 366 OFFCURVE",
"317.667 380 OFFCURVE",
"291 380 CURVE SMOOTH",
"235 380 OFFCURVE",
"180 380 OFFCURVE",
"124 376 CURVE",
"119.333 376 OFFCURVE",
"117 377.667 OFFCURVE",
"117 381 CURVE SMOOTH",
"117 387 OFFCURVE",
"118.667 392.833 OFFCURVE",
"122 398.5 CURVE SMOOTH",
"125.333 404.167 OFFCURVE",
"127 410 OFFCURVE",
"127 416 CURVE SMOOTH",
"127 432 OFFCURVE",
"114.667 435 OFFCURVE",
"96 435 CURVE SMOOTH",
"56.201 435 OFFCURVE",
"75.451 375.1 OFFCURVE",
"48 369 CURVE SMOOTH",
"34 365.667 OFFCURVE",
"23.833 363.333 OFFCURVE",
"17.5 362 CURVE SMOOTH",
"11.167 360.667 OFFCURVE",
"8 357.333 OFFCURVE",
"8 352 CURVE SMOOTH",
"8 332.644 OFFCURVE",
"12.839 301 OFFCURVE",
"33 301 CURVE SMOOTH",
"35 301 OFFCURVE",
"37.167 301.333 OFFCURVE",
"39.5 302 CURVE SMOOTH",
"41.833 302.667 OFFCURVE",
"43.667 303 OFFCURVE",
"45 303 CURVE",
"45 303 OFFCURVE",
"46.667 301 OFFCURVE",
"50 297 CURVE",
"45 227 LINE",
"45 222.333 OFFCURVE",
"43 218.333 OFFCURVE",
"39 215 CURVE SMOOTH",
"35 211.667 OFFCURVE",
"33 207 OFFCURVE",
"33 201 CURVE SMOOTH",
"33 195.667 OFFCURVE",
"35.333 191.667 OFFCURVE",
"40 189 CURVE SMOOTH",
"44.667 186.333 OFFCURVE",
"47 182 OFFCURVE",
"47 176 CURVE",
"45.667 164 OFFCURVE",
"45 152.5 OFFCURVE",
"45 141.5 CURVE SMOOTH",
"45 130.5 OFFCURVE",
"45 119.667 OFFCURVE",
"45 109 CURVE SMOOTH",
"45 64 LINE",
"34.333 62.667 OFFCURVE",
"26 60.333 OFFCURVE",
"26 47 CURVE SMOOTH",
"26 39 OFFCURVE",
"32 32.667 OFFCURVE",
"44 28 CURVE",
"54.339 24.554 OFFCURVE",
"51.382 -15 OFFCURVE",
"72 -15 CURVE SMOOTH",
"90.681 -15 OFFCURVE",
"94.696 7 OFFCURVE",
"99 7 CURVE",
"129.667 0.333 OFFCURVE",
"168 -3 OFFCURVE",
"188 -3 CURVE SMOOTH",
"262.594 -3 OFFCURVE",
"355 39.782 OFFCURVE",
"355 115 CURVE SMOOTH",
"355 152.333 OFFCURVE",
"342.667 166 OFFCURVE",
"300 190 CURVE SMOOTH",
"253.333 216.667 OFFCURVE",
"212.667 224 OFFCURVE",
"154 224 CURVE SMOOTH",
"140 224 OFFCURVE",
"129.167 223.833 OFFCURVE",
"121.5 223.5 CURVE SMOOTH",
"113.833 223.167 OFFCURVE",
"107.667 223 OFFCURVE",
"103 223 CURVE SMOOTH",
"97.667 223 OFFCURVE",
"95 225.333 OFFCURVE",
"95 230 CURVE SMOOTH",
"95 260.667 OFFCURVE",
"97.333 290.667 OFFCURVE",
"104 320 CURVE",
"105.333 324 OFFCURVE",
"110.833 326.833 OFFCURVE",
"120.5 328.5 CURVE SMOOTH",
"130.167 330.167 OFFCURVE",
"146.333 331 OFFCURVE",
"169 331 CURVE SMOOTH",
"207.667 331 OFFCURVE",
"238.667 330.333 OFFCURVE",
"262 329 CURVE SMOOTH",
"285.333 327.667 OFFCURVE",
"301.667 325 OFFCURVE",
"311 321 CURVE",
"313.667 319.667 OFFCURVE",
"317.833 317.333 OFFCURVE",
"323.5 314 CURVE SMOOTH",
"329.167 310.667 OFFCURVE",
"333 309 OFFCURVE",
"335 309 CURVE SMOOTH",
"349.667 309 OFFCURVE",
"351 315.333 OFFCURVE",
"351 338 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 72.839 OFFCURVE",
"243.225 33 OFFCURVE",
"187 33 CURVE SMOOTH",
"155 33 OFFCURVE",
"113 39.333 OFFCURVE",
"93 50 CURVE",
"91 74.667 OFFCURVE",
"90 99 OFFCURVE",
"90 123 CURVE SMOOTH",
"90 137.149 OFFCURVE",
"90.566 186 OFFCURVE",
"99 186 CURVE",
"109.667 187.333 OFFCURVE",
"126.667 188 OFFCURVE",
"148 188 CURVE SMOOTH",
"247.553 188 OFFCURVE",
"307 162.293 OFFCURVE",
"307 120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
105 934 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 932 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 105 118 105 134 105 150 105 166 105 182 105 198 105 214 105 230 105 246 105 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 105 22 105 38 105 54 105 70 105 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 105 101 105 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
105 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
105 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
53 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 92 106 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 92 25 92 41 92 57 92 73 92 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
105 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
107 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
116 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
39 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
78 9 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 929 97 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
89 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
97 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
110 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 110 119 110 135 110 151 110 167 110 183 110 199 110 215 110 231 110 247 110 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 110 23 110 39 110 55 110 71 110 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 110 102 110 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 382;
}
);
note = semisoftSignCyrillic;
unicode = 048D;
},
{
glyphname = GheUpturnCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"144 595.333 OFFCURVE",
"185.333 608.333 OFFCURVE",
"252 621 CURVE SMOOTH",
"280 626.333 OFFCURVE",
"305 629.833 OFFCURVE",
"327 631.5 CURVE SMOOTH",
"349 633.167 OFFCURVE",
"367.667 634.667 OFFCURVE",
"383 636 CURVE",
"387 626.667 OFFCURVE",
"396 622 OFFCURVE",
"410 622 CURVE SMOOTH",
"436.732 622 OFFCURVE",
"442 686.263 OFFCURVE",
"442 713 CURVE SMOOTH",
"442 746.333 OFFCURVE",
"438.833 769 OFFCURVE",
"432.5 781 CURVE SMOOTH",
"426.167 793 OFFCURVE",
"414.667 799 OFFCURVE",
"398 799 CURVE SMOOTH",
"384.667 799 OFFCURVE",
"374.333 794.667 OFFCURVE",
"367 786 CURVE",
"373.667 772.667 OFFCURVE",
"379 747 OFFCURVE",
"379 719 CURVE SMOOTH",
"379 696.333 OFFCURVE",
"373.667 691.667 OFFCURVE",
"335 685 CURVE",
"320.763 683.418 OFFCURVE",
"248.317 667.469 OFFCURVE",
"209.5 659 CURVE SMOOTH",
"172.308 650.885 OFFCURVE",
"102.361 635.766 OFFCURVE",
"90 634 CURVE SMOOTH",
"68 630.667 OFFCURVE",
"57 621.667 OFFCURVE",
"57 607 CURVE SMOOTH",
"57 603.667 OFFCURVE",
"57.833 597.833 OFFCURVE",
"59.5 589.5 CURVE SMOOTH",
"61.167 581.167 OFFCURVE",
"62 574.333 OFFCURVE",
"62 569 CURVE",
"55.333 477 OFFCURVE",
"51 383 OFFCURVE",
"51 287 CURVE SMOOTH",
"51 207 OFFCURVE",
"54.333 134 OFFCURVE",
"61 62 CURVE SMOOTH",
"65.667 15.333 OFFCURVE",
"83 -8 OFFCURVE",
"113 -8 CURVE SMOOTH",
"120.333 -8 OFFCURVE",
"130.333 -3.667 OFFCURVE",
"143 5 CURVE",
"129.667 24.333 OFFCURVE",
"121.167 57 OFFCURVE",
"117.5 103 CURVE SMOOTH",
"113.833 149 OFFCURVE",
"112 209.333 OFFCURVE",
"112 284 CURVE SMOOTH",
"112 384.386 OFFCURVE",
"122.956 526.52 OFFCURVE",
"128 582 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 934 33 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 33 106 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 33 25 33 41 33 57 33 73 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
38 46 23 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 447;
}
);
note = GheUpturnCyrillic;
unicode = 0490;
},
{
glyphname = gheUpturnCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"242.333 522.667 OFFCURVE",
"245 512.5 OFFCURVE",
"247 499.5 CURVE SMOOTH",
"249 486.5 OFFCURVE",
"250.333 468 OFFCURVE",
"251 444 CURVE SMOOTH",
"251 436.667 OFFCURVE",
"247.333 433 OFFCURVE",
"240 433 CURVE SMOOTH",
"164.982 433 OFFCURVE",
"79.95 429.504 OFFCURVE",
"56.5 425.5 CURVE SMOOTH",
"38.829 422.483 OFFCURVE",
"28 418.916 OFFCURVE",
"28 412 CURVE SMOOTH",
"28 402.667 OFFCURVE",
"28.333 385.333 OFFCURVE",
"35 372 CURVE",
"32.333 320 OFFCURVE",
"32 265 OFFCURVE",
"32 209 CURVE SMOOTH",
"32 153.667 OFFCURVE",
"33 97.667 OFFCURVE",
"35 41 CURVE SMOOTH",
"36.333 9.667 OFFCURVE",
"52.667 -6 OFFCURVE",
"84 -6 CURVE SMOOTH",
"88 -6 OFFCURVE",
"91.667 -3.333 OFFCURVE",
"95 2 CURVE",
"84.333 55.333 OFFCURVE",
"84 126 OFFCURVE",
"84 186 CURVE SMOOTH",
"84 253.562 OFFCURVE",
"87.627 320.763 OFFCURVE",
"94 359 CURVE",
"96.629 385.288 OFFCURVE",
"150.39 385 OFFCURVE",
"194 385 CURVE SMOOTH",
"209.333 385 OFFCURVE",
"221.667 384 OFFCURVE",
"231 382 CURVE SMOOTH",
"240.333 380 OFFCURVE",
"248.667 378.333 OFFCURVE",
"256 377 CURVE",
"261.333 369.667 OFFCURVE",
"270 366 OFFCURVE",
"282 366 CURVE SMOOTH",
"307.234 366 OFFCURVE",
"314 416.676 OFFCURVE",
"314 457 CURVE SMOOTH",
"314 490.333 OFFCURVE",
"310.833 513 OFFCURVE",
"304.5 525 CURVE SMOOTH",
"298.167 537 OFFCURVE",
"286.667 543 OFFCURVE",
"270 543 CURVE SMOOTH",
"256.667 543 OFFCURVE",
"246.333 538.667 OFFCURVE",
"239 530 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 47 106 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 47 25 47 41 47 57 47 73 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
5 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
30 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 30 22 30 38 30 54 30 70 30 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 30 101 30 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
45 931 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 10 23 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 319;
}
);
note = gheUpturnCyrillic;
unicode = 0491;
},
{
glyphname = GheStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"324 406.667 OFFCURVE",
"290 414 OFFCURVE",
"262 414 CURVE SMOOTH",
"235.333 414 OFFCURVE",
"207.333 413.333 OFFCURVE",
"174 412 CURVE",
"171.333 412 OFFCURVE",
"165 418.333 OFFCURVE",
"165 421 CURVE",
"167.667 489 OFFCURVE",
"174 546 OFFCURVE",
"178 582 CURVE",
"194 595.333 OFFCURVE",
"235.333 608.333 OFFCURVE",
"302 621 CURVE SMOOTH",
"371.384 634.575 OFFCURVE",
"488 629.866 OFFCURVE",
"488 657 CURVE SMOOTH",
"488 677.92 OFFCURVE",
"450.028 689 OFFCURVE",
"428 689 CURVE SMOOTH",
"405.183 689 OFFCURVE",
"325.127 673.309 OFFCURVE",
"278 663 CURVE SMOOTH",
"240.384 654.772 OFFCURVE",
"155.188 636.17 OFFCURVE",
"140 634 CURVE SMOOTH",
"118 630.667 OFFCURVE",
"107 621.667 OFFCURVE",
"107 607 CURVE SMOOTH",
"107 603.667 OFFCURVE",
"107.833 597.833 OFFCURVE",
"109.5 589.5 CURVE SMOOTH",
"111.167 581.167 OFFCURVE",
"112 574.333 OFFCURVE",
"112 569 CURVE",
"108 519.667 OFFCURVE",
"105.667 469.667 OFFCURVE",
"103 419 CURVE",
"103 413.667 OFFCURVE",
"100.333 407 OFFCURVE",
"95 407 CURVE SMOOTH",
"83.165 407 OFFCURVE",
"4 405.961 OFFCURVE",
"4 393 CURVE SMOOTH",
"4 370.333 OFFCURVE",
"13 345 OFFCURVE",
"29 345 CURVE SMOOTH",
"38.333 345 OFFCURVE",
"47.667 346.5 OFFCURVE",
"57 349.5 CURVE SMOOTH",
"66.333 352.5 OFFCURVE",
"76.333 355.667 OFFCURVE",
"87 359 CURVE",
"87.667 359.667 OFFCURVE",
"89.667 360 OFFCURVE",
"93 360 CURVE SMOOTH",
"97 360 OFFCURVE",
"99.667 357.333 OFFCURVE",
"101 352 CURVE",
"101 287 LINE SMOOTH",
"101 207 OFFCURVE",
"104.333 134 OFFCURVE",
"111 62 CURVE SMOOTH",
"115.667 15.333 OFFCURVE",
"133 -8 OFFCURVE",
"163 -8 CURVE SMOOTH",
"170.333 -8 OFFCURVE",
"180.333 -3.667 OFFCURVE",
"193 5 CURVE",
"178.333 25.667 OFFCURVE",
"169.333 62 OFFCURVE",
"166 114 CURVE SMOOTH",
"162.667 166 OFFCURVE",
"161 235.333 OFFCURVE",
"161 322 CURVE SMOOTH",
"161 344.667 OFFCURVE",
"163.333 366 OFFCURVE",
"178 366 CURVE SMOOTH",
"221.83 366 OFFCURVE",
"302.454 352 OFFCURVE",
"307 352 CURVE SMOOTH",
"321.667 352 OFFCURVE",
"324 357.333 OFFCURVE",
"324 380 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 32 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 11 22 11 38 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 11 69 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
76 931 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 498;
}
);
note = GheStrokeCyrillic;
unicode = 0492;
},
{
glyphname = gheStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"349 424.667 OFFCURVE",
"328.333 433 OFFCURVE",
"287 433 CURVE SMOOTH",
"211.982 433 OFFCURVE",
"126.95 429.504 OFFCURVE",
"103.5 425.5 CURVE SMOOTH",
"85.829 422.483 OFFCURVE",
"75 418.916 OFFCURVE",
"75 412 CURVE SMOOTH",
"75 402.667 OFFCURVE",
"75.333 385.333 OFFCURVE",
"82 372 CURVE",
"80 340 OFFCURVE",
"79 307.333 OFFCURVE",
"79 274 CURVE SMOOTH",
"79 254.389 OFFCURVE",
"9 267.315 OFFCURVE",
"9 249 CURVE SMOOTH",
"9 232.085 OFFCURVE",
"14.907 201 OFFCURVE",
"35 201 CURVE SMOOTH",
"47 201 OFFCURVE",
"55.333 202 OFFCURVE",
"74 206 CURVE",
"77.333 206 OFFCURVE",
"79 203.667 OFFCURVE",
"79 199 CURVE SMOOTH",
"79 147.667 OFFCURVE",
"80 95 OFFCURVE",
"82 41 CURVE SMOOTH",
"83.333 9.667 OFFCURVE",
"99.667 -6 OFFCURVE",
"131 -6 CURVE SMOOTH",
"135 -6 OFFCURVE",
"138.667 -3.333 OFFCURVE",
"142 2 CURVE",
"128.744 68.279 OFFCURVE",
"131 96.266 OFFCURVE",
"131 186 CURVE SMOOTH",
"131 209 LINE SMOOTH",
"131 214.333 OFFCURVE",
"134.833 217.833 OFFCURVE",
"142.5 219.5 CURVE SMOOTH",
"150.167 221.167 OFFCURVE",
"163.667 222 OFFCURVE",
"183 222 CURVE SMOOTH",
"208.333 222 OFFCURVE",
"224.833 221.667 OFFCURVE",
"232.5 221 CURVE SMOOTH",
"240.167 220.333 OFFCURVE",
"246 219 OFFCURVE",
"250 217 CURVE SMOOTH",
"255.333 214.333 OFFCURVE",
"260 212.833 OFFCURVE",
"264 212.5 CURVE SMOOTH",
"268 212.167 OFFCURVE",
"270.667 212 OFFCURVE",
"272 212 CURVE SMOOTH",
"286.667 212 OFFCURVE",
"289 217.333 OFFCURVE",
"289 236 CURVE SMOOTH",
"289 272.697 OFFCURVE",
"230.232 270 OFFCURVE",
"194 270 CURVE SMOOTH",
"186 270 OFFCURVE",
"177.667 270 OFFCURVE",
"169 270 CURVE SMOOTH",
"160.333 270 OFFCURVE",
"151.333 269.333 OFFCURVE",
"142 268 CURVE",
"135.333 268 OFFCURVE",
"132 271.333 OFFCURVE",
"132 278 CURVE",
"133.333 308.667 OFFCURVE",
"137 331 OFFCURVE",
"141 359 CURVE",
"143.629 385.288 OFFCURVE",
"197.39 385 OFFCURVE",
"241 385 CURVE SMOOTH",
"269.054 385 OFFCURVE",
"317.581 373 OFFCURVE",
"332 373 CURVE SMOOTH",
"346.667 373 OFFCURVE",
"349 382 OFFCURVE",
"349 398 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
38 60 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
75 931 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 931 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 356;
}
);
note = gheStrokeCyrillic;
unicode = 0493;
},
{
glyphname = ZheDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"498 651.768 OFFCURVE",
"470.005 670 OFFCURVE",
"458 670 CURVE SMOOTH",
"440.097 670 OFFCURVE",
"406 642.219 OFFCURVE",
"406 624 CURVE SMOOTH",
"406 544 OFFCURVE",
"404.667 470 OFFCURVE",
"402 394 CURVE",
"320.667 462 OFFCURVE",
"242 531.667 OFFCURVE",
"170 609 CURVE SMOOTH",
"135.333 645 OFFCURVE",
"117 664 OFFCURVE",
"93 664 CURVE SMOOTH",
"59.667 664 OFFCURVE",
"42 649.667 OFFCURVE",
"42 635 CURVE SMOOTH",
"42 629 OFFCURVE",
"44.333 624.667 OFFCURVE",
"49 622 CURVE",
"173 528.667 OFFCURVE",
"280 439 OFFCURVE",
"396 335 CURVE",
"301.905 233.276 OFFCURVE",
"165.67 104.118 OFFCURVE",
"54 34 CURVE",
"46.667 28.667 OFFCURVE",
"38.333 24 OFFCURVE",
"29 20 CURVE SMOOTH",
"19.667 16 OFFCURVE",
"15 10.333 OFFCURVE",
"15 3 CURVE SMOOTH",
"15 -3.667 OFFCURVE",
"24.333 -15 OFFCURVE",
"43 -15 CURVE SMOOTH",
"80.782 -15 OFFCURVE",
"163.757 47.223 OFFCURVE",
"212 90.5 CURVE SMOOTH",
"257.333 131.167 OFFCURVE",
"302.667 175.167 OFFCURVE",
"344 218.5 CURVE SMOOTH",
"364.667 240.167 OFFCURVE",
"383.667 260 OFFCURVE",
"401 278 CURVE",
"401 195 LINE SMOOTH",
"401 90.854 OFFCURVE",
"402.672 -8 OFFCURVE",
"459 -8 CURVE SMOOTH",
"466.333 -8 OFFCURVE",
"476.333 -3.667 OFFCURVE",
"489 5 CURVE",
"479 19.667 OFFCURVE",
"471.5 49 OFFCURVE",
"466.5 93 CURVE SMOOTH",
"461.5 137 OFFCURVE",
"459 200 OFFCURVE",
"459 282 CURVE",
"537.667 188 OFFCURVE",
"605.167 118.833 OFFCURVE",
"661.5 74.5 CURVE SMOOTH",
"717.833 30.167 OFFCURVE",
"766.333 8 OFFCURVE",
"807 8 CURVE SMOOTH",
"811 8 OFFCURVE",
"815.667 8.833 OFFCURVE",
"821 10.5 CURVE SMOOTH",
"826.333 12.167 OFFCURVE",
"831.667 13 OFFCURVE",
"837 13 CURVE SMOOTH",
"841.667 13 OFFCURVE",
"844 9.667 OFFCURVE",
"844 3 CURVE SMOOTH",
"844 -43.667 OFFCURVE",
"814.333 -84.333 OFFCURVE",
"781 -123 CURVE",
"778.333 -125.667 OFFCURVE",
"777 -129 OFFCURVE",
"777 -133 CURVE SMOOTH",
"777 -145 OFFCURVE",
"796.333 -150 OFFCURVE",
"807 -150 CURVE SMOOTH",
"851.96 -150 OFFCURVE",
"882.899 -92.629 OFFCURVE",
"894 -51 CURVE SMOOTH",
"902 -23 OFFCURVE",
"906 3.667 OFFCURVE",
"906 37 CURVE SMOOTH",
"906 57.552 OFFCURVE",
"901.586 88 OFFCURVE",
"879 88 CURVE SMOOTH",
"858.266 88 OFFCURVE",
"834.996 54 OFFCURVE",
"804 54 CURVE SMOOTH",
"768 54 OFFCURVE",
"723 84.667 OFFCURVE",
"659 146 CURVE SMOOTH",
"614.781 187.762 OFFCURVE",
"513.795 284.756 OFFCURVE",
"476 332 CURVE",
"534.667 397.333 OFFCURVE",
"609.833 467.5 OFFCURVE",
"674.5 521.5 CURVE SMOOTH",
"725.612 564.181 OFFCURVE",
"787.575 613 OFFCURVE",
"807 613 CURVE",
"830 605 LINE",
"838.667 605 OFFCURVE",
"843.333 609.333 OFFCURVE",
"844 618 CURVE",
"844 631.856 OFFCURVE",
"828.514 672 OFFCURVE",
"809 672 CURVE SMOOTH",
"794.333 672 OFFCURVE",
"772.333 664.333 OFFCURVE",
"743 639 CURVE SMOOTH",
"696.333 599 OFFCURVE",
"649.5 559.5 OFFCURVE",
"602.5 520.5 CURVE SMOOTH",
"555.5 481.5 OFFCURVE",
"509 436.667 OFFCURVE",
"463 386 CURVE",
"464.383 420.565 OFFCURVE",
"476.057 526.509 OFFCURVE",
"481 571 CURVE SMOOTH",
"482.459 586.324 OFFCURVE",
"498 638.64 OFFCURVE",
"498 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
127 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
127 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
117 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
71 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 71 118 71 134 71 150 71 166 71 182 71 198 71 214 71 230 71 246 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 71 22 71 38 71 54 71 70 71 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 71 101 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 63 106 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 63 25 63 41 63 57 63 73 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
122 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
122 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
122 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
89 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
42 931 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 55 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
122 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
71 55 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
82 55 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
114 55 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 909;
}
);
note = ZheDescenderCyrillic;
unicode = 0496;
},
{
glyphname = zheDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"31.333 -45.333 OFFCURVE",
"44.667 -52 OFFCURVE",
"54 -52 CURVE SMOOTH",
"86.444 -52 OFFCURVE",
"162.826 30.362 OFFCURVE",
"203 75 CURVE SMOOTH",
"215 88.333 OFFCURVE",
"226.833 100.667 OFFCURVE",
"238.5 112 CURVE SMOOTH",
"250.167 123.333 OFFCURVE",
"262.667 136.667 OFFCURVE",
"276 152 CURVE",
"276 95.029 OFFCURVE",
"277.049 62.985 OFFCURVE",
"282 11 CURVE SMOOTH",
"286 -35.667 OFFCURVE",
"295.333 -50 OFFCURVE",
"322 -50 CURVE SMOOTH",
"335.333 -50 OFFCURVE",
"346 -41 OFFCURVE",
"346 -33 CURVE SMOOTH",
"346 -27 OFFCURVE",
"344 -18.5 OFFCURVE",
"340 -7.5 CURVE SMOOTH",
"336 3.5 OFFCURVE",
"333.667 12 OFFCURVE",
"333 18 CURVE",
"333 28.585 OFFCURVE",
"327 107.131 OFFCURVE",
"327 127 CURVE SMOOTH",
"327 139 OFFCURVE",
"327.667 147.667 OFFCURVE",
"329 153 CURVE SMOOTH",
"330.333 158.333 OFFCURVE",
"332 161.667 OFFCURVE",
"334 163 CURVE",
"340 158.333 OFFCURVE",
"347.5 150.667 OFFCURVE",
"356.5 140 CURVE SMOOTH",
"365.5 129.333 OFFCURVE",
"375.333 119 OFFCURVE",
"386 109 CURVE SMOOTH",
"405.929 89.071 OFFCURVE",
"464.964 28.504 OFFCURVE",
"505 -2 CURVE SMOOTH",
"537.137 -27.71 OFFCURVE",
"567 -45.827 OFFCURVE",
"567 -63 CURVE SMOOTH",
"567 -113.667 OFFCURVE",
"538.667 -154 OFFCURVE",
"504 -194 CURVE",
"501.333 -196.667 OFFCURVE",
"500 -200 OFFCURVE",
"500 -204 CURVE SMOOTH",
"500 -216 OFFCURVE",
"519.333 -221 OFFCURVE",
"530 -221 CURVE SMOOTH",
"574.96 -221 OFFCURVE",
"605.899 -163.629 OFFCURVE",
"617 -122 CURVE SMOOTH",
"625 -94 OFFCURVE",
"629 -67.333 OFFCURVE",
"629 -34 CURVE SMOOTH",
"629 19.639 OFFCURVE",
"596.16 -12.063 OFFCURVE",
"559 22 CURVE SMOOTH",
"490.333 81.333 OFFCURVE",
"439.333 126 OFFCURVE",
"406 156 CURVE SMOOTH",
"372.667 186 OFFCURVE",
"356 206 OFFCURVE",
"356 216 CURVE SMOOTH",
"356 235.669 OFFCURVE",
"440.133 296.72 OFFCURVE",
"472 321 CURVE SMOOTH",
"493.333 337 OFFCURVE",
"511.333 351 OFFCURVE",
"526 363 CURVE SMOOTH",
"540.667 375 OFFCURVE",
"555 381 OFFCURVE",
"569 381 CURVE SMOOTH",
"572.333 381 OFFCURVE",
"575.167 380.833 OFFCURVE",
"577.5 380.5 CURVE SMOOTH",
"579.833 380.167 OFFCURVE",
"582.333 380 OFFCURVE",
"585 380 CURVE SMOOTH",
"591.667 380 OFFCURVE",
"601 380 OFFCURVE",
"601 400 CURVE SMOOTH",
"601 423.961 OFFCURVE",
"583.417 453 OFFCURVE",
"558 453 CURVE SMOOTH",
"547.4 453 OFFCURVE",
"482.628 392.498 OFFCURVE",
"456 368 CURVE SMOOTH",
"418.619 333.61 OFFCURVE",
"354.532 275.659 OFFCURVE",
"333 260 CURVE",
"329.667 260 OFFCURVE",
"328 261.667 OFFCURVE",
"328 265 CURVE SMOOTH",
"328 268.333 OFFCURVE",
"328.333 276 OFFCURVE",
"329 288 CURVE SMOOTH",
"329.667 300 OFFCURVE",
"330.667 314 OFFCURVE",
"332 330 CURVE SMOOTH",
"334.667 360 OFFCURVE",
"337.333 382.167 OFFCURVE",
"340 396.5 CURVE SMOOTH",
"342.667 410.833 OFFCURVE",
"344 419 OFFCURVE",
"344 421 CURVE SMOOTH",
"344 431.667 OFFCURVE",
"326 440 OFFCURVE",
"314 440 CURVE SMOOTH",
"298 440 OFFCURVE",
"271 423.333 OFFCURVE",
"271 410 CURVE SMOOTH",
"271 400.832 OFFCURVE",
"275.475 381.673 OFFCURVE",
"277 371 CURVE SMOOTH",
"279.181 355.732 OFFCURVE",
"283 304.97 OFFCURVE",
"283 262 CURVE",
"265.612 276.904 OFFCURVE",
"181.09 349.072 OFFCURVE",
"156.5 370 CURVE SMOOTH",
"129.091 393.327 OFFCURVE",
"0 0 OFFCURVE",
"73 442 CURVE",
"54.333 442 OFFCURVE",
"41 427.333 OFFCURVE",
"41 406 CURVE SMOOTH",
"41 400.667 OFFCURVE",
"41.333 397 OFFCURVE",
"42 395 CURVE",
"67.333 377.667 OFFCURVE",
"104.667 347.667 OFFCURVE",
"154 305 CURVE SMOOTH",
"185.455 276.54 OFFCURVE",
"264 224.851 OFFCURVE",
"264 210 CURVE SMOOTH",
"264 191.611 OFFCURVE",
"190.806 123.308 OFFCURVE",
"157 93 CURVE SMOOTH",
"113.24 53.767 OFFCURVE",
"39.925 -8.038 OFFCURVE",
"14 -21 CURVE",
"12 -22.333 OFFCURVE",
"11 -24.333 OFFCURVE",
"11 -27 CURVE SMOOTH",
"11 -28.333 OFFCURVE",
"12 -30 OFFCURVE",
"14 -32 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
116 934 11 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 934 100 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 116 118 116 134 116 150 116 166 116 182 116 198 116 214 116 230 116 246 116 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 116 22 116 38 116 54 116 70 116 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 116 101 116 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
124 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
116 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
76 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
50 11 76 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 100 106 100 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 100 121 100 137 100 153 100 169 100 185 100 201 100 217 100 233 100 249 100 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 100 25 100 41 100 57 100 73 100 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
130 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
130 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
135 11 116 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
146 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
31 92 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
50 92 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
65 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 65 105 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 65 120 65 136 65 152 65 168 65 184 65 200 65 216 65 232 65 248 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 65 24 65 40 65 56 65 72 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
135 92 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 637;
}
);
note = zheDescenderCyrillic;
unicode = 0497;
},
{
glyphname = ZeDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"265.667 -16 OFFCURVE",
"279 -18.667 OFFCURVE",
"279 -32 CURVE",
"276.454 -98.194 OFFCURVE",
"255.167 -138.927 OFFCURVE",
"213 -189 CURVE",
"210.333 -191.667 OFFCURVE",
"209 -195 OFFCURVE",
"209 -199 CURVE SMOOTH",
"209 -211 OFFCURVE",
"228.333 -216 OFFCURVE",
"239 -216 CURVE SMOOTH",
"283.96 -216 OFFCURVE",
"314.899 -158.629 OFFCURVE",
"326 -117 CURVE SMOOTH",
"334 -89 OFFCURVE",
"338 -62.333 OFFCURVE",
"338 -29 CURVE SMOOTH",
"338 -18.333 OFFCURVE",
"339 -7.667 OFFCURVE",
"347 -5 CURVE",
"451.358 19.716 OFFCURVE",
"535 112.598 OFFCURVE",
"535 226 CURVE SMOOTH",
"535 322 OFFCURVE",
"477.333 375.333 OFFCURVE",
"364 394 CURVE",
"421.789 439.226 OFFCURVE",
"483 519.96 OFFCURVE",
"483 580 CURVE SMOOTH",
"483 656 OFFCURVE",
"428 697 OFFCURVE",
"352 697 CURVE SMOOTH",
"306.667 697 OFFCURVE",
"248 677.667 OFFCURVE",
"192 647 CURVE SMOOTH",
"127.923 610.384 OFFCURVE",
"49 537.502 OFFCURVE",
"49 499 CURVE SMOOTH",
"49 488.333 OFFCURVE",
"69 475 OFFCURVE",
"81 475 CURVE SMOOTH",
"84.333 475 OFFCURVE",
"93.5 479.833 OFFCURVE",
"108.5 489.5 CURVE SMOOTH",
"123.5 499.167 OFFCURVE",
"140 515.667 OFFCURVE",
"158 539 CURVE",
"157.333 542.333 OFFCURVE",
"156.833 545 OFFCURVE",
"156.5 547 CURVE SMOOTH",
"156.167 549 OFFCURVE",
"156 550.333 OFFCURVE",
"156 551 CURVE SMOOTH",
"156 591.078 OFFCURVE",
"304.998 653 OFFCURVE",
"352 653 CURVE SMOOTH",
"398.667 653 OFFCURVE",
"429 620.667 OFFCURVE",
"429 574 CURVE SMOOTH",
"429 506.002 OFFCURVE",
"334.047 409.877 OFFCURVE",
"290 391 CURVE SMOOTH",
"280 387 OFFCURVE",
"252 383 OFFCURVE",
"206 379 CURVE SMOOTH",
"140.178 372.418 OFFCURVE",
"115 352.571 OFFCURVE",
"115 324 CURVE SMOOTH",
"115 313.333 OFFCURVE",
"126.667 308 OFFCURVE",
"150 308 CURVE SMOOTH",
"177.247 308 OFFCURVE",
"303.166 355 OFFCURVE",
"319 355 CURVE SMOOTH",
"407.972 355 OFFCURVE",
"475 314.036 OFFCURVE",
"475 220 CURVE SMOOTH",
"475 105.045 OFFCURVE",
"352.122 22 OFFCURVE",
"240 22 CURVE SMOOTH",
"168 22 OFFCURVE",
"124.333 46.333 OFFCURVE",
"103 77 CURVE",
"83.004 118.991 OFFCURVE",
"68.985 138 OFFCURVE",
"55 138 CURVE SMOOTH",
"43 138 OFFCURVE",
"27 123 OFFCURVE",
"27 111 CURVE SMOOTH",
"27 91.667 OFFCURVE",
"41 70.667 OFFCURVE",
"69 48 CURVE SMOOTH",
"128.227 -0.926 OFFCURVE",
"183.863 -16 OFFCURVE",
"263 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 934 64 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
91 934 109 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 933 47 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 47 106 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 47 25 47 41 47 57 47 73 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
23 47 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 23 106 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 23 25 23 41 23 57 23 73 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 55 22 55 38 55 54 55 70 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 55 101 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
83 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
80 64 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 109 106 109 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 109 25 109 41 109 57 109 73 109 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
72 930 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 18 230 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 556;
}
);
note = ZeDescenderCyrillic;
unicode = 0498;
},
{
glyphname = zeDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"385 193 OFFCURVE",
"351 234.333 OFFCURVE",
"279 245 CURVE",
"314.2 270.143 OFFCURVE",
"357 324.82 OFFCURVE",
"357 360 CURVE SMOOTH",
"357 400.953 OFFCURVE",
"293.363 443 OFFCURVE",
"243 443 CURVE SMOOTH",
"177.849 443 OFFCURVE",
"42 363.979 OFFCURVE",
"42 321 CURVE SMOOTH",
"42 302.333 OFFCURVE",
"54.333 295 OFFCURVE",
"69 295 CURVE SMOOTH",
"87.838 295 OFFCURVE",
"129 316.614 OFFCURVE",
"129 338 CURVE SMOOTH",
"129 340.667 OFFCURVE",
"127.667 343.333 OFFCURVE",
"125 346 CURVE",
"139.873 366.822 OFFCURVE",
"207.107 397 OFFCURVE",
"256 397 CURVE SMOOTH",
"289.333 397 OFFCURVE",
"298 379.333 OFFCURVE",
"298 354 CURVE SMOOTH",
"298 303.728 OFFCURVE",
"241.044 260.013 OFFCURVE",
"202 248 CURVE",
"195.333 244.667 OFFCURVE",
"176 242.333 OFFCURVE",
"144 241 CURVE SMOOTH",
"102.152 238.797 OFFCURVE",
"78 217.097 OFFCURVE",
"78 197 CURVE SMOOTH",
"78 183.667 OFFCURVE",
"95.333 175 OFFCURVE",
"114 175 CURVE SMOOTH",
"131.833 175 OFFCURVE",
"215.833 207 OFFCURVE",
"228 207 CURVE SMOOTH",
"304.213 207 OFFCURVE",
"326 193.783 OFFCURVE",
"326 133 CURVE SMOOTH",
"326 57.421 OFFCURVE",
"261.177 1 OFFCURVE",
"174 1 CURVE SMOOTH",
"116.667 1 OFFCURVE",
"95.333 33 OFFCURVE",
"74 77 CURVE",
"68 88.333 OFFCURVE",
"58.333 94 OFFCURVE",
"45 94 CURVE SMOOTH",
"29 94 OFFCURVE",
"19 82.667 OFFCURVE",
"19 68 CURVE SMOOTH",
"19 17.078 OFFCURVE",
"111.361 -25.78 OFFCURVE",
"174 -31 CURVE",
"182.667 -31 OFFCURVE",
"187 -35.667 OFFCURVE",
"187 -45 CURVE",
"184.514 -107.156 OFFCURVE",
"162.733 -152.051 OFFCURVE",
"121 -199 CURVE",
"118.333 -201.667 OFFCURVE",
"117 -205 OFFCURVE",
"117 -209 CURVE SMOOTH",
"117 -221 OFFCURVE",
"136.333 -226 OFFCURVE",
"147 -226 CURVE SMOOTH",
"219.2 -226 OFFCURVE",
"246 -104.905 OFFCURVE",
"246 -49 CURVE SMOOTH",
"246 -34.333 OFFCURVE",
"247 -25.667 OFFCURVE",
"263 -19 CURVE",
"330.24 6.215 OFFCURVE",
"385 57.889 OFFCURVE",
"385 137 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
78 934 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 934 68 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
43 68 96 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 43 106 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 43 25 43 41 43 57 43 73 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 23 106 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 23 25 23 41 23 57 23 73 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 78 22 78 38 78 54 78 70 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 78 101 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
101 86 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
91 930 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
33 25 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 931 53 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 407;
}
);
note = zeDescenderCyrillic;
unicode = 0499;
},
{
glyphname = KaDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"495.266 77 OFFCURVE",
"471.996 43 OFFCURVE",
"441 43 CURVE SMOOTH",
"405 43 OFFCURVE",
"361 74.667 OFFCURVE",
"297 136 CURVE SMOOTH",
"252.633 177.902 OFFCURVE",
"161.679 270.981 OFFCURVE",
"131 317 CURVE",
"185.667 385 OFFCURVE",
"256.667 458.667 OFFCURVE",
"318 516 CURVE SMOOTH",
"366.259 561.111 OFFCURVE",
"425.001 613 OFFCURVE",
"444 613 CURVE",
"467 605 LINE",
"475.667 605 OFFCURVE",
"480.333 609.333 OFFCURVE",
"481 618 CURVE",
"481 631.333 OFFCURVE",
"467.667 655 OFFCURVE",
"457 671 CURVE",
"456.333 671.667 OFFCURVE",
"452.667 672 OFFCURVE",
"446 672 CURVE SMOOTH",
"431.333 672 OFFCURVE",
"409.333 664.333 OFFCURVE",
"380 639 CURVE SMOOTH",
"280 555 OFFCURVE",
"179 448 OFFCURVE",
"87 340 CURVE",
"89.667 417.333 OFFCURVE",
"95.333 491 OFFCURVE",
"106 583 CURVE SMOOTH",
"108 601.667 OFFCURVE",
"110.333 614 OFFCURVE",
"113 620 CURVE SMOOTH",
"115.667 626 OFFCURVE",
"121 630.667 OFFCURVE",
"129 634 CURVE SMOOTH",
"133.667 636 OFFCURVE",
"136 639 OFFCURVE",
"136 643 CURVE SMOOTH",
"136 662.011 OFFCURVE",
"91.124 687 OFFCURVE",
"73 687 CURVE SMOOTH",
"54.333 687 OFFCURVE",
"45 674.667 OFFCURVE",
"45 650 CURVE SMOOTH",
"45 644.667 OFFCURVE",
"46 638.667 OFFCURVE",
"48 632 CURVE",
"44.667 557.333 OFFCURVE",
"41.167 482.667 OFFCURVE",
"37.5 408 CURVE SMOOTH",
"33.833 333.333 OFFCURVE",
"32 257.667 OFFCURVE",
"32 181 CURVE SMOOTH",
"32 91.667 OFFCURVE",
"40 38.667 OFFCURVE",
"52 8 CURVE SMOOTH",
"61.824 -17.105 OFFCURVE",
"76.293 -31 OFFCURVE",
"91 -31 CURVE SMOOTH",
"97.667 -31 OFFCURVE",
"116 -26.333 OFFCURVE",
"116 -13 CURVE SMOOTH",
"116 -9 OFFCURVE",
"115 -5 OFFCURVE",
"113 -1 CURVE",
"98.333 25.667 OFFCURVE",
"86 93 OFFCURVE",
"86 181 CURVE SMOOTH",
"86 274 LINE",
"137.068 213.647 OFFCURVE",
"255.894 97.685 OFFCURVE",
"288 72 CURVE SMOOTH",
"349.333 22.667 OFFCURVE",
"397.333 -3 OFFCURVE",
"444 -3 CURVE SMOOTH",
"449.333 -3 OFFCURVE",
"455 -1.833 OFFCURVE",
"461 0.5 CURVE SMOOTH",
"467 2.833 OFFCURVE",
"473 4 OFFCURVE",
"479 4 CURVE SMOOTH",
"484.333 4 OFFCURVE",
"487 0.333 OFFCURVE",
"487 -7 CURVE SMOOTH",
"487 -37.667 OFFCURVE",
"460 -89.333 OFFCURVE",
"424 -132 CURVE",
"421.333 -134.667 OFFCURVE",
"420 -138 OFFCURVE",
"420 -142 CURVE SMOOTH",
"420 -154 OFFCURVE",
"439.333 -159 OFFCURVE",
"450 -159 CURVE SMOOTH",
"494.96 -159 OFFCURVE",
"525.899 -101.629 OFFCURVE",
"537 -60 CURVE SMOOTH",
"545 -32 OFFCURVE",
"549 -5.333 OFFCURVE",
"549 28 CURVE SMOOTH",
"549 54.667 OFFCURVE",
"541.333 77 OFFCURVE",
"516 77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
33 933 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 934 19 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 19 106 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 19 25 19 41 19 57 19 73 19 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
49 46 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
58 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 0 23 0 39 0 55 0 71 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 0 102 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
32 11 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
66 11 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
93 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 93 23 93 39 93 55 93 71 93 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 93 102 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 543;
}
);
note = KaDescenderCyrillic;
unicode = 049A;
},
{
glyphname = kaDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"171.981 106.524 OFFCURVE",
"262.046 -9.428 OFFCURVE",
"308 -37 CURVE SMOOTH",
"318.667 -43.667 OFFCURVE",
"324 -52 OFFCURVE",
"324 -62 CURVE SMOOTH",
"324 -118 OFFCURVE",
"297.333 -159.333 OFFCURVE",
"260 -202 CURVE",
"257.333 -204.667 OFFCURVE",
"256 -208 OFFCURVE",
"256 -212 CURVE SMOOTH",
"256 -224 OFFCURVE",
"275.333 -229 OFFCURVE",
"286 -229 CURVE SMOOTH",
"330.96 -229 OFFCURVE",
"361.899 -171.629 OFFCURVE",
"373 -130 CURVE SMOOTH",
"381 -102 OFFCURVE",
"385 -75.333 OFFCURVE",
"385 -42 CURVE SMOOTH",
"385 -15.333 OFFCURVE",
"374.667 -11 OFFCURVE",
"356 -3 CURVE SMOOTH",
"330.667 7.667 OFFCURVE",
"294.333 38.333 OFFCURVE",
"261 77 CURVE SMOOTH",
"239.061 101.521 OFFCURVE",
"146 201.606 OFFCURVE",
"146 217 CURVE SMOOTH",
"146 233 OFFCURVE",
"174.333 266 OFFCURVE",
"231 316 CURVE SMOOTH",
"280.333 358.667 OFFCURVE",
"317.667 388.667 OFFCURVE",
"343 406 CURVE",
"343.667 408 OFFCURVE",
"344 411.667 OFFCURVE",
"344 417 CURVE SMOOTH",
"344 438.333 OFFCURVE",
"330.667 453 OFFCURVE",
"312 453 CURVE SMOOTH",
"308.667 453 OFFCURVE",
"301.167 448.5 OFFCURVE",
"289.5 439.5 CURVE SMOOTH",
"277.833 430.5 OFFCURVE",
"263 415.667 OFFCURVE",
"245 395 CURVE SMOOTH",
"196.758 339.866 OFFCURVE",
"118.385 271.826 OFFCURVE",
"87 249 CURVE",
"83.667 249 OFFCURVE",
"82 250.667 OFFCURVE",
"82 254 CURVE SMOOTH",
"82 257.333 OFFCURVE",
"82.667 265.667 OFFCURVE",
"84 279 CURVE SMOOTH",
"85.333 292.333 OFFCURVE",
"86 309.333 OFFCURVE",
"86 330 CURVE SMOOTH",
"86 360 OFFCURVE",
"88 382.167 OFFCURVE",
"92 396.5 CURVE SMOOTH",
"96 410.833 OFFCURVE",
"98 419 OFFCURVE",
"98 421 CURVE SMOOTH",
"98 431.667 OFFCURVE",
"80 440 OFFCURVE",
"68 440 CURVE SMOOTH",
"52 440 OFFCURVE",
"25 423.333 OFFCURVE",
"25 410 CURVE SMOOTH",
"25 403.333 OFFCURVE",
"26 395.667 OFFCURVE",
"28 387 CURVE SMOOTH",
"32.364 367.363 OFFCURVE",
"34 352.341 OFFCURVE",
"34 329 CURVE SMOOTH",
"34 309.862 OFFCURVE",
"32.987 264.154 OFFCURVE",
"32.5 232 CURVE SMOOTH",
"31.833 188 OFFCURVE",
"31 130.333 OFFCURVE",
"31 49 CURVE SMOOTH",
"31 2.333 OFFCURVE",
"44.333 -12 OFFCURVE",
"71 -12 CURVE SMOOTH",
"84.333 -12 OFFCURVE",
"95 -3 OFFCURVE",
"95 5 CURVE SMOOTH",
"95 11 OFFCURVE",
"93 19.5 OFFCURVE",
"89 30.5 CURVE SMOOTH",
"85 41.5 OFFCURVE",
"82.667 50 OFFCURVE",
"82 56 CURVE SMOOTH",
"81.333 63.333 OFFCURVE",
"81 73.5 OFFCURVE",
"81 86.5 CURVE SMOOTH",
"81 99.5 OFFCURVE",
"81 113 OFFCURVE",
"81 127 CURVE SMOOTH",
"81 151 OFFCURVE",
"81.333 179 OFFCURVE",
"100 179 CURVE",
"112.667 171 OFFCURVE",
"128 157.667 OFFCURVE",
"146 139 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 933 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
72 934 88 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 38 22 38 38 38 54 38 70 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 38 101 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
43 17 61 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 88 106 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 88 25 88 41 88 57 88 73 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
43 80 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 388;
}
);
note = kaDescenderCyrillic;
unicode = 049B;
},
{
glyphname = KaStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"215 503.667 OFFCURVE",
"189 517 OFFCURVE",
"173 517 CURVE SMOOTH",
"165 517 OFFCURVE",
"156.667 514.667 OFFCURVE",
"148 510 CURVE",
"144 454 OFFCURVE",
"142 398 OFFCURVE",
"142 342 CURVE SMOOTH",
"142 334 OFFCURVE",
"142.333 327 OFFCURVE",
"133 327 CURVE SMOOTH",
"125.667 327 OFFCURVE",
"117.833 326.833 OFFCURVE",
"109.5 326.5 CURVE SMOOTH",
"101.167 326.167 OFFCURVE",
"94.333 326 OFFCURVE",
"89 326 CURVE SMOOTH",
"84.333 326 OFFCURVE",
"82 328.333 OFFCURVE",
"82 333 CURVE SMOOTH",
"83.333 414.333 OFFCURVE",
"91.333 495 OFFCURVE",
"102 583 CURVE SMOOTH",
"104 601.667 OFFCURVE",
"106.333 614 OFFCURVE",
"109 620 CURVE SMOOTH",
"111.667 626 OFFCURVE",
"117 630.667 OFFCURVE",
"125 634 CURVE SMOOTH",
"129.667 636 OFFCURVE",
"132 639 OFFCURVE",
"132 643 CURVE SMOOTH",
"132 662.011 OFFCURVE",
"87.124 687 OFFCURVE",
"69 687 CURVE SMOOTH",
"50.333 687 OFFCURVE",
"41 674.667 OFFCURVE",
"41 650 CURVE SMOOTH",
"41 644.667 OFFCURVE",
"42 638.667 OFFCURVE",
"44 632 CURVE",
"42 580 OFFCURVE",
"39.5 528.167 OFFCURVE",
"36.5 476.5 CURVE SMOOTH",
"33.5 424.833 OFFCURVE",
"31.333 372.667 OFFCURVE",
"30 320 CURVE",
"19.333 317.333 OFFCURVE",
"14 311.667 OFFCURVE",
"14 303 CURVE SMOOTH",
"14 288.333 OFFCURVE",
"15.667 273 OFFCURVE",
"29 269 CURVE",
"28.333 255.667 OFFCURVE",
"28 241 OFFCURVE",
"28 225 CURVE SMOOTH",
"28 209 OFFCURVE",
"28 194.333 OFFCURVE",
"28 181 CURVE SMOOTH",
"28 91.667 OFFCURVE",
"36 38.667 OFFCURVE",
"48 8 CURVE SMOOTH",
"57.824 -17.105 OFFCURVE",
"72.293 -31 OFFCURVE",
"87 -31 CURVE SMOOTH",
"93.667 -31 OFFCURVE",
"112 -26.333 OFFCURVE",
"112 -13 CURVE SMOOTH",
"112 -9 OFFCURVE",
"111 -5 OFFCURVE",
"109 -1 CURVE",
"94.333 25.667 OFFCURVE",
"82 93 OFFCURVE",
"82 181 CURVE SMOOTH",
"82 274 LINE SMOOTH",
"82 286.009 OFFCURVE",
"118.758 288 OFFCURVE",
"135 288 CURVE SMOOTH",
"141.667 288 OFFCURVE",
"142 283.333 OFFCURVE",
"142 278 CURVE SMOOTH",
"142.667 232.667 OFFCURVE",
"144.667 187.667 OFFCURVE",
"148 143 CURVE",
"148 111.667 OFFCURVE",
"164.333 96 OFFCURVE",
"197 96 CURVE SMOOTH",
"201 96 OFFCURVE",
"204.667 98.667 OFFCURVE",
"208 104 CURVE",
"202 128.667 OFFCURVE",
"199 148.667 OFFCURVE",
"199 164 CURVE SMOOTH",
"199 182.667 OFFCURVE",
"198.667 201 OFFCURVE",
"198 219 CURVE SMOOTH",
"197.333 237 OFFCURVE",
"196.667 255 OFFCURVE",
"196 273 CURVE",
"196 282.333 OFFCURVE",
"199.667 287 OFFCURVE",
"207 287 CURVE SMOOTH",
"217 287 OFFCURVE",
"224.667 286.833 OFFCURVE",
"230 286.5 CURVE SMOOTH",
"235.333 286.167 OFFCURVE",
"239 286 OFFCURVE",
"241 286 CURVE",
"292.766 214.822 OFFCURVE",
"392.391 97.287 OFFCURVE",
"424 72 CURVE SMOOTH",
"485.333 22.667 OFFCURVE",
"533.333 -3 OFFCURVE",
"580 -3 CURVE SMOOTH",
"612.408 -3 OFFCURVE",
"666 24.341 OFFCURVE",
"666 58 CURVE SMOOTH",
"666 70.667 OFFCURVE",
"661.333 77 OFFCURVE",
"652 77 CURVE SMOOTH",
"631.266 77 OFFCURVE",
"607.996 43 OFFCURVE",
"577 43 CURVE SMOOTH",
"508.317 43 OFFCURVE",
"360.837 200.461 OFFCURVE",
"290 317 CURVE",
"344.667 385 OFFCURVE",
"409.167 459.833 OFFCURVE",
"464.5 516.5 CURVE SMOOTH",
"508.242 561.296 OFFCURVE",
"561.36 613 OFFCURVE",
"580 613 CURVE",
"603 605 LINE",
"611.667 605 OFFCURVE",
"616.333 609.333 OFFCURVE",
"617 618 CURVE",
"617 631.333 OFFCURVE",
"603.667 655 OFFCURVE",
"593 671 CURVE",
"592.333 671.667 OFFCURVE",
"588.667 672 OFFCURVE",
"582 672 CURVE SMOOTH",
"567.333 672 OFFCURVE",
"545.333 664.333 OFFCURVE",
"516 639 CURVE SMOOTH",
"417.451 553.769 OFFCURVE",
"337.143 455.63 OFFCURVE",
"246 330 CURVE",
"240.667 329.333 OFFCURVE",
"235.167 329 OFFCURVE",
"229.5 329 CURVE SMOOTH",
"223.833 329 OFFCURVE",
"216.333 329 OFFCURVE",
"207 329 CURVE SMOOTH",
"199.667 329 OFFCURVE",
"196 333 OFFCURVE",
"196 341 CURVE SMOOTH",
"196 371.667 OFFCURVE",
"196.333 392.333 OFFCURVE",
"207 439 CURVE SMOOTH",
"210.333 451.667 OFFCURVE",
"212.333 462.5 OFFCURVE",
"213 471.5 CURVE SMOOTH",
"213.667 480.5 OFFCURVE",
"214.333 487.667 OFFCURVE",
"215 493 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 934 101 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 933 71 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 230 65 246 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 65 22 65 38 65 54 65 70 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 65 101 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
95 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
103 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
106 101 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
106 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
115 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
133 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
110 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
85 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
128 928 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 37 23 37 39 37 55 37 71 37 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 37 102 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 42 119 42 135 42 151 42 167 42 183 42 199 42 215 42 231 42 247 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 42 23 42 39 42 55 42 71 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 42 102 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
128 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
125 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 650;
}
);
note = KaStrokeCyrillic;
unicode = 049C;
},
{
glyphname = kaStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"188 352.156 OFFCURVE",
"158.353 358 OFFCURVE",
"146 358 CURVE SMOOTH",
"140.667 358 OFFCURVE",
"132.333 356.333 OFFCURVE",
"121 353 CURVE",
"118.333 318.333 OFFCURVE",
"116 284.667 OFFCURVE",
"116 250 CURVE SMOOTH",
"116 245.333 OFFCURVE",
"112.167 242.833 OFFCURVE",
"104.5 242.5 CURVE SMOOTH",
"96.833 242.167 OFFCURVE",
"91.333 241.333 OFFCURVE",
"88 240 CURVE",
"84 240 OFFCURVE",
"82 241.333 OFFCURVE",
"82 244 CURVE",
"82.667 258 OFFCURVE",
"83 272.167 OFFCURVE",
"83 286.5 CURVE SMOOTH",
"83 300.833 OFFCURVE",
"83 315.333 OFFCURVE",
"83 330 CURVE SMOOTH",
"83 360 OFFCURVE",
"85 382.167 OFFCURVE",
"89 396.5 CURVE SMOOTH",
"93 410.833 OFFCURVE",
"95 419 OFFCURVE",
"95 421 CURVE SMOOTH",
"95 431.667 OFFCURVE",
"77 440 OFFCURVE",
"65 440 CURVE SMOOTH",
"49 440 OFFCURVE",
"22 423.333 OFFCURVE",
"22 410 CURVE SMOOTH",
"22 403.333 OFFCURVE",
"23 395.667 OFFCURVE",
"25 387 CURVE SMOOTH",
"29.364 367.363 OFFCURVE",
"31 352.341 OFFCURVE",
"31 329 CURVE SMOOTH",
"31 317.667 OFFCURVE",
"30.667 304.167 OFFCURVE",
"30 288.5 CURVE SMOOTH",
"29.333 272.833 OFFCURVE",
"29 254.333 OFFCURVE",
"29 233 CURVE SMOOTH",
"29 226.333 OFFCURVE",
"26.167 220.667 OFFCURVE",
"20.5 216 CURVE SMOOTH",
"14.833 211.333 OFFCURVE",
"12 206 OFFCURVE",
"12 200 CURVE SMOOTH",
"12 185.729 OFFCURVE",
"28 190.518 OFFCURVE",
"28 169 CURVE SMOOTH",
"28 49 LINE SMOOTH",
"28 2.333 OFFCURVE",
"41.333 -12 OFFCURVE",
"68 -12 CURVE SMOOTH",
"81.333 -12 OFFCURVE",
"92 -3 OFFCURVE",
"92 5 CURVE SMOOTH",
"92 11 OFFCURVE",
"90 19.5 OFFCURVE",
"86 30.5 CURVE SMOOTH",
"82 41.5 OFFCURVE",
"79.667 50 OFFCURVE",
"79 56 CURVE SMOOTH",
"78.333 63.333 OFFCURVE",
"78 73.5 OFFCURVE",
"78 86.5 CURVE SMOOTH",
"78 99.5 OFFCURVE",
"78 113 OFFCURVE",
"78 127 CURVE SMOOTH",
"78 134.119 OFFCURVE",
"79.45 186 OFFCURVE",
"86 186 CURVE",
"108 190 LINE",
"113.333 190 OFFCURVE",
"116 186.667 OFFCURVE",
"116 180 CURVE SMOOTH",
"116 152 OFFCURVE",
"118.333 123 OFFCURVE",
"121 95 CURVE SMOOTH",
"123.667 72.333 OFFCURVE",
"136.667 62 OFFCURVE",
"170 62 CURVE SMOOTH",
"174 62 OFFCURVE",
"177.667 64 OFFCURVE",
"181 68 CURVE",
"167.667 106.667 OFFCURVE",
"167 136.667 OFFCURVE",
"167 170 CURVE SMOOTH",
"167 174.667 OFFCURVE",
"166.833 179.333 OFFCURVE",
"166.5 184 CURVE SMOOTH",
"166.167 188.667 OFFCURVE",
"168.667 191 OFFCURVE",
"174 191 CURVE SMOOTH",
"188 191 OFFCURVE",
"199.333 186.167 OFFCURVE",
"208 176.5 CURVE SMOOTH",
"216.667 166.833 OFFCURVE",
"228.333 154.333 OFFCURVE",
"243 139 CURVE SMOOTH",
"248.193 133.807 OFFCURVE",
"301.519 65.556 OFFCURVE",
"321.5 42.5 CURVE SMOOTH",
"351.987 7.322 OFFCURVE",
"402.192 -44 OFFCURVE",
"425 -44 CURVE SMOOTH",
"434.333 -44 OFFCURVE",
"447.667 -37.333 OFFCURVE",
"465 -24 CURVE",
"467 -22 OFFCURVE",
"468 -20.333 OFFCURVE",
"468 -19 CURVE SMOOTH",
"468 -16.333 OFFCURVE",
"467 -14.333 OFFCURVE",
"465 -13 CURVE",
"435.667 1.667 OFFCURVE",
"399.333 30.333 OFFCURVE",
"358 77 CURVE SMOOTH",
"332.656 105.325 OFFCURVE",
"243 202.344 OFFCURVE",
"243 217 CURVE SMOOTH",
"243 233 OFFCURVE",
"271.333 266 OFFCURVE",
"328 316 CURVE SMOOTH",
"377.333 358.667 OFFCURVE",
"414.667 388.667 OFFCURVE",
"440 406 CURVE",
"440.667 408 OFFCURVE",
"441 411.667 OFFCURVE",
"441 417 CURVE SMOOTH",
"441 438.333 OFFCURVE",
"427.667 453 OFFCURVE",
"409 453 CURVE SMOOTH",
"405.667 453 OFFCURVE",
"398.333 448.5 OFFCURVE",
"387 439.5 CURVE SMOOTH",
"375.667 430.5 OFFCURVE",
"360.667 415.667 OFFCURVE",
"342 395 CURVE SMOOTH",
"304.16 354.007 OFFCURVE",
"200.415 248 OFFCURVE",
"173 248 CURVE SMOOTH",
"171 248 OFFCURVE",
"170 249.333 OFFCURVE",
"170 252 CURVE SMOOTH",
"170 257.333 OFFCURVE",
"170.667 259.667 OFFCURVE",
"172 265 CURVE",
"172 278.518 OFFCURVE",
"188 327.447 OFFCURVE",
"188 341 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 92 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 55 22 55 38 55 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 55 69 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
66 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
95 92 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
117 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
111 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
122 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
125 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
83 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 60 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 462;
}
);
note = kaStrokeCyrillic;
unicode = 049D;
},
{
glyphname = KaBashkirCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"767.266 77 OFFCURVE",
"743.996 43 OFFCURVE",
"713 43 CURVE SMOOTH",
"644.317 43 OFFCURVE",
"496.837 200.461 OFFCURVE",
"426 317 CURVE",
"480.667 385 OFFCURVE",
"545.167 459.833 OFFCURVE",
"600.5 516.5 CURVE SMOOTH",
"644.242 561.296 OFFCURVE",
"697.36 613 OFFCURVE",
"716 613 CURVE",
"739 605 LINE",
"747.667 605 OFFCURVE",
"752.333 609.333 OFFCURVE",
"753 618 CURVE",
"753 631.333 OFFCURVE",
"739.667 655 OFFCURVE",
"729 671 CURVE",
"728.333 671.667 OFFCURVE",
"724.667 672 OFFCURVE",
"718 672 CURVE SMOOTH",
"703.333 672 OFFCURVE",
"681.333 664.333 OFFCURVE",
"652 639 CURVE SMOOTH",
"553.451 553.769 OFFCURVE",
"473.143 455.63 OFFCURVE",
"382 330 CURVE",
"348.215 330 OFFCURVE",
"236.797 326.446 OFFCURVE",
"218 325 CURVE",
"218.667 367 OFFCURVE",
"221.333 409 OFFCURVE",
"226 451 CURVE SMOOTH",
"230.667 493 OFFCURVE",
"234.667 537 OFFCURVE",
"238 583 CURVE SMOOTH",
"240.333 624.989 OFFCURVE",
"267 635.506 OFFCURVE",
"267 662 CURVE SMOOTH",
"267 670.667 OFFCURVE",
"258.667 677 OFFCURVE",
"242 681 CURVE SMOOTH",
"225.333 685 OFFCURVE",
"198 687 OFFCURVE",
"160 687 CURVE SMOOTH",
"142.879 687 OFFCURVE",
"5 686.266 OFFCURVE",
"5 666 CURVE SMOOTH",
"5 647.692 OFFCURVE",
"10.781 610 OFFCURVE",
"31 610 CURVE SMOOTH",
"41.667 610 OFFCURVE",
"53.167 613.5 OFFCURVE",
"65.5 620.5 CURVE SMOOTH",
"77.833 627.5 OFFCURVE",
"90.333 632 OFFCURVE",
"103 634 CURVE SMOOTH",
"120.333 636.667 OFFCURVE",
"140.333 639 OFFCURVE",
"167 639 CURVE SMOOTH",
"173 639 OFFCURVE",
"176.667 638.333 OFFCURVE",
"178 637 CURVE SMOOTH",
"179.333 635.667 OFFCURVE",
"180 634 OFFCURVE",
"180 632 CURVE",
"178 580 OFFCURVE",
"175.5 528.167 OFFCURVE",
"172.5 476.5 CURVE SMOOTH",
"169.5 424.833 OFFCURVE",
"167.333 372.667 OFFCURVE",
"166 320 CURVE",
"155.333 317.333 OFFCURVE",
"150 311.667 OFFCURVE",
"150 303 CURVE SMOOTH",
"150 288.333 OFFCURVE",
"151.667 273 OFFCURVE",
"165 269 CURVE",
"164.333 255.667 OFFCURVE",
"164 241 OFFCURVE",
"164 225 CURVE SMOOTH",
"164 209 OFFCURVE",
"164 194.333 OFFCURVE",
"164 181 CURVE SMOOTH",
"164 91.667 OFFCURVE",
"172 38.667 OFFCURVE",
"184 8 CURVE SMOOTH",
"193.824 -17.105 OFFCURVE",
"208.293 -31 OFFCURVE",
"223 -31 CURVE SMOOTH",
"229.667 -31 OFFCURVE",
"248 -26.333 OFFCURVE",
"248 -13 CURVE SMOOTH",
"248 -9 OFFCURVE",
"247 -5 OFFCURVE",
"245 -1 CURVE",
"230.333 25.667 OFFCURVE",
"218 93 OFFCURVE",
"218 181 CURVE SMOOTH",
"218 282 LINE",
"236 286 OFFCURVE",
"254.333 288 OFFCURVE",
"273 288 CURVE SMOOTH",
"288.142 288 OFFCURVE",
"361.858 286 OFFCURVE",
"377 286 CURVE",
"428.766 214.822 OFFCURVE",
"528.391 97.287 OFFCURVE",
"560 72 CURVE SMOOTH",
"621.333 22.667 OFFCURVE",
"669.333 -3 OFFCURVE",
"716 -3 CURVE SMOOTH",
"748.408 -3 OFFCURVE",
"802 24.341 OFFCURVE",
"802 58 CURVE SMOOTH",
"802 70.667 OFFCURVE",
"797.333 77 OFFCURVE",
"788 77 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 42 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
47 42 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
69 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
74 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 931 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 0 23 0 39 0 55 0 71 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 0 102 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
108 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 108 119 108 135 108 151 108 167 108 183 108 199 108 215 108 231 108 247 108 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 108 23 108 39 108 55 108 71 108 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 108 102 108 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 787;
}
);
note = KaBashkirCyrillic;
unicode = 04A0;
},
{
glyphname = kaBashkirCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"231 432.333 OFFCURVE",
"205.667 441 OFFCURVE",
"171 441 CURVE SMOOTH",
"138.021 441 OFFCURVE",
"3 441.121 OFFCURVE",
"3 423 CURVE SMOOTH",
"3 405.645 OFFCURVE",
"8.839 377 OFFCURVE",
"29 377 CURVE SMOOTH",
"44.333 377 OFFCURVE",
"60.333 379.667 OFFCURVE",
"77 385 CURVE SMOOTH",
"93.667 390.333 OFFCURVE",
"113.667 393 OFFCURVE",
"137 393 CURVE SMOOTH",
"162.333 393 OFFCURVE",
"162 362.333 OFFCURVE",
"162 329 CURVE SMOOTH",
"162 317.667 OFFCURVE",
"161.667 304.167 OFFCURVE",
"161 288.5 CURVE SMOOTH",
"160.333 272.833 OFFCURVE",
"160 254.333 OFFCURVE",
"160 233 CURVE SMOOTH",
"160 226.333 OFFCURVE",
"157.167 220.667 OFFCURVE",
"151.5 216 CURVE SMOOTH",
"145.833 211.333 OFFCURVE",
"143 206 OFFCURVE",
"143 200 CURVE SMOOTH",
"143 185.729 OFFCURVE",
"159 190.518 OFFCURVE",
"159 169 CURVE SMOOTH",
"159 49 LINE SMOOTH",
"159 2.333 OFFCURVE",
"172.333 -12 OFFCURVE",
"199 -12 CURVE SMOOTH",
"212.333 -12 OFFCURVE",
"223 -3 OFFCURVE",
"223 5 CURVE SMOOTH",
"223 11 OFFCURVE",
"221 19.5 OFFCURVE",
"217 30.5 CURVE SMOOTH",
"213 41.5 OFFCURVE",
"210.667 50 OFFCURVE",
"210 56 CURVE SMOOTH",
"209.333 63.333 OFFCURVE",
"209 73.5 OFFCURVE",
"209 86.5 CURVE SMOOTH",
"209 99.5 OFFCURVE",
"209 113 OFFCURVE",
"209 127 CURVE SMOOTH",
"209 145.667 OFFCURVE",
"209.667 166.333 OFFCURVE",
"211 185 CURVE",
"231 189 OFFCURVE",
"258.333 193 OFFCURVE",
"281 193 CURVE SMOOTH",
"325.508 193 OFFCURVE",
"338 175 OFFCURVE",
"374 139 CURVE SMOOTH",
"379.193 133.807 OFFCURVE",
"432.519 65.556 OFFCURVE",
"452.5 42.5 CURVE SMOOTH",
"482.987 7.322 OFFCURVE",
"533.192 -44 OFFCURVE",
"556 -44 CURVE SMOOTH",
"565.333 -44 OFFCURVE",
"578.667 -37.333 OFFCURVE",
"596 -24 CURVE",
"598 -22 OFFCURVE",
"599 -20.333 OFFCURVE",
"599 -19 CURVE SMOOTH",
"599 -16.333 OFFCURVE",
"598 -14.333 OFFCURVE",
"596 -13 CURVE",
"566.667 1.667 OFFCURVE",
"530.333 30.333 OFFCURVE",
"489 77 CURVE SMOOTH",
"463.656 105.325 OFFCURVE",
"374 202.344 OFFCURVE",
"374 217 CURVE SMOOTH",
"374 233 OFFCURVE",
"402.333 266 OFFCURVE",
"459 316 CURVE SMOOTH",
"508.333 358.667 OFFCURVE",
"545.667 388.667 OFFCURVE",
"571 406 CURVE",
"571.667 408 OFFCURVE",
"572 411.667 OFFCURVE",
"572 417 CURVE SMOOTH",
"572 438.333 OFFCURVE",
"558.667 453 OFFCURVE",
"540 453 CURVE SMOOTH",
"536.667 453 OFFCURVE",
"529.167 448.5 OFFCURVE",
"517.5 439.5 CURVE SMOOTH",
"505.833 430.5 OFFCURVE",
"491 415.667 OFFCURVE",
"473 395 CURVE SMOOTH",
"424.758 339.866 OFFCURVE",
"346.385 271.826 OFFCURVE",
"315 249 CURVE",
"268.333 247.667 OFFCURVE",
"238.333 244.333 OFFCURVE",
"213 239 CURVE",
"213 280.357 OFFCURVE",
"212.812 354.872 OFFCURVE",
"217 380 CURVE",
"223.667 382.667 OFFCURVE",
"231 388.333 OFFCURVE",
"231 407 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 934 79 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 61 22 61 38 61 54 61 70 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 61 101 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
85 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
101 931 88 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 931 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
91 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 606;
}
);
note = kaBashkirCyrillic;
unicode = 04A1;
},
{
glyphname = EnDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"531.333 665.333 OFFCURVE",
"509.333 694 OFFCURVE",
"484 694 CURVE SMOOTH",
"462.351 694 OFFCURVE",
"446.94 654.075 OFFCURVE",
"438.5 608.5 CURVE SMOOTH",
"428.5 554.5 OFFCURVE",
"424 479.333 OFFCURVE",
"424 390 CURVE SMOOTH",
"424 302 LINE SMOOTH",
"424 265.108 OFFCURVE",
"396.907 276.727 OFFCURVE",
"362 268 CURVE SMOOTH",
"345.936 264.293 OFFCURVE",
"250.417 253.923 OFFCURVE",
"188 243 CURVE SMOOTH",
"170.667 239.667 OFFCURVE",
"157.833 237.167 OFFCURVE",
"149.5 235.5 CURVE SMOOTH",
"141.167 233.833 OFFCURVE",
"136.333 233 OFFCURVE",
"135 233 CURVE SMOOTH",
"123.667 233 OFFCURVE",
"118 248 OFFCURVE",
"118 278 CURVE SMOOTH",
"118 407.333 OFFCURVE",
"127 504 OFFCURVE",
"145 568 CURVE",
"155 594 LINE SMOOTH",
"157.667 600.667 OFFCURVE",
"160 607 OFFCURVE",
"162 613 CURVE SMOOTH",
"164 619 OFFCURVE",
"165 622.667 OFFCURVE",
"165 624 CURVE SMOOTH",
"165 645.333 OFFCURVE",
"140.333 661 OFFCURVE",
"119 661 CURVE SMOOTH",
"81.267 661 OFFCURVE",
"68.719 601.868 OFFCURVE",
"64 530.5 CURVE SMOOTH",
"59.312 459.597 OFFCURVE",
"61.224 316.727 OFFCURVE",
"58 220 CURVE",
"57.333 219.333 OFFCURVE",
"56 219 OFFCURVE",
"54 219 CURVE SMOOTH",
"53 219 LINE SMOOTH",
"51.667 219 OFFCURVE",
"49.833 219.333 OFFCURVE",
"47.5 220 CURVE SMOOTH",
"45.167 220.667 OFFCURVE",
"43.333 221 OFFCURVE",
"42 221 CURVE SMOOTH",
"30 221 OFFCURVE",
"15 196 OFFCURVE",
"15 184 CURVE SMOOTH",
"15 155.585 OFFCURVE",
"57.839 166.483 OFFCURVE",
"64 148 CURVE",
"64 54 LINE",
"66.667 4 OFFCURVE",
"74.667 -21 OFFCURVE",
"88 -21 CURVE SMOOTH",
"92 -21 OFFCURVE",
"97.833 -19.5 OFFCURVE",
"105.5 -16.5 CURVE SMOOTH",
"113.167 -13.5 OFFCURVE",
"119.667 -12 OFFCURVE",
"125 -12 CURVE SMOOTH",
"131 -12 OFFCURVE",
"135.333 -7.667 OFFCURVE",
"138 1 CURVE",
"119.992 19.008 OFFCURVE",
"120.138 98.408 OFFCURVE",
"118 154 CURVE",
"118 160.667 OFFCURVE",
"124 166.667 OFFCURVE",
"136 172 CURVE",
"240 193.333 OFFCURVE",
"327 213.333 OFFCURVE",
"403 216 CURVE",
"433.831 213.431 OFFCURVE",
"424.864 120.533 OFFCURVE",
"438 45 CURVE SMOOTH",
"442.667 18.333 OFFCURVE",
"455 5 OFFCURVE",
"475 5 CURVE SMOOTH",
"478.333 5 OFFCURVE",
"481.333 5.167 OFFCURVE",
"484 5.5 CURVE SMOOTH",
"486.667 5.833 OFFCURVE",
"489 6 OFFCURVE",
"491 6 CURVE SMOOTH",
"496.333 6 OFFCURVE",
"499 3.333 OFFCURVE",
"499 -2 CURVE SMOOTH",
"499 -47.333 OFFCURVE",
"466.667 -87.667 OFFCURVE",
"436 -125 CURVE",
"433.333 -127.667 OFFCURVE",
"432 -131 OFFCURVE",
"432 -135 CURVE SMOOTH",
"432 -147 OFFCURVE",
"451.333 -152 OFFCURVE",
"462 -152 CURVE SMOOTH",
"506.96 -152 OFFCURVE",
"537.899 -94.629 OFFCURVE",
"549 -53 CURVE SMOOTH",
"557 -25 OFFCURVE",
"561 1.667 OFFCURVE",
"561 35 CURVE SMOOTH",
"561 57.667 OFFCURVE",
"554.667 73 OFFCURVE",
"536 73 CURVE SMOOTH",
"532 73 OFFCURVE",
"527.5 72.167 OFFCURVE",
"522.5 70.5 CURVE SMOOTH",
"517.5 68.833 OFFCURVE",
"512.667 68 OFFCURVE",
"508 68 CURVE SMOOTH",
"502.667 68 OFFCURVE",
"498.333 70.167 OFFCURVE",
"495 74.5 CURVE SMOOTH",
"491.667 78.833 OFFCURVE",
"489.333 87 OFFCURVE",
"488 99 CURVE SMOOTH",
"481.333 156.333 OFFCURVE",
"478 198.667 OFFCURVE",
"478 228 CURVE",
"507 240 LINE",
"513 248.667 OFFCURVE",
"516 256.333 OFFCURVE",
"516 263 CURVE SMOOTH",
"516 273.667 OFFCURVE",
"504 281.667 OFFCURVE",
"480 287 CURVE",
"482 392.333 OFFCURVE",
"485.833 471.167 OFFCURVE",
"491.5 523.5 CURVE SMOOTH",
"497.167 575.833 OFFCURVE",
"505.667 607.667 OFFCURVE",
"517 619 CURVE",
"524.333 621.667 OFFCURVE",
"530 626 OFFCURVE",
"534 632 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 934 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 111 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 38 106 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 38 25 38 41 38 57 38 73 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 15 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 7 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
214 55 230 55 246 55 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 55 22 55 38 55 54 55 70 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 55 101 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
90 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
117 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
19 931 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 575;
}
);
note = EnDescenderCyrillic;
unicode = 04A2;
},
{
glyphname = enDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"351.333 380.333 OFFCURVE",
"352.667 381.333 OFFCURVE",
"354 382 CURVE SMOOTH",
"355.333 382.667 OFFCURVE",
"356 384.333 OFFCURVE",
"356 387 CURVE SMOOTH",
"356 400.382 OFFCURVE",
"338.197 422 OFFCURVE",
"312 422 CURVE SMOOTH",
"288 422 OFFCURVE",
"276 369.667 OFFCURVE",
"276 265 CURVE SMOOTH",
"276 222 LINE SMOOTH",
"276 213.333 OFFCURVE",
"265 206.167 OFFCURVE",
"243 200.5 CURVE SMOOTH",
"221 194.833 OFFCURVE",
"188 185.333 OFFCURVE",
"144 172 CURVE SMOOTH",
"133.333 168.667 OFFCURVE",
"122.833 165 OFFCURVE",
"112.5 161 CURVE SMOOTH",
"102.167 157 OFFCURVE",
"96.333 155 OFFCURVE",
"95 155 CURVE SMOOTH",
"92.333 155 OFFCURVE",
"90.667 159.667 OFFCURVE",
"90 169 CURVE SMOOTH",
"89.333 178.333 OFFCURVE",
"89 187 OFFCURVE",
"89 195 CURVE SMOOTH",
"89 244.764 OFFCURVE",
"98.856 328.137 OFFCURVE",
"107 358 CURVE SMOOTH",
"109.667 366.667 OFFCURVE",
"112.333 374 OFFCURVE",
"115 380 CURVE SMOOTH",
"117.667 386 OFFCURVE",
"119 391 OFFCURVE",
"119 395 CURVE SMOOTH",
"119 409.667 OFFCURVE",
"99.667 423 OFFCURVE",
"85 423 CURVE SMOOTH",
"67 423 OFFCURVE",
"55.167 408.333 OFFCURVE",
"49.5 379 CURVE SMOOTH",
"43.833 349.667 OFFCURVE",
"41 306.667 OFFCURVE",
"41 250 CURVE SMOOTH",
"41 188.667 OFFCURVE",
"41 121.167 OFFCURVE",
"45 68.5 CURVE SMOOTH",
"48.267 25.483 OFFCURVE",
"54.671 -21 OFFCURVE",
"68 -21 CURVE SMOOTH",
"78.667 -21 OFFCURVE",
"99 -17.667 OFFCURVE",
"103 1 CURVE",
"89.868 16.758 OFFCURVE",
"88 71.063 OFFCURVE",
"88 102 CURVE SMOOTH",
"88 125.29 OFFCURVE",
"256.967 161 OFFCURVE",
"268 161 CURVE SMOOTH",
"278.627 161 OFFCURVE",
"280.628 99.186 OFFCURVE",
"283 72.5 CURVE SMOOTH",
"286.465 33.522 OFFCURVE",
"294.809 -16 OFFCURVE",
"319 -16 CURVE SMOOTH",
"322.333 -16 OFFCURVE",
"325.167 -15 OFFCURVE",
"327.5 -13 CURVE SMOOTH",
"329.833 -11 OFFCURVE",
"332 -10 OFFCURVE",
"334 -10 CURVE SMOOTH",
"336.667 -10 OFFCURVE",
"338 -12.333 OFFCURVE",
"338 -17 CURVE",
"332.667 -73 OFFCURVE",
"313 -108.667 OFFCURVE",
"273 -154 CURVE",
"270.333 -156.667 OFFCURVE",
"269 -160 OFFCURVE",
"269 -164 CURVE SMOOTH",
"269 -176 OFFCURVE",
"288.333 -181 OFFCURVE",
"299 -181 CURVE SMOOTH",
"343.96 -181 OFFCURVE",
"374.899 -123.629 OFFCURVE",
"386 -82 CURVE SMOOTH",
"394 -54 OFFCURVE",
"398 -27.333 OFFCURVE",
"398 6 CURVE SMOOTH",
"398 32 OFFCURVE",
"388.333 45 OFFCURVE",
"369 45 CURVE SMOOTH",
"362.333 45 OFFCURVE",
"356.833 43.5 OFFCURVE",
"352.5 40.5 CURVE SMOOTH",
"348.167 37.5 OFFCURVE",
"344.667 36 OFFCURVE",
"342 36 CURVE SMOOTH",
"326.515 36 OFFCURVE",
"322 159.965 OFFCURVE",
"322 164 CURVE SMOOTH",
"322 174.814 OFFCURVE",
"346 181.866 OFFCURVE",
"346 201 CURVE SMOOTH",
"346 216.366 OFFCURVE",
"323 210.419 OFFCURVE",
"323 225 CURVE SMOOTH",
"323 323.185 OFFCURVE",
"327.549 360.291 OFFCURVE",
"350 379 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 932 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 94 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 85 22 85 38 85 54 85 70 85 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 85 101 85 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
106 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
66 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 23 119 23 135 23 151 23 167 23 183 23 199 23 215 23 231 23 247 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 23 23 23 39 23 55 23 71 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 23 102 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 403;
}
);
note = enDescenderCyrillic;
unicode = 04A3;
},
{
glyphname = EnCyrillic_GheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"687 698.667 OFFCURVE",
"653 705 OFFCURVE",
"625 705 CURVE SMOOTH",
"553.457 705 OFFCURVE",
"517.292 702.323 OFFCURVE",
"484 694 CURVE SMOOTH",
"460.667 688 OFFCURVE",
"444.833 660.5 OFFCURVE",
"436.5 611.5 CURVE SMOOTH",
"428.167 562.5 OFFCURVE",
"424 488.667 OFFCURVE",
"424 390 CURVE SMOOTH",
"424 302 LINE SMOOTH",
"424 266.3 OFFCURVE",
"396.212 270.632 OFFCURVE",
"362 268 CURVE",
"348.188 266.027 OFFCURVE",
"318.935 262.735 OFFCURVE",
"301.5 260.5 CURVE SMOOTH",
"275.5 257.167 OFFCURVE",
"241.333 252.333 OFFCURVE",
"188 243 CURVE SMOOTH",
"170.667 239.667 OFFCURVE",
"157.833 237.167 OFFCURVE",
"149.5 235.5 CURVE SMOOTH",
"141.167 233.833 OFFCURVE",
"136.333 233 OFFCURVE",
"135 233 CURVE SMOOTH",
"123.667 233 OFFCURVE",
"118 248 OFFCURVE",
"118 278 CURVE SMOOTH",
"118 407.333 OFFCURVE",
"127 504 OFFCURVE",
"145 568 CURVE",
"155 594 LINE SMOOTH",
"157.667 600.667 OFFCURVE",
"160 607 OFFCURVE",
"162 613 CURVE SMOOTH",
"164 619 OFFCURVE",
"165 622.667 OFFCURVE",
"165 624 CURVE SMOOTH",
"165 645.333 OFFCURVE",
"140.333 661 OFFCURVE",
"119 661 CURVE SMOOTH",
"81.267 661 OFFCURVE",
"68.719 601.868 OFFCURVE",
"64 530.5 CURVE SMOOTH",
"59.312 459.597 OFFCURVE",
"61.224 316.727 OFFCURVE",
"58 220 CURVE",
"57.333 219.333 OFFCURVE",
"56 219 OFFCURVE",
"54 219 CURVE SMOOTH",
"53 219 LINE SMOOTH",
"51.667 219 OFFCURVE",
"49.833 219.333 OFFCURVE",
"47.5 220 CURVE SMOOTH",
"45.167 220.667 OFFCURVE",
"43.333 221 OFFCURVE",
"42 221 CURVE SMOOTH",
"30 221 OFFCURVE",
"15 196 OFFCURVE",
"15 184 CURVE SMOOTH",
"15 155.61 OFFCURVE",
"51.398 170.405 OFFCURVE",
"61 148 CURVE",
"64 54 LINE SMOOTH",
"64.667 4 OFFCURVE",
"72.667 -21 OFFCURVE",
"88 -21 CURVE SMOOTH",
"92 -21 OFFCURVE",
"97.833 -19.5 OFFCURVE",
"105.5 -16.5 CURVE SMOOTH",
"113.167 -13.5 OFFCURVE",
"119.667 -12 OFFCURVE",
"125 -12 CURVE SMOOTH",
"131 -12 OFFCURVE",
"135.333 -7.667 OFFCURVE",
"138 1 CURVE",
"119.992 19.008 OFFCURVE",
"120.138 98.408 OFFCURVE",
"118 154 CURVE",
"120.667 162 OFFCURVE",
"126.667 168 OFFCURVE",
"136 172 CURVE",
"219.028 189.48 OFFCURVE",
"360.479 215.66 OFFCURVE",
"426 218 CURVE",
"424 206.667 OFFCURVE",
"423 195.333 OFFCURVE",
"423 184 CURVE SMOOTH",
"423 175.736 OFFCURVE",
"438 28.962 OFFCURVE",
"438 45 CURVE",
"444.667 18.333 OFFCURVE",
"457 5 OFFCURVE",
"475 5 CURVE SMOOTH",
"491 5 OFFCURVE",
"505 25 OFFCURVE",
"505 41 CURVE SMOOTH",
"505 46.333 OFFCURVE",
"502 55.667 OFFCURVE",
"498 69 CURVE SMOOTH",
"488 99 LINE",
"481.333 156.333 OFFCURVE",
"478 198.667 OFFCURVE",
"478 228 CURVE",
"507 240 LINE",
"513 248.667 OFFCURVE",
"516 256.333 OFFCURVE",
"516 263 CURVE SMOOTH",
"516 273.667 OFFCURVE",
"504 281.667 OFFCURVE",
"480 287 CURVE",
"482 393 OFFCURVE",
"486 474 OFFCURVE",
"492 530 CURVE SMOOTH",
"498 586 OFFCURVE",
"506.667 619.333 OFFCURVE",
"518 630 CURVE SMOOTH",
"542 652.667 OFFCURVE",
"574 655 OFFCURVE",
"594 655 CURVE SMOOTH",
"613.333 655 OFFCURVE",
"628.333 653.333 OFFCURVE",
"639 650 CURVE SMOOTH",
"649.667 646.667 OFFCURVE",
"660 645 OFFCURVE",
"670 645 CURVE SMOOTH",
"684.667 645 OFFCURVE",
"687 649.333 OFFCURVE",
"687 672 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 934 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 934 99 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 43 22 43 38 43 54 43 70 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 43 101 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
108 931 6 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
108 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 691;
}
);
note = EnCyrillic_GheCyrillic;
unicode = 04A4;
},
{
glyphname = enCyrillic_gheCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"483 427.333 OFFCURVE",
"449 434 OFFCURVE",
"421 434 CURVE SMOOTH",
"405 434 OFFCURVE",
"358.333 432.667 OFFCURVE",
"317 422 CURVE SMOOTH",
"276.747 411.266 OFFCURVE",
"276 308.683 OFFCURVE",
"276 265 CURVE SMOOTH",
"276 222 LINE SMOOTH",
"276 213.333 OFFCURVE",
"265 206.167 OFFCURVE",
"243 200.5 CURVE SMOOTH",
"221 194.833 OFFCURVE",
"188 185.333 OFFCURVE",
"144 172 CURVE SMOOTH",
"133.333 168.667 OFFCURVE",
"122.833 165 OFFCURVE",
"112.5 161 CURVE SMOOTH",
"102.167 157 OFFCURVE",
"96.333 155 OFFCURVE",
"95 155 CURVE SMOOTH",
"92.333 155 OFFCURVE",
"90.667 159.667 OFFCURVE",
"90 169 CURVE SMOOTH",
"89.333 178.333 OFFCURVE",
"89 187 OFFCURVE",
"89 195 CURVE SMOOTH",
"89 244.764 OFFCURVE",
"98.856 328.137 OFFCURVE",
"107 358 CURVE SMOOTH",
"109.667 366.667 OFFCURVE",
"112.333 374 OFFCURVE",
"115 380 CURVE SMOOTH",
"117.667 386 OFFCURVE",
"119 391 OFFCURVE",
"119 395 CURVE SMOOTH",
"119 409.667 OFFCURVE",
"99.667 423 OFFCURVE",
"85 423 CURVE SMOOTH",
"67 423 OFFCURVE",
"55.167 408.333 OFFCURVE",
"49.5 379 CURVE SMOOTH",
"43.833 349.667 OFFCURVE",
"41 306.667 OFFCURVE",
"41 250 CURVE SMOOTH",
"41 188.667 OFFCURVE",
"41 121.167 OFFCURVE",
"45 68.5 CURVE SMOOTH",
"48.267 25.483 OFFCURVE",
"54.671 -21 OFFCURVE",
"68 -21 CURVE SMOOTH",
"78.667 -21 OFFCURVE",
"99 -17.667 OFFCURVE",
"103 1 CURVE",
"89.868 16.758 OFFCURVE",
"88 71.063 OFFCURVE",
"88 102 CURVE SMOOTH",
"88 125.29 OFFCURVE",
"256.967 161 OFFCURVE",
"268 161 CURVE SMOOTH",
"278.627 161 OFFCURVE",
"280.628 99.186 OFFCURVE",
"283 72.5 CURVE SMOOTH",
"286.465 33.522 OFFCURVE",
"294.809 -16 OFFCURVE",
"319 -16 CURVE SMOOTH",
"332.333 -16 OFFCURVE",
"343 0 OFFCURVE",
"343 12 CURVE",
"343 -6.955 OFFCURVE",
"322 142.832 OFFCURVE",
"322 164 CURVE SMOOTH",
"322 174.814 OFFCURVE",
"346 181.866 OFFCURVE",
"346 201 CURVE SMOOTH",
"346 216.366 OFFCURVE",
"323 210.419 OFFCURVE",
"323 225 CURVE SMOOTH",
"323 267 OFFCURVE",
"324.5 298.833 OFFCURVE",
"327.5 320.5 CURVE SMOOTH",
"330.5 342.167 OFFCURVE",
"334 357.667 OFFCURVE",
"338 367 CURVE",
"352.667 373.667 OFFCURVE",
"385.333 384 OFFCURVE",
"408 384 CURVE SMOOTH",
"420 384 OFFCURVE",
"431.333 382.333 OFFCURVE",
"442 379 CURVE SMOOTH",
"452.667 375.667 OFFCURVE",
"460.667 374 OFFCURVE",
"466 374 CURVE SMOOTH",
"480.667 374 OFFCURVE",
"483 379.333 OFFCURVE",
"483 402 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 932 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 932 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 69 118 69 134 69 150 69 166 69 182 69 198 69 214 69 230 69 246 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 69 22 69 38 69 54 69 70 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 69 101 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
87 931 6 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 486;
}
);
note = enCyrillic_gheCyrillic;
unicode = 04A5;
},
{
glyphname = EsDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"227 -21 OFFCURVE",
"232 -28 OFFCURVE",
"232 -40 CURVE SMOOTH",
"232 -107.186 OFFCURVE",
"207.184 -150.094 OFFCURVE",
"166 -199 CURVE",
"163.333 -201.667 OFFCURVE",
"162 -205 OFFCURVE",
"162 -209 CURVE SMOOTH",
"162 -221 OFFCURVE",
"181.333 -226 OFFCURVE",
"192 -226 CURVE SMOOTH",
"236.96 -226 OFFCURVE",
"267.899 -168.629 OFFCURVE",
"279 -127 CURVE SMOOTH",
"287 -99 OFFCURVE",
"291 -72.333 OFFCURVE",
"291 -39 CURVE SMOOTH",
"291 -24.333 OFFCURVE",
"290.667 -18.333 OFFCURVE",
"308 -13 CURVE SMOOTH",
"393.714 10.377 OFFCURVE",
"468 76.546 OFFCURVE",
"468 154 CURVE SMOOTH",
"468 168.667 OFFCURVE",
"461.333 176 OFFCURVE",
"448 176 CURVE SMOOTH",
"424.734 176 OFFCURVE",
"425.22 149.439 OFFCURVE",
"411 121 CURVE SMOOTH",
"380.333 59.667 OFFCURVE",
"319.333 20 OFFCURVE",
"250 20 CURVE SMOOTH",
"134 20 OFFCURVE",
"74 102.667 OFFCURVE",
"74 260 CURVE SMOOTH",
"74 362.667 OFFCURVE",
"91 449.667 OFFCURVE",
"125 521 CURVE SMOOTH",
"156.778 587 OFFCURVE",
"215.361 649 OFFCURVE",
"262 649 CURVE SMOOTH",
"321.456 649 OFFCURVE",
"361 552.339 OFFCURVE",
"361 466 CURVE SMOOTH",
"361 402 OFFCURVE",
"352.333 361.333 OFFCURVE",
"335 344 CURVE",
"316 330 LINE",
"322 315.333 OFFCURVE",
"332 308 OFFCURVE",
"346 308 CURVE SMOOTH",
"379.455 308 OFFCURVE",
"403 416.793 OFFCURVE",
"403 477 CURVE SMOOTH",
"403 597.88 OFFCURVE",
"354.347 694 OFFCURVE",
"258 694 CURVE SMOOTH",
"190 694 OFFCURVE",
"130.667 641.667 OFFCURVE",
"88 563 CURVE SMOOTH",
"45.333 484.333 OFFCURVE",
"20 380.333 OFFCURVE",
"20 279 CURVE SMOOTH",
"20 117.941 OFFCURVE",
"87.471 -2.464 OFFCURVE",
"217 -19 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 933 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 934 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 932 25 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 25 106 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 25 25 25 41 25 57 25 73 25 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 37 22 37 38 37 54 37 70 37 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 37 101 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 76 106 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 76 121 76 137 76 153 76 169 76 185 76 201 76 217 76 233 76 249 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 76 25 76 41 76 57 76 73 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
30 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 30 105 30 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 30 120 30 136 30 152 30 168 30 184 30 200 30 216 30 232 30 248 30 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 30 24 30 40 30 56 30 72 30 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 478;
}
);
note = EsDescenderCyrillic;
unicode = 04AA;
},
{
glyphname = esDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"154.333 -19.667 OFFCURVE",
"157 -23 OFFCURVE",
"157 -35 CURVE",
"154.454 -101.194 OFFCURVE",
"133.167 -141.927 OFFCURVE",
"91 -192 CURVE",
"88.333 -194.667 OFFCURVE",
"87 -198 OFFCURVE",
"87 -202 CURVE SMOOTH",
"87 -214 OFFCURVE",
"106.333 -219 OFFCURVE",
"117 -219 CURVE SMOOTH",
"161.96 -219 OFFCURVE",
"192.899 -161.629 OFFCURVE",
"204 -120 CURVE SMOOTH",
"212 -92 OFFCURVE",
"216 -65.333 OFFCURVE",
"216 -32 CURVE SMOOTH",
"216 -18.667 OFFCURVE",
"217.667 -12 OFFCURVE",
"231 -8 CURVE",
"262.157 -0.211 OFFCURVE",
"339 72.324 OFFCURVE",
"339 104 CURVE SMOOTH",
"339 113.153 OFFCURVE",
"323.879 138 OFFCURVE",
"316 138 CURVE SMOOTH",
"309.333 138 OFFCURVE",
"304.667 135.667 OFFCURVE",
"302 131 CURVE",
"290 103 LINE",
"267.538 63.068 OFFCURVE",
"205.663 16 OFFCURVE",
"170 16 CURVE SMOOTH",
"112.667 16 OFFCURVE",
"82 69 OFFCURVE",
"82 153 CURVE SMOOTH",
"82 200.333 OFFCURVE",
"90.667 249.667 OFFCURVE",
"108 301 CURVE SMOOTH",
"130.667 369 OFFCURVE",
"159.333 402 OFFCURVE",
"198 402 CURVE SMOOTH",
"231.333 402 OFFCURVE",
"248 365 OFFCURVE",
"248 291 CURVE SMOOTH",
"248 258.333 OFFCURVE",
"246.667 238.333 OFFCURVE",
"244 231 CURVE",
"243.333 229.667 OFFCURVE",
"241.667 226.833 OFFCURVE",
"239 222.5 CURVE SMOOTH",
"236.333 218.167 OFFCURVE",
"235 214.667 OFFCURVE",
"235 212 CURVE SMOOTH",
"235 201.333 OFFCURVE",
"254.333 192 OFFCURVE",
"265 192 CURVE SMOOTH",
"287 192 OFFCURVE",
"298 228.667 OFFCURVE",
"298 302 CURVE SMOOTH",
"298 324.667 OFFCURVE",
"295.667 345 OFFCURVE",
"291 363 CURVE SMOOTH",
"283.072 394.714 OFFCURVE",
"194.526 446 OFFCURVE",
"160 446 CURVE SMOOTH",
"118.667 446 OFFCURVE",
"84.667 406.667 OFFCURVE",
"58 328 CURVE SMOOTH",
"36 264.667 OFFCURVE",
"25 207.333 OFFCURVE",
"25 156 CURVE SMOOTH",
"25 60 OFFCURVE",
"69 -3.667 OFFCURVE",
"145 -17 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 934 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 934 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 932 24 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 24 106 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 24 121 24 137 24 153 24 169 24 185 24 201 24 217 24 233 24 249 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 24 25 24 41 24 57 24 73 24 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 31 22 31 38 31 54 31 70 31 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 31 101 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 73 106 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 73 25 73 41 73 57 73 73 73 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
7 930 26 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 364;
}
);
note = esDescenderCyrillic;
unicode = 04AB;
},
{
glyphname = UStraightCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"455 685.667 OFFCURVE",
"440.667 710 OFFCURVE",
"422 710 CURVE SMOOTH",
"414 710 OFFCURVE",
"403.333 703.333 OFFCURVE",
"390 690 CURVE",
"402.667 684 OFFCURVE",
"409 672.667 OFFCURVE",
"409 656 CURVE SMOOTH",
"409 609.333 OFFCURVE",
"396.333 549 OFFCURVE",
"371 475 CURVE SMOOTH",
"335.957 374.25 OFFCURVE",
"272.151 265 OFFCURVE",
"230 265 CURVE SMOOTH",
"206.667 265 OFFCURVE",
"177.667 321 OFFCURVE",
"143 433 CURVE SMOOTH",
"120.333 505 OFFCURVE",
"115 571.667 OFFCURVE",
"115 653 CURVE SMOOTH",
"115 669 OFFCURVE",
"92.667 683 OFFCURVE",
"70 683 CURVE SMOOTH",
"55.355 683 OFFCURVE",
"21 670.836 OFFCURVE",
"21 660 CURVE SMOOTH",
"21 658 OFFCURVE",
"22.833 655.667 OFFCURVE",
"26.5 653 CURVE SMOOTH",
"30.167 650.333 OFFCURVE",
"32 648.667 OFFCURVE",
"32 648 CURVE",
"41.333 626.667 OFFCURVE",
"48.333 609.667 OFFCURVE",
"51 595 CURVE SMOOTH",
"62.333 540.333 OFFCURVE",
"72 496.667 OFFCURVE",
"80 464 CURVE SMOOTH",
"88 431.333 OFFCURVE",
"93.667 409.333 OFFCURVE",
"97 398 CURVE SMOOTH",
"114.333 338 OFFCURVE",
"131.667 295 OFFCURVE",
"149 269 CURVE SMOOTH",
"166.333 243 OFFCURVE",
"185.333 228 OFFCURVE",
"206 224 CURVE",
"205.333 212.667 OFFCURVE",
"205 201.333 OFFCURVE",
"205 190 CURVE SMOOTH",
"205 178.667 OFFCURVE",
"205 167.333 OFFCURVE",
"205 156 CURVE SMOOTH",
"205 81.573 OFFCURVE",
"208.085 -10 OFFCURVE",
"261 -10 CURVE SMOOTH",
"267.667 -10 OFFCURVE",
"277.667 -6 OFFCURVE",
"291 2 CURVE",
"280.333 17.333 OFFCURVE",
"273.167 41.667 OFFCURVE",
"269.5 75 CURVE SMOOTH",
"265.833 108.333 OFFCURVE",
"264 156.667 OFFCURVE",
"264 220 CURVE",
"294.667 224.667 OFFCURVE",
"329 267.333 OFFCURVE",
"367 348 CURVE SMOOTH",
"437.667 497.333 OFFCURVE",
"455 609.667 OFFCURVE",
"455 667 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 50 106 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 50 25 50 41 50 57 50 73 50 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
52 15 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
52 10 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 468;
}
);
note = UStraightCyrillic;
unicode = 04AE;
},
{
glyphname = uStraightCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"319.667 419.333 OFFCURVE",
"311 430 OFFCURVE",
"295 430 CURVE SMOOTH",
"285.667 430 OFFCURVE",
"269 418 OFFCURVE",
"269 410 CURVE SMOOTH",
"269 356.667 OFFCURVE",
"261.667 292 OFFCURVE",
"247 212 CURVE SMOOTH",
"227 107.333 OFFCURVE",
"204.333 55 OFFCURVE",
"179 55 CURVE SMOOTH",
"171 55 OFFCURVE",
"161.667 66.333 OFFCURVE",
"151 89 CURVE SMOOTH",
"111.976 169.649 OFFCURVE",
"75 297.636 OFFCURVE",
"75 376 CURVE SMOOTH",
"75 390 OFFCURVE",
"76.333 401.333 OFFCURVE",
"79 410 CURVE",
"61.667 423.333 OFFCURVE",
"49.667 430 OFFCURVE",
"43 430 CURVE SMOOTH",
"32.333 430 OFFCURVE",
"18 415.667 OFFCURVE",
"18 405 CURVE",
"16.667 367.667 OFFCURVE",
"21.333 332.667 OFFCURVE",
"28 302 CURVE SMOOTH",
"54.512 169.439 OFFCURVE",
"104.834 26.175 OFFCURVE",
"163 0 CURVE",
"163 -65.515 OFFCURVE",
"162.896 -144.713 OFFCURVE",
"164 -169 CURVE SMOOTH",
"164.887 -188.516 OFFCURVE",
"167.252 -212.009 OFFCURVE",
"169 -219 CURVE",
"176.187 -264.518 OFFCURVE",
"183.445 -272 OFFCURVE",
"213 -272 CURVE SMOOTH",
"230.333 -272 OFFCURVE",
"239 -269.667 OFFCURVE",
"239 -255 CURVE SMOOTH",
"239 -253.667 OFFCURVE",
"238 -251.167 OFFCURVE",
"236 -247.5 CURVE SMOOTH",
"234 -243.833 OFFCURVE",
"232 -239 OFFCURVE",
"230 -233 CURVE SMOOTH",
"211.333 -175.667 OFFCURVE",
"208 -111.667 OFFCURVE",
"208 -1 CURVE",
"234 14.333 OFFCURVE",
"259.667 68.333 OFFCURVE",
"285 161 CURVE SMOOTH",
"309 249 OFFCURVE",
"322 319 OFFCURVE",
"322 375 CURVE SMOOTH",
"322 379 OFFCURVE",
"321.833 383 OFFCURVE",
"321.5 387 CURVE SMOOTH",
"321.167 391 OFFCURVE",
"321 394.667 OFFCURVE",
"321 398 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 934 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 932 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 933 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 27 106 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 27 25 27 41 27 57 27 73 27 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 42 22 42 38 42 54 42 70 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 42 101 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 54 106 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 54 25 54 41 54 57 54 73 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 937 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 353;
}
);
note = uStraightCyrillic;
unicode = 04AF;
},
{
glyphname = UStraightStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"420 195.667 OFFCURVE",
"386 210 OFFCURVE",
"358 210 CURVE SMOOTH",
"344 210 OFFCURVE",
"330 209.833 OFFCURVE",
"316 209.5 CURVE SMOOTH",
"302 209.167 OFFCURVE",
"288 209 OFFCURVE",
"274 209 CURVE",
"274 220 LINE",
"304.667 224.667 OFFCURVE",
"339 267.333 OFFCURVE",
"377 348 CURVE SMOOTH",
"447.667 497.333 OFFCURVE",
"465 609.667 OFFCURVE",
"465 667 CURVE SMOOTH",
"465 685.667 OFFCURVE",
"450.667 710 OFFCURVE",
"432 710 CURVE SMOOTH",
"424 710 OFFCURVE",
"413.333 703.333 OFFCURVE",
"400 690 CURVE",
"412.667 684 OFFCURVE",
"419 672.667 OFFCURVE",
"419 656 CURVE SMOOTH",
"419 609.333 OFFCURVE",
"406.333 549 OFFCURVE",
"381 475 CURVE SMOOTH",
"345.957 374.25 OFFCURVE",
"282.151 265 OFFCURVE",
"240 265 CURVE SMOOTH",
"216.667 265 OFFCURVE",
"187.667 321 OFFCURVE",
"153 433 CURVE SMOOTH",
"130.333 505 OFFCURVE",
"125 571.667 OFFCURVE",
"125 653 CURVE SMOOTH",
"125 669 OFFCURVE",
"102.667 683 OFFCURVE",
"80 683 CURVE SMOOTH",
"65.355 683 OFFCURVE",
"31 670.836 OFFCURVE",
"31 660 CURVE SMOOTH",
"31 658 OFFCURVE",
"32.833 655.667 OFFCURVE",
"36.5 653 CURVE SMOOTH",
"40.167 650.333 OFFCURVE",
"42 648.667 OFFCURVE",
"42 648 CURVE",
"51.333 626.667 OFFCURVE",
"58.333 609.667 OFFCURVE",
"61 595 CURVE SMOOTH",
"72.333 540.333 OFFCURVE",
"82 496.667 OFFCURVE",
"90 464 CURVE SMOOTH",
"98 431.333 OFFCURVE",
"103.667 409.333 OFFCURVE",
"107 398 CURVE SMOOTH",
"124.333 338 OFFCURVE",
"141.667 295 OFFCURVE",
"159 269 CURVE SMOOTH",
"176.333 243 OFFCURVE",
"195.333 228 OFFCURVE",
"216 224 CURVE",
"216 220.667 OFFCURVE",
"215.833 217.667 OFFCURVE",
"215.5 215 CURVE SMOOTH",
"215.167 212.333 OFFCURVE",
"215 209.667 OFFCURVE",
"215 207 CURVE",
"168.333 204.333 OFFCURVE",
"121 201.333 OFFCURVE",
"73 196 CURVE",
"68.333 196 OFFCURVE",
"66 193.667 OFFCURVE",
"66 189 CURVE SMOOTH",
"66 170.692 OFFCURVE",
"71.781 133 OFFCURVE",
"92 133 CURVE SMOOTH",
"102.667 133 OFFCURVE",
"112.833 136.5 OFFCURVE",
"122.5 143.5 CURVE SMOOTH",
"132.167 150.5 OFFCURVE",
"143.333 155 OFFCURVE",
"156 157 CURVE SMOOTH",
"170.667 159.667 OFFCURVE",
"191 160.667 OFFCURVE",
"215 162 CURVE",
"215 156 LINE SMOOTH",
"215 81.573 OFFCURVE",
"218.085 -10 OFFCURVE",
"271 -10 CURVE SMOOTH",
"277.667 -10 OFFCURVE",
"287.667 -6 OFFCURVE",
"301 2 CURVE",
"291.667 14.667 OFFCURVE",
"285.167 33.5 OFFCURVE",
"281.5 58.5 CURVE SMOOTH",
"277.833 83.5 OFFCURVE",
"275.333 118 OFFCURVE",
"274 162 CURVE",
"302 161.333 OFFCURVE",
"324.5 160.167 OFFCURVE",
"341.5 158.5 CURVE SMOOTH",
"358.5 156.833 OFFCURVE",
"370.667 154.667 OFFCURVE",
"378 152 CURVE SMOOTH",
"381.333 150.667 OFFCURVE",
"385.833 148.5 OFFCURVE",
"391.5 145.5 CURVE SMOOTH",
"397.167 142.5 OFFCURVE",
"401 141 OFFCURVE",
"403 141 CURVE SMOOTH",
"417.667 141 OFFCURVE",
"420 146.333 OFFCURVE",
"420 169 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 71 106 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 71 25 71 41 71 57 71 73 71 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
73 20 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
87 931 26 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
64 20 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
73 14 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 468;
}
);
note = UStraightStrokeCyrillic;
unicode = 04B0;
},
{
glyphname = uStraightStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"365 -31.333 OFFCURVE",
"331 -17 OFFCURVE",
"303 -17 CURVE SMOOTH",
"287.667 -17 OFFCURVE",
"272.333 -17 OFFCURVE",
"257 -17 CURVE SMOOTH",
"241.667 -17 OFFCURVE",
"226.333 -17.333 OFFCURVE",
"211 -18 CURVE",
"211 -1 LINE",
"237 14.333 OFFCURVE",
"262.667 68.333 OFFCURVE",
"288 161 CURVE SMOOTH",
"312 249 OFFCURVE",
"325 319 OFFCURVE",
"325 375 CURVE SMOOTH",
"325 409.667 OFFCURVE",
"320.667 430 OFFCURVE",
"298 430 CURVE SMOOTH",
"288.667 430 OFFCURVE",
"272 418 OFFCURVE",
"272 410 CURVE SMOOTH",
"272 356.667 OFFCURVE",
"264.667 292 OFFCURVE",
"250 212 CURVE SMOOTH",
"230 107.333 OFFCURVE",
"207.333 55 OFFCURVE",
"182 55 CURVE SMOOTH",
"174 55 OFFCURVE",
"164.667 66.333 OFFCURVE",
"154 89 CURVE SMOOTH",
"114.976 169.649 OFFCURVE",
"78 297.636 OFFCURVE",
"78 376 CURVE SMOOTH",
"78 390 OFFCURVE",
"79.333 401.333 OFFCURVE",
"82 410 CURVE",
"64.667 423.333 OFFCURVE",
"52.667 430 OFFCURVE",
"46 430 CURVE SMOOTH",
"35.333 430 OFFCURVE",
"21 415.667 OFFCURVE",
"21 405 CURVE",
"19.667 367.667 OFFCURVE",
"24.333 332.667 OFFCURVE",
"31 302 CURVE SMOOTH",
"57.512 169.439 OFFCURVE",
"107.834 26.175 OFFCURVE",
"166 0 CURVE",
"166 -19 LINE",
"117.333 -21 OFFCURVE",
"68 -25 OFFCURVE",
"18 -31 CURVE",
"13.333 -31 OFFCURVE",
"11 -33.333 OFFCURVE",
"11 -38 CURVE SMOOTH",
"11 -56.308 OFFCURVE",
"16.781 -94 OFFCURVE",
"37 -94 CURVE SMOOTH",
"47.667 -94 OFFCURVE",
"57.833 -90.5 OFFCURVE",
"67.5 -83.5 CURVE SMOOTH",
"77.167 -76.5 OFFCURVE",
"88.333 -72 OFFCURVE",
"101 -70 CURVE SMOOTH",
"117 -67.333 OFFCURVE",
"139.333 -65 OFFCURVE",
"166 -65 CURVE",
"166 -132.275 OFFCURVE",
"165.954 -197.839 OFFCURVE",
"172 -219 CURVE",
"179.187 -264.518 OFFCURVE",
"186.445 -272 OFFCURVE",
"216 -272 CURVE SMOOTH",
"233.333 -272 OFFCURVE",
"242 -269.667 OFFCURVE",
"242 -255 CURVE SMOOTH",
"242 -253.667 OFFCURVE",
"241 -251.167 OFFCURVE",
"239 -247.5 CURVE SMOOTH",
"237 -243.833 OFFCURVE",
"235 -239 OFFCURVE",
"233 -233 CURVE SMOOTH",
"218.333 -185 OFFCURVE",
"213.667 -137 OFFCURVE",
"211 -65 CURVE",
"272.333 -65 OFFCURVE",
"309.667 -68.333 OFFCURVE",
"323 -75 CURVE",
"326.333 -76.333 OFFCURVE",
"330.833 -78.5 OFFCURVE",
"336.5 -81.5 CURVE SMOOTH",
"342.167 -84.5 OFFCURVE",
"346 -86 OFFCURVE",
"348 -86 CURVE SMOOTH",
"362.667 -86 OFFCURVE",
"365 -80.667 OFFCURVE",
"365 -58 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
82 38 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 933 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
51 38 82 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
58 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 70 106 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 70 25 70 41 70 57 70 73 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 937 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
65 27 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
85 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 353;
}
);
note = uStraightStrokeCyrillic;
unicode = 04B1;
},
{
glyphname = HaDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"369.667 140.333 OFFCURVE",
"443.667 46 OFFCURVE",
"491 20 CURVE SMOOTH",
"499.667 15.333 OFFCURVE",
"504 8.333 OFFCURVE",
"504 -1 CURVE SMOOTH",
"504 -61 OFFCURVE",
"478 -100.667 OFFCURVE",
"438 -146 CURVE",
"435.333 -148.667 OFFCURVE",
"434 -152 OFFCURVE",
"434 -156 CURVE SMOOTH",
"434 -168 OFFCURVE",
"453.333 -173 OFFCURVE",
"464 -173 CURVE SMOOTH",
"508.96 -173 OFFCURVE",
"539.899 -115.629 OFFCURVE",
"551 -74 CURVE SMOOTH",
"559 -46 OFFCURVE",
"563 -19.333 OFFCURVE",
"563 14 CURVE SMOOTH",
"563 40 OFFCURVE",
"553.333 53 OFFCURVE",
"534 53 CURVE SMOOTH",
"495.666 53 OFFCURVE",
"456.65 106.597 OFFCURVE",
"403 186 CURVE SMOOTH",
"352.333 259.333 OFFCURVE",
"318.333 316 OFFCURVE",
"297 356 CURVE",
"486 660 LINE",
"484.667 674.667 OFFCURVE",
"473.667 691 OFFCURVE",
"459 691 CURVE SMOOTH",
"424.441 691 OFFCURVE",
"400.034 623.069 OFFCURVE",
"387 597 CURVE",
"336.333 509 OFFCURVE",
"296.667 447.333 OFFCURVE",
"270 406 CURVE",
"194 525 LINE",
"165.333 577.667 OFFCURVE",
"151 621 OFFCURVE",
"151 655 CURVE",
"148 661 LINE",
"121.333 672.333 OFFCURVE",
"103.667 678 OFFCURVE",
"95 678 CURVE SMOOTH",
"71.667 678 OFFCURVE",
"60 667 OFFCURVE",
"60 645 CURVE SMOOTH",
"60 627 OFFCURVE",
"89.333 576.667 OFFCURVE",
"148 494 CURVE SMOOTH",
"206.667 411.333 OFFCURVE",
"236 364.333 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 349 OFFCURVE",
"207.333 299.333 OFFCURVE",
"150 204 CURVE SMOOTH",
"121.333 156 OFFCURVE",
"98.667 119 OFFCURVE",
"82 93 CURVE SMOOTH",
"65.333 67 OFFCURVE",
"54.333 51.333 OFFCURVE",
"49 46 CURVE SMOOTH",
"30.333 27.333 OFFCURVE",
"15.667 12.333 OFFCURVE",
"5 3 CURVE",
"27.667 -23.667 OFFCURVE",
"46.333 -37 OFFCURVE",
"61 -37 CURVE SMOOTH",
"71.667 -37 OFFCURVE",
"82.333 -32.667 OFFCURVE",
"93 -24 CURVE",
"105 16 OFFCURVE",
"122 60.667 OFFCURVE",
"150 110 CURVE SMOOTH",
"260 300 LINE",
"262 302 OFFCURVE",
"264.333 303 OFFCURVE",
"267 303 CURVE SMOOTH",
"269 303 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 69 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 69 106 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 69 25 69 41 69 57 69 73 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 61 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
31 61 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 568;
}
);
note = HaDescenderCyrillic;
unicode = 04B2;
},
{
glyphname = haDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"237.667 96 OFFCURVE",
"266 57 OFFCURVE",
"286 33 CURVE SMOOTH",
"301.333 14.6 OFFCURVE",
"317.665 0.876 OFFCURVE",
"328 -3 CURVE SMOOTH",
"338.667 -7 OFFCURVE",
"345 -10.667 OFFCURVE",
"345 -24 CURVE SMOOTH",
"345 -85.521 OFFCURVE",
"320.346 -120.585 OFFCURVE",
"280 -169 CURVE",
"277.333 -171.667 OFFCURVE",
"276 -175 OFFCURVE",
"276 -179 CURVE SMOOTH",
"276 -191 OFFCURVE",
"295.333 -196 OFFCURVE",
"306 -196 CURVE SMOOTH",
"350.96 -196 OFFCURVE",
"381.899 -138.629 OFFCURVE",
"393 -97 CURVE SMOOTH",
"401 -69 OFFCURVE",
"405 -42.333 OFFCURVE",
"405 -9 CURVE SMOOTH",
"405 40.55 OFFCURVE",
"383.144 12.624 OFFCURVE",
"353 39 CURVE",
"336.333 52.333 OFFCURVE",
"315 76 OFFCURVE",
"289 110 CURVE SMOOTH",
"245.667 165.333 OFFCURVE",
"224 199.333 OFFCURVE",
"224 212 CURVE SMOOTH",
"224 224 OFFCURVE",
"249.333 256.333 OFFCURVE",
"300 309 CURVE SMOOTH",
"350.667 361.667 OFFCURVE",
"376 391 OFFCURVE",
"376 397 CURVE SMOOTH",
"376 411.667 OFFCURVE",
"363.667 427 OFFCURVE",
"349 427 CURVE SMOOTH",
"339 427 OFFCURVE",
"313.667 401.667 OFFCURVE",
"273 351 CURVE SMOOTH",
"197 256 LINE",
"178.333 286.667 OFFCURVE",
"163.667 317.667 OFFCURVE",
"149 351 CURVE SMOOTH",
"128 398 LINE",
"119.333 408.667 OFFCURVE",
"109 414 OFFCURVE",
"97 414 CURVE SMOOTH",
"76.333 414 OFFCURVE",
"62.667 405 OFFCURVE",
"56 387 CURVE",
"64.667 375.667 OFFCURVE",
"84.667 345.667 OFFCURVE",
"116 297 CURVE SMOOTH",
"148 245 OFFCURVE",
"164 215.667 OFFCURVE",
"164 209 CURVE SMOOTH",
"164 205 OFFCURVE",
"139 168.667 OFFCURVE",
"89 100 CURVE SMOOTH",
"39.667 30.667 OFFCURVE",
"15 -9.667 OFFCURVE",
"15 -21 CURVE SMOOTH",
"15 -43 OFFCURVE",
"28.333 -57 OFFCURVE",
"55 -63 CURVE",
"108.333 50.333 OFFCURVE",
"153.667 125.333 OFFCURVE",
"191 164 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 934 58 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 58 25 58 41 58 57 58 73 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
21 48 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 410;
}
);
note = haDescenderCyrillic;
unicode = 04B3;
},
{
glyphname = CheDescenderCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"33 644 LINE SMOOTH",
"33 532 OFFCURVE",
"32.167 443.333 OFFCURVE",
"43.5 378 CURVE SMOOTH",
"54.833 312.667 OFFCURVE",
"76.333 270 OFFCURVE",
"123 250 CURVE SMOOTH",
"151 237.333 OFFCURVE",
"176.667 231 OFFCURVE",
"200 231 CURVE SMOOTH",
"223.659 231 OFFCURVE",
"292.538 255.538 OFFCURVE",
"315 278 CURVE",
"317.667 240.667 OFFCURVE",
"318 203.667 OFFCURVE",
"318 181 CURVE SMOOTH",
"318 173.667 OFFCURVE",
"317.833 167.333 OFFCURVE",
"317.5 162 CURVE SMOOTH",
"317.167 156.667 OFFCURVE",
"317 152.333 OFFCURVE",
"317 149 CURVE SMOOTH",
"317 138 LINE",
"314.333 72.667 OFFCURVE",
"310.833 37.667 OFFCURVE",
"307.5 15 CURVE SMOOTH",
"305.262 -0.221 OFFCURVE",
"302 -21.107 OFFCURVE",
"302 -30 CURVE SMOOTH",
"302 -36.667 OFFCURVE",
"311.667 -40 OFFCURVE",
"325 -40 CURVE SMOOTH",
"330.333 -40 OFFCURVE",
"335.333 -39.167 OFFCURVE",
"340 -37.5 CURVE SMOOTH",
"344.667 -35.833 OFFCURVE",
"349.667 -35 OFFCURVE",
"355 -35 CURVE SMOOTH",
"361 -35 OFFCURVE",
"364 -38 OFFCURVE",
"364 -44 CURVE SMOOTH",
"364 -96 OFFCURVE",
"336 -138 OFFCURVE",
"300 -178 CURVE",
"297.333 -180.667 OFFCURVE",
"296 -184 OFFCURVE",
"296 -188 CURVE SMOOTH",
"296 -200 OFFCURVE",
"315.333 -205 OFFCURVE",
"326 -205 CURVE SMOOTH",
"370.96 -205 OFFCURVE",
"401.899 -147.629 OFFCURVE",
"413 -106 CURVE SMOOTH",
"421 -78 OFFCURVE",
"425 -51.333 OFFCURVE",
"425 -18 CURVE SMOOTH",
"425 8 OFFCURVE",
"415.333 21 OFFCURVE",
"396 21 CURVE SMOOTH",
"392 21 OFFCURVE",
"388.5 20.667 OFFCURVE",
"385.5 20 CURVE SMOOTH",
"382.5 19.333 OFFCURVE",
"380 19 OFFCURVE",
"378 19 CURVE SMOOTH",
"374 19 OFFCURVE",
"372 22 OFFCURVE",
"372 28 CURVE SMOOTH",
"374.667 120 OFFCURVE",
"375 208 OFFCURVE",
"375 300 CURVE SMOOTH",
"375 420 LINE",
"375 504 LINE SMOOTH",
"375 578.616 OFFCURVE",
"386.903 682 OFFCURVE",
"331 682 CURVE SMOOTH",
"315 682 OFFCURVE",
"307 676.667 OFFCURVE",
"307 666 CURVE SMOOTH",
"307 651.526 OFFCURVE",
"311.155 618.141 OFFCURVE",
"313 596 CURVE SMOOTH",
"315.667 564 OFFCURVE",
"319 520.333 OFFCURVE",
"319 455 CURVE SMOOTH",
"319 405.667 OFFCURVE",
"313.667 360.333 OFFCURVE",
"291 319 CURVE SMOOTH",
"276.332 292.109 OFFCURVE",
"197.941 270 OFFCURVE",
"173 270 CURVE SMOOTH",
"144.333 270 OFFCURVE",
"124.333 292 OFFCURVE",
"113 336 CURVE SMOOTH",
"101.667 380 OFFCURVE",
"96 445 OFFCURVE",
"96 531 CURVE SMOOTH",
"96 548.333 OFFCURVE",
"96 566.167 OFFCURVE",
"96 584.5 CURVE SMOOTH",
"96 602.833 OFFCURVE",
"96.333 626.333 OFFCURVE",
"97 655 CURVE",
"89 664.333 OFFCURVE",
"77.667 669 OFFCURVE",
"71 669 CURVE SMOOTH",
"56.333 669 OFFCURVE",
"38.333 666.333 OFFCURVE",
"33 661 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 934 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
60 68 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 60 106 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 60 25 60 41 60 57 60 73 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
44 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
12 928 85 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
80 52 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 430;
}
);
note = CheDescenderCyrillic;
unicode = 04B6;
},
{
glyphname = cheDescenderCyrillic;
lastChange = "2019-03-04 00:18:58 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"14 393 LINE SMOOTH",
"14 261 OFFCURVE",
"8 193 OFFCURVE",
"97 154 CURVE SMOOTH",
"125 141 OFFCURVE",
"148 135 OFFCURVE",
"167 135 CURVE SMOOTH",
"188 135 OFFCURVE",
"223 157 OFFCURVE",
"246 180 CURVE",
"247 145 OFFCURVE",
"248 109 OFFCURVE",
"248 88 CURVE SMOOTH",
"248 67 OFFCURVE",
"239 -7 OFFCURVE",
"239 -11 CURVE SMOOTH",
"239 -18 OFFCURVE",
"248 -20 OFFCURVE",
"260 -20 CURVE SMOOTH",
"264 -20 OFFCURVE",
"269 -19 OFFCURVE",
"275 -18 CURVE SMOOTH",
"280 -17 OFFCURVE",
"285 -16 OFFCURVE",
"288 -16 CURVE SMOOTH",
"293 -16 OFFCURVE",
"296 -19 OFFCURVE",
"296 -25 CURVE SMOOTH",
"296 -72 OFFCURVE",
"266 -112 OFFCURVE",
"233 -151 CURVE",
"230 -154 OFFCURVE",
"229 -157 OFFCURVE",
"229 -161 CURVE SMOOTH",
"229 -173 OFFCURVE",
"248 -178 OFFCURVE",
"259 -178 CURVE SMOOTH",
"304 -178 OFFCURVE",
"335 -121 OFFCURVE",
"346 -79 CURVE SMOOTH",
"354 -51 OFFCURVE",
"358 -24 OFFCURVE",
"358 9 CURVE SMOOTH",
"358 35 OFFCURVE",
"348 48 OFFCURVE",
"329 48 CURVE SMOOTH",
"324 48 OFFCURVE",
"319 47 OFFCURVE",
"315 46 CURVE SMOOTH",
"311 44 OFFCURVE",
"308 43 OFFCURVE",
"306 43 CURVE SMOOTH",
"303 43 OFFCURVE",
"302 50 OFFCURVE",
"302 64 CURVE SMOOTH",
"301 78 OFFCURVE",
"301 96 OFFCURVE",
"301 118 CURVE SMOOTH",
"301 202 LINE SMOOTH",
"301 264 OFFCURVE",
"301 340 OFFCURVE",
"301 364 CURVE SMOOTH",
"300 382 OFFCURVE",
"297 405 OFFCURVE",
"295 412 CURVE",
"289 431 OFFCURVE",
"277 440 OFFCURVE",
"260 440 CURVE SMOOTH",
"245 440 OFFCURVE",
"238 435 OFFCURVE",
"238 425 CURVE SMOOTH",
"238 402 OFFCURVE",
"249 386 OFFCURVE",
"249 349 CURVE SMOOTH",
"249 301 OFFCURVE",
"246 259 OFFCURVE",
"223 219 CURVE",
"211 195 OFFCURVE",
"164 174 OFFCURVE",
"143 174 CURVE SMOOTH",
"90 174 OFFCURVE",
"70 225 OFFCURVE",
"70 286 CURVE SMOOTH",
"70 302 OFFCURVE",
"70 319 OFFCURVE",
"70 336 CURVE SMOOTH",
"70 353 OFFCURVE",
"70 376 OFFCURVE",
"71 404 CURVE",
"67 412 OFFCURVE",
"54 418 OFFCURVE",
"43 418 CURVE SMOOTH",
"28 418 OFFCURVE",
"19 415 OFFCURVE",
"14 409 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
73 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
68 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
13 928 79 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 39 23 39 39 39 55 39 71 39 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 39 102 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
76 52 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 362;
}
);
note = cheDescenderCyrillic;
unicode = 04B7;
},
{
glyphname = CheStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"242 482.667 OFFCURVE",
"216 496 OFFCURVE",
"200 496 CURVE SMOOTH",
"192 496 OFFCURVE",
"183.667 493.667 OFFCURVE",
"175 489 CURVE",
"175 270 LINE",
"173 270 LINE SMOOTH",
"144.333 270 OFFCURVE",
"124.333 292 OFFCURVE",
"113 336 CURVE SMOOTH",
"101.667 380 OFFCURVE",
"96 445 OFFCURVE",
"96 531 CURVE SMOOTH",
"96 548.333 OFFCURVE",
"96 566.167 OFFCURVE",
"96 584.5 CURVE SMOOTH",
"96 602.833 OFFCURVE",
"96.333 626.333 OFFCURVE",
"97 655 CURVE",
"89 664.333 OFFCURVE",
"77.667 669 OFFCURVE",
"71 669 CURVE SMOOTH",
"56.333 669 OFFCURVE",
"38.333 666.333 OFFCURVE",
"33 661 CURVE",
"33 644 LINE SMOOTH",
"33 510.667 OFFCURVE",
"32.667 414.5 OFFCURVE",
"50 348.5 CURVE SMOOTH",
"67.333 282.5 OFFCURVE",
"103 246.333 OFFCURVE",
"175 233 CURVE",
"175 122 LINE SMOOTH",
"175 90.667 OFFCURVE",
"191.333 75 OFFCURVE",
"224 75 CURVE SMOOTH",
"228 75 OFFCURVE",
"231.667 77.667 OFFCURVE",
"235 83 CURVE",
"229 107.667 OFFCURVE",
"226 127.667 OFFCURVE",
"226 143 CURVE SMOOTH",
"226 235 LINE",
"255.333 243 OFFCURVE",
"296.333 259.333 OFFCURVE",
"315 278 CURVE",
"317.667 240.667 OFFCURVE",
"318 203.667 OFFCURVE",
"318 181 CURVE SMOOTH",
"318 173.667 OFFCURVE",
"317.833 167.333 OFFCURVE",
"317.5 162 CURVE SMOOTH",
"317.167 156.667 OFFCURVE",
"317 152.333 OFFCURVE",
"317 149 CURVE SMOOTH",
"317 138 LINE",
"314.333 72.667 OFFCURVE",
"310.833 37.667 OFFCURVE",
"307.5 15 CURVE SMOOTH",
"305.262 -0.221 OFFCURVE",
"302 -21.107 OFFCURVE",
"302 -30 CURVE SMOOTH",
"302 -36.667 OFFCURVE",
"311.667 -40 OFFCURVE",
"325 -40 CURVE SMOOTH",
"347.667 -40 OFFCURVE",
"378 -30.667 OFFCURVE",
"378 -12 CURVE SMOOTH",
"378 -8.667 OFFCURVE",
"376.833 -5.833 OFFCURVE",
"374.5 -3.5 CURVE SMOOTH",
"372.167 -1.167 OFFCURVE",
"371 1.667 OFFCURVE",
"371 5 CURVE",
"375 105 OFFCURVE",
"375 200 OFFCURVE",
"375 300 CURVE SMOOTH",
"375 420 LINE",
"375 504 LINE SMOOTH",
"375 578.616 OFFCURVE",
"386.903 682 OFFCURVE",
"331 682 CURVE SMOOTH",
"315 682 OFFCURVE",
"307 676.667 OFFCURVE",
"307 666 CURVE SMOOTH",
"307 651.526 OFFCURVE",
"311.155 618.141 OFFCURVE",
"313 596 CURVE SMOOTH",
"315.667 564 OFFCURVE",
"319 520.333 OFFCURVE",
"319 455 CURVE SMOOTH",
"319 407 OFFCURVE",
"313.667 360.333 OFFCURVE",
"291 319 CURVE SMOOTH",
"281.667 303 OFFCURVE",
"252.667 289.333 OFFCURVE",
"226 280 CURVE",
"226 364 LINE SMOOTH",
"226 384.088 OFFCURVE",
"242 450.681 OFFCURVE",
"242 472 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 933 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
6 60 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 38 106 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 38 25 38 41 38 57 38 73 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
80 58 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
6 35 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
50 35 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 415;
}
);
note = CheStrokeCyrillic;
unicode = 04B8;
},
{
glyphname = cheStrokeCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"198 314.667 OFFCURVE",
"175 324 OFFCURVE",
"159 324 CURVE SMOOTH",
"153.667 324 OFFCURVE",
"146 322.333 OFFCURVE",
"136 319 CURVE",
"136 175 LINE",
"93.333 184.333 OFFCURVE",
"78 230 OFFCURVE",
"78 286 CURVE SMOOTH",
"78 302 OFFCURVE",
"78 318.667 OFFCURVE",
"78 336 CURVE SMOOTH",
"78 353.333 OFFCURVE",
"78.333 376 OFFCURVE",
"79 404 CURVE",
"75 412 OFFCURVE",
"61.667 418 OFFCURVE",
"51 418 CURVE SMOOTH",
"36.333 418 OFFCURVE",
"26.667 415 OFFCURVE",
"22 409 CURVE",
"22 393 LINE SMOOTH",
"22 242.195 OFFCURVE",
"17.058 177.142 OFFCURVE",
"136 142 CURVE",
"136 69 LINE SMOOTH",
"136 47.667 OFFCURVE",
"151 37 OFFCURVE",
"181 37 CURVE SMOOTH",
"184.333 37 OFFCURVE",
"187.667 38.667 OFFCURVE",
"191 42 CURVE",
"185.667 61.333 OFFCURVE",
"183 75 OFFCURVE",
"183 83 CURVE SMOOTH",
"183 136 LINE",
"204.333 140 OFFCURVE",
"232.667 160 OFFCURVE",
"254 180 CURVE",
"255.333 145.333 OFFCURVE",
"256 109.333 OFFCURVE",
"256 88 CURVE SMOOTH",
"256 67.151 OFFCURVE",
"247 -6.662 OFFCURVE",
"247 -11 CURVE SMOOTH",
"247 -17.667 OFFCURVE",
"256 -20 OFFCURVE",
"268 -20 CURVE SMOOTH",
"288 -20 OFFCURVE",
"317 -11.667 OFFCURVE",
"317 7 CURVE SMOOTH",
"317 10.333 OFFCURVE",
"316 13 OFFCURVE",
"314 15 CURVE SMOOTH",
"312 17 OFFCURVE",
"311 19.667 OFFCURVE",
"311 23 CURVE",
"309.667 34.333 OFFCURVE",
"309 46.833 OFFCURVE",
"309 60.5 CURVE SMOOTH",
"309 74.167 OFFCURVE",
"309 90.333 OFFCURVE",
"309 109 CURVE SMOOTH",
"309 202 LINE SMOOTH",
"309 264.058 OFFCURVE",
"309.058 339.525 OFFCURVE",
"308.5 363.5 CURVE SMOOTH",
"308.061 382.385 OFFCURVE",
"304.762 404.951 OFFCURVE",
"303 412 CURVE",
"297 430.667 OFFCURVE",
"285.333 440 OFFCURVE",
"268 440 CURVE SMOOTH",
"253.333 440 OFFCURVE",
"246 435 OFFCURVE",
"246 425 CURVE SMOOTH",
"246 402.346 OFFCURVE",
"257 386.435 OFFCURVE",
"257 349 CURVE SMOOTH",
"257 280.333 OFFCURVE",
"251.338 210.912 OFFCURVE",
"183 182 CURVE",
"183 234 LINE SMOOTH",
"183 242.571 OFFCURVE",
"198 299.429 OFFCURVE",
"198 308 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
71 934 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 932 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
6 62 29 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 35 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
46 35 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 342;
}
);
note = cheStrokeCyrillic;
unicode = 04B9;
},
{
glyphname = ShhaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"385 18 LINE SMOOTH",
"385 130 OFFCURVE",
"385.833 218.667 OFFCURVE",
"374.5 284 CURVE SMOOTH",
"363.167 349.333 OFFCURVE",
"340.333 392 OFFCURVE",
"295 412 CURVE SMOOTH",
"267 424.667 OFFCURVE",
"241.333 431 OFFCURVE",
"218 431 CURVE SMOOTH",
"194.341 431 OFFCURVE",
"125.462 406.462 OFFCURVE",
"103 384 CURVE",
"100.333 421.333 OFFCURVE",
"100 458.333 OFFCURVE",
"100 481 CURVE SMOOTH",
"100 513 LINE SMOOTH",
"100 518.333 OFFCURVE",
"100.333 522 OFFCURVE",
"101 524 CURVE",
"103.667 589.333 OFFCURVE",
"107.167 624.333 OFFCURVE",
"110.5 647 CURVE SMOOTH",
"112.738 662.221 OFFCURVE",
"116 683.107 OFFCURVE",
"116 692 CURVE SMOOTH",
"116 698.667 OFFCURVE",
"106.333 702 OFFCURVE",
"93 702 CURVE SMOOTH",
"70.333 702 OFFCURVE",
"40 692.667 OFFCURVE",
"40 674 CURVE SMOOTH",
"40 670.667 OFFCURVE",
"41.167 667.833 OFFCURVE",
"43.5 665.5 CURVE SMOOTH",
"45.833 663.167 OFFCURVE",
"47 660.333 OFFCURVE",
"47 657 CURVE",
"43 557 OFFCURVE",
"43 462 OFFCURVE",
"43 362 CURVE SMOOTH",
"43 242 LINE",
"43 157 LINE SMOOTH",
"43 82.699 OFFCURVE",
"31.054 -20 OFFCURVE",
"87 -20 CURVE SMOOTH",
"103 -20 OFFCURVE",
"111 -14.667 OFFCURVE",
"111 -4 CURVE SMOOTH",
"111 10.474 OFFCURVE",
"106.845 43.859 OFFCURVE",
"105 66 CURVE SMOOTH",
"102.333 98 OFFCURVE",
"99 140.333 OFFCURVE",
"99 207 CURVE SMOOTH",
"99 253.667 OFFCURVE",
"104.333 301.667 OFFCURVE",
"127 343 CURVE",
"142.859 369.431 OFFCURVE",
"217.929 392 OFFCURVE",
"245 392 CURVE SMOOTH",
"273.667 392 OFFCURVE",
"293.667 370 OFFCURVE",
"305 326 CURVE SMOOTH",
"316.333 282 OFFCURVE",
"322 217 OFFCURVE",
"322 131 CURVE SMOOTH",
"322 113.667 OFFCURVE",
"322 95.833 OFFCURVE",
"322 77.5 CURVE SMOOTH",
"322 59.167 OFFCURVE",
"321.667 35.667 OFFCURVE",
"321 7 CURVE",
"329 -2.333 OFFCURVE",
"340.333 -7 OFFCURVE",
"347 -7 CURVE SMOOTH",
"361.667 -7 OFFCURVE",
"379.667 -4.333 OFFCURVE",
"385 1 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 933 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 934 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 20 22 20 38 20 54 20 70 20 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 20 101 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
62 928 12 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
57 27 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 415;
}
);
note = ShhaCyrillic;
unicode = 04BA;
},
{
glyphname = shhaCyrillic;
layers = (
{
components = (
{
name = h;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
note = shhaCyrillic;
unicode = 04BB;
},
{
glyphname = palochkaCyrillic;
layers = (
{
components = (
{
name = l;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 124;
}
);
note = palochkaCyrillic;
unicode = 04C0;
},
{
glyphname = ZheBreveCyrillic;
layers = (
{
components = (
{
name = ZheCyrillic;
},
{
name = breve;
transform = "{1, 0, 0, 1, 307, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 852;
}
);
note = ZheBreveCyrillic;
unicode = 04C1;
},
{
glyphname = zheBreveCyrillic;
layers = (
{
components = (
{
name = zheCyrillic;
},
{
name = breve;
transform = "{1, 0, 0, 1, 171, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 634;
}
);
note = zheBreveCyrillic;
unicode = 04C2;
},
{
glyphname = ABreveCyrillic;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 167, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = ABreveCyrillic;
unicode = 04D0;
},
{
glyphname = aBreveCyrillic;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 63, -251}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aBreveCyrillic;
unicode = 04D1;
},
{
glyphname = ADiaeresisCyrillic;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 160, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = ADiaeresisCyrillic;
unicode = 04D2;
},
{
glyphname = aDiaeresisCyrillic;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 63, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = aDiaeresisCyrillic;
unicode = 04D3;
},
{
glyphname = ACyrillic_IeCyrillic;
layers = (
{
components = (
{
name = AE;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 856;
}
);
note = ACyrillic_IeCyrillic;
unicode = 04D4;
},
{
glyphname = aCyrillic_ieCyrillic;
layers = (
{
components = (
{
name = ae;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 594;
}
);
note = aCyrillic_ieCyrillic;
unicode = 04D5;
},
{
glyphname = IeBreveCyrillic;
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 107, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = IeBreveCyrillic;
unicode = 04D6;
},
{
glyphname = ieBreveCyrillic;
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 41, -250}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = ieBreveCyrillic;
unicode = 04D7;
},
{
glyphname = SchwaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"530 370.088 OFFCURVE",
"515.884 365.697 OFFCURVE",
"513 383 CURVE SMOOTH",
"489.583 552.123 OFFCURVE",
"396.968 684 OFFCURVE",
"249 684 CURVE SMOOTH",
"132.716 684 OFFCURVE",
"39 600.906 OFFCURVE",
"39 531 CURVE SMOOTH",
"39 515.667 OFFCURVE",
"45.333 508 OFFCURVE",
"58 508 CURVE SMOOTH",
"94.321 508 OFFCURVE",
"85.616 548.568 OFFCURVE",
"110 576 CURVE",
"143.333 610.667 OFFCURVE",
"185.667 634 OFFCURVE",
"247 634 CURVE SMOOTH",
"370.054 634 OFFCURVE",
"442.757 523.428 OFFCURVE",
"458 371 CURVE",
"458 357.667 OFFCURVE",
"458.667 355 OFFCURVE",
"436 355 CURVE SMOOTH",
"373.831 355 OFFCURVE",
"274.578 400 OFFCURVE",
"204 400 CURVE SMOOTH",
"102.667 400 OFFCURVE",
"44 349 OFFCURVE",
"44 241 CURVE SMOOTH",
"44 84.547 OFFCURVE",
"144.464 -28 OFFCURVE",
"278 -28 CURVE SMOOTH",
"327.333 -28 OFFCURVE",
"363.667 -11.333 OFFCURVE",
"417 42 CURVE SMOOTH",
"489 114 OFFCURVE",
"515.667 195.333 OFFCURVE",
"517 314 CURVE SMOOTH",
"517 318 OFFCURVE",
"519.167 322.333 OFFCURVE",
"523.5 327 CURVE SMOOTH",
"527.833 331.667 OFFCURVE",
"530 337.333 OFFCURVE",
"530 344 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181.837 30 OFFCURVE",
"97 115.807 OFFCURVE",
"97 236 CURVE SMOOTH",
"97 310.667 OFFCURVE",
"138 348 OFFCURVE",
"220 348 CURVE SMOOTH",
"270.667 348 OFFCURVE",
"343 336.333 OFFCURVE",
"451 303 CURVE SMOOTH",
"457.667 301 OFFCURVE",
"461 296.333 OFFCURVE",
"461 289 CURVE",
"455.771 155.658 OFFCURVE",
"398.459 30 OFFCURVE",
"285 30 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 933 14 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 934 60 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 60 106 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 60 25 60 41 60 57 60 73 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 67 22 67 38 67 54 67 70 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 67 101 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
55 931 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 931 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 931 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 565;
}
);
note = SchwaCyrillic;
unicode = 04D8;
},
{
glyphname = schwaCyrillic;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"16 301.333 OFFCURVE",
"23.667 292 OFFCURVE",
"39 292 CURVE SMOOTH",
"43 292 OFFCURVE",
"51.333 300.333 OFFCURVE",
"64 317 CURVE SMOOTH",
"104 370.333 OFFCURVE",
"137.333 390 OFFCURVE",
"180 390 CURVE SMOOTH",
"230.667 390 OFFCURVE",
"256 351.667 OFFCURVE",
"256 275 CURVE SMOOTH",
"256 269.667 OFFCURVE",
"251.667 267 OFFCURVE",
"243 267 CURVE SMOOTH",
"232.779 267 OFFCURVE",
"203.272 287 OFFCURVE",
"191 287 CURVE SMOOTH",
"108.608 287 OFFCURVE",
"28 215.267 OFFCURVE",
"28 133 CURVE SMOOTH",
"28 69.702 OFFCURVE",
"129.105 -12 OFFCURVE",
"190 -12 CURVE SMOOTH",
"227.333 -12 OFFCURVE",
"258 25.333 OFFCURVE",
"282 100 CURVE SMOOTH",
"300 156.667 OFFCURVE",
"309 210.333 OFFCURVE",
"309 261 CURVE SMOOTH",
"309 374.333 OFFCURVE",
"264.333 431 OFFCURVE",
"175 431 CURVE SMOOTH",
"112.491 431 OFFCURVE",
"16 375.868 OFFCURVE",
"16 320 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"85 192.306 OFFCURVE",
"124.743 245 OFFCURVE",
"178 245 CURVE SMOOTH",
"216.667 245 OFFCURVE",
"244 215.667 OFFCURVE",
"244 177 CURVE SMOOTH",
"244 115.256 OFFCURVE",
"207.994 40 OFFCURVE",
"158 40 CURVE SMOOTH",
"113.878 40 OFFCURVE",
"85 90.497 OFFCURVE",
"85 136 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
7 934 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 37 22 37 38 37 54 37 70 37 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 37 101 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 47 106 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 47 121 47 137 47 153 47 169 47 185 47 201 47 217 47 233 47 249 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 47 25 47 41 47 57 47 73 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
5 928 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 928 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 42 119 42 135 42 151 42 167 42 183 42 199 42 215 42 231 42 247 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 42 23 42 39 42 55 42 71 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 42 102 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 338;
}
);
note = schwaCyrillic;
unicode = 04D9;
},
{
glyphname = ZheDiaeresisCyrillic;
layers = (
{
components = (
{
name = ZheCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 314, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 852;
}
);
note = ZheDiaeresisCyrillic;
unicode = 04DC;
},
{
glyphname = zheDiaeresisCyrillic;
layers = (
{
components = (
{
name = zheCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 175, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 634;
}
);
note = zheDiaeresisCyrillic;
unicode = 04DD;
},
{
glyphname = ZeDiaeresisCyrillic;
layers = (
{
components = (
{
name = ZeCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 157, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 555;
}
);
note = ZeDiaeresisCyrillic;
unicode = 04DE;
},
{
glyphname = zeDiaeresisCyrillic;
layers = (
{
components = (
{
name = zeCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 81, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 407;
}
);
note = zeDiaeresisCyrillic;
unicode = 04DF;
},
{
glyphname = IMacronCyrillic;
layers = (
{
components = (
{
name = ICyrillic2;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 412, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 517;
}
);
note = IMacronCyrillic;
unicode = 04E2;
},
{
glyphname = iMacronCyrillic;
layers = (
{
components = (
{
name = iCyrillic;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 359, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 405;
}
);
note = iMacronCyrillic;
unicode = 04E3;
},
{
glyphname = IDiaeresisCyrillic;
layers = (
{
components = (
{
name = ICyrillic2;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 517;
}
);
note = IDiaeresisCyrillic;
unicode = 04E4;
},
{
glyphname = iDiaeresisCyrillic;
layers = (
{
components = (
{
name = iCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 79, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 405;
}
);
note = iDiaeresisCyrillic;
unicode = 04E5;
},
{
glyphname = ODiaeresisCyrillic;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 160, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = ODiaeresisCyrillic;
unicode = 04E6;
},
{
glyphname = oDiaeresisCyrillic;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 50, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oDiaeresisCyrillic;
unicode = 04E7;
},
{
glyphname = OBarredCyrillic;
layers = (
{
components = (
{
name = theta;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = OBarredCyrillic;
unicode = 04E8;
},
{
glyphname = oBarredCyrillic;
layers = (
{
components = (
{
name = fitaCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = oBarredCyrillic;
unicode = 04E9;
},
{
glyphname = UMacronCyrillic;
layers = (
{
components = (
{
name = UCyrillic;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 488, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 591;
}
);
note = UMacronCyrillic;
unicode = 04EE;
},
{
glyphname = uMacronCyrillic;
layers = (
{
components = (
{
name = y;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 336, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = uMacronCyrillic;
unicode = 04EF;
},
{
glyphname = UDiaeresisCyrillic;
layers = (
{
components = (
{
name = UCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 204, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 591;
}
);
note = UDiaeresisCyrillic;
unicode = 04F0;
},
{
glyphname = uDiaeresisCyrillic;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 64, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = uDiaeresisCyrillic;
unicode = 04F1;
},
{
glyphname = UDoubleAcuteCyrillic;
layers = (
{
components = (
{
name = UCyrillic;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 260, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 591;
}
);
note = UDoubleAcuteCyrillic;
unicode = 04F2;
},
{
glyphname = uDoubleAcuteCyrillic;
layers = (
{
components = (
{
name = y;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 124, -222}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = uDoubleAcuteCyrillic;
unicode = 04F3;
},
{
glyphname = CheDiaeresis;
layers = (
{
components = (
{
name = cheCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 67, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 431;
}
);
note = CheDiaeresis;
unicode = 04F4;
},
{
glyphname = cheDiaeresisCyrillic;
layers = (
{
components = (
{
name = cheCyrillic2;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 31, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 342;
}
);
note = cheDiaeresisCyrillic;
unicode = 04F5;
},
{
glyphname = YeruDiaeresisCyrillic;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = SoftSignCyrillic;
},
{
alignment = -1;
name = I;
transform = "{1, 0, 0, 1, 532, 0}";
},
{
alignment = -1;
name = dieresis;
transform = "{1, 0, 0, 1, 227, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 704;
}
);
note = YeruDiaeresisCyrillic;
unicode = 04F8;
},
{
glyphname = yeruDiaeresisCyrillic;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = softSignCyrillic;
},
{
alignment = -1;
name = dotlessi;
transform = "{1, 0, 0, 1, 380, 0}";
},
{
alignment = -1;
name = dieresis;
transform = "{1, 0, 0, 1, 131, -242}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 511;
}
);
note = yeruDiaeresisCyrillic;
unicode = 04F9;
},
{
glyphname = Numero;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = N;
},
{
alignment = -1;
name = o;
transform = "{1, 0, 0, 1, 420, 0}";
},
{
alignment = -1;
name = period;
transform = "{1, 0, 0, 1, 730, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 866;
}
);
note = Numero;
unicode = 2116;
},
{
glyphname = lslash;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"175 14 OFFCURVE",
"173.5 19.5 OFFCURVE",
"170.5 26.5 CURVE SMOOTH",
"167.5 33.5 OFFCURVE",
"166 38 OFFCURVE",
"166 40 CURVE",
"156.667 81.333 OFFCURVE",
"152.667 141 OFFCURVE",
"150 225 CURVE",
"150.667 225 OFFCURVE",
"151 282 OFFCURVE",
"151 396 CURVE",
"175 405.333 OFFCURVE",
"191 411.333 OFFCURVE",
"199 414 CURVE SMOOTH",
"207 416.667 OFFCURVE",
"212.667 418 OFFCURVE",
"216 418 CURVE SMOOTH",
"218 418 OFFCURVE",
"222.333 417.333 OFFCURVE",
"229 416 CURVE SMOOTH",
"235.667 414.667 OFFCURVE",
"243.333 414 OFFCURVE",
"252 414 CURVE SMOOTH",
"262.667 414 OFFCURVE",
"269 421.667 OFFCURVE",
"269 427 CURVE SMOOTH",
"269 451 OFFCURVE",
"248.667 469 OFFCURVE",
"222 469 CURVE SMOOTH",
"216.667 469 OFFCURVE",
"209.667 467.833 OFFCURVE",
"201 465.5 CURVE SMOOTH",
"192.333 463.167 OFFCURVE",
"175.667 457 OFFCURVE",
"151 447 CURVE",
"152.333 515 OFFCURVE",
"153.667 566.333 OFFCURVE",
"163 605 CURVE SMOOTH",
"167 623.667 OFFCURVE",
"170 636.167 OFFCURVE",
"172 642.5 CURVE SMOOTH",
"174 648.833 OFFCURVE",
"175 653.333 OFFCURVE",
"175 656 CURVE SMOOTH",
"175 674.667 OFFCURVE",
"151.667 690 OFFCURVE",
"133 690 CURVE SMOOTH",
"125 690 OFFCURVE",
"114.333 685.333 OFFCURVE",
"101 676 CURVE",
"101 669.333 OFFCURVE",
"102 659.333 OFFCURVE",
"104 646 CURVE SMOOTH",
"106 632.667 OFFCURVE",
"107 622 OFFCURVE",
"107 614 CURVE SMOOTH",
"107 582 OFFCURVE",
"106.333 550.667 OFFCURVE",
"105 520 CURVE SMOOTH",
"103.667 489.333 OFFCURVE",
"102.667 458 OFFCURVE",
"102 426 CURVE",
"93.014 421.507 OFFCURVE",
"-10 380.12 OFFCURVE",
"-10 366 CURVE SMOOTH",
"-10 353.16 OFFCURVE",
"12.63 320 OFFCURVE",
"28 320 CURVE SMOOTH",
"41.926 320 OFFCURVE",
"79.078 361.299 OFFCURVE",
"101 375 CURVE",
"101 365.667 OFFCURVE",
"100.833 356.667 OFFCURVE",
"100.5 348 CURVE SMOOTH",
"100.167 339.333 OFFCURVE",
"100 330.333 OFFCURVE",
"100 321 CURVE SMOOTH",
"100 211.667 OFFCURVE",
"101.333 127.167 OFFCURVE",
"108 70.5 CURVE SMOOTH",
"113.666 22.343 OFFCURVE",
"123.947 -16 OFFCURVE",
"147 -16 CURVE SMOOTH",
"165.667 -16 OFFCURVE",
"175 -7.333 OFFCURVE",
"175 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
57 20 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 57 22 57 38 57 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 57 69 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
45 931 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 2 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
42 51 45 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 258;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = Zdotabove;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 259, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zdotabove;
unicode = 017B;
},
{
glyphname = zdotabove;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 132, -259}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = zdotabove;
unicode = 017C;
},
{
glyphname = afii10063;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 186, -250}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 107;
}
);
note = afii10063;
},
{
glyphname = afii10064;
layers = (
{
components = (
{
name = delta;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = afii10064;
},
{
glyphname = afii10192;
layers = (
{
components = (
{
name = g;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = afii10192;
},
{
glyphname = afii10831;
layers = (
{
components = (
{
name = u;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 305, -261}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = afii10831;
},
{
glyphname = afii10832;
layers = (
{
components = (
{
name = w;
},
{
name = macroncmb;
transform = "{1, 0, 0, 1, 391, -247}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = afii10832;
},
{
glyphname = cyrBreve;
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = cyrBreve;
},
{
glyphname = Uni0111;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"412 553.667 OFFCURVE",
"379 564 OFFCURVE",
"351 564 CURVE SMOOTH",
"334 564 LINE",
"336 576 LINE SMOOTH",
"340 600 OFFCURVE",
"342 619.667 OFFCURVE",
"342 635 CURVE SMOOTH",
"342 660.333 OFFCURVE",
"320.333 682 OFFCURVE",
"295 682 CURVE SMOOTH",
"287 682 OFFCURVE",
"280.667 679.667 OFFCURVE",
"276 675 CURVE",
"276 654.333 OFFCURVE",
"276 634.667 OFFCURVE",
"276 616 CURVE SMOOTH",
"276 597.333 OFFCURVE",
"275.667 579.667 OFFCURVE",
"275 563 CURVE",
"207 561.667 OFFCURVE",
"142.333 558 OFFCURVE",
"73 550 CURVE",
"69 550 OFFCURVE",
"67 547.667 OFFCURVE",
"67 543 CURVE SMOOTH",
"67 525.343 OFFCURVE",
"72.045 492 OFFCURVE",
"92 492 CURVE SMOOTH",
"102 492 OFFCURVE",
"111.833 494.667 OFFCURVE",
"121.5 500 CURVE SMOOTH",
"131.167 505.333 OFFCURVE",
"142 509 OFFCURVE",
"154 511 CURVE SMOOTH",
"172.667 513.667 OFFCURVE",
"197.333 516 OFFCURVE",
"228 516 CURVE SMOOTH",
"274 516 LINE",
"272.667 448 OFFCURVE",
"270 403.667 OFFCURVE",
"266 377 CURVE",
"239.333 407.667 OFFCURVE",
"204.667 440 OFFCURVE",
"162 440 CURVE SMOOTH",
"118 440 OFFCURVE",
"82.667 400.667 OFFCURVE",
"56 322 CURVE SMOOTH",
"35.333 264 OFFCURVE",
"25 206 OFFCURVE",
"25 148 CURVE SMOOTH",
"25 48 OFFCURVE",
"75 -12 OFFCURVE",
"155 -12 CURVE SMOOTH",
"191 -12 OFFCURVE",
"228.667 13 OFFCURVE",
"268 63 CURVE",
"272 35.667 OFFCURVE",
"274 15.333 OFFCURVE",
"274 2 CURVE",
"278 -11.333 OFFCURVE",
"298.667 -28 OFFCURVE",
"312 -28 CURVE SMOOTH",
"318.667 -28 OFFCURVE",
"324.667 -24.333 OFFCURVE",
"330 -17 CURVE",
"317.333 10.333 OFFCURVE",
"311 60.667 OFFCURVE",
"311 134 CURVE SMOOTH",
"313.667 222 OFFCURVE",
"317.167 311.667 OFFCURVE",
"320.5 381 CURVE SMOOTH",
"323.139 435.891 OFFCURVE",
"326 497.629 OFFCURVE",
"326 514 CURVE",
"346.667 511.333 OFFCURVE",
"361.167 508.167 OFFCURVE",
"369.5 504.5 CURVE SMOOTH",
"377.833 500.833 OFFCURVE",
"386.333 499 OFFCURVE",
"395 499 CURVE SMOOTH",
"409.667 499 OFFCURVE",
"412 504.333 OFFCURVE",
"412 527 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"267 146.717 OFFCURVE",
"223.973 22 OFFCURVE",
"149 22 CURVE SMOOTH",
"105 22 OFFCURVE",
"78 68 OFFCURVE",
"78 140 CURVE SMOOTH",
"78 184.667 OFFCURVE",
"86 233 OFFCURVE",
"102 285 CURVE SMOOTH",
"122 353 OFFCURVE",
"148.667 387 OFFCURVE",
"182 387 CURVE SMOOTH",
"232.342 387 OFFCURVE",
"267 328.014 OFFCURVE",
"267 266 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 933 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 932 67 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 67 106 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 67 25 67 41 67 57 67 73 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
55 67 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 55 106 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 55 25 55 41 55 57 55 73 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 76 118 76 134 76 150 76 166 76 182 76 198 76 214 76 230 76 246 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 76 22 76 38 76 54 76 70 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 76 101 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
52 931 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 931 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
20 15 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
32 15 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
79 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 79 119 79 135 79 151 79 167 79 183 79 199 79 215 79 231 79 247 79 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 79 23 79 39 79 55 79 71 79 87 79 103 79 119 79 135 79 151 79 167 79 183 79 199 79 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 79 230 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 392;
}
);
note = Uni0111;
unicode = 0111;
},
{
glyphname = Uni0110;
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 517;
}
);
note = Uni0110;
unicode = 0110;
},
{
glyphname = Uni0123;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = g;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 344, 703}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 359;
}
);
note = Uni0123;
unicode = 0123;
},
{
glyphname = Uni012F;
layers = (
{
components = (
{
name = i;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 166, -34}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = Uni012F;
unicode = 012F;
},
{
glyphname = Uni012E;
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcmb;
transform = "{1, 0, 0, 1, 175, -36}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Uni012E;
unicode = 012E;
},
{
glyphname = Uni0155;
layers = (
{
components = (
{
name = r;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 234, -208}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = Uni0155;
unicode = 0155;
},
{
glyphname = Uni0154;
layers = (
{
components = (
{
name = R;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 369, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 550;
}
);
note = Uni0154;
unicode = 0154;
},
{
glyphname = Uni0159;
layers = (
{
components = (
{
name = r;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 280, -228}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = Uni0159;
unicode = 0159;
},
{
glyphname = Uni021B;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = t;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 252, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
note = Uni021B;
unicode = 021B;
},
{
glyphname = Uni021A;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = T;
},
{
alignment = -1;
name = commabelowcmb;
transform = "{1, 0, 0, 1, 322, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Uni021A;
unicode = 021A;
},
{
glyphname = y_acutecmb;
layers = (
{
components = (
{
name = y;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 276, -214}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = y_acutecmb;
},
{
glyphname = Y_acutecmb;
layers = (
{
components = (
{
name = Y;
},
{
name = acutecmb;
transform = "{1, 0, 0, 1, 341, 39}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = Y_acutecmb;
},
{
glyphname = uni0385;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"255 534.333 OFFCURVE",
"237.667 554 OFFCURVE",
"215 554 CURVE SMOOTH",
"192.333 554 OFFCURVE",
"175 534.333 OFFCURVE",
"175 513 CURVE SMOOTH",
"175 490.333 OFFCURVE",
"192.333 471 OFFCURVE",
"215 471 CURVE SMOOTH",
"237.667 471 OFFCURVE",
"255 490.333 OFFCURVE",
"255 513 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 534.333 OFFCURVE",
"87.667 554 OFFCURVE",
"65 554 CURVE SMOOTH",
"42.333 554 OFFCURVE",
"25 534.333 OFFCURVE",
"25 513 CURVE SMOOTH",
"25 490.333 OFFCURVE",
"42.333 471 OFFCURVE",
"65 471 CURVE SMOOTH",
"87.667 471 OFFCURVE",
"105 490.333 OFFCURVE",
"105 513 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243.667 631 OFFCURVE",
"248 635.667 OFFCURVE",
"248 641 CURVE SMOOTH",
"248 654.193 OFFCURVE",
"223.666 672 OFFCURVE",
"209 672 CURVE SMOOTH",
"202.333 672 OFFCURVE",
"191.667 662.167 OFFCURVE",
"177 642.5 CURVE SMOOTH",
"162.333 622.833 OFFCURVE",
"143.333 592 OFFCURVE",
"120 550 CURVE",
"120 546 OFFCURVE",
"126.667 528 OFFCURVE",
"136 528 CURVE",
"152.638 530.08 OFFCURVE",
"207.344 609.221 OFFCURVE",
"235 627 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 6 106 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 6 25 6 41 6 57 6 73 6 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 12 22 12 38 12 54 12 70 12 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 12 101 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
9 931 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 281;
}
);
note = uni0385;
unicode = 0385;
},
{
glyphname = tonos;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"243.667 631 OFFCURVE",
"248 635.667 OFFCURVE",
"248 641 CURVE SMOOTH",
"248 654.193 OFFCURVE",
"223.666 672 OFFCURVE",
"209 672 CURVE SMOOTH",
"202.333 672 OFFCURVE",
"191.667 662.167 OFFCURVE",
"177 642.5 CURVE SMOOTH",
"162.333 622.833 OFFCURVE",
"143.333 592 OFFCURVE",
"120 550 CURVE",
"120 546 OFFCURVE",
"126.667 528 OFFCURVE",
"136 528 CURVE",
"152.638 530.08 OFFCURVE",
"207.344 609.221 OFFCURVE",
"235 627 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 281;
}
);
note = tonos;
unicode = 0384;
},
{
glyphname = Gamma;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"129 595.333 OFFCURVE",
"170.333 608.333 OFFCURVE",
"237 621 CURVE SMOOTH",
"306.384 634.575 OFFCURVE",
"423 629.866 OFFCURVE",
"423 657 CURVE SMOOTH",
"423 677.92 OFFCURVE",
"385.028 689 OFFCURVE",
"363 689 CURVE SMOOTH",
"340.183 689 OFFCURVE",
"260.127 673.309 OFFCURVE",
"213 663 CURVE SMOOTH",
"175.384 654.772 OFFCURVE",
"90.188 636.17 OFFCURVE",
"75 634 CURVE SMOOTH",
"53 630.667 OFFCURVE",
"42 621.667 OFFCURVE",
"42 607 CURVE SMOOTH",
"42 603.667 OFFCURVE",
"42.833 597.833 OFFCURVE",
"44.5 589.5 CURVE SMOOTH",
"46.167 581.167 OFFCURVE",
"47 574.333 OFFCURVE",
"47 569 CURVE",
"40.333 477 OFFCURVE",
"36 383 OFFCURVE",
"36 287 CURVE SMOOTH",
"36 207 OFFCURVE",
"39.333 134 OFFCURVE",
"46 62 CURVE SMOOTH",
"50.667 15.333 OFFCURVE",
"68 -8 OFFCURVE",
"98 -8 CURVE SMOOTH",
"105.333 -8 OFFCURVE",
"115.333 -3.667 OFFCURVE",
"128 5 CURVE",
"114.667 24.333 OFFCURVE",
"106.167 57 OFFCURVE",
"102.5 103 CURVE SMOOTH",
"98.833 149 OFFCURVE",
"97 209.333 OFFCURVE",
"97 284 CURVE SMOOTH",
"97 384.386 OFFCURVE",
"107.956 526.52 OFFCURVE",
"113 582 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 15 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 428;
}
);
note = Gamma;
unicode = 0393;
},
{
glyphname = DeltaGreek;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"478.129 8 OFFCURVE",
"487 33.145 OFFCURVE",
"487 44 CURVE SMOOTH",
"487 54.667 OFFCURVE",
"475.667 71 OFFCURVE",
"465 79 CURVE",
"461.667 99.667 OFFCURVE",
"459.167 121.167 OFFCURVE",
"457.5 143.5 CURVE SMOOTH",
"455.833 165.833 OFFCURVE",
"453.333 190 OFFCURVE",
"450 216 CURVE SMOOTH",
"442 282.667 OFFCURVE",
"435.5 337.5 OFFCURVE",
"430.5 380.5 CURVE SMOOTH",
"425.5 423.5 OFFCURVE",
"420.333 456.667 OFFCURVE",
"415 480 CURVE SMOOTH",
"385 610.667 OFFCURVE",
"345.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE SMOOTH",
"58.667 209 OFFCURVE",
"37.667 129.333 OFFCURVE",
"27 56 CURVE",
"17.667 36 OFFCURVE",
"10 7.667 OFFCURVE",
"10 1 CURVE SMOOTH",
"10 -13.993 OFFCURVE",
"38.263 -35 OFFCURVE",
"55 -35 CURVE SMOOTH",
"69.667 -35 OFFCURVE",
"71 -12.667 OFFCURVE",
"71 2 CURVE",
"124.333 15.333 OFFCURVE",
"216 20 OFFCURVE",
"304 20 CURVE SMOOTH",
"322.667 20 OFFCURVE",
"341.667 20 OFFCURVE",
"361 20 CURVE SMOOTH",
"380.333 20 OFFCURVE",
"400 19.333 OFFCURVE",
"420 18 CURVE SMOOTH",
"432.797 17.418 OFFCURVE",
"468.436 8 OFFCURVE",
"469 8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 226 OFFCURVE",
"132 271.333 OFFCURVE",
"148 314 CURVE SMOOTH",
"164 356.667 OFFCURVE",
"180 400 OFFCURVE",
"196 444 CURVE SMOOTH",
"215.333 496 OFFCURVE",
"234.167 534.667 OFFCURVE",
"252.5 560 CURVE SMOOTH",
"270.833 585.333 OFFCURVE",
"286.667 598 OFFCURVE",
"300 598 CURVE SMOOTH",
"324 598 OFFCURVE",
"347 542.333 OFFCURVE",
"369 431 CURVE SMOOTH",
"371.667 418.333 OFFCURVE",
"376 394.333 OFFCURVE",
"382 359 CURVE SMOOTH",
"388 323.667 OFFCURVE",
"394.333 276.667 OFFCURVE",
"401 218 CURVE SMOOTH",
"403.667 187.333 OFFCURVE",
"406 158 OFFCURVE",
"406 130 CURVE SMOOTH",
"406 112.667 OFFCURVE",
"405.333 97 OFFCURVE",
"404 81 CURVE",
"298.667 77 OFFCURVE",
"222.167 71.167 OFFCURVE",
"169.5 66.5 CURVE SMOOTH",
"130.183 63.016 OFFCURVE",
"88.106 57.388 OFFCURVE",
"77 56 CURVE",
"85 102.667 OFFCURVE",
"95.333 139.333 OFFCURVE",
"106 178 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
51 931 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 931 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
46 8 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 508;
}
);
note = DeltaGreek;
unicode = "0394,2206";
},
{
glyphname = Theta;
layers = (
{
components = (
{
name = O;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 133, 38}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Theta;
unicode = 0398;
},
{
glyphname = Lambda;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"435.333 349.333 OFFCURVE",
"425.667 433.333 OFFCURVE",
"415 480 CURVE SMOOTH",
"385 610.667 OFFCURVE",
"345.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE SMOOTH",
"58.667 209 OFFCURVE",
"37.667 129.333 OFFCURVE",
"27 56 CURVE",
"19.667 35.333 OFFCURVE",
"15 21.667 OFFCURVE",
"13 15 CURVE SMOOTH",
"11 8.333 OFFCURVE",
"10 4.333 OFFCURVE",
"10 3 CURVE SMOOTH",
"10 -13.178 OFFCURVE",
"38.231 -35 OFFCURVE",
"55 -35 CURVE SMOOTH",
"61.667 -35 OFFCURVE",
"69 -33.333 OFFCURVE",
"69 -28 CURVE",
"74.333 64 OFFCURVE",
"91.333 119.333 OFFCURVE",
"106 178 CURVE SMOOTH",
"131.333 274 OFFCURVE",
"162.667 356 OFFCURVE",
"196 444 CURVE SMOOTH",
"215.333 496 OFFCURVE",
"234.167 534.667 OFFCURVE",
"252.5 560 CURVE SMOOTH",
"270.833 585.333 OFFCURVE",
"286.667 598 OFFCURVE",
"300 598 CURVE SMOOTH",
"324 598 OFFCURVE",
"347 542.333 OFFCURVE",
"369 431 CURVE SMOOTH",
"371.667 418.333 OFFCURVE",
"376 394.333 OFFCURVE",
"382 359 CURVE SMOOTH",
"388 323.667 OFFCURVE",
"394.333 276.667 OFFCURVE",
"401 218 CURVE SMOOTH",
"405 182 OFFCURVE",
"405 165 OFFCURVE",
"405 125 CURVE SMOOTH",
"405 109.667 OFFCURVE",
"404.833 99 OFFCURVE",
"404.5 93 CURVE SMOOTH",
"404.167 87 OFFCURVE",
"404 82.333 OFFCURVE",
"404 79 CURVE SMOOTH",
"404 40.333 OFFCURVE",
"405.667 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"448.773 111.152 OFFCURVE",
"458.73 146.163 OFFCURVE",
"450 216 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
47 931 22 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 508;
}
);
note = Lambda;
unicode = 039B;
},
{
glyphname = Xi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"37.333 563.667 OFFCURVE",
"42.667 561 OFFCURVE",
"50 561 CURVE SMOOTH",
"63.698 561 OFFCURVE",
"165.17 609.016 OFFCURVE",
"224 621 CURVE SMOOTH",
"293.384 634.575 OFFCURVE",
"410 629.866 OFFCURVE",
"410 657 CURVE SMOOTH",
"410 680.655 OFFCURVE",
"373.162 689 OFFCURVE",
"350 689 CURVE SMOOTH",
"321.333 689 OFFCURVE",
"274 681 OFFCURVE",
"208 665 CURVE SMOOTH",
"123.134 644.184 OFFCURVE",
"29 642.31 OFFCURVE",
"29 607 CURVE SMOOTH",
"29 600.333 OFFCURVE",
"28.667 579.667 OFFCURVE",
"34 569 CURVE"
);
},
{
closed = 1;
nodes = (
"98.667 338 OFFCURVE",
"95.5 336.333 OFFCURVE",
"92.5 333 CURVE SMOOTH",
"89.5 329.667 OFFCURVE",
"88 321.333 OFFCURVE",
"88 308 CURVE SMOOTH",
"88 282.667 OFFCURVE",
"96.333 280 OFFCURVE",
"111 280 CURVE",
"134.407 293.004 OFFCURVE",
"274.442 329 OFFCURVE",
"301 329 CURVE SMOOTH",
"310.333 329 OFFCURVE",
"318 327.5 OFFCURVE",
"324 324.5 CURVE SMOOTH",
"330 321.5 OFFCURVE",
"335.667 320 OFFCURVE",
"341 320 CURVE SMOOTH",
"367.841 320 OFFCURVE",
"373 333.762 OFFCURVE",
"373 346 CURVE SMOOTH",
"373 367.333 OFFCURVE",
"356.667 378 OFFCURVE",
"334 378 CURVE SMOOTH",
"268.119 378 OFFCURVE",
"185.277 339 OFFCURVE",
"126 339 CURVE SMOOTH",
"123.333 339 OFFCURVE",
"119.5 338.833 OFFCURVE",
"114.5 338.5 CURVE SMOOTH",
"109.5 338.167 OFFCURVE",
"105.333 338 OFFCURVE",
"102 338 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"62.333 -37.333 OFFCURVE",
"67.667 -40 OFFCURVE",
"75 -40 CURVE SMOOTH",
"87.826 -40 OFFCURVE",
"193.303 8.247 OFFCURVE",
"251 20 CURVE SMOOTH",
"320.568 33.611 OFFCURVE",
"439 29.303 OFFCURVE",
"439 56 CURVE SMOOTH",
"439 79.67 OFFCURVE",
"401.992 88 OFFCURVE",
"378 88 CURVE SMOOTH",
"349.333 88 OFFCURVE",
"301.667 80 OFFCURVE",
"235 64 CURVE SMOOTH",
"148.618 43.204 OFFCURVE",
"54 41.231 OFFCURVE",
"54 6 CURVE SMOOTH",
"54 -0.667 OFFCURVE",
"53.667 -21.333 OFFCURVE",
"59 -32 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
35 931 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 465;
}
);
note = Xi;
unicode = 039E;
},
{
glyphname = Pi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"162.288 593.863 OFFCURVE",
"200.363 592.608 OFFCURVE",
"270 606 CURVE SMOOTH",
"319.333 615.333 OFFCURVE",
"385.667 619.333 OFFCURVE",
"427 622 CURVE",
"435 622 OFFCURVE",
"439 618.333 OFFCURVE",
"439 611 CURVE SMOOTH",
"439 609 LINE",
"427.477 539.863 OFFCURVE",
"422 385.888 OFFCURVE",
"422 320 CURVE SMOOTH",
"422 282 OFFCURVE",
"422.167 252.5 OFFCURVE",
"422.5 231.5 CURVE SMOOTH",
"422.833 210.5 OFFCURVE",
"423 192.667 OFFCURVE",
"423 178 CURVE SMOOTH",
"423 133.677 OFFCURVE",
"438 18.499 OFFCURVE",
"438 39 CURVE",
"444.667 12.333 OFFCURVE",
"457 -1 OFFCURVE",
"475 -1 CURVE SMOOTH",
"491 -1 OFFCURVE",
"505 19 OFFCURVE",
"505 35 CURVE SMOOTH",
"505 40.333 OFFCURVE",
"502 49.667 OFFCURVE",
"498 63 CURVE SMOOTH",
"488 93 LINE",
"479.997 145.021 OFFCURVE",
"480 215.795 OFFCURVE",
"480 277 CURVE SMOOTH",
"480 398.333 OFFCURVE",
"484 479.333 OFFCURVE",
"492 534 CURVE SMOOTH",
"500 588.667 OFFCURVE",
"510.667 616.333 OFFCURVE",
"524 635 CURVE",
"529.333 635 OFFCURVE",
"540 641.333 OFFCURVE",
"540 648 CURVE SMOOTH",
"540 674.282 OFFCURVE",
"503.397 680 OFFCURVE",
"479 680 CURVE SMOOTH",
"416.333 680 OFFCURVE",
"354 671 OFFCURVE",
"290 659 CURVE SMOOTH",
"238.167 649.281 OFFCURVE",
"148.418 628.493 OFFCURVE",
"97 618 CURVE SMOOTH",
"69.925 611.983 OFFCURVE",
"37 604.521 OFFCURVE",
"37 573 CURVE SMOOTH",
"37 548.052 OFFCURVE",
"63 547.802 OFFCURVE",
"63 528 CURVE",
"61.203 497.447 OFFCURVE",
"59 410.534 OFFCURVE",
"59 358.5 CURVE SMOOTH",
"59 320.79 OFFCURVE",
"58 231.71 OFFCURVE",
"58 217 CURVE SMOOTH",
"58 165 OFFCURVE",
"58.833 107.5 OFFCURVE",
"63.5 61.5 CURVE SMOOTH",
"67.217 24.86 OFFCURVE",
"74.198 -17.933 OFFCURVE",
"88 -21 CURVE SMOOTH",
"94.667 -22.333 OFFCURVE",
"99.667 -23 OFFCURVE",
"105 -23 CURVE SMOOTH",
"117 -23 OFFCURVE",
"135.667 -16.333 OFFCURVE",
"141 -3 CURVE",
"122.217 31.436 OFFCURVE",
"118 196.541 OFFCURVE",
"118 275 CURVE SMOOTH",
"118 385.812 OFFCURVE",
"121.681 463.765 OFFCURVE",
"141 530 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 78 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 78 106 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 78 121 78 137 78 153 78 169 78 185 78 201 78 217 78 233 78 249 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 78 25 78 41 78 57 78 73 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
68 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
43 931 86 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 554;
}
);
note = Pi;
unicode = 03A0;
},
{
glyphname = Sigma;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"346.587 364.547 OFFCURVE",
"316.127 401.873 OFFCURVE",
"285.5 432.5 CURVE SMOOTH",
"246.167 471.833 OFFCURVE",
"191.667 521.667 OFFCURVE",
"125 575 CURVE",
"123 577 OFFCURVE",
"122 579.333 OFFCURVE",
"122 582 CURVE SMOOTH",
"122 600.747 OFFCURVE",
"194.6 611.876 OFFCURVE",
"232 619 CURVE SMOOTH",
"318.675 635.597 OFFCURVE",
"418 626.8 OFFCURVE",
"418 654 CURVE SMOOTH",
"418 677.655 OFFCURVE",
"381.162 686 OFFCURVE",
"358 686 CURVE SMOOTH",
"328.667 686 OFFCURVE",
"282.667 680.333 OFFCURVE",
"216 663 CURVE SMOOTH",
"130.965 640.538 OFFCURVE",
"37 642.701 OFFCURVE",
"37 607 CURVE SMOOTH",
"37 597.667 OFFCURVE",
"39.333 578 OFFCURVE",
"54 570 CURVE",
"0 0 OFFCURVE",
"65.133 562.612 OFFCURVE",
"74.5 556 CURVE SMOOTH",
"85.833 548 OFFCURVE",
"100.667 537.667 OFFCURVE",
"114 527 CURVE SMOOTH",
"147.116 501.243 OFFCURVE",
"216.734 443.333 OFFCURVE",
"265 383 CURVE SMOOTH",
"273 372.333 OFFCURVE",
"277.833 365.167 OFFCURVE",
"279.5 361.5 CURVE SMOOTH",
"281.167 357.833 OFFCURVE",
"282 354.333 OFFCURVE",
"282 351 CURVE SMOOTH",
"282 325.672 OFFCURVE",
"150.721 201.152 OFFCURVE",
"117 159 CURVE SMOOTH",
"75 105.667 OFFCURVE",
"54 67.333 OFFCURVE",
"54 44 CURVE SMOOTH",
"54 13.333 OFFCURVE",
"89 -7 OFFCURVE",
"129 -7 CURVE SMOOTH",
"151 -7 OFFCURVE",
"183.5 -4.833 OFFCURVE",
"226.5 -0.5 CURVE SMOOTH",
"269.5 3.833 OFFCURVE",
"328 10 OFFCURVE",
"402 18 CURVE",
"430.667 18 OFFCURVE",
"445 27 OFFCURVE",
"445 45 CURVE SMOOTH",
"445 62.333 OFFCURVE",
"428 81 OFFCURVE",
"420 81 CURVE",
"282.667 54.333 OFFCURVE",
"193 41 OFFCURVE",
"151 41 CURVE SMOOTH",
"133.667 41 OFFCURVE",
"121.333 44.667 OFFCURVE",
"114 52 CURVE",
"114 80.293 OFFCURVE",
"172.913 152.809 OFFCURVE",
"216 200 CURVE SMOOTH",
"235.333 221.333 OFFCURVE",
"254 239.333 OFFCURVE",
"272 254 CURVE SMOOTH",
"290 268.667 OFFCURVE",
"309 285.333 OFFCURVE",
"329 304 CURVE SMOOTH",
"342.333 316 OFFCURVE",
"348 337 OFFCURVE",
"348 349 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
72 934 49 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 72 22 72 38 72 54 72 70 72 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 72 101 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
13 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 13 23 13 39 13 55 13 71 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 13 102 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 465;
}
);
note = Sigma;
unicode = 03A3;
},
{
glyphname = Iotadieresis;
layers = (
{
components = (
{
name = Idieresis;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 240;
}
);
note = Iotadieresis;
unicode = 03AA;
},
{
glyphname = Alpha;
layers = (
{
components = (
{
name = A;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = Alpha;
unicode = 0391;
},
{
glyphname = Beta;
layers = (
{
components = (
{
name = B;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 505;
}
);
note = Beta;
unicode = 0392;
},
{
glyphname = Epsilon;
layers = (
{
components = (
{
name = E;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = Epsilon;
unicode = 0395;
},
{
glyphname = Zeta;
layers = (
{
components = (
{
name = Z;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Zeta;
unicode = 0396;
},
{
glyphname = Eta;
layers = (
{
components = (
{
name = H;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 554;
}
);
note = Eta;
unicode = 0397;
},
{
glyphname = Iota;
layers = (
{
components = (
{
name = I;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = Iota;
unicode = 0399;
},
{
glyphname = Kappa;
layers = (
{
components = (
{
name = KaCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 483;
}
);
note = Kappa;
unicode = 039A;
},
{
glyphname = Mu;
layers = (
{
components = (
{
name = M;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 649;
}
);
note = Mu;
unicode = 039C;
},
{
glyphname = Phi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"433 648.768 OFFCURVE",
"405.005 667 OFFCURVE",
"393 667 CURVE SMOOTH",
"357.606 667 OFFCURVE",
"338 626.075 OFFCURVE",
"338 605 CURVE SMOOTH",
"338 595.667 OFFCURVE",
"338.167 585.667 OFFCURVE",
"338.5 575 CURVE SMOOTH",
"338.833 564.333 OFFCURVE",
"339 554 OFFCURVE",
"339 544 CURVE SMOOTH",
"339 505.333 OFFCURVE",
"326 500.333 OFFCURVE",
"286 495 CURVE SMOOTH",
"134.289 470.531 OFFCURVE",
"32 376.237 OFFCURVE",
"32 267 CURVE SMOOTH",
"32 181.667 OFFCURVE",
"128 137.667 OFFCURVE",
"320 135 CURVE SMOOTH",
"328 135 OFFCURVE",
"333 129.667 OFFCURVE",
"335 119 CURVE",
"337.667 79 OFFCURVE",
"343 47.833 OFFCURVE",
"351 25.5 CURVE SMOOTH",
"359 3.167 OFFCURVE",
"373.333 -8 OFFCURVE",
"394 -8 CURVE SMOOTH",
"401.333 -8 OFFCURVE",
"411.333 -3.667 OFFCURVE",
"424 5 CURVE",
"409.333 26.333 OFFCURVE",
"396 62 OFFCURVE",
"396 118 CURVE SMOOTH",
"396 129.333 OFFCURVE",
"401.333 136.333 OFFCURVE",
"412 139 CURVE",
"548.802 156.1 OFFCURVE",
"683 223.855 OFFCURVE",
"683 318 CURVE SMOOTH",
"683 413.398 OFFCURVE",
"562.978 500.847 OFFCURVE",
"422 513 CURVE",
"418 513 OFFCURVE",
"411 518.333 OFFCURVE",
"411 525 CURVE SMOOTH",
"411 575.348 OFFCURVE",
"433 634.978 OFFCURVE",
"433 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 361.394 OFFCURVE",
"207.278 432.922 OFFCURVE",
"308 451 CURVE",
"310.667 451.667 OFFCURVE",
"313.167 452 OFFCURVE",
"315.5 452 CURVE SMOOTH",
"317.833 452 OFFCURVE",
"320 452 OFFCURVE",
"322 452 CURVE SMOOTH",
"327.333 452 OFFCURVE",
"338 447.333 OFFCURVE",
"338 438 CURVE",
"335.333 382 OFFCURVE",
"334 336 OFFCURVE",
"334 280 CURVE SMOOTH",
"334 266 OFFCURVE",
"334 251.5 OFFCURVE",
"334 236.5 CURVE SMOOTH",
"334 221.5 OFFCURVE",
"334.333 205.667 OFFCURVE",
"335 189 CURVE",
"335 181.667 OFFCURVE",
"330.667 178 OFFCURVE",
"322 178 CURVE SMOOTH",
"213.387 178 OFFCURVE",
"95 198.132 OFFCURVE",
"95 273 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"611 243.888 OFFCURVE",
"520.717 181 OFFCURVE",
"408 181 CURVE SMOOTH",
"401.333 181 OFFCURVE",
"394 181.333 OFFCURVE",
"394 192 CURVE SMOOTH",
"394 272 OFFCURVE",
"397.333 355 OFFCURVE",
"404 447 CURVE",
"406.667 457.667 OFFCURVE",
"410.333 469 OFFCURVE",
"425 469 CURVE SMOOTH",
"524.407 466.451 OFFCURVE",
"611 403.961 OFFCURVE",
"611 321 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 934 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 53 22 53 38 53 54 53 70 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 53 101 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 77 106 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 77 25 77 41 77 57 77 73 77 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
85 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
48 82 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 58 119 58 135 58 151 58 167 58 183 58 199 58 215 58 231 58 247 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 58 23 58 39 58 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 58 70 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
30 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 715;
}
);
note = Phi;
unicode = 03A6;
},
{
glyphname = Upsilondieresis;
layers = (
{
components = (
{
name = UStraightCyrillic;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 113, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 468;
}
);
note = Upsilondieresis;
unicode = 03AB;
},
{
glyphname = Psi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"90 442.347 OFFCURVE",
"96.837 491.231 OFFCURVE",
"105 513 CURVE",
"113 537 OFFCURVE",
"118.667 568.333 OFFCURVE",
"120 587 CURVE",
"120 597.667 OFFCURVE",
"116.333 604 OFFCURVE",
"109 606 CURVE",
"109 605.333 OFFCURVE",
"97.667 605 OFFCURVE",
"75 605 CURVE SMOOTH",
"60.9 605 OFFCURVE",
"31 587.443 OFFCURVE",
"31 573 CURVE SMOOTH",
"31 566.303 OFFCURVE",
"43 528.629 OFFCURVE",
"43 523 CURVE SMOOTH",
"43 498.853 OFFCURVE",
"33 432.633 OFFCURVE",
"33 397 CURVE SMOOTH",
"33 303.667 OFFCURVE",
"88 229 OFFCURVE",
"180 209 CURVE SMOOTH",
"182.667 208.333 OFFCURVE",
"185.833 206.333 OFFCURVE",
"189.5 203 CURVE SMOOTH",
"193.167 199.667 OFFCURVE",
"195 193.333 OFFCURVE",
"195 184 CURVE SMOOTH",
"195 178.667 OFFCURVE",
"194.833 173 OFFCURVE",
"194.5 167 CURVE SMOOTH",
"194.167 161 OFFCURVE",
"194 155.333 OFFCURVE",
"194 150 CURVE SMOOTH",
"194 132.667 OFFCURVE",
"196.667 103.333 OFFCURVE",
"202 62 CURVE SMOOTH",
"208 15.333 OFFCURVE",
"225.333 -8 OFFCURVE",
"254 -8 CURVE SMOOTH",
"261.333 -8 OFFCURVE",
"271.333 -3.667 OFFCURVE",
"284 5 CURVE",
"262.667 33 OFFCURVE",
"254 93 OFFCURVE",
"254 181 CURVE SMOOTH",
"254 194.333 OFFCURVE",
"259.667 202 OFFCURVE",
"271 204 CURVE SMOOTH",
"304.333 209.333 OFFCURVE",
"334 222 OFFCURVE",
"360 242 CURVE SMOOTH",
"429.912 296.376 OFFCURVE",
"457 435.178 OFFCURVE",
"457 517 CURVE SMOOTH",
"457 531 OFFCURVE",
"456.833 545 OFFCURVE",
"456.5 559 CURVE SMOOTH",
"456.167 573 OFFCURVE",
"456 587 OFFCURVE",
"456 601 CURVE SMOOTH",
"456 614.201 OFFCURVE",
"428.858 630 OFFCURVE",
"414 630 CURVE SMOOTH",
"400.667 630 OFFCURVE",
"389 608.333 OFFCURVE",
"389 595 CURVE SMOOTH",
"389 587.208 OFFCURVE",
"408 533.586 OFFCURVE",
"408 511 CURVE SMOOTH",
"408 452.513 OFFCURVE",
"377.84 348.876 OFFCURVE",
"330 296 CURVE SMOOTH",
"315.333 280 OFFCURVE",
"286.667 259 OFFCURVE",
"268 259 CURVE SMOOTH",
"257.333 259 OFFCURVE",
"255 266.333 OFFCURVE",
"255 273 CURVE SMOOTH",
"257.667 366.333 OFFCURVE",
"265 463 OFFCURVE",
"277 571 CURVE SMOOTH",
"279.248 592.36 OFFCURVE",
"294 634.481 OFFCURVE",
"294 639 CURVE SMOOTH",
"294 649.332 OFFCURVE",
"266.327 664 OFFCURVE",
"254 664 CURVE SMOOTH",
"236.149 664 OFFCURVE",
"202 642.102 OFFCURVE",
"202 624 CURVE",
"198.717 602.662 OFFCURVE",
"196.675 342.345 OFFCURVE",
"195 272 CURVE SMOOTH",
"195 265.333 OFFCURVE",
"189 261 OFFCURVE",
"185 261 CURVE SMOOTH",
"146.399 261 OFFCURVE",
"90 323.6 OFFCURVE",
"90 379 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 934 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 932 42 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 67 22 67 38 67 54 67 70 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 67 101 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 42 106 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 42 25 42 41 42 57 42 73 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
91 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
72 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 495;
}
);
note = Psi;
unicode = 03A8;
},
{
glyphname = OmegaGreek;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"535 517.937 OFFCURVE",
"410.978 684 OFFCURVE",
"296 684 CURVE SMOOTH",
"206.667 684 OFFCURVE",
"138.5 635.5 OFFCURVE",
"92.5 565.5 CURVE SMOOTH",
"46.5 495.5 OFFCURVE",
"23 403.333 OFFCURVE",
"23 318 CURVE SMOOTH",
"23 203.523 OFFCURVE",
"76.443 117.65 OFFCURVE",
"131 54 CURVE",
"77.428 47.571 OFFCURVE",
"22 60.456 OFFCURVE",
"22 28 CURVE SMOOTH",
"22 12.221 OFFCURVE",
"45.868 -43 OFFCURVE",
"60 -43 CURVE SMOOTH",
"74.06 -43 OFFCURVE",
"122.77 -27.405 OFFCURVE",
"147 -23 CURVE SMOOTH",
"161 -20.333 OFFCURVE",
"175.333 -18.833 OFFCURVE",
"190 -18.5 CURVE SMOOTH",
"204.667 -18.167 OFFCURVE",
"219 -16.333 OFFCURVE",
"233 -13 CURVE SMOOTH",
"250.333 -9 OFFCURVE",
"250 4.333 OFFCURVE",
"250 19 CURVE SMOOTH",
"250 55.311 OFFCURVE",
"235.863 44.916 OFFCURVE",
"210 56 CURVE",
"114 144 OFFCURVE",
"72 225.667 OFFCURVE",
"72 299 CURVE SMOOTH",
"72 395 OFFCURVE",
"95.833 476.5 OFFCURVE",
"136.5 534.5 CURVE SMOOTH",
"177.167 592.5 OFFCURVE",
"235 626 OFFCURVE",
"303 626 CURVE SMOOTH",
"406.556 626 OFFCURVE",
"479 496.029 OFFCURVE",
"479 364 CURVE SMOOTH",
"479 234.667 OFFCURVE",
"437 126 OFFCURVE",
"349 54 CURVE",
"345 44 OFFCURVE",
"343 34.667 OFFCURVE",
"343 26 CURVE SMOOTH",
"343 -2 OFFCURVE",
"365.333 -14.333 OFFCURVE",
"384 -25 CURVE",
"396 -25 OFFCURVE",
"407.333 -21.667 OFFCURVE",
"422 -15 CURVE",
"440.667 -7.667 OFFCURVE",
"459.667 -4.167 OFFCURVE",
"479 -4.5 CURVE SMOOTH",
"498.333 -4.833 OFFCURVE",
"517.667 -4 OFFCURVE",
"537 -2 CURVE",
"543.667 0.667 OFFCURVE",
"552 28.333 OFFCURVE",
"552 43 CURVE SMOOTH",
"552 60.333 OFFCURVE",
"548.667 74 OFFCURVE",
"538 74 CURVE SMOOTH",
"534 74 OFFCURVE",
"530 73.167 OFFCURVE",
"526 71.5 CURVE SMOOTH",
"522 69.833 OFFCURVE",
"518 68.667 OFFCURVE",
"514 68 CURVE",
"490 62.667 OFFCURVE",
"467 61 OFFCURVE",
"447 61 CURVE SMOOTH",
"442.333 61 OFFCURVE",
"438 61 OFFCURVE",
"434 61 CURVE SMOOTH",
"430 61 OFFCURVE",
"426.333 61.333 OFFCURVE",
"423 62 CURVE",
"502.236 154.897 OFFCURVE",
"535 240.199 OFFCURVE",
"535 371 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 932 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 34 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 34 106 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 34 25 34 41 34 57 34 73 34 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 44 22 44 38 44 54 44 70 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 44 101 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
73 68 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
83 931 39 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 572;
}
);
note = OmegaGreek;
},
{
glyphname = alphatonos;
layers = (
{
components = (
{
name = alpha;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 31, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 396;
}
);
note = alphatonos;
unicode = 03AC;
},
{
glyphname = Nu;
layers = (
{
components = (
{
name = N;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 456;
}
);
note = Nu;
unicode = 039D;
},
{
glyphname = Omicron;
layers = (
{
components = (
{
name = O;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Omicron;
unicode = 039F;
},
{
glyphname = Rho;
layers = (
{
components = (
{
name = P;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 501;
}
);
note = Rho;
unicode = 03A1;
},
{
glyphname = Tau;
layers = (
{
components = (
{
name = T;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 474;
}
);
note = Tau;
unicode = 03A4;
},
{
glyphname = Upsilon;
layers = (
{
components = (
{
name = UStraightCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 468;
}
);
note = Upsilon;
unicode = 03A5;
},
{
glyphname = Chi;
layers = (
{
components = (
{
name = X;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = Chi;
unicode = 03A7;
},
{
glyphname = Alphatonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = A;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{0.82812, 0, 0, 1.09723, -53, 49}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 528;
}
);
note = Alphatonos;
unicode = 0386;
},
{
glyphname = Epsilontonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = E;
transform = "{1, 0, 0, 1, 94, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 559;
}
);
note = Epsilontonos;
unicode = 0388;
},
{
glyphname = Etatonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = H;
transform = "{1, 0, 0, 1, 70, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 624;
}
);
note = Etatonos;
unicode = 0389;
},
{
glyphname = Iotatonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = I;
transform = "{1, 0, 0, 1, 103, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 275;
}
);
note = Iotatonos;
unicode = 038A;
},
{
glyphname = Omicrontonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = O;
transform = "{1, 0, 0, 1, 51, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 623;
}
);
note = Omicrontonos;
unicode = 038C;
},
{
glyphname = Upsilontonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = UStraightCyrillic;
transform = "{1, 0, 0, 1, 92, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 560;
}
);
note = Upsilontonos;
unicode = 038E;
},
{
glyphname = epsilontonos;
layers = (
{
components = (
{
name = epsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = epsilontonos;
unicode = 03AD;
},
{
glyphname = etatonos;
layers = (
{
components = (
{
name = eta;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = etatonos;
unicode = 03AE;
},
{
glyphname = iotatonos;
layers = (
{
components = (
{
name = iota;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -79, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 138;
}
);
note = iotatonos;
unicode = 03AF;
},
{
glyphname = omicrontonos;
layers = (
{
components = (
{
name = o;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = omicrontonos;
unicode = 03CC;
},
{
glyphname = Omegatonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = OmegaGreek;
transform = "{1, 0, 0, 1, 40, 0}";
},
{
alignment = -1;
name = tonos;
transform = "{1, 0, 0, 1, -119, 100}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 612;
}
);
note = Omegatonos;
unicode = 038F;
},
{
glyphname = upsilontonos;
layers = (
{
components = (
{
name = upsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = upsilontonos;
unicode = 03CD;
},
{
glyphname = alpha;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"319.667 -21.667 OFFCURVE",
"329 -24 OFFCURVE",
"341 -24 CURVE SMOOTH",
"351.667 -24 OFFCURVE",
"358.333 -21.667 OFFCURVE",
"361 -17 CURVE",
"358.333 44.333 OFFCURVE",
"355.667 124.667 OFFCURVE",
"341 202 CURVE",
"339 210 OFFCURVE",
"338 218.667 OFFCURVE",
"338 228 CURVE SMOOTH",
"338 236 OFFCURVE",
"338.667 242.333 OFFCURVE",
"340 249 CURVE SMOOTH",
"345.333 275 OFFCURVE",
"349.667 301.333 OFFCURVE",
"353 328 CURVE SMOOTH",
"356.333 354.667 OFFCURVE",
"359.667 380 OFFCURVE",
"363 404 CURVE SMOOTH",
"363.667 409.333 OFFCURVE",
"364.5 413.667 OFFCURVE",
"365.5 417 CURVE SMOOTH",
"366.5 420.333 OFFCURVE",
"367 424 OFFCURVE",
"367 428 CURVE SMOOTH",
"367 438.667 OFFCURVE",
"344.333 441 OFFCURVE",
"335 441 CURVE SMOOTH",
"315 441 OFFCURVE",
"312 431.667 OFFCURVE",
"312 417 CURVE SMOOTH",
"312 411.667 OFFCURVE",
"312.167 406.5 OFFCURVE",
"312.5 401.5 CURVE SMOOTH",
"312.833 396.5 OFFCURVE",
"313 390 OFFCURVE",
"313 382 CURVE SMOOTH",
"313 373.333 OFFCURVE",
"312.5 365.167 OFFCURVE",
"311.5 357.5 CURVE SMOOTH",
"310.5 349.833 OFFCURVE",
"308 346 OFFCURVE",
"304 346 CURVE SMOOTH",
"301.333 346 OFFCURVE",
"297.333 351 OFFCURVE",
"292 361 CURVE SMOOTH",
"286.667 371 OFFCURVE",
"276.333 382.667 OFFCURVE",
"261 396 CURVE SMOOTH",
"234.333 420 OFFCURVE",
"194 439 OFFCURVE",
"170 439 CURVE SMOOTH",
"72.821 439 OFFCURVE",
"25 287.379 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 33.667 OFFCURVE",
"73.667 -33 OFFCURVE",
"151 -33 CURVE SMOOTH",
"220.333 -33 OFFCURVE",
"264.333 13 OFFCURVE",
"295 85 CURVE",
"298.333 90.333 OFFCURVE",
"301 93 OFFCURVE",
"303 93 CURVE SMOOTH",
"312.442 93 OFFCURVE",
"313 -7.377 OFFCURVE",
"313 -17 CURVE"
);
},
{
closed = 1;
nodes = (
"131.333 2 OFFCURVE",
"113.333 17.167 OFFCURVE",
"100 47.5 CURVE SMOOTH",
"86.667 77.833 OFFCURVE",
"80 120 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 283.969 OFFCURVE",
"114 392 OFFCURVE",
"192 392 CURVE SMOOTH",
"252.733 392 OFFCURVE",
"293 295.092 OFFCURVE",
"293 232 CURVE SMOOTH",
"293 136.156 OFFCURVE",
"217.047 2 OFFCURVE",
"154 2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 933 13 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 934 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 59 106 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 59 121 59 137 59 153 59 169 59 185 59 201 59 217 59 233 59 249 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 59 25 59 41 59 57 59 73 59 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 69 118 69 134 69 150 69 166 69 182 69 198 69 214 69 230 69 246 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 69 22 69 38 69 54 69 70 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 69 101 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
54 929 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
64 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 396;
}
);
note = alpha;
unicode = 03B1;
},
{
glyphname = beta;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"312 513.459 OFFCURVE",
"301.66 543.007 OFFCURVE",
"259 583 CURVE SMOOTH",
"243 597.667 OFFCURVE",
"218.333 612 OFFCURVE",
"189 612 CURVE SMOOTH",
"125 612 OFFCURVE",
"87.333 557 OFFCURVE",
"66 469 CURVE SMOOTH",
"50 403.667 OFFCURVE",
"38.667 337.5 OFFCURVE",
"32 251.5 CURVE SMOOTH",
"25.333 165.5 OFFCURVE",
"22 59.333 OFFCURVE",
"22 -86 CURVE SMOOTH",
"22 -197.838 OFFCURVE",
"18.271 -275 OFFCURVE",
"52 -275 CURVE SMOOTH",
"76.667 -275 OFFCURVE",
"89 -267 OFFCURVE",
"89 -251 CURVE SMOOTH",
"89 -249.667 OFFCURVE",
"88.5 -247 OFFCURVE",
"87.5 -243 CURVE SMOOTH",
"86.5 -239 OFFCURVE",
"85.333 -233.333 OFFCURVE",
"84 -226 CURVE SMOOTH",
"73.333 -175.333 OFFCURVE",
"73 -97.333 OFFCURVE",
"73 0 CURVE SMOOTH",
"73 6.667 OFFCURVE",
"76.333 10 OFFCURVE",
"83 10 CURVE SMOOTH",
"85.667 10 OFFCURVE",
"87.333 9.667 OFFCURVE",
"88 9 CURVE",
"110.667 -5.667 OFFCURVE",
"143.667 -15 OFFCURVE",
"185 -15 CURVE SMOOTH",
"290.738 -15 OFFCURVE",
"326 93.352 OFFCURVE",
"326 187 CURVE SMOOTH",
"326 260.333 OFFCURVE",
"300 298 OFFCURVE",
"264 322 CURVE",
"257.333 326 OFFCURVE",
"254 331.333 OFFCURVE",
"254 338 CURVE SMOOTH",
"254 343.333 OFFCURVE",
"256.333 348.333 OFFCURVE",
"261 353 CURVE",
"295.667 385 OFFCURVE",
"312 430.667 OFFCURVE",
"312 460 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"122.066 508.878 OFFCURVE",
"151.419 576 OFFCURVE",
"203 576 CURVE SMOOTH",
"223 576 OFFCURVE",
"238.167 567.167 OFFCURVE",
"248.5 549.5 CURVE SMOOTH",
"258.833 531.833 OFFCURVE",
"264 500.667 OFFCURVE",
"264 456 CURVE SMOOTH",
"264 424.843 OFFCURVE",
"234.805 349 OFFCURVE",
"186 349 CURVE SMOOTH",
"150.876 349 OFFCURVE",
"108 344.415 OFFCURVE",
"108 306 CURVE SMOOTH",
"108 295.333 OFFCURVE",
"112.333 290 OFFCURVE",
"121 290 CURVE SMOOTH",
"137.212 290 OFFCURVE",
"173.351 312 OFFCURVE",
"192 312 CURVE SMOOTH",
"233.233 312 OFFCURVE",
"276 261.549 OFFCURVE",
"276 173 CURVE SMOOTH",
"276 109.625 OFFCURVE",
"251.544 15 OFFCURVE",
"181 15 CURVE SMOOTH",
"143.633 15 OFFCURVE",
"96.614 68 OFFCURVE",
"84 68 CURVE SMOOTH",
"76.667 68 OFFCURVE",
"73 71 OFFCURVE",
"73 77 CURVE SMOOTH",
"73 229.492 OFFCURVE",
"79.571 333.609 OFFCURVE",
"109 454 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 933 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
68 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
10 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 22 22 22 38 22 54 22 70 22 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 22 101 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 90 106 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 90 25 90 41 90 57 90 73 90 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
43 929 93 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 929 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 20 230 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
78 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = beta;
unicode = 03B2;
},
{
glyphname = psi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"273 -140 OFFCURVE",
"271.5 -134.5 OFFCURVE",
"268.5 -127.5 CURVE SMOOTH",
"265.5 -120.5 OFFCURVE",
"264 -116 OFFCURVE",
"264 -114 CURVE",
"253.333 -82 OFFCURVE",
"245 -39 OFFCURVE",
"241 17 CURVE",
"241 34.333 OFFCURVE",
"250 44.667 OFFCURVE",
"258 46 CURVE",
"290 50 OFFCURVE",
"321.333 68.667 OFFCURVE",
"348 90 CURVE SMOOTH",
"417.537 144.085 OFFCURVE",
"441 235.737 OFFCURVE",
"441 317 CURVE SMOOTH",
"441 331 OFFCURVE",
"440.833 345 OFFCURVE",
"440.5 359 CURVE SMOOTH",
"440.167 373 OFFCURVE",
"440 387 OFFCURVE",
"440 401 CURVE SMOOTH",
"440 414.201 OFFCURVE",
"412.858 430 OFFCURVE",
"398 430 CURVE SMOOTH",
"384.667 430 OFFCURVE",
"373 408.333 OFFCURVE",
"373 395 CURVE SMOOTH",
"373 387.208 OFFCURVE",
"392 333.586 OFFCURVE",
"392 311 CURVE SMOOTH",
"392 287.069 OFFCURVE",
"377.931 227.123 OFFCURVE",
"360 188 CURVE SMOOTH",
"339.23 142.683 OFFCURVE",
"305.629 99 OFFCURVE",
"262 99 CURVE SMOOTH",
"247.333 99 OFFCURVE",
"238 99.333 OFFCURVE",
"238 118 CURVE SMOOTH",
"238.667 167.333 OFFCURVE",
"239.667 213.667 OFFCURVE",
"241 257 CURVE SMOOTH",
"243.271 320.595 OFFCURVE",
"247.331 419.877 OFFCURVE",
"254 451 CURVE",
"259.333 469 OFFCURVE",
"262.667 481.167 OFFCURVE",
"264 487.5 CURVE SMOOTH",
"265.333 493.833 OFFCURVE",
"266 498.667 OFFCURVE",
"266 502 CURVE SMOOTH",
"266 520.667 OFFCURVE",
"242.667 536 OFFCURVE",
"224 536 CURVE SMOOTH",
"216 536 OFFCURVE",
"205.333 531.333 OFFCURVE",
"192 522 CURVE",
"192 515.333 OFFCURVE",
"193 505.333 OFFCURVE",
"195 492 CURVE SMOOTH",
"197 478.667 OFFCURVE",
"198 468 OFFCURVE",
"198 460 CURVE SMOOTH",
"198 441.708 OFFCURVE",
"196.081 382.867 OFFCURVE",
"195 331 CURVE SMOOTH",
"193.667 267 OFFCURVE",
"192 190 OFFCURVE",
"192 118 CURVE SMOOTH",
"192 98 OFFCURVE",
"186.333 94 OFFCURVE",
"177 94 CURVE SMOOTH",
"129.811 94 OFFCURVE",
"70 150.144 OFFCURVE",
"70 247 CURVE SMOOTH",
"70 293.199 OFFCURVE",
"105 349.441 OFFCURVE",
"105 381 CURVE SMOOTH",
"105 386.333 OFFCURVE",
"101.667 391.667 OFFCURVE",
"95 397 CURVE SMOOTH",
"88.333 402.333 OFFCURVE",
"75.333 405 OFFCURVE",
"56 405 CURVE SMOOTH",
"20.583 405 OFFCURVE",
"23 357.657 OFFCURVE",
"23 322 CURVE SMOOTH",
"23 308 OFFCURVE",
"22 295.167 OFFCURVE",
"20 283.5 CURVE SMOOTH",
"18 271.833 OFFCURVE",
"17 256.333 OFFCURVE",
"17 237 CURVE SMOOTH",
"17 147.161 OFFCURVE",
"81.535 66.765 OFFCURVE",
"170 48 CURVE",
"196.667 41.333 OFFCURVE",
"193 24.333 OFFCURVE",
"193 11 CURVE SMOOTH",
"194.333 -49.667 OFFCURVE",
"199.667 -95 OFFCURVE",
"209 -125 CURVE SMOOTH",
"218.333 -155 OFFCURVE",
"230.333 -170 OFFCURVE",
"245 -170 CURVE SMOOTH",
"263.667 -170 OFFCURVE",
"273 -161.333 OFFCURVE",
"273 -144 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 932 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 932 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 932 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 29 22 29 38 29 54 29 70 29 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 29 101 29 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
50 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 60 22 60 38 60 54 60 70 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 60 101 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 70 106 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 70 25 70 41 70 57 70 73 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
104 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 472;
}
);
note = psi;
unicode = 03C8;
},
{
glyphname = delta;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"55 449.333 OFFCURVE",
"68.333 418 OFFCURVE",
"87 394 CURVE SMOOTH",
"99.667 378.667 OFFCURVE",
"109 367.667 OFFCURVE",
"115 361 CURVE SMOOTH",
"121 354.333 OFFCURVE",
"124 348.333 OFFCURVE",
"124 343 CURVE SMOOTH",
"124 333.147 OFFCURVE",
"90.224 307.457 OFFCURVE",
"68 281 CURVE SMOOTH",
"40 247.667 OFFCURVE",
"12 201.667 OFFCURVE",
"12 139 CURVE SMOOTH",
"12 27 OFFCURVE",
"74 -33 OFFCURVE",
"174 -33 CURVE SMOOTH",
"269.051 -33 OFFCURVE",
"329 67.783 OFFCURVE",
"329 162 CURVE SMOOTH",
"329 243.333 OFFCURVE",
"285.333 296.333 OFFCURVE",
"216 347 CURVE SMOOTH",
"164.451 383.821 OFFCURVE",
"108 437.523 OFFCURVE",
"108 484 CURVE SMOOTH",
"108 518.667 OFFCURVE",
"137.333 540 OFFCURVE",
"164 540 CURVE SMOOTH",
"233.258 540 OFFCURVE",
"291.479 448 OFFCURVE",
"314 448 CURVE SMOOTH",
"338 448 OFFCURVE",
"353 470 OFFCURVE",
"353 478 CURVE SMOOTH",
"353 494 OFFCURVE",
"338 501.333 OFFCURVE",
"318 516 CURVE SMOOTH",
"267.333 554.667 OFFCURVE",
"211.667 576 OFFCURVE",
"165 576 CURVE SMOOTH",
"129.22 576 OFFCURVE",
"55 536.791 OFFCURVE",
"55 472 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67 215.192 OFFCURVE",
"132.415 316 OFFCURVE",
"169 316 CURVE SMOOTH",
"173.667 316 OFFCURVE",
"178.333 313.667 OFFCURVE",
"183 309 CURVE SMOOTH",
"227.412 264.588 OFFCURVE",
"273 228.372 OFFCURVE",
"273 167 CURVE SMOOTH",
"273 86.545 OFFCURVE",
"224.364 7 OFFCURVE",
"163 7 CURVE SMOOTH",
"103 7 OFFCURVE",
"67 61.667 OFFCURVE",
"67 139 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
49 933 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 934 57 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 49 22 49 38 49 54 49 70 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 49 101 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 38 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
22 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 57 106 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 57 25 57 41 57 57 57 73 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
52 928 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 929 19 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = delta;
unicode = 03B4;
},
{
glyphname = epsilon;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"259.028 -31 OFFCURVE",
"348 16.817 OFFCURVE",
"348 73 CURVE SMOOTH",
"348 91.667 OFFCURVE",
"337.667 101 OFFCURVE",
"317 101 CURVE SMOOTH",
"291.766 101 OFFCURVE",
"290.411 54.411 OFFCURVE",
"278 42 CURVE SMOOTH",
"259.333 23.333 OFFCURVE",
"224.667 9 OFFCURVE",
"182 9 CURVE SMOOTH",
"116.667 9 OFFCURVE",
"72 52 OFFCURVE",
"72 128 CURVE SMOOTH",
"72 165.608 OFFCURVE",
"103.811 206 OFFCURVE",
"144 206 CURVE SMOOTH",
"158.484 206 OFFCURVE",
"236.011 183 OFFCURVE",
"254 183 CURVE SMOOTH",
"275.333 183 OFFCURVE",
"292 192.333 OFFCURVE",
"292 207 CURVE SMOOTH",
"292 223 OFFCURVE",
"277.667 249 OFFCURVE",
"235 249 CURVE SMOOTH",
"227.667 249 OFFCURVE",
"220.833 248.833 OFFCURVE",
"214.5 248.5 CURVE SMOOTH",
"208.167 248.167 OFFCURVE",
"202.333 248 OFFCURVE",
"197 248 CURVE SMOOTH",
"161.821 248 OFFCURVE",
"151.057 254.477 OFFCURVE",
"119 289 CURVE SMOOTH",
"97.667 311.667 OFFCURVE",
"81 337 OFFCURVE",
"81 361 CURVE SMOOTH",
"81 382.333 OFFCURVE",
"96.333 403 OFFCURVE",
"135 403 CURVE SMOOTH",
"170.011 403 OFFCURVE",
"217.287 376.713 OFFCURVE",
"235 359 CURVE",
"234.333 357.667 OFFCURVE",
"234 355 OFFCURVE",
"234 351 CURVE SMOOTH",
"234 334.055 OFFCURVE",
"276.903 303 OFFCURVE",
"297 303 CURVE SMOOTH",
"311.667 303 OFFCURVE",
"322 313.667 OFFCURVE",
"322 327 CURVE",
"316.488 376.61 OFFCURVE",
"205.632 443 OFFCURVE",
"149 443 CURVE SMOOTH",
"67.667 443 OFFCURVE",
"29 404.667 OFFCURVE",
"29 354 CURVE SMOOTH",
"29 319.589 OFFCURVE",
"59.25 263.217 OFFCURVE",
"95 237 CURVE",
"49.667 213 OFFCURVE",
"16 164 OFFCURVE",
"16 124 CURVE SMOOTH",
"16 21.426 OFFCURVE",
"87.658 -31 OFFCURVE",
"187 -31 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
66 934 5 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 66 22 66 38 66 54 66 70 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 66 101 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
13 5 66 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
39 933 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
77 0 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 928 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 931 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 56 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = epsilon;
unicode = 03B5;
},
{
glyphname = phi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"305 -140.667 OFFCURVE",
"303.833 -136.333 OFFCURVE",
"301.5 -131 CURVE SMOOTH",
"299.167 -125.667 OFFCURVE",
"297.333 -120 OFFCURVE",
"296 -114 CURVE",
"285.333 -75.333 OFFCURVE",
"276.667 -35.667 OFFCURVE",
"274 3 CURVE",
"274 11 OFFCURVE",
"278.333 12.333 OFFCURVE",
"285 15 CURVE",
"392.948 30.421 OFFCURVE",
"497 111.458 OFFCURVE",
"497 206 CURVE SMOOTH",
"497 302.234 OFFCURVE",
"380.844 353.231 OFFCURVE",
"292 371 CURVE",
"283.333 371.667 OFFCURVE",
"279 375.667 OFFCURVE",
"279 383 CURVE",
"282.333 423 OFFCURVE",
"286.333 452.333 OFFCURVE",
"291 471 CURVE SMOOTH",
"295.667 489.667 OFFCURVE",
"298 500 OFFCURVE",
"298 502 CURVE SMOOTH",
"298 520.667 OFFCURVE",
"274.667 536 OFFCURVE",
"256 536 CURVE SMOOTH",
"248 536 OFFCURVE",
"237.333 531.333 OFFCURVE",
"224 522 CURVE",
"224 515.333 OFFCURVE",
"225 505.333 OFFCURVE",
"227 492 CURVE SMOOTH",
"229 478.667 OFFCURVE",
"230 468 OFFCURVE",
"230 460 CURVE SMOOTH",
"230 449.333 OFFCURVE",
"229.333 424.667 OFFCURVE",
"228 390 CURVE",
"228 379.333 OFFCURVE",
"226.667 373.667 OFFCURVE",
"216 371 CURVE",
"118.784 352.772 OFFCURVE",
"18 280.859 OFFCURVE",
"18 153 CURVE SMOOTH",
"18 80.056 OFFCURVE",
"98.943 19.167 OFFCURVE",
"216 12 CURVE",
"222.667 12 OFFCURVE",
"226 8.333 OFFCURVE",
"226 1 CURVE SMOOTH",
"228.336 -71.42 OFFCURVE",
"239.022 -170 OFFCURVE",
"277 -170 CURVE SMOOTH",
"295.667 -170 OFFCURVE",
"305 -161.333 OFFCURVE",
"305 -144 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"446 119.476 OFFCURVE",
"370.627 70.811 OFFCURVE",
"285 57 CURVE",
"284.333 56.333 OFFCURVE",
"282.667 56 OFFCURVE",
"280 56 CURVE SMOOTH",
"266.945 56 OFFCURVE",
"269 97.674 OFFCURVE",
"269 122 CURVE SMOOTH",
"269 139.333 OFFCURVE",
"269.333 161.833 OFFCURVE",
"270 189.5 CURVE SMOOTH",
"270.667 217.167 OFFCURVE",
"272.667 256.667 OFFCURVE",
"276 308 CURVE",
"276 314.667 OFFCURVE",
"279.667 322 OFFCURVE",
"289 322 CURVE SMOOTH",
"359.751 322 OFFCURVE",
"446 284.982 OFFCURVE",
"446 208 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 245.936 OFFCURVE",
"155.619 313 OFFCURVE",
"210 313 CURVE SMOOTH",
"220.667 313 OFFCURVE",
"226 312.667 OFFCURVE",
"226 302 CURVE SMOOTH",
"224.667 224.667 OFFCURVE",
"224 142 OFFCURVE",
"224 62 CURVE SMOOTH",
"224 55.333 OFFCURVE",
"220 52 OFFCURVE",
"212 52 CURVE SMOOTH",
"141.949 52 OFFCURVE",
"76 91.113 OFFCURVE",
"76 159 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 934 14 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
65 932 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
43 933 57 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
230 65 246 65 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 65 22 65 38 65 54 65 70 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 17 values pushed */
102 65 118 65 134 65 150 65 166 65 182 65 198 65 214 65 8 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
85 65 101 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 17 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 8 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
90 57 106 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
233 57 249 57 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
9 57 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
25 57 41 57 57 57 73 57 4 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 80 22 80 38 80 54 80 70 80 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 80 101 80 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
85 928 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 516;
}
);
note = phi;
unicode = 03C6;
},
{
glyphname = gamma;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"331 175.333 OFFCURVE",
"291.333 273 OFFCURVE",
"246 333 CURVE",
"289.333 368.333 OFFCURVE",
"311 394 OFFCURVE",
"311 410 CURVE SMOOTH",
"311 435.333 OFFCURVE",
"295 451 OFFCURVE",
"263 451 CURVE SMOOTH",
"244.333 451 OFFCURVE",
"242 440.333 OFFCURVE",
"242 427 CURVE",
"236.667 408.333 OFFCURVE",
"220 389.667 OFFCURVE",
"204 375 CURVE",
"152.073 426.927 OFFCURVE",
"113.155 447 OFFCURVE",
"80 447 CURVE SMOOTH",
"61.333 447 OFFCURVE",
"54 429.333 OFFCURVE",
"54 412 CURVE SMOOTH",
"54 409.333 OFFCURVE",
"54.667 403.667 OFFCURVE",
"56 397 CURVE",
"97.333 397 OFFCURVE",
"140.333 369.333 OFFCURVE",
"171 340 CURVE",
"68.333 245.333 OFFCURVE",
"23 139.333 OFFCURVE",
"23 -10 CURVE SMOOTH",
"23 -157.336 OFFCURVE",
"77.026 -254 OFFCURVE",
"163 -254 CURVE SMOOTH",
"197.667 -254 OFFCURVE",
"239.667 -222.833 OFFCURVE",
"273 -167.5 CURVE SMOOTH",
"306.333 -112.167 OFFCURVE",
"331 -34 OFFCURVE",
"331 62 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 138.609 OFFCURVE",
"143.22 257.176 OFFCURVE",
"208 309 CURVE",
"262.667 235.667 OFFCURVE",
"278 156 OFFCURVE",
"278 48 CURVE SMOOTH",
"278 -98.479 OFFCURVE",
"232.277 -210 OFFCURVE",
"163 -210 CURVE SMOOTH",
"137.667 -210 OFFCURVE",
"117 -192.167 OFFCURVE",
"101 -156.5 CURVE SMOOTH",
"85 -120.833 OFFCURVE",
"77 -68.667 OFFCURVE",
"77 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 49 106 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 49 25 49 41 49 57 49 73 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
41 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 41 118 41 134 41 150 41 166 41 182 41 198 41 214 41 230 41 246 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 41 22 41 38 41 54 41 70 41 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 41 101 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
44 930 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 16 105 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 16 120 16 136 16 152 16 168 16 184 16 200 16 216 16 232 16 248 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 16 24 16 40 16 56 16 72 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = gamma;
unicode = 03B3;
},
{
glyphname = eta;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"341 278.969 OFFCURVE",
"316.08 393.854 OFFCURVE",
"225 426 CURVE SMOOTH",
"209 432 OFFCURVE",
"197 435 OFFCURVE",
"189 435 CURVE SMOOTH",
"154.333 435 OFFCURVE",
"135.333 414 OFFCURVE",
"102 350 CURVE SMOOTH",
"92 330 OFFCURVE",
"84 319 OFFCURVE",
"78 317 CURVE",
"77.333 321.667 OFFCURVE",
"77 326.333 OFFCURVE",
"77 331 CURVE SMOOTH",
"77 335.667 OFFCURVE",
"77 340.667 OFFCURVE",
"77 346 CURVE SMOOTH",
"77 349.333 OFFCURVE",
"77.167 356.833 OFFCURVE",
"77.5 368.5 CURVE SMOOTH",
"77.833 380.167 OFFCURVE",
"78.667 396.667 OFFCURVE",
"80 418 CURVE",
"72.667 427.333 OFFCURVE",
"64.667 432 OFFCURVE",
"56 432 CURVE SMOOTH",
"46.722 432 OFFCURVE",
"24 413.968 OFFCURVE",
"24 403 CURVE SMOOTH",
"24 388.815 OFFCURVE",
"31 347.382 OFFCURVE",
"31 332 CURVE SMOOTH",
"31 326 OFFCURVE",
"30.333 317.333 OFFCURVE",
"29 306 CURVE SMOOTH",
"27.667 294.667 OFFCURVE",
"27 286 OFFCURVE",
"27 280 CURVE SMOOTH",
"27 53 LINE SMOOTH",
"27 11 OFFCURVE",
"40.333 -10 OFFCURVE",
"67 -10 CURVE SMOOTH",
"81 -10 OFFCURVE",
"88 -5 OFFCURVE",
"88 5 CURVE SMOOTH",
"88 26.462 OFFCURVE",
"75 94.538 OFFCURVE",
"75 116 CURVE SMOOTH",
"75 212 OFFCURVE",
"100.333 294 OFFCURVE",
"151 358 CURVE SMOOTH",
"171 383.333 OFFCURVE",
"189.667 396 OFFCURVE",
"207 396 CURVE SMOOTH",
"259 396 OFFCURVE",
"285 322 OFFCURVE",
"285 174 CURVE SMOOTH",
"285 142.667 OFFCURVE",
"283 103.5 OFFCURVE",
"279 56.5 CURVE SMOOTH",
"275 9.5 OFFCURVE",
"273 -49 OFFCURVE",
"273 -119 CURVE SMOOTH",
"273 -189.41 OFFCURVE",
"287.001 -268 OFFCURVE",
"327 -268 CURVE SMOOTH",
"332.333 -268 OFFCURVE",
"341.333 -264.667 OFFCURVE",
"354 -258 CURVE",
"354 -244 LINE",
"341.333 -240 OFFCURVE",
"333.5 -226.5 OFFCURVE",
"330.5 -203.5 CURVE SMOOTH",
"327.5 -180.5 OFFCURVE",
"326 -144 OFFCURVE",
"326 -94 CURVE SMOOTH",
"326 -46 OFFCURVE",
"330.167 -3.5 OFFCURVE",
"333.5 38.5 CURVE SMOOTH",
"336.127 71.601 OFFCURVE",
"341 130.798 OFFCURVE",
"341 167 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 933 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 933 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 16 106 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 16 25 16 41 16 57 16 73 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
62 928 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = eta;
unicode = 03B7;
},
{
glyphname = iota;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"99 408.333 OFFCURVE",
"75.667 415 OFFCURVE",
"57 415 CURVE SMOOTH",
"49 415 OFFCURVE",
"40.667 412.667 OFFCURVE",
"32 408 CURVE",
"29.333 348 OFFCURVE",
"28 282 OFFCURVE",
"28 178 CURVE SMOOTH",
"28 81.784 OFFCURVE",
"26.144 42.284 OFFCURVE",
"49 8 CURVE SMOOTH",
"63 -13.333 OFFCURVE",
"79.333 -24 OFFCURVE",
"98 -24 CURVE SMOOTH",
"108.667 -24 OFFCURVE",
"122.333 -24 OFFCURVE",
"129 0 CURVE",
"78.242 9.517 OFFCURVE",
"81 77.689 OFFCURVE",
"81 222 CURVE SMOOTH",
"81 264.667 OFFCURVE",
"83.333 305.333 OFFCURVE",
"90 352 CURVE",
"96.667 369.333 OFFCURVE",
"99 384.333 OFFCURVE",
"99 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
6 933 21 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 6 22 6 38 6 54 6 70 6 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 6 101 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 138;
}
);
note = iota;
unicode = 03B9;
},
{
glyphname = xi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"60 531.758 OFFCURVE",
"109.119 490.558 OFFCURVE",
"151 467 CURVE SMOOTH",
"154.333 465 OFFCURVE",
"156 462.667 OFFCURVE",
"156 460 CURVE SMOOTH",
"156 456 OFFCURVE",
"153.667 453 OFFCURVE",
"149 451 CURVE SMOOTH",
"105 431 OFFCURVE",
"70 381 OFFCURVE",
"70 333 CURVE SMOOTH",
"70 303.667 OFFCURVE",
"84.333 277.333 OFFCURVE",
"107 260 CURVE SMOOTH",
"109.667 258 OFFCURVE",
"111 255.667 OFFCURVE",
"111 253 CURVE SMOOTH",
"111 249 OFFCURVE",
"108.333 246 OFFCURVE",
"103 244 CURVE SMOOTH",
"53.667 224 OFFCURVE",
"19 173 OFFCURVE",
"19 117 CURVE SMOOTH",
"19 35.161 OFFCURVE",
"119.52 31 OFFCURVE",
"179 31 CURVE SMOOTH",
"243.048 31 OFFCURVE",
"320 31.579 OFFCURVE",
"320 1 CURVE SMOOTH",
"320 -71 OFFCURVE",
"290 -119 OFFCURVE",
"234 -119 CURVE SMOOTH",
"224.667 -119 OFFCURVE",
"217.667 -117.5 OFFCURVE",
"213 -114.5 CURVE SMOOTH",
"208.333 -111.5 OFFCURVE",
"202.667 -110 OFFCURVE",
"196 -110 CURVE SMOOTH",
"182 -110 OFFCURVE",
"172.667 -111.5 OFFCURVE",
"168 -114.5 CURVE SMOOTH",
"163.333 -117.5 OFFCURVE",
"161 -121.333 OFFCURVE",
"161 -126 CURVE SMOOTH",
"161 -141.638 OFFCURVE",
"172.262 -162 OFFCURVE",
"209 -162 CURVE SMOOTH",
"300.05 -162 OFFCURVE",
"367 -97.372 OFFCURVE",
"367 -5 CURVE SMOOTH",
"367 37.667 OFFCURVE",
"319 75 OFFCURVE",
"235 75 CURVE SMOOTH",
"225.667 75 OFFCURVE",
"216.5 74.833 OFFCURVE",
"207.5 74.5 CURVE SMOOTH",
"198.5 74.167 OFFCURVE",
"189.333 74 OFFCURVE",
"180 74 CURVE SMOOTH",
"128.811 74 OFFCURVE",
"77 86.387 OFFCURVE",
"77 134 CURVE SMOOTH",
"77 184.667 OFFCURVE",
"111 225 OFFCURVE",
"159 225 CURVE SMOOTH",
"165.667 225 OFFCURVE",
"174 223.333 OFFCURVE",
"182 222 CURVE SMOOTH",
"210 216.667 OFFCURVE",
"236.333 214 OFFCURVE",
"263 214 CURVE SMOOTH",
"289.667 214 OFFCURVE",
"314 221.333 OFFCURVE",
"314 252 CURVE SMOOTH",
"314 259.333 OFFCURVE",
"309.833 264 OFFCURVE",
"301.5 266 CURVE SMOOTH",
"293.167 268 OFFCURVE",
"282.333 269 OFFCURVE",
"269 269 CURVE SMOOTH",
"256.333 269 OFFCURVE",
"244.667 268.833 OFFCURVE",
"234 268.5 CURVE SMOOTH",
"223.333 268.167 OFFCURVE",
"212 268 OFFCURVE",
"200 268 CURVE SMOOTH",
"156 268 OFFCURVE",
"127 305.333 OFFCURVE",
"127 344 CURVE SMOOTH",
"127 386.667 OFFCURVE",
"153.333 416.333 OFFCURVE",
"188 435 CURVE",
"192.667 437 OFFCURVE",
"197.667 438 OFFCURVE",
"203 438 CURVE SMOOTH",
"227.399 438 OFFCURVE",
"279.819 425 OFFCURVE",
"303 425 CURVE SMOOTH",
"329.667 425 OFFCURVE",
"347 437 OFFCURVE",
"347 465 CURVE SMOOTH",
"347 487.667 OFFCURVE",
"323.333 489 OFFCURVE",
"306 489 CURVE SMOOTH",
"282 489 OFFCURVE",
"243.667 485.667 OFFCURVE",
"217 479 CURVE",
"210.333 477.667 OFFCURVE",
"206.333 477 OFFCURVE",
"205 477 CURVE SMOOTH",
"200.333 477 OFFCURVE",
"196.667 478 OFFCURVE",
"194 480 CURVE",
"162 496 OFFCURVE",
"141.667 516.333 OFFCURVE",
"127 551 CURVE SMOOTH",
"120.333 568.333 OFFCURVE",
"113.667 591.333 OFFCURVE",
"95 598 CURVE",
"80.333 595.333 OFFCURVE",
"60 589.667 OFFCURVE",
"60 571 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 93 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 932 83 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 83 106 83 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 83 25 83 41 83 57 83 73 83 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
19 83 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 53 22 53 38 53 54 53 70 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 53 101 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
103 93 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
103 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
32 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 74 74 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 74 25 74 41 74 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
116 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
77 931 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 931 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 930 88 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 930 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = xi;
unicode = 03BE;
},
{
glyphname = kappa;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"370 -22 OFFCURVE",
"371 -20.333 OFFCURVE",
"371 -19 CURVE SMOOTH",
"371 -16.333 OFFCURVE",
"370 -14.333 OFFCURVE",
"368 -13 CURVE",
"338.667 1.667 OFFCURVE",
"302.333 30.333 OFFCURVE",
"261 77 CURVE SMOOTH",
"235.656 105.325 OFFCURVE",
"146 202.344 OFFCURVE",
"146 217 CURVE SMOOTH",
"146 233 OFFCURVE",
"174.333 266 OFFCURVE",
"231 316 CURVE SMOOTH",
"280.333 358.667 OFFCURVE",
"317.667 388.667 OFFCURVE",
"343 406 CURVE",
"343.667 408 OFFCURVE",
"344 411.667 OFFCURVE",
"344 417 CURVE SMOOTH",
"344 438.333 OFFCURVE",
"330.667 453 OFFCURVE",
"312 453 CURVE SMOOTH",
"308.667 453 OFFCURVE",
"301.167 448.5 OFFCURVE",
"289.5 439.5 CURVE SMOOTH",
"277.833 430.5 OFFCURVE",
"263 415.667 OFFCURVE",
"245 395 CURVE SMOOTH",
"196.758 339.866 OFFCURVE",
"118.385 271.826 OFFCURVE",
"87 249 CURVE",
"83.667 249 OFFCURVE",
"82 250.667 OFFCURVE",
"82 254 CURVE SMOOTH",
"82 257.333 OFFCURVE",
"82.667 265.667 OFFCURVE",
"84 279 CURVE SMOOTH",
"85.333 292.333 OFFCURVE",
"86 309.333 OFFCURVE",
"86 330 CURVE SMOOTH",
"86 360 OFFCURVE",
"88 382.167 OFFCURVE",
"92 396.5 CURVE SMOOTH",
"96 410.833 OFFCURVE",
"98 419 OFFCURVE",
"98 421 CURVE SMOOTH",
"98 431.667 OFFCURVE",
"80 440 OFFCURVE",
"68 440 CURVE SMOOTH",
"52 440 OFFCURVE",
"25 423.333 OFFCURVE",
"25 410 CURVE SMOOTH",
"25 403.333 OFFCURVE",
"26 395.667 OFFCURVE",
"28 387 CURVE SMOOTH",
"32.364 367.363 OFFCURVE",
"34 352.341 OFFCURVE",
"34 329 CURVE SMOOTH",
"34 309.862 OFFCURVE",
"32.987 264.154 OFFCURVE",
"32.5 232 CURVE SMOOTH",
"31.833 188 OFFCURVE",
"31 130.333 OFFCURVE",
"31 49 CURVE SMOOTH",
"31 2.333 OFFCURVE",
"44.333 -12 OFFCURVE",
"71 -12 CURVE SMOOTH",
"84.333 -12 OFFCURVE",
"95 -3 OFFCURVE",
"95 5 CURVE SMOOTH",
"95 11 OFFCURVE",
"93 19.5 OFFCURVE",
"89 30.5 CURVE SMOOTH",
"85 41.5 OFFCURVE",
"82.667 50 OFFCURVE",
"82 56 CURVE SMOOTH",
"81.333 63.333 OFFCURVE",
"81 73.5 OFFCURVE",
"81 86.5 CURVE SMOOTH",
"81 99.5 OFFCURVE",
"81 113 OFFCURVE",
"81 127 CURVE SMOOTH",
"81 151 OFFCURVE",
"81.333 179 OFFCURVE",
"100 179 CURVE",
"112.667 171 OFFCURVE",
"128 157.667 OFFCURVE",
"146 139 CURVE SMOOTH",
"148.741 136.259 OFFCURVE",
"208.495 61.068 OFFCURVE",
"225 42.5 CURVE SMOOTH",
"256.064 7.553 OFFCURVE",
"304.525 -44 OFFCURVE",
"328 -44 CURVE SMOOTH",
"337.333 -44 OFFCURVE",
"350.667 -37.333 OFFCURVE",
"368 -24 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
47 933 26 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 47 22 47 38 47 54 47 70 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 47 101 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 26 70 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
78 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
52 2 60 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 381;
}
);
note = kappa;
unicode = 03BA;
},
{
glyphname = lambda;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"171.277 334.329 OFFCURVE",
"118.934 188.966 OFFCURVE",
"62 85 CURVE SMOOTH",
"40.945 46.718 OFFCURVE",
"21 30.988 OFFCURVE",
"21 14 CURVE SMOOTH",
"21 -4.667 OFFCURVE",
"40.667 -22 OFFCURVE",
"58 -22 CURVE SMOOTH",
"81.935 -22 OFFCURVE",
"95.106 12.433 OFFCURVE",
"109 43 CURVE SMOOTH",
"157 151 OFFCURVE",
"185.333 240 OFFCURVE",
"212 332 CURVE",
"214 340 OFFCURVE",
"216.333 344 OFFCURVE",
"219 344 CURVE SMOOTH",
"222.333 344 OFFCURVE",
"224.667 340.333 OFFCURVE",
"226 333 CURVE SMOOTH",
"243.315 216.741 OFFCURVE",
"275.632 57.007 OFFCURVE",
"331 -30 CURVE SMOOTH",
"341.667 -47.333 OFFCURVE",
"363.333 -49 OFFCURVE",
"370 -49 CURVE SMOOTH",
"380.667 -49 OFFCURVE",
"395 -35.667 OFFCURVE",
"395 -29 CURVE SMOOTH",
"395 -7.889 OFFCURVE",
"343.233 65.641 OFFCURVE",
"326 125 CURVE SMOOTH",
"295.333 226.333 OFFCURVE",
"278.667 324 OFFCURVE",
"264 408 CURVE SMOOTH",
"256.667 450 OFFCURVE",
"249.667 488.5 OFFCURVE",
"243 523.5 CURVE SMOOTH",
"228.592 599.143 OFFCURVE",
"180.397 694 OFFCURVE",
"125 694 CURVE SMOOTH",
"71.805 694 OFFCURVE",
"24 646.882 OFFCURVE",
"24 613 CURVE SMOOTH",
"24 595.667 OFFCURVE",
"43 580 OFFCURVE",
"59 580 CURVE SMOOTH",
"67.157 580 OFFCURVE",
"79.504 609.003 OFFCURVE",
"92 619 CURVE",
"108 633.667 OFFCURVE",
"118 639 OFFCURVE",
"134 639 CURVE SMOOTH",
"171.699 639 OFFCURVE",
"204 538.278 OFFCURVE",
"204 475 CURVE SMOOTH",
"204 463 OFFCURVE",
"202.667 452.667 OFFCURVE",
"200 444 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 7 105 7 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 7 120 7 136 7 152 7 168 7 184 7 200 7 216 7 232 7 248 7 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 7 24 7 40 7 56 7 72 7 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
57 15 73 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 15 120 15 136 15 152 15 168 15 184 15 200 15 216 15 232 15 248 15 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
8 15 24 15 40 15 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 392;
}
);
note = lambda;
unicode = 03BB;
},
{
glyphname = mu.Greek;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 397.333 OFFCURVE",
"297.667 409 OFFCURVE",
"273 409 CURVE SMOOTH",
"248.333 409 OFFCURVE",
"236 400.667 OFFCURVE",
"236 384 CURVE SMOOTH",
"236 378 OFFCURVE",
"237.833 370.167 OFFCURVE",
"241.5 360.5 CURVE SMOOTH",
"245.167 350.833 OFFCURVE",
"247 343.333 OFFCURVE",
"247 338 CURVE SMOOTH",
"247 207 LINE SMOOTH",
"247 115.141 OFFCURVE",
"209.23 27 OFFCURVE",
"148 27 CURVE SMOOTH",
"108.219 27 OFFCURVE",
"81 91.335 OFFCURVE",
"81 142 CURVE SMOOTH",
"81 177.046 OFFCURVE",
"87 342.416 OFFCURVE",
"87 392 CURVE SMOOTH",
"87 413.333 OFFCURVE",
"77.667 424 OFFCURVE",
"59 424 CURVE SMOOTH",
"35.667 424 OFFCURVE",
"24 416.333 OFFCURVE",
"24 401 CURVE SMOOTH",
"24 397.667 OFFCURVE",
"24.333 395.333 OFFCURVE",
"25 394 CURVE",
"25 177 LINE SMOOTH",
"25 84.647 OFFCURVE",
"24.898 -37.149 OFFCURVE",
"26.5 -82 CURVE SMOOTH",
"28.5 -138 OFFCURVE",
"33 -173.667 OFFCURVE",
"41 -219 CURVE SMOOTH",
"48.292 -265.184 OFFCURVE",
"55.083 -272 OFFCURVE",
"85 -272 CURVE SMOOTH",
"102.333 -272 OFFCURVE",
"111 -269.667 OFFCURVE",
"111 -255 CURVE SMOOTH",
"111 -254.905 OFFCURVE",
"97.314 -228.671 OFFCURVE",
"93.5 -214 CURVE SMOOTH",
"83.888 -177.032 OFFCURVE",
"76 -89.346 OFFCURVE",
"76 8 CURVE",
"88 -6.667 OFFCURVE",
"112 -22 OFFCURVE",
"132 -22 CURVE SMOOTH",
"181.333 -22 OFFCURVE",
"220.333 6.333 OFFCURVE",
"239 33 CURVE",
"254.37 2.26 OFFCURVE",
"237.647 -23 OFFCURVE",
"277 -23 CURVE SMOOTH",
"288.333 -23 OFFCURVE",
"295.667 -19.333 OFFCURVE",
"299 -12 CURVE SMOOTH",
"302.333 -4.667 OFFCURVE",
"304 10.667 OFFCURVE",
"304 34 CURVE SMOOTH",
"304 59.773 OFFCURVE",
"297 153.471 OFFCURVE",
"297 175 CURVE SMOOTH",
"297 225.137 OFFCURVE",
"310 337.153 OFFCURVE",
"310 374 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 933 42 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 934 68 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 68 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
64 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 937 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
18 32 47 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
59 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 59 23 59 39 59 55 59 71 59 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 59 102 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
24 21 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 331;
}
);
note = mu.Greek;
},
{
glyphname = nu;
layers = (
{
components = (
{
name = v;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 353;
}
);
note = nu;
unicode = 03BD;
},
{
glyphname = omicron;
layers = (
{
components = (
{
name = o;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = omicron;
unicode = 03BF;
},
{
glyphname = pi.Greek;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"447 411.667 OFFCURVE",
"413 426 OFFCURVE",
"385 426 CURVE SMOOTH",
"361 426 OFFCURVE",
"318.5 425.167 OFFCURVE",
"257.5 423.5 CURVE SMOOTH",
"196.5 421.833 OFFCURVE",
"120 418 OFFCURVE",
"28 412 CURVE",
"19.333 412 OFFCURVE",
"15 406.667 OFFCURVE",
"15 396 CURVE SMOOTH",
"15 383.123 OFFCURVE",
"27.876 349 OFFCURVE",
"41 349 CURVE SMOOTH",
"46.333 349 OFFCURVE",
"52.333 351.167 OFFCURVE",
"59 355.5 CURVE SMOOTH",
"65.667 359.833 OFFCURVE",
"71.333 362 OFFCURVE",
"76 362 CURVE SMOOTH",
"83.333 362 OFFCURVE",
"87 358.333 OFFCURVE",
"87 351 CURVE SMOOTH",
"87 41 LINE SMOOTH",
"87 9.667 OFFCURVE",
"103.333 -6 OFFCURVE",
"136 -6 CURVE SMOOTH",
"143.333 -6 OFFCURVE",
"147 -3.333 OFFCURVE",
"147 2 CURVE",
"141 26.667 OFFCURVE",
"138 46.667 OFFCURVE",
"138 62 CURVE SMOOTH",
"138 283 LINE SMOOTH",
"138 316.924 OFFCURVE",
"141.647 378 OFFCURVE",
"167 378 CURVE SMOOTH",
"223 378 OFFCURVE",
"259.333 377.333 OFFCURVE",
"294 376 CURVE",
"302 376 OFFCURVE",
"306 372.333 OFFCURVE",
"306 365 CURVE",
"304.667 349.667 OFFCURVE",
"304 333.667 OFFCURVE",
"304 317 CURVE SMOOTH",
"304 300.333 OFFCURVE",
"304 282.333 OFFCURVE",
"304 263 CURVE SMOOTH",
"304 160.333 OFFCURVE",
"304.333 103.833 OFFCURVE",
"307 68.5 CURVE SMOOTH",
"309.667 33.167 OFFCURVE",
"314.333 19 OFFCURVE",
"325 3 CURVE",
"337 -17 OFFCURVE",
"355.333 -24 OFFCURVE",
"374 -24 CURVE SMOOTH",
"384.667 -24 OFFCURVE",
"398.333 -24 OFFCURVE",
"405 0 CURVE",
"354.437 9.481 OFFCURVE",
"357 79.821 OFFCURVE",
"357 222 CURVE SMOOTH",
"357 268.667 OFFCURVE",
"357.667 320 OFFCURVE",
"367 360 CURVE",
"369 367.333 OFFCURVE",
"374 371 OFFCURVE",
"382 371 CURVE SMOOTH",
"390.667 371 OFFCURVE",
"398.833 368.667 OFFCURVE",
"406.5 364 CURVE SMOOTH",
"414.167 359.333 OFFCURVE",
"422 357 OFFCURVE",
"430 357 CURVE SMOOTH",
"435.333 357 OFFCURVE",
"439.5 358.5 OFFCURVE",
"442.5 361.5 CURVE SMOOTH",
"445.5 364.5 OFFCURVE",
"447 372.333 OFFCURVE",
"447 385 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 933 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 933 27 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 27 106 27 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 27 25 27 41 27 57 27 73 27 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
45 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
63 931 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
53 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 458;
}
);
note = pi.Greek;
},
{
glyphname = omegatonos;
layers = (
{
components = (
{
name = omega;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 100, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 497;
}
);
note = omegatonos;
unicode = 03CE;
},
{
glyphname = rho;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"325 343.377 OFFCURVE",
"252.362 437 OFFCURVE",
"196 437 CURVE SMOOTH",
"138.257 437 OFFCURVE",
"72.664 356.863 OFFCURVE",
"54 298 CURVE SMOOTH",
"36.667 243.333 OFFCURVE",
"27 182.667 OFFCURVE",
"23 120 CURVE SMOOTH",
"21 88.667 OFFCURVE",
"20 58.667 OFFCURVE",
"20 30 CURVE SMOOTH",
"20 -32.762 OFFCURVE",
"27.107 -183.481 OFFCURVE",
"35 -219 CURVE SMOOTH",
"44.761 -265.367 OFFCURVE",
"50.698 -272 OFFCURVE",
"79 -272 CURVE SMOOTH",
"96.333 -272 OFFCURVE",
"105 -269.667 OFFCURVE",
"105 -255 CURVE SMOOTH",
"105 -253.667 OFFCURVE",
"104 -251.167 OFFCURVE",
"102 -247.5 CURVE SMOOTH",
"100 -243.833 OFFCURVE",
"98 -239 OFFCURVE",
"96 -233 CURVE SMOOTH",
"77.333 -173 OFFCURVE",
"69 -113 OFFCURVE",
"69 -25 CURVE SMOOTH",
"69 -15.667 OFFCURVE",
"70.333 0.333 OFFCURVE",
"73 7 CURVE",
"101 -6.333 OFFCURVE",
"135.667 -14 OFFCURVE",
"173 -14 CURVE SMOOTH",
"274.421 -14 OFFCURVE",
"325 98.897 OFFCURVE",
"325 245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"276 139.619 OFFCURVE",
"241.317 27 OFFCURVE",
"174 27 CURVE SMOOTH",
"128.667 27 OFFCURVE",
"111.667 45 OFFCURVE",
"97 69 CURVE",
"92.333 77.667 OFFCURVE",
"86 82 OFFCURVE",
"78 82 CURVE SMOOTH",
"74 82 OFFCURVE",
"71.333 81.667 OFFCURVE",
"70 81 CURVE",
"70 132.709 OFFCURVE",
"83.463 205.956 OFFCURVE",
"104 268.5 CURVE SMOOTH",
"123.725 328.571 OFFCURVE",
"162.278 388 OFFCURVE",
"210 388 CURVE SMOOTH",
"227.333 388 OFFCURVE",
"242.667 376.667 OFFCURVE",
"256 354 CURVE SMOOTH",
"269.333 331.333 OFFCURVE",
"276 293.667 OFFCURVE",
"276 241 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 42 106 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 42 25 42 41 42 57 42 73 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 11 22 11 38 11 54 11 70 11 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 11 101 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 937 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
37 931 45 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 59 23 59 39 59 55 59 71 59 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 59 102 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = rho;
unicode = 03C1;
},
{
glyphname = sigma;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"428 440.52 OFFCURVE",
"355.536 447 OFFCURVE",
"319 447 CURVE SMOOTH",
"133.667 447 OFFCURVE",
"25 348.333 OFFCURVE",
"25 147 CURVE SMOOTH",
"25 44.171 OFFCURVE",
"73.88 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"272.701 -30 OFFCURVE",
"342 78.795 OFFCURVE",
"342 197 CURVE SMOOTH",
"342 247.936 OFFCURVE",
"325.532 330.38 OFFCURVE",
"295 366 CURVE SMOOTH",
"287.667 374.667 OFFCURVE",
"282.167 380.167 OFFCURVE",
"278.5 382.5 CURVE SMOOTH",
"274.833 384.833 OFFCURVE",
"273 386.667 OFFCURVE",
"273 388 CURVE SMOOTH",
"273 391.333 OFFCURVE",
"274.667 393 OFFCURVE",
"278 393 CURVE SMOOTH",
"316.626 393 OFFCURVE",
"405.849 372 OFFCURVE",
"411 372 CURVE SMOOTH",
"422.333 372 OFFCURVE",
"428 381.333 OFFCURVE",
"428 400 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"213 354.525 OFFCURVE",
"236.182 350.345 OFFCURVE",
"250 331 CURVE SMOOTH",
"273.007 297.767 OFFCURVE",
"294 238.092 OFFCURVE",
"294 198 CURVE SMOOTH",
"294 102.502 OFFCURVE",
"246.366 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"108.457 9 OFFCURVE",
"80 75.39 OFFCURVE",
"80 156 CURVE SMOOTH",
"80 232 OFFCURVE",
"95 292 OFFCURVE",
"127 332 CURVE SMOOTH",
"145.667 356 OFFCURVE",
"179.333 383 OFFCURVE",
"206 383 CURVE SMOOTH",
"210.667 383 OFFCURVE",
"213 381.333 OFFCURVE",
"213 378 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 53 106 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 53 25 53 41 53 57 53 73 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
43 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 43 118 43 134 43 150 43 166 43 182 43 198 43 214 43 230 43 246 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 43 22 43 38 43 54 43 70 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 43 101 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
48 928 22 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 931 7 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 432;
}
);
note = sigma;
unicode = 03C3;
},
{
glyphname = tau;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"337 123.153 OFFCURVE",
"321.879 148 OFFCURVE",
"314 148 CURVE SMOOTH",
"304.667 148 OFFCURVE",
"298.667 143.667 OFFCURVE",
"296 135 CURVE SMOOTH",
"293.333 126.333 OFFCURVE",
"290.667 119 OFFCURVE",
"288 113 CURVE",
"266.289 72.291 OFFCURVE",
"215.517 28 OFFCURVE",
"170 28 CURVE SMOOTH",
"118 28 OFFCURVE",
"78 67.333 OFFCURVE",
"78 170 CURVE SMOOTH",
"78 291.656 OFFCURVE",
"133.263 428 OFFCURVE",
"202 428 CURVE SMOOTH",
"226.399 428 OFFCURVE",
"278.819 415 OFFCURVE",
"302 415 CURVE SMOOTH",
"328.667 415 OFFCURVE",
"346 427 OFFCURVE",
"346 455 CURVE SMOOTH",
"346 477.667 OFFCURVE",
"322.333 479 OFFCURVE",
"305 479 CURVE SMOOTH",
"281 479 OFFCURVE",
"242.667 475.667 OFFCURVE",
"216 469 CURVE",
"209.333 467.667 OFFCURVE",
"205.333 467 OFFCURVE",
"204 467 CURVE SMOOTH",
"199.333 467 OFFCURVE",
"195.667 468 OFFCURVE",
"193 470 CURVE",
"161 486 OFFCURVE",
"136.667 507.333 OFFCURVE",
"122 542 CURVE SMOOTH",
"115.333 559.333 OFFCURVE",
"108.667 582.333 OFFCURVE",
"90 589 CURVE",
"75.333 586.333 OFFCURVE",
"55 580.667 OFFCURVE",
"55 562 CURVE SMOOTH",
"55 525.474 OFFCURVE",
"110.032 479.482 OFFCURVE",
"150 457 CURVE SMOOTH",
"153.333 455 OFFCURVE",
"155 452.667 OFFCURVE",
"155 450 CURVE SMOOTH",
"155 446 OFFCURVE",
"152.667 443 OFFCURVE",
"148 441 CURVE",
"68 390.333 OFFCURVE",
"18 292 OFFCURVE",
"18 160 CURVE SMOOTH",
"18 33.707 OFFCURVE",
"83.837 -10 OFFCURVE",
"163 -10 CURVE SMOOTH",
"232.755 -10 OFFCURVE",
"285.344 32.065 OFFCURVE",
"322 80 CURVE",
"331.333 93.333 OFFCURVE",
"337 104.667 OFFCURVE",
"337 114 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 934 13 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 57 118 57 134 57 150 57 166 57 182 57 198 57 214 57 230 57 246 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 57 22 57 38 57 54 57 70 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 57 101 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 931 52 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 199 60 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 60 230 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 68 119 68 135 68 151 68 167 68 183 68 199 68 215 68 231 68 247 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 68 23 68 39 68 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 68 70 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = tau;
unicode = 03C4;
},
{
glyphname = theta;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"365 311.979 OFFCURVE",
"341 323.028 OFFCURVE",
"341 338 CURVE SMOOTH",
"341 436.667 OFFCURVE",
"330.5 508.167 OFFCURVE",
"312.5 559.5 CURVE SMOOTH",
"294.5 610.833 OFFCURVE",
"268.333 642.333 OFFCURVE",
"239 661 CURVE SMOOTH",
"215.667 675.667 OFFCURVE",
"197.667 683 OFFCURVE",
"185 683 CURVE SMOOTH",
"145 683 OFFCURVE",
"109.667 646.167 OFFCURVE",
"83 585.5 CURVE SMOOTH",
"56.333 524.833 OFFCURVE",
"37 440.333 OFFCURVE",
"29 343 CURVE",
"29 321.688 OFFCURVE",
"10 321.004 OFFCURVE",
"10 305 CURVE SMOOTH",
"10 301.667 OFFCURVE",
"10.667 296.333 OFFCURVE",
"12 289 CURVE SMOOTH",
"13.333 281.667 OFFCURVE",
"17.667 273.333 OFFCURVE",
"25 264 CURVE",
"25 236 LINE SMOOTH",
"25 44 OFFCURVE",
"79 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"276.333 -30 OFFCURVE",
"342 69 OFFCURVE",
"342 253 CURVE SMOOTH",
"342 276.633 OFFCURVE",
"365 266.391 OFFCURVE",
"365 293 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 176 OFFCURVE",
"283.833 112.333 OFFCURVE",
"263.5 71 CURVE SMOOTH",
"243.167 29.667 OFFCURVE",
"215 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"147 9 OFFCURVE",
"122.5 26.667 OFFCURVE",
"105.5 62 CURVE SMOOTH",
"88.5 97.333 OFFCURVE",
"80 156 OFFCURVE",
"80 238 CURVE SMOOTH",
"80 249 LINE SMOOTH",
"80 282.333 OFFCURVE",
"106.667 286 OFFCURVE",
"144 286 CURVE SMOOTH",
"222 286 LINE SMOOTH",
"242.667 286 OFFCURVE",
"259.833 284.667 OFFCURVE",
"273.5 282 CURVE SMOOTH",
"287.167 279.333 OFFCURVE",
"294 272.667 OFFCURVE",
"294 262 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"225.333 628 OFFCURVE",
"246.333 605 OFFCURVE",
"263 559 CURVE SMOOTH",
"279.667 513 OFFCURVE",
"289 443 OFFCURVE",
"291 349 CURVE SMOOTH",
"291 339 OFFCURVE",
"286.333 334 OFFCURVE",
"277 334 CURVE SMOOTH",
"247.104 334 OFFCURVE",
"175.256 329.946 OFFCURVE",
"94 324 CURVE",
"87.333 324 OFFCURVE",
"84 330 OFFCURVE",
"84 334 CURVE",
"93.041 480.922 OFFCURVE",
"133.578 628 OFFCURVE",
"200 628 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 933 11 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 933 66 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
48 928 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 931 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 931 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = theta;
unicode = 03B8;
},
{
glyphname = omega;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"442 353 OFFCURVE",
"429.833 376.333 OFFCURVE",
"417.5 391 CURVE SMOOTH",
"405.167 405.667 OFFCURVE",
"394 413 OFFCURVE",
"384 413 CURVE SMOOTH",
"369.333 413 OFFCURVE",
"358 396.667 OFFCURVE",
"358 382 CURVE SMOOTH",
"358 374.667 OFFCURVE",
"360.833 369.667 OFFCURVE",
"366.5 367 CURVE SMOOTH",
"372.167 364.333 OFFCURVE",
"376.667 361.333 OFFCURVE",
"380 358 CURVE",
"385.597 354.269 OFFCURVE",
"399.78 335.497 OFFCURVE",
"409.5 313.5 CURVE SMOOTH",
"422.167 284.833 OFFCURVE",
"434 238 OFFCURVE",
"434 170 CURVE SMOOTH",
"434 105.437 OFFCURVE",
"406.542 46 OFFCURVE",
"364 46 CURVE SMOOTH",
"308.897 46 OFFCURVE",
"279 136.658 OFFCURVE",
"279 203 CURVE SMOOTH",
"279 307 LINE",
"281.637 314.912 OFFCURVE",
"282 346.132 OFFCURVE",
"282 356 CURVE SMOOTH",
"282 382.667 OFFCURVE",
"270.667 396 OFFCURVE",
"248 396 CURVE SMOOTH",
"229.333 396 OFFCURVE",
"224 384.667 OFFCURVE",
"224 370 CURVE SMOOTH",
"224 352.667 OFFCURVE",
"226.333 320 OFFCURVE",
"229 304 CURVE",
"229 211.365 OFFCURVE",
"205.324 46 OFFCURVE",
"132 46 CURVE SMOOTH",
"90.667 46 OFFCURVE",
"69 92 OFFCURVE",
"69 176 CURVE SMOOTH",
"69 252 OFFCURVE",
"85 304.667 OFFCURVE",
"105 334 CURVE",
"107.667 337.333 OFFCURVE",
"110.667 339.667 OFFCURVE",
"114 341 CURVE SMOOTH",
"117.333 342.333 OFFCURVE",
"121.333 346 OFFCURVE",
"126 352 CURVE SMOOTH",
"134 362.667 OFFCURVE",
"136 372 OFFCURVE",
"136 376 CURVE SMOOTH",
"136 392 OFFCURVE",
"111 412 OFFCURVE",
"99 412 CURVE SMOOTH",
"46.332 412 OFFCURVE",
"20 273.109 OFFCURVE",
"20 166 CURVE SMOOTH",
"20 62 OFFCURVE",
"63.667 -7 OFFCURVE",
"133 -7 CURVE SMOOTH",
"202.24 -7 OFFCURVE",
"226.401 56.605 OFFCURVE",
"246 121 CURVE",
"275.333 41 OFFCURVE",
"305 -1 OFFCURVE",
"373 -1 CURVE SMOOTH",
"437.989 -1 OFFCURVE",
"474 85.899 OFFCURVE",
"474 169 CURVE SMOOTH",
"474 242.327 OFFCURVE",
"469.474 277.673 OFFCURVE",
"454 321 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 932 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 932 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 78 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
13 46 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 38 118 38 134 38 150 38 166 38 182 38 198 38 214 38 230 38 246 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 38 22 38 38 38 54 38 70 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 38 101 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 78 74 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 78 121 78 137 78 153 78 169 78 185 78 201 78 217 78 233 78 249 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 78 25 78 41 78 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 18 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
41 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 41 23 41 39 41 55 41 71 41 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 41 102 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 497;
}
);
note = omega;
unicode = 03C9;
},
{
glyphname = sigmafinal;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"257.667 406 OFFCURVE",
"289.333 393.333 OFFCURVE",
"300 376 CURVE",
"307.333 358.667 OFFCURVE",
"318.333 350 OFFCURVE",
"333 350 CURVE SMOOTH",
"339.667 350 OFFCURVE",
"353 372.333 OFFCURVE",
"353 383 CURVE SMOOTH",
"353 417.435 OFFCURVE",
"280.229 446 OFFCURVE",
"223 446 CURVE SMOOTH",
"96.191 446 OFFCURVE",
"19 331.751 OFFCURVE",
"19 171 CURVE SMOOTH",
"19 46.614 OFFCURVE",
"108.682 28 OFFCURVE",
"179 28 CURVE SMOOTH",
"278.799 28 OFFCURVE",
"318 20.606 OFFCURVE",
"318 -20 CURVE SMOOTH",
"318 -76.348 OFFCURVE",
"287.628 -111 OFFCURVE",
"214 -111 CURVE SMOOTH",
"198.667 -111 OFFCURVE",
"188 -109.333 OFFCURVE",
"182 -106 CURVE SMOOTH",
"176 -102.667 OFFCURVE",
"169 -101 OFFCURVE",
"161 -101 CURVE SMOOTH",
"147 -101 OFFCURVE",
"137.667 -102.5 OFFCURVE",
"133 -105.5 CURVE SMOOTH",
"128.333 -108.5 OFFCURVE",
"126 -112.333 OFFCURVE",
"126 -117 CURVE SMOOTH",
"126 -132.818 OFFCURVE",
"138.18 -153 OFFCURVE",
"177 -153 CURVE SMOOTH",
"294.333 -153 OFFCURVE",
"365 -102.333 OFFCURVE",
"365 -9 CURVE SMOOTH",
"365 27.364 OFFCURVE",
"324.884 54.279 OFFCURVE",
"290 63 CURVE SMOOTH",
"245.221 72.951 OFFCURVE",
"176.388 68.657 OFFCURVE",
"143 74.5 CURVE SMOOTH",
"97.805 82.409 OFFCURVE",
"76 118.985 OFFCURVE",
"76 189 CURVE SMOOTH",
"76 307.654 OFFCURVE",
"143.656 406 OFFCURVE",
"219 406 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 36 106 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 36 25 36 41 36 57 36 73 36 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
31 928 20 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 928 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 386;
}
);
note = sigmafinal;
unicode = 03C2;
},
{
glyphname = chi;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"411 -170.333 OFFCURVE",
"406.333 -152 OFFCURVE",
"397 -152 CURVE SMOOTH",
"392.333 -152 OFFCURVE",
"389.167 -153.833 OFFCURVE",
"387.5 -157.5 CURVE SMOOTH",
"385.833 -161.167 OFFCURVE",
"383.667 -163 OFFCURVE",
"381 -163 CURVE SMOOTH",
"367.667 -163 OFFCURVE",
"338.333 -121.333 OFFCURVE",
"293 -38 CURVE SMOOTH",
"257 27.333 OFFCURVE",
"230.333 79.333 OFFCURVE",
"213 122 CURVE",
"259.924 206.463 OFFCURVE",
"323.963 337.064 OFFCURVE",
"358 410 CURVE",
"356.667 428.667 OFFCURVE",
"347.667 446 OFFCURVE",
"333 446 CURVE SMOOTH",
"305.32 446 OFFCURVE",
"284.051 390.227 OFFCURVE",
"278 363 CURVE",
"258.49 316.176 OFFCURVE",
"211.491 226.795 OFFCURVE",
"186 179 CURVE",
"131 286 LINE",
"109 336 OFFCURVE",
"98 376.333 OFFCURVE",
"98 407 CURVE SMOOTH",
"98 419.94 OFFCURVE",
"61.798 433 OFFCURVE",
"51 433 CURVE SMOOTH",
"29.667 433 OFFCURVE",
"19 421.333 OFFCURVE",
"19 398 CURVE SMOOTH",
"19 381.333 OFFCURVE",
"42.333 332.667 OFFCURVE",
"89 252 CURVE SMOOTH",
"134.333 172.667 OFFCURVE",
"157 128.333 OFFCURVE",
"157 119 CURVE SMOOTH",
"157 117 OFFCURVE",
"134.667 70 OFFCURVE",
"90 -22 CURVE SMOOTH",
"67.333 -68.667 OFFCURVE",
"49.5 -104.333 OFFCURVE",
"36.5 -129 CURVE SMOOTH",
"23.5 -153.667 OFFCURVE",
"15.333 -168 OFFCURVE",
"12 -172 CURVE",
"5.333 -180.667 OFFCURVE",
"-1.667 -188.833 OFFCURVE",
"-9 -196.5 CURVE SMOOTH",
"-16.333 -204.167 OFFCURVE",
"-20 -210 OFFCURVE",
"-20 -214 CURVE SMOOTH",
"-20 -218 OFFCURVE",
"-19.333 -220.667 OFFCURVE",
"-18 -222 CURVE",
"-0.667 -245.333 OFFCURVE",
"13.333 -257 OFFCURVE",
"24 -257 CURVE SMOOTH",
"33.333 -257 OFFCURVE",
"52 -250 OFFCURVE",
"56 -234 CURVE SMOOTH",
"64 -199.333 OFFCURVE",
"78 -159.667 OFFCURVE",
"98 -115 CURVE SMOOTH",
"183 69 LINE",
"277.667 -115.667 OFFCURVE",
"342.333 -208 OFFCURVE",
"377 -208 CURVE SMOOTH",
"391.667 -208 OFFCURVE",
"411 -195.667 OFFCURVE",
"411 -177 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 934 27 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 34 22 34 38 34 54 34 70 34 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 34 101 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 11 47 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
37 11 47 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 388;
}
);
note = chi;
unicode = 03C7;
},
{
glyphname = upsilon;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"302.667 398.667 OFFCURVE",
"297.333 406 OFFCURVE",
"292 410 CURVE SMOOTH",
"286.667 414 OFFCURVE",
"282 416 OFFCURVE",
"278 416 CURVE SMOOTH",
"261.905 416 OFFCURVE",
"228 401.945 OFFCURVE",
"228 391 CURVE SMOOTH",
"228 374.256 OFFCURVE",
"282 295.262 OFFCURVE",
"282 237 CURVE SMOOTH",
"282 111.984 OFFCURVE",
"245.046 9 OFFCURVE",
"171 9 CURVE SMOOTH",
"119.7 9 OFFCURVE",
"81 59.931 OFFCURVE",
"81 121 CURVE SMOOTH",
"81 167.436 OFFCURVE",
"106 258.029 OFFCURVE",
"106 317 CURVE SMOOTH",
"106 382.333 OFFCURVE",
"82.333 422 OFFCURVE",
"49 422 CURVE SMOOTH",
"25.667 422 OFFCURVE",
"14 414.333 OFFCURVE",
"14 399 CURVE SMOOTH",
"14 387.36 OFFCURVE",
"47 347.217 OFFCURVE",
"47 311 CURVE SMOOTH",
"47 267.048 OFFCURVE",
"25 183.187 OFFCURVE",
"25 135 CURVE SMOOTH",
"25 45.088 OFFCURVE",
"62.14 -31 OFFCURVE",
"155 -31 CURVE SMOOTH",
"281.482 -31 OFFCURVE",
"340 110.005 OFFCURVE",
"340 246 CURVE SMOOTH",
"340 310 OFFCURVE",
"322.667 358.667 OFFCURVE",
"308 388 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 934 48 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 28 22 28 38 28 54 28 70 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 28 101 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
13 23 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
33 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
18 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 48 106 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 48 25 48 41 48 57 48 73 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
38 928 8 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = upsilon;
unicode = 03C5;
},
{
glyphname = zeta;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"59 540.305 OFFCURVE",
"111.485 491.79 OFFCURVE",
"152 469 CURVE SMOOTH",
"155.333 467 OFFCURVE",
"157 464.667 OFFCURVE",
"157 462 CURVE SMOOTH",
"157 458 OFFCURVE",
"154.667 455 OFFCURVE",
"150 453 CURVE",
"67.38 400.674 OFFCURVE",
"20 284.29 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 46.614 OFFCURVE",
"109.682 28 OFFCURVE",
"180 28 CURVE SMOOTH",
"244.048 28 OFFCURVE",
"321 28.579 OFFCURVE",
"321 -2 CURVE SMOOTH",
"321 -74 OFFCURVE",
"291 -122 OFFCURVE",
"235 -122 CURVE SMOOTH",
"225.667 -122 OFFCURVE",
"218.667 -120.5 OFFCURVE",
"214 -117.5 CURVE SMOOTH",
"209.333 -114.5 OFFCURVE",
"203.667 -113 OFFCURVE",
"197 -113 CURVE SMOOTH",
"183 -113 OFFCURVE",
"173.667 -114.5 OFFCURVE",
"169 -117.5 CURVE SMOOTH",
"164.333 -120.5 OFFCURVE",
"162 -124.333 OFFCURVE",
"162 -129 CURVE SMOOTH",
"162 -144.638 OFFCURVE",
"173.262 -165 OFFCURVE",
"210 -165 CURVE SMOOTH",
"301.05 -165 OFFCURVE",
"368 -100.372 OFFCURVE",
"368 -8 CURVE SMOOTH",
"368 34.667 OFFCURVE",
"320 72 OFFCURVE",
"236 72 CURVE SMOOTH",
"226.667 72 OFFCURVE",
"217.5 71.833 OFFCURVE",
"208.5 71.5 CURVE SMOOTH",
"199.5 71.167 OFFCURVE",
"190.333 71 OFFCURVE",
"181 71 CURVE SMOOTH",
"114.312 71 OFFCURVE",
"71 95.953 OFFCURVE",
"71 189 CURVE SMOOTH",
"71 295.352 OFFCURVE",
"137.367 440 OFFCURVE",
"204 440 CURVE SMOOTH",
"228.399 440 OFFCURVE",
"280.819 427 OFFCURVE",
"304 427 CURVE SMOOTH",
"330.667 427 OFFCURVE",
"348 439 OFFCURVE",
"348 467 CURVE SMOOTH",
"348 489.667 OFFCURVE",
"324.333 491 OFFCURVE",
"307 491 CURVE SMOOTH",
"283 491 OFFCURVE",
"244.667 487.667 OFFCURVE",
"218 481 CURVE",
"211.333 479.667 OFFCURVE",
"207.333 479 OFFCURVE",
"206 479 CURVE SMOOTH",
"201.333 479 OFFCURVE",
"197.667 480 OFFCURVE",
"195 482 CURVE",
"161.667 498 OFFCURVE",
"138.667 523 OFFCURVE",
"126 557 CURVE SMOOTH",
"119.333 574.333 OFFCURVE",
"112.667 597.333 OFFCURVE",
"94 604 CURVE",
"79.333 601.333 OFFCURVE",
"59 595.667 OFFCURVE",
"59 577 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 933 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 932 61 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 61 106 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 61 25 61 41 61 57 61 73 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 61 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 31 118 31 134 31 150 31 166 31 182 31 198 31 214 31 230 31 246 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 31 22 31 38 31 54 31 70 31 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 31 101 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 52 74 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 52 25 52 41 52 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
55 931 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 931 26 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 930 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
58 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 389;
}
);
note = zeta;
unicode = 03B6;
},
{
glyphname = iotadieresis;
layers = (
{
components = (
{
name = idieresis;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 134;
}
);
note = iotadieresis;
unicode = 03CA;
},
{
glyphname = upsilondieresis;
layers = (
{
components = (
{
name = upsilon;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 32, -265}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = upsilondieresis;
unicode = 03CB;
},
{
glyphname = iotadieresistonos;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = dotlessi;
transform = "{1, 0, 0, 1, 52, 0}";
},
{
alignment = -1;
name = uni0385;
transform = "{1, 0, 0, 1, -35, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 206;
}
);
note = iotadieresistonos;
unicode = 0390;
},
{
glyphname = upsilondieresistonos;
layers = (
{
components = (
{
name = upsilon;
},
{
name = uni0385;
transform = "{1, 0, 0, 1, 28, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = upsilondieresistonos;
unicode = 03B0;
},
{
glyphname = Hryvnia;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"69.667 205 OFFCURVE",
"81 206.333 OFFCURVE",
"91 209 CURVE",
"77.667 177 OFFCURVE",
"68 138 OFFCURVE",
"68 106 CURVE SMOOTH",
"68 20.115 OFFCURVE",
"150.777 -17 OFFCURVE",
"241 -17 CURVE SMOOTH",
"313 -17 OFFCURVE",
"366.167 2.5 OFFCURVE",
"401.5 24.5 CURVE SMOOTH",
"429.934 42.204 OFFCURVE",
"454 69.908 OFFCURVE",
"454 84 CURVE SMOOTH",
"454 98.667 OFFCURVE",
"443 107 OFFCURVE",
"431 107 CURVE SMOOTH",
"416.333 107 OFFCURVE",
"402.667 92.333 OFFCURVE",
"388 71 CURVE",
"350.667 44.333 OFFCURVE",
"292 25 OFFCURVE",
"236 25 CURVE SMOOTH",
"172.878 25 OFFCURVE",
"120 51.093 OFFCURVE",
"120 113 CURVE SMOOTH",
"120 155.667 OFFCURVE",
"134.333 194 OFFCURVE",
"157 226 CURVE",
"223.667 239.333 OFFCURVE",
"282.5 249.167 OFFCURVE",
"333.5 255.5 CURVE SMOOTH",
"384.5 261.833 OFFCURVE",
"431.333 268.333 OFFCURVE",
"474 275 CURVE",
"480.667 276.333 OFFCURVE",
"483 283.333 OFFCURVE",
"483 290 CURVE SMOOTH",
"483 315.333 OFFCURVE",
"473 324 OFFCURVE",
"457 324 CURVE SMOOTH",
"443.723 324 OFFCURVE",
"398.276 317.312 OFFCURVE",
"359.5 312 CURVE SMOOTH",
"310.833 305.333 OFFCURVE",
"250.333 295.333 OFFCURVE",
"197 286 CURVE",
"222.333 323.333 OFFCURVE",
"246.667 353 OFFCURVE",
"280 381 CURVE",
"332 391.667 OFFCURVE",
"393.333 396 OFFCURVE",
"444 396 CURVE SMOOTH",
"450.667 396 OFFCURVE",
"457 395.833 OFFCURVE",
"463 395.5 CURVE SMOOTH",
"469 395.167 OFFCURVE",
"475.333 395 OFFCURVE",
"482 395 CURVE SMOOTH",
"495.333 395 OFFCURVE",
"500 404.333 OFFCURVE",
"500 411 CURVE SMOOTH",
"500 443.654 OFFCURVE",
"461.45 446 OFFCURVE",
"434 446 CURVE SMOOTH",
"416.667 446 OFFCURVE",
"402.5 445.5 OFFCURVE",
"391.5 444.5 CURVE SMOOTH",
"380.5 443.5 OFFCURVE",
"366.333 442.333 OFFCURVE",
"349 441 CURVE",
"383.718 478.388 OFFCURVE",
"446 550.381 OFFCURVE",
"446 596 CURVE SMOOTH",
"446 654.035 OFFCURVE",
"351.223 693 OFFCURVE",
"302 693 CURVE SMOOTH",
"218.831 693 OFFCURVE",
"129.51 648.887 OFFCURVE",
"63 601 CURVE",
"59 597 OFFCURVE",
"57 592.333 OFFCURVE",
"57 587 CURVE SMOOTH",
"57 564.184 OFFCURVE",
"88.692 540 OFFCURVE",
"108 540 CURVE",
"120 545.333 OFFCURVE",
"128.667 550.833 OFFCURVE",
"134 556.5 CURVE SMOOTH",
"139.333 562.167 OFFCURVE",
"145.667 568.667 OFFCURVE",
"153 576 CURVE",
"209 618.667 OFFCURVE",
"259 642 OFFCURVE",
"323 642 CURVE SMOOTH",
"354.538 642 OFFCURVE",
"394 635.583 OFFCURVE",
"394 607 CURVE SMOOTH",
"394 551.745 OFFCURVE",
"297.689 464.264 OFFCURVE",
"257 429 CURVE",
"223 423.667 OFFCURVE",
"189.167 417.333 OFFCURVE",
"155.5 410 CURVE SMOOTH",
"121.833 402.667 OFFCURVE",
"87 395.333 OFFCURVE",
"51 388 CURVE",
"29.667 388 OFFCURVE",
"6 385.667 OFFCURVE",
"6 367 CURVE SMOOTH",
"6 344.333 OFFCURVE",
"28.333 334 OFFCURVE",
"47 334 CURVE SMOOTH",
"74.182 334 OFFCURVE",
"148.13 354.626 OFFCURVE",
"190 363 CURVE",
"162 333.667 OFFCURVE",
"138.667 303 OFFCURVE",
"120 271 CURVE",
"101.333 265.667 OFFCURVE",
"82.667 260.667 OFFCURVE",
"64 258 CURVE",
"62 258.667 OFFCURVE",
"58 259 OFFCURVE",
"52 259 CURVE SMOOTH",
"34 259 OFFCURVE",
"25 253 OFFCURVE",
"25 241 CURVE SMOOTH",
"25 226.333 OFFCURVE",
"42.333 206.333 OFFCURVE",
"57 205 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 934 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 933 31 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 10 22 10 38 10 54 10 70 10 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 10 101 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 31 106 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 31 25 31 41 31 57 31 73 31 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 3 72 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
64 3 72 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
84 3 72 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
125 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
128 3 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
131 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
120 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
120 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
67 931 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 120 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 36 105 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 36 120 36 136 36 152 36 168 36 184 36 200 36 216 36 232 36 248 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 36 24 36 40 36 56 36 72 36 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
84 120 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
120 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
106 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 106 119 106 135 106 151 106 167 106 183 106 199 106 215 106 231 106 247 106 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 106 23 106 39 106 55 106 71 106 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 106 102 106 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
120 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
112 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 112 119 112 135 112 151 112 167 112 183 112 199 112 215 112 231 112 247 112 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 112 23 112 39 112 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 112 70 112 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
128 120 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 500;
}
);
note = Hryvnia;
unicode = 20B4;
},
{
glyphname = S_caroncmb;
layers = (
{
components = (
{
name = S;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 368, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 449;
}
);
note = S_caroncmb;
},
{
glyphname = s_caroncmb;
layers = (
{
components = (
{
name = s;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 322, -217}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = s_caroncmb;
},
{
glyphname = z_caroncmb;
layers = (
{
components = (
{
name = z;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 317, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
note = z_caroncmb;
},
{
glyphname = Z_caroncmb;
layers = (
{
components = (
{
name = Z;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 427, 64}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 566;
}
);
note = Z_caroncmb;
},
{
glyphname = c_caroncmb;
layers = (
{
components = (
{
name = c;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 326, -215}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
note = c_caroncmb;
},
{
glyphname = C_caroncmb;
layers = (
{
components = (
{
name = C;
},
{
name = caroncmb;
transform = "{1, 0, 0, 1, 388, 32}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 478;
}
);
note = C_caroncmb;
},
{
glyphname = afii00208;
layers = (
{
components = (
{
name = emdash;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 793;
}
);
note = afii00208;
unicode = 2015;
},
{
glyphname = brokenbar;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"70 501.333 OFFCURVE",
"74 561.667 OFFCURVE",
"82 605 CURVE",
"87.333 623 OFFCURVE",
"90.667 635.167 OFFCURVE",
"92 641.5 CURVE SMOOTH",
"93.333 647.833 OFFCURVE",
"94 652.667 OFFCURVE",
"94 656 CURVE SMOOTH",
"94 674.667 OFFCURVE",
"70.667 690 OFFCURVE",
"52 690 CURVE SMOOTH",
"44 690 OFFCURVE",
"33.333 685.333 OFFCURVE",
"20 676 CURVE",
"20 666.76 OFFCURVE",
"26 625.303 OFFCURVE",
"26 614 CURVE SMOOTH",
"24 422 LINE SMOOTH",
"24 410 OFFCURVE",
"36 405 OFFCURVE",
"48 405 CURVE SMOOTH",
"58.667 405 OFFCURVE",
"70 410.667 OFFCURVE",
"70 424 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 14 OFFCURVE",
"92.5 19.5 OFFCURVE",
"89.5 26.5 CURVE SMOOTH",
"86.5 33.5 OFFCURVE",
"85 38 OFFCURVE",
"85 40 CURVE",
"75.667 81.333 OFFCURVE",
"69 142.333 OFFCURVE",
"69 225 CURVE SMOOTH",
"69 241 OFFCURVE",
"65 250 OFFCURVE",
"45 250 CURVE",
"30.333 248.667 OFFCURVE",
"23 241.667 OFFCURVE",
"23 229 CURVE SMOOTH",
"23 165 LINE SMOOTH",
"22.333 44.333 OFFCURVE",
"36.667 -16 OFFCURVE",
"66 -16 CURVE SMOOTH",
"84.667 -16 OFFCURVE",
"94 -7.333 OFFCURVE",
"94 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 932 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 114;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = uni016C_U_brevecmb;
layers = (
{
components = (
{
name = U;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 357, 16}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = uni016C_U_brevecmb;
},
{
glyphname = uni016D_u_brevecmb;
layers = (
{
components = (
{
name = u;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 295, -249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = uni016D_u_brevecmb;
},
{
glyphname = u01A0;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"536 415 OFFCURVE",
"519 484.667 OFFCURVE",
"491 542 CURVE",
"487.667 550 OFFCURVE",
"486 555.333 OFFCURVE",
"486 558 CURVE SMOOTH",
"486 565.333 OFFCURVE",
"491 569 OFFCURVE",
"501 569 CURVE SMOOTH",
"543.179 569 OFFCURVE",
"578 607.044 OFFCURVE",
"578 650 CURVE SMOOTH",
"578 675.735 OFFCURVE",
"563.865 715 OFFCURVE",
"544 715 CURVE SMOOTH",
"534 715 OFFCURVE",
"529 710 OFFCURVE",
"529 700 CURVE SMOOTH",
"529 696.667 OFFCURVE",
"532.167 691.167 OFFCURVE",
"538.5 683.5 CURVE SMOOTH",
"544.833 675.833 OFFCURVE",
"548 668 OFFCURVE",
"548 660 CURVE SMOOTH",
"548 635.653 OFFCURVE",
"515.875 613 OFFCURVE",
"490 613 CURVE SMOOTH",
"468.151 613 OFFCURVE",
"419.78 638.3 OFFCURVE",
"402 651 CURVE",
"371.333 671 OFFCURVE",
"335.667 684 OFFCURVE",
"297 684 CURVE SMOOTH",
"201 684 OFFCURVE",
"133.167 626.667 OFFCURVE",
"88.5 548 CURVE SMOOTH",
"43.833 469.333 OFFCURVE",
"24 371 OFFCURVE",
"24 287 CURVE SMOOTH",
"24 191 OFFCURVE",
"44.667 111.667 OFFCURVE",
"86 57 CURVE SMOOTH",
"127.333 2.333 OFFCURVE",
"188 -28 OFFCURVE",
"268 -28 CURVE SMOOTH",
"348 -28 OFFCURVE",
"415.167 12.5 OFFCURVE",
"462.5 78.5 CURVE SMOOTH",
"509.833 144.5 OFFCURVE",
"536 236.333 OFFCURVE",
"536 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 252 OFFCURVE",
"460.167 170.333 OFFCURVE",
"423.5 113 CURVE SMOOTH",
"386.833 55.667 OFFCURVE",
"332.667 22 OFFCURVE",
"266 22 CURVE SMOOTH",
"137.836 22 OFFCURVE",
"73 126.445 OFFCURVE",
"73 258 CURVE SMOOTH",
"73 339.333 OFFCURVE",
"88.667 432.167 OFFCURVE",
"126 503.5 CURVE SMOOTH",
"163.333 574.833 OFFCURVE",
"221.333 626 OFFCURVE",
"304 626 CURVE SMOOTH",
"423.582 626 OFFCURVE",
"480 488.021 OFFCURVE",
"480 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
60 932 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 932 28 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 28 106 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 28 121 28 137 28 153 28 169 28 185 28 201 28 217 28 233 28 249 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 28 25 28 41 28 57 28 73 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 50 106 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 50 121 50 137 50 153 50 169 50 185 50 201 50 217 50 233 50 249 50 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 50 25 50 41 50 57 50 73 50 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 60 118 60 134 60 150 60 166 60 182 60 198 60 214 60 230 60 246 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 60 22 60 38 60 54 60 70 60 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 60 101 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
65 931 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 931 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 930 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 588;
}
);
note = u01A0;
unicode = 01A0;
},
{
glyphname = u01A1;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"397 464 OFFCURVE",
"392 459 OFFCURVE",
"392 449 CURVE SMOOTH",
"392 445.667 OFFCURVE",
"395.167 440.167 OFFCURVE",
"401.5 432.5 CURVE SMOOTH",
"407.833 424.833 OFFCURVE",
"411 417 OFFCURVE",
"411 409 CURVE SMOOTH",
"411 384.653 OFFCURVE",
"378.875 362 OFFCURVE",
"353 362 CURVE SMOOTH",
"310.902 362 OFFCURVE",
"217.682 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"92.633 439 OFFCURVE",
"25 291.737 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 43 OFFCURVE",
"79 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"278.359 -30 OFFCURVE",
"342 76.992 OFFCURVE",
"342 197 CURVE SMOOTH",
"342 233.667 OFFCURVE",
"337.333 268 OFFCURVE",
"328 300 CURVE",
"326 304.667 OFFCURVE",
"325 309 OFFCURVE",
"325 313 CURVE SMOOTH",
"325 317 OFFCURVE",
"328 319 OFFCURVE",
"334 319 CURVE SMOOTH",
"337.333 319 OFFCURVE",
"341.167 318.833 OFFCURVE",
"345.5 318.5 CURVE SMOOTH",
"349.833 318.167 OFFCURVE",
"354 318 OFFCURVE",
"358 318 CURVE SMOOTH",
"403.333 318 OFFCURVE",
"441 353.667 OFFCURVE",
"441 399 CURVE SMOOTH",
"441 424.735 OFFCURVE",
"426.865 464 OFFCURVE",
"407 464 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 100.076 OFFCURVE",
"252.85 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"115 9 OFFCURVE",
"80 74 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 278.349 OFFCURVE",
"126.579 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"262.791 384 OFFCURVE",
"294 295.395 OFFCURVE",
"294 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 933 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 932 45 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 40 106 40 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 40 121 40 137 40 153 40 169 40 185 40 201 40 217 40 233 40 249 40 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 40 25 40 41 40 57 40 73 40 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 45 106 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 45 25 45 41 45 57 45 73 45 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 55 118 55 134 55 150 55 166 55 182 55 198 55 214 55 230 55 246 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 55 22 55 38 55 54 55 70 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 55 101 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
58 928 22 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 931 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = u01A1;
unicode = 01A1;
},
{
glyphname = u01AF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"420 565 LINE SMOOTH",
"420 577 OFFCURVE",
"429 583 OFFCURVE",
"437 583 CURVE SMOOTH",
"446.333 583 OFFCURVE",
"455.5 580.667 OFFCURVE",
"464.5 576 CURVE SMOOTH",
"473.5 571.333 OFFCURVE",
"483.667 569 OFFCURVE",
"495 569 CURVE SMOOTH",
"540.333 569 OFFCURVE",
"578 604.667 OFFCURVE",
"578 650 CURVE SMOOTH",
"578 675.735 OFFCURVE",
"563.865 715 OFFCURVE",
"544 715 CURVE SMOOTH",
"534 715 OFFCURVE",
"529 710 OFFCURVE",
"529 700 CURVE SMOOTH",
"529 696.667 OFFCURVE",
"532.167 691.167 OFFCURVE",
"538.5 683.5 CURVE SMOOTH",
"544.833 675.833 OFFCURVE",
"548 668 OFFCURVE",
"548 660 CURVE SMOOTH",
"548 635.653 OFFCURVE",
"515.875 613 OFFCURVE",
"490 613 CURVE SMOOTH",
"465.785 613 OFFCURVE",
"429.599 620.206 OFFCURVE",
"420 661 CURVE",
"414.667 679.667 OFFCURVE",
"392.667 690 OFFCURVE",
"378 690 CURVE SMOOTH",
"364.667 690 OFFCURVE",
"353 668.333 OFFCURVE",
"353 655 CURVE SMOOTH",
"353 647.849 OFFCURVE",
"372 595.63 OFFCURVE",
"372 567 CURVE SMOOTH",
"372 376.333 OFFCURVE",
"360.333 241 OFFCURVE",
"335 153 CURVE SMOOTH",
"309.667 65 OFFCURVE",
"268.333 25 OFFCURVE",
"211 25 CURVE SMOOTH",
"134.348 25 OFFCURVE",
"90 113.181 OFFCURVE",
"90 212 CURVE SMOOTH",
"90 342 LINE SMOOTH",
"90 356.667 OFFCURVE",
"91.5 382.667 OFFCURVE",
"94.5 420 CURVE SMOOTH",
"97.5 457.333 OFFCURVE",
"102.333 507.333 OFFCURVE",
"109 570 CURVE",
"111.667 585.333 OFFCURVE",
"114.833 599.667 OFFCURVE",
"118.5 613 CURVE SMOOTH",
"122.167 626.333 OFFCURVE",
"124 637.667 OFFCURVE",
"124 647 CURVE SMOOTH",
"124 657.667 OFFCURVE",
"120.333 664 OFFCURVE",
"113 666 CURVE",
"113 665.333 OFFCURVE",
"101.667 665 OFFCURVE",
"79 665 CURVE SMOOTH",
"64.9 665 OFFCURVE",
"35 647.443 OFFCURVE",
"35 633 CURVE SMOOTH",
"35 627.667 OFFCURVE",
"37 619.5 OFFCURVE",
"41 608.5 CURVE SMOOTH",
"45 597.5 OFFCURVE",
"47 589 OFFCURVE",
"47 583 CURVE SMOOTH",
"47 544.166 OFFCURVE",
"35 329.834 OFFCURVE",
"35 291 CURVE SMOOTH",
"35 213.667 OFFCURVE",
"37 163.667 OFFCURVE",
"41 141 CURVE SMOOTH",
"57 39.667 OFFCURVE",
"111.333 -23 OFFCURVE",
"226 -23 CURVE SMOOTH",
"269.333 -23 OFFCURVE",
"307.333 -5.667 OFFCURVE",
"340 29 CURVE SMOOTH",
"364.667 55.667 OFFCURVE",
"385 109.667 OFFCURVE",
"401 191 CURVE SMOOTH",
"413 256.333 OFFCURVE",
"420 313 OFFCURVE",
"420 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 933 12 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 932 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 932 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 12 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 67 106 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 67 121 67 137 67 153 67 169 67 185 67 201 67 217 67 233 67 249 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 67 25 67 41 67 57 67 73 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
62 929 83 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
72 80 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 41 23 41 39 41 55 41 71 41 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 41 102 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 583;
}
);
note = u01AF;
unicode = 01AF;
},
{
glyphname = u01B0;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"426 464 OFFCURVE",
"421 459 OFFCURVE",
"421 449 CURVE SMOOTH",
"421 445.667 OFFCURVE",
"424.167 440.167 OFFCURVE",
"430.5 432.5 CURVE SMOOTH",
"436.833 424.833 OFFCURVE",
"440 417 OFFCURVE",
"440 409 CURVE SMOOTH",
"440 384.653 OFFCURVE",
"407.875 362 OFFCURVE",
"382 362 CURVE SMOOTH",
"364.667 362 OFFCURVE",
"332.667 373.333 OFFCURVE",
"314 392 CURVE",
"306 401.333 OFFCURVE",
"290.333 409 OFFCURVE",
"273 409 CURVE SMOOTH",
"260.194 409 OFFCURVE",
"237 405.736 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"238.833 370.167 OFFCURVE",
"242.5 360.5 CURVE SMOOTH",
"246.167 350.833 OFFCURVE",
"248 343.333 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 115.141 OFFCURVE",
"210.23 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"109.219 27 OFFCURVE",
"82 91.335 OFFCURVE",
"82 142 CURVE SMOOTH",
"82 177.046 OFFCURVE",
"88 342.416 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413.333 OFFCURVE",
"78.667 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"36.667 424 OFFCURVE",
"25 416.333 OFFCURVE",
"25 401 CURVE SMOOTH",
"25 397.667 OFFCURVE",
"25.333 395.333 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 116.333 OFFCURVE",
"30.667 74 OFFCURVE",
"40 50 CURVE SMOOTH",
"50.787 20.336 OFFCURVE",
"103.659 -22 OFFCURVE",
"134 -22 CURVE SMOOTH",
"182 -22 OFFCURVE",
"221.333 6.333 OFFCURVE",
"240 33 CURVE",
"248 -4 LINE",
"252.667 -16.667 OFFCURVE",
"262.667 -23 OFFCURVE",
"278 -23 CURVE SMOOTH",
"289.333 -23 OFFCURVE",
"296.667 -19.333 OFFCURVE",
"300 -12 CURVE SMOOTH",
"303.333 -4.667 OFFCURVE",
"305 10.667 OFFCURVE",
"305 34 CURVE SMOOTH",
"305 59.773 OFFCURVE",
"298 153.471 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 207.911 OFFCURVE",
"303.697 282.27 OFFCURVE",
"308 321 CURVE",
"308.667 331 OFFCURVE",
"312.667 336 OFFCURVE",
"320 336 CURVE SMOOTH",
"322.667 336 OFFCURVE",
"326.667 335 OFFCURVE",
"332 333 CURVE",
"350.667 323 OFFCURVE",
"369 318 OFFCURVE",
"387 318 CURVE SMOOTH",
"432.333 318 OFFCURVE",
"470 353.667 OFFCURVE",
"470 399 CURVE SMOOTH",
"470 424.735 OFFCURVE",
"455.865 464 OFFCURVE",
"436 464 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 934 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 934 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 82 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 82 106 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 82 121 82 137 82 153 82 169 82 185 82 201 82 217 82 233 82 249 82 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 82 25 82 41 82 57 82 73 82 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 57 23 57 39 57 55 57 71 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 57 102 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 470;
}
);
note = u01B0;
unicode = 01B0;
},
{
glyphname = u1EA0;
lastChange = "2019-03-01 18:38:28 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u1EA0;
unicode = 1EA0;
},
{
glyphname = u1EA1;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u1EA1;
unicode = 1EA1;
},
{
glyphname = u1EA2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"422 834.61 OFFCURVE",
"372.679 860 OFFCURVE",
"335 860 CURVE SMOOTH",
"308.019 860 OFFCURVE",
"225 834.815 OFFCURVE",
"225 797 CURVE SMOOTH",
"225 785 OFFCURVE",
"244.667 768 OFFCURVE",
"258 768 CURVE SMOOTH",
"268.667 768 OFFCURVE",
"283 778.667 OFFCURVE",
"283 788 CURVE SMOOTH",
"283 793.333 OFFCURVE",
"278 797.667 OFFCURVE",
"268 801 CURVE",
"282.667 817 OFFCURVE",
"316.333 819 OFFCURVE",
"335 819 CURVE SMOOTH",
"357.667 819 OFFCURVE",
"374 819.333 OFFCURVE",
"374 802 CURVE SMOOTH",
"374 760.939 OFFCURVE",
"266 756.802 OFFCURVE",
"266 718 CURVE SMOOTH",
"266 703.333 OFFCURVE",
"285.667 687 OFFCURVE",
"303 687 CURVE SMOOTH",
"308.333 687 OFFCURVE",
"311.667 687.333 OFFCURVE",
"313 688 CURVE",
"313 691 LINE SMOOTH",
"313 695 OFFCURVE",
"311.667 699.5 OFFCURVE",
"309 704.5 CURVE SMOOTH",
"306.333 709.5 OFFCURVE",
"305 713 OFFCURVE",
"305 715 CURVE SMOOTH",
"305 718.333 OFFCURVE",
"308.5 721.5 OFFCURVE",
"315.5 724.5 CURVE SMOOTH",
"322.5 727.5 OFFCURVE",
"331.667 730.667 OFFCURVE",
"343 734 CURVE SMOOTH",
"391.656 749.365 OFFCURVE",
"422 757.674 OFFCURVE",
"422 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"498 197 OFFCURVE",
"492 202.333 OFFCURVE",
"480 205 CURVE SMOOTH",
"464 209 OFFCURVE",
"454 212.667 OFFCURVE",
"450 216 CURVE",
"436.667 346 OFFCURVE",
"425 434 OFFCURVE",
"415 480 CURVE SMOOTH",
"387 610.667 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE SMOOTH",
"60 211.667 OFFCURVE",
"38.333 130 OFFCURVE",
"27 56 CURVE",
"26.333 52.667 OFFCURVE",
"23.333 44 OFFCURVE",
"18 30 CURVE SMOOTH",
"12.667 16 OFFCURVE",
"10 7 OFFCURVE",
"10 3 CURVE SMOOTH",
"10 -13 OFFCURVE",
"37.667 -35 OFFCURVE",
"55 -35 CURVE SMOOTH",
"61 -35 OFFCURVE",
"65.667 -32.667 OFFCURVE",
"69 -28 CURVE",
"69.667 -11.333 OFFCURVE",
"72.667 14.667 OFFCURVE",
"78 50 CURVE SMOOTH",
"84.667 93.333 OFFCURVE",
"91 117.333 OFFCURVE",
"97 122 CURVE",
"107.667 131.333 OFFCURVE",
"148 140.667 OFFCURVE",
"218 150 CURVE SMOOTH",
"279.333 158 OFFCURVE",
"324.333 162 OFFCURVE",
"353 162 CURVE SMOOTH",
"357.667 162 OFFCURVE",
"365.5 162.667 OFFCURVE",
"376.5 164 CURVE SMOOTH",
"387.5 165.333 OFFCURVE",
"396 165.667 OFFCURVE",
"402 165 CURVE",
"404 161 OFFCURVE",
"405 153 OFFCURVE",
"405 141 CURVE SMOOTH",
"405 135 OFFCURVE",
"405 124 OFFCURVE",
"405 108 CURVE",
"404.333 92 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 127 OFFCURVE",
"452 161 CURVE",
"459.333 158.333 OFFCURVE",
"466.333 157 OFFCURVE",
"473 157 CURVE SMOOTH",
"489.667 157 OFFCURVE",
"498 167.667 OFFCURVE",
"498 189 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288.333 210.667 OFFCURVE",
"217.667 204.333 OFFCURVE",
"189 199 CURVE SMOOTH",
"152.333 192.333 OFFCURVE",
"132 189 OFFCURVE",
"128 189 CURVE SMOOTH",
"116 189 OFFCURVE",
"111.333 197 OFFCURVE",
"114 213 CURVE",
"118.667 230.333 OFFCURVE",
"123 243.333 OFFCURVE",
"127 252 CURVE",
"149.667 316 OFFCURVE",
"172.667 380 OFFCURVE",
"196 444 CURVE",
"237.333 545.333 OFFCURVE",
"271.667 596.667 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598.667 OFFCURVE",
"347 543 OFFCURVE",
"369 431 CURVE SMOOTH",
"373.667 406.333 OFFCURVE",
"384.333 335.333 OFFCURVE",
"401 218 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
63 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 63 106 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 63 25 63 41 63 57 63 73 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
50 63 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 931 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 931 100 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
50 68 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 508;
}
);
note = u1EA2;
unicode = 1EA2;
},
{
glyphname = u1EA3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"316 594.61 OFFCURVE",
"266.679 620 OFFCURVE",
"229 620 CURVE SMOOTH",
"202.019 620 OFFCURVE",
"119 594.815 OFFCURVE",
"119 557 CURVE SMOOTH",
"119 545 OFFCURVE",
"138.667 528 OFFCURVE",
"152 528 CURVE SMOOTH",
"162.667 528 OFFCURVE",
"177 538.667 OFFCURVE",
"177 548 CURVE SMOOTH",
"177 553.333 OFFCURVE",
"172 557.667 OFFCURVE",
"162 561 CURVE",
"176.667 577 OFFCURVE",
"210.333 579 OFFCURVE",
"229 579 CURVE SMOOTH",
"251.667 579 OFFCURVE",
"268 579.333 OFFCURVE",
"268 562 CURVE SMOOTH",
"268 520.939 OFFCURVE",
"160 516.802 OFFCURVE",
"160 478 CURVE SMOOTH",
"160 463.333 OFFCURVE",
"179.667 447 OFFCURVE",
"197 447 CURVE SMOOTH",
"202.333 447 OFFCURVE",
"205.667 447.333 OFFCURVE",
"207 448 CURVE",
"207 451 LINE SMOOTH",
"207 455 OFFCURVE",
"205.667 459.5 OFFCURVE",
"203 464.5 CURVE SMOOTH",
"200.333 469.5 OFFCURVE",
"199 473 OFFCURVE",
"199 475 CURVE SMOOTH",
"199 478.333 OFFCURVE",
"202.5 481.5 OFFCURVE",
"209.5 484.5 CURVE SMOOTH",
"216.5 487.5 OFFCURVE",
"225.667 490.667 OFFCURVE",
"237 494 CURVE SMOOTH",
"285.656 509.365 OFFCURVE",
"316 517.674 OFFCURVE",
"316 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 295 LINE SMOOTH",
"332.333 331.667 OFFCURVE",
"315 363 OFFCURVE",
"281 389 CURVE SMOOTH",
"249 413 OFFCURVE",
"214 425 OFFCURVE",
"176 425 CURVE SMOOTH",
"151.333 425 OFFCURVE",
"130.667 416 OFFCURVE",
"114 398 CURVE SMOOTH",
"87.333 368.667 OFFCURVE",
"60 300.333 OFFCURVE",
"60 263 CURVE SMOOTH",
"60 251 OFFCURVE",
"80.667 230 OFFCURVE",
"94 230 CURVE SMOOTH",
"99.333 230 OFFCURVE",
"102 232.667 OFFCURVE",
"102 238 CURVE SMOOTH",
"102 238.667 OFFCURVE",
"102 240.333 OFFCURVE",
"102 243 CURVE SMOOTH",
"102 245.667 OFFCURVE",
"102 247.667 OFFCURVE",
"102 249 CURVE SMOOTH",
"102 275.667 OFFCURVE",
"111.667 303.667 OFFCURVE",
"131 333 CURVE SMOOTH",
"152.333 365 OFFCURVE",
"175.667 381 OFFCURVE",
"201 381 CURVE SMOOTH",
"236.333 381 OFFCURVE",
"260 362 OFFCURVE",
"272 324 CURVE SMOOTH",
"279.333 301.333 OFFCURVE",
"283 267.667 OFFCURVE",
"283 223 CURVE SMOOTH",
"283 213 OFFCURVE",
"281 206 OFFCURVE",
"277 202 CURVE",
"178 202 LINE SMOOTH",
"148.667 202 OFFCURVE",
"116.667 190 OFFCURVE",
"82 166 CURVE SMOOTH",
"44 140 OFFCURVE",
"25 113.333 OFFCURVE",
"25 86 CURVE SMOOTH",
"25 58 OFFCURVE",
"41 34.667 OFFCURVE",
"73 16 CURVE SMOOTH",
"101 -0.667 OFFCURVE",
"130 -9 OFFCURVE",
"160 -9 CURVE SMOOTH",
"203.333 -9 OFFCURVE",
"243.667 4.667 OFFCURVE",
"281 32 CURVE",
"283 28 OFFCURVE",
"284 22.667 OFFCURVE",
"284 16 CURVE SMOOTH",
"284 -8 OFFCURVE",
"284.333 -21 OFFCURVE",
"285 -23 CURVE",
"288.333 -36.333 OFFCURVE",
"298 -43 OFFCURVE",
"314 -43 CURVE SMOOTH",
"328.667 -43 OFFCURVE",
"336 -38.333 OFFCURVE",
"336 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"283 74 OFFCURVE",
"220.333 32 OFFCURVE",
"163 32 CURVE SMOOTH",
"143.667 32 OFFCURVE",
"127 36.333 OFFCURVE",
"113 45 CURVE SMOOTH",
"96.333 55 OFFCURVE",
"88 69 OFFCURVE",
"88 87 CURVE SMOOTH",
"88 116.333 OFFCURVE",
"103.667 138.333 OFFCURVE",
"135 153 CURVE SMOOTH",
"159.667 164.333 OFFCURVE",
"188.333 170 OFFCURVE",
"221 170 CURVE SMOOTH",
"262.333 170 OFFCURVE",
"283 156.667 OFFCURVE",
"283 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 934 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
67 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
83 60 99 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
75 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
92 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
107 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 929 95 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 930 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 103 119 103 135 103 151 103 167 103 183 103 199 103 215 103 231 103 247 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 103 23 103 39 103 55 103 71 103 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 103 102 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = u1EA3;
unicode = 1EA3;
},
{
glyphname = u1EA4;
layers = (
{
components = (
{
name = Acircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 388, 41}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 518;
}
);
note = u1EA4;
unicode = 1EA4;
},
{
glyphname = u1EA5;
layers = (
{
components = (
{
name = acircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 230, -166}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 351;
}
);
note = u1EA5;
unicode = 1EA5;
},
{
glyphname = u1EA6;
layers = (
{
components = (
{
name = Acircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, -3, 37}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 518;
}
);
note = u1EA6;
unicode = 1EA6;
},
{
glyphname = u1EA7;
layers = (
{
components = (
{
name = acircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, -78, -183}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 351;
}
);
note = u1EA7;
unicode = 1EA7;
},
{
glyphname = u1EA8;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"590 855.61 OFFCURVE",
"540.679 881 OFFCURVE",
"503 881 CURVE SMOOTH",
"476.019 881 OFFCURVE",
"393 855.815 OFFCURVE",
"393 818 CURVE SMOOTH",
"393 806 OFFCURVE",
"412.667 789 OFFCURVE",
"426 789 CURVE SMOOTH",
"436.667 789 OFFCURVE",
"451 799.667 OFFCURVE",
"451 809 CURVE SMOOTH",
"451 814.333 OFFCURVE",
"446 818.667 OFFCURVE",
"436 822 CURVE",
"450.667 838 OFFCURVE",
"484.333 840 OFFCURVE",
"503 840 CURVE SMOOTH",
"525.667 840 OFFCURVE",
"542 840.333 OFFCURVE",
"542 823 CURVE SMOOTH",
"542 781.939 OFFCURVE",
"434 777.802 OFFCURVE",
"434 739 CURVE SMOOTH",
"434 724.333 OFFCURVE",
"453.667 708 OFFCURVE",
"471 708 CURVE SMOOTH",
"476.333 708 OFFCURVE",
"479.667 708.333 OFFCURVE",
"481 709 CURVE",
"481 712 LINE SMOOTH",
"481 716 OFFCURVE",
"479.667 720.5 OFFCURVE",
"477 725.5 CURVE SMOOTH",
"474.333 730.5 OFFCURVE",
"473 734 OFFCURVE",
"473 736 CURVE SMOOTH",
"473 739.333 OFFCURVE",
"476.5 742.5 OFFCURVE",
"483.5 745.5 CURVE SMOOTH",
"490.5 748.5 OFFCURVE",
"499.667 751.667 OFFCURVE",
"511 755 CURVE SMOOTH",
"559.656 770.365 OFFCURVE",
"590 778.674 OFFCURVE",
"590 826 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"423 702 OFFCURVE",
"422.667 703.667 OFFCURVE",
"422 707 CURVE",
"348 773.667 OFFCURVE",
"307 807 OFFCURVE",
"299 807 CURVE SMOOTH",
"291 807 OFFCURVE",
"250 773.667 OFFCURVE",
"176 707 CURVE",
"175.333 703.667 OFFCURVE",
"175 702 OFFCURVE",
"175 702 CURVE",
"175 696.667 OFFCURVE",
"183 682 OFFCURVE",
"187 682 CURVE SMOOTH",
"199.667 682 OFFCURVE",
"220.333 695.333 OFFCURVE",
"249 722 CURVE",
"273 738 OFFCURVE",
"289.667 747 OFFCURVE",
"299 749 CURVE",
"304.333 746.333 OFFCURVE",
"312.667 742.667 OFFCURVE",
"324 738 CURVE",
"332 735.333 OFFCURVE",
"340.333 730 OFFCURVE",
"349 722 CURVE SMOOTH",
"377.667 695.333 OFFCURVE",
"398.333 682 OFFCURVE",
"411 682 CURVE SMOOTH",
"415 682 OFFCURVE",
"423 696.667 OFFCURVE",
"423 702 CURVE"
);
},
{
closed = 1;
nodes = (
"498 177 OFFCURVE",
"492 182.333 OFFCURVE",
"480 185 CURVE SMOOTH",
"464 189 OFFCURVE",
"454 192.667 OFFCURVE",
"450 196 CURVE",
"435.333 335.333 OFFCURVE",
"423.667 426.667 OFFCURVE",
"415 470 CURVE SMOOTH",
"387 607.333 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE",
"61.333 201.667 OFFCURVE",
"39.667 126.667 OFFCURVE",
"27 76 CURVE",
"15.667 42 OFFCURVE",
"10 24.333 OFFCURVE",
"10 23 CURVE SMOOTH",
"10 7 OFFCURVE",
"37.667 -15 OFFCURVE",
"55 -15 CURVE SMOOTH",
"61 -15 OFFCURVE",
"65.667 -12.667 OFFCURVE",
"69 -8 CURVE",
"73 136 OFFCURVE",
"65 123 OFFCURVE",
"213 135 CURVE SMOOTH",
"269.667 139.667 OFFCURVE",
"316.333 142 OFFCURVE",
"353 142 CURVE SMOOTH",
"359 142 OFFCURVE",
"368 141.333 OFFCURVE",
"380 140 CURVE SMOOTH",
"392 138.667 OFFCURVE",
"400.333 138 OFFCURVE",
"405 138 CURVE",
"405.667 135.333 OFFCURVE",
"406 132.333 OFFCURVE",
"406 129 CURVE SMOOTH",
"406 123 OFFCURVE",
"405.667 114 OFFCURVE",
"405 102 CURVE SMOOTH",
"404.333 90 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 120.333 OFFCURVE",
"452 141 CURVE",
"459.333 138.333 OFFCURVE",
"466.333 137 OFFCURVE",
"473 137 CURVE SMOOTH",
"489.667 137 OFFCURVE",
"498 147.667 OFFCURVE",
"498 169 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"303.667 191.333 OFFCURVE",
"229.667 188.333 OFFCURVE",
"179 179 CURVE SMOOTH",
"135 171 OFFCURVE",
"113.333 167 OFFCURVE",
"114 167 CURVE",
"104.667 167 OFFCURVE",
"100 169.333 OFFCURVE",
"100 174 CURVE SMOOTH",
"100 181.333 OFFCURVE",
"105.667 200.667 OFFCURVE",
"117 232 CURVE SMOOTH",
"143 304 OFFCURVE",
"170 371.667 OFFCURVE",
"198 435 CURVE SMOOTH",
"245.333 543.667 OFFCURVE",
"279 598 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598 OFFCURVE",
"347 537 OFFCURVE",
"369 415 CURVE",
"369 414.333 OFFCURVE",
"379.667 338.667 OFFCURVE",
"401 188 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 74 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
76 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 74 106 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 74 25 74 41 74 57 74 73 74 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
70 74 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
83 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 83 106 83 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 83 25 83 41 83 57 83 73 83 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 70 83 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
111 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
111 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
132 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
98 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
115 930 91 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
107 931 119 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
74 91 72 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 518;
}
);
note = u1EA8;
unicode = 1EA8;
},
{
glyphname = u1EA9;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"369 697.61 OFFCURVE",
"319.679 723 OFFCURVE",
"282 723 CURVE SMOOTH",
"255.019 723 OFFCURVE",
"172 697.815 OFFCURVE",
"172 660 CURVE SMOOTH",
"172 648 OFFCURVE",
"191.667 631 OFFCURVE",
"205 631 CURVE SMOOTH",
"215.667 631 OFFCURVE",
"230 641.667 OFFCURVE",
"230 651 CURVE SMOOTH",
"230 656.333 OFFCURVE",
"225 660.667 OFFCURVE",
"215 664 CURVE",
"229.667 680 OFFCURVE",
"263.333 682 OFFCURVE",
"282 682 CURVE SMOOTH",
"304.667 682 OFFCURVE",
"321 682.333 OFFCURVE",
"321 665 CURVE SMOOTH",
"321 623.939 OFFCURVE",
"213 619.802 OFFCURVE",
"213 581 CURVE SMOOTH",
"213 566.333 OFFCURVE",
"232.667 550 OFFCURVE",
"250 550 CURVE SMOOTH",
"255.333 550 OFFCURVE",
"258.667 550.333 OFFCURVE",
"260 551 CURVE",
"260 554 LINE SMOOTH",
"260 558 OFFCURVE",
"258.667 562.5 OFFCURVE",
"256 567.5 CURVE SMOOTH",
"253.333 572.5 OFFCURVE",
"252 576 OFFCURVE",
"252 578 CURVE SMOOTH",
"252 581.333 OFFCURVE",
"255.5 584.5 OFFCURVE",
"262.5 587.5 CURVE SMOOTH",
"269.5 590.5 OFFCURVE",
"278.667 593.667 OFFCURVE",
"290 597 CURVE SMOOTH",
"338.656 612.365 OFFCURVE",
"369 620.674 OFFCURVE",
"369 668 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 459 OFFCURVE",
"294 460.333 OFFCURVE",
"294 461 CURVE",
"230.667 517.667 OFFCURVE",
"195.667 546 OFFCURVE",
"189 546 CURVE SMOOTH",
"182.333 546 OFFCURVE",
"147.333 517.667 OFFCURVE",
"84 461 CURVE",
"84 459 OFFCURVE",
"84 457.667 OFFCURVE",
"84 457 CURVE SMOOTH",
"84 453 OFFCURVE",
"90 440 OFFCURVE",
"94 440 CURVE SMOOTH",
"104.667 440 OFFCURVE",
"122 451.333 OFFCURVE",
"146 474 CURVE",
"166.667 488 OFFCURVE",
"181 495.667 OFFCURVE",
"189 497 CURVE",
"193 494.333 OFFCURVE",
"200 491.333 OFFCURVE",
"210 488 CURVE",
"216.667 485.333 OFFCURVE",
"224 480.667 OFFCURVE",
"232 474 CURVE",
"256 451.333 OFFCURVE",
"273.333 440 OFFCURVE",
"284 440 CURVE SMOOTH",
"288 440 OFFCURVE",
"294 453 OFFCURVE",
"294 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 295 LINE SMOOTH",
"327.333 331.667 OFFCURVE",
"310 363 OFFCURVE",
"276 389 CURVE SMOOTH",
"244 413 OFFCURVE",
"209 425 OFFCURVE",
"171 425 CURVE SMOOTH",
"146.333 425 OFFCURVE",
"125.667 416 OFFCURVE",
"109 398 CURVE SMOOTH",
"82.333 368.667 OFFCURVE",
"55 300.333 OFFCURVE",
"55 263 CURVE SMOOTH",
"55 251 OFFCURVE",
"75.667 230 OFFCURVE",
"89 230 CURVE SMOOTH",
"94.333 230 OFFCURVE",
"97 232.667 OFFCURVE",
"97 238 CURVE SMOOTH",
"97 238.667 OFFCURVE",
"97 240.333 OFFCURVE",
"97 243 CURVE SMOOTH",
"97 245.667 OFFCURVE",
"97 247.667 OFFCURVE",
"97 249 CURVE SMOOTH",
"97 275.667 OFFCURVE",
"106.667 303.667 OFFCURVE",
"126 333 CURVE SMOOTH",
"147.333 365 OFFCURVE",
"170.667 381 OFFCURVE",
"196 381 CURVE SMOOTH",
"231.333 381 OFFCURVE",
"255 362 OFFCURVE",
"267 324 CURVE SMOOTH",
"274.333 301.333 OFFCURVE",
"278 267.667 OFFCURVE",
"278 223 CURVE SMOOTH",
"278 213 OFFCURVE",
"276 206 OFFCURVE",
"272 202 CURVE",
"173 202 LINE SMOOTH",
"143.667 202 OFFCURVE",
"111.667 190 OFFCURVE",
"77 166 CURVE SMOOTH",
"39 140 OFFCURVE",
"20 113.333 OFFCURVE",
"20 86 CURVE SMOOTH",
"20 58 OFFCURVE",
"36 34.667 OFFCURVE",
"68 16 CURVE SMOOTH",
"96 -0.667 OFFCURVE",
"125 -9 OFFCURVE",
"155 -9 CURVE SMOOTH",
"198.333 -9 OFFCURVE",
"238.667 4.667 OFFCURVE",
"276 32 CURVE",
"278 28 OFFCURVE",
"279 22.667 OFFCURVE",
"279 16 CURVE SMOOTH",
"279 -8 OFFCURVE",
"279.333 -21 OFFCURVE",
"280 -23 CURVE",
"283.333 -36.333 OFFCURVE",
"293 -43 OFFCURVE",
"309 -43 CURVE SMOOTH",
"323.667 -43 OFFCURVE",
"331 -38.333 OFFCURVE",
"331 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"278 74 OFFCURVE",
"215.333 32 OFFCURVE",
"158 32 CURVE SMOOTH",
"138.667 32 OFFCURVE",
"122 36.333 OFFCURVE",
"108 45 CURVE SMOOTH",
"91.333 55 OFFCURVE",
"83 69 OFFCURVE",
"83 87 CURVE SMOOTH",
"83 116.333 OFFCURVE",
"98.667 138.333 OFFCURVE",
"130 153 CURVE SMOOTH",
"154.667 164.333 OFFCURVE",
"183.333 170 OFFCURVE",
"216 170 CURVE SMOOTH",
"257.333 170 OFFCURVE",
"278 156.667 OFFCURVE",
"278 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
123 934 84 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
91 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 123 118 123 134 123 150 123 166 123 182 123 198 123 214 123 230 123 246 123 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 123 22 123 38 123 54 123 70 123 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 123 101 123 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
107 84 123 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
107 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
99 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
102 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
116 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
117 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
80 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 929 119 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
112 930 95 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
127 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 127 119 127 135 127 151 127 167 127 183 127 199 127 215 127 231 127 247 127 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 127 23 127 39 127 55 127 71 127 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 127 102 127 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 351;
}
);
note = u1EA9;
unicode = 1EA9;
},
{
glyphname = u1EAA;
layers = (
{
components = (
{
name = Acircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 141, 98}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 518;
}
);
note = u1EAA;
unicode = 1EAA;
},
{
glyphname = u1EAB;
layers = (
{
components = (
{
name = acircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 36, -153}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 351;
}
);
note = u1EAB;
unicode = 1EAB;
},
{
glyphname = u1EAC;
layers = (
{
components = (
{
name = Acircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 518;
}
);
note = u1EAC;
unicode = 1EAC;
},
{
glyphname = u1EAD;
layers = (
{
components = (
{
name = acircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 351;
}
);
note = u1EAD;
unicode = 1EAD;
},
{
glyphname = u1EAE;
layers = (
{
components = (
{
name = A;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 424, 2}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 232, 90}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u1EAE;
unicode = 1EAE;
},
{
glyphname = u1EAF;
layers = (
{
components = (
{
name = a;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 330, -248}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 140, -132}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u1EAF;
unicode = 1EAF;
},
{
glyphname = u1EB0;
layers = (
{
components = (
{
name = A;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 424, 2}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 149, 87}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u1EB0;
unicode = 1EB0;
},
{
glyphname = u1EB1;
layers = (
{
components = (
{
name = a;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 330, -248}";
},
{
name = grave;
transform = "{1, 0, 0, 1, 62, -135}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u1EB1;
unicode = 1EB1;
},
{
glyphname = u1EB2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"406 915.61 OFFCURVE",
"356.679 941 OFFCURVE",
"319 941 CURVE SMOOTH",
"292.019 941 OFFCURVE",
"209 915.815 OFFCURVE",
"209 878 CURVE SMOOTH",
"209 866 OFFCURVE",
"228.667 849 OFFCURVE",
"242 849 CURVE SMOOTH",
"252.667 849 OFFCURVE",
"267 859.667 OFFCURVE",
"267 869 CURVE SMOOTH",
"267 874.333 OFFCURVE",
"262 878.667 OFFCURVE",
"252 882 CURVE",
"266.667 898 OFFCURVE",
"300.333 900 OFFCURVE",
"319 900 CURVE SMOOTH",
"341.667 900 OFFCURVE",
"358 900.333 OFFCURVE",
"358 883 CURVE SMOOTH",
"358 841.939 OFFCURVE",
"250 837.802 OFFCURVE",
"250 799 CURVE SMOOTH",
"250 784.333 OFFCURVE",
"269.667 768 OFFCURVE",
"287 768 CURVE SMOOTH",
"292.333 768 OFFCURVE",
"295.667 768.333 OFFCURVE",
"297 769 CURVE",
"297 772 LINE SMOOTH",
"297 776 OFFCURVE",
"295.667 780.5 OFFCURVE",
"293 785.5 CURVE SMOOTH",
"290.333 790.5 OFFCURVE",
"289 794 OFFCURVE",
"289 796 CURVE SMOOTH",
"289 799.333 OFFCURVE",
"292.5 802.5 OFFCURVE",
"299.5 805.5 CURVE SMOOTH",
"306.5 808.5 OFFCURVE",
"315.667 811.667 OFFCURVE",
"327 815 CURVE SMOOTH",
"375.656 830.365 OFFCURVE",
"406 838.674 OFFCURVE",
"406 886 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"498 197 OFFCURVE",
"492 202.333 OFFCURVE",
"480 205 CURVE SMOOTH",
"464 209 OFFCURVE",
"454 212.667 OFFCURVE",
"450 216 CURVE",
"436.667 346 OFFCURVE",
"425 434 OFFCURVE",
"415 480 CURVE SMOOTH",
"387 610.667 OFFCURVE",
"347.333 676 OFFCURVE",
"296 676 CURVE SMOOTH",
"248 676 OFFCURVE",
"180 551 OFFCURVE",
"92 301 CURVE SMOOTH",
"60 211.667 OFFCURVE",
"38.333 130 OFFCURVE",
"27 56 CURVE",
"26.333 52.667 OFFCURVE",
"23.333 44 OFFCURVE",
"18 30 CURVE SMOOTH",
"12.667 16 OFFCURVE",
"10 7 OFFCURVE",
"10 3 CURVE SMOOTH",
"10 -13 OFFCURVE",
"37.667 -35 OFFCURVE",
"55 -35 CURVE SMOOTH",
"61 -35 OFFCURVE",
"65.667 -32.667 OFFCURVE",
"69 -28 CURVE",
"69.667 -11.333 OFFCURVE",
"72.667 14.667 OFFCURVE",
"78 50 CURVE SMOOTH",
"84.667 93.333 OFFCURVE",
"91 117.333 OFFCURVE",
"97 122 CURVE",
"107.667 131.333 OFFCURVE",
"148 140.667 OFFCURVE",
"218 150 CURVE SMOOTH",
"279.333 158 OFFCURVE",
"324.333 162 OFFCURVE",
"353 162 CURVE SMOOTH",
"357.667 162 OFFCURVE",
"365.5 162.667 OFFCURVE",
"376.5 164 CURVE SMOOTH",
"387.5 165.333 OFFCURVE",
"396 165.667 OFFCURVE",
"402 165 CURVE",
"404 161 OFFCURVE",
"405 153 OFFCURVE",
"405 141 CURVE SMOOTH",
"405 135 OFFCURVE",
"405 124 OFFCURVE",
"405 108 CURVE",
"404.333 92 OFFCURVE",
"404 81 OFFCURVE",
"404 75 CURVE SMOOTH",
"404 52.333 OFFCURVE",
"406.667 35.667 OFFCURVE",
"412 25 CURVE",
"422 20.333 OFFCURVE",
"431 18 OFFCURVE",
"439 18 CURVE SMOOTH",
"457.667 18 OFFCURVE",
"475.667 29.667 OFFCURVE",
"477 47 CURVE",
"460.333 89 OFFCURVE",
"452 127 OFFCURVE",
"452 161 CURVE",
"459.333 158.333 OFFCURVE",
"466.333 157 OFFCURVE",
"473 157 CURVE SMOOTH",
"489.667 157 OFFCURVE",
"498 167.667 OFFCURVE",
"498 189 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"288.333 210.667 OFFCURVE",
"217.667 204.333 OFFCURVE",
"189 199 CURVE SMOOTH",
"152.333 192.333 OFFCURVE",
"132 189 OFFCURVE",
"128 189 CURVE SMOOTH",
"116 189 OFFCURVE",
"111.333 197 OFFCURVE",
"114 213 CURVE",
"118.667 230.333 OFFCURVE",
"123 243.333 OFFCURVE",
"127 252 CURVE",
"149.667 316 OFFCURVE",
"172.667 380 OFFCURVE",
"196 444 CURVE",
"237.333 545.333 OFFCURVE",
"271.667 596.667 OFFCURVE",
"299 598 CURVE SMOOTH",
"323.667 598.667 OFFCURVE",
"347 543 OFFCURVE",
"369 431 CURVE SMOOTH",
"373.667 406.333 OFFCURVE",
"384.333 335.333 OFFCURVE",
"401 218 CURVE"
);
},
{
closed = 1;
nodes = (
"404 813 OFFCURVE",
"399 818 OFFCURVE",
"389 818 CURVE SMOOTH",
"379 818 OFFCURVE",
"374 813 OFFCURVE",
"374 803 CURVE SMOOTH",
"374 786.333 OFFCURVE",
"363.667 773.667 OFFCURVE",
"343 765 CURVE SMOOTH",
"327.667 758.333 OFFCURVE",
"310.333 755 OFFCURVE",
"291 755 CURVE SMOOTH",
"239.667 755 OFFCURVE",
"214 771 OFFCURVE",
"214 803 CURVE SMOOTH",
"214 813 OFFCURVE",
"209 818 OFFCURVE",
"199 818 CURVE SMOOTH",
"189 818 OFFCURVE",
"184 813 OFFCURVE",
"184 803 CURVE SMOOTH",
"184 776.333 OFFCURVE",
"196 754.667 OFFCURVE",
"220 738 CURVE SMOOTH",
"242 723.333 OFFCURVE",
"266.667 716 OFFCURVE",
"294 716 CURVE SMOOTH",
"348.667 716 OFFCURVE",
"404 749.667 OFFCURVE",
"404 803 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
123 932 119 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 123 118 123 134 123 150 123 166 123 182 123 198 123 214 123 230 123 246 123 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 123 22 123 38 123 54 123 70 123 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 123 101 123 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
112 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 123 112 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
50 112 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 508;
}
);
note = u1EB2;
unicode = 1EB2;
},
{
glyphname = u1EB3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"320 668.61 OFFCURVE",
"270.679 694 OFFCURVE",
"233 694 CURVE SMOOTH",
"206.019 694 OFFCURVE",
"123 668.815 OFFCURVE",
"123 631 CURVE SMOOTH",
"123 619 OFFCURVE",
"142.667 602 OFFCURVE",
"156 602 CURVE SMOOTH",
"166.667 602 OFFCURVE",
"181 612.667 OFFCURVE",
"181 622 CURVE SMOOTH",
"181 627.333 OFFCURVE",
"176 631.667 OFFCURVE",
"166 635 CURVE",
"180.667 651 OFFCURVE",
"214.333 653 OFFCURVE",
"233 653 CURVE SMOOTH",
"255.667 653 OFFCURVE",
"272 653.333 OFFCURVE",
"272 636 CURVE SMOOTH",
"272 594.939 OFFCURVE",
"164 590.802 OFFCURVE",
"164 552 CURVE SMOOTH",
"164 537.333 OFFCURVE",
"183.667 521 OFFCURVE",
"201 521 CURVE SMOOTH",
"206.333 521 OFFCURVE",
"209.667 521.333 OFFCURVE",
"211 522 CURVE",
"211 525 LINE SMOOTH",
"211 529 OFFCURVE",
"209.667 533.5 OFFCURVE",
"207 538.5 CURVE SMOOTH",
"204.333 543.5 OFFCURVE",
"203 547 OFFCURVE",
"203 549 CURVE SMOOTH",
"203 552.333 OFFCURVE",
"206.5 555.5 OFFCURVE",
"213.5 558.5 CURVE SMOOTH",
"220.5 561.5 OFFCURVE",
"229.667 564.667 OFFCURVE",
"241 568 CURVE SMOOTH",
"289.656 583.365 OFFCURVE",
"320 591.674 OFFCURVE",
"320 639 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 295 LINE SMOOTH",
"332.333 331.667 OFFCURVE",
"315 363 OFFCURVE",
"281 389 CURVE SMOOTH",
"249 413 OFFCURVE",
"214 425 OFFCURVE",
"176 425 CURVE SMOOTH",
"151.333 425 OFFCURVE",
"130.667 416 OFFCURVE",
"114 398 CURVE SMOOTH",
"87.333 368.667 OFFCURVE",
"60 300.333 OFFCURVE",
"60 263 CURVE SMOOTH",
"60 251 OFFCURVE",
"80.667 230 OFFCURVE",
"94 230 CURVE SMOOTH",
"99.333 230 OFFCURVE",
"102 232.667 OFFCURVE",
"102 238 CURVE SMOOTH",
"102 238.667 OFFCURVE",
"102 240.333 OFFCURVE",
"102 243 CURVE SMOOTH",
"102 245.667 OFFCURVE",
"102 247.667 OFFCURVE",
"102 249 CURVE SMOOTH",
"102 275.667 OFFCURVE",
"111.667 303.667 OFFCURVE",
"131 333 CURVE SMOOTH",
"152.333 365 OFFCURVE",
"175.667 381 OFFCURVE",
"201 381 CURVE SMOOTH",
"236.333 381 OFFCURVE",
"260 362 OFFCURVE",
"272 324 CURVE SMOOTH",
"279.333 301.333 OFFCURVE",
"283 267.667 OFFCURVE",
"283 223 CURVE SMOOTH",
"283 213 OFFCURVE",
"281 206 OFFCURVE",
"277 202 CURVE",
"178 202 LINE SMOOTH",
"148.667 202 OFFCURVE",
"116.667 190 OFFCURVE",
"82 166 CURVE SMOOTH",
"44 140 OFFCURVE",
"25 113.333 OFFCURVE",
"25 86 CURVE SMOOTH",
"25 58 OFFCURVE",
"41 34.667 OFFCURVE",
"73 16 CURVE SMOOTH",
"101 -0.667 OFFCURVE",
"130 -9 OFFCURVE",
"160 -9 CURVE SMOOTH",
"203.333 -9 OFFCURVE",
"243.667 4.667 OFFCURVE",
"281 32 CURVE",
"283 28 OFFCURVE",
"284 22.667 OFFCURVE",
"284 16 CURVE SMOOTH",
"284 -8 OFFCURVE",
"284.333 -21 OFFCURVE",
"285 -23 CURVE",
"288.333 -36.333 OFFCURVE",
"298 -43 OFFCURVE",
"314 -43 CURVE SMOOTH",
"328.667 -43 OFFCURVE",
"336 -38.333 OFFCURVE",
"336 -29 CURVE"
);
},
{
closed = 1;
nodes = (
"283 74 OFFCURVE",
"220.333 32 OFFCURVE",
"163 32 CURVE SMOOTH",
"143.667 32 OFFCURVE",
"127 36.333 OFFCURVE",
"113 45 CURVE SMOOTH",
"96.333 55 OFFCURVE",
"88 69 OFFCURVE",
"88 87 CURVE SMOOTH",
"88 116.333 OFFCURVE",
"103.667 138.333 OFFCURVE",
"135 153 CURVE SMOOTH",
"159.667 164.333 OFFCURVE",
"188.333 170 OFFCURVE",
"221 170 CURVE SMOOTH",
"262.333 170 OFFCURVE",
"283 156.667 OFFCURVE",
"283 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"310 562 OFFCURVE",
"305 567 OFFCURVE",
"295 567 CURVE SMOOTH",
"285 567 OFFCURVE",
"280 562 OFFCURVE",
"280 552 CURVE SMOOTH",
"280 535.333 OFFCURVE",
"269.667 522.667 OFFCURVE",
"249 514 CURVE SMOOTH",
"233.667 507.333 OFFCURVE",
"216.333 504 OFFCURVE",
"197 504 CURVE SMOOTH",
"145.667 504 OFFCURVE",
"120 520 OFFCURVE",
"120 552 CURVE SMOOTH",
"120 562 OFFCURVE",
"115 567 OFFCURVE",
"105 567 CURVE SMOOTH",
"95 567 OFFCURVE",
"90 562 OFFCURVE",
"90 552 CURVE SMOOTH",
"90 525.333 OFFCURVE",
"102 503.667 OFFCURVE",
"126 487 CURVE SMOOTH",
"148 472.333 OFFCURVE",
"172.667 465 OFFCURVE",
"200 465 CURVE SMOOTH",
"254.667 465 OFFCURVE",
"310 498.667 OFFCURVE",
"310 552 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 934 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
106 17 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
117 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 17 74 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 17 25 17 41 17 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 117 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
117 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
123 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
83 60 99 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
75 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
92 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
113 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
106 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
64 929 95 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
119 928 109 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
125 71 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 25 105 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 25 120 25 136 25 152 25 168 25 184 25 200 25 216 25 232 25 248 25 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 25 24 25 40 25 56 25 72 25 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 48 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
88 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 103 119 103 135 103 151 103 167 103 183 103 199 103 215 103 231 103 247 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
7 103 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
23 103 39 103 55 103 71 103 4 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 103 102 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
125 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 361;
}
);
note = u1EB3;
unicode = 1EB3;
},
{
glyphname = u1EB4;
layers = (
{
components = (
{
name = A;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 424, 2}";
},
{
name = tilde;
transform = "{1, 0, 0, 1, 138, 110}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u1EB4;
unicode = 1EB4;
},
{
glyphname = u1EB5;
layers = (
{
components = (
{
name = a;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 330, -248}";
},
{
name = tilde;
transform = "{1, 0, 0, 1, 45, -141}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u1EB5;
unicode = 1EB5;
},
{
glyphname = u1EB6;
layers = (
{
components = (
{
name = A;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 424, 2}";
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u1EB6;
unicode = 1EB6;
},
{
glyphname = u1EB7;
layers = (
{
components = (
{
name = a;
},
{
name = brevecmb;
transform = "{1, 0, 0, 1, 330, -248}";
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u1EB7;
unicode = 1EB7;
},
{
glyphname = u1EB8;
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 373, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EB8;
unicode = 1EB8;
},
{
glyphname = u1EB9;
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 303, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = u1EB9;
unicode = 1EB9;
},
{
glyphname = u1EBA;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 834.61 OFFCURVE",
"292.679 860 OFFCURVE",
"255 860 CURVE SMOOTH",
"228.019 860 OFFCURVE",
"145 834.815 OFFCURVE",
"145 797 CURVE SMOOTH",
"145 785 OFFCURVE",
"164.667 768 OFFCURVE",
"178 768 CURVE SMOOTH",
"188.667 768 OFFCURVE",
"203 778.667 OFFCURVE",
"203 788 CURVE SMOOTH",
"203 793.333 OFFCURVE",
"198 797.667 OFFCURVE",
"188 801 CURVE",
"202.667 817 OFFCURVE",
"236.333 819 OFFCURVE",
"255 819 CURVE SMOOTH",
"277.667 819 OFFCURVE",
"294 819.333 OFFCURVE",
"294 802 CURVE SMOOTH",
"294 760.939 OFFCURVE",
"186 756.802 OFFCURVE",
"186 718 CURVE SMOOTH",
"186 703.333 OFFCURVE",
"205.667 687 OFFCURVE",
"223 687 CURVE SMOOTH",
"228.333 687 OFFCURVE",
"231.667 687.333 OFFCURVE",
"233 688 CURVE",
"233 691 LINE SMOOTH",
"233 695 OFFCURVE",
"231.667 699.5 OFFCURVE",
"229 704.5 CURVE SMOOTH",
"226.333 709.5 OFFCURVE",
"225 713 OFFCURVE",
"225 715 CURVE SMOOTH",
"225 718.333 OFFCURVE",
"228.5 721.5 OFFCURVE",
"235.5 724.5 CURVE SMOOTH",
"242.5 727.5 OFFCURVE",
"251.667 730.667 OFFCURVE",
"263 734 CURVE SMOOTH",
"311.656 749.365 OFFCURVE",
"342 757.674 OFFCURVE",
"342 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"442.333 66 OFFCURVE",
"414.667 78 OFFCURVE",
"372 78 CURVE SMOOTH",
"347.333 78 OFFCURVE",
"311.833 69.667 OFFCURVE",
"265.5 53 CURVE SMOOTH",
"219.167 36.333 OFFCURVE",
"183.667 28 OFFCURVE",
"159 28 CURVE SMOOTH",
"107.667 28 OFFCURVE",
"82 78.333 OFFCURVE",
"82 179 CURVE SMOOTH",
"82 232.333 OFFCURVE",
"83.333 266.333 OFFCURVE",
"86 281 CURVE",
"119.333 297 OFFCURVE",
"241.667 329 OFFCURVE",
"275 329 CURVE SMOOTH",
"289.667 329 OFFCURVE",
"301.667 326 OFFCURVE",
"311 320 CURVE",
"329.667 326.667 OFFCURVE",
"338.333 331.333 OFFCURVE",
"337 334 CURVE",
"329 364 LINE",
"312.333 372.667 OFFCURVE",
"295.667 377 OFFCURVE",
"279 377 CURVE SMOOTH",
"258.333 377 OFFCURVE",
"228.333 370.667 OFFCURVE",
"189 358 CURVE SMOOTH",
"149.667 345.333 OFFCURVE",
"120 339 OFFCURVE",
"100 339 CURVE SMOOTH",
"95.333 339 OFFCURVE",
"91.667 340.667 OFFCURVE",
"89 344 CURVE",
"96.333 452 OFFCURVE",
"102.667 531.333 OFFCURVE",
"108 582 CURVE",
"124 595.333 OFFCURVE",
"165.333 608.333 OFFCURVE",
"232 621 CURVE SMOOTH",
"291.333 631.667 OFFCURVE",
"336.333 637 OFFCURVE",
"367 637 CURVE SMOOTH",
"401 637 OFFCURVE",
"418 643.667 OFFCURVE",
"418 657 CURVE SMOOTH",
"418 671.667 OFFCURVE",
"393.333 688.333 OFFCURVE",
"372 687 CURVE",
"366 688.333 OFFCURVE",
"361.333 689 OFFCURVE",
"358 689 CURVE SMOOTH",
"329.333 689 OFFCURVE",
"282 681 OFFCURVE",
"216 665 CURVE SMOOTH",
"143.333 647 OFFCURVE",
"94.667 636.667 OFFCURVE",
"70 634 CURVE SMOOTH",
"48 632 OFFCURVE",
"37 623 OFFCURVE",
"37 607 CURVE SMOOTH",
"37 603.667 OFFCURVE",
"37.833 597.833 OFFCURVE",
"39.5 589.5 CURVE SMOOTH",
"41.167 581.167 OFFCURVE",
"42 574.333 OFFCURVE",
"42 569 CURVE",
"42 569 OFFCURVE",
"41.333 558.333 OFFCURVE",
"40 537 CURVE SMOOTH",
"33.333 448.333 OFFCURVE",
"30 341.333 OFFCURVE",
"30 216 CURVE SMOOTH",
"30 58 OFFCURVE",
"77 -21 OFFCURVE",
"171 -21 CURVE SMOOTH",
"199.667 -21 OFFCURVE",
"241.167 -11.833 OFFCURVE",
"295.5 6.5 CURVE SMOOTH",
"349.833 24.833 OFFCURVE",
"391.333 34 OFFCURVE",
"420 34 CURVE SMOOTH",
"422.667 34 OFFCURVE",
"426.5 33.5 OFFCURVE",
"431.5 32.5 CURVE SMOOTH",
"436.5 31.5 OFFCURVE",
"440.333 31 OFFCURVE",
"443 31 CURVE SMOOTH",
"447.667 31 OFFCURVE",
"451.667 34.667 OFFCURVE",
"455 42 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 933 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
104 930 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 931 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
87 931 94 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 48 119 48 135 48 151 48 167 48 183 48 199 48 215 48 231 48 247 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 48 23 48 39 48 55 48 71 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 48 102 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 465;
}
);
note = u1EBA;
unicode = 1EBA;
},
{
glyphname = u1EBB;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"296 594.61 OFFCURVE",
"246.679 620 OFFCURVE",
"209 620 CURVE SMOOTH",
"182.019 620 OFFCURVE",
"99 594.815 OFFCURVE",
"99 557 CURVE SMOOTH",
"99 545 OFFCURVE",
"118.667 528 OFFCURVE",
"132 528 CURVE SMOOTH",
"142.667 528 OFFCURVE",
"157 538.667 OFFCURVE",
"157 548 CURVE SMOOTH",
"157 553.333 OFFCURVE",
"152 557.667 OFFCURVE",
"142 561 CURVE",
"156.667 577 OFFCURVE",
"190.333 579 OFFCURVE",
"209 579 CURVE SMOOTH",
"231.667 579 OFFCURVE",
"248 579.333 OFFCURVE",
"248 562 CURVE SMOOTH",
"248 520.939 OFFCURVE",
"140 516.802 OFFCURVE",
"140 478 CURVE SMOOTH",
"140 463.333 OFFCURVE",
"159.667 447 OFFCURVE",
"177 447 CURVE SMOOTH",
"182.333 447 OFFCURVE",
"185.667 447.333 OFFCURVE",
"187 448 CURVE",
"187 451 LINE SMOOTH",
"187 455 OFFCURVE",
"185.667 459.5 OFFCURVE",
"183 464.5 CURVE SMOOTH",
"180.333 469.5 OFFCURVE",
"179 473 OFFCURVE",
"179 475 CURVE SMOOTH",
"179 478.333 OFFCURVE",
"182.5 481.5 OFFCURVE",
"189.5 484.5 CURVE SMOOTH",
"196.5 487.5 OFFCURVE",
"205.667 490.667 OFFCURVE",
"217 494 CURVE SMOOTH",
"265.656 509.365 OFFCURVE",
"296 517.674 OFFCURVE",
"296 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 933 52 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 67 22 67 38 67 54 67 70 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 67 101 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
84 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
87 928 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 931 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 69 23 69 39 69 55 69 71 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 69 102 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 338;
}
);
note = u1EBB;
unicode = 1EBB;
},
{
glyphname = u1EBC;
layers = (
{
components = (
{
name = E;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 85, 22}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EBC;
unicode = 1EBC;
},
{
glyphname = u1EBD;
layers = (
{
components = (
{
name = e;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 14, -235}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
note = u1EBD;
unicode = 1EBD;
},
{
glyphname = u1EBE;
layers = (
{
components = (
{
name = Ecircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 306, 79}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EBE;
unicode = 1EBE;
},
{
glyphname = u1EBF;
layers = (
{
components = (
{
name = ecircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 211, -167}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 343;
}
);
note = u1EBF;
unicode = 1EBF;
},
{
glyphname = u1EC0;
layers = (
{
components = (
{
name = Ecircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, -59, 67}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EC0;
unicode = 1EC0;
},
{
glyphname = u1EC1;
layers = (
{
components = (
{
name = ecircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, -91, -170}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 343;
}
);
note = u1EC1;
unicode = 1EC1;
},
{
glyphname = u1EC2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"473 914.61 OFFCURVE",
"423.679 940 OFFCURVE",
"386 940 CURVE SMOOTH",
"359.019 940 OFFCURVE",
"276 914.815 OFFCURVE",
"276 877 CURVE SMOOTH",
"276 865 OFFCURVE",
"295.667 848 OFFCURVE",
"309 848 CURVE SMOOTH",
"319.667 848 OFFCURVE",
"334 858.667 OFFCURVE",
"334 868 CURVE SMOOTH",
"334 873.333 OFFCURVE",
"329 877.667 OFFCURVE",
"319 881 CURVE",
"333.667 897 OFFCURVE",
"367.333 899 OFFCURVE",
"386 899 CURVE SMOOTH",
"408.667 899 OFFCURVE",
"425 899.333 OFFCURVE",
"425 882 CURVE SMOOTH",
"425 840.939 OFFCURVE",
"317 836.802 OFFCURVE",
"317 798 CURVE SMOOTH",
"317 783.333 OFFCURVE",
"336.667 767 OFFCURVE",
"354 767 CURVE SMOOTH",
"359.333 767 OFFCURVE",
"362.667 767.333 OFFCURVE",
"364 768 CURVE",
"364 771 LINE SMOOTH",
"364 775 OFFCURVE",
"362.667 779.5 OFFCURVE",
"360 784.5 CURVE SMOOTH",
"357.333 789.5 OFFCURVE",
"356 793 OFFCURVE",
"356 795 CURVE SMOOTH",
"356 798.333 OFFCURVE",
"359.5 801.5 OFFCURVE",
"366.5 804.5 CURVE SMOOTH",
"373.5 807.5 OFFCURVE",
"382.667 810.667 OFFCURVE",
"394 814 CURVE SMOOTH",
"442.656 829.365 OFFCURVE",
"473 837.674 OFFCURVE",
"473 885 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"347 734 OFFCURVE",
"346.333 736 OFFCURVE",
"345 740 CURVE",
"265 797.333 OFFCURVE",
"220.667 826 OFFCURVE",
"212 826 CURVE SMOOTH",
"205.333 826 OFFCURVE",
"168 788.667 OFFCURVE",
"100 714 CURVE",
"100 711 LINE SMOOTH",
"100 704.333 OFFCURVE",
"108.667 691 OFFCURVE",
"114 691 CURVE SMOOTH",
"125.333 691 OFFCURVE",
"144.667 706.333 OFFCURVE",
"172 737 CURVE",
"194 755.667 OFFCURVE",
"209.333 766.333 OFFCURVE",
"218 769 CURVE",
"223.333 766.333 OFFCURVE",
"232 763.667 OFFCURVE",
"244 761 CURVE SMOOTH",
"252.667 759 OFFCURVE",
"261.667 754.333 OFFCURVE",
"271 747 CURVE SMOOTH",
"300.333 725 OFFCURVE",
"321.667 714 OFFCURVE",
"335 714 CURVE SMOOTH",
"343 714 OFFCURVE",
"347 720.667 OFFCURVE",
"347 734 CURVE"
);
},
{
closed = 1;
nodes = (
"432.333 66 OFFCURVE",
"404.667 78 OFFCURVE",
"362 78 CURVE SMOOTH",
"337.333 78 OFFCURVE",
"301.833 69.667 OFFCURVE",
"255.5 53 CURVE SMOOTH",
"209.167 36.333 OFFCURVE",
"173.667 28 OFFCURVE",
"149 28 CURVE SMOOTH",
"97.667 28 OFFCURVE",
"72 78.333 OFFCURVE",
"72 179 CURVE SMOOTH",
"72 219 OFFCURVE",
"73.333 246.333 OFFCURVE",
"76 261 CURVE",
"106.667 274.333 OFFCURVE",
"229 299 OFFCURVE",
"265 299 CURVE SMOOTH",
"279.667 299 OFFCURVE",
"291.667 296 OFFCURVE",
"301 290 CURVE",
"319.667 296.667 OFFCURVE",
"328.333 301.333 OFFCURVE",
"327 304 CURVE",
"319 334 LINE",
"302.333 342.667 OFFCURVE",
"285.667 347 OFFCURVE",
"269 347 CURVE SMOOTH",
"248.333 347 OFFCURVE",
"218.333 342.333 OFFCURVE",
"179 333 CURVE SMOOTH",
"139.667 323.667 OFFCURVE",
"110 319 OFFCURVE",
"90 319 CURVE SMOOTH",
"85.333 319 OFFCURVE",
"81.667 320.667 OFFCURVE",
"79 324 CURVE",
"86.333 438.667 OFFCURVE",
"92.667 524.667 OFFCURVE",
"98 582 CURVE",
"114 595.333 OFFCURVE",
"155.333 608.333 OFFCURVE",
"222 621 CURVE SMOOTH",
"281.333 631.667 OFFCURVE",
"326.333 637 OFFCURVE",
"357 637 CURVE SMOOTH",
"361 637 OFFCURVE",
"367.167 636.5 OFFCURVE",
"375.5 635.5 CURVE SMOOTH",
"383.833 634.5 OFFCURVE",
"390 634 OFFCURVE",
"394 634 CURVE SMOOTH",
"403.333 634 OFFCURVE",
"411.667 637.667 OFFCURVE",
"419 645 CURVE",
"395.667 673 OFFCURVE",
"365.333 687 OFFCURVE",
"328 687 CURVE SMOOTH",
"299.333 687 OFFCURVE",
"255.333 679.333 OFFCURVE",
"196 664 CURVE SMOOTH",
"130 646.667 OFFCURVE",
"84.667 636.667 OFFCURVE",
"60 634 CURVE",
"44 627.333 OFFCURVE",
"32.667 621 OFFCURVE",
"26 615 CURVE",
"27.333 607 OFFCURVE",
"32 581 OFFCURVE",
"32 569 CURVE",
"32 569 OFFCURVE",
"31.333 558.333 OFFCURVE",
"30 537 CURVE SMOOTH",
"23.333 448.333 OFFCURVE",
"20 341.333 OFFCURVE",
"20 216 CURVE SMOOTH",
"20 58 OFFCURVE",
"67 -21 OFFCURVE",
"161 -21 CURVE SMOOTH",
"189.667 -21 OFFCURVE",
"231.167 -11.833 OFFCURVE",
"285.5 6.5 CURVE SMOOTH",
"339.833 24.833 OFFCURVE",
"381.333 34 OFFCURVE",
"410 34 CURVE SMOOTH",
"412.667 34 OFFCURVE",
"416.5 33.5 OFFCURVE",
"421.5 32.5 CURVE SMOOTH",
"426.5 31.5 OFFCURVE",
"430.333 31 OFFCURVE",
"433 31 CURVE SMOOTH",
"437.667 31 OFFCURVE",
"441.667 34.667 OFFCURVE",
"445 42 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
121 933 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 121 118 121 134 121 150 121 166 121 182 121 198 121 214 121 230 121 246 121 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 121 22 121 38 121 54 121 70 121 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 121 101 121 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
119 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
119 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
126 930 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
91 931 98 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
109 931 116 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
70 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 70 23 70 39 70 55 70 71 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 70 102 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 465;
}
);
note = u1EC2;
unicode = 1EC2;
},
{
glyphname = u1EC3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"332 686.61 OFFCURVE",
"282.679 712 OFFCURVE",
"245 712 CURVE SMOOTH",
"218.019 712 OFFCURVE",
"135 686.815 OFFCURVE",
"135 649 CURVE SMOOTH",
"135 637 OFFCURVE",
"154.667 620 OFFCURVE",
"168 620 CURVE SMOOTH",
"178.667 620 OFFCURVE",
"193 630.667 OFFCURVE",
"193 640 CURVE SMOOTH",
"193 645.333 OFFCURVE",
"188 649.667 OFFCURVE",
"178 653 CURVE",
"192.667 669 OFFCURVE",
"226.333 671 OFFCURVE",
"245 671 CURVE SMOOTH",
"267.667 671 OFFCURVE",
"284 671.333 OFFCURVE",
"284 654 CURVE SMOOTH",
"284 612.939 OFFCURVE",
"176 608.802 OFFCURVE",
"176 570 CURVE SMOOTH",
"176 555.333 OFFCURVE",
"195.667 539 OFFCURVE",
"213 539 CURVE SMOOTH",
"218.333 539 OFFCURVE",
"221.667 539.333 OFFCURVE",
"223 540 CURVE",
"223 543 LINE SMOOTH",
"223 547 OFFCURVE",
"221.667 551.5 OFFCURVE",
"219 556.5 CURVE SMOOTH",
"216.333 561.5 OFFCURVE",
"215 565 OFFCURVE",
"215 567 CURVE SMOOTH",
"215 570.333 OFFCURVE",
"218.5 573.5 OFFCURVE",
"225.5 576.5 CURVE SMOOTH",
"232.5 579.5 OFFCURVE",
"241.667 582.667 OFFCURVE",
"253 586 CURVE SMOOTH",
"301.656 601.365 OFFCURVE",
"332 609.674 OFFCURVE",
"332 657 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 459 OFFCURVE",
"259 460.333 OFFCURVE",
"259 461 CURVE",
"195.667 517.667 OFFCURVE",
"160.667 546 OFFCURVE",
"154 546 CURVE SMOOTH",
"147.333 546 OFFCURVE",
"112.333 517.667 OFFCURVE",
"49 461 CURVE",
"49 459 OFFCURVE",
"49 457.667 OFFCURVE",
"49 457 CURVE SMOOTH",
"49 453 OFFCURVE",
"55 440 OFFCURVE",
"59 440 CURVE SMOOTH",
"69.667 440 OFFCURVE",
"87 451.333 OFFCURVE",
"111 474 CURVE",
"131.667 488 OFFCURVE",
"146 495.667 OFFCURVE",
"154 497 CURVE",
"158 494.333 OFFCURVE",
"165 491.333 OFFCURVE",
"175 488 CURVE SMOOTH",
"181.667 486 OFFCURVE",
"189 481.333 OFFCURVE",
"197 474 CURVE SMOOTH",
"221 451.333 OFFCURVE",
"238.333 440 OFFCURVE",
"249 440 CURVE SMOOTH",
"253 440 OFFCURVE",
"259 453 OFFCURVE",
"259 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 117.667 OFFCURVE",
"310.333 127 OFFCURVE",
"295 127 CURVE SMOOTH",
"291 127 OFFCURVE",
"282.667 118.667 OFFCURVE",
"270 102 CURVE SMOOTH",
"254 80.667 OFFCURVE",
"239.333 65 OFFCURVE",
"226 55 CURVE SMOOTH",
"204 37.667 OFFCURVE",
"180 29 OFFCURVE",
"154 29 CURVE SMOOTH",
"103.333 29 OFFCURVE",
"78 67.333 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149.333 OFFCURVE",
"82.333 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"95.667 152 OFFCURVE",
"104.5 148.667 OFFCURVE",
"117.5 142 CURVE SMOOTH",
"130.5 135.333 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203.333 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"106.667 431 OFFCURVE",
"76 393.667 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 261.667 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 44.667 OFFCURVE",
"69.667 -12 OFFCURVE",
"159 -12 CURVE SMOOTH",
"190.333 -12 OFFCURVE",
"223.667 -1.333 OFFCURVE",
"259 20 CURVE SMOOTH",
"298.333 43.333 OFFCURVE",
"318 69.667 OFFCURVE",
"318 99 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"240.667 230.333 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 185.667 OFFCURVE",
"183.333 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117.333 174 OFFCURVE",
"90 203.333 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"127.667 362.333 OFFCURVE",
"149.333 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 329.667 OFFCURVE",
"249 283 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
91 933 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
101 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 101 106 101 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 101 121 101 137 101 153 101 169 101 185 101 201 101 217 101 233 101 249 101 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 101 25 101 41 101 57 101 73 101 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
83 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 91 22 91 38 91 54 91 70 91 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 91 101 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
108 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
74 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
111 928 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 931 104 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
93 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 93 119 93 135 93 151 93 167 93 183 93 199 93 215 93 231 93 247 93 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 93 23 93 39 93 55 93 71 93 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 93 102 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 343;
}
);
note = u1EC3;
unicode = 1EC3;
},
{
glyphname = u1EC4;
layers = (
{
components = (
{
name = Ecircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 64, 119}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EC4;
unicode = 1EC4;
},
{
glyphname = u1EC5;
layers = (
{
components = (
{
name = ecircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 8, -152}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 343;
}
);
note = u1EC5;
unicode = 1EC5;
},
{
glyphname = u1EC6;
layers = (
{
components = (
{
name = Ecircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 373, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 465;
}
);
note = u1EC6;
unicode = 1EC6;
},
{
glyphname = u1EC7;
layers = (
{
components = (
{
name = ecircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 303, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 343;
}
);
note = u1EC7;
unicode = 1EC7;
},
{
glyphname = u1EC8;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"212 834.61 OFFCURVE",
"162.679 860 OFFCURVE",
"125 860 CURVE SMOOTH",
"98.019 860 OFFCURVE",
"15 834.815 OFFCURVE",
"15 797 CURVE SMOOTH",
"15 785 OFFCURVE",
"34.667 768 OFFCURVE",
"48 768 CURVE SMOOTH",
"58.667 768 OFFCURVE",
"73 778.667 OFFCURVE",
"73 788 CURVE SMOOTH",
"73 793.333 OFFCURVE",
"68 797.667 OFFCURVE",
"58 801 CURVE",
"72.667 817 OFFCURVE",
"106.333 819 OFFCURVE",
"125 819 CURVE SMOOTH",
"147.667 819 OFFCURVE",
"164 819.333 OFFCURVE",
"164 802 CURVE SMOOTH",
"164 760.939 OFFCURVE",
"56 756.802 OFFCURVE",
"56 718 CURVE SMOOTH",
"56 703.333 OFFCURVE",
"75.667 687 OFFCURVE",
"93 687 CURVE SMOOTH",
"98.333 687 OFFCURVE",
"101.667 687.333 OFFCURVE",
"103 688 CURVE",
"103 691 LINE SMOOTH",
"103 695 OFFCURVE",
"101.667 699.5 OFFCURVE",
"99 704.5 CURVE SMOOTH",
"96.333 709.5 OFFCURVE",
"95 713 OFFCURVE",
"95 715 CURVE SMOOTH",
"95 718.333 OFFCURVE",
"98.5 721.5 OFFCURVE",
"105.5 724.5 CURVE SMOOTH",
"112.5 727.5 OFFCURVE",
"121.667 730.667 OFFCURVE",
"133 734 CURVE SMOOTH",
"181.656 749.365 OFFCURVE",
"212 757.674 OFFCURVE",
"212 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"132 651.667 OFFCURVE",
"104 670 OFFCURVE",
"92 670 CURVE SMOOTH",
"73.333 670 OFFCURVE",
"40 642.667 OFFCURVE",
"40 624 CURVE SMOOTH",
"33 150 LINE SMOOTH",
"33 132.667 OFFCURVE",
"35.667 103.333 OFFCURVE",
"41 62 CURVE SMOOTH",
"47 15.333 OFFCURVE",
"64.333 -8 OFFCURVE",
"93 -8 CURVE SMOOTH",
"100.333 -8 OFFCURVE",
"110.333 -3.667 OFFCURVE",
"123 5 CURVE",
"103 34.333 OFFCURVE",
"93 96.667 OFFCURVE",
"93 192 CURVE SMOOTH",
"93 308 OFFCURVE",
"100.333 434.333 OFFCURVE",
"115 571 CURVE SMOOTH",
"117.667 601 OFFCURVE",
"120.333 618.667 OFFCURVE",
"123 624 CURVE",
"129 634.667 OFFCURVE",
"132 640.333 OFFCURVE",
"132 641 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
60 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 172;
}
);
note = u1EC8;
unicode = 1EC8;
},
{
glyphname = u1EC9;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"180 594.61 OFFCURVE",
"130.679 620 OFFCURVE",
"93 620 CURVE SMOOTH",
"66.019 620 OFFCURVE",
"-17 594.815 OFFCURVE",
"-17 557 CURVE SMOOTH",
"-17 545 OFFCURVE",
"2.667 528 OFFCURVE",
"16 528 CURVE SMOOTH",
"26.667 528 OFFCURVE",
"41 538.667 OFFCURVE",
"41 548 CURVE SMOOTH",
"41 553.333 OFFCURVE",
"36 557.667 OFFCURVE",
"26 561 CURVE",
"40.667 577 OFFCURVE",
"74.333 579 OFFCURVE",
"93 579 CURVE SMOOTH",
"115.667 579 OFFCURVE",
"132 579.333 OFFCURVE",
"132 562 CURVE SMOOTH",
"132 520.939 OFFCURVE",
"24 516.802 OFFCURVE",
"24 478 CURVE SMOOTH",
"24 463.333 OFFCURVE",
"43.667 447 OFFCURVE",
"61 447 CURVE SMOOTH",
"66.333 447 OFFCURVE",
"69.667 447.333 OFFCURVE",
"71 448 CURVE",
"71 451 LINE SMOOTH",
"71 455 OFFCURVE",
"69.667 459.5 OFFCURVE",
"67 464.5 CURVE SMOOTH",
"64.333 469.5 OFFCURVE",
"63 473 OFFCURVE",
"63 475 CURVE SMOOTH",
"63 478.333 OFFCURVE",
"66.5 481.5 OFFCURVE",
"73.5 484.5 CURVE SMOOTH",
"80.5 487.5 OFFCURVE",
"89.667 490.667 OFFCURVE",
"101 494 CURVE SMOOTH",
"149.656 509.365 OFFCURVE",
"180 517.674 OFFCURVE",
"180 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 397.667 OFFCURVE",
"94.333 403.333 OFFCURVE",
"83 408 CURVE",
"74.333 412.667 OFFCURVE",
"66 415 OFFCURVE",
"58 415 CURVE SMOOTH",
"50 415 OFFCURVE",
"41.667 412.667 OFFCURVE",
"33 408 CURVE",
"33 41 LINE SMOOTH",
"33 9.667 OFFCURVE",
"49.333 -6 OFFCURVE",
"82 -6 CURVE SMOOTH",
"86.667 -6 OFFCURVE",
"90.333 -3.333 OFFCURVE",
"93 2 CURVE",
"87 27.333 OFFCURVE",
"84 47.333 OFFCURVE",
"84 62 CURVE SMOOTH",
"84 283 LINE SMOOTH",
"84 295 OFFCURVE",
"86.667 313 OFFCURVE",
"92 337 CURVE SMOOTH",
"97.333 361 OFFCURVE",
"100 379 OFFCURVE",
"100 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
56 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
50 933 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 133;
}
);
note = u1EC9;
unicode = 1EC9;
},
{
glyphname = u1ECA;
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 222, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = u1ECA;
unicode = 1ECA;
},
{
glyphname = u1ECB;
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 141;
}
);
note = u1ECB;
unicode = 1ECB;
},
{
glyphname = u1ECC;
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = u1ECC;
unicode = 1ECC;
},
{
glyphname = u1ECD;
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = u1ECD;
unicode = 1ECD;
},
{
glyphname = u1ECE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"402 834.61 OFFCURVE",
"352.679 860 OFFCURVE",
"315 860 CURVE SMOOTH",
"288.019 860 OFFCURVE",
"205 834.815 OFFCURVE",
"205 797 CURVE SMOOTH",
"205 785 OFFCURVE",
"224.667 768 OFFCURVE",
"238 768 CURVE SMOOTH",
"248.667 768 OFFCURVE",
"263 778.667 OFFCURVE",
"263 788 CURVE SMOOTH",
"263 793.333 OFFCURVE",
"258 797.667 OFFCURVE",
"248 801 CURVE",
"262.667 817 OFFCURVE",
"296.333 819 OFFCURVE",
"315 819 CURVE SMOOTH",
"337.667 819 OFFCURVE",
"354 819.333 OFFCURVE",
"354 802 CURVE SMOOTH",
"354 760.939 OFFCURVE",
"246 756.802 OFFCURVE",
"246 718 CURVE SMOOTH",
"246 703.333 OFFCURVE",
"265.667 687 OFFCURVE",
"283 687 CURVE SMOOTH",
"288.333 687 OFFCURVE",
"291.667 687.333 OFFCURVE",
"293 688 CURVE",
"293 691 LINE SMOOTH",
"293 695 OFFCURVE",
"291.667 699.5 OFFCURVE",
"289 704.5 CURVE SMOOTH",
"286.333 709.5 OFFCURVE",
"285 713 OFFCURVE",
"285 715 CURVE SMOOTH",
"285 718.333 OFFCURVE",
"288.5 721.5 OFFCURVE",
"295.5 724.5 CURVE SMOOTH",
"302.5 727.5 OFFCURVE",
"311.667 730.667 OFFCURVE",
"323 734 CURVE SMOOTH",
"371.656 749.365 OFFCURVE",
"402 757.674 OFFCURVE",
"402 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"536 423.667 OFFCURVE",
"517.333 499 OFFCURVE",
"480 565 CURVE SMOOTH",
"435.333 644.333 OFFCURVE",
"374.333 684 OFFCURVE",
"297 684 CURVE SMOOTH",
"208.333 684 OFFCURVE",
"138.667 638 OFFCURVE",
"88 546 CURVE SMOOTH",
"45.333 469.333 OFFCURVE",
"24 383 OFFCURVE",
"24 287 CURVE SMOOTH",
"24 122.333 OFFCURVE",
"79.667 22.333 OFFCURVE",
"191 -13 CURVE SMOOTH",
"220.333 -23 OFFCURVE",
"246 -28 OFFCURVE",
"268 -28 CURVE SMOOTH",
"355.333 -28 OFFCURVE",
"423.667 12.667 OFFCURVE",
"473 94 CURVE SMOOTH",
"515 163.333 OFFCURVE",
"536 245 OFFCURVE",
"536 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 264 OFFCURVE",
"465.333 193 OFFCURVE",
"436 135 CURVE SMOOTH",
"398.667 59.667 OFFCURVE",
"342 22 OFFCURVE",
"266 22 CURVE SMOOTH",
"210.667 22 OFFCURVE",
"167.667 38 OFFCURVE",
"137 70 CURVE SMOOTH",
"111 98 OFFCURVE",
"92.333 140.667 OFFCURVE",
"81 198 CURVE SMOOTH",
"75.667 225.333 OFFCURVE",
"73 245.333 OFFCURVE",
"73 258 CURVE SMOOTH",
"73 397.333 OFFCURVE",
"108 500.333 OFFCURVE",
"178 567 CURVE SMOOTH",
"219.333 606.333 OFFCURVE",
"261.333 626 OFFCURVE",
"304 626 CURVE SMOOTH",
"312 626 OFFCURVE",
"321.333 624 OFFCURVE",
"332 620 CURVE SMOOTH",
"430.667 586.667 OFFCURVE",
"480 496 OFFCURVE",
"480 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
70 932 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 934 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 62 106 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 62 25 62 41 62 57 62 73 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 70 22 70 38 70 54 70 70 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 70 101 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
76 931 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 931 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 572;
}
);
note = u1ECE;
unicode = 1ECE;
},
{
glyphname = u1ECF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"285 594.61 OFFCURVE",
"235.679 620 OFFCURVE",
"198 620 CURVE SMOOTH",
"171.019 620 OFFCURVE",
"88 594.815 OFFCURVE",
"88 557 CURVE SMOOTH",
"88 545 OFFCURVE",
"107.667 528 OFFCURVE",
"121 528 CURVE SMOOTH",
"131.667 528 OFFCURVE",
"146 538.667 OFFCURVE",
"146 548 CURVE SMOOTH",
"146 553.333 OFFCURVE",
"141 557.667 OFFCURVE",
"131 561 CURVE",
"145.667 577 OFFCURVE",
"179.333 579 OFFCURVE",
"198 579 CURVE SMOOTH",
"220.667 579 OFFCURVE",
"237 579.333 OFFCURVE",
"237 562 CURVE SMOOTH",
"237 520.939 OFFCURVE",
"129 516.802 OFFCURVE",
"129 478 CURVE SMOOTH",
"129 463.333 OFFCURVE",
"148.667 447 OFFCURVE",
"166 447 CURVE SMOOTH",
"171.333 447 OFFCURVE",
"174.667 447.333 OFFCURVE",
"176 448 CURVE",
"176 451 LINE SMOOTH",
"176 455 OFFCURVE",
"174.667 459.5 OFFCURVE",
"172 464.5 CURVE SMOOTH",
"169.333 469.5 OFFCURVE",
"168 473 OFFCURVE",
"168 475 CURVE SMOOTH",
"168 478.333 OFFCURVE",
"171.5 481.5 OFFCURVE",
"178.5 484.5 CURVE SMOOTH",
"185.5 487.5 OFFCURVE",
"194.667 490.667 OFFCURVE",
"206 494 CURVE SMOOTH",
"254.656 509.365 OFFCURVE",
"285 517.674 OFFCURVE",
"285 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"342 301 OFFCURVE",
"307.667 374.333 OFFCURVE",
"239 417 CURVE SMOOTH",
"215.667 431.667 OFFCURVE",
"197.667 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"135.667 439 OFFCURVE",
"95 405.333 OFFCURVE",
"63 338 CURVE SMOOTH",
"37.667 283.333 OFFCURVE",
"25 227.667 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 113.667 OFFCURVE",
"36 67.667 OFFCURVE",
"58 33 CURVE SMOOTH",
"84.667 -9 OFFCURVE",
"125 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"232.333 -30 OFFCURVE",
"274 -4.333 OFFCURVE",
"304 47 CURVE SMOOTH",
"329.333 89.667 OFFCURVE",
"342 139.667 OFFCURVE",
"342 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 152.667 OFFCURVE",
"286 112.333 OFFCURVE",
"270 77 CURVE SMOOTH",
"249.333 31.667 OFFCURVE",
"219 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"142.333 9 OFFCURVE",
"115.333 28.667 OFFCURVE",
"98 68 CURVE SMOOTH",
"86 96.667 OFFCURVE",
"80 132 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 220.667 OFFCURVE",
"88.667 264.333 OFFCURVE",
"106 305 CURVE SMOOTH",
"128.667 357.667 OFFCURVE",
"160 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"234.667 384 OFFCURVE",
"260.333 360.333 OFFCURVE",
"277 313 CURVE SMOOTH",
"288.333 279 OFFCURVE",
"294 240.667 OFFCURVE",
"294 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
70 933 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 932 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 62 106 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 62 25 62 41 62 57 62 73 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 70 118 70 134 70 150 70 166 70 182 70 198 70 214 70 230 70 246 70 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 70 22 70 38 70 54 70 70 70 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 70 101 70 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
74 928 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 931 66 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = u1ECF;
unicode = 1ECF;
},
{
glyphname = u1ED0;
layers = (
{
components = (
{
name = Ocircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 366, 79}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 552;
}
);
note = u1ED0;
unicode = 1ED0;
},
{
glyphname = u1ED1;
layers = (
{
components = (
{
name = ocircumflex;
},
{
name = acute;
transform = "{1, 0, 0, 1, 223, -167}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = u1ED1;
unicode = 1ED1;
},
{
glyphname = u1ED2;
layers = (
{
components = (
{
name = Ocircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, 0, 67}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 552;
}
);
note = u1ED2;
unicode = 1ED2;
},
{
glyphname = u1ED3;
layers = (
{
components = (
{
name = ocircumflex;
},
{
name = grave;
transform = "{1, 0, 0, 1, -65, -170}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = u1ED3;
unicode = 1ED3;
},
{
glyphname = u1ED4;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"578 855.61 OFFCURVE",
"528.679 881 OFFCURVE",
"491 881 CURVE SMOOTH",
"464.019 881 OFFCURVE",
"381 855.815 OFFCURVE",
"381 818 CURVE SMOOTH",
"381 806 OFFCURVE",
"400.667 789 OFFCURVE",
"414 789 CURVE SMOOTH",
"424.667 789 OFFCURVE",
"439 799.667 OFFCURVE",
"439 809 CURVE SMOOTH",
"439 814.333 OFFCURVE",
"434 818.667 OFFCURVE",
"424 822 CURVE",
"438.667 838 OFFCURVE",
"472.333 840 OFFCURVE",
"491 840 CURVE SMOOTH",
"513.667 840 OFFCURVE",
"530 840.333 OFFCURVE",
"530 823 CURVE SMOOTH",
"530 781.939 OFFCURVE",
"422 777.802 OFFCURVE",
"422 739 CURVE SMOOTH",
"422 724.333 OFFCURVE",
"441.667 708 OFFCURVE",
"459 708 CURVE SMOOTH",
"464.333 708 OFFCURVE",
"467.667 708.333 OFFCURVE",
"469 709 CURVE",
"469 712 LINE SMOOTH",
"469 716 OFFCURVE",
"467.667 720.5 OFFCURVE",
"465 725.5 CURVE SMOOTH",
"462.333 730.5 OFFCURVE",
"461 734 OFFCURVE",
"461 736 CURVE SMOOTH",
"461 739.333 OFFCURVE",
"464.5 742.5 OFFCURVE",
"471.5 745.5 CURVE SMOOTH",
"478.5 748.5 OFFCURVE",
"487.667 751.667 OFFCURVE",
"499 755 CURVE SMOOTH",
"547.656 770.365 OFFCURVE",
"578 778.674 OFFCURVE",
"578 826 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"413 712 OFFCURVE",
"412.667 713.667 OFFCURVE",
"412 717 CURVE",
"338 783.667 OFFCURVE",
"297 817 OFFCURVE",
"289 817 CURVE SMOOTH",
"281 817 OFFCURVE",
"240 783.667 OFFCURVE",
"166 717 CURVE",
"165.333 713.667 OFFCURVE",
"165 712 OFFCURVE",
"165 712 CURVE",
"165 706.667 OFFCURVE",
"173 692 OFFCURVE",
"177 692 CURVE SMOOTH",
"189.667 692 OFFCURVE",
"210.333 705.333 OFFCURVE",
"239 732 CURVE",
"263 748 OFFCURVE",
"279.667 757 OFFCURVE",
"289 759 CURVE",
"294.333 756.333 OFFCURVE",
"302.667 752.667 OFFCURVE",
"314 748 CURVE",
"322 745.333 OFFCURVE",
"330.333 740 OFFCURVE",
"339 732 CURVE SMOOTH",
"367.667 705.333 OFFCURVE",
"388.333 692 OFFCURVE",
"401 692 CURVE SMOOTH",
"405 692 OFFCURVE",
"413 706.667 OFFCURVE",
"413 712 CURVE"
);
},
{
closed = 1;
nodes = (
"532 423.667 OFFCURVE",
"513.333 499 OFFCURVE",
"476 565 CURVE SMOOTH",
"431.333 644.333 OFFCURVE",
"370.333 684 OFFCURVE",
"293 684 CURVE SMOOTH",
"204.333 684 OFFCURVE",
"134.667 638 OFFCURVE",
"84 546 CURVE SMOOTH",
"41.333 469.333 OFFCURVE",
"20 383 OFFCURVE",
"20 287 CURVE SMOOTH",
"20 213 OFFCURVE",
"30.667 154 OFFCURVE",
"52 110 CURVE SMOOTH",
"78.667 54.667 OFFCURVE",
"123.667 17 OFFCURVE",
"187 -3 CURVE SMOOTH",
"216.333 -13 OFFCURVE",
"242 -18 OFFCURVE",
"264 -18 CURVE SMOOTH",
"352 -18 OFFCURVE",
"420.333 21 OFFCURVE",
"469 99 CURVE SMOOTH",
"511 165.667 OFFCURVE",
"532 245.667 OFFCURVE",
"532 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 264 OFFCURVE",
"461.333 193 OFFCURVE",
"432 135 CURVE SMOOTH",
"394.667 59.667 OFFCURVE",
"338 22 OFFCURVE",
"262 22 CURVE SMOOTH",
"206.667 22 OFFCURVE",
"163.667 38 OFFCURVE",
"133 70 CURVE SMOOTH",
"107 98 OFFCURVE",
"88.333 140.667 OFFCURVE",
"77 198 CURVE SMOOTH",
"71.667 225.333 OFFCURVE",
"69 245.333 OFFCURVE",
"69 258 CURVE SMOOTH",
"69 397.333 OFFCURVE",
"104 500.333 OFFCURVE",
"174 567 CURVE SMOOTH",
"215.333 606.333 OFFCURVE",
"257.333 626 OFFCURVE",
"300 626 CURVE SMOOTH",
"308 626 OFFCURVE",
"317.333 624 OFFCURVE",
"328 620 CURVE SMOOTH",
"426.667 586.667 OFFCURVE",
"476 496 OFFCURVE",
"476 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 932 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
88 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
88 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 88 106 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 88 25 88 41 88 57 88 73 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 96 118 96 134 96 150 96 166 96 182 96 198 96 214 96 230 96 246 96 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 96 22 96 38 96 54 96 70 96 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 96 101 96 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
74 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 931 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
102 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 102 119 102 135 102 151 102 167 102 183 102 199 102 215 102 231 102 247 102 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 102 23 102 39 102 55 102 71 102 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 102 102 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 552;
}
);
note = u1ED4;
unicode = 1ED4;
},
{
glyphname = u1ED5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"357 697.61 OFFCURVE",
"307.679 723 OFFCURVE",
"270 723 CURVE SMOOTH",
"243.019 723 OFFCURVE",
"160 697.815 OFFCURVE",
"160 660 CURVE SMOOTH",
"160 648 OFFCURVE",
"179.667 631 OFFCURVE",
"193 631 CURVE SMOOTH",
"203.667 631 OFFCURVE",
"218 641.667 OFFCURVE",
"218 651 CURVE SMOOTH",
"218 656.333 OFFCURVE",
"213 660.667 OFFCURVE",
"203 664 CURVE",
"217.667 680 OFFCURVE",
"251.333 682 OFFCURVE",
"270 682 CURVE SMOOTH",
"292.667 682 OFFCURVE",
"309 682.333 OFFCURVE",
"309 665 CURVE SMOOTH",
"309 623.939 OFFCURVE",
"201 619.802 OFFCURVE",
"201 581 CURVE SMOOTH",
"201 566.333 OFFCURVE",
"220.667 550 OFFCURVE",
"238 550 CURVE SMOOTH",
"243.333 550 OFFCURVE",
"246.667 550.333 OFFCURVE",
"248 551 CURVE",
"248 554 LINE SMOOTH",
"248 558 OFFCURVE",
"246.667 562.5 OFFCURVE",
"244 567.5 CURVE SMOOTH",
"241.333 572.5 OFFCURVE",
"240 576 OFFCURVE",
"240 578 CURVE SMOOTH",
"240 581.333 OFFCURVE",
"243.5 584.5 OFFCURVE",
"250.5 587.5 CURVE SMOOTH",
"257.5 590.5 OFFCURVE",
"266.667 593.667 OFFCURVE",
"278 597 CURVE SMOOTH",
"326.656 612.365 OFFCURVE",
"357 620.674 OFFCURVE",
"357 668 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 459 OFFCURVE",
"284 460.333 OFFCURVE",
"284 461 CURVE",
"220.667 517.667 OFFCURVE",
"185.667 546 OFFCURVE",
"179 546 CURVE SMOOTH",
"172.333 546 OFFCURVE",
"137.333 517.667 OFFCURVE",
"74 461 CURVE",
"74 459 OFFCURVE",
"74 457.667 OFFCURVE",
"74 457 CURVE SMOOTH",
"74 453 OFFCURVE",
"80 440 OFFCURVE",
"84 440 CURVE SMOOTH",
"94.667 440 OFFCURVE",
"112 451.333 OFFCURVE",
"136 474 CURVE",
"156.667 488 OFFCURVE",
"171 495.667 OFFCURVE",
"179 497 CURVE",
"183 494.333 OFFCURVE",
"190 491.333 OFFCURVE",
"200 488 CURVE SMOOTH",
"206.667 486 OFFCURVE",
"214 481.333 OFFCURVE",
"222 474 CURVE SMOOTH",
"246 451.333 OFFCURVE",
"263.333 440 OFFCURVE",
"274 440 CURVE SMOOTH",
"278 440 OFFCURVE",
"284 453 OFFCURVE",
"284 457 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 301 OFFCURVE",
"302.667 374.333 OFFCURVE",
"234 417 CURVE SMOOTH",
"210.667 431.667 OFFCURVE",
"192.667 439 OFFCURVE",
"180 439 CURVE SMOOTH",
"130.667 439 OFFCURVE",
"90 405.333 OFFCURVE",
"58 338 CURVE SMOOTH",
"32.667 283.333 OFFCURVE",
"20 227.667 OFFCURVE",
"20 171 CURVE SMOOTH",
"20 113.667 OFFCURVE",
"31 67.667 OFFCURVE",
"53 33 CURVE SMOOTH",
"79.667 -9 OFFCURVE",
"120 -30 OFFCURVE",
"174 -30 CURVE SMOOTH",
"227.333 -30 OFFCURVE",
"269 -4.333 OFFCURVE",
"299 47 CURVE SMOOTH",
"324.333 89.667 OFFCURVE",
"337 139.667 OFFCURVE",
"337 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"289 152.667 OFFCURVE",
"281 112.333 OFFCURVE",
"265 77 CURVE SMOOTH",
"244.333 31.667 OFFCURVE",
"214 9 OFFCURVE",
"174 9 CURVE SMOOTH",
"137.333 9 OFFCURVE",
"110.333 28.667 OFFCURVE",
"93 68 CURVE SMOOTH",
"81 96.667 OFFCURVE",
"75 132 OFFCURVE",
"75 174 CURVE SMOOTH",
"75 220.667 OFFCURVE",
"83.667 264.333 OFFCURVE",
"101 305 CURVE SMOOTH",
"123.667 357.667 OFFCURVE",
"155 384 OFFCURVE",
"195 384 CURVE SMOOTH",
"229.667 384 OFFCURVE",
"255.333 360.333 OFFCURVE",
"272 313 CURVE SMOOTH",
"283.333 279 OFFCURVE",
"289 240.667 OFFCURVE",
"289 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
94 933 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 86 106 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 86 121 86 137 86 153 86 169 86 185 86 201 86 217 86 233 86 249 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 86 25 86 41 86 57 86 73 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
70 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 94 22 94 38 94 54 94 70 94 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 94 101 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
98 928 74 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
82 931 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 357;
}
);
note = u1ED5;
unicode = 1ED5;
},
{
glyphname = u1ED6;
layers = (
{
components = (
{
name = Ocircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 135, 102}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 552;
}
);
note = u1ED6;
unicode = 1ED6;
},
{
glyphname = u1ED7;
layers = (
{
components = (
{
name = ocircumflex;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 24, -153}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = u1ED7;
unicode = 1ED7;
},
{
glyphname = u1ED8;
layers = (
{
components = (
{
name = Ocircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 552;
}
);
note = u1ED8;
unicode = 1ED8;
},
{
glyphname = u1ED9;
layers = (
{
components = (
{
name = ocircumflex;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
note = u1ED9;
unicode = 1ED9;
},
{
glyphname = u1EDA;
layers = (
{
components = (
{
name = u01A0;
},
{
name = acute;
transform = "{1, 0, 0, 1, 203, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 588;
}
);
note = u1EDA;
unicode = 1EDA;
},
{
glyphname = u1EDB;
layers = (
{
components = (
{
name = u01A1;
},
{
name = acute;
transform = "{1, 0, 0, 1, 110, -227}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 444;
}
);
note = u1EDB;
unicode = 1EDB;
},
{
glyphname = u1EDC;
layers = (
{
components = (
{
name = u01A0;
},
{
name = grave;
transform = "{1, 0, 0, 1, 184, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 588;
}
);
note = u1EDC;
unicode = 1EDC;
},
{
glyphname = u1EDD;
layers = (
{
components = (
{
name = u01A1;
},
{
name = grave;
transform = "{1, 0, 0, 1, 77, -230}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 444;
}
);
note = u1EDD;
unicode = 1EDD;
},
{
glyphname = u1EDE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"402 834.61 OFFCURVE",
"352.679 860 OFFCURVE",
"315 860 CURVE SMOOTH",
"288.019 860 OFFCURVE",
"205 834.815 OFFCURVE",
"205 797 CURVE SMOOTH",
"205 785 OFFCURVE",
"224.667 768 OFFCURVE",
"238 768 CURVE SMOOTH",
"248.667 768 OFFCURVE",
"263 778.667 OFFCURVE",
"263 788 CURVE SMOOTH",
"263 793.333 OFFCURVE",
"258 797.667 OFFCURVE",
"248 801 CURVE",
"262.667 817 OFFCURVE",
"296.333 819 OFFCURVE",
"315 819 CURVE SMOOTH",
"337.667 819 OFFCURVE",
"354 819.333 OFFCURVE",
"354 802 CURVE SMOOTH",
"354 760.939 OFFCURVE",
"246 756.802 OFFCURVE",
"246 718 CURVE SMOOTH",
"246 703.333 OFFCURVE",
"265.667 687 OFFCURVE",
"283 687 CURVE SMOOTH",
"288.333 687 OFFCURVE",
"291.667 687.333 OFFCURVE",
"293 688 CURVE",
"293 691 LINE SMOOTH",
"293 695 OFFCURVE",
"291.667 699.5 OFFCURVE",
"289 704.5 CURVE SMOOTH",
"286.333 709.5 OFFCURVE",
"285 713 OFFCURVE",
"285 715 CURVE SMOOTH",
"285 718.333 OFFCURVE",
"288.5 721.5 OFFCURVE",
"295.5 724.5 CURVE SMOOTH",
"302.5 727.5 OFFCURVE",
"311.667 730.667 OFFCURVE",
"323 734 CURVE SMOOTH",
"371.656 749.365 OFFCURVE",
"402 757.674 OFFCURVE",
"402 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"536 415 OFFCURVE",
"519 484.667 OFFCURVE",
"491 542 CURVE",
"487.667 550 OFFCURVE",
"486 555.333 OFFCURVE",
"486 558 CURVE SMOOTH",
"486 565.333 OFFCURVE",
"491 569 OFFCURVE",
"501 569 CURVE SMOOTH",
"543.179 569 OFFCURVE",
"578 607.044 OFFCURVE",
"578 650 CURVE SMOOTH",
"578 675.735 OFFCURVE",
"563.865 715 OFFCURVE",
"544 715 CURVE SMOOTH",
"534 715 OFFCURVE",
"529 710 OFFCURVE",
"529 700 CURVE SMOOTH",
"529 696.667 OFFCURVE",
"532.167 691.167 OFFCURVE",
"538.5 683.5 CURVE SMOOTH",
"544.833 675.833 OFFCURVE",
"548 668 OFFCURVE",
"548 660 CURVE SMOOTH",
"548 635.653 OFFCURVE",
"515.875 613 OFFCURVE",
"490 613 CURVE SMOOTH",
"468.151 613 OFFCURVE",
"419.78 638.3 OFFCURVE",
"402 651 CURVE",
"371.333 671 OFFCURVE",
"335.667 684 OFFCURVE",
"297 684 CURVE SMOOTH",
"201 684 OFFCURVE",
"133.167 626.667 OFFCURVE",
"88.5 548 CURVE SMOOTH",
"43.833 469.333 OFFCURVE",
"24 371 OFFCURVE",
"24 287 CURVE SMOOTH",
"24 191 OFFCURVE",
"44.667 111.667 OFFCURVE",
"86 57 CURVE SMOOTH",
"127.333 2.333 OFFCURVE",
"188 -28 OFFCURVE",
"268 -28 CURVE SMOOTH",
"348 -28 OFFCURVE",
"415.167 12.5 OFFCURVE",
"462.5 78.5 CURVE SMOOTH",
"509.833 144.5 OFFCURVE",
"536 236.333 OFFCURVE",
"536 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 252 OFFCURVE",
"460.167 170.333 OFFCURVE",
"423.5 113 CURVE SMOOTH",
"386.833 55.667 OFFCURVE",
"332.667 22 OFFCURVE",
"266 22 CURVE SMOOTH",
"137.836 22 OFFCURVE",
"73 126.445 OFFCURVE",
"73 258 CURVE SMOOTH",
"73 339.333 OFFCURVE",
"88.667 432.167 OFFCURVE",
"126 503.5 CURVE SMOOTH",
"163.333 574.833 OFFCURVE",
"221.333 626 OFFCURVE",
"304 626 CURVE SMOOTH",
"423.582 626 OFFCURVE",
"480 488.021 OFFCURVE",
"480 348 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
106 932 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 934 96 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
84 932 74 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 74 106 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 74 121 74 137 74 153 74 169 74 185 74 201 74 217 74 233 74 249 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 74 25 74 41 74 57 74 73 74 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 96 106 96 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 96 25 96 41 96 57 96 73 96 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 106 118 106 134 106 150 106 166 106 182 106 198 106 214 106 230 106 246 106 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 106 22 106 38 106 54 106 70 106 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 106 101 106 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
117 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
111 931 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 931 101 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 930 89 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
101 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 588;
}
);
note = u1EDE;
unicode = 1EDE;
},
{
glyphname = u1EDF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"285 594.61 OFFCURVE",
"235.679 620 OFFCURVE",
"198 620 CURVE SMOOTH",
"171.019 620 OFFCURVE",
"88 594.815 OFFCURVE",
"88 557 CURVE SMOOTH",
"88 545 OFFCURVE",
"107.667 528 OFFCURVE",
"121 528 CURVE SMOOTH",
"131.667 528 OFFCURVE",
"146 538.667 OFFCURVE",
"146 548 CURVE SMOOTH",
"146 553.333 OFFCURVE",
"141 557.667 OFFCURVE",
"131 561 CURVE",
"145.667 577 OFFCURVE",
"179.333 579 OFFCURVE",
"198 579 CURVE SMOOTH",
"220.667 579 OFFCURVE",
"237 579.333 OFFCURVE",
"237 562 CURVE SMOOTH",
"237 520.939 OFFCURVE",
"129 516.802 OFFCURVE",
"129 478 CURVE SMOOTH",
"129 463.333 OFFCURVE",
"148.667 447 OFFCURVE",
"166 447 CURVE SMOOTH",
"171.333 447 OFFCURVE",
"174.667 447.333 OFFCURVE",
"176 448 CURVE",
"176 451 LINE SMOOTH",
"176 455 OFFCURVE",
"174.667 459.5 OFFCURVE",
"172 464.5 CURVE SMOOTH",
"169.333 469.5 OFFCURVE",
"168 473 OFFCURVE",
"168 475 CURVE SMOOTH",
"168 478.333 OFFCURVE",
"171.5 481.5 OFFCURVE",
"178.5 484.5 CURVE SMOOTH",
"185.5 487.5 OFFCURVE",
"194.667 490.667 OFFCURVE",
"206 494 CURVE SMOOTH",
"254.656 509.365 OFFCURVE",
"285 517.674 OFFCURVE",
"285 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397 464 OFFCURVE",
"392 459 OFFCURVE",
"392 449 CURVE SMOOTH",
"392 445.667 OFFCURVE",
"395.167 440.167 OFFCURVE",
"401.5 432.5 CURVE SMOOTH",
"407.833 424.833 OFFCURVE",
"411 417 OFFCURVE",
"411 409 CURVE SMOOTH",
"411 384.653 OFFCURVE",
"378.875 362 OFFCURVE",
"353 362 CURVE SMOOTH",
"310.902 362 OFFCURVE",
"217.682 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"92.633 439 OFFCURVE",
"25 291.737 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 43 OFFCURVE",
"79 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"278.359 -30 OFFCURVE",
"342 76.992 OFFCURVE",
"342 197 CURVE SMOOTH",
"342 233.667 OFFCURVE",
"337.333 268 OFFCURVE",
"328 300 CURVE",
"326 304.667 OFFCURVE",
"325 309 OFFCURVE",
"325 313 CURVE SMOOTH",
"325 317 OFFCURVE",
"328 319 OFFCURVE",
"334 319 CURVE SMOOTH",
"337.333 319 OFFCURVE",
"341.167 318.833 OFFCURVE",
"345.5 318.5 CURVE SMOOTH",
"349.833 318.167 OFFCURVE",
"354 318 OFFCURVE",
"358 318 CURVE SMOOTH",
"403.333 318 OFFCURVE",
"441 353.667 OFFCURVE",
"441 399 CURVE SMOOTH",
"441 424.735 OFFCURVE",
"426.865 464 OFFCURVE",
"407 464 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 100.076 OFFCURVE",
"252.85 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"115 9 OFFCURVE",
"80 74 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 278.349 OFFCURVE",
"126.579 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"262.791 384 OFFCURVE",
"294 295.395 OFFCURVE",
"294 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
101 933 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 932 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
63 932 91 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 0 22 0 38 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 0 69 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 86 106 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 86 121 86 137 86 153 86 169 86 185 86 201 86 217 86 233 86 249 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 86 25 86 41 86 57 86 73 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 91 106 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 91 25 91 41 91 57 91 73 91 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 101 22 101 38 101 54 101 70 101 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 101 101 101 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
104 928 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 931 96 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
46 54 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 444;
}
);
note = u1EDF;
unicode = 1EDF;
},
{
glyphname = u1EE0;
layers = (
{
components = (
{
name = u01A0;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 132, 8}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 588;
}
);
note = u1EE0;
unicode = 1EE0;
},
{
glyphname = u1EE1;
layers = (
{
components = (
{
name = u01A1;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 38, -244}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 444;
}
);
note = u1EE1;
unicode = 1EE1;
},
{
glyphname = u1EE2;
layers = (
{
components = (
{
name = u01A0;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 588;
}
);
note = u1EE2;
unicode = 1EE2;
},
{
glyphname = u1EE3;
layers = (
{
components = (
{
name = u01A1;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 444;
}
);
note = u1EE3;
unicode = 1EE3;
},
{
glyphname = u1EE4;
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = u1EE4;
unicode = 1EE4;
},
{
glyphname = u1EE5;
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = u1EE5;
unicode = 1EE5;
},
{
glyphname = u1EE6;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"350 834.61 OFFCURVE",
"300.679 860 OFFCURVE",
"263 860 CURVE SMOOTH",
"236.019 860 OFFCURVE",
"153 834.815 OFFCURVE",
"153 797 CURVE SMOOTH",
"153 785 OFFCURVE",
"172.667 768 OFFCURVE",
"186 768 CURVE SMOOTH",
"196.667 768 OFFCURVE",
"211 778.667 OFFCURVE",
"211 788 CURVE SMOOTH",
"211 793.333 OFFCURVE",
"206 797.667 OFFCURVE",
"196 801 CURVE",
"210.667 817 OFFCURVE",
"244.333 819 OFFCURVE",
"263 819 CURVE SMOOTH",
"285.667 819 OFFCURVE",
"302 819.333 OFFCURVE",
"302 802 CURVE SMOOTH",
"302 760.939 OFFCURVE",
"194 756.802 OFFCURVE",
"194 718 CURVE SMOOTH",
"194 703.333 OFFCURVE",
"213.667 687 OFFCURVE",
"231 687 CURVE SMOOTH",
"236.333 687 OFFCURVE",
"239.667 687.333 OFFCURVE",
"241 688 CURVE",
"241 691 LINE SMOOTH",
"241 695 OFFCURVE",
"239.667 699.5 OFFCURVE",
"237 704.5 CURVE SMOOTH",
"234.333 709.5 OFFCURVE",
"233 713 OFFCURVE",
"233 715 CURVE SMOOTH",
"233 718.333 OFFCURVE",
"236.5 721.5 OFFCURVE",
"243.5 724.5 CURVE SMOOTH",
"250.5 727.5 OFFCURVE",
"259.667 730.667 OFFCURVE",
"271 734 CURVE SMOOTH",
"319.656 749.365 OFFCURVE",
"350 757.674 OFFCURVE",
"350 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 661 LINE SMOOTH",
"420 674.333 OFFCURVE",
"392.667 690 OFFCURVE",
"378 690 CURVE SMOOTH",
"364.667 690 OFFCURVE",
"353 668.333 OFFCURVE",
"353 655 CURVE SMOOTH",
"353 653.667 OFFCURVE",
"355.667 647.5 OFFCURVE",
"361 636.5 CURVE SMOOTH",
"366.333 625.5 OFFCURVE",
"369.667 612.333 OFFCURVE",
"371 597 CURVE SMOOTH",
"372.333 585 OFFCURVE",
"372.667 570.333 OFFCURVE",
"372 553 CURVE SMOOTH",
"371.333 525 OFFCURVE",
"371 511 OFFCURVE",
"371 511 CURVE",
"371 387.667 OFFCURVE",
"365 292.667 OFFCURVE",
"353 226 CURVE SMOOTH",
"328.333 92 OFFCURVE",
"281 25 OFFCURVE",
"211 25 CURVE SMOOTH",
"169.667 25 OFFCURVE",
"138 47 OFFCURVE",
"116 91 CURVE SMOOTH",
"98.667 125.667 OFFCURVE",
"90 166 OFFCURVE",
"90 212 CURVE SMOOTH",
"90 342 LINE SMOOTH",
"90 370.667 OFFCURVE",
"96.333 446.667 OFFCURVE",
"109 570 CURVE",
"114.333 600 OFFCURVE",
"119.333 624.333 OFFCURVE",
"124 643 CURVE",
"125.333 656.333 OFFCURVE",
"121.667 664 OFFCURVE",
"113 666 CURVE",
"115 665.333 OFFCURVE",
"103.667 665 OFFCURVE",
"79 665 CURVE SMOOTH",
"64.333 665 OFFCURVE",
"35 646.333 OFFCURVE",
"35 633 CURVE SMOOTH",
"35 627.667 OFFCURVE",
"37 619.5 OFFCURVE",
"41 608.5 CURVE SMOOTH",
"45 597.5 OFFCURVE",
"47 589 OFFCURVE",
"47 583 CURVE SMOOTH",
"47 551 OFFCURVE",
"45 502.5 OFFCURVE",
"41 437.5 CURVE SMOOTH",
"37 372.5 OFFCURVE",
"35 323.667 OFFCURVE",
"35 291 CURVE SMOOTH",
"35 214.333 OFFCURVE",
"37 164.333 OFFCURVE",
"41 141 CURVE SMOOTH",
"49.667 85 OFFCURVE",
"71.333 42.333 OFFCURVE",
"106 13 CURVE SMOOTH",
"134 -11 OFFCURVE",
"174 -23 OFFCURVE",
"226 -23 CURVE SMOOTH",
"269.333 -23 OFFCURVE",
"307.333 -5.667 OFFCURVE",
"340 29 CURVE SMOOTH",
"365.333 56.333 OFFCURVE",
"385.667 110.333 OFFCURVE",
"401 191 CURVE SMOOTH",
"413.667 255.667 OFFCURVE",
"420 315 OFFCURVE",
"420 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 932 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 932 84 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 80 119 80 135 80 151 80 167 80 183 80 199 80 215 80 231 80 247 80 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 80 23 80 39 80 55 80 71 80 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 80 102 80 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 455;
}
);
note = u1EE6;
unicode = 1EE6;
},
{
glyphname = u1EE7;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"276 594.61 OFFCURVE",
"226.679 620 OFFCURVE",
"189 620 CURVE SMOOTH",
"162.019 620 OFFCURVE",
"79 594.815 OFFCURVE",
"79 557 CURVE SMOOTH",
"79 545 OFFCURVE",
"98.667 528 OFFCURVE",
"112 528 CURVE SMOOTH",
"122.667 528 OFFCURVE",
"137 538.667 OFFCURVE",
"137 548 CURVE SMOOTH",
"137 553.333 OFFCURVE",
"132 557.667 OFFCURVE",
"122 561 CURVE",
"136.667 577 OFFCURVE",
"170.333 579 OFFCURVE",
"189 579 CURVE SMOOTH",
"211.667 579 OFFCURVE",
"228 579.333 OFFCURVE",
"228 562 CURVE SMOOTH",
"228 520.939 OFFCURVE",
"120 516.802 OFFCURVE",
"120 478 CURVE SMOOTH",
"120 463.333 OFFCURVE",
"139.667 447 OFFCURVE",
"157 447 CURVE SMOOTH",
"162.333 447 OFFCURVE",
"165.667 447.333 OFFCURVE",
"167 448 CURVE",
"167 451 LINE SMOOTH",
"167 455 OFFCURVE",
"165.667 459.5 OFFCURVE",
"163 464.5 CURVE SMOOTH",
"160.333 469.5 OFFCURVE",
"159 473 OFFCURVE",
"159 475 CURVE SMOOTH",
"159 478.333 OFFCURVE",
"162.5 481.5 OFFCURVE",
"169.5 484.5 CURVE SMOOTH",
"176.5 487.5 OFFCURVE",
"185.667 490.667 OFFCURVE",
"197 494 CURVE SMOOTH",
"245.656 509.365 OFFCURVE",
"276 517.674 OFFCURVE",
"276 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"311 400 OFFCURVE",
"296 411.667 OFFCURVE",
"266 409 CURVE SMOOTH",
"256.667 408.333 OFFCURVE",
"247.333 403.667 OFFCURVE",
"238 395 CURVE",
"237.333 391 OFFCURVE",
"237 387.333 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"238.833 370.167 OFFCURVE",
"242.5 360.5 CURVE SMOOTH",
"246.167 350.833 OFFCURVE",
"248 343.333 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 166.333 OFFCURVE",
"241.333 129 OFFCURVE",
"228 95 CURVE SMOOTH",
"209.333 49.667 OFFCURVE",
"183 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"128.333 27 OFFCURVE",
"111.333 41.333 OFFCURVE",
"98 70 CURVE SMOOTH",
"86.667 94 OFFCURVE",
"81.333 118 OFFCURVE",
"82 142 CURVE SMOOTH",
"82 160 OFFCURVE",
"83 201.667 OFFCURVE",
"85 267 CURVE SMOOTH",
"87 318.333 OFFCURVE",
"88 360 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413.333 OFFCURVE",
"78.667 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"33.333 424 OFFCURVE",
"22 414 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 114.333 OFFCURVE",
"30.667 72 OFFCURVE",
"40 50 CURVE SMOOTH",
"46.667 34 OFFCURVE",
"60.333 18 OFFCURVE",
"81 2 CURVE SMOOTH",
"103.667 -16 OFFCURVE",
"123.667 -23.667 OFFCURVE",
"141 -21 CURVE SMOOTH",
"187.667 -13.667 OFFCURVE",
"220.667 4.333 OFFCURVE",
"240 33 CURVE",
"242.667 21 OFFCURVE",
"245.333 8.667 OFFCURVE",
"248 -4 CURVE",
"253.333 -16.667 OFFCURVE",
"263.333 -23 OFFCURVE",
"278 -23 CURVE SMOOTH",
"285.333 -23 OFFCURVE",
"291 -21.667 OFFCURVE",
"295 -19 CURVE",
"301.667 -13 OFFCURVE",
"305 4.667 OFFCURVE",
"305 34 CURVE SMOOTH",
"305 48.667 OFFCURVE",
"303.833 72.833 OFFCURVE",
"301.5 106.5 CURVE SMOOTH",
"299.167 140.167 OFFCURVE",
"298 163 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 205 OFFCURVE",
"300.167 240.5 OFFCURVE",
"304.5 281.5 CURVE SMOOTH",
"308.833 322.5 OFFCURVE",
"311 353.333 OFFCURVE",
"311 374 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
52 934 58 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 77 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 58 25 58 41 58 57 58 73 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
60 77 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
62 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 331;
}
);
note = u1EE7;
unicode = 1EE7;
},
{
glyphname = u1EE8;
layers = (
{
components = (
{
name = u01AF;
},
{
name = acute;
transform = "{1, 0, 0, 1, 173, 15}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 583;
}
);
note = u1EE8;
unicode = 1EE8;
},
{
glyphname = u1EE9;
layers = (
{
components = (
{
name = u01B0;
},
{
name = acute;
transform = "{1, 0, 0, 1, 120, -227}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 470;
}
);
note = u1EE9;
unicode = 1EE9;
},
{
glyphname = u1EEA;
layers = (
{
components = (
{
name = u01AF;
},
{
name = grave;
transform = "{1, 0, 0, 1, 124, 21}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 583;
}
);
note = u1EEA;
unicode = 1EEA;
},
{
glyphname = u1EEB;
layers = (
{
components = (
{
name = u01B0;
},
{
name = grave;
transform = "{1, 0, 0, 1, 57, -230}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 470;
}
);
note = u1EEB;
unicode = 1EEB;
},
{
glyphname = u1EEC;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"363 834.61 OFFCURVE",
"313.679 860 OFFCURVE",
"276 860 CURVE SMOOTH",
"249.019 860 OFFCURVE",
"166 834.815 OFFCURVE",
"166 797 CURVE SMOOTH",
"166 785 OFFCURVE",
"185.667 768 OFFCURVE",
"199 768 CURVE SMOOTH",
"209.667 768 OFFCURVE",
"224 778.667 OFFCURVE",
"224 788 CURVE SMOOTH",
"224 793.333 OFFCURVE",
"219 797.667 OFFCURVE",
"209 801 CURVE",
"223.667 817 OFFCURVE",
"257.333 819 OFFCURVE",
"276 819 CURVE SMOOTH",
"298.667 819 OFFCURVE",
"315 819.333 OFFCURVE",
"315 802 CURVE SMOOTH",
"315 760.939 OFFCURVE",
"207 756.802 OFFCURVE",
"207 718 CURVE SMOOTH",
"207 703.333 OFFCURVE",
"226.667 687 OFFCURVE",
"244 687 CURVE SMOOTH",
"249.333 687 OFFCURVE",
"252.667 687.333 OFFCURVE",
"254 688 CURVE",
"254 691 LINE SMOOTH",
"254 695 OFFCURVE",
"252.667 699.5 OFFCURVE",
"250 704.5 CURVE SMOOTH",
"247.333 709.5 OFFCURVE",
"246 713 OFFCURVE",
"246 715 CURVE SMOOTH",
"246 718.333 OFFCURVE",
"249.5 721.5 OFFCURVE",
"256.5 724.5 CURVE SMOOTH",
"263.5 727.5 OFFCURVE",
"272.667 730.667 OFFCURVE",
"284 734 CURVE SMOOTH",
"332.656 749.365 OFFCURVE",
"363 757.674 OFFCURVE",
"363 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"420 565 LINE SMOOTH",
"420 577 OFFCURVE",
"429 583 OFFCURVE",
"437 583 CURVE SMOOTH",
"446.333 583 OFFCURVE",
"455.5 580.667 OFFCURVE",
"464.5 576 CURVE SMOOTH",
"473.5 571.333 OFFCURVE",
"483.667 569 OFFCURVE",
"495 569 CURVE SMOOTH",
"540.333 569 OFFCURVE",
"578 604.667 OFFCURVE",
"578 650 CURVE SMOOTH",
"578 675.735 OFFCURVE",
"563.865 715 OFFCURVE",
"544 715 CURVE SMOOTH",
"534 715 OFFCURVE",
"529 710 OFFCURVE",
"529 700 CURVE SMOOTH",
"529 696.667 OFFCURVE",
"532.167 691.167 OFFCURVE",
"538.5 683.5 CURVE SMOOTH",
"544.833 675.833 OFFCURVE",
"548 668 OFFCURVE",
"548 660 CURVE SMOOTH",
"548 635.653 OFFCURVE",
"515.875 613 OFFCURVE",
"490 613 CURVE SMOOTH",
"465.785 613 OFFCURVE",
"429.599 620.206 OFFCURVE",
"420 661 CURVE",
"414.667 679.667 OFFCURVE",
"392.667 690 OFFCURVE",
"378 690 CURVE SMOOTH",
"364.667 690 OFFCURVE",
"353 668.333 OFFCURVE",
"353 655 CURVE SMOOTH",
"353 647.849 OFFCURVE",
"372 595.63 OFFCURVE",
"372 567 CURVE SMOOTH",
"372 376.333 OFFCURVE",
"360.333 241 OFFCURVE",
"335 153 CURVE SMOOTH",
"309.667 65 OFFCURVE",
"268.333 25 OFFCURVE",
"211 25 CURVE SMOOTH",
"134.348 25 OFFCURVE",
"90 113.181 OFFCURVE",
"90 212 CURVE SMOOTH",
"90 342 LINE SMOOTH",
"90 356.667 OFFCURVE",
"91.5 382.667 OFFCURVE",
"94.5 420 CURVE SMOOTH",
"97.5 457.333 OFFCURVE",
"102.333 507.333 OFFCURVE",
"109 570 CURVE",
"111.667 585.333 OFFCURVE",
"114.833 599.667 OFFCURVE",
"118.5 613 CURVE SMOOTH",
"122.167 626.333 OFFCURVE",
"124 637.667 OFFCURVE",
"124 647 CURVE SMOOTH",
"124 657.667 OFFCURVE",
"120.333 664 OFFCURVE",
"113 666 CURVE",
"113 665.333 OFFCURVE",
"101.667 665 OFFCURVE",
"79 665 CURVE SMOOTH",
"64.9 665 OFFCURVE",
"35 647.443 OFFCURVE",
"35 633 CURVE SMOOTH",
"35 627.667 OFFCURVE",
"37 619.5 OFFCURVE",
"41 608.5 CURVE SMOOTH",
"45 597.5 OFFCURVE",
"47 589 OFFCURVE",
"47 583 CURVE SMOOTH",
"47 544.166 OFFCURVE",
"35 329.834 OFFCURVE",
"35 291 CURVE SMOOTH",
"35 213.667 OFFCURVE",
"37 163.667 OFFCURVE",
"41 141 CURVE SMOOTH",
"57 39.667 OFFCURVE",
"111.333 -23 OFFCURVE",
"226 -23 CURVE SMOOTH",
"269.333 -23 OFFCURVE",
"307.333 -5.667 OFFCURVE",
"340 29 CURVE SMOOTH",
"364.667 55.667 OFFCURVE",
"385 109.667 OFFCURVE",
"401 191 CURVE SMOOTH",
"413 256.333 OFFCURVE",
"420 313 OFFCURVE",
"420 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 933 58 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
132 932 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
123 932 113 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 0 22 0 38 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 0 69 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
63 58 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
75 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 113 106 113 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 113 121 113 137 113 153 113 169 113 185 113 201 113 217 113 233 113 249 113 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 113 25 113 41 113 57 113 73 113 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
123 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
134 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
108 929 129 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
118 126 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
87 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 87 119 87 135 87 151 87 167 87 183 87 199 87 215 87 231 87 247 87 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 87 23 87 39 87 55 87 71 87 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 87 102 87 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 583;
}
);
note = u1EEC;
unicode = 1EEC;
},
{
glyphname = u1EED;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"286 594.61 OFFCURVE",
"236.679 620 OFFCURVE",
"199 620 CURVE SMOOTH",
"172.019 620 OFFCURVE",
"89 594.815 OFFCURVE",
"89 557 CURVE SMOOTH",
"89 545 OFFCURVE",
"108.667 528 OFFCURVE",
"122 528 CURVE SMOOTH",
"132.667 528 OFFCURVE",
"147 538.667 OFFCURVE",
"147 548 CURVE SMOOTH",
"147 553.333 OFFCURVE",
"142 557.667 OFFCURVE",
"132 561 CURVE",
"146.667 577 OFFCURVE",
"180.333 579 OFFCURVE",
"199 579 CURVE SMOOTH",
"221.667 579 OFFCURVE",
"238 579.333 OFFCURVE",
"238 562 CURVE SMOOTH",
"238 520.939 OFFCURVE",
"130 516.802 OFFCURVE",
"130 478 CURVE SMOOTH",
"130 463.333 OFFCURVE",
"149.667 447 OFFCURVE",
"167 447 CURVE SMOOTH",
"172.333 447 OFFCURVE",
"175.667 447.333 OFFCURVE",
"177 448 CURVE",
"177 451 LINE SMOOTH",
"177 455 OFFCURVE",
"175.667 459.5 OFFCURVE",
"173 464.5 CURVE SMOOTH",
"170.333 469.5 OFFCURVE",
"169 473 OFFCURVE",
"169 475 CURVE SMOOTH",
"169 478.333 OFFCURVE",
"172.5 481.5 OFFCURVE",
"179.5 484.5 CURVE SMOOTH",
"186.5 487.5 OFFCURVE",
"195.667 490.667 OFFCURVE",
"207 494 CURVE SMOOTH",
"255.656 509.365 OFFCURVE",
"286 517.674 OFFCURVE",
"286 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"426 464 OFFCURVE",
"421 459 OFFCURVE",
"421 449 CURVE SMOOTH",
"421 445.667 OFFCURVE",
"424.167 440.167 OFFCURVE",
"430.5 432.5 CURVE SMOOTH",
"436.833 424.833 OFFCURVE",
"440 417 OFFCURVE",
"440 409 CURVE SMOOTH",
"440 384.653 OFFCURVE",
"407.875 362 OFFCURVE",
"382 362 CURVE SMOOTH",
"364.667 362 OFFCURVE",
"332.667 373.333 OFFCURVE",
"314 392 CURVE",
"306 401.333 OFFCURVE",
"290.333 409 OFFCURVE",
"273 409 CURVE SMOOTH",
"260.194 409 OFFCURVE",
"237 405.736 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"238.833 370.167 OFFCURVE",
"242.5 360.5 CURVE SMOOTH",
"246.167 350.833 OFFCURVE",
"248 343.333 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 115.141 OFFCURVE",
"210.23 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"109.219 27 OFFCURVE",
"82 91.335 OFFCURVE",
"82 142 CURVE SMOOTH",
"82 177.046 OFFCURVE",
"88 342.416 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413.333 OFFCURVE",
"78.667 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"36.667 424 OFFCURVE",
"25 416.333 OFFCURVE",
"25 401 CURVE SMOOTH",
"25 397.667 OFFCURVE",
"25.333 395.333 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 116.333 OFFCURVE",
"30.667 74 OFFCURVE",
"40 50 CURVE SMOOTH",
"50.787 20.336 OFFCURVE",
"103.659 -22 OFFCURVE",
"134 -22 CURVE SMOOTH",
"182 -22 OFFCURVE",
"221.333 6.333 OFFCURVE",
"240 33 CURVE",
"248 -4 LINE",
"252.667 -16.667 OFFCURVE",
"262.667 -23 OFFCURVE",
"278 -23 CURVE SMOOTH",
"289.333 -23 OFFCURVE",
"296.667 -19.333 OFFCURVE",
"300 -12 CURVE SMOOTH",
"303.333 -4.667 OFFCURVE",
"305 10.667 OFFCURVE",
"305 34 CURVE SMOOTH",
"305 59.773 OFFCURVE",
"298 153.471 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 207.911 OFFCURVE",
"303.697 282.27 OFFCURVE",
"308 321 CURVE",
"308.667 331 OFFCURVE",
"312.667 336 OFFCURVE",
"320 336 CURVE SMOOTH",
"322.667 336 OFFCURVE",
"326.667 335 OFFCURVE",
"332 333 CURVE",
"350.667 323 OFFCURVE",
"369 318 OFFCURVE",
"387 318 CURVE SMOOTH",
"432.333 318 OFFCURVE",
"470 353.667 OFFCURVE",
"470 399 CURVE SMOOTH",
"470 424.735 OFFCURVE",
"455.865 464 OFFCURVE",
"436 464 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
98 934 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 932 128 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 0 22 0 38 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 0 69 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
112 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
75 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
70 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
112 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
93 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 128 106 128 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 128 121 128 137 128 153 128 169 128 185 128 201 128 217 128 233 128 249 128 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 128 25 128 41 128 57 128 73 128 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
134 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
46 54 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 103 119 103 135 103 151 103 167 103 183 103 199 103 215 103 231 103 247 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 103 23 103 39 103 55 103 71 103 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 103 102 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
123 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 470;
}
);
note = u1EED;
unicode = 1EED;
},
{
glyphname = u1EEE;
layers = (
{
components = (
{
name = u01AF;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 85, 8}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 583;
}
);
note = u1EEE;
unicode = 1EEE;
},
{
glyphname = u1EEF;
layers = (
{
components = (
{
name = u01B0;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 28, -244}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 470;
}
);
note = u1EEF;
unicode = 1EEF;
},
{
glyphname = u1EF0;
layers = (
{
components = (
{
name = u01AF;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 350, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 583;
}
);
note = u1EF0;
unicode = 1EF0;
},
{
glyphname = u1EF1;
layers = (
{
components = (
{
name = u01B0;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 470;
}
);
note = u1EF1;
unicode = 1EF1;
},
{
glyphname = u20AB;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"369 571.333 OFFCURVE",
"340 581 OFFCURVE",
"316 581 CURVE SMOOTH",
"305 581 LINE",
"305 589.667 OFFCURVE",
"306 598.333 OFFCURVE",
"308 607 CURVE SMOOTH",
"310 615.667 OFFCURVE",
"311 625.333 OFFCURVE",
"311 636 CURVE SMOOTH",
"311 658.667 OFFCURVE",
"292.667 679 OFFCURVE",
"270 679 CURVE SMOOTH",
"262.667 679 OFFCURVE",
"256.333 676.333 OFFCURVE",
"251 671 CURVE",
"251 654.333 OFFCURVE",
"251 638.333 OFFCURVE",
"251 623 CURVE SMOOTH",
"251 607.667 OFFCURVE",
"250.667 593.333 OFFCURVE",
"250 580 CURVE",
"238.408 580 OFFCURVE",
"76 578.2 OFFCURVE",
"76 560 CURVE SMOOTH",
"76 542.414 OFFCURVE",
"81.03 515 OFFCURVE",
"101 515 CURVE SMOOTH",
"140.635 515 OFFCURVE",
"181.033 535 OFFCURVE",
"249 535 CURVE",
"247.667 487 OFFCURVE",
"245.667 451.667 OFFCURVE",
"243 429 CURVE",
"221.667 451.667 OFFCURVE",
"191 477 OFFCURVE",
"159 477 CURVE SMOOTH",
"90.229 477 OFFCURVE",
"42 331.209 OFFCURVE",
"42 232 CURVE SMOOTH",
"42 144 OFFCURVE",
"83.667 96 OFFCURVE",
"153 96 CURVE SMOOTH",
"184.333 96 OFFCURVE",
"215 115.333 OFFCURVE",
"245 154 CURVE",
"249 109 LINE",
"251.667 98.333 OFFCURVE",
"272 82 OFFCURVE",
"284 82 CURVE SMOOTH",
"290.667 82 OFFCURVE",
"296.333 86.333 OFFCURVE",
"301 95 CURVE",
"291 117.667 OFFCURVE",
"286 159.333 OFFCURVE",
"286 220 CURVE",
"292 367 LINE SMOOTH",
"293.561 410.718 OFFCURVE",
"298 512.939 OFFCURVE",
"298 533 CURVE",
"312.667 531 OFFCURVE",
"323.5 528.5 OFFCURVE",
"330.5 525.5 CURVE SMOOTH",
"337.5 522.5 OFFCURVE",
"345 521 OFFCURVE",
"353 521 CURVE SMOOTH",
"367.667 521 OFFCURVE",
"369 526 OFFCURVE",
"369 546 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"243 233.522 OFFCURVE",
"207.867 129 OFFCURVE",
"148 129 CURVE SMOOTH",
"113.333 129 OFFCURVE",
"92 169 OFFCURVE",
"92 225 CURVE SMOOTH",
"92 300.725 OFFCURVE",
"127.278 427 OFFCURVE",
"175 427 CURVE SMOOTH",
"215 427 OFFCURVE",
"243 382.333 OFFCURVE",
"243 329 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 41 OFFCURVE",
"307 54 OFFCURVE",
"283 54 CURVE SMOOTH",
"258.558 54 OFFCURVE",
"179.601 52.453 OFFCURVE",
"142.5 50.5 CURVE SMOOTH",
"111.331 48.86 OFFCURVE",
"37 45.14 OFFCURVE",
"37 34 CURVE SMOOTH",
"37 17.166 OFFCURVE",
"42.124 -16 OFFCURVE",
"62 -16 CURVE SMOOTH",
"72.667 -16 OFFCURVE",
"79.667 -12.333 OFFCURVE",
"89 -7 CURVE",
"110.333 3.667 OFFCURVE",
"134 8 OFFCURVE",
"178 8 CURVE SMOOTH",
"248.776 8 OFFCURVE",
"282.359 -9 OFFCURVE",
"320 -9 CURVE SMOOTH",
"334.667 -9 OFFCURVE",
"337 -4.333 OFFCURVE",
"337 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 932 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 932 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
58 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 73 118 73 134 73 150 73 166 73 182 73 198 73 214 73 230 73 246 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 73 22 73 38 73 54 73 70 73 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 73 101 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
95 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
84 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
92 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
76 929 22 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 930 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 40 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 931 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
33 68 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
107 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 107 119 107 135 107 151 107 167 107 183 107 199 107 215 107 231 107 247 107 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 107 23 107 39 107 55 107 71 107 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 107 102 107 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
89 930 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 390;
}
);
note = u20AB;
unicode = 20AB;
},
{
glyphname = u01CD;
layers = (
{
components = (
{
name = A;
},
{
name = caron;
transform = "{1, 0, 0, 1, 156, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 508;
}
);
note = u01CD;
unicode = 01CD;
},
{
glyphname = u01CE;
layers = (
{
components = (
{
name = a;
},
{
name = caron;
transform = "{1, 0, 0, 1, 57, -236}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 361;
}
);
note = u01CE;
unicode = 01CE;
},
{
glyphname = u01CF;
layers = (
{
components = (
{
name = I;
},
{
name = caron;
transform = "{1, 0, 0, 1, -61, 8}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 172;
}
);
note = u01CF;
unicode = 01CF;
},
{
glyphname = u01D0;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = dotlessi;
transform = "{1, 0, 0, 1, 36, 0}";
},
{
alignment = -1;
name = caron;
transform = "{1, 0, 0, 1, -54, -246}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 174;
}
);
note = u01D0;
unicode = 01D0;
},
{
glyphname = u01D1;
layers = (
{
components = (
{
name = O;
},
{
name = caron;
transform = "{1, 0, 0, 1, 136, 22}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = u01D1;
unicode = 01D1;
},
{
glyphname = u01D2;
layers = (
{
components = (
{
name = o;
},
{
name = caron;
transform = "{1, 0, 0, 1, 39, -222}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
note = u01D2;
unicode = 01D2;
},
{
glyphname = u01D3;
layers = (
{
components = (
{
name = U;
},
{
name = caron;
transform = "{1, 0, 0, 1, 83, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 455;
}
);
note = u01D3;
unicode = 01D3;
},
{
glyphname = u01D4;
layers = (
{
components = (
{
name = u;
},
{
name = caron;
transform = "{1, 0, 0, 1, 21, -237}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
note = u01D4;
unicode = 01D4;
},
{
glyphname = u0174;
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 442, 35}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 599;
}
);
note = u0174;
unicode = 0174;
},
{
glyphname = u0175;
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 399, -231}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
note = u0175;
unicode = 0175;
},
{
glyphname = u0176;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 381, 35}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = u0176;
unicode = 0176;
},
{
glyphname = u0177;
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcmb;
transform = "{1, 0, 0, 1, 339, -231}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = u0177;
unicode = 0177;
},
{
glyphname = u1EF2;
layers = (
{
components = (
{
name = Y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 145, 39}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = u1EF2;
unicode = 1EF2;
},
{
glyphname = u1EF3;
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 80, -214}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = u1EF3;
unicode = 1EF3;
},
{
glyphname = u1EF8;
layers = (
{
components = (
{
name = Y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 86, 14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = u1EF8;
unicode = 1EF8;
},
{
glyphname = u1EF9;
layers = (
{
components = (
{
name = y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 21, -239}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 369;
}
);
note = u1EF9;
unicode = 1EF9;
},
{
glyphname = u1EF6;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"352 834.61 OFFCURVE",
"302.679 860 OFFCURVE",
"265 860 CURVE SMOOTH",
"238.019 860 OFFCURVE",
"155 834.815 OFFCURVE",
"155 797 CURVE SMOOTH",
"155 785 OFFCURVE",
"174.667 768 OFFCURVE",
"188 768 CURVE SMOOTH",
"198.667 768 OFFCURVE",
"213 778.667 OFFCURVE",
"213 788 CURVE SMOOTH",
"213 793.333 OFFCURVE",
"208 797.667 OFFCURVE",
"198 801 CURVE",
"212.667 817 OFFCURVE",
"246.333 819 OFFCURVE",
"265 819 CURVE SMOOTH",
"287.667 819 OFFCURVE",
"304 819.333 OFFCURVE",
"304 802 CURVE SMOOTH",
"304 760.939 OFFCURVE",
"196 756.802 OFFCURVE",
"196 718 CURVE SMOOTH",
"196 703.333 OFFCURVE",
"215.667 687 OFFCURVE",
"233 687 CURVE SMOOTH",
"238.333 687 OFFCURVE",
"241.667 687.333 OFFCURVE",
"243 688 CURVE",
"243 691 LINE SMOOTH",
"243 695 OFFCURVE",
"241.667 699.5 OFFCURVE",
"239 704.5 CURVE SMOOTH",
"236.333 709.5 OFFCURVE",
"235 713 OFFCURVE",
"235 715 CURVE SMOOTH",
"235 718.333 OFFCURVE",
"238.5 721.5 OFFCURVE",
"245.5 724.5 CURVE SMOOTH",
"252.5 727.5 OFFCURVE",
"261.667 730.667 OFFCURVE",
"273 734 CURVE SMOOTH",
"321.656 749.365 OFFCURVE",
"352 757.674 OFFCURVE",
"352 805 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"464 659.667 OFFCURVE",
"451 669 OFFCURVE",
"427 669 CURVE SMOOTH",
"404.333 669 OFFCURVE",
"370 614.667 OFFCURVE",
"324 506 CURVE SMOOTH",
"272 384.667 OFFCURVE",
"240.333 318 OFFCURVE",
"229 306 CURVE",
"204.333 305.333 OFFCURVE",
"173.667 345 OFFCURVE",
"137 425 CURVE SMOOTH",
"103.667 499 OFFCURVE",
"87 551.333 OFFCURVE",
"87 582 CURVE SMOOTH",
"87 586 OFFCURVE",
"88.5 591.667 OFFCURVE",
"91.5 599 CURVE SMOOTH",
"94.5 606.333 OFFCURVE",
"96 612.333 OFFCURVE",
"96 617 CURVE SMOOTH",
"96 631.667 OFFCURVE",
"92.667 645.667 OFFCURVE",
"86 659 CURVE",
"77.333 673.667 OFFCURVE",
"66 681 OFFCURVE",
"52 681 CURVE SMOOTH",
"30.667 681 OFFCURVE",
"20 667.333 OFFCURVE",
"20 640 CURVE SMOOTH",
"20 597.333 OFFCURVE",
"46 516.333 OFFCURVE",
"98 397 CURVE SMOOTH",
"129.333 325.667 OFFCURVE",
"166.333 273.333 OFFCURVE",
"209 240 CURVE",
"196.333 203.333 OFFCURVE",
"184 166.667 OFFCURVE",
"172 130 CURVE SMOOTH",
"152.667 75.333 OFFCURVE",
"138.5 43.5 OFFCURVE",
"129.5 34.5 CURVE SMOOTH",
"120.5 25.5 OFFCURVE",
"114 19.333 OFFCURVE",
"110 16 CURVE",
"122.667 -21.333 OFFCURVE",
"139.667 -40 OFFCURVE",
"161 -40 CURVE SMOOTH",
"171.667 -40 OFFCURVE",
"183 -35.667 OFFCURVE",
"195 -27 CURVE",
"189.667 29.667 OFFCURVE",
"213.333 125.333 OFFCURVE",
"266 260 CURVE SMOOTH",
"302 352 OFFCURVE",
"344.333 445.667 OFFCURVE",
"393 541 CURVE SMOOTH",
"399 553.667 OFFCURVE",
"411 570.5 OFFCURVE",
"429 591.5 CURVE SMOOTH",
"447 612.5 OFFCURVE",
"459.333 629 OFFCURVE",
"466 641 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
0 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 36 74 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 36 25 36 41 36 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
28 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 75 118 75 134 75 150 75 166 75 182 75 198 75 214 75 230 75 246 75 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 75 22 75 38 75 54 75 70 75 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 75 101 75 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 486;
}
);
note = u1EF6;
unicode = 1EF6;
},
{
glyphname = u1EF7;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"322 594.61 OFFCURVE",
"272.679 620 OFFCURVE",
"235 620 CURVE SMOOTH",
"208.019 620 OFFCURVE",
"125 594.815 OFFCURVE",
"125 557 CURVE SMOOTH",
"125 545 OFFCURVE",
"144.667 528 OFFCURVE",
"158 528 CURVE SMOOTH",
"168.667 528 OFFCURVE",
"183 538.667 OFFCURVE",
"183 548 CURVE SMOOTH",
"183 553.333 OFFCURVE",
"178 557.667 OFFCURVE",
"168 561 CURVE",
"182.667 577 OFFCURVE",
"216.333 579 OFFCURVE",
"235 579 CURVE SMOOTH",
"257.667 579 OFFCURVE",
"274 579.333 OFFCURVE",
"274 562 CURVE SMOOTH",
"274 520.939 OFFCURVE",
"166 516.802 OFFCURVE",
"166 478 CURVE SMOOTH",
"166 463.333 OFFCURVE",
"185.667 447 OFFCURVE",
"203 447 CURVE SMOOTH",
"208.333 447 OFFCURVE",
"211.667 447.333 OFFCURVE",
"213 448 CURVE",
"213 451 LINE SMOOTH",
"213 455 OFFCURVE",
"211.667 459.5 OFFCURVE",
"209 464.5 CURVE SMOOTH",
"206.333 469.5 OFFCURVE",
"205 473 OFFCURVE",
"205 475 CURVE SMOOTH",
"205 478.333 OFFCURVE",
"208.5 481.5 OFFCURVE",
"215.5 484.5 CURVE SMOOTH",
"222.5 487.5 OFFCURVE",
"231.667 490.667 OFFCURVE",
"243 494 CURVE SMOOTH",
"291.656 509.365 OFFCURVE",
"322 517.674 OFFCURVE",
"322 565 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"346.333 404.667 OFFCURVE",
"335 412 OFFCURVE",
"311 414 CURVE SMOOTH",
"290.333 415.333 OFFCURVE",
"279.5 407.333 OFFCURVE",
"278.5 390 CURVE SMOOTH",
"277.5 372.667 OFFCURVE",
"276.667 358.333 OFFCURVE",
"276 347 CURVE",
"277 233 LINE SMOOTH",
"277.667 193.667 OFFCURVE",
"270.667 154.667 OFFCURVE",
"256 116 CURVE SMOOTH",
"236.667 66 OFFCURVE",
"210.667 41 OFFCURVE",
"178 41 CURVE SMOOTH",
"124.667 41 OFFCURVE",
"98 87.667 OFFCURVE",
"98 181 CURVE SMOOTH",
"98 301.667 OFFCURVE",
"104.333 379.333 OFFCURVE",
"117 414 CURVE",
"119.667 422.667 OFFCURVE",
"108.333 427 OFFCURVE",
"83 427 CURVE SMOOTH",
"62.333 427 OFFCURVE",
"50.667 416.333 OFFCURVE",
"48 395 CURVE",
"45.333 333 OFFCURVE",
"44 257 OFFCURVE",
"44 167 CURVE SMOOTH",
"44 119.667 OFFCURVE",
"54.333 80.667 OFFCURVE",
"75 50 CURVE SMOOTH",
"98.333 14.667 OFFCURVE",
"132.667 -3 OFFCURVE",
"178 -3 CURVE SMOOTH",
"195.333 -3 OFFCURVE",
"211.333 1.667 OFFCURVE",
"226 11 CURVE",
"234 15.667 OFFCURVE",
"247.333 26.667 OFFCURVE",
"266 44 CURVE",
"264.667 31.333 OFFCURVE",
"265.333 16.667 OFFCURVE",
"268 0 CURVE SMOOTH",
"270.667 -20 OFFCURVE",
"272 -33.333 OFFCURVE",
"272 -40 CURVE SMOOTH",
"272 -90.667 OFFCURVE",
"267.667 -125.667 OFFCURVE",
"259 -145 CURVE SMOOTH",
"244.333 -175.667 OFFCURVE",
"215 -191 OFFCURVE",
"171 -191 CURVE SMOOTH",
"136.333 -191 OFFCURVE",
"107.667 -180.667 OFFCURVE",
"85 -160 CURVE",
"73.667 -148.667 OFFCURVE",
"62.333 -137 OFFCURVE",
"51 -125 CURVE",
"46.333 -122.333 OFFCURVE",
"42 -121 OFFCURVE",
"38 -121 CURVE SMOOTH",
"19.333 -121 OFFCURVE",
"10 -130.667 OFFCURVE",
"10 -150 CURVE SMOOTH",
"10 -156 OFFCURVE",
"11.667 -162 OFFCURVE",
"15 -168 CURVE",
"28.333 -190 OFFCURVE",
"52.667 -208.333 OFFCURVE",
"88 -223 CURVE SMOOTH",
"118.667 -236.333 OFFCURVE",
"146.333 -243 OFFCURVE",
"171 -243 CURVE SMOOTH",
"261.667 -243 OFFCURVE",
"320 -186.333 OFFCURVE",
"320 -97 CURVE SMOOTH",
"321 216 LINE SMOOTH",
"321 243.333 OFFCURVE",
"324 272.667 OFFCURVE",
"330 304 CURVE SMOOTH",
"334.667 333.333 OFFCURVE",
"339.667 362.667 OFFCURVE",
"345 392 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
92 933 84 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
51 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
99 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
28 36 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
76 36 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 92 22 92 38 92 54 92 70 92 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 92 101 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
105 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
74 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
80 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
68 931 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 928 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
94 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 94 119 94 135 94 151 94 167 94 183 94 199 94 215 94 231 94 247 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 94 23 94 39 94 55 94 71 94 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 94 102 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 369;
}
);
note = u1EF7;
unicode = 1EF7;
},
{
glyphname = u1EF4;
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcmb;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 486;
}
);
note = u1EF4;
unicode = 1EF4;
},
{
glyphname = u1EF5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"345 402.667 OFFCURVE",
"335 414 OFFCURVE",
"311 414 CURVE SMOOTH",
"289.667 414 OFFCURVE",
"278 408.667 OFFCURVE",
"278 390 CURVE SMOOTH",
"277 233 LINE SMOOTH",
"277 146.57 OFFCURVE",
"238.059 41 OFFCURVE",
"178 41 CURVE SMOOTH",
"124.667 41 OFFCURVE",
"98 87.667 OFFCURVE",
"98 181 CURVE SMOOTH",
"98 303 OFFCURVE",
"104.333 380.667 OFFCURVE",
"117 414 CURVE",
"117 418.667 OFFCURVE",
"114.5 422 OFFCURVE",
"109.5 424 CURVE SMOOTH",
"104.5 426 OFFCURVE",
"95.667 427 OFFCURVE",
"83 427 CURVE SMOOTH",
"63 427 OFFCURVE",
"51.333 416.333 OFFCURVE",
"48 395 CURVE",
"45.333 331 OFFCURVE",
"44 259 OFFCURVE",
"44 167 CURVE SMOOTH",
"44 67 OFFCURVE",
"92.667 -3 OFFCURVE",
"178 -3 CURVE SMOOTH",
"211.317 -3 OFFCURVE",
"225.455 7.96 OFFCURVE",
"266 44 CURVE",
"266 41.333 OFFCURVE",
"265.833 38.833 OFFCURVE",
"265.5 36.5 CURVE SMOOTH",
"265.167 34.167 OFFCURVE",
"265 31.667 OFFCURVE",
"265 29 CURVE SMOOTH",
"265 16.333 OFFCURVE",
"266.167 2.667 OFFCURVE",
"268.5 -12 CURVE SMOOTH",
"270.833 -26.667 OFFCURVE",
"272 -36 OFFCURVE",
"272 -40 CURVE SMOOTH",
"272 -88.071 OFFCURVE",
"232.893 -131 OFFCURVE",
"171 -131 CURVE SMOOTH",
"136.333 -131 OFFCURVE",
"107.667 -120.667 OFFCURVE",
"85 -100 CURVE",
"51 -65 LINE",
"46.333 -62.333 OFFCURVE",
"42 -61 OFFCURVE",
"38 -61 CURVE SMOOTH",
"19.333 -61 OFFCURVE",
"10 -70.667 OFFCURVE",
"10 -90 CURVE SMOOTH",
"10 -136.396 OFFCURVE",
"114.042 -183 OFFCURVE",
"171 -183 CURVE SMOOTH",
"263 -183 OFFCURVE",
"320 -126.333 OFFCURVE",
"320 -37 CURVE SMOOTH",
"321 216 LINE SMOOTH",
"321 243.333 OFFCURVE",
"324 272.667 OFFCURVE",
"330 304 CURVE SMOOTH",
"345 392 LINE"
);
},
{
closed = 1;
nodes = (
"215 -225.667 OFFCURVE",
"197.667 -206 OFFCURVE",
"175 -206 CURVE SMOOTH",
"152.333 -206 OFFCURVE",
"135 -225.667 OFFCURVE",
"135 -247 CURVE SMOOTH",
"135 -269.667 OFFCURVE",
"152.333 -289 OFFCURVE",
"175 -289 CURVE SMOOTH",
"197.667 -289 OFFCURVE",
"215 -269.667 OFFCURVE",
"215 -247 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
48 933 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 933 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
55 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 21 values pushed */
102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 48 22 48 38 48 54 48 70 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 48 101 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 62 22 62 38 62 54 62 70 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 62 101 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
71 931 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
14 7 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 35 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
50 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 50 23 50 39 50 55 50 71 50 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 50 102 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 369;
}
);
note = u1EF5;
unicode = 1EF5;
},
{
glyphname = u013F;
layers = (
{
components = (
{
name = L;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 139, -428}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
note = u013F;
unicode = 013F;
},
{
glyphname = u0140;
layers = (
{
components = (
{
name = l;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 115, -429}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 225;
}
);
note = u0140;
unicode = 0140;
},
{
glyphname = uni13A5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"195 471 OFFCURVE",
"219 498 OFFCURVE",
"219 530 CURVE SMOOTH",
"219 562 OFFCURVE",
"193.667 590 OFFCURVE",
"159 590 CURVE SMOOTH",
"125.667 590 OFFCURVE",
"101 562 OFFCURVE",
"101 530 CURVE SMOOTH",
"101 498 OFFCURVE",
"123 471 OFFCURVE",
"159 471 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 111 LINE SMOOTH",
"114 39.281 OFFCURVE",
"102.154 29.396 OFFCURVE",
"32 24 CURVE",
"24 22.667 OFFCURVE",
"22 16 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"203.333 0.833 OFFCURVE",
"224 -1.5 CURVE SMOOTH",
"244.667 -3.833 OFFCURVE",
"266.333 -5 OFFCURVE",
"289 -5 CURVE SMOOTH",
"297 -5 OFFCURVE",
"301 -0.667 OFFCURVE",
"301 8 CURVE SMOOTH",
"301 17.333 OFFCURVE",
"297.333 22.667 OFFCURVE",
"290 24 CURVE",
"220.97 29.31 OFFCURVE",
"207 39.281 OFFCURVE",
"207 111 CURVE SMOOTH",
"207 378 LINE SMOOTH",
"207 391.333 OFFCURVE",
"191 395 OFFCURVE",
"167 395 CURVE SMOOTH",
"141.667 395 OFFCURVE",
"114 382.667 OFFCURVE",
"114 364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 3 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 9 22 9 38 9 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 9 69 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
12 3 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 0 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 24 119 24 135 24 151 24 167 24 183 24 199 24 215 24 231 24 247 24 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 24 23 24 39 24 55 24 71 24 87 24 103 24 119 24 135 24 151 24 167 24 183 24 199 24 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 24 230 24 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 318;
}
);
note = uni13A5;
},
{
glyphname = uni13A6;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"454.667 336 OFFCURVE",
"474 326 OFFCURVE",
"474 310 CURVE SMOOTH",
"474 293.922 OFFCURVE",
"452 290.928 OFFCURVE",
"452 270 CURVE SMOOTH",
"452 248.667 OFFCURVE",
"471.333 240 OFFCURVE",
"490 240 CURVE SMOOTH",
"515.333 240 OFFCURVE",
"534 257.667 OFFCURVE",
"534 291 CURVE SMOOTH",
"534 345.028 OFFCURVE",
"487.149 364 OFFCURVE",
"436 364 CURVE SMOOTH",
"408 364 OFFCURVE",
"359 350 OFFCURVE",
"307 334 CURVE",
"272.507 370.957 OFFCURVE",
"216 436.26 OFFCURVE",
"216 476 CURVE SMOOTH",
"216 526.667 OFFCURVE",
"241 566 OFFCURVE",
"301 566 CURVE SMOOTH",
"349.292 566 OFFCURVE",
"378 540.837 OFFCURVE",
"378 518 CURVE SMOOTH",
"378 515.333 OFFCURVE",
"377 511.833 OFFCURVE",
"375 507.5 CURVE SMOOTH",
"373 503.167 OFFCURVE",
"372 499.333 OFFCURVE",
"372 496 CURVE SMOOTH",
"372 477.333 OFFCURVE",
"389.667 465 OFFCURVE",
"411 465 CURVE SMOOTH",
"436.333 465 OFFCURVE",
"458 489 OFFCURVE",
"458 509 CURVE SMOOTH",
"458 554.333 OFFCURVE",
"409 592 OFFCURVE",
"309 592 CURVE SMOOTH",
"212.578 592 OFFCURVE",
"135 541.738 OFFCURVE",
"135 454 CURVE SMOOTH",
"135 407.113 OFFCURVE",
"184.809 343.239 OFFCURVE",
"217 303 CURVE",
"179.667 291 OFFCURVE",
"146.667 281 OFFCURVE",
"132 281 CURVE SMOOTH",
"108 281 OFFCURVE",
"88 290 OFFCURVE",
"88 306 CURVE SMOOTH",
"88 323.946 OFFCURVE",
"110 326.934 OFFCURVE",
"110 346 CURVE SMOOTH",
"110 368.667 OFFCURVE",
"91 377 OFFCURVE",
"71 377 CURVE SMOOTH",
"47 377 OFFCURVE",
"28 359.333 OFFCURVE",
"28 326 CURVE SMOOTH",
"28 275.555 OFFCURVE",
"73.946 253 OFFCURVE",
"118 253 CURVE SMOOTH",
"143.333 253 OFFCURVE",
"188 266 OFFCURVE",
"236 282 CURVE",
"292.765 218.139 OFFCURVE",
"359 172.449 OFFCURVE",
"359 110 CURVE SMOOTH",
"359 54 OFFCURVE",
"330.333 18 OFFCURVE",
"269 18 CURVE SMOOTH",
"197.373 18 OFFCURVE",
"170 44.519 OFFCURVE",
"170 88 CURVE SMOOTH",
"170 95.333 OFFCURVE",
"172 102 OFFCURVE",
"176 108 CURVE SMOOTH",
"180 114 OFFCURVE",
"182 120 OFFCURVE",
"182 126 CURVE SMOOTH",
"182 146 OFFCURVE",
"165 157 OFFCURVE",
"145 157 CURVE SMOOTH",
"114.333 157 OFFCURVE",
"91 138.667 OFFCURVE",
"91 104 CURVE SMOOTH",
"91 40.213 OFFCURVE",
"145.158 -8 OFFCURVE",
"267 -8 CURVE SMOOTH",
"367.989 -8 OFFCURVE",
"442 35.517 OFFCURVE",
"442 139 CURVE SMOOTH",
"442 210.568 OFFCURVE",
"387.385 252.615 OFFCURVE",
"327 313 CURVE",
"368.333 325 OFFCURVE",
"405.333 336 OFFCURVE",
"428 336 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 934 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
95 934 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
108 934 114 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 48 108 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
54 59 70 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 59 22 59 38 59 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 59 101 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 35 106 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 35 25 35 41 35 57 35 73 35 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
65 48 108 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
87 35 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 87 106 87 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 87 121 87 137 87 153 87 169 87 185 87 201 87 217 87 233 87 249 87 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 87 25 87 41 87 57 87 73 87 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
78 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 95 118 95 134 95 150 95 166 95 182 95 198 95 214 95 230 95 246 95 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 95 22 95 38 95 54 95 70 95 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 95 101 95 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 114 106 114 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 114 25 114 41 114 57 114 73 114 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
108 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
119 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
108 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
123 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
75 929 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
103 111 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
51 43 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
103 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 111 103 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 21 119 21 135 21 151 21 167 21 183 21 199 21 215 21 231 21 247 21 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 21 23 21 39 21 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 21 70 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 32 119 32 135 32 151 32 167 32 183 32 199 32 215 32 231 32 247 32 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 32 23 32 39 32 55 32 71 32 87 32 103 32 119 32 135 32 151 32 167 32 183 32 199 32 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 32 230 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
62 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
65 111 103 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 547;
}
);
note = uni13A6;
},
{
glyphname = uni13A7;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"357 388.498 OFFCURVE",
"281.298 451 OFFCURVE",
"206 451 CURVE SMOOTH",
"91.384 451 OFFCURVE",
"28 375.723 OFFCURVE",
"28 274 CURVE SMOOTH",
"28 208.667 OFFCURVE",
"53.333 139.5 OFFCURVE",
"104 85.5 CURVE SMOOTH",
"154.667 31.5 OFFCURVE",
"228.333 -6 OFFCURVE",
"327 -6 CURVE SMOOTH",
"470.964 -6 OFFCURVE",
"591 68.509 OFFCURVE",
"591 236 CURVE SMOOTH",
"591 333.333 OFFCURVE",
"559.5 404.833 OFFCURVE",
"513.5 457.5 CURVE SMOOTH",
"490.5 483.833 OFFCURVE",
"464.167 505.5 OFFCURVE",
"434.5 522.5 CURVE SMOOTH",
"375.167 556.5 OFFCURVE",
"312.667 576 OFFCURVE",
"254 584 CURVE SMOOTH",
"224.667 588 OFFCURVE",
"199 590 OFFCURVE",
"177 590 CURVE SMOOTH",
"170.333 590 OFFCURVE",
"166 584.667 OFFCURVE",
"166 578 CURVE SMOOTH",
"166 570 OFFCURVE",
"171.333 562 OFFCURVE",
"178 562 CURVE SMOOTH",
"279.333 562 OFFCURVE",
"356.833 518.833 OFFCURVE",
"409.5 455.5 CURVE SMOOTH",
"462.167 392.167 OFFCURVE",
"490 308.333 OFFCURVE",
"490 227 CURVE SMOOTH",
"490 121.005 OFFCURVE",
"431.524 23 OFFCURVE",
"330 23 CURVE SMOOTH",
"270 23 OFFCURVE",
"226 58 OFFCURVE",
"190 106 CURVE",
"268.637 140.6 OFFCURVE",
"357 190.486 OFFCURVE",
"357 297 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 218.291 OFFCURVE",
"231.139 152.148 OFFCURVE",
"173 130 CURVE",
"138.333 183.333 OFFCURVE",
"119 249 OFFCURVE",
"119 305 CURVE SMOOTH",
"119 368.433 OFFCURVE",
"144.538 423 OFFCURVE",
"202 423 CURVE SMOOTH",
"247.333 423 OFFCURVE",
"284 385 OFFCURVE",
"284 289 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 934 41 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 934 13 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 13 106 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 13 25 13 41 13 57 13 73 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 51 106 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 51 25 51 41 51 57 51 73 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 59 22 59 38 59 54 59 70 59 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 59 101 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 939 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 929 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 8 23 8 39 8 55 8 71 8 87 8 103 8 119 8 135 8 151 8 167 8 183 8 199 8 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 8 230 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 54 233 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 54 120 54 136 54 152 54 168 54 184 54 200 54 216 54 232 54 248 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 54 24 54 40 54 56 54 72 54 88 54 104 54 120 54 136 54 152 54 168 54 184 54 200 54 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 626;
}
);
note = uni13A7;
},
{
glyphname = uni13A8;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114 111 LINE SMOOTH",
"114 39.281 OFFCURVE",
"102.154 29.396 OFFCURVE",
"32 24 CURVE",
"24 22.667 OFFCURVE",
"22 16 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"203.333 0.833 OFFCURVE",
"224 -1.5 CURVE SMOOTH",
"244.667 -3.833 OFFCURVE",
"266.333 -5 OFFCURVE",
"289 -5 CURVE SMOOTH",
"297 -5 OFFCURVE",
"301 -0.667 OFFCURVE",
"301 8 CURVE SMOOTH",
"301 17.333 OFFCURVE",
"297.333 22.667 OFFCURVE",
"290 24 CURVE",
"220.97 29.31 OFFCURVE",
"207 39.281 OFFCURVE",
"207 111 CURVE SMOOTH",
"207 291 LINE",
"220.333 311 OFFCURVE",
"242.333 324 OFFCURVE",
"261 328 CURVE",
"259 322.667 OFFCURVE",
"258 318.333 OFFCURVE",
"258 315 CURVE SMOOTH",
"258 273.807 OFFCURVE",
"286.632 221 OFFCURVE",
"347 221 CURVE SMOOTH",
"416.483 221 OFFCURVE",
"443 280.179 OFFCURVE",
"443 352 CURVE SMOOTH",
"443 379.976 OFFCURVE",
"444.246 433 OFFCURVE",
"426 433 CURVE SMOOTH",
"419.333 433 OFFCURVE",
"412 428.667 OFFCURVE",
"412 422 CURVE SMOOTH",
"412 418 OFFCURVE",
"412.167 414 OFFCURVE",
"412.5 410 CURVE SMOOTH",
"412.833 406 OFFCURVE",
"413 402 OFFCURVE",
"413 398 CURVE SMOOTH",
"413 334 OFFCURVE",
"394 286 OFFCURVE",
"346 286 CURVE SMOOTH",
"322 286 OFFCURVE",
"292 313.667 OFFCURVE",
"292 347 CURVE SMOOTH",
"292 348.333 OFFCURVE",
"292.167 349.5 OFFCURVE",
"292.5 350.5 CURVE SMOOTH",
"292.833 351.5 OFFCURVE",
"293 352.667 OFFCURVE",
"293 354 CURVE SMOOTH",
"293 358 OFFCURVE",
"290.333 360 OFFCURVE",
"285 360 CURVE SMOOTH",
"258.333 360 OFFCURVE",
"225.667 345 OFFCURVE",
"207 337 CURVE",
"207 447 LINE SMOOTH",
"207 522.89 OFFCURVE",
"218.23 544.633 OFFCURVE",
"288 550 CURVE",
"294.667 550 OFFCURVE",
"299 558.333 OFFCURVE",
"299 565 CURVE SMOOTH",
"299 573.667 OFFCURVE",
"295.667 578 OFFCURVE",
"289 578 CURVE SMOOTH",
"265 578 OFFCURVE",
"243.667 577.167 OFFCURVE",
"225 575.5 CURVE SMOOTH",
"206.333 573.833 OFFCURVE",
"185 573 OFFCURVE",
"161 573 CURVE SMOOTH",
"140.333 573 OFFCURVE",
"118.333 573.833 OFFCURVE",
"95 575.5 CURVE SMOOTH",
"71.667 577.167 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 932 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 932 42 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 42 106 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 42 25 42 41 42 57 42 73 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 63 106 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 63 25 63 41 63 57 63 73 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
65 63 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
78 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
84 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 58 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 58 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
65 58 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
74 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 74 119 74 135 74 151 74 167 74 183 74 199 74 215 74 231 74 247 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 74 23 74 39 74 55 74 71 74 87 74 103 74 119 74 135 74 151 74 167 74 183 74 199 74 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 74 230 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 460;
}
);
note = uni13A8;
},
{
glyphname = uni13A9;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"227.727 61.658 OFFCURVE",
"186.221 34 OFFCURVE",
"155 34 CURVE SMOOTH",
"115 34 OFFCURVE",
"97 52.667 OFFCURVE",
"97 78 CURVE SMOOTH",
"97 102.955 OFFCURVE",
"119 103.484 OFFCURVE",
"119 132 CURVE SMOOTH",
"119 152 OFFCURVE",
"103.333 168 OFFCURVE",
"74 168 CURVE SMOOTH",
"46 168 OFFCURVE",
"11 147 OFFCURVE",
"11 95 CURVE SMOOTH",
"11 44.728 OFFCURVE",
"38.751 -8 OFFCURVE",
"126 -8 CURVE SMOOTH",
"222.51 -8 OFFCURVE",
"301.623 80.872 OFFCURVE",
"355 180 CURVE",
"411.448 273.262 OFFCURVE",
"459.074 399.684 OFFCURVE",
"484 480 CURVE SMOOTH",
"498.132 529.463 OFFCURVE",
"510.838 547.306 OFFCURVE",
"545 553 CURVE",
"550.333 554.333 OFFCURVE",
"554 560.667 OFFCURVE",
"554 566 CURVE SMOOTH",
"554 571.333 OFFCURVE",
"551.333 578 OFFCURVE",
"546 578 CURVE SMOOTH",
"533.333 578 OFFCURVE",
"519.5 577.333 OFFCURVE",
"504.5 576 CURVE SMOOTH",
"489.5 574.667 OFFCURVE",
"476 574 OFFCURVE",
"464 574 CURVE SMOOTH",
"452.667 574 OFFCURVE",
"438.833 574.667 OFFCURVE",
"422.5 576 CURVE SMOOTH",
"406.167 577.333 OFFCURVE",
"392 578 OFFCURVE",
"380 578 CURVE SMOOTH",
"374.667 578 OFFCURVE",
"370 571.333 OFFCURVE",
"370 566 CURVE SMOOTH",
"370 558 OFFCURVE",
"373 553.333 OFFCURVE",
"379 552 CURVE",
"413.667 546.667 OFFCURVE",
"442 532.667 OFFCURVE",
"442 502 CURVE SMOOTH",
"442 496.667 OFFCURVE",
"441.667 492.667 OFFCURVE",
"441 490 CURVE SMOOTH",
"421 404.667 OFFCURVE",
"386 317 OFFCURVE",
"346 245 CURVE",
"344 241 OFFCURVE",
"341 239 OFFCURVE",
"337 239 CURVE SMOOTH",
"333.667 239 OFFCURVE",
"331 240.667 OFFCURVE",
"329 244 CURVE",
"273 324 OFFCURVE",
"226 409.667 OFFCURVE",
"198 487 CURVE",
"195.333 493 OFFCURVE",
"194 499 OFFCURVE",
"194 505 CURVE SMOOTH",
"194 511 OFFCURVE",
"194 517.333 OFFCURVE",
"194 524 CURVE SMOOTH",
"194 557.619 OFFCURVE",
"246 541.191 OFFCURVE",
"246 566 CURVE SMOOTH",
"246 571.333 OFFCURVE",
"243.667 578 OFFCURVE",
"237 578 CURVE SMOOTH",
"221 578 OFFCURVE",
"205 577.333 OFFCURVE",
"189 576 CURVE SMOOTH",
"173 574.667 OFFCURVE",
"156.333 574 OFFCURVE",
"139 574 CURVE SMOOTH",
"122.333 574 OFFCURVE",
"104.333 574.667 OFFCURVE",
"85 576 CURVE SMOOTH",
"65.667 577.333 OFFCURVE",
"48 578 OFFCURVE",
"32 578 CURVE SMOOTH",
"26.667 578 OFFCURVE",
"23 571.333 OFFCURVE",
"23 566 CURVE SMOOTH",
"23 560.667 OFFCURVE",
"24.333 553 OFFCURVE",
"31 553 CURVE",
"75 547.667 OFFCURVE",
"93.667 513.333 OFFCURVE",
"107 480 CURVE SMOOTH",
"145.42 382.668 OFFCURVE",
"214.514 256.842 OFFCURVE",
"272 168 CURVE SMOOTH",
"276 162 OFFCURVE",
"278 155 OFFCURVE",
"278 147 CURVE SMOOTH",
"278 121.667 OFFCURVE",
"257.333 91.667 OFFCURVE",
"240 77 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 934 88 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 94 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 3 22 3 38 3 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 3 69 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
83 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 91 119 91 135 91 151 91 167 91 183 91 199 91 215 91 231 91 247 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 91 23 91 39 91 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 91 70 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
102 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 102 119 102 135 102 151 102 167 102 183 102 199 102 215 102 231 102 247 102 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 102 23 102 39 102 55 102 71 102 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 102 102 102 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 537;
}
);
note = uni13A9;
},
{
glyphname = uni13AA;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"354 202 LINE SMOOTH",
"374 202 OFFCURVE",
"382.333 199.667 OFFCURVE",
"389 185 CURVE",
"416.381 117.6 OFFCURVE",
"428 81.973 OFFCURVE",
"428 62 CURVE SMOOTH",
"428 34 OFFCURVE",
"409.667 29.333 OFFCURVE",
"371 24 CURVE",
"363.667 22.667 OFFCURVE",
"360 18 OFFCURVE",
"360 10 CURVE SMOOTH",
"360 2 OFFCURVE",
"364 -5 OFFCURVE",
"372 -5 CURVE SMOOTH",
"392 -5 OFFCURVE",
"412.5 -3.833 OFFCURVE",
"433.5 -1.5 CURVE SMOOTH",
"454.5 0.833 OFFCURVE",
"477 2 OFFCURVE",
"501 2 CURVE SMOOTH",
"522.333 2 OFFCURVE",
"541.333 0.833 OFFCURVE",
"558 -1.5 CURVE SMOOTH",
"574.667 -3.833 OFFCURVE",
"592 -5 OFFCURVE",
"610 -5 CURVE SMOOTH",
"616 -5 OFFCURVE",
"619 -0.667 OFFCURVE",
"619 8 CURVE SMOOTH",
"619 17.333 OFFCURVE",
"616 22.667 OFFCURVE",
"610 24 CURVE",
"570.585 30.569 OFFCURVE",
"553.862 39.391 OFFCURVE",
"527 98 CURVE",
"496.333 172.667 OFFCURVE",
"461.5 260.5 OFFCURVE",
"427.5 346.5 CURVE SMOOTH",
"393.5 432.5 OFFCURVE",
"360 518 OFFCURVE",
"332 590 CURVE",
"326.667 595.333 OFFCURVE",
"320.333 598 OFFCURVE",
"313 598 CURVE SMOOTH",
"305 598 OFFCURVE",
"300.333 595.333 OFFCURVE",
"299 590 CURVE",
"106 103 LINE SMOOTH",
"82.71 49.434 OFFCURVE",
"66.213 34.818 OFFCURVE",
"28 26 CURVE",
"14 24 LINE",
"7.333 23.333 OFFCURVE",
"4 18.667 OFFCURVE",
"4 10 CURVE SMOOTH",
"4 3.333 OFFCURVE",
"9.333 -5 OFFCURVE",
"16 -5 CURVE SMOOTH",
"31.333 -5 OFFCURVE",
"46 -3.833 OFFCURVE",
"60 -1.5 CURVE SMOOTH",
"74 0.833 OFFCURVE",
"88 2 OFFCURVE",
"102 2 CURVE SMOOTH",
"118 2 OFFCURVE",
"135 0.833 OFFCURVE",
"153 -1.5 CURVE SMOOTH",
"171 -3.833 OFFCURVE",
"186.667 -5 OFFCURVE",
"200 -5 CURVE SMOOTH",
"208 -5 OFFCURVE",
"211 2 OFFCURVE",
"211 10 CURVE SMOOTH",
"211 15.333 OFFCURVE",
"208 24 OFFCURVE",
"200 24 CURVE",
"165.333 26.667 OFFCURVE",
"134 34.333 OFFCURVE",
"134 65 CURVE SMOOTH",
"134 69.667 OFFCURVE",
"135.333 76 OFFCURVE",
"138 84 CURVE",
"177 185 LINE",
"182.333 197 OFFCURVE",
"187.333 202 OFFCURVE",
"202 202 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"213 235 LINE SMOOTH",
"203 235 OFFCURVE",
"198 237.667 OFFCURVE",
"198 243 CURVE SMOOTH",
"198 244.333 OFFCURVE",
"198 245.833 OFFCURVE",
"198 247.5 CURVE SMOOTH",
"198 249.167 OFFCURVE",
"198.667 251 OFFCURVE",
"200 253 CURVE",
"278 454 LINE",
"278.667 456.667 OFFCURVE",
"281 458 OFFCURVE",
"285 458 CURVE SMOOTH",
"289 458 OFFCURVE",
"291.333 456.667 OFFCURVE",
"292 454 CURVE",
"366 253 LINE SMOOTH",
"367.333 249 OFFCURVE",
"368 246.333 OFFCURVE",
"368 245 CURVE SMOOTH",
"368 238.333 OFFCURVE",
"362 235 OFFCURVE",
"350 235 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
89 929 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
83 15 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 628;
}
);
note = uni13AA;
},
{
glyphname = uni13AB;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"304 447 LINE SMOOTH",
"304 522.768 OFFCURVE",
"312.052 543.718 OFFCURVE",
"386 549 CURVE",
"391.333 549 OFFCURVE",
"395 557 OFFCURVE",
"395 565 CURVE SMOOTH",
"395 573.667 OFFCURVE",
"392 578 OFFCURVE",
"386 578 CURVE SMOOTH",
"362.667 578 OFFCURVE",
"341.333 577.167 OFFCURVE",
"322 575.5 CURVE SMOOTH",
"302.667 573.833 OFFCURVE",
"281.333 573 OFFCURVE",
"258 573 CURVE SMOOTH",
"237.333 573 OFFCURVE",
"215.333 573.833 OFFCURVE",
"192 575.5 CURVE SMOOTH",
"168.667 577.167 OFFCURVE",
"148 578 OFFCURVE",
"130 578 CURVE SMOOTH",
"122 578 OFFCURVE",
"119 571 OFFCURVE",
"119 563 CURVE SMOOTH",
"119 556.333 OFFCURVE",
"122 549 OFFCURVE",
"130 549 CURVE",
"197.262 543.619 OFFCURVE",
"210 516.791 OFFCURVE",
"210 447 CURVE SMOOTH",
"210 153 LINE SMOOTH",
"210 73 OFFCURVE",
"191.667 19 OFFCURVE",
"125 19 CURVE SMOOTH",
"102.333 19 OFFCURVE",
"85 28.667 OFFCURVE",
"85 42 CURVE SMOOTH",
"85 47.333 OFFCURVE",
"87 52.667 OFFCURVE",
"91 58 CURVE SMOOTH",
"95 63.333 OFFCURVE",
"97 68.667 OFFCURVE",
"97 74 CURVE SMOOTH",
"97 95.333 OFFCURVE",
"78.667 114 OFFCURVE",
"52 114 CURVE SMOOTH",
"22.667 114 OFFCURVE",
"6 88.333 OFFCURVE",
"6 67 CURVE SMOOTH",
"6 20.333 OFFCURVE",
"47.667 -11 OFFCURVE",
"121 -11 CURVE SMOOTH",
"226.941 -11 OFFCURVE",
"304 77.43 OFFCURVE",
"304 196 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 17 22 17 38 17 54 17 70 17 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 17 101 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
35 929 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 11 23 11 39 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 11 70 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 20 230 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 417;
}
);
note = uni13AB;
},
{
glyphname = uni13AC;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"138 575 LINE SMOOTH",
"118 575 OFFCURVE",
"100.333 575.5 OFFCURVE",
"85 576.5 CURVE SMOOTH",
"69.667 577.5 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 571.333 OFFCURVE",
"22 566 CURVE SMOOTH",
"22 547.452 OFFCURVE",
"49.182 547.852 OFFCURVE",
"72 545 CURVE",
"111.737 531.754 OFFCURVE",
"117 480.475 OFFCURVE",
"117 432 CURVE SMOOTH",
"117 102 LINE SMOOTH",
"117 48.667 OFFCURVE",
"92.667 29.333 OFFCURVE",
"38 24 CURVE SMOOTH",
"29.333 23.333 OFFCURVE",
"25 18.667 OFFCURVE",
"25 10 CURVE SMOOTH",
"25 3.333 OFFCURVE",
"31 -5 OFFCURVE",
"39 -5 CURVE",
"73.667 -2.333 OFFCURVE",
"115 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"470 0 LINE SMOOTH",
"478.667 0 OFFCURVE",
"484.167 1.667 OFFCURVE",
"486.5 5 CURVE SMOOTH",
"488.833 8.333 OFFCURVE",
"490 10.667 OFFCURVE",
"490 12 CURVE SMOOTH",
"490 54.667 OFFCURVE",
"494.667 95 OFFCURVE",
"500 143 CURVE",
"500 148.333 OFFCURVE",
"493 153 OFFCURVE",
"485 153 CURVE SMOOTH",
"477 153 OFFCURVE",
"469.333 150.667 OFFCURVE",
"468 144 CURVE",
"457.223 57.783 OFFCURVE",
"423.272 36 OFFCURVE",
"329 36 CURVE SMOOTH",
"243.518 36 OFFCURVE",
"210 50.464 OFFCURVE",
"210 150 CURVE SMOOTH",
"210 262 LINE SMOOTH",
"210 274 OFFCURVE",
"216.667 278 OFFCURVE",
"222 278 CURVE SMOOTH",
"312.892 278 OFFCURVE",
"331.562 277.652 OFFCURVE",
"341 199 CURVE",
"342.333 192.333 OFFCURVE",
"349.333 190 OFFCURVE",
"356 190 CURVE SMOOTH",
"364.667 190 OFFCURVE",
"369 192.667 OFFCURVE",
"369 198 CURVE SMOOTH",
"369 218 OFFCURVE",
"368.167 235 OFFCURVE",
"366.5 249 CURVE SMOOTH",
"364.833 263 OFFCURVE",
"364 278.333 OFFCURVE",
"364 295 CURVE SMOOTH",
"364 308.767 OFFCURVE",
"369 378.963 OFFCURVE",
"369 390 CURVE SMOOTH",
"369 396.667 OFFCURVE",
"361.667 400 OFFCURVE",
"355 400 CURVE SMOOTH",
"346.333 400 OFFCURVE",
"341.667 396.667 OFFCURVE",
"341 390 CURVE SMOOTH",
"331.485 317.048 OFFCURVE",
"310.647 314 OFFCURVE",
"222 314 CURVE SMOOTH",
"219.333 314 OFFCURVE",
"216.667 314.833 OFFCURVE",
"214 316.5 CURVE SMOOTH",
"211.333 318.167 OFFCURVE",
"210 323.333 OFFCURVE",
"210 332 CURVE SMOOTH",
"210 482 LINE SMOOTH",
"210 537.821 OFFCURVE",
"220.717 539 OFFCURVE",
"279 539 CURVE SMOOTH",
"330 539 LINE SMOOTH",
"413.085 536.32 OFFCURVE",
"420.359 530.632 OFFCURVE",
"436 442 CURVE",
"438 436.667 OFFCURVE",
"443.333 434 OFFCURVE",
"452 434 CURVE SMOOTH",
"460.667 434 OFFCURVE",
"465 436.667 OFFCURVE",
"465 442 CURVE",
"463 464.667 OFFCURVE",
"462 488.667 OFFCURVE",
"462 514 CURVE SMOOTH",
"462 538 LINE SMOOTH",
"462 543.333 OFFCURVE",
"462.333 548 OFFCURVE",
"463 552 CURVE SMOOTH",
"463.667 556 OFFCURVE",
"464 560 OFFCURVE",
"464 564 CURVE SMOOTH",
"464 574.667 OFFCURVE",
"454 575 OFFCURVE",
"446 575 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
24 105 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
105 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
94 934 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
86 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 929 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 65 230 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 514;
}
);
note = uni13AC;
},
{
glyphname = uni13AD;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"709 277 LINE SMOOTH",
"741.396 324.349 OFFCURVE",
"763.665 366.852 OFFCURVE",
"810 372 CURVE",
"818 372 OFFCURVE",
"822 379 OFFCURVE",
"822 387 CURVE SMOOTH",
"822 393.667 OFFCURVE",
"818.667 400 OFFCURVE",
"812 400 CURVE SMOOTH",
"797.333 400 OFFCURVE",
"784.5 399 OFFCURVE",
"773.5 397 CURVE SMOOTH",
"762.5 395 OFFCURVE",
"749 394 OFFCURVE",
"733 394 CURVE SMOOTH",
"716.333 394 OFFCURVE",
"700.333 395 OFFCURVE",
"685 397 CURVE SMOOTH",
"669.667 399 OFFCURVE",
"651.333 400 OFFCURVE",
"630 400 CURVE SMOOTH",
"624.667 400 OFFCURVE",
"622 395.333 OFFCURVE",
"622 386 CURVE SMOOTH",
"622 379.333 OFFCURVE",
"624 372 OFFCURVE",
"632 372 CURVE SMOOTH",
"662.667 372 OFFCURVE",
"684 354.667 OFFCURVE",
"684 328 CURVE SMOOTH",
"684 316 OFFCURVE",
"680.667 299.667 OFFCURVE",
"670 285 CURVE SMOOTH",
"530 79 LINE",
"530 447 LINE SMOOTH",
"530 523.774 OFFCURVE",
"538.156 544.678 OFFCURVE",
"610 550 CURVE",
"616.667 550 OFFCURVE",
"621 559.333 OFFCURVE",
"621 566 CURVE SMOOTH",
"621 572.667 OFFCURVE",
"617.667 578 OFFCURVE",
"611 578 CURVE SMOOTH",
"587 578 OFFCURVE",
"565.833 577.167 OFFCURVE",
"547.5 575.5 CURVE SMOOTH",
"529.167 573.833 OFFCURVE",
"507.667 573 OFFCURVE",
"483 573 CURVE SMOOTH",
"462.333 573 OFFCURVE",
"440.333 573.833 OFFCURVE",
"417 575.5 CURVE SMOOTH",
"393.667 577.167 OFFCURVE",
"372.667 578 OFFCURVE",
"354 578 CURVE SMOOTH",
"348.667 578 OFFCURVE",
"344 570.667 OFFCURVE",
"344 564 CURVE SMOOTH",
"344 557.333 OFFCURVE",
"348.667 550 OFFCURVE",
"354 550 CURVE",
"424.957 544.744 OFFCURVE",
"435 518.101 OFFCURVE",
"435 447 CURVE SMOOTH",
"435 314 LINE",
"401.667 278 OFFCURVE",
"358 264 OFFCURVE",
"330 264 CURVE SMOOTH",
"328 264 OFFCURVE",
"325.333 266.5 OFFCURVE",
"322 271.5 CURVE SMOOTH",
"318.667 276.5 OFFCURVE",
"314 283 OFFCURVE",
"308 291 CURVE SMOOTH",
"282.667 325 OFFCURVE",
"246 342 OFFCURVE",
"198 342 CURVE SMOOTH",
"118.067 342 OFFCURVE",
"35 290.49 OFFCURVE",
"35 166 CURVE SMOOTH",
"35 38.707 OFFCURVE",
"105.193 -8 OFFCURVE",
"195 -8 CURVE SMOOTH",
"268.106 -8 OFFCURVE",
"345 49.944 OFFCURVE",
"345 165 CURVE SMOOTH",
"345 183.667 OFFCURVE",
"343 202.667 OFFCURVE",
"339 222 CURVE",
"360.333 226 OFFCURVE",
"402 244 OFFCURVE",
"434 272 CURVE",
"435 0 LINE",
"502 0 LINE SMOOTH",
"523.333 0 OFFCURVE",
"532.667 7.333 OFFCURVE",
"546 26 CURVE"
);
},
{
closed = 1;
nodes = (
"254 314 OFFCURVE",
"286 272.667 OFFCURVE",
"286 166 CURVE SMOOTH",
"286 70.589 OFFCURVE",
"251.976 22 OFFCURVE",
"199 22 CURVE SMOOTH",
"154.938 22 OFFCURVE",
"123 71.211 OFFCURVE",
"123 171 CURVE SMOOTH",
"123 271.289 OFFCURVE",
"160.304 314 OFFCURVE",
"206 314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
98 934 20 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 934 108 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 934 5 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 10 22 10 38 10 54 10 70 10 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 10 101 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 98 22 98 38 98 54 98 70 98 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 98 101 98 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
45 929 39 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 929 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 929 93 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
103 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 103 119 103 135 103 151 103 167 103 183 103 199 103 215 103 231 103 247 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 103 23 103 39 103 55 103 71 103 87 103 103 103 119 103 135 103 151 103 167 103 183 103 199 103 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 103 230 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 809;
}
);
note = uni13AD;
},
{
glyphname = uni13AE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"92.055 592 OFFCURVE",
"16 538.794 OFFCURVE",
"16 474 CURVE SMOOTH",
"16 439.333 OFFCURVE",
"34 418 OFFCURVE",
"66 418 CURVE SMOOTH",
"88.667 418 OFFCURVE",
"114 432.333 OFFCURVE",
"114 459 CURVE SMOOTH",
"114 476.505 OFFCURVE",
"94 482.221 OFFCURVE",
"94 495 CURVE SMOOTH",
"94 532.651 OFFCURVE",
"150.059 561 OFFCURVE",
"231 561 CURVE SMOOTH",
"345.005 561 OFFCURVE",
"407 470.009 OFFCURVE",
"407 367 CURVE SMOOTH",
"407 297.107 OFFCURVE",
"372.099 226 OFFCURVE",
"314 226 CURVE SMOOTH",
"268.81 226 OFFCURVE",
"211.959 305 OFFCURVE",
"192 305 CURVE SMOOTH",
"167.333 305 OFFCURVE",
"146 304.667 OFFCURVE",
"128 304 CURVE SMOOTH",
"110 303.333 OFFCURVE",
"91.667 303 OFFCURVE",
"73 303 CURVE SMOOTH",
"59.667 303 OFFCURVE",
"46.667 303.667 OFFCURVE",
"32 305 CURVE",
"25.333 305 OFFCURVE",
"22 300.333 OFFCURVE",
"22 291 CURVE SMOOTH",
"22 284.333 OFFCURVE",
"24 277 OFFCURVE",
"32 277 CURVE",
"101.111 269.026 OFFCURVE",
"113 245.411 OFFCURVE",
"113 174 CURVE SMOOTH",
"114 111 LINE SMOOTH",
"114 38.535 OFFCURVE",
"101.907 29.593 OFFCURVE",
"32 24 CURVE",
"24 22.667 OFFCURVE",
"22 16 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"203.833 0.833 OFFCURVE",
"225.5 -1.5 CURVE SMOOTH",
"247.167 -3.833 OFFCURVE",
"269.667 -5 OFFCURVE",
"293 -5 CURVE SMOOTH",
"301 -5 OFFCURVE",
"305 -0.667 OFFCURVE",
"305 8 CURVE SMOOTH",
"305 17.333 OFFCURVE",
"301.333 22.667 OFFCURVE",
"294 24 CURVE",
"223.714 29.206 OFFCURVE",
"207 39.145 OFFCURVE",
"207 111 CURVE",
"206 174 LINE",
"206 190 OFFCURVE",
"207.333 207.333 OFFCURVE",
"210 214 CURVE",
"236.667 203.333 OFFCURVE",
"275.333 195 OFFCURVE",
"310 195 CURVE SMOOTH",
"421.64 195 OFFCURVE",
"498 269.171 OFFCURVE",
"498 374 CURVE SMOOTH",
"498 494.342 OFFCURVE",
"389.06 592 OFFCURVE",
"232 592 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
79 934 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 934 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 69 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 69 106 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 69 25 69 41 69 57 69 73 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 79 118 79 134 79 150 79 166 79 182 79 198 79 214 79 230 79 246 79 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 79 22 79 38 79 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 79 70 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 79 101 79 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 929 74 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
59 10 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 22 230 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
64 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 530;
}
);
note = uni13AE;
},
{
glyphname = uni13AF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"49.752 166 OFFCURVE",
"18 137.839 OFFCURVE",
"18 92 CURVE SMOOTH",
"18 38.36 OFFCURVE",
"50.42 -10 OFFCURVE",
"146 -10 CURVE SMOOTH",
"297.918 -10 OFFCURVE",
"308.025 110.605 OFFCURVE",
"324 281 CURVE",
"620 281 LINE",
"615.388 142.647 OFFCURVE",
"589.354 17 OFFCURVE",
"514 17 CURVE SMOOTH",
"476.667 17 OFFCURVE",
"450 30 OFFCURVE",
"450 62 CURVE SMOOTH",
"450 91.779 OFFCURVE",
"489 94.221 OFFCURVE",
"489 124 CURVE SMOOTH",
"489 144 OFFCURVE",
"468.667 163 OFFCURVE",
"446 163 CURVE SMOOTH",
"415.333 163 OFFCURVE",
"383 136 OFFCURVE",
"383 84 CURVE SMOOTH",
"383 36.319 OFFCURVE",
"421.036 -10 OFFCURVE",
"506 -10 CURVE SMOOTH",
"669.019 -10 OFFCURVE",
"718 142.992 OFFCURVE",
"718 320 CURVE SMOOTH",
"718 441.333 OFFCURVE",
"688 509.5 OFFCURVE",
"648 547.5 CURVE SMOOTH",
"608 585.5 OFFCURVE",
"558.333 592 OFFCURVE",
"517 592 CURVE SMOOTH",
"341.396 592 OFFCURVE",
"301.401 463.066 OFFCURVE",
"282.5 307.5 CURVE SMOOTH",
"266.68 177.29 OFFCURVE",
"272.046 23 OFFCURVE",
"170 23 CURVE SMOOTH",
"118 23 OFFCURVE",
"104 49.333 OFFCURVE",
"104 76 CURVE SMOOTH",
"104 99.184 OFFCURVE",
"126 101.992 OFFCURVE",
"126 130 CURVE SMOOTH",
"126 150 OFFCURVE",
"110 166 OFFCURVE",
"82 166 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"568.457 552 OFFCURVE",
"621 487.683 OFFCURVE",
"621 322 CURVE SMOOTH",
"621 314 LINE",
"327 314 LINE",
"344.316 438.097 OFFCURVE",
"364.46 552 OFFCURVE",
"494 552 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 934 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 934 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 8 22 8 38 8 54 8 70 8 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 8 101 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 35 106 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 35 25 35 41 35 57 35 73 35 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
60 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 928 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 929 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 0 23 0 39 0 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 0 70 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
199 11 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 25 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 12 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 11 230 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 753;
}
);
note = uni13AF;
},
{
glyphname = uni13B0;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114 111 LINE SMOOTH",
"114 39.281 OFFCURVE",
"102.154 29.396 OFFCURVE",
"32 24 CURVE",
"24 22.667 OFFCURVE",
"22 16 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"203.333 0.833 OFFCURVE",
"224 -1.5 CURVE SMOOTH",
"244.667 -3.833 OFFCURVE",
"266.333 -5 OFFCURVE",
"289 -5 CURVE SMOOTH",
"297 -5 OFFCURVE",
"301 -0.667 OFFCURVE",
"301 8 CURVE SMOOTH",
"301 17.333 OFFCURVE",
"297.333 22.667 OFFCURVE",
"290 24 CURVE",
"220.97 29.31 OFFCURVE",
"207 39.281 OFFCURVE",
"207 111 CURVE SMOOTH",
"207 266 LINE SMOOTH",
"207 276.667 OFFCURVE",
"214.667 279 OFFCURVE",
"220 279 CURVE SMOOTH",
"309.428 279 OFFCURVE",
"328.557 279.692 OFFCURVE",
"338 201 CURVE",
"339.333 194.333 OFFCURVE",
"347.333 191 OFFCURVE",
"354 191 CURVE SMOOTH",
"360.667 191 OFFCURVE",
"366 193.667 OFFCURVE",
"366 199 CURVE SMOOTH",
"366 219.667 OFFCURVE",
"365.167 236.833 OFFCURVE",
"363.5 250.5 CURVE SMOOTH",
"361.833 264.167 OFFCURVE",
"361 280 OFFCURVE",
"361 298 CURVE SMOOTH",
"361 317.333 OFFCURVE",
"361.833 333.333 OFFCURVE",
"363.5 346 CURVE SMOOTH",
"365.167 358.667 OFFCURVE",
"366 374 OFFCURVE",
"366 392 CURVE SMOOTH",
"366 398.667 OFFCURVE",
"361.667 402 OFFCURVE",
"353 402 CURVE SMOOTH",
"343.667 402 OFFCURVE",
"338.667 398.667 OFFCURVE",
"338 392 CURVE SMOOTH",
"328.282 317.494 OFFCURVE",
"307.765 315 OFFCURVE",
"220 315 CURVE SMOOTH",
"214.667 315 OFFCURVE",
"207 315 OFFCURVE",
"207 327 CURVE SMOOTH",
"207 447 LINE SMOOTH",
"207 522.89 OFFCURVE",
"218.23 544.633 OFFCURVE",
"288 550 CURVE",
"294.667 550 OFFCURVE",
"299 558.333 OFFCURVE",
"299 565 CURVE SMOOTH",
"299 573.667 OFFCURVE",
"295.667 578 OFFCURVE",
"289 578 CURVE SMOOTH",
"265 578 OFFCURVE",
"243.667 577.167 OFFCURVE",
"225 575.5 CURVE SMOOTH",
"206.333 573.833 OFFCURVE",
"185 573 OFFCURVE",
"161 573 CURVE SMOOTH",
"140.333 573 OFFCURVE",
"118.333 573.833 OFFCURVE",
"95 575.5 CURVE SMOOTH",
"71.667 577.167 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 929 57 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
66 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 66 119 66 135 66 151 66 167 66 183 66 199 66 215 66 231 66 247 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 66 23 66 39 66 55 66 71 66 87 66 103 66 119 66 135 66 151 66 167 66 183 66 199 66 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 66 230 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 388;
}
);
note = uni13B0;
},
{
glyphname = uni13B1;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"115 126 LINE SMOOTH",
"115 55.173 OFFCURVE",
"105.428 28.291 OFFCURVE",
"34 23 CURVE",
"28.667 23 OFFCURVE",
"24 16 OFFCURVE",
"24 8 CURVE SMOOTH",
"24 -0.667 OFFCURVE",
"27.333 -5 OFFCURVE",
"34 -5 CURVE SMOOTH",
"52.667 -5 OFFCURVE",
"73.667 -4.167 OFFCURVE",
"97 -2.5 CURVE SMOOTH",
"120.333 -0.833 OFFCURVE",
"142 0 OFFCURVE",
"162 0 CURVE SMOOTH",
"179.152 0 OFFCURVE",
"274.2 -5 OFFCURVE",
"291 -5 CURVE SMOOTH",
"297.667 -5 OFFCURVE",
"300 0.333 OFFCURVE",
"300 7 CURVE SMOOTH",
"300 13.667 OFFCURVE",
"296.667 23 OFFCURVE",
"290 23 CURVE",
"217.472 28.372 OFFCURVE",
"209 49.588 OFFCURVE",
"209 126 CURVE SMOOTH",
"209 424 LINE SMOOTH",
"209 513.434 OFFCURVE",
"202.711 539 OFFCURVE",
"263 539 CURVE SMOOTH",
"385.057 539 OFFCURVE",
"422.396 543.28 OFFCURVE",
"441 429 CURVE",
"442.333 422.333 OFFCURVE",
"450 420 OFFCURVE",
"458 420 CURVE SMOOTH",
"464.667 420 OFFCURVE",
"472 424 OFFCURVE",
"472 428 CURVE SMOOTH",
"472 430 LINE",
"466.667 478 OFFCURVE",
"462 517 OFFCURVE",
"462 561 CURVE SMOOTH",
"462 562.333 OFFCURVE",
"460.833 564.667 OFFCURVE",
"458.5 568 CURVE SMOOTH",
"456.167 571.333 OFFCURVE",
"450.667 573 OFFCURVE",
"442 573 CURVE SMOOTH",
"158 573 LINE SMOOTH",
"136 573 OFFCURVE",
"114.833 573.667 OFFCURVE",
"94.5 575 CURVE SMOOTH",
"74.167 576.333 OFFCURVE",
"54 577.333 OFFCURVE",
"34 578 CURVE SMOOTH",
"26 578 OFFCURVE",
"22 571.333 OFFCURVE",
"22 566 CURVE SMOOTH",
"22 558 OFFCURVE",
"26 550 OFFCURVE",
"34 550 CURVE",
"102.493 539.463 OFFCURVE",
"115 530.965 OFFCURVE",
"115 462 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
39 60 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
55 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 44 119 44 135 44 151 44 167 44 183 44 199 44 215 44 231 44 247 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 44 23 44 39 44 55 44 71 44 87 44 103 44 119 44 135 44 151 44 167 44 183 44 199 44 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 44 230 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 486;
}
);
note = uni13B1;
},
{
glyphname = uni13B2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113.888 19 OFFCURVE",
"74 67.736 OFFCURVE",
"74 111 CURVE SMOOTH",
"74 140.333 OFFCURVE",
"82 162 OFFCURVE",
"110 162 CURVE SMOOTH",
"116 162 OFFCURVE",
"121 160.667 OFFCURVE",
"125 158 CURVE SMOOTH",
"129 155.333 OFFCURVE",
"134.333 154 OFFCURVE",
"141 154 CURVE SMOOTH",
"157 154 OFFCURVE",
"168 173 OFFCURVE",
"168 193 CURVE SMOOTH",
"168 215.667 OFFCURVE",
"155 237 OFFCURVE",
"111 237 CURVE SMOOTH",
"49.776 237 OFFCURVE",
"16 187.634 OFFCURVE",
"16 130 CURVE SMOOTH",
"16 55.833 OFFCURVE",
"73.585 -13 OFFCURVE",
"170 -13 CURVE SMOOTH",
"244.667 -13 OFFCURVE",
"312.333 36.333 OFFCURVE",
"367 99 CURVE",
"448.333 23 OFFCURVE",
"517.333 -13 OFFCURVE",
"608 -13 CURVE SMOOTH",
"648 -13 OFFCURVE",
"700.5 -2.667 OFFCURVE",
"742.5 36 CURVE SMOOTH",
"784.5 74.667 OFFCURVE",
"817 141.333 OFFCURVE",
"817 256 CURVE SMOOTH",
"817 293.333 OFFCURVE",
"830.333 310.333 OFFCURVE",
"877 317 CURVE",
"883.667 318.333 OFFCURVE",
"887 325 OFFCURVE",
"887 333 CURVE SMOOTH",
"887 339.667 OFFCURVE",
"883.667 347 OFFCURVE",
"877 347 CURVE SMOOTH",
"860.333 347 OFFCURVE",
"845.5 346.333 OFFCURVE",
"832.5 345 CURVE SMOOTH",
"819.5 343.667 OFFCURVE",
"803 343 OFFCURVE",
"783 343 CURVE SMOOTH",
"758.333 343 OFFCURVE",
"735.333 344.167 OFFCURVE",
"714 346.5 CURVE SMOOTH",
"692.667 348.833 OFFCURVE",
"672.667 350 OFFCURVE",
"654 350 CURVE SMOOTH",
"646 350 OFFCURVE",
"641 342 OFFCURVE",
"641 334 CURVE SMOOTH",
"641 326 OFFCURVE",
"643.667 318.333 OFFCURVE",
"653 317 CURVE",
"727.552 309.012 OFFCURVE",
"744 270.156 OFFCURVE",
"744 194 CURVE SMOOTH",
"744 106.625 OFFCURVE",
"700.319 19 OFFCURVE",
"613 19 CURVE SMOOTH",
"545.848 19 OFFCURVE",
"480.216 89.23 OFFCURVE",
"422 162 CURVE",
"492.023 234.716 OFFCURVE",
"553 309.667 OFFCURVE",
"553 407 CURVE SMOOTH",
"553 516.409 OFFCURVE",
"475.47 592 OFFCURVE",
"380 592 CURVE SMOOTH",
"283.722 592 OFFCURVE",
"207 515.935 OFFCURVE",
"207 408 CURVE SMOOTH",
"207 308 OFFCURVE",
"258.667 221 OFFCURVE",
"336 133 CURVE",
"294.021 77.902 OFFCURVE",
"236.598 19 OFFCURVE",
"172 19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"459 326 OFFCURVE",
"439.333 260 OFFCURVE",
"394 196 CURVE",
"330 280 OFFCURVE",
"300 351 OFFCURVE",
"300 423 CURVE SMOOTH",
"300 485.029 OFFCURVE",
"320.431 560 OFFCURVE",
"378 560 CURVE SMOOTH",
"404 560 OFFCURVE",
"424 547.833 OFFCURVE",
"438 523.5 CURVE SMOOTH",
"452 499.167 OFFCURVE",
"459 458.667 OFFCURVE",
"459 402 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
92 934 75 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
105 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 934 97 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
59 934 33 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 33 106 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 33 25 33 41 33 57 33 73 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 92 22 92 38 92 54 92 70 92 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 92 101 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 97 106 97 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 97 25 97 41 97 57 97 73 97 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 105 118 105 134 105 150 105 166 105 182 105 198 105 214 105 230 105 246 105 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 105 22 105 38 105 54 105 70 105 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 105 101 105 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
108 75 59 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
112 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
64 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
13 929 100 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 931 89 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 0 230 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
108 89 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 895;
}
);
note = uni13B2;
},
{
glyphname = uni13B3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"542 0 LINE",
"543.333 -5.333 OFFCURVE",
"552 -10 OFFCURVE",
"560 -10 CURVE SMOOTH",
"568 -10 OFFCURVE",
"577 -7 OFFCURVE",
"581 1 CURVE",
"717 425 LINE",
"734.819 488.64 OFFCURVE",
"750.799 544.743 OFFCURVE",
"806 550 CURVE",
"815.333 550 OFFCURVE",
"818 557.333 OFFCURVE",
"818 564 CURVE SMOOTH",
"818 570.667 OFFCURVE",
"813.667 578 OFFCURVE",
"807 578 CURVE SMOOTH",
"789.667 578 OFFCURVE",
"775.167 577 OFFCURVE",
"763.5 575 CURVE SMOOTH",
"751.833 573 OFFCURVE",
"738 572 OFFCURVE",
"722 572 CURVE SMOOTH",
"706 572 OFFCURVE",
"690.333 573 OFFCURVE",
"675 575 CURVE SMOOTH",
"659.667 577 OFFCURVE",
"643 578 OFFCURVE",
"625 578 CURVE SMOOTH",
"618.333 578 OFFCURVE",
"614 571 OFFCURVE",
"614 563 CURVE SMOOTH",
"614 554.333 OFFCURVE",
"617.667 550 OFFCURVE",
"625 550 CURVE SMOOTH",
"667.667 548.667 OFFCURVE",
"683 537.667 OFFCURVE",
"683 491 CURVE SMOOTH",
"683 447.634 OFFCURVE",
"656.419 334.258 OFFCURVE",
"643 294 CURVE SMOOTH",
"596 146 LINE",
"594 143.333 OFFCURVE",
"591.333 142 OFFCURVE",
"588 142 CURVE SMOOTH",
"583.333 142 OFFCURVE",
"581 144 OFFCURVE",
"581 148 CURVE",
"441 578 LINE",
"439.667 583.333 OFFCURVE",
"431.333 586 OFFCURVE",
"426 586 CURVE SMOOTH",
"416.667 586 OFFCURVE",
"411.333 583.333 OFFCURVE",
"410 578 CURVE SMOOTH",
"290 150 LINE",
"288 146 OFFCURVE",
"285.667 144 OFFCURVE",
"283 144 CURVE SMOOTH",
"279 144 OFFCURVE",
"276 146 OFFCURVE",
"274 150 CURVE",
"235.333 282 OFFCURVE",
"211.667 366.5 OFFCURVE",
"197 420.5 CURVE SMOOTH",
"186.64 458.643 OFFCURVE",
"178 500.952 OFFCURVE",
"178 511 CURVE SMOOTH",
"178 559.95 OFFCURVE",
"263 530.099 OFFCURVE",
"263 565 CURVE SMOOTH",
"263 573.667 OFFCURVE",
"259.667 578 OFFCURVE",
"253 578 CURVE SMOOTH",
"229 578 OFFCURVE",
"205.333 577 OFFCURVE",
"182 575 CURVE SMOOTH",
"158.667 573 OFFCURVE",
"136 572 OFFCURVE",
"114 572 CURVE SMOOTH",
"94 572 OFFCURVE",
"74.833 573 OFFCURVE",
"56.5 575 CURVE SMOOTH",
"38.167 577 OFFCURVE",
"17.333 578 OFFCURVE",
"-6 578 CURVE SMOOTH",
"-12.667 578 OFFCURVE",
"-16 570.667 OFFCURVE",
"-16 564 CURVE SMOOTH",
"-16 557.333 OFFCURVE",
"-11.333 550 OFFCURVE",
"-6 550 CURVE",
"24.667 547.333 OFFCURVE",
"42.667 546 OFFCURVE",
"56 526 CURVE",
"70.667 510 OFFCURVE",
"82 476.667 OFFCURVE",
"90 454 CURVE",
"114 372.667 OFFCURVE",
"138.5 295.5 OFFCURVE",
"163.5 222.5 CURVE SMOOTH",
"188.5 149.5 OFFCURVE",
"213.667 75.667 OFFCURVE",
"239 1 CURVE",
"243.667 -6.333 OFFCURVE",
"250.667 -10 OFFCURVE",
"260 -10 CURVE SMOOTH",
"268 -10 OFFCURVE",
"274 -6 OFFCURVE",
"278 2 CURVE",
"394 390 LINE",
"394 394.667 OFFCURVE",
"396.333 397 OFFCURVE",
"401 397 CURVE SMOOTH",
"403.667 397 OFFCURVE",
"405.667 395 OFFCURVE",
"407 391 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
92 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 929 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 798;
}
);
note = uni13B3;
},
{
glyphname = uni13B4;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"409.333 236 OFFCURVE",
"407.333 257.5 OFFCURVE",
"404 278.5 CURVE SMOOTH",
"400.667 299.5 OFFCURVE",
"398 318 OFFCURVE",
"396 334 CURVE SMOOTH",
"390.667 370 OFFCURVE",
"384.833 402.833 OFFCURVE",
"378.5 432.5 CURVE SMOOTH",
"372.167 462.167 OFFCURVE",
"369 487.667 OFFCURVE",
"369 509 CURVE SMOOTH",
"369 542.333 OFFCURVE",
"379.667 562 OFFCURVE",
"413 562 CURVE SMOOTH",
"441 562 OFFCURVE",
"462 551.333 OFFCURVE",
"462 534 CURVE SMOOTH",
"462 531.333 OFFCURVE",
"461 527.667 OFFCURVE",
"459 523 CURVE SMOOTH",
"457 518.333 OFFCURVE",
"456 514.333 OFFCURVE",
"456 511 CURVE SMOOTH",
"456 492.333 OFFCURVE",
"473.333 480 OFFCURVE",
"492 480 CURVE SMOOTH",
"516 480 OFFCURVE",
"534 499 OFFCURVE",
"534 519 CURVE SMOOTH",
"534 565.667 OFFCURVE",
"490.333 592 OFFCURVE",
"425 592 CURVE SMOOTH",
"330.032 592 OFFCURVE",
"301 522.69 OFFCURVE",
"301 436 CURVE SMOOTH",
"301 393.333 OFFCURVE",
"308.333 348.333 OFFCURVE",
"315 311 CURVE",
"291 339 OFFCURVE",
"252.667 350 OFFCURVE",
"218 350 CURVE SMOOTH",
"104.667 350 OFFCURVE",
"31 283.333 OFFCURVE",
"31 166 CURVE SMOOTH",
"31 45.368 OFFCURVE",
"112.482 -11 OFFCURVE",
"217 -11 CURVE SMOOTH",
"337 -11 OFFCURVE",
"410 72.667 OFFCURVE",
"410 214 CURVE"
);
},
{
closed = 1;
nodes = (
"311 103.233 OFFCURVE",
"296.716 22 OFFCURVE",
"226 22 CURVE SMOOTH",
"155.537 22 OFFCURVE",
"131 104.245 OFFCURVE",
"131 174 CURVE SMOOTH",
"131 247.056 OFFCURVE",
"148.731 318 OFFCURVE",
"226 318 CURVE SMOOTH",
"288.051 318 OFFCURVE",
"311 252.384 OFFCURVE",
"311 187 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 934 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 934 34 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 17 106 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 17 25 17 41 17 57 17 73 17 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
46 17 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 46 106 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 46 25 46 41 46 57 46 73 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 34 106 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 34 25 34 41 34 57 34 73 34 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 56 22 56 38 56 54 56 70 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 56 101 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
22 929 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 929 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
61 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 61 119 61 135 61 151 61 167 61 183 61 199 61 215 61 231 61 247 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 61 23 61 39 61 55 61 71 61 87 61 103 61 119 61 135 61 151 61 167 61 183 61 199 61 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 61 230 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 543;
}
);
note = uni13B4;
},
{
glyphname = uni13B5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"190 301 LINE SMOOTH",
"190 365 OFFCURVE",
"192.333 409.667 OFFCURVE",
"195 439 CURVE SMOOTH",
"203 503 OFFCURVE",
"245 532 OFFCURVE",
"301 532 CURVE SMOOTH",
"381 532 OFFCURVE",
"421 482.667 OFFCURVE",
"421 416 CURVE SMOOTH",
"421 352.293 OFFCURVE",
"381.102 301 OFFCURVE",
"343 301 CURVE SMOOTH",
"321.667 301 OFFCURVE",
"312 307.333 OFFCURVE",
"312 338 CURVE SMOOTH",
"312 343.333 OFFCURVE",
"314 348.333 OFFCURVE",
"318 353 CURVE SMOOTH",
"322 357.667 OFFCURVE",
"324 363 OFFCURVE",
"324 369 CURVE SMOOTH",
"324 391.667 OFFCURVE",
"307 405 OFFCURVE",
"283 405 CURVE SMOOTH",
"255 405 OFFCURVE",
"241 385.333 OFFCURVE",
"241 352 CURVE SMOOTH",
"241 302.037 OFFCURVE",
"283.16 270 OFFCURVE",
"328 270 CURVE SMOOTH",
"334 270 LINE",
"340 270 LINE SMOOTH",
"410.77 270 OFFCURVE",
"478 335.844 OFFCURVE",
"478 425 CURVE",
"472.667 499.667 OFFCURVE",
"441.333 545.333 OFFCURVE",
"344 568 CURVE SMOOTH",
"327.333 571.333 OFFCURVE",
"311.333 573 OFFCURVE",
"296 573 CURVE SMOOTH",
"224 573 OFFCURVE",
"158.333 545 OFFCURVE",
"121 453 CURVE SMOOTH",
"105.667 415 OFFCURVE",
"98 340.667 OFFCURVE",
"98 230 CURVE SMOOTH",
"98 110 LINE SMOOTH",
"98 44.868 OFFCURVE",
"84.187 29.295 OFFCURVE",
"18 24 CURVE",
"12 22.667 OFFCURVE",
"9 18 OFFCURVE",
"9 10 CURVE SMOOTH",
"9 2 OFFCURVE",
"12.667 -5 OFFCURVE",
"18 -5 CURVE SMOOTH",
"39.333 -5 OFFCURVE",
"60.333 -3.833 OFFCURVE",
"81 -1.5 CURVE SMOOTH",
"101.667 0.833 OFFCURVE",
"123 2 OFFCURVE",
"145 2 CURVE SMOOTH",
"166.333 2 OFFCURVE",
"187.833 0.833 OFFCURVE",
"209.5 -1.5 CURVE SMOOTH",
"231.167 -3.833 OFFCURVE",
"257 -5 OFFCURVE",
"287 -5 CURVE SMOOTH",
"295.667 -5 OFFCURVE",
"300 -0.667 OFFCURVE",
"300 8 CURVE SMOOTH",
"300 16 OFFCURVE",
"297 24 OFFCURVE",
"289 24 CURVE",
"219.162 29.587 OFFCURVE",
"190 43.075 OFFCURVE",
"190 118 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 26 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 934 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 66 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 49 106 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 49 25 49 41 49 57 49 73 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
55 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
32 928 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
52 44 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 5 230 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
61 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 513;
}
);
note = uni13B5;
},
{
glyphname = uni13B6;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"429 554 OFFCURVE",
"500.333 500 OFFCURVE",
"515 400 CURVE SMOOTH",
"515.667 394.667 OFFCURVE",
"519.667 392 OFFCURVE",
"527 392 CURVE SMOOTH",
"536.333 392 OFFCURVE",
"546 397.333 OFFCURVE",
"546 404 CURVE",
"542 436 OFFCURVE",
"538 467.333 OFFCURVE",
"538 498 CURVE SMOOTH",
"538 520.667 OFFCURVE",
"540.333 541 OFFCURVE",
"545 559 CURVE",
"545 560 LINE SMOOTH",
"545 564 OFFCURVE",
"537.667 567 OFFCURVE",
"531 567 CURVE SMOOTH",
"513.313 567 OFFCURVE",
"515.444 544 OFFCURVE",
"501 544 CURVE SMOOTH",
"494.333 544 OFFCURVE",
"484.333 547.333 OFFCURVE",
"471 554 CURVE SMOOTH",
"429.667 574 OFFCURVE",
"384 592 OFFCURVE",
"328 592 CURVE SMOOTH",
"244 592 OFFCURVE",
"170.167 564.5 OFFCURVE",
"117.5 514.5 CURVE SMOOTH",
"64.833 464.5 OFFCURVE",
"34 390 OFFCURVE",
"34 298 CURVE SMOOTH",
"34 96.667 OFFCURVE",
"135.667 -10 OFFCURVE",
"333 -10 CURVE SMOOTH",
"477.26 -10 OFFCURVE",
"586 76.847 OFFCURVE",
"586 182 CURVE SMOOTH",
"586 242 OFFCURVE",
"551.333 283.333 OFFCURVE",
"458 294 CURVE SMOOTH",
"400.394 302.229 OFFCURVE",
"387.476 296.619 OFFCURVE",
"378 344 CURVE",
"378 350.667 OFFCURVE",
"372.667 353 OFFCURVE",
"366 353 CURVE SMOOTH",
"358 353 OFFCURVE",
"351 350.667 OFFCURVE",
"351 344 CURVE SMOOTH",
"351 343 LINE",
"355 311 OFFCURVE",
"356 291.667 OFFCURVE",
"356 269 CURVE SMOOTH",
"356 246 LINE SMOOTH",
"356 230 OFFCURVE",
"355.333 211.333 OFFCURVE",
"354 190 CURVE SMOOTH",
"352.667 168.667 OFFCURVE",
"352 147.667 OFFCURVE",
"352 127 CURVE SMOOTH",
"352 121 OFFCURVE",
"356 118 OFFCURVE",
"364 118 CURVE SMOOTH",
"370.667 118 OFFCURVE",
"378 120 OFFCURVE",
"378 128 CURVE",
"382 178.667 OFFCURVE",
"400.333 217 OFFCURVE",
"443 217 CURVE SMOOTH",
"476.333 217 OFFCURVE",
"512 195.667 OFFCURVE",
"512 153 CURVE SMOOTH",
"512 75.623 OFFCURVE",
"426.232 28 OFFCURVE",
"334 28 CURVE SMOOTH",
"210 28 OFFCURVE",
"144 134 OFFCURVE",
"144 302 CURVE SMOOTH",
"144 426.453 OFFCURVE",
"201.795 554 OFFCURVE",
"325 554 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
38 28 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 934 13 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 13 106 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 13 25 13 41 13 57 13 73 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
51 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
59 929 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 8 23 8 39 8 55 8 71 8 87 8 103 8 119 8 135 8 151 8 167 8 183 8 199 8 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 8 230 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 620;
}
);
note = uni13B6;
},
{
glyphname = uni13B7;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"110 114 LINE SMOOTH",
"110 36.022 OFFCURVE",
"96.07 31.737 OFFCURVE",
"32 23 CURVE",
"25.333 22.333 OFFCURVE",
"22 17.667 OFFCURVE",
"22 9 CURVE SMOOTH",
"22 2.333 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"43.333 -5 OFFCURVE",
"57.5 -3.833 OFFCURVE",
"74.5 -1.5 CURVE SMOOTH",
"91.5 0.833 OFFCURVE",
"110.667 2 OFFCURVE",
"132 2 CURVE SMOOTH",
"152 2 OFFCURVE",
"169.667 0.833 OFFCURVE",
"185 -1.5 CURVE SMOOTH",
"200.333 -3.833 OFFCURVE",
"214.333 -5 OFFCURVE",
"227 -5 CURVE SMOOTH",
"233 -5 OFFCURVE",
"236 -0.667 OFFCURVE",
"236 8 CURVE SMOOTH",
"236 16.667 OFFCURVE",
"233.333 21.667 OFFCURVE",
"228 23 CURVE",
"168.801 31.88 OFFCURVE",
"149 37.36 OFFCURVE",
"149 114 CURVE SMOOTH",
"149 432 LINE SMOOTH",
"149 436 OFFCURVE",
"150.667 438 OFFCURVE",
"154 438 CURVE SMOOTH",
"156.667 438 OFFCURVE",
"159.333 436.667 OFFCURVE",
"162 434 CURVE",
"350 2 LINE",
"350.667 -1.333 OFFCURVE",
"355 -3 OFFCURVE",
"363 -3 CURVE SMOOTH",
"368.333 -3 OFFCURVE",
"374.667 -2 OFFCURVE",
"376 2 CURVE SMOOTH",
"392 50 OFFCURVE",
"408.667 99.333 OFFCURVE",
"426 138 CURVE SMOOTH",
"549 429 LINE",
"549 432.333 OFFCURVE",
"551.667 434 OFFCURVE",
"557 434 CURVE SMOOTH",
"561.667 434 OFFCURVE",
"564 432.333 OFFCURVE",
"564 429 CURVE SMOOTH",
"564 111 LINE SMOOTH",
"564 39.281 OFFCURVE",
"552.154 29.396 OFFCURVE",
"482 24 CURVE",
"474.667 22.667 OFFCURVE",
"471 17.333 OFFCURVE",
"471 8 CURVE SMOOTH",
"471 -0.667 OFFCURVE",
"474.667 -5 OFFCURVE",
"482 -5 CURVE SMOOTH",
"500.667 -5 OFFCURVE",
"521.5 -3.833 OFFCURVE",
"544.5 -1.5 CURVE SMOOTH",
"567.5 0.833 OFFCURVE",
"590 2 OFFCURVE",
"612 2 CURVE SMOOTH",
"632.667 2 OFFCURVE",
"653.5 0.833 OFFCURVE",
"674.5 -1.5 CURVE SMOOTH",
"695.5 -3.833 OFFCURVE",
"717 -5 OFFCURVE",
"739 -5 CURVE SMOOTH",
"747 -5 OFFCURVE",
"751 -0.667 OFFCURVE",
"751 8 CURVE SMOOTH",
"751 16 OFFCURVE",
"747.667 22.667 OFFCURVE",
"741 24 CURVE",
"669.907 29.469 OFFCURVE",
"658 38.491 OFFCURVE",
"658 111 CURVE SMOOTH",
"658 427 LINE SMOOTH",
"658 521.847 OFFCURVE",
"649.444 534.732 OFFCURVE",
"738 550 CURVE",
"743.333 550 OFFCURVE",
"747 557.333 OFFCURVE",
"747 564 CURVE SMOOTH",
"747 570.667 OFFCURVE",
"744.667 578 OFFCURVE",
"738 578 CURVE SMOOTH",
"724.927 578 OFFCURVE",
"566 574.928 OFFCURVE",
"566 566 CURVE",
"394 158 LINE",
"392.667 156 OFFCURVE",
"391.333 155 OFFCURVE",
"390 155 CURVE SMOOTH",
"388 155 OFFCURVE",
"386.667 156 OFFCURVE",
"386 158 CURVE",
"213 566 LINE",
"201.226 577.774 OFFCURVE",
"82.927 578 OFFCURVE",
"55 578 CURVE SMOOTH",
"33 578 LINE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"92.668 544.317 OFFCURVE",
"110 536.815 OFFCURVE",
"110 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
84 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 934 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 8 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
112 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
77 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
94 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
100 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
74 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
97 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
97 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
22 50 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 45 119 45 135 45 151 45 167 45 183 45 199 45 215 45 231 45 247 45 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 45 23 45 39 45 55 45 71 45 87 45 103 45 119 45 135 45 151 45 167 45 183 45 199 45 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 45 230 45 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
84 50 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 773;
}
);
note = uni13B7;
},
{
glyphname = uni13B8;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"103.492 318 OFFCURVE",
"145.439 258 OFFCURVE",
"190 258 CURVE SMOOTH",
"205.333 258 OFFCURVE",
"220.667 262 OFFCURVE",
"236 270 CURVE",
"236 131 LINE SMOOTH",
"236 59 OFFCURVE",
"210.333 34 OFFCURVE",
"141 30 CURVE",
"133 30 OFFCURVE",
"130 20.667 OFFCURVE",
"130 14 CURVE SMOOTH",
"130 4.667 OFFCURVE",
"133.667 0 OFFCURVE",
"141 0 CURVE SMOOTH",
"155.821 0 OFFCURVE",
"264.469 5 OFFCURVE",
"283 5 CURVE SMOOTH",
"307.667 5 OFFCURVE",
"329.333 4.167 OFFCURVE",
"348 2.5 CURVE SMOOTH",
"366.667 0.833 OFFCURVE",
"388 0 OFFCURVE",
"412 0 CURVE SMOOTH",
"418 0 OFFCURVE",
"421 4 OFFCURVE",
"421 12 CURVE SMOOTH",
"421 20 OFFCURVE",
"417.667 30 OFFCURVE",
"411 30 CURVE",
"338.752 32.676 OFFCURVE",
"330 55.63 OFFCURVE",
"330 131 CURVE SMOOTH",
"330 386 LINE SMOOTH",
"330 502.29 OFFCURVE",
"250.706 592 OFFCURVE",
"146 592 CURVE SMOOTH",
"74 592 OFFCURVE",
"33 562 OFFCURVE",
"33 514 CURVE SMOOTH",
"33 494 OFFCURVE",
"47.333 467 OFFCURVE",
"78 467 CURVE SMOOTH",
"104.667 467 OFFCURVE",
"122 486 OFFCURVE",
"122 506 CURVE SMOOTH",
"122 511.333 OFFCURVE",
"120 516.833 OFFCURVE",
"116 522.5 CURVE SMOOTH",
"112 528.167 OFFCURVE",
"110 533.333 OFFCURVE",
"110 538 CURVE SMOOTH",
"110 554 OFFCURVE",
"128.667 562 OFFCURVE",
"150 562 CURVE SMOOTH",
"219.622 562 OFFCURVE",
"236 505.037 OFFCURVE",
"236 429 CURVE SMOOTH",
"236 300 LINE",
"226 294 OFFCURVE",
"214.333 291 OFFCURVE",
"201 291 CURVE SMOOTH",
"174.127 291 OFFCURVE",
"165.208 333.547 OFFCURVE",
"160 370 CURVE SMOOTH",
"158.667 379.333 OFFCURVE",
"151.333 382 OFFCURVE",
"142 382 CURVE SMOOTH",
"117.774 382 OFFCURVE",
"88.463 349.463 OFFCURVE",
"73 334 CURVE SMOOTH",
"69.667 330.667 OFFCURVE",
"67 329 OFFCURVE",
"65 329 CURVE SMOOTH",
"50.088 329 OFFCURVE",
"51 374.342 OFFCURVE",
"51 402 CURVE SMOOTH",
"51 407.333 OFFCURVE",
"43.667 410 OFFCURVE",
"37 410 CURVE SMOOTH",
"30.333 410 OFFCURVE",
"23 406.667 OFFCURVE",
"23 400 CURVE SMOOTH",
"23 393.333 OFFCURVE",
"23.5 382.667 OFFCURVE",
"24.5 368 CURVE SMOOTH",
"25.5 353.333 OFFCURVE",
"26 340.667 OFFCURVE",
"26 330 CURVE SMOOTH",
"26 316.667 OFFCURVE",
"25.5 304.5 OFFCURVE",
"24.5 293.5 CURVE SMOOTH",
"23.5 282.5 OFFCURVE",
"23 272 OFFCURVE",
"23 262 CURVE SMOOTH",
"23 258 OFFCURVE",
"30.333 256 OFFCURVE",
"37 256 CURVE SMOOTH",
"45.667 256 OFFCURVE",
"50 258.333 OFFCURVE",
"50 263 CURVE",
"55.333 297.667 OFFCURVE",
"81 318 OFFCURVE",
"97 318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 932 14 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
68 934 43 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 20 22 20 38 20 54 20 70 20 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 20 101 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
51 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
96 14 68 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
87 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
87 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
63 929 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
32 98 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
74 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 74 119 74 135 74 151 74 167 74 183 74 199 74 215 74 231 74 247 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 74 23 74 39 74 55 74 71 74 87 74 103 74 119 74 135 74 151 74 167 74 183 74 199 74 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 74 230 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
96 98 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 442;
}
);
note = uni13B8;
},
{
glyphname = uni13B9;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"50 279 OFFCURVE",
"100.333 300 OFFCURVE",
"151 300 CURVE SMOOTH",
"162 300 LINE",
"114 264 OFFCURVE",
"78 214.333 OFFCURVE",
"78 133 CURVE SMOOTH",
"78 32.148 OFFCURVE",
"155.797 -7 OFFCURVE",
"231 -7 CURVE SMOOTH",
"316.686 -7 OFFCURVE",
"394 43.456 OFFCURVE",
"394 147 CURVE SMOOTH",
"394 228.036 OFFCURVE",
"338.413 288.502 OFFCURVE",
"268 321 CURVE",
"301.333 339.667 OFFCURVE",
"335.333 350 OFFCURVE",
"362 350 CURVE SMOOTH",
"423.597 350 OFFCURVE",
"441.418 250 OFFCURVE",
"495 250 CURVE SMOOTH",
"542.149 250 OFFCURVE",
"588.711 325 OFFCURVE",
"620 325 CURVE SMOOTH",
"638.667 325 OFFCURVE",
"665.333 312.667 OFFCURVE",
"684 286 CURVE",
"685.333 284.667 OFFCURVE",
"686.667 284 OFFCURVE",
"688 284 CURVE SMOOTH",
"694.667 284 OFFCURVE",
"705 292.333 OFFCURVE",
"705 299 CURVE SMOOTH",
"705 300.333 OFFCURVE",
"704.333 301.667 OFFCURVE",
"703 303 CURVE",
"679.39 335.464 OFFCURVE",
"641.063 388 OFFCURVE",
"600 388 CURVE SMOOTH",
"566.21 388 OFFCURVE",
"538.777 332 OFFCURVE",
"502 332 CURVE SMOOTH",
"452.912 332 OFFCURVE",
"413 386.823 OFFCURVE",
"413 451 CURVE SMOOTH",
"413 524.912 OFFCURVE",
"422.356 544.693 OFFCURVE",
"494 550 CURVE",
"500.667 550 OFFCURVE",
"503 558 OFFCURVE",
"503 566 CURVE SMOOTH",
"503 572.667 OFFCURVE",
"501.667 578 OFFCURVE",
"495 578 CURVE SMOOTH",
"471 578 OFFCURVE",
"449.667 577.167 OFFCURVE",
"431 575.5 CURVE SMOOTH",
"412.333 573.833 OFFCURVE",
"390.667 573 OFFCURVE",
"366 573 CURVE SMOOTH",
"345.333 573 OFFCURVE",
"323.5 573.833 OFFCURVE",
"300.5 575.5 CURVE SMOOTH",
"277.5 577.167 OFFCURVE",
"256.667 578 OFFCURVE",
"238 578 CURVE SMOOTH",
"231.333 578 OFFCURVE",
"228 570.667 OFFCURVE",
"228 564 CURVE SMOOTH",
"228 557.333 OFFCURVE",
"231.333 550 OFFCURVE",
"238 550 CURVE",
"312.464 544.484 OFFCURVE",
"322 512.11 OFFCURVE",
"322 422 CURVE SMOOTH",
"322 395.333 OFFCURVE",
"318 376.667 OFFCURVE",
"302 370 CURVE SMOOTH",
"290 364.667 OFFCURVE",
"277 359.333 OFFCURVE",
"263 354 CURVE SMOOTH",
"249 348.667 OFFCURVE",
"235 342.333 OFFCURVE",
"221 335 CURVE",
"203 339.667 OFFCURVE",
"184.667 342 OFFCURVE",
"166 342 CURVE SMOOTH",
"108.667 342 OFFCURVE",
"47.667 322 OFFCURVE",
"1 262 CURVE",
"-0.333 259.333 OFFCURVE",
"-1 257.667 OFFCURVE",
"-1 257 CURVE SMOOTH",
"-1 250.333 OFFCURVE",
"6.333 245 OFFCURVE",
"13 245 CURVE SMOOTH",
"15 245 OFFCURVE",
"16.667 245.667 OFFCURVE",
"18 247 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 63 OFFCURVE",
"278 20 OFFCURVE",
"234 20 CURVE SMOOTH",
"194 20 OFFCURVE",
"160 60 OFFCURVE",
"160 136 CURVE SMOOTH",
"160 204 OFFCURVE",
"187 252.667 OFFCURVE",
"223 286 CURVE",
"273.667 267.333 OFFCURVE",
"308 223 OFFCURVE",
"308 139 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
112 934 99 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
89 934 106 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 89 118 89 134 89 150 89 166 89 182 89 198 89 214 89 230 89 246 89 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 89 22 89 38 89 54 89 70 89 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 89 101 89 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 106 89 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 18 106 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 18 25 18 41 18 57 18 73 18 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
84 99 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
102 99 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 112 22 112 38 112 54 112 70 112 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 112 101 112 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
94 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
29 929 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 931 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 931 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 928 102 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
84 76 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
115 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 115 119 115 135 115 151 115 167 115 183 115 199 115 215 115 231 115 247 115 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 115 23 115 39 115 55 115 71 115 87 115 103 115 119 115 135 115 151 115 167 115 183 115 199 115 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 115 230 115 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 711;
}
);
note = uni13B9;
},
{
glyphname = uni13BA;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"427 378 OFFCURVE",
"408.167 456.5 OFFCURVE",
"375.5 510.5 CURVE SMOOTH",
"342.833 564.5 OFFCURVE",
"297 592 OFFCURVE",
"245 592 CURVE SMOOTH",
"182.333 592 OFFCURVE",
"129.333 561 OFFCURVE",
"92 509 CURVE SMOOTH",
"54.667 457 OFFCURVE",
"34 383 OFFCURVE",
"34 295 CURVE SMOOTH",
"34 91 OFFCURVE",
"109.667 -8 OFFCURVE",
"235 -8 CURVE SMOOTH",
"302.839 -8 OFFCURVE",
"384.098 83.558 OFFCURVE",
"418 178 CURVE",
"434.114 197.136 OFFCURVE",
"465.243 233.014 OFFCURVE",
"482.5 255.5 CURVE SMOOTH",
"504.5 284.167 OFFCURVE",
"526.333 317 OFFCURVE",
"549 361 CURVE",
"549 0 LINE",
"559.667 -4 OFFCURVE",
"570.667 -5 OFFCURVE",
"584 -5 CURVE SMOOTH",
"610.667 -5 OFFCURVE",
"637.667 0.667 OFFCURVE",
"643 10 CURVE",
"643 578 LINE",
"635 586 OFFCURVE",
"611.667 592 OFFCURVE",
"589 592 CURVE SMOOTH",
"573 592 OFFCURVE",
"558 589 OFFCURVE",
"550 581 CURVE",
"550 438.934 OFFCURVE",
"499.192 337.854 OFFCURVE",
"438 267 CURVE",
"436 265 OFFCURVE",
"434 264 OFFCURVE",
"432 264 CURVE SMOOTH",
"428.667 264 OFFCURVE",
"427 267.333 OFFCURVE",
"427 274 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"161.583 28 OFFCURVE",
"144 167.252 OFFCURVE",
"144 292 CURVE SMOOTH",
"144 410.895 OFFCURVE",
"169.042 556 OFFCURVE",
"244 556 CURVE SMOOTH",
"274.667 556 OFFCURVE",
"303.5 536.667 OFFCURVE",
"325.5 494 CURVE SMOOTH",
"347.5 451.333 OFFCURVE",
"361 384.333 OFFCURVE",
"361 291 CURVE SMOOTH",
"361 134.358 OFFCURVE",
"309.881 28 OFFCURVE",
"237 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 934 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 934 22 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 51 106 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 51 25 51 41 51 57 51 73 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 61 22 61 38 61 54 61 70 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 61 101 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 929 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 46 23 46 39 46 55 46 71 46 87 46 103 46 119 46 135 46 151 46 167 46 183 46 199 46 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 46 230 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 698;
}
);
note = uni13BA;
},
{
glyphname = uni13BB;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"226 314 LINE SMOOTH",
"213.333 314 OFFCURVE",
"207 319.333 OFFCURVE",
"207 330 CURVE SMOOTH",
"207 447 LINE SMOOTH",
"207 522.89 OFFCURVE",
"218.23 544.633 OFFCURVE",
"288 550 CURVE",
"294.667 550 OFFCURVE",
"299 558.333 OFFCURVE",
"299 565 CURVE SMOOTH",
"299 573.667 OFFCURVE",
"295.667 578 OFFCURVE",
"289 578 CURVE SMOOTH",
"265 578 OFFCURVE",
"243.667 577.167 OFFCURVE",
"225 575.5 CURVE SMOOTH",
"206.333 573.833 OFFCURVE",
"185 573 OFFCURVE",
"161 573 CURVE SMOOTH",
"140.333 573 OFFCURVE",
"118.333 573.833 OFFCURVE",
"95 575.5 CURVE SMOOTH",
"71.667 577.167 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH",
"114 111 LINE SMOOTH",
"114 37.423 OFFCURVE",
"102.354 31.118 OFFCURVE",
"32 23 CURVE SMOOTH",
"25.333 22.333 OFFCURVE",
"22 17.333 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"203.333 0.833 OFFCURVE",
"224 -1.5 CURVE SMOOTH",
"244.667 -3.833 OFFCURVE",
"266.333 -5 OFFCURVE",
"289 -5 CURVE SMOOTH",
"297 -5 OFFCURVE",
"301 -0.667 OFFCURVE",
"301 8 CURVE SMOOTH",
"301 16.667 OFFCURVE",
"297.333 21.667 OFFCURVE",
"290 23 CURVE",
"221.205 30.938 OFFCURVE",
"207 37.879 OFFCURVE",
"207 111 CURVE SMOOTH",
"207 258 LINE SMOOTH",
"207 269.333 OFFCURVE",
"213.333 275 OFFCURVE",
"226 275 CURVE SMOOTH",
"482 275 LINE SMOOTH",
"494.667 275 OFFCURVE",
"501 267.667 OFFCURVE",
"501 253 CURVE SMOOTH",
"501 111 LINE SMOOTH",
"501 36.676 OFFCURVE",
"489.338 30.926 OFFCURVE",
"418 23 CURVE",
"411.333 21.667 OFFCURVE",
"408 16.667 OFFCURVE",
"408 8 CURVE SMOOTH",
"408 -0.667 OFFCURVE",
"411.333 -5 OFFCURVE",
"418 -5 CURVE SMOOTH",
"437.333 -5 OFFCURVE",
"458.5 -3.833 OFFCURVE",
"481.5 -1.5 CURVE SMOOTH",
"504.5 0.833 OFFCURVE",
"527 2 OFFCURVE",
"549 2 CURVE SMOOTH",
"569 2 OFFCURVE",
"589.5 0.833 OFFCURVE",
"610.5 -1.5 CURVE SMOOTH",
"631.5 -3.833 OFFCURVE",
"653.333 -5 OFFCURVE",
"676 -5 CURVE SMOOTH",
"684 -5 OFFCURVE",
"688 -0.667 OFFCURVE",
"688 8 CURVE SMOOTH",
"688 16.667 OFFCURVE",
"684.333 21.667 OFFCURVE",
"677 23 CURVE",
"608.205 30.938 OFFCURVE",
"594 37.879 OFFCURVE",
"594 111 CURVE SMOOTH",
"594 447 LINE SMOOTH",
"594 522.89 OFFCURVE",
"605.23 544.633 OFFCURVE",
"675 550 CURVE",
"681.667 550 OFFCURVE",
"686 558 OFFCURVE",
"686 566 CURVE SMOOTH",
"686 572.667 OFFCURVE",
"682.667 578 OFFCURVE",
"676 578 CURVE SMOOTH",
"652 578 OFFCURVE",
"630.833 577.167 OFFCURVE",
"612.5 575.5 CURVE SMOOTH",
"594.167 573.833 OFFCURVE",
"572.667 573 OFFCURVE",
"548 573 CURVE SMOOTH",
"527.333 573 OFFCURVE",
"505.333 573.833 OFFCURVE",
"482 575.5 CURVE SMOOTH",
"458.667 577.167 OFFCURVE",
"437.667 578 OFFCURVE",
"419 578 CURVE SMOOTH",
"412.333 578 OFFCURVE",
"410 570.667 OFFCURVE",
"410 564 CURVE SMOOTH",
"410 557.333 OFFCURVE",
"412.333 550 OFFCURVE",
"419 550 CURVE",
"488.866 544.825 OFFCURVE",
"501 518.101 OFFCURVE",
"501 447 CURVE SMOOTH",
"501 330 LINE SMOOTH",
"501 316.667 OFFCURVE",
"494 314 OFFCURVE",
"482 314 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
64 81 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
33 50 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
88 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
116 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
73 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
73 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 929 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 928 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
103 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
106 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
111 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 710;
}
);
note = uni13BB;
},
{
glyphname = uni13BC;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"191 349.145 OFFCURVE",
"163.84 300 OFFCURVE",
"113 300 CURVE SMOOTH",
"86.333 300 OFFCURVE",
"85 315.667 OFFCURVE",
"85 325 CURVE SMOOTH",
"85 330.333 OFFCURVE",
"86.167 334.667 OFFCURVE",
"88.5 338 CURVE SMOOTH",
"90.833 341.333 OFFCURVE",
"92 346.667 OFFCURVE",
"92 354 CURVE SMOOTH",
"92 370 OFFCURVE",
"75.333 379 OFFCURVE",
"58 379 CURVE SMOOTH",
"35.333 379 OFFCURVE",
"13 365 OFFCURVE",
"13 325 CURVE SMOOTH",
"13 294.995 OFFCURVE",
"38.084 264 OFFCURVE",
"94 264 CURVE SMOOTH",
"176.151 264 OFFCURVE",
"207.332 346 OFFCURVE",
"270 346 CURVE SMOOTH",
"360.978 346 OFFCURVE",
"402 265.553 OFFCURVE",
"402 190 CURVE SMOOTH",
"402 109.201 OFFCURVE",
"360.672 19 OFFCURVE",
"286 19 CURVE SMOOTH",
"266.667 19 OFFCURVE",
"251.833 21.5 OFFCURVE",
"241.5 26.5 CURVE SMOOTH",
"231.167 31.5 OFFCURVE",
"226 36.667 OFFCURVE",
"226 42 CURVE SMOOTH",
"226 47.333 OFFCURVE",
"227.833 52.667 OFFCURVE",
"231.5 58 CURVE SMOOTH",
"235.167 63.333 OFFCURVE",
"237 69 OFFCURVE",
"237 75 CURVE SMOOTH",
"237 96.333 OFFCURVE",
"215.667 114 OFFCURVE",
"193 114 CURVE SMOOTH",
"165 114 OFFCURVE",
"147 92.667 OFFCURVE",
"147 62 CURVE SMOOTH",
"147 9.018 OFFCURVE",
"223.564 -11 OFFCURVE",
"286 -11 CURVE SMOOTH",
"377.004 -11 OFFCURVE",
"499 49.277 OFFCURVE",
"499 185 CURVE SMOOTH",
"499 305.092 OFFCURVE",
"417.547 359.158 OFFCURVE",
"332 375 CURVE SMOOTH",
"299.107 381.579 OFFCURVE",
"282 396.982 OFFCURVE",
"282 451 CURVE SMOOTH",
"282 524.912 OFFCURVE",
"291.356 544.693 OFFCURVE",
"363 550 CURVE",
"369.667 550 OFFCURVE",
"373 559 OFFCURVE",
"373 567 CURVE SMOOTH",
"373 574.333 OFFCURVE",
"370 578 OFFCURVE",
"364 578 CURVE SMOOTH",
"340 578 OFFCURVE",
"318.667 577.167 OFFCURVE",
"300 575.5 CURVE SMOOTH",
"281.333 573.833 OFFCURVE",
"259.667 573 OFFCURVE",
"235 573 CURVE SMOOTH",
"214.333 573 OFFCURVE",
"192.333 573.833 OFFCURVE",
"169 575.5 CURVE SMOOTH",
"145.667 577.167 OFFCURVE",
"125 578 OFFCURVE",
"107 578 CURVE SMOOTH",
"100.333 578 OFFCURVE",
"97 570.667 OFFCURVE",
"97 564 CURVE SMOOTH",
"97 557.333 OFFCURVE",
"100.333 550 OFFCURVE",
"107 550 CURVE",
"175.722 544.714 OFFCURVE",
"191 518.036 OFFCURVE",
"191 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 934 79 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 934 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 64 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 56 22 56 38 56 54 56 70 56 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 56 101 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
0 47 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
53 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 64 106 64 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 64 121 64 137 64 153 64 169 64 185 64 201 64 217 64 233 64 249 64 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 64 25 64 41 64 57 64 73 64 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 88 118 88 134 88 150 88 166 88 182 88 198 88 214 88 230 88 246 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 88 22 88 38 88 54 88 70 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 88 101 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
82 74 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 50 23 50 39 50 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 50 70 50 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 59 230 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
91 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 530;
}
);
note = uni13BC;
},
{
glyphname = uni13BD;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"319.812 308.188 OFFCURVE",
"288.003 498.321 OFFCURVE",
"199 569 CURVE",
"191.94 576.06 OFFCURVE",
"112.729 577 OFFCURVE",
"86 577 CURVE SMOOTH",
"82 577 OFFCURVE",
"75 566 OFFCURVE",
"75 558 CURVE SMOOTH",
"75 553.333 OFFCURVE",
"77 550.667 OFFCURVE",
"81 550 CURVE",
"136.586 530.382 OFFCURVE",
"193.381 436.43 OFFCURVE",
"215 379.5 CURVE SMOOTH",
"235 326.833 OFFCURVE",
"257 273.167 OFFCURVE",
"285 224.5 CURVE SMOOTH",
"299 200.167 OFFCURVE",
"316 178.667 OFFCURVE",
"336 160 CURVE",
"339.333 158 OFFCURVE",
"341 154.667 OFFCURVE",
"341 150 CURVE SMOOTH",
"341 144.667 OFFCURVE",
"339 138 OFFCURVE",
"335 130 CURVE",
"311 76.667 OFFCURVE",
"270 37 OFFCURVE",
"206 37 CURVE SMOOTH",
"156.974 37 OFFCURVE",
"115 92.726 OFFCURVE",
"115 162 CURVE SMOOTH",
"115 199.333 OFFCURVE",
"144 207.333 OFFCURVE",
"192 214 CURVE",
"200 214 OFFCURVE",
"202 220.667 OFFCURVE",
"202 226 CURVE SMOOTH",
"202 234 OFFCURVE",
"199.333 238 OFFCURVE",
"194 238 CURVE SMOOTH",
"173.333 238 OFFCURVE",
"156.167 237.333 OFFCURVE",
"142.5 236 CURVE SMOOTH",
"128.833 234.667 OFFCURVE",
"113.667 234 OFFCURVE",
"97 234 CURVE SMOOTH",
"81.667 234 OFFCURVE",
"66.667 234.667 OFFCURVE",
"52 236 CURVE SMOOTH",
"37.333 237.333 OFFCURVE",
"19 238 OFFCURVE",
"-3 238 CURVE SMOOTH",
"-9 238 OFFCURVE",
"-12 234 OFFCURVE",
"-12 226 CURVE SMOOTH",
"-12 220.667 OFFCURVE",
"-7.333 214 OFFCURVE",
"-2 214 CURVE",
"26 207.333 OFFCURVE",
"31.667 174.333 OFFCURVE",
"41 125 CURVE SMOOTH",
"58.333 35.667 OFFCURVE",
"100 -11 OFFCURVE",
"196 -11 CURVE SMOOTH",
"253.333 -11 OFFCURVE",
"307.333 28.333 OFFCURVE",
"354 87 CURVE SMOOTH",
"377.333 116.333 OFFCURVE",
"399 149 OFFCURVE",
"419 185 CURVE SMOOTH",
"459 257 OFFCURVE",
"490.333 332.667 OFFCURVE",
"513 398 CURVE SMOOTH",
"524.333 430.667 OFFCURVE",
"533.333 458 OFFCURVE",
"540 480 CURVE SMOOTH",
"554.063 529.22 OFFCURVE",
"565.507 546.728 OFFCURVE",
"600 553 CURVE",
"605.333 554.333 OFFCURVE",
"610 560.667 OFFCURVE",
"610 566 CURVE SMOOTH",
"610 571.333 OFFCURVE",
"606.333 578 OFFCURVE",
"601 578 CURVE SMOOTH",
"589 578 OFFCURVE",
"575.5 577.333 OFFCURVE",
"560.5 576 CURVE SMOOTH",
"545.5 574.667 OFFCURVE",
"531.667 574 OFFCURVE",
"519 574 CURVE SMOOTH",
"507.667 574 OFFCURVE",
"493.833 574.667 OFFCURVE",
"477.5 576 CURVE SMOOTH",
"461.167 577.333 OFFCURVE",
"447 578 OFFCURVE",
"435 578 CURVE SMOOTH",
"429.667 578 OFFCURVE",
"426 571.333 OFFCURVE",
"426 566 CURVE SMOOTH",
"426 558 OFFCURVE",
"428.667 553.333 OFFCURVE",
"434 552 CURVE",
"468.667 548 OFFCURVE",
"499 535.667 OFFCURVE",
"499 505 CURVE SMOOTH",
"499 501.667 OFFCURVE",
"498.333 496.667 OFFCURVE",
"497 490 CURVE SMOOTH",
"477 404.667 OFFCURVE",
"440.667 317 OFFCURVE",
"402 245 CURVE SMOOTH",
"400 241 OFFCURVE",
"397 239 OFFCURVE",
"393 239 CURVE SMOOTH",
"390.333 239 OFFCURVE",
"387.333 240.667 OFFCURVE",
"384 244 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
71 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 71 119 71 135 71 151 71 167 71 183 71 199 71 215 71 231 71 247 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 71 23 71 39 71 55 71 71 71 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 71 102 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 607;
}
);
note = uni13BD;
},
{
glyphname = uni13BE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"398.333 -8 OFFCURVE",
"471 19 OFFCURVE",
"523 71 CURVE SMOOTH",
"575 123 OFFCURVE",
"608 199.333 OFFCURVE",
"608 298 CURVE SMOOTH",
"608 387.333 OFFCURVE",
"578.667 461.333 OFFCURVE",
"528 512 CURVE SMOOTH",
"477.333 562.667 OFFCURVE",
"407 592 OFFCURVE",
"323 592 CURVE SMOOTH",
"239 592 OFFCURVE",
"165.667 561 OFFCURVE",
"115 509 CURVE SMOOTH",
"64.333 457 OFFCURVE",
"34 383 OFFCURVE",
"34 295 CURVE SMOOTH",
"34 93.667 OFFCURVE",
"141 -8 OFFCURVE",
"321 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"188.204 28 OFFCURVE",
"146.768 140.809 OFFCURVE",
"144 282 CURVE",
"498 282 LINE",
"495.402 152.107 OFFCURVE",
"434.324 28 OFFCURVE",
"324 28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"442.801 556 OFFCURVE",
"489.664 446.042 OFFCURVE",
"498 321 CURVE",
"145 321 LINE",
"150.478 444.263 OFFCURVE",
"206.256 556 OFFCURVE",
"321 556 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 928 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 18 230 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 642;
}
);
note = uni13BE;
},
{
glyphname = uni13BF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"156.333 -219 OFFCURVE",
"155 -222 OFFCURVE",
"155 -226 CURVE SMOOTH",
"155 -234 OFFCURVE",
"158.667 -238 OFFCURVE",
"166 -238 CURVE",
"211.333 -227.333 OFFCURVE",
"266.167 -196.167 OFFCURVE",
"309.5 -139.5 CURVE SMOOTH",
"352.833 -82.833 OFFCURVE",
"384 -0.667 OFFCURVE",
"384 114 CURVE SMOOTH",
"384 123.333 OFFCURVE",
"387.167 131 OFFCURVE",
"393.5 137 CURVE SMOOTH",
"399.833 143 OFFCURVE",
"415.333 146.667 OFFCURVE",
"440 148 CURVE",
"448 148 OFFCURVE",
"451 158 OFFCURVE",
"451 166 CURVE SMOOTH",
"451 178.667 OFFCURVE",
"448 185 OFFCURVE",
"442 185 CURVE",
"419.158 183.656 OFFCURVE",
"356.433 182 OFFCURVE",
"334 182 CURVE SMOOTH",
"316 182 LINE",
"267 182 LINE SMOOTH",
"259 182 OFFCURVE",
"255 174 OFFCURVE",
"255 166 CURVE SMOOTH",
"255 158 OFFCURVE",
"260.667 149 OFFCURVE",
"266 149 CURVE",
"300.751 146.518 OFFCURVE",
"307 124.6 OFFCURVE",
"307 99 CURVE SMOOTH",
"307 68.333 OFFCURVE",
"284.667 38 OFFCURVE",
"234 38 CURVE SMOOTH",
"196.667 38 OFFCURVE",
"184 67.667 OFFCURVE",
"184 133 CURVE SMOOTH",
"184 399 LINE SMOOTH",
"184 410.333 OFFCURVE",
"184.333 417 OFFCURVE",
"185 419 CURVE SMOOTH",
"185.667 421 OFFCURVE",
"187.667 422 OFFCURVE",
"191 422 CURVE SMOOTH",
"275 422 LINE SMOOTH",
"284.333 422 OFFCURVE",
"286 431.333 OFFCURVE",
"286 442 CURVE SMOOTH",
"286 452.667 OFFCURVE",
"283.333 463 OFFCURVE",
"278 463 CURVE SMOOTH",
"194 463 LINE SMOOTH",
"191.333 463 OFFCURVE",
"189 463.833 OFFCURVE",
"187 465.5 CURVE SMOOTH",
"185 467.167 OFFCURVE",
"184 471.667 OFFCURVE",
"184 479 CURVE SMOOTH",
"184 584 LINE SMOOTH",
"184 587.333 OFFCURVE",
"179.333 589 OFFCURVE",
"170 589 CURVE SMOOTH",
"148.008 589 OFFCURVE",
"92.661 579.304 OFFCURVE",
"90 566 CURVE",
"90 482 LINE SMOOTH",
"90 475.333 OFFCURVE",
"88 462 OFFCURVE",
"72 462 CURVE SMOOTH",
"14 462 LINE SMOOTH",
"10 462 OFFCURVE",
"8 455 OFFCURVE",
"8 447 CURVE SMOOTH",
"8 436.333 OFFCURVE",
"11.667 423 OFFCURVE",
"17 423 CURVE SMOOTH",
"75 423 LINE SMOOTH",
"89.667 423 OFFCURVE",
"90 411 OFFCURVE",
"90 395 CURVE SMOOTH",
"90 100 LINE SMOOTH",
"90 20 OFFCURVE",
"136.667 -8 OFFCURVE",
"218 -8 CURVE SMOOTH",
"238.311 -8 OFFCURVE",
"283.098 1.54 OFFCURVE",
"301 22 CURVE",
"285.991 -68.056 OFFCURVE",
"223.917 -179.132 OFFCURVE",
"159 -217 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
93 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 58 25 58 41 58 57 58 73 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
84 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 13 84 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 928 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
76 929 81 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
55 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 55 119 55 135 55 151 55 167 55 183 55 199 55 215 55 231 55 247 55 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 55 23 55 39 55 55 55 71 55 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 55 102 55 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
5 10 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 460;
}
);
note = uni13BF;
},
{
glyphname = uni13C0;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"563 147 LINE SMOOTH",
"563 191.514 OFFCURVE",
"566.09 205.435 OFFCURVE",
"614 213 CURVE",
"620.667 213.667 OFFCURVE",
"624 218 OFFCURVE",
"624 226 CURVE SMOOTH",
"624 231.333 OFFCURVE",
"621.333 238 OFFCURVE",
"616 238 CURVE SMOOTH",
"580.818 238 OFFCURVE",
"540.572 234 OFFCURVE",
"515 234 CURVE SMOOTH",
"498.333 234 OFFCURVE",
"479.333 234.667 OFFCURVE",
"458 236 CURVE SMOOTH",
"436.667 237.333 OFFCURVE",
"416 238 OFFCURVE",
"396 238 CURVE SMOOTH",
"389.333 238 OFFCURVE",
"387 231.333 OFFCURVE",
"387 226 CURVE SMOOTH",
"387 217.333 OFFCURVE",
"390.667 213 OFFCURVE",
"398 213 CURVE",
"466.067 204.832 OFFCURVE",
"482 201.722 OFFCURVE",
"482 134 CURVE SMOOTH",
"482 46.966 OFFCURVE",
"424.664 26 OFFCURVE",
"334 26 CURVE SMOOTH",
"204.28 26 OFFCURVE",
"144 144.286 OFFCURVE",
"144 302 CURVE SMOOTH",
"144 428.579 OFFCURVE",
"201.824 554 OFFCURVE",
"332 554 CURVE SMOOTH",
"440 554 OFFCURVE",
"511 500 OFFCURVE",
"527 400 CURVE",
"527.667 394 OFFCURVE",
"531.667 391 OFFCURVE",
"539 391 CURVE SMOOTH",
"547 391 OFFCURVE",
"557 397.333 OFFCURVE",
"557 404 CURVE",
"555.667 420.667 OFFCURVE",
"554.333 437.167 OFFCURVE",
"553 453.5 CURVE SMOOTH",
"551.667 469.833 OFFCURVE",
"551 485.667 OFFCURVE",
"551 501 CURVE SMOOTH",
"551 511.667 OFFCURVE",
"551.833 521.833 OFFCURVE",
"553.5 531.5 CURVE SMOOTH",
"555.167 541.167 OFFCURVE",
"556 550.667 OFFCURVE",
"556 560 CURVE SMOOTH",
"556 564.667 OFFCURVE",
"551.667 567 OFFCURVE",
"543 567 CURVE SMOOTH",
"527.536 567 OFFCURVE",
"527.657 544 OFFCURVE",
"513 544 CURVE SMOOTH",
"506.333 544 OFFCURVE",
"496.333 547.333 OFFCURVE",
"483 554 CURVE SMOOTH",
"440.333 575.333 OFFCURVE",
"391 592 OFFCURVE",
"335 592 CURVE SMOOTH",
"248.333 592 OFFCURVE",
"173.5 564.833 OFFCURVE",
"119.5 513.5 CURVE SMOOTH",
"65.5 462.167 OFFCURVE",
"34 385.333 OFFCURVE",
"34 288 CURVE SMOOTH",
"34 97.333 OFFCURVE",
"137 -10 OFFCURVE",
"325 -10 CURVE SMOOTH",
"445.279 -10 OFFCURVE",
"493.171 9.133 OFFCURVE",
"559 60 CURVE",
"561.667 60.667 OFFCURVE",
"563 63.333 OFFCURVE",
"563 68 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
84 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 46 22 46 38 46 54 46 70 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 46 101 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 929 41 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 51 230 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 642;
}
);
note = uni13C0;
},
{
glyphname = uni13C1;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"52.626 168 OFFCURVE",
"19 139.32 OFFCURVE",
"19 91 CURVE SMOOTH",
"19 40.865 OFFCURVE",
"61.156 -10 OFFCURVE",
"154 -10 CURVE SMOOTH",
"297.27 -10 OFFCURVE",
"310.878 122.343 OFFCURVE",
"323.5 271 CURVE SMOOTH",
"336.063 418.969 OFFCURVE",
"350.529 552 OFFCURVE",
"494 552 CURVE SMOOTH",
"558.359 552 OFFCURVE",
"590 506.979 OFFCURVE",
"590 407 CURVE SMOOTH",
"590 108 LINE SMOOTH",
"590 36.912 OFFCURVE",
"577.983 31.278 OFFCURVE",
"509 23 CURVE SMOOTH",
"501.667 22.333 OFFCURVE",
"498 17.333 OFFCURVE",
"498 8 CURVE SMOOTH",
"498 -0.667 OFFCURVE",
"501.667 -5 OFFCURVE",
"509 -5 CURVE SMOOTH",
"527.667 -5 OFFCURVE",
"548.333 -3.833 OFFCURVE",
"571 -1.5 CURVE SMOOTH",
"593.667 0.833 OFFCURVE",
"616 2 OFFCURVE",
"638 2 CURVE SMOOTH",
"658 2 OFFCURVE",
"678.5 0.833 OFFCURVE",
"699.5 -1.5 CURVE SMOOTH",
"720.5 -3.833 OFFCURVE",
"742.667 -5 OFFCURVE",
"766 -5 CURVE SMOOTH",
"774 -5 OFFCURVE",
"778 -0.667 OFFCURVE",
"778 8 CURVE SMOOTH",
"778 16.667 OFFCURVE",
"774 21.667 OFFCURVE",
"766 23 CURVE",
"697.382 30.918 OFFCURVE",
"683 37.278 OFFCURVE",
"683 108 CURVE SMOOTH",
"683 422 LINE SMOOTH",
"683 553.696 OFFCURVE",
"615.203 592 OFFCURVE",
"517 592 CURVE SMOOTH",
"347.794 592 OFFCURVE",
"304.266 461.456 OFFCURVE",
"287 307.5 CURVE SMOOTH",
"272.249 175.968 OFFCURVE",
"275.105 23 OFFCURVE",
"173 23 CURVE SMOOTH",
"121 23 OFFCURVE",
"108 49.333 OFFCURVE",
"108 76 CURVE SMOOTH",
"108 100.123 OFFCURVE",
"130 103.147 OFFCURVE",
"130 132 CURVE SMOOTH",
"130 152 OFFCURVE",
"113.333 168 OFFCURVE",
"84 168 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 934 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 8 22 8 38 8 54 8 70 8 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 8 101 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 928 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
7 0 23 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 3 values pushed */
39 0 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 0 70 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 11 230 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 799;
}
);
note = uni13C1;
},
{
glyphname = uni13C2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"100 111 LINE SMOOTH",
"100 38.01 OFFCURVE",
"92.364 35.061 OFFCURVE",
"26 24 CURVE SMOOTH",
"18 22.667 OFFCURVE",
"16 16 OFFCURVE",
"16 8 CURVE SMOOTH",
"16 -0.667 OFFCURVE",
"19.333 -5 OFFCURVE",
"26 -5 CURVE SMOOTH",
"44.667 -5 OFFCURVE",
"64 -3.833 OFFCURVE",
"84 -1.5 CURVE SMOOTH",
"104 0.833 OFFCURVE",
"125 2 OFFCURVE",
"147 2 CURVE SMOOTH",
"167.667 2 OFFCURVE",
"187 0.833 OFFCURVE",
"205 -1.5 CURVE SMOOTH",
"223 -3.833 OFFCURVE",
"243.333 -5 OFFCURVE",
"266 -5 CURVE SMOOTH",
"274 -5 OFFCURVE",
"278 -0.667 OFFCURVE",
"278 8 CURVE SMOOTH",
"278 17.333 OFFCURVE",
"274.333 22.667 OFFCURVE",
"267 24 CURVE",
"203.959 29.482 OFFCURVE",
"193 41.275 OFFCURVE",
"193 111 CURVE SMOOTH",
"193 261 LINE",
"215.667 279.667 OFFCURVE",
"253 298 OFFCURVE",
"305 298 CURVE SMOOTH",
"367.667 298 OFFCURVE",
"394 243 OFFCURVE",
"394 163 CURVE SMOOTH",
"394 110 LINE SMOOTH",
"394 42.267 OFFCURVE",
"386.457 29.943 OFFCURVE",
"330 24 CURVE",
"322 22.667 OFFCURVE",
"319 16 OFFCURVE",
"319 8 CURVE SMOOTH",
"319 0 OFFCURVE",
"322.667 -4 OFFCURVE",
"330 -4 CURVE SMOOTH",
"348.667 -4 OFFCURVE",
"367.5 -3 OFFCURVE",
"386.5 -1 CURVE SMOOTH",
"405.5 1 OFFCURVE",
"425.667 2 OFFCURVE",
"447 2 CURVE SMOOTH",
"466.333 2 OFFCURVE",
"484.833 1 OFFCURVE",
"502.5 -1 CURVE SMOOTH",
"520.167 -3 OFFCURVE",
"536.333 -4 OFFCURVE",
"551 -4 CURVE SMOOTH",
"558.333 -4 OFFCURVE",
"562 0 OFFCURVE",
"562 8 CURVE SMOOTH",
"562 17.333 OFFCURVE",
"558.333 22.667 OFFCURVE",
"551 24 CURVE",
"498.86 29.793 OFFCURVE",
"488 43.166 OFFCURVE",
"488 110 CURVE SMOOTH",
"488 189 LINE SMOOTH",
"488 293 OFFCURVE",
"431 350 OFFCURVE",
"319 350 CURVE SMOOTH",
"278.827 350 OFFCURVE",
"218.419 326.419 OFFCURVE",
"193 301 CURVE",
"193 447 LINE SMOOTH",
"193 523.412 OFFCURVE",
"201.472 544.628 OFFCURVE",
"274 550 CURVE",
"279.333 550 OFFCURVE",
"283 558 OFFCURVE",
"283 566 CURVE SMOOTH",
"283 572.667 OFFCURVE",
"280.667 578 OFFCURVE",
"274 578 CURVE SMOOTH",
"250.667 578 OFFCURVE",
"229.833 577.167 OFFCURVE",
"211.5 575.5 CURVE SMOOTH",
"193.167 573.833 OFFCURVE",
"171.333 573 OFFCURVE",
"146 573 CURVE SMOOTH",
"125.333 573 OFFCURVE",
"104.833 573.833 OFFCURVE",
"84.5 575.5 CURVE SMOOTH",
"64.167 577.167 OFFCURVE",
"44.667 578 OFFCURVE",
"26 578 CURVE SMOOTH",
"20.667 578 OFFCURVE",
"17 570.667 OFFCURVE",
"17 564 CURVE SMOOTH",
"17 557.333 OFFCURVE",
"20.667 550 OFFCURVE",
"26 550 CURVE",
"87.891 541.927 OFFCURVE",
"100 516.485 OFFCURVE",
"100 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
71 88 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 934 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 0 78 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
80 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
86 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 931 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 67 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = uni13C2;
},
{
glyphname = uni13C3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"465 168.333 OFFCURVE",
"458 174 OFFCURVE",
"450 174 CURVE SMOOTH",
"444.667 174 OFFCURVE",
"434 172.333 OFFCURVE",
"434 163 CURVE",
"405.207 50.445 OFFCURVE",
"381.282 37 OFFCURVE",
"270 37 CURVE SMOOTH",
"154 37 LINE SMOOTH",
"148 37 OFFCURVE",
"145 40.333 OFFCURVE",
"145 47 CURVE SMOOTH",
"145 49.667 OFFCURVE",
"146 52.667 OFFCURVE",
"148 56 CURVE SMOOTH",
"442 545 LINE",
"444.667 548.333 OFFCURVE",
"446 552.333 OFFCURVE",
"446 557 CURVE SMOOTH",
"446 567.667 OFFCURVE",
"440.667 573 OFFCURVE",
"430 573 CURVE SMOOTH",
"65 573 LINE SMOOTH",
"55 573 OFFCURVE",
"48.833 571.333 OFFCURVE",
"46.5 568 CURVE SMOOTH",
"44.167 564.667 OFFCURVE",
"43 561.667 OFFCURVE",
"43 559 CURVE",
"43.667 554.333 OFFCURVE",
"44 549.667 OFFCURVE",
"44 545 CURVE SMOOTH",
"44 540.333 OFFCURVE",
"44 535.667 OFFCURVE",
"44 531 CURVE SMOOTH",
"44 497.667 OFFCURVE",
"40 463.333 OFFCURVE",
"36 430 CURVE",
"36 422.667 OFFCURVE",
"40.333 419 OFFCURVE",
"49 419 CURVE SMOOTH",
"55.667 419 OFFCURVE",
"66 421.667 OFFCURVE",
"66 427 CURVE",
"86.886 513.156 OFFCURVE",
"125.254 536 OFFCURVE",
"217 536 CURVE SMOOTH",
"318 536 LINE SMOOTH",
"324 536 OFFCURVE",
"327 533.333 OFFCURVE",
"327 528 CURVE SMOOTH",
"327 525.333 OFFCURVE",
"326 522.667 OFFCURVE",
"324 520 CURVE",
"25 22 LINE",
"23 18 OFFCURVE",
"22 14.667 OFFCURVE",
"22 12 CURVE SMOOTH",
"22 5.333 OFFCURVE",
"27.333 0 OFFCURVE",
"34 0 CURVE SMOOTH",
"441 0 LINE SMOOTH",
"454.333 0 OFFCURVE",
"454 14.333 OFFCURVE",
"454 29 CURVE SMOOTH",
"454 78.333 OFFCURVE",
"458.333 120.333 OFFCURVE",
"465 163 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
38 929 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 487;
}
);
note = uni13C3;
},
{
glyphname = uni13C4;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"415 386 LINE SMOOTH",
"415 510.293 OFFCURVE",
"375.905 592 OFFCURVE",
"244 592 CURVE SMOOTH",
"158.386 592 OFFCURVE",
"70.311 566.328 OFFCURVE",
"65 484 CURVE",
"61 460 OFFCURVE",
"45 449.667 OFFCURVE",
"17 447 CURVE",
"9.667 447 OFFCURVE",
"6 441.667 OFFCURVE",
"6 431 CURVE SMOOTH",
"6 422.333 OFFCURVE",
"9.667 418 OFFCURVE",
"17 418 CURVE SMOOTH",
"40.475 418 OFFCURVE",
"80.723 425 OFFCURVE",
"112 425 CURVE SMOOTH",
"142.876 425 OFFCURVE",
"164.697 418 OFFCURVE",
"189 418 CURVE SMOOTH",
"196.333 418 OFFCURVE",
"200 422.333 OFFCURVE",
"200 431 CURVE SMOOTH",
"200 437.667 OFFCURVE",
"195.333 445.667 OFFCURVE",
"190 447 CURVE",
"150.504 452.266 OFFCURVE",
"141 456.515 OFFCURVE",
"141 495 CURVE SMOOTH",
"141 543.268 OFFCURVE",
"186.482 562 OFFCURVE",
"237 562 CURVE SMOOTH",
"318.306 562 OFFCURVE",
"322 510.474 OFFCURVE",
"322 429 CURVE SMOOTH",
"322 189 LINE",
"303.333 176.333 OFFCURVE",
"281.667 170 OFFCURVE",
"257 170 CURVE SMOOTH",
"200.307 170 OFFCURVE",
"145 192.211 OFFCURVE",
"145 261 CURVE SMOOTH",
"145 297 OFFCURVE",
"154 304.333 OFFCURVE",
"194 307 CURVE",
"199.333 308.333 OFFCURVE",
"204 314.667 OFFCURVE",
"204 320 CURVE SMOOTH",
"204 325.333 OFFCURVE",
"199.667 333 OFFCURVE",
"193 333 CURVE SMOOTH",
"162.587 333 OFFCURVE",
"148.965 325 OFFCURVE",
"117 325 CURVE SMOOTH",
"81.209 325 OFFCURVE",
"53.374 333 OFFCURVE",
"20 333 CURVE SMOOTH",
"14.667 333 OFFCURVE",
"10 325.667 OFFCURVE",
"10 319 CURVE SMOOTH",
"10 313.667 OFFCURVE",
"14.667 307.333 OFFCURVE",
"20 306 CURVE",
"54.667 303.333 OFFCURVE",
"62.667 291.333 OFFCURVE",
"68 250 CURVE",
"83.982 172.756 OFFCURVE",
"163.795 139 OFFCURVE",
"249 139 CURVE SMOOTH",
"279.667 139 OFFCURVE",
"302 146 OFFCURVE",
"322 154 CURVE",
"322 126 LINE SMOOTH",
"322 53.752 OFFCURVE",
"309.866 29.175 OFFCURVE",
"240 24 CURVE",
"233.333 24 OFFCURVE",
"230 16 OFFCURVE",
"230 8 CURVE SMOOTH",
"230 -0.667 OFFCURVE",
"233.333 -5 OFFCURVE",
"240 -5 CURVE SMOOTH",
"258.667 -5 OFFCURVE",
"279.5 -4 OFFCURVE",
"302.5 -2 CURVE SMOOTH",
"325.5 0 OFFCURVE",
"347.333 1 OFFCURVE",
"368 1 CURVE SMOOTH",
"392.667 1 OFFCURVE",
"414.5 0 OFFCURVE",
"433.5 -2 CURVE SMOOTH",
"452.5 -4 OFFCURVE",
"474 -5 OFFCURVE",
"498 -5 CURVE SMOOTH",
"503.333 -5 OFFCURVE",
"506 2.333 OFFCURVE",
"506 9 CURVE SMOOTH",
"506 15.667 OFFCURVE",
"503.667 24 OFFCURVE",
"497 24 CURVE",
"423.528 29.442 OFFCURVE",
"415 50.595 OFFCURVE",
"415 126 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
82 104 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 27 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 82 22 82 38 82 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 82 69 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
109 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
90 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
114 929 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
69 929 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 929 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 5 230 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 31 69 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 528;
}
);
note = uni13C4;
},
{
glyphname = uni13C5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"339.333 -8 OFFCURVE",
"398.667 65.667 OFFCURVE",
"428 207 CURVE",
"433.333 240.333 OFFCURVE",
"466.333 259.667 OFFCURVE",
"489 265 CURVE",
"487 259.667 OFFCURVE",
"486 255 OFFCURVE",
"486 251 CURVE SMOOTH",
"486 208.89 OFFCURVE",
"516.316 158 OFFCURVE",
"576 158 CURVE SMOOTH",
"642.745 158 OFFCURVE",
"672 217.13 OFFCURVE",
"672 288 CURVE SMOOTH",
"672 314.425 OFFCURVE",
"673.088 369 OFFCURVE",
"654 369 CURVE SMOOTH",
"647.333 369 OFFCURVE",
"640 364.667 OFFCURVE",
"640 358 CURVE",
"641.333 347.333 OFFCURVE",
"642 338.333 OFFCURVE",
"642 329 CURVE SMOOTH",
"642 269 OFFCURVE",
"620.333 223 OFFCURVE",
"575 223 CURVE SMOOTH",
"551.248 223 OFFCURVE",
"520 251.269 OFFCURVE",
"520 284 CURVE SMOOTH",
"520 285.333 OFFCURVE",
"520.167 286.5 OFFCURVE",
"520.5 287.5 CURVE SMOOTH",
"520.833 288.5 OFFCURVE",
"521 289.667 OFFCURVE",
"521 291 CURVE SMOOTH",
"521 295.667 OFFCURVE",
"518 298 OFFCURVE",
"512 298 CURVE",
"482.667 294 OFFCURVE",
"455.333 283.667 OFFCURVE",
"434 273 CURVE",
"434 298 LINE SMOOTH",
"434 391.333 OFFCURVE",
"412.5 465.5 OFFCURVE",
"378.5 515.5 CURVE SMOOTH",
"344.5 565.5 OFFCURVE",
"296.333 592 OFFCURVE",
"243 592 CURVE SMOOTH",
"183 592 OFFCURVE",
"131.333 563.833 OFFCURVE",
"94 512.5 CURVE SMOOTH",
"56.667 461.167 OFFCURVE",
"34 387 OFFCURVE",
"34 295 CURVE SMOOTH",
"34 91 OFFCURVE",
"108.667 -8 OFFCURVE",
"234 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"162.53 28 OFFCURVE",
"144 167.926 OFFCURVE",
"144 292 CURVE SMOOTH",
"144 410.895 OFFCURVE",
"169.042 556 OFFCURVE",
"244 556 CURVE SMOOTH",
"327.338 556 OFFCURVE",
"361 415.185 OFFCURVE",
"361 291 CURVE SMOOTH",
"361 165.316 OFFCURVE",
"322.081 28 OFFCURVE",
"238 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 934 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 934 64 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 932 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 932 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 30 106 30 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 30 25 30 41 30 57 30 73 30 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 51 106 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 51 25 51 41 51 57 51 73 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
53 51 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 74 118 74 134 74 150 74 166 74 182 74 198 74 214 74 230 74 246 74 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 74 22 74 38 74 54 74 70 74 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 74 101 74 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 931 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 59 230 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 684;
}
);
note = uni13C5;
},
{
glyphname = uni13C6;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"326 491 LINE SMOOTH",
"326 533.667 OFFCURVE",
"347 539 OFFCURVE",
"399 539 CURVE SMOOTH",
"478.551 539 OFFCURVE",
"496.934 515.846 OFFCURVE",
"510 427 CURVE SMOOTH",
"510.667 421.667 OFFCURVE",
"514.667 419 OFFCURVE",
"522 419 CURVE SMOOTH",
"530 419 OFFCURVE",
"539 422.333 OFFCURVE",
"539 429 CURVE",
"538.333 440.333 OFFCURVE",
"537.5 452.167 OFFCURVE",
"536.5 464.5 CURVE SMOOTH",
"535.5 476.833 OFFCURVE",
"535 489.333 OFFCURVE",
"535 502 CURVE SMOOTH",
"535 524.667 OFFCURVE",
"537.667 546.667 OFFCURVE",
"539 560 CURVE",
"539 572 OFFCURVE",
"523.333 575 OFFCURVE",
"502 575 CURVE SMOOTH",
"61 575 LINE SMOOTH",
"41 575 OFFCURVE",
"22 571 OFFCURVE",
"22 559 CURVE",
"24.667 536.333 OFFCURVE",
"26 515.667 OFFCURVE",
"26 493 CURVE SMOOTH",
"26 471.667 OFFCURVE",
"24.667 450.333 OFFCURVE",
"22 429 CURVE",
"22 423.667 OFFCURVE",
"30 419 OFFCURVE",
"38 419 CURVE SMOOTH",
"44.667 419 OFFCURVE",
"48.667 422 OFFCURVE",
"50 428 CURVE",
"65.649 516.677 OFFCURVE",
"80.698 539 OFFCURVE",
"163 539 CURVE SMOOTH",
"213.667 539 OFFCURVE",
"233 533.667 OFFCURVE",
"233 491 CURVE SMOOTH",
"233 84 LINE SMOOTH",
"233 41.333 OFFCURVE",
"213.667 36 OFFCURVE",
"163 36 CURVE SMOOTH",
"77.988 36 OFFCURVE",
"59.255 58.335 OFFCURVE",
"41 147 CURVE SMOOTH",
"39.667 153 OFFCURVE",
"35.667 156 OFFCURVE",
"29 156 CURVE SMOOTH",
"22.333 156 OFFCURVE",
"14 152.667 OFFCURVE",
"14 146 CURVE",
"16 122.667 OFFCURVE",
"17 100 OFFCURVE",
"17 78 CURVE SMOOTH",
"17 57.333 OFFCURVE",
"16 37 OFFCURVE",
"14 17 CURVE",
"14 2.333 OFFCURVE",
"33.333 0 OFFCURVE",
"52 0 CURVE SMOOTH",
"510 0 LINE SMOOTH",
"531.333 0 OFFCURVE",
"548 2.667 OFFCURVE",
"548 16 CURVE",
"544.667 30.667 OFFCURVE",
"543 50 OFFCURVE",
"543 74 CURVE SMOOTH",
"543 96.667 OFFCURVE",
"545.333 124.667 OFFCURVE",
"548 146 CURVE",
"548 152.667 OFFCURVE",
"539.333 157 OFFCURVE",
"530 157 CURVE SMOOTH",
"524.667 157 OFFCURVE",
"519.333 154.667 OFFCURVE",
"518 148 CURVE",
"507.653 60.052 OFFCURVE",
"477.385 36 OFFCURVE",
"399 36 CURVE SMOOTH",
"347 36 OFFCURVE",
"326 41.333 OFFCURVE",
"326 84 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 43 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 929 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 3 119 3 135 3 151 3 167 3 183 3 199 3 215 3 231 3 247 3 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 103 3 119 3 135 3 151 3 167 3 183 3 199 3 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 3 230 3 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 11 23 11 39 11 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 11 70 11 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
86 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 562;
}
);
note = uni13C6;
},
{
glyphname = uni13C7;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"790 -18 OFFCURVE",
"858.667 9.167 OFFCURVE",
"904 60.5 CURVE SMOOTH",
"949.333 111.833 OFFCURVE",
"970 186 OFFCURVE",
"970 278 CURVE SMOOTH",
"970 359.333 OFFCURVE",
"933.667 438.5 OFFCURVE",
"867 496.5 CURVE SMOOTH",
"800.333 554.5 OFFCURVE",
"702.333 592 OFFCURVE",
"581 592 CURVE SMOOTH",
"426.549 592 OFFCURVE",
"326 543.942 OFFCURVE",
"326 482 CURVE SMOOTH",
"326 446 OFFCURVE",
"346.667 426 OFFCURVE",
"376 426 CURVE SMOOTH",
"400 426 OFFCURVE",
"425 440.667 OFFCURVE",
"425 466 CURVE SMOOTH",
"425 480.715 OFFCURVE",
"404 496.692 OFFCURVE",
"404 502 CURVE SMOOTH",
"404 538.972 OFFCURVE",
"493.251 561 OFFCURVE",
"578 561 CURVE SMOOTH",
"680.667 561 OFFCURVE",
"754 528.167 OFFCURVE",
"802 475.5 CURVE SMOOTH",
"850 422.833 OFFCURVE",
"872 350 OFFCURVE",
"872 270 CURVE SMOOTH",
"872 103.333 OFFCURVE",
"810 12 OFFCURVE",
"706 12 CURVE SMOOTH",
"604.409 12 OFFCURVE",
"538 66.459 OFFCURVE",
"538 203 CURVE SMOOTH",
"538 307.758 OFFCURVE",
"591.769 357.192 OFFCURVE",
"639 369 CURVE",
"643 369.667 OFFCURVE",
"645 372.667 OFFCURVE",
"645 378 CURVE SMOOTH",
"645 384.667 OFFCURVE",
"640.333 392 OFFCURVE",
"635 392 CURVE SMOOTH",
"633 392 LINE",
"543.219 370.453 OFFCURVE",
"446 325.021 OFFCURVE",
"446 182 CURVE",
"408.212 103.725 OFFCURVE",
"332.266 24 OFFCURVE",
"253 24 CURVE SMOOTH",
"181.603 24 OFFCURVE",
"126 99.508 OFFCURVE",
"126 206 CURVE SMOOTH",
"126 312.087 OFFCURVE",
"179.513 356.776 OFFCURVE",
"228 370 CURVE",
"232 370.667 OFFCURVE",
"234 373.333 OFFCURVE",
"234 378 CURVE SMOOTH",
"234 384.667 OFFCURVE",
"227.667 394 OFFCURVE",
"221 394 CURVE",
"134.339 373.201 OFFCURVE",
"34 329.934 OFFCURVE",
"34 196 CURVE SMOOTH",
"34 54.401 OFFCURVE",
"131.731 -16 OFFCURVE",
"234 -16 CURVE SMOOTH",
"327.333 -16 OFFCURVE",
"396 36.667 OFFCURVE",
"452 134 CURVE",
"482.323 10.182 OFFCURVE",
"583.662 -18 OFFCURVE",
"694 -18 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 934 13 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
72 934 83 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
93 934 62 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
5 38 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 28 22 28 38 28 54 28 70 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 28 101 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 62 106 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 62 25 62 41 62 57 62 73 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 72 22 72 38 72 54 72 70 72 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 72 101 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
83 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
93 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
88 929 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 33 23 33 39 33 55 33 71 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 33 102 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 59 230 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1004;
}
);
note = uni13C7;
},
{
glyphname = uni13C8;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"220.411 430.182 OFFCURVE",
"178 302.015 OFFCURVE",
"178 201 CURVE SMOOTH",
"178 83.941 OFFCURVE",
"231.01 -11 OFFCURVE",
"344 -11 CURVE SMOOTH",
"453.197 -11 OFFCURVE",
"498 74.926 OFFCURVE",
"498 185 CURVE SMOOTH",
"498 296.282 OFFCURVE",
"447.648 431.831 OFFCURVE",
"374 516 CURVE",
"400.667 542.667 OFFCURVE",
"430.333 562 OFFCURVE",
"469 562 CURVE SMOOTH",
"544.956 562 OFFCURVE",
"594 496.062 OFFCURVE",
"594 428 CURVE SMOOTH",
"594 352 OFFCURVE",
"567.333 309 OFFCURVE",
"526 297 CURVE",
"522 295 OFFCURVE",
"520 292 OFFCURVE",
"520 288 CURVE SMOOTH",
"520 281.333 OFFCURVE",
"523.333 278 OFFCURVE",
"530 278 CURVE SMOOTH",
"603.953 278 OFFCURVE",
"681 337.472 OFFCURVE",
"681 426 CURVE SMOOTH",
"681 522.7 OFFCURVE",
"578.303 592 OFFCURVE",
"472 592 CURVE SMOOTH",
"421.333 592 OFFCURVE",
"375 576 OFFCURVE",
"339 548 CURVE",
"305.667 574.667 OFFCURVE",
"270 592 OFFCURVE",
"210 592 CURVE SMOOTH",
"100.412 592 OFFCURVE",
"13 536.819 OFFCURVE",
"13 430 CURVE SMOOTH",
"13 378.147 OFFCURVE",
"46.51 345.83 OFFCURVE",
"82 334 CURVE",
"88.667 334 OFFCURVE",
"97 340.333 OFFCURVE",
"97 347 CURVE SMOOTH",
"97 348.333 OFFCURVE",
"96.667 349.333 OFFCURVE",
"96 350 CURVE",
"82.667 360.667 OFFCURVE",
"74 385.667 OFFCURVE",
"74 427 CURVE SMOOTH",
"74 509.728 OFFCURVE",
"121.368 562 OFFCURVE",
"184 562 CURVE SMOOTH",
"232 562 OFFCURVE",
"263 543.333 OFFCURVE",
"291 506 CURVE"
);
},
{
closed = 1;
nodes = (
"287.064 16 OFFCURVE",
"266 98.817 OFFCURVE",
"266 186 CURVE SMOOTH",
"266 271.491 OFFCURVE",
"289.445 376.163 OFFCURVE",
"329 450 CURVE",
"374.518 366.551 OFFCURVE",
"410 239.298 OFFCURVE",
"410 146 CURVE SMOOTH",
"410 70 OFFCURVE",
"389 16 OFFCURVE",
"345 16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 934 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 934 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 934 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 49 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 8 22 8 38 8 54 8 70 8 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 8 101 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 49 106 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 49 25 49 41 49 57 49 73 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 80 106 80 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 80 121 80 137 80 153 80 169 80 185 80 201 80 217 80 233 80 249 80 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 80 25 80 41 80 57 80 73 80 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
85 21 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 90 118 90 134 90 150 90 166 90 182 90 198 90 214 90 230 90 246 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 90 22 90 38 90 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 90 70 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 90 101 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
96 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
67 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
26 929 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 77 119 77 135 77 151 77 167 77 183 77 199 77 215 77 231 77 247 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 77 23 77 39 77 55 77 71 77 87 77 103 77 119 77 135 77 151 77 167 77 183 77 199 77 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 77 230 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 694;
}
);
note = uni13C8;
},
{
glyphname = uni13C9;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342.667 -11.667 OFFCURVE",
"352 -14 OFFCURVE",
"360 -14 CURVE SMOOTH",
"370 -14 OFFCURVE",
"376.667 -11.333 OFFCURVE",
"380 -6 CURVE",
"407 73 LINE SMOOTH",
"421.667 114.333 OFFCURVE",
"441.167 165.333 OFFCURVE",
"460.5 216 CURVE SMOOTH",
"470.167 241.333 OFFCURVE",
"479.833 266.167 OFFCURVE",
"489.5 290.5 CURVE SMOOTH",
"510.813 344.15 OFFCURVE",
"542.222 424.4 OFFCURVE",
"552 442 CURVE",
"564 442 OFFCURVE",
"588.333 450 OFFCURVE",
"603 462 CURVE",
"603 429.722 OFFCURVE",
"637.309 384 OFFCURVE",
"691 384 CURVE SMOOTH",
"753.829 384 OFFCURVE",
"810 430.353 OFFCURVE",
"810 498 CURVE SMOOTH",
"810 555.333 OFFCURVE",
"773.333 588 OFFCURVE",
"720 588 CURVE SMOOTH",
"650.156 588 OFFCURVE",
"607.784 470 OFFCURVE",
"554 470 CURVE SMOOTH",
"527.333 470 OFFCURVE",
"513 487 OFFCURVE",
"513 507 CURVE SMOOTH",
"513 517.099 OFFCURVE",
"532 529.9 OFFCURVE",
"532 546 CURVE SMOOTH",
"532 570 OFFCURVE",
"511 585 OFFCURVE",
"487 585 CURVE SMOOTH",
"460.333 585 OFFCURVE",
"434 567.333 OFFCURVE",
"434 526 CURVE SMOOTH",
"434 495.146 OFFCURVE",
"460.927 454.516 OFFCURVE",
"496 447 CURVE",
"493.333 423 OFFCURVE",
"487.833 392.333 OFFCURVE",
"472.5 343 CURVE SMOOTH",
"457.167 293.667 OFFCURVE",
"432 225 OFFCURVE",
"392 125 CURVE",
"391.333 122.333 OFFCURVE",
"389.333 121 OFFCURVE",
"386 121 CURVE SMOOTH",
"382 121 OFFCURVE",
"379.667 122.333 OFFCURVE",
"379 125 CURVE",
"330.741 237.605 OFFCURVE",
"253.583 456.505 OFFCURVE",
"213 576 CURVE",
"194.333 574.667 OFFCURVE",
"175.333 574 OFFCURVE",
"154 574 CURVE SMOOTH",
"138.667 574 OFFCURVE",
"124 574.333 OFFCURVE",
"110 575 CURVE SMOOTH",
"96 575.667 OFFCURVE",
"84 576 OFFCURVE",
"74 576 CURVE SMOOTH",
"68.667 576 OFFCURVE",
"65 568.667 OFFCURVE",
"65 562 CURVE SMOOTH",
"65 553.333 OFFCURVE",
"68 549 OFFCURVE",
"74 549 CURVE",
"135.333 541 OFFCURVE",
"156 494.333 OFFCURVE",
"156 441 CURVE SMOOTH",
"156 376.622 OFFCURVE",
"142.311 304 OFFCURVE",
"94 304 CURVE SMOOTH",
"82 304 OFFCURVE",
"72 311 OFFCURVE",
"72 327 CURVE SMOOTH",
"72 333 OFFCURVE",
"73.167 337.5 OFFCURVE",
"75.5 340.5 CURVE SMOOTH",
"77.833 343.5 OFFCURVE",
"79 348 OFFCURVE",
"79 354 CURVE SMOOTH",
"79 366 OFFCURVE",
"68.333 379 OFFCURVE",
"43 379 CURVE SMOOTH",
"15 379 OFFCURVE",
"0 352.667 OFFCURVE",
"0 326 CURVE SMOOTH",
"0 295.333 OFFCURVE",
"26 263 OFFCURVE",
"74 263 CURVE SMOOTH",
"134.984 263 OFFCURVE",
"184.6 306.815 OFFCURVE",
"187 398 CURVE",
"217.193 309.938 OFFCURVE",
"298.607 87.526 OFFCURVE",
"340 -5 CURVE"
);
},
{
closed = 1;
nodes = (
"736.992 545 OFFCURVE",
"753 513.918 OFFCURVE",
"753 489 CURVE SMOOTH",
"753 455.941 OFFCURVE",
"745.669 417 OFFCURVE",
"706 417 CURVE SMOOTH",
"660.671 417 OFFCURVE",
"652 481.075 OFFCURVE",
"652 509 CURVE SMOOTH",
"652 519.357 OFFCURVE",
"680.562 545 OFFCURVE",
"699 545 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 13 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 934 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 934 126 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 22 22 22 38 22 54 22 70 22 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 22 101 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
53 13 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 63 106 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 63 121 63 137 63 153 63 169 63 185 63 201 63 217 63 233 63 249 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 63 25 63 41 63 57 63 73 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
95 13 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 126 106 126 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 126 121 126 137 126 153 126 169 126 185 126 201 126 217 126 233 126 249 126 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 126 25 126 41 126 57 126 73 126 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
132 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
108 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
108 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 929 111 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 931 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 90 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
25 928 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
111 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 930 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
95 90 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
121 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 806;
}
);
note = uni13C9;
},
{
glyphname = uni13CA;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"570.361 369 OFFCURVE",
"588 347.643 OFFCURVE",
"588 330 CURVE SMOOTH",
"588 326 OFFCURVE",
"586.833 321.833 OFFCURVE",
"584.5 317.5 CURVE SMOOTH",
"582.167 313.167 OFFCURVE",
"581 308.667 OFFCURVE",
"581 304 CURVE SMOOTH",
"581 280 OFFCURVE",
"596.667 266 OFFCURVE",
"622 266 CURVE SMOOTH",
"651.333 266 OFFCURVE",
"668 289 OFFCURVE",
"668 309 CURVE SMOOTH",
"668 365.788 OFFCURVE",
"602.459 392 OFFCURVE",
"535 392 CURVE SMOOTH",
"439.02 392 OFFCURVE",
"334 322.869 OFFCURVE",
"334 182 CURVE SMOOTH",
"334 118 OFFCURVE",
"351.333 74 OFFCURVE",
"382 46 CURVE",
"359.333 32.667 OFFCURVE",
"335.667 25 OFFCURVE",
"313 25 CURVE SMOOTH",
"201.626 25 OFFCURVE",
"132 128.193 OFFCURVE",
"132 275 CURVE SMOOTH",
"132 425.075 OFFCURVE",
"202.163 561 OFFCURVE",
"313 561 CURVE SMOOTH",
"321 561 OFFCURVE",
"326 569.333 OFFCURVE",
"326 576 CURVE SMOOTH",
"326 584 OFFCURVE",
"321.667 592 OFFCURVE",
"311 592 CURVE SMOOTH",
"157.151 592 OFFCURVE",
"34 446.447 OFFCURVE",
"34 282 CURVE SMOOTH",
"34 110.15 OFFCURVE",
"125.995 -14 OFFCURVE",
"287 -14 CURVE SMOOTH",
"337.667 -14 OFFCURVE",
"377.333 -2.667 OFFCURVE",
"412 20 CURVE",
"462.667 -9.333 OFFCURVE",
"524.333 -18 OFFCURVE",
"575 -18 CURVE SMOOTH",
"675 -18 OFFCURVE",
"745.5 9.167 OFFCURVE",
"791.5 60.5 CURVE SMOOTH",
"837.5 111.833 OFFCURVE",
"858 186 OFFCURVE",
"858 278 CURVE SMOOTH",
"858 441.618 OFFCURVE",
"764.246 592 OFFCURVE",
"610 592 CURVE SMOOTH",
"599.333 592 OFFCURVE",
"597 584 OFFCURVE",
"597 576 CURVE SMOOTH",
"597 569.333 OFFCURVE",
"599.333 561 OFFCURVE",
"610 561 CURVE SMOOTH",
"720.578 561 OFFCURVE",
"760 420.983 OFFCURVE",
"760 270 CURVE SMOOTH",
"760 103.333 OFFCURVE",
"698 12 OFFCURVE",
"594 12 CURVE SMOOTH",
"492.409 12 OFFCURVE",
"426 66.459 OFFCURVE",
"426 203 CURVE SMOOTH",
"426 310.714 OFFCURVE",
"474.168 369 OFFCURVE",
"533 369 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 934 45 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
82 934 91 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 934 13 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 13 106 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 13 25 13 41 13 57 13 73 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 61 22 61 38 61 54 61 70 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 61 101 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
69 72 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 91 106 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 91 25 91 41 91 57 91 73 91 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
97 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 929 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 929 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 10 119 10 135 10 151 10 167 10 183 10 199 10 215 10 231 10 247 10 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 10 23 10 39 10 55 10 71 10 87 10 103 10 119 10 135 10 151 10 167 10 183 10 199 10 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 10 230 10 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
66 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 66 119 66 135 66 151 66 167 66 183 66 199 66 215 66 231 66 247 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 66 23 66 39 66 55 66 71 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 66 102 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 892;
}
);
note = uni13CA;
},
{
glyphname = uni13CB;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"155 341 OFFCURVE",
"126 384 OFFCURVE",
"126 444 CURVE SMOOTH",
"126 504.242 OFFCURVE",
"157.69 562 OFFCURVE",
"243 562 CURVE SMOOTH",
"275.781 562 OFFCURVE",
"330 557.508 OFFCURVE",
"330 531 CURVE SMOOTH",
"330 526.333 OFFCURVE",
"328.667 522.333 OFFCURVE",
"326 519 CURVE SMOOTH",
"323.333 515.667 OFFCURVE",
"322 511.333 OFFCURVE",
"322 506 CURVE SMOOTH",
"322 483.333 OFFCURVE",
"342.667 474 OFFCURVE",
"360 474 CURVE SMOOTH",
"389.333 474 OFFCURVE",
"405 490.667 OFFCURVE",
"405 516 CURVE SMOOTH",
"405 579.443 OFFCURVE",
"315.701 592 OFFCURVE",
"250 592 CURVE SMOOTH",
"134.38 592 OFFCURVE",
"38 541.952 OFFCURVE",
"38 432 CURVE SMOOTH",
"38 362.667 OFFCURVE",
"74 311.333 OFFCURVE",
"178 306 CURVE",
"180 306 OFFCURVE",
"181 304.667 OFFCURVE",
"181 302 CURVE SMOOTH",
"181 300 OFFCURVE",
"180.333 299 OFFCURVE",
"179 299 CURVE",
"97.168 277.178 OFFCURVE",
"29 218.919 OFFCURVE",
"29 138 CURVE SMOOTH",
"29 22.922 OFFCURVE",
"128.903 -13 OFFCURVE",
"232 -13 CURVE SMOOTH",
"363.334 -13 OFFCURVE",
"435 45.512 OFFCURVE",
"435 139 CURVE SMOOTH",
"435 175.399 OFFCURVE",
"416.495 221 OFFCURVE",
"360 221 CURVE SMOOTH",
"329.333 221 OFFCURVE",
"315 199 OFFCURVE",
"315 179 CURVE SMOOTH",
"315 160.333 OFFCURVE",
"326 145 OFFCURVE",
"350 145 CURVE SMOOTH",
"380.076 145 OFFCURVE",
"388 124.811 OFFCURVE",
"388 109 CURVE SMOOTH",
"388 65.066 OFFCURVE",
"340.534 24 OFFCURVE",
"258 24 CURVE SMOOTH",
"194.135 24 OFFCURVE",
"127 76.792 OFFCURVE",
"127 150 CURVE SMOOTH",
"127 227.519 OFFCURVE",
"190.72 289.193 OFFCURVE",
"274 297 CURVE",
"280.667 297 OFFCURVE",
"285 305 OFFCURVE",
"285 313 CURVE SMOOTH",
"285 323.667 OFFCURVE",
"279.333 337 OFFCURVE",
"270 337 CURVE SMOOTH",
"266.667 337 OFFCURVE",
"262.667 336.833 OFFCURVE",
"258 336.5 CURVE SMOOTH",
"253.333 336.167 OFFCURVE",
"247.333 336 OFFCURVE",
"240 336 CURVE SMOOTH",
"236.667 336 OFFCURVE",
"233 336 OFFCURVE",
"229 336 CURVE SMOOTH",
"225 336 OFFCURVE",
"220.333 336.333 OFFCURVE",
"215 337 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
94 934 53 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
43 35 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 94 22 94 38 94 54 94 70 94 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 94 101 94 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 35 74 35 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 35 121 35 137 35 153 35 169 35 185 35 201 35 217 35 233 35 249 35 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 35 25 35 41 35 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
62 53 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
84 35 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 84 106 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 84 121 84 137 84 153 84 169 84 185 84 201 84 217 84 233 84 249 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 84 25 84 41 84 57 84 73 84 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
75 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
48 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
70 929 89 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 931 32 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 929 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 22 230 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 446;
}
);
note = uni13CB;
},
{
glyphname = uni13CC;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"575 368 LINE SMOOTH",
"575 413.341 OFFCURVE",
"575.786 485.663 OFFCURVE",
"585 511 CURVE SMOOTH",
"598.628 551.885 OFFCURVE",
"607.069 544.809 OFFCURVE",
"646 550 CURVE",
"651.333 550 OFFCURVE",
"656 557.333 OFFCURVE",
"656 564 CURVE SMOOTH",
"656 570.667 OFFCURVE",
"651.333 578 OFFCURVE",
"646 578 CURVE SMOOTH",
"627.333 578 OFFCURVE",
"610.667 577 OFFCURVE",
"596 575 CURVE SMOOTH",
"581.333 573 OFFCURVE",
"566.333 572 OFFCURVE",
"551 572 CURVE SMOOTH",
"535 572 OFFCURVE",
"519.5 573 OFFCURVE",
"504.5 575 CURVE SMOOTH",
"489.5 577 OFFCURVE",
"475 578 OFFCURVE",
"461 578 CURVE SMOOTH",
"453 578 OFFCURVE",
"452 570.667 OFFCURVE",
"452 564 CURVE SMOOTH",
"452 557.333 OFFCURVE",
"454.333 550 OFFCURVE",
"461 550 CURVE",
"500.802 544.693 OFFCURVE",
"510.99 550.031 OFFCURVE",
"524 511 CURVE SMOOTH",
"530.667 489.667 OFFCURVE",
"533 443 OFFCURVE",
"533 403 CURVE SMOOTH",
"533 336 LINE",
"207 336 LINE",
"207 447 LINE SMOOTH",
"207 522.89 OFFCURVE",
"218.23 544.633 OFFCURVE",
"288 550 CURVE",
"294.667 550 OFFCURVE",
"299 558.333 OFFCURVE",
"299 565 CURVE SMOOTH",
"299 573.667 OFFCURVE",
"295.667 578 OFFCURVE",
"289 578 CURVE SMOOTH",
"265 578 OFFCURVE",
"243.667 577 OFFCURVE",
"225 575 CURVE SMOOTH",
"206.333 573 OFFCURVE",
"185 572 OFFCURVE",
"161 572 CURVE SMOOTH",
"140.333 572 OFFCURVE",
"118.333 573 OFFCURVE",
"95 575 CURVE SMOOTH",
"71.667 577 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH",
"114 207 LINE SMOOTH",
"114 51 OFFCURVE",
"186 -11 OFFCURVE",
"346 -11 CURVE SMOOTH",
"510.232 -11 OFFCURVE",
"575 71.774 OFFCURVE",
"575 226 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"260.153 34 OFFCURVE",
"207 114.391 OFFCURVE",
"207 214 CURVE SMOOTH",
"207 302 LINE",
"533 302 LINE",
"533 226 LINE SMOOTH",
"533 92.667 OFFCURVE",
"475.333 34 OFFCURVE",
"362 34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
82 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 932 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
88 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 929 14 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 929 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
76 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 76 119 76 135 76 151 76 167 76 183 76 199 76 215 76 231 76 247 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 76 23 76 39 76 55 76 71 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 76 102 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 677;
}
);
note = uni13CC;
},
{
glyphname = uni13CD;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"550 342.275 OFFCURVE",
"545.631 365.515 OFFCURVE",
"622 374 CURVE",
"628.667 374 OFFCURVE",
"633 382 OFFCURVE",
"633 390 CURVE SMOOTH",
"633 396.667 OFFCURVE",
"629.667 402 OFFCURVE",
"623 402 CURVE SMOOTH",
"587.011 402 OFFCURVE",
"540.217 396 OFFCURVE",
"503 396 CURVE SMOOTH",
"482.333 396 OFFCURVE",
"461.833 397 OFFCURVE",
"441.5 399 CURVE SMOOTH",
"421.167 401 OFFCURVE",
"401.667 402 OFFCURVE",
"383 402 CURVE SMOOTH",
"376.333 402 OFFCURVE",
"374 394.667 OFFCURVE",
"374 388 CURVE SMOOTH",
"374 378.667 OFFCURVE",
"377 374 OFFCURVE",
"383 374 CURVE",
"453.017 366.22 OFFCURVE",
"456 342.203 OFFCURVE",
"456 270 CURVE SMOOTH",
"456 213 LINE SMOOTH",
"456 198.333 OFFCURVE",
"424.667 191 OFFCURVE",
"402 191 CURVE SMOOTH",
"368.667 191 OFFCURVE",
"347.333 209.667 OFFCURVE",
"342 231 CURVE SMOOTH",
"320.667 319 OFFCURVE",
"262.333 351 OFFCURVE",
"197 351 CURVE SMOOTH",
"111.183 351 OFFCURVE",
"26 298.975 OFFCURVE",
"26 167 CURVE SMOOTH",
"26 34.83 OFFCURVE",
"97.125 -14 OFFCURVE",
"194 -14 CURVE SMOOTH",
"267.683 -14 OFFCURVE",
"350 47.117 OFFCURVE",
"350 166 CURVE",
"364.667 162.667 OFFCURVE",
"378 161 OFFCURVE",
"390 161 CURVE SMOOTH",
"418 161 OFFCURVE",
"448 171.333 OFFCURVE",
"456 182 CURVE",
"456 78.177 OFFCURVE",
"483.32 -6 OFFCURVE",
"634 -6 CURVE SMOOTH",
"793.053 -6 OFFCURVE",
"879 119.981 OFFCURVE",
"879 263 CURVE SMOOTH",
"879 360.333 OFFCURVE",
"850.667 428.833 OFFCURVE",
"808 477.5 CURVE SMOOTH",
"786.667 501.833 OFFCURVE",
"762.333 521.5 OFFCURVE",
"735 536.5 CURVE SMOOTH",
"680.333 566.5 OFFCURVE",
"622 582.667 OFFCURVE",
"566 588 CURVE SMOOTH",
"538 590.667 OFFCURVE",
"513 592 OFFCURVE",
"491 592 CURVE SMOOTH",
"346.288 592 OFFCURVE",
"250 543.695 OFFCURVE",
"250 479 CURVE SMOOTH",
"250 448.333 OFFCURVE",
"271.333 426 OFFCURVE",
"298 426 CURVE SMOOTH",
"324.667 426 OFFCURVE",
"342 442 OFFCURVE",
"342 462 CURVE SMOOTH",
"342 471.333 OFFCURVE",
"339.833 477.833 OFFCURVE",
"335.5 481.5 CURVE SMOOTH",
"331.167 485.167 OFFCURVE",
"329 489.333 OFFCURVE",
"329 494 CURVE SMOOTH",
"329 530.763 OFFCURVE",
"401.214 562 OFFCURVE",
"482 562 CURVE SMOOTH",
"688.667 562 OFFCURVE",
"772 455.333 OFFCURVE",
"772 234 CURVE SMOOTH",
"772 92.667 OFFCURVE",
"739.667 34 OFFCURVE",
"653 34 CURVE SMOOTH",
"554.685 34 OFFCURVE",
"550 146.386 OFFCURVE",
"550 231 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"255 322 OFFCURVE",
"288 279 OFFCURVE",
"288 167 CURVE SMOOTH",
"288 69.124 OFFCURVE",
"252.993 17 OFFCURVE",
"198 17 CURVE SMOOTH",
"150.672 17 OFFCURVE",
"118 69.991 OFFCURVE",
"118 174 CURVE SMOOTH",
"118 278.862 OFFCURVE",
"155.118 322 OFFCURVE",
"203 322 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
111 934 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 934 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 8 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 8 106 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 8 121 8 137 8 153 8 169 8 185 8 201 8 217 8 233 8 249 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 8 25 8 41 8 57 8 73 8 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 11 values pushed */
6 16 22 16 38 16 54 16 70 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
85 16 101 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
121 25 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
121 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
52 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 111 118 111 134 111 150 111 166 111 182 111 198 111 214 111 230 111 246 111 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 111 22 111 38 111 54 111 70 111 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 111 101 111 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
30 929 11 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
73 929 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 929 106 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 5 23 5 39 5 55 5 71 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 5 102 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
47 50 73 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
116 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 116 119 116 135 116 151 116 167 116 183 116 199 116 215 116 231 116 247 116 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 116 23 116 39 116 55 116 71 116 87 116 103 116 119 116 135 116 151 116 167 116 183 116 199 116 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 116 230 116 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 914;
}
);
note = uni13CD;
},
{
glyphname = uni13CE;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"20 209 LINE",
"18 205.667 OFFCURVE",
"17 201.667 OFFCURVE",
"17 197 CURVE SMOOTH",
"17 182.333 OFFCURVE",
"26.333 166 OFFCURVE",
"37 166 CURVE SMOOTH",
"243 166 LINE SMOOTH",
"261.667 166 OFFCURVE",
"262 148.667 OFFCURVE",
"262 134 CURVE SMOOTH",
"262 110 LINE",
"259.333 50 OFFCURVE",
"242.667 28.333 OFFCURVE",
"180 23 CURVE",
"172 23 OFFCURVE",
"170 16 OFFCURVE",
"170 8 CURVE SMOOTH",
"170 -0.667 OFFCURVE",
"173.333 -5 OFFCURVE",
"180 -5 CURVE SMOOTH",
"198 -5 OFFCURVE",
"218.833 -4.167 OFFCURVE",
"242.5 -2.5 CURVE SMOOTH",
"266.167 -0.833 OFFCURVE",
"288 0 OFFCURVE",
"308 0 CURVE SMOOTH",
"332.667 0 OFFCURVE",
"354.333 -0.833 OFFCURVE",
"373 -2.5 CURVE SMOOTH",
"391.667 -4.167 OFFCURVE",
"412.667 -5 OFFCURVE",
"436 -5 CURVE SMOOTH",
"442.667 -5 OFFCURVE",
"446 -0.667 OFFCURVE",
"446 8 CURVE SMOOTH",
"446 14.667 OFFCURVE",
"441.667 23 OFFCURVE",
"435 23 CURVE",
"365.784 28.324 OFFCURVE",
"354 51.568 OFFCURVE",
"354 126 CURVE SMOOTH",
"354 136 OFFCURVE",
"354.5 145.167 OFFCURVE",
"355.5 153.5 CURVE SMOOTH",
"356.5 161.833 OFFCURVE",
"359.333 166 OFFCURVE",
"364 166 CURVE SMOOTH",
"424.187 166 OFFCURVE",
"433.69 159.009 OFFCURVE",
"446 119 CURVE",
"446 112.333 OFFCURVE",
"454.333 109 OFFCURVE",
"461 109 CURVE SMOOTH",
"469.667 109 OFFCURVE",
"474 112 OFFCURVE",
"474 118 CURVE SMOOTH",
"474 131.333 OFFCURVE",
"473 144 OFFCURVE",
"471 156 CURVE SMOOTH",
"469 168 OFFCURVE",
"468 180 OFFCURVE",
"468 192 CURVE SMOOTH",
"468 206 OFFCURVE",
"469 220.5 OFFCURVE",
"471 235.5 CURVE SMOOTH",
"473 250.5 OFFCURVE",
"474 264.333 OFFCURVE",
"474 277 CURVE SMOOTH",
"474 282.333 OFFCURVE",
"466.667 285 OFFCURVE",
"460 285 CURVE SMOOTH",
"450.667 285 OFFCURVE",
"446 282.333 OFFCURVE",
"446 277 CURVE",
"430.497 230.49 OFFCURVE",
"426.321 226 OFFCURVE",
"364 226 CURVE SMOOTH",
"357.333 226 OFFCURVE",
"354 231.667 OFFCURVE",
"354 243 CURVE SMOOTH",
"354 582 LINE SMOOTH",
"354 586.667 OFFCURVE",
"350.333 589 OFFCURVE",
"343 589 CURVE SMOOTH",
"337.667 589 OFFCURVE",
"332.667 587.333 OFFCURVE",
"328 584 CURVE"
);
},
{
closed = 1;
nodes = (
"83 226 LINE",
"262 442 LINE",
"262 239 LINE SMOOTH",
"262 227 OFFCURVE",
"260.667 226 OFFCURVE",
"250 226 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 934 61 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 931 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 41 23 41 39 41 55 41 71 41 87 41 103 41 119 41 135 41 151 41 167 41 183 41 199 41 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 41 230 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
75 46 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
76 46 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 492;
}
);
note = uni13CE;
},
{
glyphname = uni13CF;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114 111 LINE SMOOTH",
"114 39.281 OFFCURVE",
"102.154 29.396 OFFCURVE",
"32 24 CURVE",
"24 22.667 OFFCURVE",
"22 16 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"180.667 2 OFFCURVE",
"199.333 0.833 OFFCURVE",
"218 -1.5 CURVE SMOOTH",
"236.667 -3.833 OFFCURVE",
"255.667 -5 OFFCURVE",
"275 -5 CURVE SMOOTH",
"413.751 -5 OFFCURVE",
"534 35.505 OFFCURVE",
"534 178 CURVE SMOOTH",
"534 241.742 OFFCURVE",
"476.84 320.56 OFFCURVE",
"425 340 CURVE SMOOTH",
"360.846 364.058 OFFCURVE",
"290.956 368 OFFCURVE",
"226 368 CURVE SMOOTH",
"214 368 OFFCURVE",
"208 368.667 OFFCURVE",
"208 382 CURVE SMOOTH",
"208 447 LINE SMOOTH",
"208 523.347 OFFCURVE",
"216.664 544.513 OFFCURVE",
"288 550 CURVE",
"294.667 550 OFFCURVE",
"299 558.333 OFFCURVE",
"299 565 CURVE SMOOTH",
"299 573.667 OFFCURVE",
"295.667 578 OFFCURVE",
"289 578 CURVE SMOOTH",
"265 578 OFFCURVE",
"243.667 577.167 OFFCURVE",
"225 575.5 CURVE SMOOTH",
"206.333 573.833 OFFCURVE",
"185 573 OFFCURVE",
"161 573 CURVE SMOOTH",
"140.333 573 OFFCURVE",
"118.333 573.833 OFFCURVE",
"95 575.5 CURVE SMOOTH",
"71.667 577.167 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"208 314 LINE SMOOTH",
"208 330 OFFCURVE",
"221 334 OFFCURVE",
"229 334 CURVE SMOOTH",
"333.569 331.012 OFFCURVE",
"434 306.67 OFFCURVE",
"434 190 CURVE SMOOTH",
"434 76.152 OFFCURVE",
"363.789 26 OFFCURVE",
"273 26 CURVE SMOOTH",
"221 26 OFFCURVE",
"208 45.333 OFFCURVE",
"208 96 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 934 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 68 106 68 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 68 121 68 137 68 153 68 169 68 185 68 201 68 217 68 233 68 249 68 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 68 25 68 41 68 57 68 73 68 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
31 929 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 54 23 54 39 54 55 54 71 54 87 54 103 54 119 54 135 54 151 54 167 54 183 54 199 54 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 54 230 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 551;
}
);
note = uni13CF;
},
{
glyphname = uni13D0;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"178 311 LINE",
"160.667 305.667 OFFCURVE",
"147.333 303 OFFCURVE",
"138 303 CURVE SMOOTH",
"91.333 303 OFFCURVE",
"79 327.667 OFFCURVE",
"79 353 CURVE SMOOTH",
"79 372.374 OFFCURVE",
"100 376.11 OFFCURVE",
"100 402 CURVE SMOOTH",
"100 420.667 OFFCURVE",
"84.667 435 OFFCURVE",
"58 435 CURVE SMOOTH",
"28.403 435 OFFCURVE",
"0 412.072 OFFCURVE",
"0 367 CURVE SMOOTH",
"0 318.247 OFFCURVE",
"29.403 272 OFFCURVE",
"118 272 CURVE SMOOTH",
"138 272 OFFCURVE",
"156.667 277.333 OFFCURVE",
"178 284 CURVE",
"178 111 LINE SMOOTH",
"178 38.491 OFFCURVE",
"166.093 29.469 OFFCURVE",
"95 24 CURVE",
"88.333 22.667 OFFCURVE",
"85 16 OFFCURVE",
"85 8 CURVE SMOOTH",
"85 -0.667 OFFCURVE",
"88.333 -5 OFFCURVE",
"95 -5 CURVE SMOOTH",
"113.667 -5 OFFCURVE",
"134.667 -3.833 OFFCURVE",
"158 -1.5 CURVE SMOOTH",
"181.333 0.833 OFFCURVE",
"204 2 OFFCURVE",
"226 2 CURVE SMOOTH",
"246 2 OFFCURVE",
"266.333 0.833 OFFCURVE",
"287 -1.5 CURVE SMOOTH",
"307.667 -3.833 OFFCURVE",
"329.667 -5 OFFCURVE",
"353 -5 CURVE SMOOTH",
"361 -5 OFFCURVE",
"365 -0.667 OFFCURVE",
"365 8 CURVE SMOOTH",
"365 16 OFFCURVE",
"359.333 22.667 OFFCURVE",
"354 24 CURVE",
"284.022 29.383 OFFCURVE",
"270 38.491 OFFCURVE",
"270 111 CURVE SMOOTH",
"270 323 LINE",
"280.667 327 OFFCURVE",
"289.667 330 OFFCURVE",
"299 330 CURVE SMOOTH",
"345.667 330 OFFCURVE",
"359 305 OFFCURVE",
"359 281 CURVE SMOOTH",
"359 257.701 OFFCURVE",
"339 257.911 OFFCURVE",
"339 231 CURVE SMOOTH",
"339 212.333 OFFCURVE",
"353 197 OFFCURVE",
"381 197 CURVE SMOOTH",
"406.333 197 OFFCURVE",
"439 215.333 OFFCURVE",
"439 266 CURVE SMOOTH",
"439 314.421 OFFCURVE",
"410.193 361 OFFCURVE",
"322 361 CURVE SMOOTH",
"306 361 OFFCURVE",
"288.667 355.333 OFFCURVE",
"270 350 CURVE",
"270 447 LINE SMOOTH",
"270 522.688 OFFCURVE",
"279.226 544.609 OFFCURVE",
"352 550 CURVE",
"358.667 550 OFFCURVE",
"361 558 OFFCURVE",
"361 566 CURVE SMOOTH",
"361 572.667 OFFCURVE",
"359.667 578 OFFCURVE",
"353 578 CURVE SMOOTH",
"329 578 OFFCURVE",
"307.667 577.167 OFFCURVE",
"289 575.5 CURVE SMOOTH",
"270.333 573.833 OFFCURVE",
"249 573 OFFCURVE",
"225 573 CURVE SMOOTH",
"204.333 573 OFFCURVE",
"182.167 573.833 OFFCURVE",
"158.5 575.5 CURVE SMOOTH",
"134.833 577.167 OFFCURVE",
"114 578 OFFCURVE",
"96 578 CURVE SMOOTH",
"88 578 OFFCURVE",
"86 570.667 OFFCURVE",
"86 564 CURVE SMOOTH",
"86 557.333 OFFCURVE",
"88 550 OFFCURVE",
"96 550 CURVE",
"164.899 544.7 OFFCURVE",
"178 517.271 OFFCURVE",
"178 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
103 934 90 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
55 73 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
73 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 0 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 43 106 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 43 25 43 41 43 57 43 73 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
82 73 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
98 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 103 22 103 38 103 54 103 70 103 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 103 101 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
110 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
71 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
32 40 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
95 85 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 40 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 60 119 60 135 60 151 60 167 60 183 60 199 60 215 60 231 60 247 60 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 60 23 60 39 60 55 60 71 60 87 60 103 60 119 60 135 60 151 60 167 60 183 60 199 60 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 60 230 60 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
82 40 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
106 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 439;
}
);
note = uni13D0;
},
{
glyphname = uni13D1;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"234 364.667 OFFCURVE",
"255 416.667 OFFCURVE",
"255 462 CURVE SMOOTH",
"255 471 LINE SMOOTH",
"255 477 OFFCURVE",
"254.667 481 OFFCURVE",
"254 483 CURVE",
"281.497 531.883 OFFCURVE",
"304.238 568 OFFCURVE",
"372 568 CURVE SMOOTH",
"432 568 OFFCURVE",
"461 519 OFFCURVE",
"461 459 CURVE SMOOTH",
"461 407 OFFCURVE",
"436.667 364 OFFCURVE",
"406 364 CURVE SMOOTH",
"370 364 OFFCURVE",
"346 378 OFFCURVE",
"334 394 CURVE",
"333.333 396.667 OFFCURVE",
"331.333 398 OFFCURVE",
"328 398 CURVE SMOOTH",
"321.333 398 OFFCURVE",
"315 390.667 OFFCURVE",
"315 384 CURVE SMOOTH",
"315 382 LINE",
"331 354 OFFCURVE",
"356.667 334 OFFCURVE",
"410 334 CURVE SMOOTH",
"483.314 334 OFFCURVE",
"543 391.562 OFFCURVE",
"543 466 CURVE SMOOTH",
"543 537.441 OFFCURVE",
"468.624 592 OFFCURVE",
"384 592 CURVE SMOOTH",
"306.667 592 OFFCURVE",
"268.667 563 OFFCURVE",
"242 527 CURVE",
"226 567 OFFCURVE",
"194 592 OFFCURVE",
"138 592 CURVE SMOOTH",
"56.325 592 OFFCURVE",
"13 542.179 OFFCURVE",
"13 482 CURVE SMOOTH",
"13 418 OFFCURVE",
"58 383 OFFCURVE",
"138 383 CURVE SMOOTH",
"147 383 LINE SMOOTH",
"151.667 383 OFFCURVE",
"155 383.333 OFFCURVE",
"157 384 CURVE",
"145.19 350.716 OFFCURVE",
"119.406 295.007 OFFCURVE",
"106.5 263 CURVE SMOOTH",
"89.833 221.667 OFFCURVE",
"77 177.333 OFFCURVE",
"77 124 CURVE SMOOTH",
"77 40 OFFCURVE",
"134 -10 OFFCURVE",
"222 -10 CURVE SMOOTH",
"302.271 -10 OFFCURVE",
"374 26.33 OFFCURVE",
"374 121 CURVE SMOOTH",
"374 185.073 OFFCURVE",
"330.463 245 OFFCURVE",
"242 245 CURVE SMOOTH",
"222 245 OFFCURVE",
"201 241.333 OFFCURVE",
"179 234 CURVE",
"188.333 260.667 OFFCURVE",
"199.333 287.333 OFFCURVE",
"210 314 CURVE"
);
},
{
closed = 1;
nodes = (
"261.667 218 OFFCURVE",
"287 170 OFFCURVE",
"287 110 CURVE SMOOTH",
"287 50 OFFCURVE",
"266 16 OFFCURVE",
"230 16 CURVE SMOOTH",
"185.476 16 OFFCURVE",
"161 86.541 OFFCURVE",
"161 136 CURVE SMOOTH",
"161 158.667 OFFCURVE",
"164.333 184.667 OFFCURVE",
"171 206 CURVE",
"189.667 215.333 OFFCURVE",
"211 218 OFFCURVE",
"227 218 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"112.329 408 OFFCURVE",
"98 457.517 OFFCURVE",
"98 490 CURVE SMOOTH",
"98 540.667 OFFCURVE",
"111 566 OFFCURVE",
"137 566 CURVE SMOOTH",
"146.333 566 OFFCURVE",
"154.167 557.333 OFFCURVE",
"160.5 540 CURVE SMOOTH",
"166.833 522.667 OFFCURVE",
"170 500.667 OFFCURVE",
"170 474 CURVE SMOOTH",
"170 450 OFFCURVE",
"167 430.667 OFFCURVE",
"163 412 CURVE",
"158.333 409.333 OFFCURVE",
"152.667 408 OFFCURVE",
"146 408 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
106 934 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 934 101 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 934 93 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 934 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 101 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 106 118 106 134 106 150 106 166 106 182 106 198 106 214 106 230 106 246 106 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 106 22 106 38 106 54 106 70 106 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 106 101 106 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
18 29 106 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
37 101 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 65 106 65 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 65 121 65 137 65 153 65 169 65 185 65 201 65 217 65 233 65 249 65 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 65 25 65 41 65 57 65 73 65 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
85 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 93 106 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 93 121 93 137 93 153 93 169 93 185 93 201 93 217 93 233 93 249 93 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 93 25 93 41 93 57 93 73 93 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
112 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
40 929 68 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
96 929 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 929 79 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
62 929 50 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 79 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
90 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 90 230 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
104 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
104 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 556;
}
);
note = uni13D1;
},
{
glyphname = uni13D2;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"393 90.667 OFFCURVE",
"394 81 OFFCURVE",
"394 73 CURVE SMOOTH",
"394 41 OFFCURVE",
"378 32 OFFCURVE",
"362 20 CURVE SMOOTH",
"359.333 18 OFFCURVE",
"358 15 OFFCURVE",
"358 11 CURVE SMOOTH",
"358 4.333 OFFCURVE",
"361.333 -4 OFFCURVE",
"368 -4 CURVE SMOOTH",
"372.667 -4 OFFCURVE",
"380.333 -3.167 OFFCURVE",
"391 -1.5 CURVE SMOOTH",
"401.667 0.167 OFFCURVE",
"418 1 OFFCURVE",
"440 1 CURVE SMOOTH",
"460.667 1 OFFCURVE",
"479.333 0.167 OFFCURVE",
"496 -1.5 CURVE SMOOTH",
"512.667 -3.167 OFFCURVE",
"532.667 -4 OFFCURVE",
"556 -4 CURVE SMOOTH",
"564 -4 OFFCURVE",
"568 0.667 OFFCURVE",
"568 10 CURVE SMOOTH",
"568 18 OFFCURVE",
"563.667 25 OFFCURVE",
"557 25 CURVE",
"514.333 27.667 OFFCURVE",
"495.333 42.667 OFFCURVE",
"486 96 CURVE SMOOTH",
"471.345 172.206 OFFCURVE",
"440.693 228.19 OFFCURVE",
"345 271 CURVE",
"341 273 OFFCURVE",
"339 275.333 OFFCURVE",
"339 278 CURVE SMOOTH",
"339 280.667 OFFCURVE",
"341 282.667 OFFCURVE",
"345 284 CURVE",
"419.937 300.653 OFFCURVE",
"474 343.751 OFFCURVE",
"474 426 CURVE SMOOTH",
"474 533.6 OFFCURVE",
"386.814 578 OFFCURVE",
"288 578 CURVE SMOOTH",
"268 578 OFFCURVE",
"246.667 577.333 OFFCURVE",
"224 576 CURVE SMOOTH",
"201.333 574.667 OFFCURVE",
"172.667 574 OFFCURVE",
"138 574 CURVE SMOOTH",
"118 574 OFFCURVE",
"100.333 574.667 OFFCURVE",
"85 576 CURVE SMOOTH",
"69.667 577.333 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE SMOOTH",
"106.278 550 OFFCURVE",
"117 503.124 OFFCURVE",
"117 431 CURVE SMOOTH",
"117 110 LINE SMOOTH",
"117 44.538 OFFCURVE",
"103.42 29.452 OFFCURVE",
"38 24 CURVE",
"31.333 22 OFFCURVE",
"28 17 OFFCURVE",
"28 9 CURVE SMOOTH",
"28 2.333 OFFCURVE",
"31.333 -5 OFFCURVE",
"38 -5 CURVE SMOOTH",
"58 -5 OFFCURVE",
"78.667 -3.833 OFFCURVE",
"100 -1.5 CURVE SMOOTH",
"121.333 0.833 OFFCURVE",
"143 2 OFFCURVE",
"165 2 CURVE SMOOTH",
"185 2 OFFCURVE",
"204.333 0.833 OFFCURVE",
"223 -1.5 CURVE SMOOTH",
"241.667 -3.833 OFFCURVE",
"265.333 -5 OFFCURVE",
"294 -5 CURVE SMOOTH",
"302 -5 OFFCURVE",
"306 -0.667 OFFCURVE",
"306 8 CURVE SMOOTH",
"306 16 OFFCURVE",
"301.667 24 OFFCURVE",
"295 24 CURVE",
"229.603 29.687 OFFCURVE",
"210 43.163 OFFCURVE",
"210 118 CURVE SMOOTH",
"210 250 LINE SMOOTH",
"210 260.667 OFFCURVE",
"225 264 OFFCURVE",
"245 264 CURVE SMOOTH",
"331.925 264 OFFCURVE",
"372.107 185.671 OFFCURVE",
"391 102 CURVE"
);
},
{
closed = 1;
nodes = (
"210 498 LINE SMOOTH",
"210 534 OFFCURVE",
"219.667 542 OFFCURVE",
"265 542 CURVE SMOOTH",
"346.333 542 OFFCURVE",
"377 510.667 OFFCURVE",
"377 424 CURVE SMOOTH",
"377 331.639 OFFCURVE",
"350.383 300 OFFCURVE",
"259 300 CURVE SMOOTH",
"226.333 300 OFFCURVE",
"210 306.667 OFFCURVE",
"210 320 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
109 44 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 934 103 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
109 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
109 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 103 106 103 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 103 121 103 137 103 153 103 169 103 185 103 201 103 217 103 233 103 249 103 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 103 25 103 41 103 57 103 73 103 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
111 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
80 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
80 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
86 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
86 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
83 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
83 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
53 929 106 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
98 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 14 119 14 135 14 151 14 167 14 183 14 199 14 215 14 231 14 247 14 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 14 23 14 39 14 55 14 71 14 87 14 103 14 119 14 135 14 151 14 167 14 183 14 199 14 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 14 230 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 574;
}
);
note = uni13D2;
},
{
glyphname = uni13D3;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114 177 LINE SMOOTH",
"114 42.972 OFFCURVE",
"184.756 -11 OFFCURVE",
"298 -11 CURVE SMOOTH",
"370 -11 OFFCURVE",
"411 20.333 OFFCURVE",
"411 67 CURVE SMOOTH",
"411 87 OFFCURVE",
"394 114 OFFCURVE",
"366 114 CURVE SMOOTH",
"339.333 114 OFFCURVE",
"321 95.333 OFFCURVE",
"321 74 CURVE SMOOTH",
"321 68.667 OFFCURVE",
"323.167 63.333 OFFCURVE",
"327.5 58 CURVE SMOOTH",
"331.833 52.667 OFFCURVE",
"334 47.333 OFFCURVE",
"334 42 CURVE SMOOTH",
"334 28.667 OFFCURVE",
"315.667 19 OFFCURVE",
"293 19 CURVE SMOOTH",
"225 19 OFFCURVE",
"207 73 OFFCURVE",
"207 153 CURVE SMOOTH",
"207 447 LINE SMOOTH",
"207 516.832 OFFCURVE",
"219.539 543.734 OFFCURVE",
"288 549 CURVE",
"296 549 OFFCURVE",
"299 556.333 OFFCURVE",
"299 563 CURVE SMOOTH",
"299 571 OFFCURVE",
"296 578 OFFCURVE",
"288 578 CURVE SMOOTH",
"270.667 578 OFFCURVE",
"250.167 577.167 OFFCURVE",
"226.5 575.5 CURVE SMOOTH",
"202.833 573.833 OFFCURVE",
"180.667 573 OFFCURVE",
"160 573 CURVE SMOOTH",
"135.333 573 OFFCURVE",
"113.833 573.833 OFFCURVE",
"95.5 575.5 CURVE SMOOTH",
"77.167 577.167 OFFCURVE",
"56 578 OFFCURVE",
"32 578 CURVE SMOOTH",
"25.333 578 OFFCURVE",
"22 572.667 OFFCURVE",
"22 566 CURVE SMOOTH",
"22 558 OFFCURVE",
"26.333 549 OFFCURVE",
"33 549 CURVE",
"103.244 543.597 OFFCURVE",
"114 524.498 OFFCURVE",
"114 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 934 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 934 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 38 106 38 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 38 25 38 41 38 57 38 73 38 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 32 119 32 135 32 151 32 167 32 183 32 199 32 215 32 231 32 247 32 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 32 23 32 39 32 55 32 71 32 87 32 103 32 119 32 135 32 151 32 167 32 183 32 199 32 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 32 230 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 41 119 41 135 41 151 41 167 41 183 41 199 41 215 41 231 41 247 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 41 23 41 39 41 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 41 70 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 417;
}
);
note = uni13D3;
},
{
glyphname = uni13D4;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"487.333 545 OFFCURVE",
"478.167 519.5 OFFCURVE",
"468.5 492.5 CURVE SMOOTH",
"458.833 465.5 OFFCURVE",
"448.667 439.333 OFFCURVE",
"438 414 CURVE",
"382 576 LINE",
"366 574.667 OFFCURVE",
"343 574 OFFCURVE",
"327 574 CURVE SMOOTH",
"311.667 574 OFFCURVE",
"298.833 574.333 OFFCURVE",
"288.5 575 CURVE SMOOTH",
"278.167 575.667 OFFCURVE",
"266.333 576 OFFCURVE",
"253 576 CURVE SMOOTH",
"249 576 OFFCURVE",
"244 569.667 OFFCURVE",
"244 563 CURVE SMOOTH",
"244 555 OFFCURVE",
"247.333 550.333 OFFCURVE",
"254 549 CURVE",
"286 545 OFFCURVE",
"302 523.333 OFFCURVE",
"310 502 CURVE SMOOTH",
"386 290 LINE",
"318 138 LINE",
"315.333 135.333 OFFCURVE",
"313 134 OFFCURVE",
"311 134 CURVE SMOOTH",
"305.667 134 OFFCURVE",
"302.667 136.333 OFFCURVE",
"302 141 CURVE",
"150 576 LINE",
"134 574.667 OFFCURVE",
"110 574 OFFCURVE",
"94 574 CURVE SMOOTH",
"78.667 574 OFFCURVE",
"64.833 574.333 OFFCURVE",
"52.5 575 CURVE SMOOTH",
"40.167 575.667 OFFCURVE",
"26.333 576 OFFCURVE",
"11 576 CURVE SMOOTH",
"4.333 576 OFFCURVE",
"2 568.667 OFFCURVE",
"2 562 CURVE SMOOTH",
"2 553.333 OFFCURVE",
"5.333 549 OFFCURVE",
"12 549 CURVE",
"49.333 546.333 OFFCURVE",
"68.667 523.333 OFFCURVE",
"78 502 CURVE",
"257 -1 LINE",
"258.333 -6.333 OFFCURVE",
"266 -11 OFFCURVE",
"274 -11 CURVE SMOOTH",
"283.333 -11 OFFCURVE",
"292.667 -8 OFFCURVE",
"294 0 CURVE",
"330 80 OFFCURVE",
"365.333 158 OFFCURVE",
"404 238 CURVE",
"490 -1 LINE",
"490 -6.333 OFFCURVE",
"499.333 -11 OFFCURVE",
"506 -11 CURVE SMOOTH",
"516.667 -11 OFFCURVE",
"525.667 -8 OFFCURVE",
"527 0 CURVE",
"567 88 OFFCURVE",
"607.167 178.5 OFFCURVE",
"647.5 271.5 CURVE SMOOTH",
"687.833 364.5 OFFCURVE",
"732.667 461.333 OFFCURVE",
"782 562 CURVE",
"782 562.667 OFFCURVE",
"782.167 563.333 OFFCURVE",
"782.5 564 CURVE SMOOTH",
"782.833 564.667 OFFCURVE",
"783 565.333 OFFCURVE",
"783 566 CURVE SMOOTH",
"783 576.667 OFFCURVE",
"764.667 585 OFFCURVE",
"746 585 CURVE SMOOTH",
"732.667 585 OFFCURVE",
"722 580.667 OFFCURVE",
"718 570 CURVE",
"670.476 424.789 OFFCURVE",
"604.26 257.942 OFFCURVE",
"550 138 CURVE",
"548.667 135.333 OFFCURVE",
"546.667 134 OFFCURVE",
"544 134 CURVE SMOOTH",
"538.667 134 OFFCURVE",
"535.667 136.333 OFFCURVE",
"535 141 CURVE",
"460 353 LINE",
"475.333 387 OFFCURVE",
"491.333 421.167 OFFCURVE",
"508 455.5 CURVE SMOOTH",
"524.667 489.833 OFFCURVE",
"541.333 525 OFFCURVE",
"558 561 CURVE SMOOTH",
"558.667 562.333 OFFCURVE",
"559 564 OFFCURVE",
"559 566 CURVE SMOOTH",
"559 576.667 OFFCURVE",
"541.333 584 OFFCURVE",
"524 584 CURVE SMOOTH",
"510.667 584 OFFCURVE",
"498.667 579.667 OFFCURVE",
"496 569 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
40 36 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
86 36 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 795;
}
);
note = uni13D4;
},
{
glyphname = uni13D5;
lastChange = "2019-03-01 18:48:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"123 508.142 OFFCURVE",
"175.779 550 OFFCURVE",
"237 550 CURVE SMOOTH",
"293 550 OFFCURVE",
"323 528.333 OFFCURVE",
"323 495 CURVE SMOOTH",
"323 477.667 OFFCURVE",
"323.333 473 OFFCURVE",
"294 469 CURVE",
"288.667 467 OFFCURVE",
"286 462.667 OFFCURVE",
"286 456 CURVE SMOOTH",
"286 449.333 OFFCURVE",
"288.333 444 OFFCURVE",
"295 444 CURVE SMOOTH",
"303.667 444 OFFCURVE",
"313 444.833 OFFCURVE",
"323 446.5 CURVE SMOOTH",
"333 448.167 OFFCURVE",
"346 449 OFFCURVE",
"362 449 CURVE SMOOTH",
"374 449 OFFCURVE",
"386 448.167 OFFCURVE",
"398 446.5 CURVE SMOOTH",
"410 444.833 OFFCURVE",
"429 444 OFFCURVE",
"455 444 CURVE SMOOTH",
"461.667 444 OFFCURVE",
"464 449.333 OFFCURVE",
"464 456 CURVE SMOOTH",
"464 462 OFFCURVE",
"461.333 466 OFFCURVE",
"456 468 CURVE",
"407.352 470.432 OFFCURVE",
"402.254 476.344 OFFCURVE",
"388 502 CURVE SMOOTH",
"355.542 558.064 OFFCURVE",
"320.803 586 OFFCURVE",
"238 586 CURVE SMOOTH",
"139.748 586 OFFCURVE",
"40 528.834 OFFCURVE",
"40 427 CURVE SMOOTH",
"40 334.215 OFFCURVE",
"126.899 288.924 OFFCURVE",
"210 266 CURVE",
"278.328 241.154 OFFCURVE",
"342 217.727 OFFCURVE",
"342 136 CURVE SMOOTH",
"342 64 OFFCURVE",
"295.333 24 OFFCURVE",
"230 24 CURVE SMOOTH",
"144.667 24 OFFCURVE",
"83 75 OFFCURVE",
"67 175 CURVE SMOOTH",
"65.667 183 OFFCURVE",
"60.667 186 OFFCURVE",
"54 186 CURVE SMOOTH",
"46 186 OFFCURVE",
"38 180 OFFCURVE",
"38 172 CURVE",
"43.333 138.667 OFFCURVE",
"44 119 OFFCURVE",
"44 87 CURVE SMOOTH",
"44 59 OFFCURVE",
"40.667 24 OFFCURVE",
"38 0 CURVE",
"38 -5.333 OFFCURVE",
"43.333 -9 OFFCURVE",
"50 -9 CURVE SMOOTH",
"57.333 -9 OFFCURVE",
"62.667 -6.333 OFFCURVE",
"66 -1 CURVE",
"72.667 16.333 OFFCURVE",
"83.333 22 OFFCURVE",
"90 22 CURVE SMOOTH",
"95.333 22 OFFCURVE",
"99.333 21.333 OFFCURVE",
"102 20 CURVE SMOOTH",
"104.667 18.667 OFFCURVE",
"107.333 17.667 OFFCURVE",
"110 17 CURVE",
"143.333 -3 OFFCURVE",
"190 -12 OFFCURVE",
"222 -12 CURVE SMOOTH",
"331.33 -12 OFFCURVE",
"428 44.741 OFFCURVE",
"428 165 CURVE SMOOTH",
"428 217.915 OFFCURVE",
"398.998 261.002 OFFCURVE",
"372 279 CURVE",
"370 279.667 OFFCURVE",
"369 280.667 OFFCURVE",
"369 282 CURVE SMOOTH",
"369 284 OFFCURVE",
"372 285 OFFCURVE",
"378 285 CURVE SMOOTH",
"465 285 LINE SMOOTH",
"470.333 285 OFFCURVE",
"474 293.333 OFFCURVE",
"474 300 CURVE SMOOTH",
"474 308 OFFCURVE",
"471.667 317 OFFCURVE",
"465 317 CURVE SMOOTH",
"349 317 LINE SMOOTH",
"339 317 OFFCURVE",
"327.833 317.833 OFFCURVE",
"315.5 319.5 CURVE SMOOTH",
"303.167 321.167 OFFCURVE",
"295.333 322 OFFCURVE",
"292 322 CURVE",
"209.193 345.659 OFFCURVE",
"123 363.57 OFFCURVE",
"123 450 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 62 106 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 62 25 62 41 62 57 62 73 62 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
77 929 109 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
87 929 95 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 929 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 36 119 36 135 36 151 36 167 36 183 36 199 36 215 36 231 36 247 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 36 23 36 39 36 55 36 71 36 87 36 103 36 119 36 135 36 151 36 167 36 183 36 199 36 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 36 230 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
98 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
98 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 487;
}
);
note = uni13D5;
},
{
glyphname = uni13D6;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"226 190 LINE SMOOTH",
"226 37.85 OFFCURVE",
"291.723 -8 OFFCURVE",
"402 -8 CURVE SMOOTH",
"502.766 -8 OFFCURVE",
"586 36.082 OFFCURVE",
"586 146 CURVE SMOOTH",
"586 231.405 OFFCURVE",
"503.491 278 OFFCURVE",
"438 278 CURVE SMOOTH",
"432.667 278 OFFCURVE",
"430 274.333 OFFCURVE",
"430 267 CURVE SMOOTH",
"430 261.667 OFFCURVE",
"431.667 258.333 OFFCURVE",
"435 257 CURVE",
"491.912 244.628 OFFCURVE",
"515 193.848 OFFCURVE",
"515 148 CURVE SMOOTH",
"515 78.733 OFFCURVE",
"472.703 16 OFFCURVE",
"403 16 CURVE SMOOTH",
"345.262 16 OFFCURVE",
"319 74.412 OFFCURVE",
"319 139 CURVE SMOOTH",
"319 499 LINE SMOOTH",
"319 540.333 OFFCURVE",
"347 545.333 OFFCURVE",
"391 548 CURVE",
"396.333 548 OFFCURVE",
"399 552.667 OFFCURVE",
"399 562 CURVE SMOOTH",
"399 567.333 OFFCURVE",
"396.333 574 OFFCURVE",
"391 574 CURVE SMOOTH",
"30 574 LINE SMOOTH",
"11.333 574 OFFCURVE",
"6 570 OFFCURVE",
"6 558 CURVE",
"8.667 535.333 OFFCURVE",
"10 515.667 OFFCURVE",
"10 493 CURVE SMOOTH",
"10 470.333 OFFCURVE",
"8.667 449.333 OFFCURVE",
"6 428 CURVE",
"6 422.667 OFFCURVE",
"15 419 OFFCURVE",
"23 419 CURVE SMOOTH",
"30.333 419 OFFCURVE",
"34 421.667 OFFCURVE",
"34 427 CURVE",
"54.52 524.47 OFFCURVE",
"68.24 538 OFFCURVE",
"157 538 CURVE SMOOTH",
"206.333 538 OFFCURVE",
"226 532.667 OFFCURVE",
"226 490 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
31 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 42 106 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 42 121 42 137 42 153 42 169 42 185 42 201 42 217 42 233 42 249 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 42 25 42 41 42 57 42 73 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
61 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
23 929 28 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 37 230 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 592;
}
);
note = uni13D6;
},
{
glyphname = uni13D7;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114.958 26 OFFCURVE",
"99 47.8 OFFCURVE",
"99 78 CURVE SMOOTH",
"99 103.193 OFFCURVE",
"121 101.764 OFFCURVE",
"121 131 CURVE SMOOTH",
"121 151 OFFCURVE",
"105.667 167 OFFCURVE",
"75 167 CURVE SMOOTH",
"43.121 167 OFFCURVE",
"13 141.82 OFFCURVE",
"13 94 CURVE SMOOTH",
"13 40.692 OFFCURVE",
"44.309 -8 OFFCURVE",
"138 -8 CURVE SMOOTH",
"272.016 -8 OFFCURVE",
"389.161 134.476 OFFCURVE",
"438 262 CURVE",
"438 264.667 OFFCURVE",
"439.667 266 OFFCURVE",
"443 266 CURVE SMOOTH",
"445 266 OFFCURVE",
"446 264.667 OFFCURVE",
"446 262 CURVE SMOOTH",
"446 111 LINE SMOOTH",
"446 41.667 OFFCURVE",
"438.249 29.825 OFFCURVE",
"380 24 CURVE",
"373.333 22.667 OFFCURVE",
"370 16 OFFCURVE",
"370 8 CURVE SMOOTH",
"370 -0.667 OFFCURVE",
"373.333 -5 OFFCURVE",
"380 -5 CURVE SMOOTH",
"397.333 -5 OFFCURVE",
"416.333 -3.833 OFFCURVE",
"437 -1.5 CURVE SMOOTH",
"457.667 0.833 OFFCURVE",
"478 2 OFFCURVE",
"498 2 CURVE SMOOTH",
"516 2 OFFCURVE",
"535.167 0.833 OFFCURVE",
"555.5 -1.5 CURVE SMOOTH",
"575.833 -3.833 OFFCURVE",
"597.667 -5 OFFCURVE",
"621 -5 CURVE SMOOTH",
"629 -5 OFFCURVE",
"633 -0.667 OFFCURVE",
"633 8 CURVE SMOOTH",
"633 16 OFFCURVE",
"627.333 22.667 OFFCURVE",
"622 24 CURVE",
"552.022 29.383 OFFCURVE",
"538 38.491 OFFCURVE",
"538 111 CURVE SMOOTH",
"538 447 LINE SMOOTH",
"538 522.688 OFFCURVE",
"547.226 544.609 OFFCURVE",
"620 550 CURVE",
"626.667 550 OFFCURVE",
"629 558 OFFCURVE",
"629 566 CURVE SMOOTH",
"629 572.667 OFFCURVE",
"627.667 578 OFFCURVE",
"621 578 CURVE SMOOTH",
"604.2 578 OFFCURVE",
"509.152 573 OFFCURVE",
"492 573 CURVE SMOOTH",
"472 573 OFFCURVE",
"450.167 573.833 OFFCURVE",
"426.5 575.5 CURVE SMOOTH",
"402.833 577.167 OFFCURVE",
"382 578 OFFCURVE",
"364 578 CURVE SMOOTH",
"356 578 OFFCURVE",
"354 570.667 OFFCURVE",
"354 564 CURVE SMOOTH",
"354 557.333 OFFCURVE",
"356 550 OFFCURVE",
"364 550 CURVE",
"432.899 544.7 OFFCURVE",
"446 517.271 OFFCURVE",
"446 447 CURVE SMOOTH",
"446 403 OFFCURVE",
"443.333 363.667 OFFCURVE",
"430 325 CURVE SMOOTH",
"398 231.667 OFFCURVE",
"350.5 156.833 OFFCURVE",
"300.5 105.5 CURVE SMOOTH",
"250.5 54.167 OFFCURVE",
"198 26 OFFCURVE",
"158 26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
93 934 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
70 80 47 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
88 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 93 22 93 38 93 54 93 70 93 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 93 101 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
55 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
75 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
52 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
19 929 13 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 0 230 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 85 119 85 135 85 151 85 167 85 183 85 199 85 215 85 231 85 247 85 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 85 23 85 39 85 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 85 70 85 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 654;
}
);
note = uni13D7;
},
{
glyphname = uni13D8;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114.958 26 OFFCURVE",
"99 47.8 OFFCURVE",
"99 78 CURVE SMOOTH",
"99 103.193 OFFCURVE",
"121 101.764 OFFCURVE",
"121 131 CURVE SMOOTH",
"121 151 OFFCURVE",
"105.667 167 OFFCURVE",
"75 167 CURVE SMOOTH",
"43.121 167 OFFCURVE",
"13 141.82 OFFCURVE",
"13 94 CURVE SMOOTH",
"13 40.692 OFFCURVE",
"44.309 -8 OFFCURVE",
"138 -8 CURVE SMOOTH",
"272.016 -8 OFFCURVE",
"389.161 134.476 OFFCURVE",
"438 262 CURVE",
"438 264.667 OFFCURVE",
"439.667 266 OFFCURVE",
"443 266 CURVE SMOOTH",
"445 266 OFFCURVE",
"446 264.667 OFFCURVE",
"446 262 CURVE SMOOTH",
"446 111 LINE SMOOTH",
"446 41.667 OFFCURVE",
"438.249 29.825 OFFCURVE",
"380 24 CURVE",
"373.333 22.667 OFFCURVE",
"370 16 OFFCURVE",
"370 8 CURVE SMOOTH",
"370 -0.667 OFFCURVE",
"373.333 -5 OFFCURVE",
"380 -5 CURVE SMOOTH",
"397.333 -5 OFFCURVE",
"416.333 -3.833 OFFCURVE",
"437 -1.5 CURVE SMOOTH",
"457.667 0.833 OFFCURVE",
"478 2 OFFCURVE",
"498 2 CURVE SMOOTH",
"516 2 OFFCURVE",
"535.167 0.833 OFFCURVE",
"555.5 -1.5 CURVE SMOOTH",
"575.833 -3.833 OFFCURVE",
"597.667 -5 OFFCURVE",
"621 -5 CURVE SMOOTH",
"629 -5 OFFCURVE",
"633 -0.667 OFFCURVE",
"633 8 CURVE SMOOTH",
"633 16 OFFCURVE",
"627.333 22.667 OFFCURVE",
"622 24 CURVE",
"552.022 29.383 OFFCURVE",
"538 38.491 OFFCURVE",
"538 111 CURVE SMOOTH",
"538 487 LINE SMOOTH",
"538 536.825 OFFCURVE",
"567.434 550 OFFCURVE",
"610 550 CURVE SMOOTH",
"615.333 550 OFFCURVE",
"618 557.333 OFFCURVE",
"618 564 CURVE SMOOTH",
"618 572.667 OFFCURVE",
"615.333 577 OFFCURVE",
"610 577 CURVE SMOOTH",
"198 577 LINE SMOOTH",
"178 577 OFFCURVE",
"174 573 OFFCURVE",
"174 561 CURVE",
"176.667 538.333 OFFCURVE",
"178 517.667 OFFCURVE",
"178 495 CURVE SMOOTH",
"178 472.333 OFFCURVE",
"176.667 451.333 OFFCURVE",
"174 430 CURVE",
"174 424.667 OFFCURVE",
"181 422 OFFCURVE",
"189 422 CURVE SMOOTH",
"195.667 422 OFFCURVE",
"200.667 423.333 OFFCURVE",
"202 430 CURVE SMOOTH",
"222.57 525.135 OFFCURVE",
"235.218 541 OFFCURVE",
"322 541 CURVE SMOOTH",
"376 541 LINE SMOOTH",
"424 541 OFFCURVE",
"446 535 OFFCURVE",
"446 499 CURVE SMOOTH",
"446 447 LINE SMOOTH",
"446 403 OFFCURVE",
"443.333 365 OFFCURVE",
"430 325 CURVE SMOOTH",
"398 231.667 OFFCURVE",
"350.5 156.833 OFFCURVE",
"300.5 105.5 CURVE SMOOTH",
"250.5 54.167 OFFCURVE",
"198 26 OFFCURVE",
"158 26 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 934 86 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 934 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
76 86 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
94 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
105 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
55 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
61 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
81 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
34 929 39 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 0 230 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
81 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 91 119 91 135 91 151 91 167 91 183 91 199 91 215 91 231 91 247 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 91 23 91 39 91 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 91 70 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 654;
}
);
note = uni13D8;
},
{
glyphname = uni13D9;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"344.333 119.333 OFFCURVE",
"342 118 OFFCURVE",
"338 118 CURVE SMOOTH",
"334.667 118 OFFCURVE",
"332.667 119.333 OFFCURVE",
"332 122 CURVE",
"288 239.333 OFFCURVE",
"258 319.833 OFFCURVE",
"238 376.5 CURVE SMOOTH",
"228 404.833 OFFCURVE",
"220 427.333 OFFCURVE",
"214 444 CURVE SMOOTH",
"205.065 468.819 OFFCURVE",
"195 502.798 OFFCURVE",
"195 513 CURVE SMOOTH",
"195 541 OFFCURVE",
"212.333 547 OFFCURVE",
"251 551 CURVE SMOOTH",
"259 551.667 OFFCURVE",
"263 556.667 OFFCURVE",
"263 566 CURVE SMOOTH",
"263 572.667 OFFCURVE",
"259.333 581 OFFCURVE",
"250 581 CURVE SMOOTH",
"231.333 581 OFFCURVE",
"211.333 579.833 OFFCURVE",
"190 577.5 CURVE SMOOTH",
"168.667 575.167 OFFCURVE",
"146 574 OFFCURVE",
"122 574 CURVE SMOOTH",
"100.667 574 OFFCURVE",
"81.667 575.167 OFFCURVE",
"65 577.5 CURVE SMOOTH",
"48.333 579.833 OFFCURVE",
"31 581 OFFCURVE",
"13 581 CURVE SMOOTH",
"6.333 581 OFFCURVE",
"4 574 OFFCURVE",
"4 566 CURVE SMOOTH",
"4 560.667 OFFCURVE",
"6 552.333 OFFCURVE",
"14 551 CURVE SMOOTH",
"50.31 544.398 OFFCURVE",
"71.934 535.757 OFFCURVE",
"96 478 CURVE SMOOTH",
"126.667 403.333 OFFCURVE",
"161.5 315.5 OFFCURVE",
"195.5 229.5 CURVE SMOOTH",
"222.968 160.022 OFFCURVE",
"267.131 46.173 OFFCURVE",
"292 -16 CURVE",
"296.667 -20 OFFCURVE",
"302.667 -22 OFFCURVE",
"310 -22 CURVE SMOOTH",
"318 -22 OFFCURVE",
"322.667 -20 OFFCURVE",
"324 -16 CURVE",
"518 471 LINE",
"537.259 526.37 OFFCURVE",
"557.877 541.202 OFFCURVE",
"596 550 CURVE",
"609 551 LINE",
"615.667 552.333 OFFCURVE",
"619 558.333 OFFCURVE",
"619 565 CURVE SMOOTH",
"619 573 OFFCURVE",
"614.667 581 OFFCURVE",
"608 581 CURVE SMOOTH",
"592 581 OFFCURVE",
"577 579.833 OFFCURVE",
"563 577.5 CURVE SMOOTH",
"549 575.167 OFFCURVE",
"534.667 574 OFFCURVE",
"520 574 CURVE SMOOTH",
"504.667 574 OFFCURVE",
"488 575.167 OFFCURVE",
"470 577.5 CURVE SMOOTH",
"452 579.833 OFFCURVE",
"436.333 581 OFFCURVE",
"423 581 CURVE SMOOTH",
"415 581 OFFCURVE",
"412 572.667 OFFCURVE",
"412 566 CURVE SMOOTH",
"412 559.333 OFFCURVE",
"415 551 OFFCURVE",
"423 551 CURVE",
"456.333 548.333 OFFCURVE",
"490 540.333 OFFCURVE",
"490 511 CURVE SMOOTH",
"490 507.667 OFFCURVE",
"488.333 501 OFFCURVE",
"485 491 CURVE SMOOTH",
"438.333 365.667 OFFCURVE",
"393 247.333 OFFCURVE",
"345 122 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 628;
}
);
note = uni13D9;
},
{
glyphname = uni13DA;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"120 520.667 OFFCURVE",
"167.333 550 OFFCURVE",
"226 550 CURVE SMOOTH",
"312.382 550 OFFCURVE",
"339.358 524.051 OFFCURVE",
"360 426 CURVE",
"360.667 420.667 OFFCURVE",
"364.333 418 OFFCURVE",
"371 418 CURVE SMOOTH",
"377.667 418 OFFCURVE",
"386 422 OFFCURVE",
"386 426 CURVE",
"384.667 442.667 OFFCURVE",
"383.167 457 OFFCURVE",
"381.5 469 CURVE SMOOTH",
"379.833 481 OFFCURVE",
"379 494.667 OFFCURVE",
"379 510 CURVE SMOOTH",
"379 532.667 OFFCURVE",
"381.333 553.667 OFFCURVE",
"386 573 CURVE",
"386 577.667 OFFCURVE",
"381.667 580 OFFCURVE",
"373 580 CURVE SMOOTH",
"360.971 580 OFFCURVE",
"358.029 566 OFFCURVE",
"346 566 CURVE",
"336.667 564.667 OFFCURVE",
"327.333 568.667 OFFCURVE",
"314 574 CURVE",
"286 583.333 OFFCURVE",
"267 586 OFFCURVE",
"235 586 CURVE SMOOTH",
"130.508 586 OFFCURVE",
"39 546.168 OFFCURVE",
"39 440 CURVE SMOOTH",
"39 336.808 OFFCURVE",
"111.339 304.951 OFFCURVE",
"196 267 CURVE SMOOTH",
"259.927 236.559 OFFCURVE",
"332 200.55 OFFCURVE",
"332 122 CURVE SMOOTH",
"332 60.174 OFFCURVE",
"277.558 24 OFFCURVE",
"215 24 CURVE SMOOTH",
"131 24 OFFCURVE",
"74 84.333 OFFCURVE",
"58 179 CURVE",
"58 185.667 OFFCURVE",
"52.667 188 OFFCURVE",
"46 188 CURVE SMOOTH",
"39.333 188 OFFCURVE",
"30 183 OFFCURVE",
"30 175 CURVE",
"35.333 143 OFFCURVE",
"36 114.333 OFFCURVE",
"36 85 CURVE SMOOTH",
"36 54.333 OFFCURVE",
"32.667 24 OFFCURVE",
"30 0 CURVE",
"30 -4 OFFCURVE",
"37.333 -9 OFFCURVE",
"44 -9 CURVE SMOOTH",
"48.667 -9 OFFCURVE",
"52.333 -6.333 OFFCURVE",
"55 -1 CURVE SMOOTH",
"62.333 14.333 OFFCURVE",
"71 22 OFFCURVE",
"81 22 CURVE SMOOTH",
"84.333 22 OFFCURVE",
"87.333 21.333 OFFCURVE",
"90 20 CURVE SMOOTH",
"92.667 18.667 OFFCURVE",
"95.667 17.667 OFFCURVE",
"99 17 CURVE",
"131 -3 OFFCURVE",
"175 -12 OFFCURVE",
"207 -12 CURVE SMOOTH",
"312.075 -12 OFFCURVE",
"414 34.94 OFFCURVE",
"414 149 CURVE SMOOTH",
"414 263.904 OFFCURVE",
"327.723 304.138 OFFCURVE",
"234 351 CURVE",
"177.761 374.68 OFFCURVE",
"120 396.939 OFFCURVE",
"120 462 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
94 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 48 106 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 48 25 48 41 48 57 48 73 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
63 929 91 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 21 119 21 135 21 151 21 167 21 183 21 199 21 215 21 231 21 247 21 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 21 23 21 39 21 55 21 71 21 87 21 103 21 119 21 135 21 151 21 167 21 183 21 199 21 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 21 230 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 449;
}
);
note = uni13DA;
},
{
glyphname = uni13DB;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"236.667 534.333 OFFCURVE",
"273.333 563 OFFCURVE",
"308 563 CURVE SMOOTH",
"374.865 563 OFFCURVE",
"414.783 512.084 OFFCURVE",
"426 456 CURVE",
"426 452.667 OFFCURVE",
"428 451 OFFCURVE",
"432 451 CURVE SMOOTH",
"435.333 451 OFFCURVE",
"438.333 452.333 OFFCURVE",
"441 455 CURVE",
"458.509 510.445 OFFCURVE",
"488.198 567 OFFCURVE",
"547 567 CURVE SMOOTH",
"597.667 567 OFFCURVE",
"624 519.333 OFFCURVE",
"624 458 CURVE SMOOTH",
"624 406 OFFCURVE",
"601 363 OFFCURVE",
"569 363 CURVE SMOOTH",
"533 363 OFFCURVE",
"508.667 378 OFFCURVE",
"498 394 CURVE",
"497.333 396.667 OFFCURVE",
"495 398 OFFCURVE",
"491 398 CURVE SMOOTH",
"485.667 398 OFFCURVE",
"478 388.333 OFFCURVE",
"478 383 CURVE SMOOTH",
"478 382 LINE",
"494 352.667 OFFCURVE",
"521 334 OFFCURVE",
"573 334 CURVE SMOOTH",
"646.917 334 OFFCURVE",
"707 391.338 OFFCURVE",
"707 465 CURVE SMOOTH",
"707 536.223 OFFCURVE",
"633.022 592 OFFCURVE",
"553 592 CURVE SMOOTH",
"513 592 OFFCURVE",
"474 571.333 OFFCURVE",
"454 538 CURVE",
"427.333 571.333 OFFCURVE",
"392 592 OFFCURVE",
"324 592 CURVE SMOOTH",
"261.333 592 OFFCURVE",
"207.833 566.833 OFFCURVE",
"164.5 527.5 CURVE SMOOTH",
"142.833 507.833 OFFCURVE",
"123.5 485 OFFCURVE",
"106.5 459 CURVE SMOOTH",
"72.5 407 OFFCURVE",
"49.833 348.167 OFFCURVE",
"38.5 287.5 CURVE SMOOTH",
"32.833 257.167 OFFCURVE",
"30 228.333 OFFCURVE",
"30 201 CURVE SMOOTH",
"30 82.535 OFFCURVE",
"92.073 -11 OFFCURVE",
"218 -11 CURVE SMOOTH",
"349.446 -11 OFFCURVE",
"410 68.605 OFFCURVE",
"410 184 CURVE SMOOTH",
"410 332.056 OFFCURVE",
"327.652 431.65 OFFCURVE",
"214 497 CURVE"
);
},
{
closed = 1;
nodes = (
"147.93 16 OFFCURVE",
"118 94.649 OFFCURVE",
"118 186 CURVE SMOOTH",
"118 271.893 OFFCURVE",
"142.416 388.653 OFFCURVE",
"193 462 CURVE",
"269.275 411.15 OFFCURVE",
"319 285.353 OFFCURVE",
"319 167 CURVE SMOOTH",
"319 69.667 OFFCURVE",
"281 16 OFFCURVE",
"221 16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 934 15 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 934 76 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
33 934 53 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 5 118 5 134 5 150 5 166 5 182 5 198 5 214 5 230 5 246 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 5 22 5 38 5 54 5 70 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 5 101 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
25 15 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 53 106 53 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 53 25 53 41 53 57 53 73 53 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
65 15 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 86 22 86 38 86 54 86 70 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 86 101 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
22 929 70 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
50 929 38 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
73 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 73 230 73 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 716;
}
);
note = uni13DB;
},
{
glyphname = uni13DC;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"318 26.776 OFFCURVE",
"379.705 -11 OFFCURVE",
"458 -11 CURVE SMOOTH",
"533.716 -11 OFFCURVE",
"602 32.192 OFFCURVE",
"602 120 CURVE SMOOTH",
"602 222.562 OFFCURVE",
"477.064 308.242 OFFCURVE",
"352 372 CURVE",
"413.333 400 OFFCURVE",
"460 436 OFFCURVE",
"460 488 CURVE SMOOTH",
"460 541.762 OFFCURVE",
"398.031 589 OFFCURVE",
"319 589 CURVE SMOOTH",
"228.105 589 OFFCURVE",
"150 544.604 OFFCURVE",
"150 474 CURVE SMOOTH",
"150 419.755 OFFCURVE",
"178.748 390.214 OFFCURVE",
"243 345 CURVE",
"133.982 297.139 OFFCURVE",
"13 211.917 OFFCURVE",
"13 102 CURVE SMOOTH",
"13 25.65 OFFCURVE",
"66.635 -10 OFFCURVE",
"136 -10 CURVE SMOOTH",
"216 -10 OFFCURVE",
"270 35 OFFCURVE",
"270 103 CURVE SMOOTH",
"270 173.667 OFFCURVE",
"222 217 OFFCURVE",
"138 217 CURVE SMOOTH",
"134.667 217 OFFCURVE",
"131.5 216.833 OFFCURVE",
"128.5 216.5 CURVE SMOOTH",
"125.5 216.167 OFFCURVE",
"122.333 216 OFFCURVE",
"119 216 CURVE",
"161.667 266.667 OFFCURVE",
"218.333 304 OFFCURVE",
"269 328 CURVE",
"329 298.667 OFFCURVE",
"378 263.667 OFFCURVE",
"434 225 CURVE",
"371.296 206.711 OFFCURVE",
"318 166.23 OFFCURVE",
"318 103 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"237 528.241 OFFCURVE",
"266.404 560 OFFCURVE",
"314 560 CURVE SMOOTH",
"351.333 560 OFFCURVE",
"378 524.667 OFFCURVE",
"378 490 CURVE SMOOTH",
"378 436.667 OFFCURVE",
"363.333 411.667 OFFCURVE",
"326 389 CURVE",
"278 418.333 OFFCURVE",
"237 458 OFFCURVE",
"237 498 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"398 163 OFFCURVE",
"423 188.333 OFFCURVE",
"455 203 CURVE",
"483 180.333 OFFCURVE",
"512 141 OFFCURVE",
"512 97 CURVE SMOOTH",
"512 62.706 OFFCURVE",
"497.924 18 OFFCURVE",
"460 18 CURVE SMOOTH",
"423.313 18 OFFCURVE",
"398 66 OFFCURVE",
"398 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 48.667 OFFCURVE",
"175.667 22 OFFCURVE",
"145 22 CURVE SMOOTH",
"118.333 22 OFFCURVE",
"86 54 OFFCURVE",
"86 114 CURVE SMOOTH",
"86 142 OFFCURVE",
"90 170.333 OFFCURVE",
"106 189 CURVE",
"165.341 189 OFFCURVE",
"192 145.605 OFFCURVE",
"192 94 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
101 934 25 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
63 934 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 934 87 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
77 934 0 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 0 106 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 0 121 0 137 0 153 0 169 0 185 0 201 0 217 0 233 0 249 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 0 25 0 41 0 57 0 73 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
69 0 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 69 106 69 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 69 25 69 41 69 57 69 73 69 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
45 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
5 69 45 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 63 22 63 38 63 54 63 70 63 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 63 101 63 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
93 35 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
17 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 93 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
48 0 77 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 87 106 87 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 87 121 87 137 87 153 87 169 87 185 87 201 87 217 87 233 87 249 87 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 87 25 87 41 87 57 87 73 87 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 101 118 101 134 101 150 101 166 101 182 101 198 101 214 101 230 101 246 101 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 101 22 101 38 101 54 101 70 101 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 101 101 101 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
108 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
40 929 72 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 929 98 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
82 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 82 119 82 135 82 151 82 167 82 183 82 199 82 215 82 231 82 247 82 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 82 23 82 39 82 55 82 71 82 87 82 103 82 119 82 135 82 151 82 167 82 183 82 199 82 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 82 230 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
104 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 609;
}
);
note = uni13DC;
},
{
glyphname = uni13DD;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"115 110 LINE SMOOTH",
"115 36.846 OFFCURVE",
"103.87 31.062 OFFCURVE",
"34 23 CURVE",
"26 21.667 OFFCURVE",
"22 16.333 OFFCURVE",
"22 7 CURVE SMOOTH",
"22 -1.667 OFFCURVE",
"26 -6 OFFCURVE",
"34 -6 CURVE",
"74 -3.333 OFFCURVE",
"114 0 OFFCURVE",
"158 0 CURVE SMOOTH",
"469 0 LINE SMOOTH",
"477.667 0 OFFCURVE",
"483.167 1.667 OFFCURVE",
"485.5 5 CURVE SMOOTH",
"487.833 8.333 OFFCURVE",
"489 10.667 OFFCURVE",
"489 12 CURVE SMOOTH",
"489 54.667 OFFCURVE",
"493.667 95 OFFCURVE",
"499 143 CURVE",
"499 148.333 OFFCURVE",
"492 153 OFFCURVE",
"484 153 CURVE SMOOTH",
"476 153 OFFCURVE",
"468.333 150.667 OFFCURVE",
"467 144 CURVE",
"456.302 55.745 OFFCURVE",
"420.521 36 OFFCURVE",
"328 36 CURVE SMOOTH",
"232.072 36 OFFCURVE",
"209 57.697 OFFCURVE",
"209 149 CURVE SMOOTH",
"209 310 LINE SMOOTH",
"209 448.279 OFFCURVE",
"241.237 560 OFFCURVE",
"360 560 CURVE SMOOTH",
"386.667 560 OFFCURVE",
"410 546.667 OFFCURVE",
"410 532 CURVE SMOOTH",
"410 528 OFFCURVE",
"408.667 524 OFFCURVE",
"406 520 CURVE SMOOTH",
"403.333 516 OFFCURVE",
"402 511.333 OFFCURVE",
"402 506 CURVE SMOOTH",
"402 483.333 OFFCURVE",
"420 468 OFFCURVE",
"444 468 CURVE SMOOTH",
"473.333 468 OFFCURVE",
"490 491 OFFCURVE",
"490 511 CURVE SMOOTH",
"490 559.944 OFFCURVE",
"432.467 592 OFFCURVE",
"369 592 CURVE SMOOTH",
"185.59 592 OFFCURVE",
"115 449.434 OFFCURVE",
"115 290 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 19 106 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 19 121 19 137 19 153 19 169 19 185 19 201 19 217 19 233 19 249 19 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 19 25 19 41 19 57 19 73 19 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
50 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
5 929 22 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 33 230 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 521;
}
);
note = uni13DD;
},
{
glyphname = uni13DE;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"115 446 LINE",
"115 110 LINE SMOOTH",
"115 36.846 OFFCURVE",
"103.87 31.062 OFFCURVE",
"34 23 CURVE",
"26 21.667 OFFCURVE",
"22 16.333 OFFCURVE",
"22 7 CURVE SMOOTH",
"22 -1.667 OFFCURVE",
"26 -6 OFFCURVE",
"34 -6 CURVE",
"74 -3.333 OFFCURVE",
"114 0 OFFCURVE",
"158 0 CURVE SMOOTH",
"469 0 LINE SMOOTH",
"477.667 0 OFFCURVE",
"483.167 1.667 OFFCURVE",
"485.5 5 CURVE SMOOTH",
"487.833 8.333 OFFCURVE",
"489 10.667 OFFCURVE",
"489 12 CURVE SMOOTH",
"489 54.667 OFFCURVE",
"493.667 95 OFFCURVE",
"499 143 CURVE",
"499 148.333 OFFCURVE",
"492 153 OFFCURVE",
"484 153 CURVE SMOOTH",
"476 153 OFFCURVE",
"468.333 150.667 OFFCURVE",
"467 144 CURVE",
"456.302 55.745 OFFCURVE",
"420.521 36 OFFCURVE",
"328 36 CURVE SMOOTH",
"232.072 36 OFFCURVE",
"209 57.697 OFFCURVE",
"209 149 CURVE SMOOTH",
"209 447 LINE SMOOTH",
"209 523.412 OFFCURVE",
"217.472 544.628 OFFCURVE",
"290 550 CURVE",
"296.667 550 OFFCURVE",
"300 558 OFFCURVE",
"300 566 CURVE SMOOTH",
"300 572.667 OFFCURVE",
"297.667 578 OFFCURVE",
"291 578 CURVE SMOOTH",
"274.2 578 OFFCURVE",
"179.152 573 OFFCURVE",
"162 573 CURVE SMOOTH",
"142 573 OFFCURVE",
"120.333 573.833 OFFCURVE",
"97 575.5 CURVE SMOOTH",
"73.667 577.167 OFFCURVE",
"52.667 578 OFFCURVE",
"34 578 CURVE SMOOTH",
"28.667 578 OFFCURVE",
"24 570.667 OFFCURVE",
"24 564 CURVE SMOOTH",
"24 557.333 OFFCURVE",
"28.667 550 OFFCURVE",
"34 550 CURVE",
"104.957 544.744 OFFCURVE",
"115 518.101 OFFCURVE",
"115 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 59 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
53 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 36 119 36 135 36 151 36 167 36 183 36 199 36 215 36 231 36 247 36 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 36 23 36 39 36 55 36 71 36 87 36 103 36 119 36 135 36 151 36 167 36 183 36 199 36 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 36 230 36 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 521;
}
);
note = uni13DE;
},
{
glyphname = uni13DF;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"252 592 OFFCURVE",
"175.667 565 OFFCURVE",
"121 513 CURVE SMOOTH",
"66.333 461 OFFCURVE",
"34 383.333 OFFCURVE",
"34 282 CURVE SMOOTH",
"34 94 OFFCURVE",
"129 -10 OFFCURVE",
"333 -10 CURVE SMOOTH",
"393 -10 OFFCURVE",
"433.333 0.667 OFFCURVE",
"484 26 CURVE",
"491.333 30.667 OFFCURVE",
"498 33 OFFCURVE",
"504 33 CURVE SMOOTH",
"531.267 33 OFFCURVE",
"532.759 -7 OFFCURVE",
"549 -7 CURVE SMOOTH",
"555.667 -7 OFFCURVE",
"563 -3.667 OFFCURVE",
"563 3 CURVE",
"562.333 25.667 OFFCURVE",
"561.167 47.167 OFFCURVE",
"559.5 67.5 CURVE SMOOTH",
"557.833 87.833 OFFCURVE",
"557 107.333 OFFCURVE",
"557 126 CURVE SMOOTH",
"557 150 OFFCURVE",
"558 172.667 OFFCURVE",
"562 194 CURVE",
"562 200.667 OFFCURVE",
"551 206 OFFCURVE",
"543 206 CURVE SMOOTH",
"537 206 OFFCURVE",
"534 203.333 OFFCURVE",
"534 198 CURVE",
"523.333 138 OFFCURVE",
"503.333 93.333 OFFCURVE",
"466 60 CURVE SMOOTH",
"435.333 33.333 OFFCURVE",
"394 26 OFFCURVE",
"338 26 CURVE SMOOTH",
"198.467 26 OFFCURVE",
"144 160.091 OFFCURVE",
"144 295 CURVE SMOOTH",
"144 423.555 OFFCURVE",
"190.881 554 OFFCURVE",
"334 554 CURVE SMOOTH",
"431.333 554 OFFCURVE",
"495.667 509 OFFCURVE",
"525 405 CURVE SMOOTH",
"526.333 399.667 OFFCURVE",
"530.667 397 OFFCURVE",
"538 397 CURVE SMOOTH",
"544.667 397 OFFCURVE",
"554 400.667 OFFCURVE",
"554 406 CURVE",
"552 422.667 OFFCURVE",
"550 439 OFFCURVE",
"548 455 CURVE SMOOTH",
"546 471 OFFCURVE",
"545 487 OFFCURVE",
"545 503 CURVE SMOOTH",
"545 523 OFFCURVE",
"546 543.333 OFFCURVE",
"550 562 CURVE",
"550 566.667 OFFCURVE",
"546 569 OFFCURVE",
"538 569 CURVE SMOOTH",
"521.81 569 OFFCURVE",
"522.19 546 OFFCURVE",
"506 546 CURVE SMOOTH",
"499.333 546 OFFCURVE",
"487 551.333 OFFCURVE",
"475 558 CURVE",
"431 578 OFFCURVE",
"390.667 592 OFFCURVE",
"340 592 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 934 70 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 32 118 32 134 32 150 32 166 32 182 32 198 32 214 32 230 32 246 32 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 32 22 32 38 32 54 32 70 32 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 32 101 32 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
67 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 929 27 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 37 119 37 135 37 151 37 167 37 183 37 199 37 215 37 231 37 247 37 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 37 23 37 39 37 55 37 71 37 87 37 103 37 119 37 135 37 151 37 167 37 183 37 199 37 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 37 230 37 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 590;
}
);
note = uni13DF;
},
{
glyphname = uni13E0;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"456 242 LINE",
"500 252.667 OFFCURVE",
"533.667 262.333 OFFCURVE",
"555 269 CURVE",
"569.667 274.333 OFFCURVE",
"570 289.667 OFFCURVE",
"570 299 CURVE SMOOTH",
"570 309.667 OFFCURVE",
"562 323 OFFCURVE",
"550 323 CURVE SMOOTH",
"548.667 323 OFFCURVE",
"546 322.333 OFFCURVE",
"542 321 CURVE",
"527.333 313.667 OFFCURVE",
"513 307.167 OFFCURVE",
"499 301.5 CURVE SMOOTH",
"485 295.833 OFFCURVE",
"470.667 290 OFFCURVE",
"456 284 CURVE",
"456 447 LINE SMOOTH",
"456 524.28 OFFCURVE",
"464.766 543.575 OFFCURVE",
"538 549 CURVE",
"544.667 549 OFFCURVE",
"547 557 OFFCURVE",
"547 565 CURVE SMOOTH",
"547 571.667 OFFCURVE",
"544.667 578 OFFCURVE",
"538 578 CURVE SMOOTH",
"514.667 578 OFFCURVE",
"493.667 577.167 OFFCURVE",
"475 575.5 CURVE SMOOTH",
"456.333 573.833 OFFCURVE",
"434.667 573 OFFCURVE",
"410 573 CURVE SMOOTH",
"389.333 573 OFFCURVE",
"367.333 573.833 OFFCURVE",
"344 575.5 CURVE SMOOTH",
"320.667 577.167 OFFCURVE",
"300 578 OFFCURVE",
"282 578 CURVE SMOOTH",
"275.333 578 OFFCURVE",
"271 571 OFFCURVE",
"271 563 CURVE SMOOTH",
"271 556.333 OFFCURVE",
"275.333 549 OFFCURVE",
"282 549 CURVE",
"350.461 543.734 OFFCURVE",
"363 516.832 OFFCURVE",
"363 447 CURVE SMOOTH",
"363 253 LINE",
"317.667 240.333 OFFCURVE",
"272.667 232.667 OFFCURVE",
"228 230 CURVE",
"236 258 OFFCURVE",
"243 279.667 OFFCURVE",
"243 313 CURVE SMOOTH",
"243 382.179 OFFCURVE",
"176.38 419 OFFCURVE",
"125 419 CURVE SMOOTH",
"60.306 419 OFFCURVE",
"8 391.428 OFFCURVE",
"8 320 CURVE SMOOTH",
"8 252 OFFCURVE",
"64 218.333 OFFCURVE",
"144 209 CURVE",
"128 162.333 OFFCURVE",
"122 127.333 OFFCURVE",
"122 94 CURVE SMOOTH",
"122 15.528 OFFCURVE",
"187.208 -11 OFFCURVE",
"263 -11 CURVE SMOOTH",
"378.316 -11 OFFCURVE",
"458 42.75 OFFCURVE",
"458 194 CURVE"
);
},
{
closed = 1;
nodes = (
"364 150 LINE SMOOTH",
"364 71.389 OFFCURVE",
"339.091 19 OFFCURVE",
"267 19 CURVE SMOOTH",
"220.333 19 OFFCURVE",
"202 58 OFFCURVE",
"202 106 CURVE SMOOTH",
"202 134 OFFCURVE",
"207.667 163.333 OFFCURVE",
"221 206 CURVE",
"266.333 209.333 OFFCURVE",
"313.667 215 OFFCURVE",
"363 223 CURVE"
);
},
{
closed = 1;
nodes = (
"74 367.667 OFFCURVE",
"89.333 395 OFFCURVE",
"120 395 CURVE SMOOTH",
"132.667 395 OFFCURVE",
"143.333 388.333 OFFCURVE",
"152 375 CURVE SMOOTH",
"160.667 361.667 OFFCURVE",
"165 340 OFFCURVE",
"165 310 CURVE SMOOTH",
"165 283.333 OFFCURVE",
"159.667 260.667 OFFCURVE",
"153 230 CURVE",
"100.333 239.333 OFFCURVE",
"74 269.667 OFFCURVE",
"74 321 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 934 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 934 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 89 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 81 22 81 38 81 54 81 70 81 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 81 101 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
95 10 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
95 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
26 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 95 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
89 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
61 89 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 90 118 90 134 90 150 90 166 90 182 90 198 90 214 90 230 90 246 90 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 90 22 90 38 90 54 90 70 90 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 90 101 90 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
43 929 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
21 929 98 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 929 78 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
84 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 84 119 84 135 84 151 84 167 84 183 84 199 84 215 84 231 84 247 84 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 84 23 84 39 84 55 84 71 84 87 84 103 84 119 84 135 84 151 84 167 84 183 84 199 84 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 84 230 84 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 569;
}
);
note = uni13E0;
},
{
glyphname = uni13E1;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"264.411 430.182 OFFCURVE",
"222 302.015 OFFCURVE",
"222 201 CURVE SMOOTH",
"222 83.826 OFFCURVE",
"274.79 -11 OFFCURVE",
"389 -11 CURVE SMOOTH",
"496.972 -11 OFFCURVE",
"542 75.068 OFFCURVE",
"542 185 CURVE SMOOTH",
"542 297.279 OFFCURVE",
"493.054 430.223 OFFCURVE",
"418 516 CURVE",
"446 542.667 OFFCURVE",
"480.667 562 OFFCURVE",
"514 562 CURVE SMOOTH",
"587.749 562 OFFCURVE",
"638 494.478 OFFCURVE",
"638 428 CURVE SMOOTH",
"638 352 OFFCURVE",
"612.667 309 OFFCURVE",
"570 297 CURVE",
"566.667 295 OFFCURVE",
"565 292 OFFCURVE",
"565 288 CURVE SMOOTH",
"565 281.333 OFFCURVE",
"568 278 OFFCURVE",
"574 278 CURVE SMOOTH",
"650.22 278 OFFCURVE",
"725 337.547 OFFCURVE",
"725 426 CURVE SMOOTH",
"725 523.126 OFFCURVE",
"622.921 592 OFFCURVE",
"517 592 CURVE SMOOTH",
"465 592 OFFCURVE",
"420.333 576 OFFCURVE",
"383 548 CURVE",
"349.667 574.667 OFFCURVE",
"314 592 OFFCURVE",
"250 592 CURVE SMOOTH",
"118.431 592 OFFCURVE",
"71.569 517.417 OFFCURVE",
"52 400 CURVE SMOOTH",
"48 374.667 OFFCURVE",
"39.667 364.667 OFFCURVE",
"13 362 CURVE",
"6.333 362 OFFCURVE",
"4 355 OFFCURVE",
"4 347 CURVE SMOOTH",
"4 338.333 OFFCURVE",
"7 334 OFFCURVE",
"13 334 CURVE SMOOTH",
"27 334 OFFCURVE",
"39.167 335 OFFCURVE",
"49.5 337 CURVE SMOOTH",
"59.833 339 OFFCURVE",
"72 340 OFFCURVE",
"86 340 CURVE SMOOTH",
"101.333 340 OFFCURVE",
"114.5 339 OFFCURVE",
"125.5 337 CURVE SMOOTH",
"136.5 335 OFFCURVE",
"149 334 OFFCURVE",
"163 334 CURVE SMOOTH",
"170.333 334 OFFCURVE",
"174 338.333 OFFCURVE",
"174 347 CURVE SMOOTH",
"174 355 OFFCURVE",
"171.667 362 OFFCURVE",
"165 362 CURVE",
"130.333 364.667 OFFCURVE",
"118 377 OFFCURVE",
"118 429 CURVE SMOOTH",
"118 503.02 OFFCURVE",
"166.172 562 OFFCURVE",
"229 562 CURVE SMOOTH",
"277 562 OFFCURVE",
"307 543.333 OFFCURVE",
"335 506 CURVE"
);
},
{
closed = 1;
nodes = (
"333.407 16 OFFCURVE",
"310 98.338 OFFCURVE",
"310 186 CURVE SMOOTH",
"310 274 OFFCURVE",
"331.333 374 OFFCURVE",
"374 450 CURVE",
"419.457 366.662 OFFCURVE",
"454 239.488 OFFCURVE",
"454 146 CURVE SMOOTH",
"454 70 OFFCURVE",
"434 16 OFFCURVE",
"390 16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
81 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
89 97 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
58 934 71 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 71 106 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 71 25 71 41 71 57 71 73 71 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 81 118 81 134 81 150 81 166 81 182 81 198 81 214 81 230 81 246 81 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 81 22 81 38 81 54 81 70 81 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 81 101 81 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
58 97 74 97 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 97 25 97 41 97 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
94 97 89 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
103 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
35 929 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
86 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 86 119 86 135 86 151 86 167 86 183 86 199 86 215 86 231 86 247 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 86 23 86 39 86 55 86 71 86 87 86 103 86 119 86 135 86 151 86 167 86 183 86 199 86 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 86 230 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 738;
}
);
note = uni13E1;
},
{
glyphname = uni13E2;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"210 243 LINE SMOOTH",
"210 259 OFFCURVE",
"214 261 OFFCURVE",
"226 261 CURVE SMOOTH",
"362.424 263.675 OFFCURVE",
"470 305.553 OFFCURVE",
"470 430 CURVE SMOOTH",
"470 536.292 OFFCURVE",
"386.172 578 OFFCURVE",
"288 578 CURVE SMOOTH",
"268 578 OFFCURVE",
"246.667 577.167 OFFCURVE",
"224 575.5 CURVE SMOOTH",
"201.333 573.833 OFFCURVE",
"172.667 573 OFFCURVE",
"138 573 CURVE SMOOTH",
"118 573 OFFCURVE",
"100.333 573.833 OFFCURVE",
"85 575.5 CURVE SMOOTH",
"69.667 577.167 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE SMOOTH",
"106.779 550 OFFCURVE",
"117 503.765 OFFCURVE",
"117 430 CURVE SMOOTH",
"117 110 LINE SMOOTH",
"117 44.538 OFFCURVE",
"103.42 29.452 OFFCURVE",
"38 24 CURVE",
"31.333 22 OFFCURVE",
"28 17 OFFCURVE",
"28 9 CURVE SMOOTH",
"28 2.333 OFFCURVE",
"31.333 -5 OFFCURVE",
"38 -5 CURVE SMOOTH",
"58 -5 OFFCURVE",
"78.667 -3.833 OFFCURVE",
"100 -1.5 CURVE SMOOTH",
"121.333 0.833 OFFCURVE",
"143 2 OFFCURVE",
"165 2 CURVE SMOOTH",
"185 2 OFFCURVE",
"206.167 0.833 OFFCURVE",
"228.5 -1.5 CURVE SMOOTH",
"250.833 -3.833 OFFCURVE",
"277 -5 OFFCURVE",
"307 -5 CURVE SMOOTH",
"315 -5 OFFCURVE",
"319 -0.667 OFFCURVE",
"319 8 CURVE SMOOTH",
"319 16 OFFCURVE",
"316 24 OFFCURVE",
"308 24 CURVE",
"238.878 29.53 OFFCURVE",
"210 42.915 OFFCURVE",
"210 118 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 500 LINE SMOOTH",
"210 534.667 OFFCURVE",
"219.667 543 OFFCURVE",
"265 543 CURVE SMOOTH",
"345 543 OFFCURVE",
"375 510.667 OFFCURVE",
"375 420 CURVE SMOOTH",
"375 321.401 OFFCURVE",
"335.302 294 OFFCURVE",
"228 294 CURVE SMOOTH",
"213.333 294 OFFCURVE",
"210 296 OFFCURVE",
"210 304 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
72 35 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
49 934 66 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 66 106 66 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 66 25 66 41 66 57 66 73 66 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
44 929 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 929 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 5 230 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 484;
}
);
note = uni13E2;
},
{
glyphname = uni13E3;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"144 427.7 OFFCURVE",
"203.585 556 OFFCURVE",
"323 556 CURVE SMOOTH",
"399 556 OFFCURVE",
"446 534.333 OFFCURVE",
"446 485 CURVE SMOOTH",
"446 473.667 OFFCURVE",
"441.5 466.333 OFFCURVE",
"432.5 463 CURVE SMOOTH",
"423.5 459.667 OFFCURVE",
"408.333 456.667 OFFCURVE",
"387 454 CURVE",
"380.333 452.667 OFFCURVE",
"377 445.667 OFFCURVE",
"377 439 CURVE SMOOTH",
"377 430.333 OFFCURVE",
"380.333 426 OFFCURVE",
"387 426 CURVE",
"424.333 428.667 OFFCURVE",
"441.667 430 OFFCURVE",
"479 430 CURVE SMOOTH",
"492.227 430 OFFCURVE",
"531.236 427 OFFCURVE",
"559 427 CURVE SMOOTH",
"564.333 427 OFFCURVE",
"567 434.333 OFFCURVE",
"567 441 CURVE SMOOTH",
"567 446.333 OFFCURVE",
"565.333 451.667 OFFCURVE",
"560 453 CURVE",
"529.529 455.77 OFFCURVE",
"522.838 462.757 OFFCURVE",
"510 491 CURVE SMOOTH",
"480.667 556.333 OFFCURVE",
"427.333 592 OFFCURVE",
"326 592 CURVE SMOOTH",
"154.414 592 OFFCURVE",
"34 467.349 OFFCURVE",
"34 294 CURVE SMOOTH",
"34 92.667 OFFCURVE",
"141.333 -8 OFFCURVE",
"320 -8 CURVE SMOOTH",
"471.48 -8 OFFCURVE",
"563 84.066 OFFCURVE",
"563 189 CURVE SMOOTH",
"563 245.658 OFFCURVE",
"525.062 294 OFFCURVE",
"466 294 CURVE SMOOTH",
"436.667 294 OFFCURVE",
"406 282.667 OFFCURVE",
"406 252 CURVE SMOOTH",
"406 216.281 OFFCURVE",
"422.327 212 OFFCURVE",
"448 212 CURVE SMOOTH",
"476.858 212 OFFCURVE",
"490 196.391 OFFCURVE",
"490 155 CURVE SMOOTH",
"490 75 OFFCURVE",
"423.333 28 OFFCURVE",
"322 28 CURVE SMOOTH",
"189.747 28 OFFCURVE",
"144 156.389 OFFCURVE",
"144 298 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 31 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 15 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 15 74 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 15 121 15 137 15 153 15 169 15 185 15 201 15 217 15 233 15 249 15 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 15 25 15 41 15 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 929 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 5 230 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 593;
}
);
note = uni13E3;
},
{
glyphname = uni13E4;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"322 500 LINE SMOOTH",
"322 541.333 OFFCURVE",
"350 546.333 OFFCURVE",
"394 549 CURVE",
"399.333 549 OFFCURVE",
"402 553.333 OFFCURVE",
"402 562 CURVE SMOOTH",
"402 570.667 OFFCURVE",
"399.333 575 OFFCURVE",
"394 575 CURVE SMOOTH",
"33 575 LINE SMOOTH",
"17 575 OFFCURVE",
"9 571.333 OFFCURVE",
"9 564 CURVE SMOOTH",
"9 551.333 OFFCURVE",
"9.667 538.833 OFFCURVE",
"11 526.5 CURVE SMOOTH",
"12.333 514.167 OFFCURVE",
"13 501.667 OFFCURVE",
"13 489 CURVE SMOOTH",
"13 469 OFFCURVE",
"12 449 OFFCURVE",
"10 429 CURVE",
"10 423.667 OFFCURVE",
"18.333 419 OFFCURVE",
"25 419 CURVE SMOOTH",
"31.667 419 OFFCURVE",
"35.667 422 OFFCURVE",
"37 428 CURVE",
"55.078 526.139 OFFCURVE",
"73.558 539 OFFCURVE",
"159 539 CURVE SMOOTH",
"209.667 539 OFFCURVE",
"229 533.667 OFFCURVE",
"229 491 CURVE SMOOTH",
"229 111 LINE SMOOTH",
"229 39.281 OFFCURVE",
"215.03 29.31 OFFCURVE",
"146 24 CURVE",
"139.333 22.667 OFFCURVE",
"136 17.333 OFFCURVE",
"136 8 CURVE SMOOTH",
"136 -0.667 OFFCURVE",
"139.333 -5 OFFCURVE",
"146 -5 CURVE SMOOTH",
"165.333 -5 OFFCURVE",
"182.333 -3.833 OFFCURVE",
"197 -1.5 CURVE SMOOTH",
"211.667 0.833 OFFCURVE",
"229.667 2 OFFCURVE",
"251 2 CURVE SMOOTH",
"262.333 2 OFFCURVE",
"273 0.833 OFFCURVE",
"283 -1.5 CURVE SMOOTH",
"293 -3.833 OFFCURVE",
"302.333 -5 OFFCURVE",
"311 -5 CURVE SMOOTH",
"317.667 -5 OFFCURVE",
"325 -5 OFFCURVE",
"333 7 CURVE",
"371.027 70.751 OFFCURVE",
"442.849 187.064 OFFCURVE",
"486.5 260 CURVE SMOOTH",
"539.167 348 OFFCURVE",
"589.667 434.333 OFFCURVE",
"627 505 CURVE",
"646.379 535.452 OFFCURVE",
"653.843 543.98 OFFCURVE",
"694 549 CURVE",
"700 550.333 OFFCURVE",
"703 555 OFFCURVE",
"703 563 CURVE SMOOTH",
"703 569.667 OFFCURVE",
"700.333 577 OFFCURVE",
"695 577 CURVE SMOOTH",
"677 577 OFFCURVE",
"662.333 576 OFFCURVE",
"651 574 CURVE SMOOTH",
"639.667 572 OFFCURVE",
"626 571 OFFCURVE",
"610 571 CURVE SMOOTH",
"594 571 OFFCURVE",
"578.333 572 OFFCURVE",
"563 574 CURVE SMOOTH",
"547.667 576 OFFCURVE",
"531 577 OFFCURVE",
"513 577 CURVE SMOOTH",
"505 577 OFFCURVE",
"502 570 OFFCURVE",
"502 562 CURVE SMOOTH",
"502 553.333 OFFCURVE",
"505.667 549 OFFCURVE",
"513 549 CURVE SMOOTH",
"551.667 547.667 OFFCURVE",
"571 537.667 OFFCURVE",
"571 499 CURVE SMOOTH",
"571 468.333 OFFCURVE",
"534.833 398.167 OFFCURVE",
"487.5 317.5 CURVE SMOOTH",
"440.167 236.833 OFFCURVE",
"380.667 146.667 OFFCURVE",
"334 76 CURVE",
"332 72.667 OFFCURVE",
"329.667 71 OFFCURVE",
"327 71 CURVE SMOOTH",
"323.667 71 OFFCURVE",
"322 73.333 OFFCURVE",
"322 78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 56 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
47 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
78 929 82 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
82 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 51 119 51 135 51 151 51 167 51 183 51 199 51 215 51 231 51 247 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 51 23 51 39 51 55 51 71 51 87 51 103 51 119 51 135 51 151 51 167 51 183 51 199 51 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 51 230 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
77 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
60 929 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 708;
}
);
note = uni13E4;
},
{
glyphname = uni13E5;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"100 111 LINE SMOOTH",
"100 38.01 OFFCURVE",
"92.364 35.061 OFFCURVE",
"26 24 CURVE SMOOTH",
"18 22.667 OFFCURVE",
"16 16 OFFCURVE",
"16 8 CURVE SMOOTH",
"16 -0.667 OFFCURVE",
"19.333 -5 OFFCURVE",
"26 -5 CURVE SMOOTH",
"44.667 -5 OFFCURVE",
"64 -3.833 OFFCURVE",
"84 -1.5 CURVE SMOOTH",
"104 0.833 OFFCURVE",
"125 2 OFFCURVE",
"147 2 CURVE SMOOTH",
"167.667 2 OFFCURVE",
"187 0.833 OFFCURVE",
"205 -1.5 CURVE SMOOTH",
"223 -3.833 OFFCURVE",
"243.333 -5 OFFCURVE",
"266 -5 CURVE SMOOTH",
"274 -5 OFFCURVE",
"278 -0.667 OFFCURVE",
"278 8 CURVE SMOOTH",
"278 17.333 OFFCURVE",
"274.333 22.667 OFFCURVE",
"267 24 CURVE",
"203.959 29.482 OFFCURVE",
"193 41.275 OFFCURVE",
"193 111 CURVE SMOOTH",
"193 261 LINE",
"218.132 282.991 OFFCURVE",
"304.884 330 OFFCURVE",
"356 330 CURVE SMOOTH",
"380.665 330 OFFCURVE",
"394 251.04 OFFCURVE",
"394 163 CURVE SMOOTH",
"394 110 LINE SMOOTH",
"394 42.267 OFFCURVE",
"386.457 29.943 OFFCURVE",
"330 24 CURVE",
"322 22.667 OFFCURVE",
"319 16 OFFCURVE",
"319 8 CURVE SMOOTH",
"319 0 OFFCURVE",
"322.667 -4 OFFCURVE",
"330 -4 CURVE SMOOTH",
"348.667 -4 OFFCURVE",
"368 -3 OFFCURVE",
"388 -1 CURVE SMOOTH",
"408 1 OFFCURVE",
"427.667 2 OFFCURVE",
"447 2 CURVE SMOOTH",
"463.667 2 OFFCURVE",
"481 1 OFFCURVE",
"499 -1 CURVE SMOOTH",
"517 -3 OFFCURVE",
"534.333 -4 OFFCURVE",
"551 -4 CURVE SMOOTH",
"558.333 -4 OFFCURVE",
"562 0 OFFCURVE",
"562 8 CURVE SMOOTH",
"562 17.333 OFFCURVE",
"558.333 22.667 OFFCURVE",
"551 24 CURVE",
"498.86 29.793 OFFCURVE",
"488 43.166 OFFCURVE",
"488 110 CURVE SMOOTH",
"488 189 LINE SMOOTH",
"488 273 OFFCURVE",
"467.333 319.667 OFFCURVE",
"414 353 CURVE",
"438 359 OFFCURVE",
"458.667 362 OFFCURVE",
"476 362 CURVE SMOOTH",
"497.333 362 OFFCURVE",
"526 356.333 OFFCURVE",
"526 343 CURVE SMOOTH",
"526 339 OFFCURVE",
"525.167 335.333 OFFCURVE",
"523.5 332 CURVE SMOOTH",
"521.833 328.667 OFFCURVE",
"521 324.667 OFFCURVE",
"521 320 CURVE SMOOTH",
"521 298.667 OFFCURVE",
"542 286 OFFCURVE",
"562 286 CURVE SMOOTH",
"588.667 286 OFFCURVE",
"613 307.333 OFFCURVE",
"613 334 CURVE SMOOTH",
"613 380.667 OFFCURVE",
"575 400 OFFCURVE",
"495 400 CURVE SMOOTH",
"409.683 400 OFFCURVE",
"254.986 344.12 OFFCURVE",
"193 301 CURVE",
"193 447 LINE SMOOTH",
"193 523.412 OFFCURVE",
"201.472 544.628 OFFCURVE",
"274 550 CURVE",
"279.333 550 OFFCURVE",
"283 558 OFFCURVE",
"283 566 CURVE SMOOTH",
"283 572.667 OFFCURVE",
"280.667 578 OFFCURVE",
"274 578 CURVE SMOOTH",
"250.667 578 OFFCURVE",
"229.833 577.167 OFFCURVE",
"211.5 575.5 CURVE SMOOTH",
"193.167 573.833 OFFCURVE",
"171.333 573 OFFCURVE",
"146 573 CURVE SMOOTH",
"125.333 573 OFFCURVE",
"104.833 573.833 OFFCURVE",
"84.5 575.5 CURVE SMOOTH",
"64.167 577.167 OFFCURVE",
"44.667 578 OFFCURVE",
"26 578 CURVE SMOOTH",
"20.667 578 OFFCURVE",
"17 570.667 OFFCURVE",
"17 564 CURVE SMOOTH",
"17 557.333 OFFCURVE",
"20.667 550 OFFCURVE",
"26 550 CURVE",
"87.891 541.927 OFFCURVE",
"100 516.485 OFFCURVE",
"100 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
92 109 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
55 934 80 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 934 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
109 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
99 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
92 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 0 99 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 46 106 46 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 46 121 46 137 46 153 46 169 46 185 46 201 46 217 46 233 46 249 46 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 46 25 46 41 46 57 46 73 46 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
51 80 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
119 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
64 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
70 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
101 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
101 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
107 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
107 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 929 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 34 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
86 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
51 34 86 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 623;
}
);
note = uni13E5;
},
{
glyphname = uni13E6;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"114 111 LINE SMOOTH",
"114 37.423 OFFCURVE",
"102.354 31.118 OFFCURVE",
"32 23 CURVE SMOOTH",
"25.333 22.333 OFFCURVE",
"22 17.333 OFFCURVE",
"22 8 CURVE SMOOTH",
"22 -0.667 OFFCURVE",
"25.333 -5 OFFCURVE",
"32 -5 CURVE SMOOTH",
"50.667 -5 OFFCURVE",
"71.667 -3.833 OFFCURVE",
"95 -1.5 CURVE SMOOTH",
"118.333 0.833 OFFCURVE",
"140.667 2 OFFCURVE",
"162 2 CURVE SMOOTH",
"182.667 2 OFFCURVE",
"201 0.833 OFFCURVE",
"217 -1.5 CURVE SMOOTH",
"233 -3.833 OFFCURVE",
"252.333 -5 OFFCURVE",
"275 -5 CURVE SMOOTH",
"283 -5 OFFCURVE",
"287 -0.667 OFFCURVE",
"287 8 CURVE SMOOTH",
"287 17.333 OFFCURVE",
"283.667 22.333 OFFCURVE",
"277 23 CURVE SMOOTH",
"211.868 31.141 OFFCURVE",
"207 38.633 OFFCURVE",
"207 111 CURVE SMOOTH",
"207 219 LINE SMOOTH",
"207 235 OFFCURVE",
"212.667 252 OFFCURVE",
"238 252 CURVE",
"248.667 250.667 OFFCURVE",
"263.333 251.333 OFFCURVE",
"278 238 CURVE SMOOTH",
"334.77 183.934 OFFCURVE",
"357.127 148.04 OFFCURVE",
"395 75 CURVE SMOOTH",
"399.667 65.667 OFFCURVE",
"402 57.333 OFFCURVE",
"402 50 CURVE SMOOTH",
"402 20.268 OFFCURVE",
"349 32.559 OFFCURVE",
"349 10 CURVE SMOOTH",
"349 3.333 OFFCURVE",
"353.333 -5 OFFCURVE",
"360 -5 CURVE SMOOTH",
"395.232 -5 OFFCURVE",
"440.988 2 OFFCURVE",
"475 2 CURVE SMOOTH",
"496.333 2 OFFCURVE",
"516 0.833 OFFCURVE",
"534 -1.5 CURVE SMOOTH",
"552 -3.833 OFFCURVE",
"573.333 -5 OFFCURVE",
"598 -5 CURVE SMOOTH",
"605.333 -5 OFFCURVE",
"609 -0.667 OFFCURVE",
"609 8 CURVE SMOOTH",
"609 16.667 OFFCURVE",
"605.333 21.667 OFFCURVE",
"598 23 CURVE",
"548.667 25.667 OFFCURVE",
"526 48 OFFCURVE",
"502 88 CURVE SMOOTH",
"454.46 165.566 OFFCURVE",
"387.25 255.513 OFFCURVE",
"332 308 CURVE",
"324 314 OFFCURVE",
"320 319.333 OFFCURVE",
"320 324 CURVE SMOOTH",
"320 327.333 OFFCURVE",
"321.333 330.667 OFFCURVE",
"324 334 CURVE",
"369.333 376.667 OFFCURVE",
"417.333 442.667 OFFCURVE",
"460 500 CURVE SMOOTH",
"487.129 537.981 OFFCURVE",
"500.955 544.995 OFFCURVE",
"546 550 CURVE",
"551.333 550 OFFCURVE",
"554 557.333 OFFCURVE",
"554 564 CURVE SMOOTH",
"554 570.667 OFFCURVE",
"551.333 578 OFFCURVE",
"546 578 CURVE SMOOTH",
"527.333 578 OFFCURVE",
"512.167 577 OFFCURVE",
"500.5 575 CURVE SMOOTH",
"488.833 573 OFFCURVE",
"475.333 572 OFFCURVE",
"460 572 CURVE SMOOTH",
"442.667 572 OFFCURVE",
"426.167 573 OFFCURVE",
"410.5 575 CURVE SMOOTH",
"394.833 577 OFFCURVE",
"377 578 OFFCURVE",
"357 578 CURVE SMOOTH",
"350.333 578 OFFCURVE",
"346 570.667 OFFCURVE",
"346 564 CURVE SMOOTH",
"346 538.863 OFFCURVE",
"407 553.214 OFFCURVE",
"407 524 CURVE SMOOTH",
"407 484.878 OFFCURVE",
"310.149 369.149 OFFCURVE",
"233 292 CURVE SMOOTH",
"226.333 285.333 OFFCURVE",
"220.667 282 OFFCURVE",
"216 282 CURVE SMOOTH",
"210 282 OFFCURVE",
"207 286 OFFCURVE",
"207 294 CURVE SMOOTH",
"207 447 LINE SMOOTH",
"207 522.881 OFFCURVE",
"212.351 544.642 OFFCURVE",
"282 550 CURVE",
"287.333 550 OFFCURVE",
"292 557.333 OFFCURVE",
"292 564 CURVE SMOOTH",
"292 570.667 OFFCURVE",
"287.333 578 OFFCURVE",
"282 578 CURVE SMOOTH",
"246.011 578 OFFCURVE",
"196.989 572 OFFCURVE",
"161 572 CURVE SMOOTH",
"140.333 572 OFFCURVE",
"118.333 573 OFFCURVE",
"95 575 CURVE SMOOTH",
"71.667 577 OFFCURVE",
"51 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE",
"100.687 544.585 OFFCURVE",
"114 517.178 OFFCURVE",
"114 447 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
30 8 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
100 121 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 121 74 121 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 121 121 121 137 121 153 121 169 121 185 121 201 121 217 121 233 121 249 121 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 121 25 121 41 121 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
100 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
121 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
95 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
131 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
84 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
92 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
92 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
123 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
123 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
129 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
129 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 80 119 80 135 80 151 80 167 80 183 80 199 80 215 80 231 80 247 80 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 80 23 80 39 80 55 80 71 80 87 80 103 80 119 80 135 80 151 80 167 80 183 80 199 80 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 80 230 80 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
119 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
133 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 625;
}
);
note = uni13E6;
},
{
glyphname = uni13E7;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"446 518.031 OFFCURVE",
"456.251 544.635 OFFCURVE",
"526 550 CURVE",
"534 550 OFFCURVE",
"537 557.333 OFFCURVE",
"537 564 CURVE SMOOTH",
"537 570.667 OFFCURVE",
"534 578 OFFCURVE",
"526 578 CURVE SMOOTH",
"508 578 OFFCURVE",
"487.333 577.167 OFFCURVE",
"464 575.5 CURVE SMOOTH",
"440.667 573.833 OFFCURVE",
"418.667 573 OFFCURVE",
"398 573 CURVE SMOOTH",
"374.667 573 OFFCURVE",
"353.167 573.833 OFFCURVE",
"333.5 575.5 CURVE SMOOTH",
"313.833 577.167 OFFCURVE",
"292.667 578 OFFCURVE",
"270 578 CURVE SMOOTH",
"264 578 OFFCURVE",
"261 573.667 OFFCURVE",
"261 565 CURVE SMOOTH",
"261 558.333 OFFCURVE",
"264.667 550 OFFCURVE",
"270 550 CURVE",
"342.8 544.607 OFFCURVE",
"351 524.69 OFFCURVE",
"351 447 CURVE SMOOTH",
"351 382 LINE SMOOTH",
"351 372.667 OFFCURVE",
"348.333 368 OFFCURVE",
"343 368 CURVE SMOOTH",
"195.252 368 OFFCURVE",
"26 334.761 OFFCURVE",
"26 173 CURVE SMOOTH",
"26 35.411 OFFCURVE",
"123.966 -10 OFFCURVE",
"251 -10 CURVE SMOOTH",
"394.173 -10 OFFCURVE",
"446 85.465 OFFCURVE",
"446 216 CURVE SMOOTH",
"446 447 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"351 186 LINE SMOOTH",
"351 82 OFFCURVE",
"318 22 OFFCURVE",
"246 22 CURVE SMOOTH",
"178.444 22 OFFCURVE",
"125 81.263 OFFCURVE",
"125 175 CURVE SMOOTH",
"125 303.332 OFFCURVE",
"229.455 330.985 OFFCURVE",
"341 334 CURVE SMOOTH",
"346.333 334 OFFCURVE",
"351 333.667 OFFCURVE",
"351 327 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
29 929 24 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 929 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 59 119 59 135 59 151 59 167 59 183 59 199 59 215 59 231 59 247 59 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 59 23 59 39 59 55 59 71 59 87 59 103 59 119 59 135 59 151 59 167 59 183 59 199 59 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 59 230 59 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 550;
}
);
note = uni13E7;
},
{
glyphname = uni13E8;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"387 -11 OFFCURVE",
"444.667 15.333 OFFCURVE",
"470 58 CURVE",
"503 2 LINE",
"511 2 LINE SMOOTH",
"538.124 2 OFFCURVE",
"551.498 53.994 OFFCURVE",
"562 82 CURVE",
"567.946 54.253 OFFCURVE",
"581.409 27.977 OFFCURVE",
"591 4 CURVE",
"591.667 2.667 OFFCURVE",
"594.667 2 OFFCURVE",
"600 2 CURVE SMOOTH",
"606.667 2 OFFCURVE",
"614.333 3.333 OFFCURVE",
"617 6 CURVE",
"630.669 31.385 OFFCURVE",
"642.04 57.11 OFFCURVE",
"650 79 CURVE SMOOTH",
"662 114 LINE",
"662 119.333 OFFCURVE",
"640.333 134 OFFCURVE",
"627 134 CURVE SMOOTH",
"621.72 134 OFFCURVE",
"593.668 52.336 OFFCURVE",
"592 49 CURVE",
"575.273 78.272 OFFCURVE",
"573.565 135 OFFCURVE",
"536 135 CURVE SMOOTH",
"530.667 135 OFFCURVE",
"527.667 132 OFFCURVE",
"527 126 CURVE",
"519 100.667 OFFCURVE",
"508.667 72.667 OFFCURVE",
"494 46 CURVE",
"483.333 66 OFFCURVE",
"464.667 100 OFFCURVE",
"454 128 CURVE",
"451.333 134 OFFCURVE",
"446.667 137 OFFCURVE",
"440 137 CURVE SMOOTH",
"436 137 OFFCURVE",
"434 134.667 OFFCURVE",
"434 130 CURVE SMOOTH",
"434 125 LINE SMOOTH",
"434 80.3 OFFCURVE",
"397.287 26 OFFCURVE",
"338 26 CURVE SMOOTH",
"198.467 26 OFFCURVE",
"144 160.091 OFFCURVE",
"144 295 CURVE SMOOTH",
"144 422.551 OFFCURVE",
"190.544 555 OFFCURVE",
"334 555 CURVE SMOOTH",
"394.764 555 OFFCURVE",
"441 499.888 OFFCURVE",
"441 455 CURVE SMOOTH",
"441 451 LINE SMOOTH",
"441 446.333 OFFCURVE",
"443 444 OFFCURVE",
"447 444 CURVE SMOOTH",
"452.333 444 OFFCURVE",
"458.667 449 OFFCURVE",
"460 453 CURVE SMOOTH",
"464.667 467 OFFCURVE",
"471.167 481.667 OFFCURVE",
"479.5 497 CURVE SMOOTH",
"487.833 512.333 OFFCURVE",
"494.667 525 OFFCURVE",
"500 535 CURVE",
"514.667 508.333 OFFCURVE",
"524.667 480.667 OFFCURVE",
"534 454 CURVE",
"534 449.333 OFFCURVE",
"536 447 OFFCURVE",
"540 447 CURVE SMOOTH",
"550.667 447 OFFCURVE",
"569.333 459.667 OFFCURVE",
"572 465 CURVE",
"576.667 478.333 OFFCURVE",
"580.833 490.667 OFFCURVE",
"584.5 502 CURVE SMOOTH",
"588.167 513.333 OFFCURVE",
"592.667 523.667 OFFCURVE",
"598 533 CURVE",
"612.667 506.333 OFFCURVE",
"616.667 488.667 OFFCURVE",
"626 454 CURVE",
"626.667 450 OFFCURVE",
"629.333 448 OFFCURVE",
"634 448 CURVE SMOOTH",
"648.667 448 OFFCURVE",
"665.333 460.333 OFFCURVE",
"668 467 CURVE",
"657 502 LINE",
"645.912 527.873 OFFCURVE",
"633.101 579 OFFCURVE",
"605 579 CURVE SMOOTH",
"591.991 579 OFFCURVE",
"572.748 521.366 OFFCURVE",
"568 500 CURVE",
"554.627 526.747 OFFCURVE",
"543.339 580 OFFCURVE",
"516 580 CURVE SMOOTH",
"505.206 580 OFFCURVE",
"487.946 542.156 OFFCURVE",
"477 523 CURVE",
"452.363 564.062 OFFCURVE",
"394.384 592 OFFCURVE",
"340 592 CURVE SMOOTH",
"252 592 OFFCURVE",
"175.667 565 OFFCURVE",
"121 513 CURVE SMOOTH",
"66.333 461 OFFCURVE",
"34 383.333 OFFCURVE",
"34 282 CURVE SMOOTH",
"34 94 OFFCURVE",
"128.333 -9.667 OFFCURVE",
"327 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
72 934 3 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 72 22 72 38 72 54 72 70 72 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 72 101 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
114 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
117 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
117 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
119 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
119 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
129 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
129 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 67 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
28 59 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
13 59 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
23 59 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
42 59 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
53 59 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
77 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 77 119 77 135 77 151 77 167 77 183 77 199 77 215 77 231 77 247 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 77 23 77 39 77 55 77 71 77 87 77 103 77 119 77 135 77 151 77 167 77 183 77 199 77 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 77 230 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
129 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 85 119 85 135 85 151 85 167 85 183 85 199 85 215 85 231 85 247 85 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 85 23 85 39 85 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 85 70 85 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
90 129 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
100 129 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
105 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
105 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
124 129 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
131 129 85 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 673;
}
);
note = uni13E8;
},
{
glyphname = uni13E9;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"563 147 LINE SMOOTH",
"563 191.514 OFFCURVE",
"566.09 205.435 OFFCURVE",
"614 213 CURVE",
"620.667 213.667 OFFCURVE",
"624 218 OFFCURVE",
"624 226 CURVE SMOOTH",
"624 231.333 OFFCURVE",
"621.333 238 OFFCURVE",
"616 238 CURVE SMOOTH",
"580.818 238 OFFCURVE",
"540.572 234 OFFCURVE",
"515 234 CURVE SMOOTH",
"498.333 234 OFFCURVE",
"479.333 234.667 OFFCURVE",
"458 236 CURVE SMOOTH",
"436.667 237.333 OFFCURVE",
"416 238 OFFCURVE",
"396 238 CURVE SMOOTH",
"389.333 238 OFFCURVE",
"387 231.333 OFFCURVE",
"387 226 CURVE SMOOTH",
"387 217.333 OFFCURVE",
"390.667 213 OFFCURVE",
"398 213 CURVE",
"466.067 204.832 OFFCURVE",
"482 201.722 OFFCURVE",
"482 134 CURVE SMOOTH",
"482 46.966 OFFCURVE",
"424.664 26 OFFCURVE",
"334 26 CURVE SMOOTH",
"204.28 26 OFFCURVE",
"144 144.286 OFFCURVE",
"144 302 CURVE SMOOTH",
"144 429.566 OFFCURVE",
"203.03 554 OFFCURVE",
"342 554 CURVE SMOOTH",
"380.667 554 OFFCURVE",
"411 549.167 OFFCURVE",
"433 539.5 CURVE SMOOTH",
"455 529.833 OFFCURVE",
"466 517.333 OFFCURVE",
"466 502 CURVE SMOOTH",
"466 499.333 OFFCURVE",
"464.833 495.667 OFFCURVE",
"462.5 491 CURVE SMOOTH",
"460.167 486.333 OFFCURVE",
"459 481.667 OFFCURVE",
"459 477 CURVE SMOOTH",
"459 454.333 OFFCURVE",
"476.667 436 OFFCURVE",
"502 436 CURVE SMOOTH",
"534 436 OFFCURVE",
"550 460.667 OFFCURVE",
"550 482 CURVE SMOOTH",
"550 556.371 OFFCURVE",
"445.58 592 OFFCURVE",
"346 592 CURVE SMOOTH",
"258 592 OFFCURVE",
"180 564.833 OFFCURVE",
"124 513.5 CURVE SMOOTH",
"68 462.167 OFFCURVE",
"34 385.333 OFFCURVE",
"34 288 CURVE SMOOTH",
"34 97.333 OFFCURVE",
"137 -10 OFFCURVE",
"325 -10 CURVE SMOOTH",
"401 -10 OFFCURVE",
"452 6 OFFCURVE",
"492 38 CURVE",
"510.667 -2 OFFCURVE",
"547.333 -11 OFFCURVE",
"590 -11 CURVE SMOOTH",
"630 -11 OFFCURVE",
"669 7 OFFCURVE",
"689 47 CURVE",
"689.667 47.667 OFFCURVE",
"690 49 OFFCURVE",
"690 51 CURVE SMOOTH",
"690 56.333 OFFCURVE",
"681.667 62 OFFCURVE",
"675 62 CURVE SMOOTH",
"672.333 62 OFFCURVE",
"670.667 61 OFFCURVE",
"670 59 CURVE",
"658 44.333 OFFCURVE",
"641.667 34 OFFCURVE",
"611 34 CURVE SMOOTH",
"579 34 OFFCURVE",
"563 59.667 OFFCURVE",
"563 111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 934 24 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 934 43 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 43 106 43 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 43 25 43 41 43 57 43 73 43 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 51 22 51 38 51 54 51 70 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 51 101 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
61 43 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
89 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
29 929 46 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 56 119 56 135 56 151 56 167 56 183 56 199 56 215 56 231 56 247 56 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 56 23 56 39 56 55 56 71 56 87 56 103 56 119 56 135 56 151 56 167 56 183 56 199 56 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 56 230 56 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 700;
}
);
note = uni13E9;
},
{
glyphname = uni13EA;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113.888 19 OFFCURVE",
"74 67.736 OFFCURVE",
"74 111 CURVE SMOOTH",
"74 140.333 OFFCURVE",
"82 162 OFFCURVE",
"110 162 CURVE SMOOTH",
"116 162 OFFCURVE",
"121 160.667 OFFCURVE",
"125 158 CURVE SMOOTH",
"129 155.333 OFFCURVE",
"134.333 154 OFFCURVE",
"141 154 CURVE SMOOTH",
"157 154 OFFCURVE",
"169 172.333 OFFCURVE",
"169 191 CURVE SMOOTH",
"169 213.667 OFFCURVE",
"153.667 237 OFFCURVE",
"111 237 CURVE SMOOTH",
"49.776 237 OFFCURVE",
"16 187.634 OFFCURVE",
"16 130 CURVE SMOOTH",
"16 55.833 OFFCURVE",
"73.585 -13 OFFCURVE",
"170 -13 CURVE SMOOTH",
"244.667 -13 OFFCURVE",
"312.333 36.333 OFFCURVE",
"367 99 CURVE",
"440.371 20.194 OFFCURVE",
"510.428 -16 OFFCURVE",
"627 -16 CURVE SMOOTH",
"681.667 -16 OFFCURVE",
"751.667 4.5 OFFCURVE",
"809 58.5 CURVE SMOOTH",
"866.333 112.5 OFFCURVE",
"909 199.333 OFFCURVE",
"909 334 CURVE SMOOTH",
"909 441.021 OFFCURVE",
"872.026 592 OFFCURVE",
"739 592 CURVE SMOOTH",
"664.197 592 OFFCURVE",
"603 535.488 OFFCURVE",
"603 444 CURVE SMOOTH",
"603 333.265 OFFCURVE",
"658.22 290 OFFCURVE",
"738 290 CURVE SMOOTH",
"767.333 290 OFFCURVE",
"795.333 302.667 OFFCURVE",
"818 316 CURVE",
"815.265 179.251 OFFCURVE",
"761.895 17 OFFCURVE",
"633 17 CURVE SMOOTH",
"541.83 17 OFFCURVE",
"478.337 85.582 OFFCURVE",
"423 162 CURVE",
"492.367 236.703 OFFCURVE",
"553 312.987 OFFCURVE",
"553 413 CURVE SMOOTH",
"553 521.978 OFFCURVE",
"473.74 592 OFFCURVE",
"378 592 CURVE SMOOTH",
"283.306 592 OFFCURVE",
"207 522.021 OFFCURVE",
"207 414 CURVE SMOOTH",
"207 310 OFFCURVE",
"258.667 221 OFFCURVE",
"336 133 CURVE",
"294.021 77.902 OFFCURVE",
"236.598 19 OFFCURVE",
"172 19 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"459 331 OFFCURVE",
"439.333 260 OFFCURVE",
"394 196 CURVE",
"331.333 279.333 OFFCURVE",
"300 356.667 OFFCURVE",
"300 428 CURVE SMOOTH",
"300 488.196 OFFCURVE",
"318.065 560 OFFCURVE",
"377 560 CURVE SMOOTH",
"427.667 560 OFFCURVE",
"459 517.667 OFFCURVE",
"459 407 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"808.41 562 OFFCURVE",
"814.241 427.242 OFFCURVE",
"817 350 CURVE",
"801 340.667 OFFCURVE",
"786 335 OFFCURVE",
"770 335 CURVE SMOOTH",
"720.392 335 OFFCURVE",
"688 362.762 OFFCURVE",
"688 435 CURVE SMOOTH",
"688 483.667 OFFCURVE",
"692.667 517 OFFCURVE",
"702 535 CURVE SMOOTH",
"711.333 553 OFFCURVE",
"726 562 OFFCURVE",
"746 562 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 934 69 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
99 934 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 934 91 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
107 934 41 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 934 33 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 33 106 33 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 33 25 33 41 33 57 33 73 33 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 41 106 41 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 41 25 41 41 41 57 41 73 41 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
230 86 246 86 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 86 22 86 38 86 54 86 70 86 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 17 values pushed */
102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 8 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
85 86 101 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 91 106 91 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 91 121 91 137 91 153 91 169 91 185 91 201 91 217 91 233 91 249 91 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 91 25 91 41 91 57 91 73 91 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 99 118 99 134 99 150 99 166 99 182 99 198 99 214 99 230 99 246 99 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 99 22 99 38 99 54 99 70 99 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 99 101 99 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
101 69 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
115 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
115 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
121 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
56 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
64 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
64 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
46 929 104 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 931 83 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
112 930 36 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 0 230 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
33 36 112 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
104 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
94 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
101 83 74 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 943;
}
);
note = uni13EA;
},
{
glyphname = uni13EB;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"398.333 -8 OFFCURVE",
"471 19 OFFCURVE",
"523 71 CURVE SMOOTH",
"575 123 OFFCURVE",
"608 199.333 OFFCURVE",
"608 298 CURVE SMOOTH",
"608 387.333 OFFCURVE",
"578.667 461.333 OFFCURVE",
"528 512 CURVE SMOOTH",
"477.333 562.667 OFFCURVE",
"407 592 OFFCURVE",
"323 592 CURVE SMOOTH",
"239 592 OFFCURVE",
"165.667 561 OFFCURVE",
"115 509 CURVE SMOOTH",
"64.333 457 OFFCURVE",
"34 383 OFFCURVE",
"34 295 CURVE SMOOTH",
"34 93.667 OFFCURVE",
"141 -8 OFFCURVE",
"321 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186.394 28 OFFCURVE",
"144 150.441 OFFCURVE",
"144 292 CURVE SMOOTH",
"144 306.667 OFFCURVE",
"144.667 318 OFFCURVE",
"146 334 CURVE",
"156.667 335.333 OFFCURVE",
"169.333 337 OFFCURVE",
"184 339 CURVE SMOOTH",
"198.667 341 OFFCURVE",
"212.667 342 OFFCURVE",
"226 342 CURVE SMOOTH",
"284.902 342 OFFCURVE",
"276.464 236 OFFCURVE",
"339 236 CURVE SMOOTH",
"369.147 236 OFFCURVE",
"453.306 242.753 OFFCURVE",
"496 245 CURVE",
"480.331 130.092 OFFCURVE",
"425.185 28 OFFCURVE",
"324 28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"358.097 265 OFFCURVE",
"351.331 366 OFFCURVE",
"306 366 CURVE SMOOTH",
"248.667 366 OFFCURVE",
"205 365.667 OFFCURVE",
"149 363 CURVE",
"165.16 468.037 OFFCURVE",
"220.242 556 OFFCURVE",
"321 556 CURVE SMOOTH",
"451.753 556 OFFCURVE",
"498 428.681 OFFCURVE",
"498 291 CURVE SMOOTH",
"498 274 LINE",
"471.333 268.667 OFFCURVE",
"441 265 OFFCURVE",
"413 265 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 39 118 39 134 39 150 39 166 39 182 39 198 39 214 39 230 39 246 39 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 39 22 39 38 39 54 39 70 39 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 39 101 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 53 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 929 28 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 929 33 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 18 119 18 135 18 151 18 167 18 183 18 199 18 215 18 231 18 247 18 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 18 23 18 39 18 55 18 71 18 87 18 103 18 119 18 135 18 151 18 167 18 183 18 199 18 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 18 230 18 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 642;
}
);
note = uni13EB;
},
{
glyphname = uni13EC;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"371 543.918 OFFCURVE",
"287.104 592 OFFCURVE",
"206 592 CURVE SMOOTH",
"82 592 OFFCURVE",
"28 511.333 OFFCURVE",
"28 370 CURVE SMOOTH",
"28 320.667 OFFCURVE",
"41.167 263 OFFCURVE",
"68.5 207 CURVE SMOOTH",
"82.167 179 OFFCURVE",
"99.333 152 OFFCURVE",
"120 126 CURVE SMOOTH",
"161.333 74 OFFCURVE",
"216.833 34 OFFCURVE",
"285.5 10 CURVE SMOOTH",
"319.833 -2 OFFCURVE",
"358 -8 OFFCURVE",
"400 -8 CURVE SMOOTH",
"468 -8 OFFCURVE",
"542.333 7 OFFCURVE",
"601 55 CURVE SMOOTH",
"659.667 103 OFFCURVE",
"701 185.333 OFFCURVE",
"701 320 CURVE SMOOTH",
"701 468.863 OFFCURVE",
"596.196 592 OFFCURVE",
"470 592 CURVE SMOOTH",
"444.198 592 OFFCURVE",
"407 576.744 OFFCURVE",
"407 548 CURVE SMOOTH",
"407 517.333 OFFCURVE",
"426 505 OFFCURVE",
"450 505 CURVE SMOOTH",
"484.81 505 OFFCURVE",
"472.175 557 OFFCURVE",
"502 557 CURVE SMOOTH",
"566.148 557 OFFCURVE",
"604 405.818 OFFCURVE",
"604 319 CURVE SMOOTH",
"604 228.333 OFFCURVE",
"590.833 153.833 OFFCURVE",
"559.5 102.5 CURVE SMOOTH",
"528.167 51.167 OFFCURVE",
"479.333 22 OFFCURVE",
"410 22 CURVE SMOOTH",
"324.667 22 OFFCURVE",
"246 95.667 OFFCURVE",
"174 209 CURVE",
"264.173 242.397 OFFCURVE",
"371 304.648 OFFCURVE",
"371 438 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 345.551 OFFCURVE",
"223.866 269.46 OFFCURVE",
"162 240 CURVE",
"128.667 312 OFFCURVE",
"119 371 OFFCURVE",
"119 427 CURVE SMOOTH",
"119 493.645 OFFCURVE",
"144.338 564 OFFCURVE",
"202 564 CURVE SMOOTH",
"247.333 564 OFFCURVE",
"284 526 OFFCURVE",
"284 430 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
64 934 48 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 934 13 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 13 106 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 13 121 13 137 13 153 13 169 13 185 13 201 13 217 13 233 13 249 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 13 25 13 41 13 57 13 73 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 64 118 64 134 64 150 64 166 64 182 64 198 64 214 64 230 64 246 64 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 64 22 64 38 64 54 64 70 64 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 64 101 64 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
51 929 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 8 119 8 135 8 151 8 167 8 183 8 199 8 215 8 231 8 247 8 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 8 23 8 39 8 55 8 71 8 87 8 103 8 119 8 135 8 151 8 167 8 183 8 199 8 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 8 230 8 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
23 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 735;
}
);
note = uni13EC;
},
{
glyphname = uni13ED;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"263.333 -2 OFFCURVE",
"336 38.667 OFFCURVE",
"384 100 CURVE SMOOTH",
"432 161.333 OFFCURVE",
"456 241.333 OFFCURVE",
"456 320 CURVE SMOOTH",
"456 478.491 OFFCURVE",
"379.651 592 OFFCURVE",
"233 592 CURVE SMOOTH",
"120.276 592 OFFCURVE",
"34 523.303 OFFCURVE",
"34 419 CURVE SMOOTH",
"34 303.582 OFFCURVE",
"114.719 231 OFFCURVE",
"226 231 CURVE SMOOTH",
"286 231 OFFCURVE",
"335.667 253.333 OFFCURVE",
"361 268 CURVE",
"355.616 141.48 OFFCURVE",
"295.992 30 OFFCURVE",
"174 30 CURVE SMOOTH",
"147.333 30 OFFCURVE",
"123 42 OFFCURVE",
"123 58 CURVE SMOOTH",
"123 62 OFFCURVE",
"124.333 66 OFFCURVE",
"127 70 CURVE SMOOTH",
"129.667 74 OFFCURVE",
"131 78.667 OFFCURVE",
"131 84 CURVE SMOOTH",
"131 106.667 OFFCURVE",
"114.333 122 OFFCURVE",
"89 122 CURVE SMOOTH",
"59.667 122 OFFCURVE",
"42 99.333 OFFCURVE",
"42 78 CURVE SMOOTH",
"42 26 OFFCURVE",
"98 -2 OFFCURVE",
"166 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"312.432 560 OFFCURVE",
"355.896 422.396 OFFCURVE",
"361 305 CURVE",
"362 305 LINE",
"332.667 286.333 OFFCURVE",
"287 269 OFFCURVE",
"235 269 CURVE SMOOTH",
"164.438 269 OFFCURVE",
"126 346.456 OFFCURVE",
"126 420 CURVE SMOOTH",
"126 491.2 OFFCURVE",
"158.181 560 OFFCURVE",
"226 560 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
62 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
48 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 48 22 48 38 48 54 48 70 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 48 101 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 57 106 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 57 25 57 41 57 57 57 73 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
33 929 43 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 929 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 6 119 6 135 6 151 6 167 6 183 6 199 6 215 6 231 6 247 6 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 6 23 6 39 6 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 6 70 6 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 15 119 15 135 15 151 15 167 15 183 15 199 15 215 15 231 15 247 15 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 15 230 15 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
20 23 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 490;
}
);
note = uni13ED;
},
{
glyphname = uni13EE;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"226.667 584 OFFCURVE",
"154 541.333 OFFCURVE",
"106 480 CURVE SMOOTH",
"58 418.667 OFFCURVE",
"34 338 OFFCURVE",
"34 262 CURVE SMOOTH",
"34 103.038 OFFCURVE",
"108.223 -11 OFFCURVE",
"258 -11 CURVE SMOOTH",
"371.54 -11 OFFCURVE",
"456 57.333 OFFCURVE",
"456 162 CURVE SMOOTH",
"456 274.519 OFFCURVE",
"375.202 350 OFFCURVE",
"265 350 CURVE SMOOTH",
"205 350 OFFCURVE",
"154 327.333 OFFCURVE",
"130 314 CURVE",
"132.691 440.475 OFFCURVE",
"194.541 551 OFFCURVE",
"316 551 CURVE SMOOTH",
"342.667 551 OFFCURVE",
"367 540.333 OFFCURVE",
"367 523 CURVE SMOOTH",
"367 519.667 OFFCURVE",
"365.667 515.833 OFFCURVE",
"363 511.5 CURVE SMOOTH",
"360.333 507.167 OFFCURVE",
"359 502.667 OFFCURVE",
"359 498 CURVE SMOOTH",
"359 472.667 OFFCURVE",
"373.333 460 OFFCURVE",
"402 460 CURVE SMOOTH",
"430 460 OFFCURVE",
"448 482 OFFCURVE",
"448 502 CURVE SMOOTH",
"448 552.297 OFFCURVE",
"389.732 584 OFFCURVE",
"324 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"183.55 22 OFFCURVE",
"132.475 158.201 OFFCURVE",
"130 277 CURVE",
"128 277 LINE",
"157.333 294.333 OFFCURVE",
"203 313 OFFCURVE",
"255 313 CURVE SMOOTH",
"325.931 313 OFFCURVE",
"364 235.391 OFFCURVE",
"364 161 CURVE SMOOTH",
"364 91.356 OFFCURVE",
"331.058 22 OFFCURVE",
"266 22 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 49 106 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 49 25 49 41 49 57 49 73 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
58 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 58 22 58 38 58 54 58 70 58 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 58 101 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 929 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 929 54 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
21 54 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 44 119 44 135 44 151 44 167 44 183 44 199 44 215 44 231 44 247 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 44 23 44 39 44 55 44 71 44 87 44 103 44 119 44 135 44 151 44 167 44 183 44 199 44 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 44 230 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 490;
}
);
note = uni13EE;
},
{
glyphname = uni13EF;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"329 386 OFFCURVE",
"286 343.667 OFFCURVE",
"270 259 CURVE",
"270 252.333 OFFCURVE",
"279.333 249 OFFCURVE",
"286 249 CURVE SMOOTH",
"290 249 OFFCURVE",
"292.667 250 OFFCURVE",
"294 252 CURVE",
"319.333 309.333 OFFCURVE",
"347.333 334 OFFCURVE",
"374 334 CURVE SMOOTH",
"426.474 334 OFFCURVE",
"439.109 299.695 OFFCURVE",
"464 230 CURVE",
"428.606 140.153 OFFCURVE",
"345.548 24 OFFCURVE",
"250 24 CURVE SMOOTH",
"177.939 24 OFFCURVE",
"122 99.635 OFFCURVE",
"122 206 CURVE SMOOTH",
"122 312.087 OFFCURVE",
"177.414 357.022 OFFCURVE",
"225 370 CURVE",
"228.333 370.667 OFFCURVE",
"230 373.333 OFFCURVE",
"230 378 CURVE SMOOTH",
"230 384.667 OFFCURVE",
"223.667 394 OFFCURVE",
"217 394 CURVE",
"130.457 373.23 OFFCURVE",
"31 330.288 OFFCURVE",
"31 196 CURVE SMOOTH",
"31 53.26 OFFCURVE",
"125.991 -16 OFFCURVE",
"235 -16 CURVE SMOOTH",
"343 -16 OFFCURVE",
"419 56 OFFCURVE",
"479 196 CURVE",
"481 193.333 OFFCURVE",
"482.167 190.333 OFFCURVE",
"482.5 187 CURVE SMOOTH",
"482.833 183.667 OFFCURVE",
"483.667 180.667 OFFCURVE",
"485 178 CURVE",
"527 63.202 OFFCURVE",
"560.117 -18 OFFCURVE",
"690 -18 CURVE SMOOTH",
"879.333 -18 OFFCURVE",
"966 92.667 OFFCURVE",
"966 278 CURVE SMOOTH",
"966 359.333 OFFCURVE",
"930.667 438.5 OFFCURVE",
"864 496.5 CURVE SMOOTH",
"797.333 554.5 OFFCURVE",
"699.667 592 OFFCURVE",
"577 592 CURVE SMOOTH",
"425.023 592 OFFCURVE",
"322 543.622 OFFCURVE",
"322 482 CURVE SMOOTH",
"322 446 OFFCURVE",
"342.667 426 OFFCURVE",
"372 426 CURVE SMOOTH",
"396 426 OFFCURVE",
"422 440.667 OFFCURVE",
"422 466 CURVE SMOOTH",
"422 479.978 OFFCURVE",
"400 496.386 OFFCURVE",
"400 502 CURVE SMOOTH",
"400 539.15 OFFCURVE",
"489.519 561 OFFCURVE",
"575 561 CURVE SMOOTH",
"676.333 561 OFFCURVE",
"750 528.167 OFFCURVE",
"798 475.5 CURVE SMOOTH",
"846 422.833 OFFCURVE",
"869 350 OFFCURVE",
"869 270 CURVE SMOOTH",
"869 145.909 OFFCURVE",
"820.163 19 OFFCURVE",
"731 19 CURVE SMOOTH",
"611.475 19 OFFCURVE",
"576.055 156.962 OFFCURVE",
"538 282 CURVE",
"551.333 303.333 OFFCURVE",
"576 322 OFFCURVE",
"600 322 CURVE SMOOTH",
"656.511 322 OFFCURVE",
"667.388 264 OFFCURVE",
"717 264 CURVE SMOOTH",
"750.874 264 OFFCURVE",
"801.967 300.501 OFFCURVE",
"819 337 CURVE SMOOTH",
"819.667 338.333 OFFCURVE",
"820 340 OFFCURVE",
"820 342 CURVE SMOOTH",
"820 348.667 OFFCURVE",
"814.667 355 OFFCURVE",
"808 355 CURVE SMOOTH",
"806.667 355 OFFCURVE",
"804.667 354.333 OFFCURVE",
"802 353 CURVE",
"786 335.667 OFFCURVE",
"769.333 322 OFFCURVE",
"752 322 CURVE SMOOTH",
"713.71 322 OFFCURVE",
"686.008 386 OFFCURVE",
"638 386 CURVE SMOOTH",
"584.667 386 OFFCURVE",
"548 354.333 OFFCURVE",
"524 313 CURVE",
"500 362.333 OFFCURVE",
"455 386 OFFCURVE",
"399 386 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
109 934 94 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 934 65 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 934 44 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 94 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 44 106 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 44 25 44 41 44 57 44 73 44 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
86 94 75 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 109 118 109 134 109 150 109 166 109 182 109 198 109 214 109 230 109 246 109 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 109 22 109 38 109 54 109 70 109 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 109 101 109 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
135 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
78 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
89 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
89 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
70 929 49 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 931 124 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
31 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
26 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 11 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 39 23 39 39 39 55 39 71 39 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 39 102 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 1001;
}
);
note = uni13EF;
},
{
glyphname = uni13F0;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"64.333 189.667 OFFCURVE",
"55.667 194 OFFCURVE",
"45 194 CURVE SMOOTH",
"25 194 OFFCURVE",
"2 174.667 OFFCURVE",
"2 156 CURVE SMOOTH",
"2 152 OFFCURVE",
"3 148.667 OFFCURVE",
"5 146 CURVE",
"38.333 84.667 OFFCURVE",
"102 38.667 OFFCURVE",
"182 12 CURVE",
"169.151 -83.084 OFFCURVE",
"139.939 -139.96 OFFCURVE",
"102 -210 CURVE",
"102 -215.333 OFFCURVE",
"105 -218 OFFCURVE",
"111 -218 CURVE SMOOTH",
"127.229 -218 OFFCURVE",
"206.575 -177.137 OFFCURVE",
"222 -154 CURVE",
"242 -120.667 OFFCURVE",
"257 -82 OFFCURVE",
"265 -6 CURVE",
"274.333 -6.667 OFFCURVE",
"283.833 -7.5 OFFCURVE",
"293.5 -8.5 CURVE SMOOTH",
"303.167 -9.5 OFFCURVE",
"312.667 -10 OFFCURVE",
"322 -10 CURVE SMOOTH",
"421.618 -10 OFFCURVE",
"548 39.168 OFFCURVE",
"548 157 CURVE SMOOTH",
"548 253.683 OFFCURVE",
"490.985 283.784 OFFCURVE",
"414 318 CURVE SMOOTH",
"401.333 323.333 OFFCURVE",
"395 330.333 OFFCURVE",
"395 339 CURVE SMOOTH",
"395 346.333 OFFCURVE",
"400.333 352 OFFCURVE",
"411 356 CURVE",
"460.079 371.337 OFFCURVE",
"542 405.835 OFFCURVE",
"542 466 CURVE SMOOTH",
"542 552.296 OFFCURVE",
"448.995 592 OFFCURVE",
"367 592 CURVE SMOOTH",
"253.667 592 OFFCURVE",
"180 523.667 OFFCURVE",
"180 413 CURVE SMOOTH",
"180 359 OFFCURVE",
"182.667 308.333 OFFCURVE",
"188 261 CURVE SMOOTH",
"193.333 213.667 OFFCURVE",
"196 170.667 OFFCURVE",
"196 132 CURVE SMOOTH",
"196 101.333 OFFCURVE",
"193.667 74.667 OFFCURVE",
"187 52 CURVE",
"139 77.333 OFFCURVE",
"93.667 121.667 OFFCURVE",
"71 175 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 366.333 OFFCURVE",
"352 349.333 OFFCURVE",
"352 332 CURVE SMOOTH",
"352 316.667 OFFCURVE",
"360.333 305 OFFCURVE",
"377 297 CURVE",
"415.667 275.667 OFFCURVE",
"447 234 OFFCURVE",
"447 166 CURVE SMOOTH",
"447 58.903 OFFCURVE",
"399.87 24 OFFCURVE",
"318 24 CURVE SMOOTH",
"298.667 24 OFFCURVE",
"282 26 OFFCURVE",
"268 30 CURVE",
"270.667 47.333 OFFCURVE",
"272 68.667 OFFCURVE",
"272 94 CURVE SMOOTH",
"272 136 OFFCURVE",
"269.833 186.667 OFFCURVE",
"265.5 246 CURVE SMOOTH",
"261.167 305.333 OFFCURVE",
"259 371.333 OFFCURVE",
"259 444 CURVE SMOOTH",
"259 525.722 OFFCURVE",
"295.389 557 OFFCURVE",
"352 557 CURVE SMOOTH",
"420 557 OFFCURVE",
"449 514 OFFCURVE",
"449 466 CURVE SMOOTH",
"449 411.955 OFFCURVE",
"430.496 401.729 OFFCURVE",
"392 381 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
78 934 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
31 96 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 78 22 78 38 78 54 78 70 78 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 78 101 78 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
91 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
81 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
58 96 74 96 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 96 25 96 41 96 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
100 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
39 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
12 929 73 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
86 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 86 119 86 135 86 151 86 167 86 183 86 199 86 215 86 231 86 247 86 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 86 23 86 39 86 55 86 71 86 87 86 103 86 119 86 135 86 151 86 167 86 183 86 199 86 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 86 230 86 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 578;
}
);
note = uni13F0;
},
{
glyphname = uni13F1;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"392.44 18 OFFCURVE",
"355 68.877 OFFCURVE",
"355 114 CURVE SMOOTH",
"355 143.333 OFFCURVE",
"371.333 166 OFFCURVE",
"398 166 CURVE SMOOTH",
"404 166 OFFCURVE",
"409 164.667 OFFCURVE",
"413 162 CURVE SMOOTH",
"417 159.333 OFFCURVE",
"422.333 158 OFFCURVE",
"429 158 CURVE SMOOTH",
"442.333 158 OFFCURVE",
"453 176 OFFCURVE",
"453 196 CURVE SMOOTH",
"453 218.667 OFFCURVE",
"438.667 242 OFFCURVE",
"400 242 CURVE SMOOTH",
"339.966 242 OFFCURVE",
"300 191.423 OFFCURVE",
"300 134 CURVE SMOOTH",
"300 58.913 OFFCURVE",
"358.39 -8 OFFCURVE",
"455 -8 CURVE SMOOTH",
"551.511 -8 OFFCURVE",
"656 49.505 OFFCURVE",
"656 185 CURVE SMOOTH",
"656 294.95 OFFCURVE",
"576.766 337.928 OFFCURVE",
"503 370 CURVE",
"463.199 389.9 OFFCURVE",
"455 394.685 OFFCURVE",
"455 451 CURVE SMOOTH",
"455 523.184 OFFCURVE",
"467.155 544.826 OFFCURVE",
"537 550 CURVE",
"543.667 550 OFFCURVE",
"546 558.333 OFFCURVE",
"546 565 CURVE SMOOTH",
"546 573.667 OFFCURVE",
"543.333 578 OFFCURVE",
"538 578 CURVE SMOOTH",
"514 578 OFFCURVE",
"492.667 577.167 OFFCURVE",
"474 575.5 CURVE SMOOTH",
"455.333 573.833 OFFCURVE",
"434 573 OFFCURVE",
"410 573 CURVE SMOOTH",
"388.667 573 OFFCURVE",
"366.333 573.833 OFFCURVE",
"343 575.5 CURVE SMOOTH",
"319.667 577.167 OFFCURVE",
"299 578 OFFCURVE",
"281 578 CURVE SMOOTH",
"273 578 OFFCURVE",
"270 570.667 OFFCURVE",
"270 564 CURVE SMOOTH",
"270 557.333 OFFCURVE",
"273 550 OFFCURVE",
"281 550 CURVE",
"349.722 544.714 OFFCURVE",
"365 518.036 OFFCURVE",
"365 447 CURVE SMOOTH",
"365 380.154 OFFCURVE",
"274.069 307.46 OFFCURVE",
"210 190 CURVE SMOOTH",
"203.333 178 OFFCURVE",
"197 172 OFFCURVE",
"191 172 CURVE SMOOTH",
"187 172 OFFCURVE",
"184 174.333 OFFCURVE",
"182 179 CURVE",
"160.667 211 OFFCURVE",
"120.667 238 OFFCURVE",
"74 238 CURVE SMOOTH",
"55.678 238 OFFCURVE",
"5 226.839 OFFCURVE",
"5 209 CURVE SMOOTH",
"5 205 OFFCURVE",
"9.667 195 OFFCURVE",
"15 195 CURVE SMOOTH",
"15.667 195 OFFCURVE",
"16.667 195.667 OFFCURVE",
"18 197 CURVE",
"36.667 203.667 OFFCURVE",
"56.667 209 OFFCURVE",
"66 209 CURVE SMOOTH",
"110 209 OFFCURVE",
"134 166 OFFCURVE",
"134 122 CURVE SMOOTH",
"134 65.051 OFFCURVE",
"96.536 13 OFFCURVE",
"19 13 CURVE SMOOTH",
"13.667 13 OFFCURVE",
"11 10.333 OFFCURVE",
"11 5 CURVE SMOOTH",
"11 -1.667 OFFCURVE",
"14.667 -8 OFFCURVE",
"20 -8 CURVE SMOOTH",
"113.333 -8 OFFCURVE",
"167.333 30 OFFCURVE",
"194 90 CURVE",
"215.732 131.654 OFFCURVE",
"262.547 212.664 OFFCURVE",
"294 261.5 CURVE SMOOTH",
"322.8 306.215 OFFCURVE",
"368.341 364 OFFCURVE",
"392 364 CURVE SMOOTH",
"486.184 364 OFFCURVE",
"559 275.142 OFFCURVE",
"559 184 CURVE SMOOTH",
"559 104.362 OFFCURVE",
"530.111 18 OFFCURVE",
"456 18 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
122 933 105 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
85 934 58 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
95 934 5 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 5 106 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 5 25 5 41 5 57 5 73 5 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 7 values pushed */
169 58 185 58 201 58 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
90 58 106 58 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
105 58 121 58 137 58 153 58 4 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
217 58 233 58 249 58 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 3 values pushed */
9 58 1 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 9 values pushed */
25 58 41 58 57 58 73 58 4 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
85 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
113 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
113 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
182 122 198 122 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
150 122 166 122 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
102 122 118 122 134 122 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
214 122 230 122 246 122 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 122 22 122 38 122 54 122 70 122 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 122 101 122 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
95 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
128 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
100 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
100 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
69 929 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
110 931 119 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
100 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 0 119 0 135 0 151 0 167 0 183 0 199 0 215 0 231 0 247 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 0 23 0 39 0 55 0 71 0 87 0 103 0 119 0 135 0 151 0 167 0 183 0 199 0 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 0 230 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
110 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
33 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
110 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
80 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 686;
}
);
note = uni13F1;
},
{
glyphname = uni13F2;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"100 111 LINE SMOOTH",
"100 38.01 OFFCURVE",
"92.364 35.061 OFFCURVE",
"26 24 CURVE SMOOTH",
"18 22.667 OFFCURVE",
"16 16 OFFCURVE",
"16 8 CURVE SMOOTH",
"16 -0.667 OFFCURVE",
"19.333 -5 OFFCURVE",
"26 -5 CURVE SMOOTH",
"44.667 -5 OFFCURVE",
"64 -3.833 OFFCURVE",
"84 -1.5 CURVE SMOOTH",
"104 0.833 OFFCURVE",
"125 2 OFFCURVE",
"147 2 CURVE SMOOTH",
"167.667 2 OFFCURVE",
"187 0.833 OFFCURVE",
"205 -1.5 CURVE SMOOTH",
"223 -3.833 OFFCURVE",
"243.333 -5 OFFCURVE",
"266 -5 CURVE SMOOTH",
"274 -5 OFFCURVE",
"278 -0.667 OFFCURVE",
"278 8 CURVE SMOOTH",
"278 17.333 OFFCURVE",
"274.333 22.667 OFFCURVE",
"267 24 CURVE",
"203.959 29.482 OFFCURVE",
"193 41.275 OFFCURVE",
"193 111 CURVE SMOOTH",
"193 261 LINE",
"215.667 279.667 OFFCURVE",
"253 298 OFFCURVE",
"305 298 CURVE SMOOTH",
"367.667 298 OFFCURVE",
"394 243 OFFCURVE",
"394 163 CURVE SMOOTH",
"394 110 LINE SMOOTH",
"394 42.267 OFFCURVE",
"386.457 29.943 OFFCURVE",
"330 24 CURVE",
"322 22.667 OFFCURVE",
"319 16 OFFCURVE",
"319 8 CURVE SMOOTH",
"319 0 OFFCURVE",
"322.667 -4 OFFCURVE",
"330 -4 CURVE SMOOTH",
"348.667 -4 OFFCURVE",
"367.5 -3 OFFCURVE",
"386.5 -1 CURVE SMOOTH",
"405.5 1 OFFCURVE",
"425.667 2 OFFCURVE",
"447 2 CURVE SMOOTH",
"466.333 2 OFFCURVE",
"484.833 1 OFFCURVE",
"502.5 -1 CURVE SMOOTH",
"520.167 -3 OFFCURVE",
"536.333 -4 OFFCURVE",
"551 -4 CURVE SMOOTH",
"558.333 -4 OFFCURVE",
"562 0 OFFCURVE",
"562 8 CURVE SMOOTH",
"562 17.333 OFFCURVE",
"558.333 22.667 OFFCURVE",
"551 24 CURVE",
"498.86 29.793 OFFCURVE",
"488 43.166 OFFCURVE",
"488 110 CURVE SMOOTH",
"488 186 LINE SMOOTH",
"488 294 OFFCURVE",
"431 350 OFFCURVE",
"319 350 CURVE SMOOTH",
"279.439 350 OFFCURVE",
"216.618 327.242 OFFCURVE",
"193 301 CURVE",
"193 440.252 OFFCURVE",
"256.086 560 OFFCURVE",
"377 560 CURVE SMOOTH",
"405 560 OFFCURVE",
"429 549.333 OFFCURVE",
"429 532 CURVE SMOOTH",
"429 528 OFFCURVE",
"427.833 524 OFFCURVE",
"425.5 520 CURVE SMOOTH",
"423.167 516 OFFCURVE",
"422 511.333 OFFCURVE",
"422 506 CURVE SMOOTH",
"422 483.333 OFFCURVE",
"437.667 468 OFFCURVE",
"463 468 CURVE SMOOTH",
"491 468 OFFCURVE",
"510 491 OFFCURVE",
"510 511 CURVE SMOOTH",
"510 557.667 OFFCURVE",
"456.667 592 OFFCURVE",
"386 592 CURVE SMOOTH",
"292.667 592 OFFCURVE",
"221 558.167 OFFCURVE",
"173 505.5 CURVE SMOOTH",
"125 452.833 OFFCURVE",
"100 381.333 OFFCURVE",
"100 304 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
25 934 0 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
34 934 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 59 34 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 17 106 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 17 25 17 41 17 57 17 73 17 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
8 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
43 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
76 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
76 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
82 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
82 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
5 929 20 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 931 63 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 63 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = uni13F2;
},
{
glyphname = uni13F3;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"432.667 466.667 OFFCURVE",
"439.333 481.5 OFFCURVE",
"448 496.5 CURVE SMOOTH",
"456.667 511.5 OFFCURVE",
"463.333 524 OFFCURVE",
"468 534 CURVE",
"482.667 507.333 OFFCURVE",
"494 480.667 OFFCURVE",
"502 454 CURVE",
"502 448.667 OFFCURVE",
"504.333 446 OFFCURVE",
"509 446 CURVE SMOOTH",
"547.667 446 OFFCURVE",
"550.215 500.431 OFFCURVE",
"566 532 CURVE",
"580.667 505.333 OFFCURVE",
"584.667 487.333 OFFCURVE",
"594 454 CURVE",
"594.667 449.333 OFFCURVE",
"597.333 447 OFFCURVE",
"602 447 CURVE SMOOTH",
"616.667 447 OFFCURVE",
"634.333 460.667 OFFCURVE",
"637 466 CURVE",
"639.667 510 OFFCURVE",
"659 538 OFFCURVE",
"679 554 CURVE",
"681 556 OFFCURVE",
"682 558.333 OFFCURVE",
"682 561 CURVE SMOOTH",
"682 570.333 OFFCURVE",
"670.667 581 OFFCURVE",
"660 581 CURVE SMOOTH",
"656.667 581 OFFCURVE",
"653.667 580 OFFCURVE",
"651 578 CURVE",
"631 556.667 OFFCURVE",
"626.333 535.667 OFFCURVE",
"625 501 CURVE",
"616.002 525.745 OFFCURVE",
"607.113 546.192 OFFCURVE",
"590 574 CURVE",
"588.667 576.667 OFFCURVE",
"580.667 578 OFFCURVE",
"574 578 CURVE SMOOTH",
"558.44 578 OFFCURVE",
"541.81 523.05 OFFCURVE",
"537 499 CURVE",
"529.667 513.667 OFFCURVE",
"523.833 526 OFFCURVE",
"519.5 536 CURVE SMOOTH",
"515.167 546 OFFCURVE",
"508.667 558.667 OFFCURVE",
"500 574 CURVE",
"497.333 576.667 OFFCURVE",
"488.667 578 OFFCURVE",
"482 578 CURVE SMOOTH",
"471.084 578 OFFCURVE",
"453.506 539.513 OFFCURVE",
"446 522 CURVE",
"423.333 564.667 OFFCURVE",
"367.333 591 OFFCURVE",
"306 591 CURVE SMOOTH",
"226 591 OFFCURVE",
"158 563.833 OFFCURVE",
"110 512.5 CURVE SMOOTH",
"62 461.167 OFFCURVE",
"34 385.333 OFFCURVE",
"34 288 CURVE SMOOTH",
"34 97.333 OFFCURVE",
"137 -10 OFFCURVE",
"325 -10 CURVE SMOOTH",
"445.279 -10 OFFCURVE",
"493.171 9.133 OFFCURVE",
"559 60 CURVE",
"561.667 60.667 OFFCURVE",
"563 63.333 OFFCURVE",
"563 68 CURVE SMOOTH",
"563 147 LINE SMOOTH",
"563 194.773 OFFCURVE",
"574.099 205.387 OFFCURVE",
"635 213 CURVE",
"642.333 214.333 OFFCURVE",
"646 218.667 OFFCURVE",
"646 226 CURVE SMOOTH",
"646 231.333 OFFCURVE",
"642.333 238 OFFCURVE",
"637 238 CURVE SMOOTH",
"613.667 238 OFFCURVE",
"591.667 237.333 OFFCURVE",
"571 236 CURVE SMOOTH",
"550.333 234.667 OFFCURVE",
"531.667 234 OFFCURVE",
"515 234 CURVE SMOOTH",
"498.333 234 OFFCURVE",
"479.333 234.667 OFFCURVE",
"458 236 CURVE SMOOTH",
"436.667 237.333 OFFCURVE",
"416 238 OFFCURVE",
"396 238 CURVE SMOOTH",
"389.333 238 OFFCURVE",
"387 231.333 OFFCURVE",
"387 226 CURVE SMOOTH",
"387 217.333 OFFCURVE",
"390.667 213 OFFCURVE",
"398 213 CURVE",
"466.067 204.832 OFFCURVE",
"482 201.722 OFFCURVE",
"482 134 CURVE SMOOTH",
"482 46.966 OFFCURVE",
"424.664 26 OFFCURVE",
"334 26 CURVE SMOOTH",
"204.28 26 OFFCURVE",
"144 144.286 OFFCURVE",
"144 302 CURVE SMOOTH",
"144 421.237 OFFCURVE",
"197.61 554 OFFCURVE",
"302 554 CURVE SMOOTH",
"366.394 554 OFFCURVE",
"410 496.474 OFFCURVE",
"410 450 CURVE SMOOTH",
"410 445.333 OFFCURVE",
"411.667 443 OFFCURVE",
"415 443 CURVE SMOOTH",
"420.333 443 OFFCURVE",
"424.667 446 OFFCURVE",
"428 452 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
126 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
126 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 14 22 14 38 14 54 14 70 14 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 14 101 14 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
50 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
114 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
114 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
69 61 114 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
80 24 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
123 61 114 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
127 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
58 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
66 929 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
98 119 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
119 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 19 119 19 135 19 151 19 167 19 183 19 199 19 215 19 231 19 247 19 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 19 23 19 39 19 55 19 71 19 87 19 103 19 119 19 135 19 151 19 167 19 183 19 199 19 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 19 230 19 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
69 119 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
80 119 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
98 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
85 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
85 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
93 119 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
119 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
109 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
109 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
114 119 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
123 119 98 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 686;
}
);
note = uni13F3;
},
{
glyphname = uni13F4;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"210 502 LINE SMOOTH",
"210 531.333 OFFCURVE",
"210.667 542 OFFCURVE",
"232 542 CURVE SMOOTH",
"262 542 LINE SMOOTH",
"335.333 542 OFFCURVE",
"376 512 OFFCURVE",
"376 432 CURVE SMOOTH",
"376 344.674 OFFCURVE",
"324.065 318 OFFCURVE",
"246 318 CURVE SMOOTH",
"230 318 LINE SMOOTH",
"215.333 318 OFFCURVE",
"210 330.333 OFFCURVE",
"210 341 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 244 LINE SMOOTH",
"210 266.667 OFFCURVE",
"215.333 282 OFFCURVE",
"238 282 CURVE SMOOTH",
"254 282 LINE SMOOTH",
"343.249 282 OFFCURVE",
"404 252.485 OFFCURVE",
"404 149 CURVE SMOOTH",
"404 71.667 OFFCURVE",
"375 35 OFFCURVE",
"307 35 CURVE SMOOTH",
"208.189 35 OFFCURVE",
"210 61.935 OFFCURVE",
"210 168 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 102 LINE SMOOTH",
"117 46 OFFCURVE",
"94 29.333 OFFCURVE",
"38 24 CURVE",
"30 22 OFFCURVE",
"26 16.667 OFFCURVE",
"26 8 CURVE SMOOTH",
"26 -0.667 OFFCURVE",
"29.667 -5 OFFCURVE",
"37 -5 CURVE SMOOTH",
"39 -5 LINE",
"76.13 -0.874 OFFCURVE",
"122.975 2 OFFCURVE",
"159 2 CURVE SMOOTH",
"202.122 2 OFFCURVE",
"284.473 -2 OFFCURVE",
"321 -2 CURVE SMOOTH",
"425.116 -2 OFFCURVE",
"510 32.59 OFFCURVE",
"510 147 CURVE SMOOTH",
"510 236.974 OFFCURVE",
"455.638 275.746 OFFCURVE",
"369 302 CURVE",
"365 302.667 OFFCURVE",
"363 305 OFFCURVE",
"363 309 CURVE SMOOTH",
"363 311 OFFCURVE",
"365 313 OFFCURVE",
"369 315 CURVE",
"425 333.667 OFFCURVE",
"470 372.333 OFFCURVE",
"470 439 CURVE SMOOTH",
"470 548.199 OFFCURVE",
"358.369 578 OFFCURVE",
"262 578 CURVE SMOOTH",
"244.667 578 OFFCURVE",
"224 577.333 OFFCURVE",
"200 576 CURVE SMOOTH",
"176 574.667 OFFCURVE",
"155.333 574 OFFCURVE",
"138 574 CURVE SMOOTH",
"118 574 OFFCURVE",
"100.333 574.667 OFFCURVE",
"85 576 CURVE SMOOTH",
"69.667 577.333 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE SMOOTH",
"106.278 550 OFFCURVE",
"117 503.124 OFFCURVE",
"117 431 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 87 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
57 934 9 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 9 106 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 9 25 9 41 9 57 9 73 9 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
94 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
74 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
84 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
84 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
79 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
46 929 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 929 30 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
74 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 22 230 22 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 527;
}
);
note = uni13F4;
},
{
glyphname = uni13A0;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"117 102 LINE SMOOTH",
"117 43.333 OFFCURVE",
"93.667 31 OFFCURVE",
"39 23 CURVE SMOOTH",
"31 21.667 OFFCURVE",
"27 17.333 OFFCURVE",
"27 10 CURVE SMOOTH",
"27 2 OFFCURVE",
"32.333 -6 OFFCURVE",
"39 -6 CURVE",
"84.333 -0.667 OFFCURVE",
"112.333 2 OFFCURVE",
"159 2 CURVE SMOOTH",
"179 2 OFFCURVE",
"201.167 0.833 OFFCURVE",
"225.5 -1.5 CURVE SMOOTH",
"249.833 -3.833 OFFCURVE",
"274.667 -5 OFFCURVE",
"300 -5 CURVE SMOOTH",
"385.333 -5 OFFCURVE",
"460.5 18.333 OFFCURVE",
"514.5 65 CURVE SMOOTH",
"568.5 111.667 OFFCURVE",
"601 182 OFFCURVE",
"601 278 CURVE SMOOTH",
"601 366 OFFCURVE",
"566.333 440.833 OFFCURVE",
"509 493.5 CURVE SMOOTH",
"451.667 546.167 OFFCURVE",
"370 578 OFFCURVE",
"278 578 CURVE SMOOTH",
"254 578 OFFCURVE",
"230.667 577.333 OFFCURVE",
"208 576 CURVE SMOOTH",
"185.333 574.667 OFFCURVE",
"162 574 OFFCURVE",
"138 574 CURVE SMOOTH",
"118 574 OFFCURVE",
"100.333 574.667 OFFCURVE",
"85 576 CURVE SMOOTH",
"69.667 577.333 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE SMOOTH",
"106.278 550 OFFCURVE",
"117 503.124 OFFCURVE",
"117 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 509 LINE SMOOTH",
"210 531.667 OFFCURVE",
"217.333 538 OFFCURVE",
"240 538 CURVE SMOOTH",
"424.529 538 OFFCURVE",
"491 451.26 OFFCURVE",
"491 279 CURVE SMOOTH",
"491 133.845 OFFCURVE",
"425.908 34 OFFCURVE",
"317 34 CURVE SMOOTH",
"219.133 34 OFFCURVE",
"210 49.068 OFFCURVE",
"210 161 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
42 36 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 52 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 52 106 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 52 25 52 41 52 57 52 73 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 929 5 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 47 119 47 135 47 151 47 167 47 183 47 199 47 215 47 231 47 247 47 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 47 23 47 39 47 55 47 71 47 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 47 102 47 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 928 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 631;
}
);
note = uni13A0;
},
{
glyphname = uni13A1;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"117 110 LINE SMOOTH",
"117 44.538 OFFCURVE",
"103.42 29.452 OFFCURVE",
"38 24 CURVE",
"31.333 22 OFFCURVE",
"28 17 OFFCURVE",
"28 9 CURVE SMOOTH",
"28 2.333 OFFCURVE",
"31.333 -5 OFFCURVE",
"38 -5 CURVE SMOOTH",
"58 -5 OFFCURVE",
"78.667 -3.833 OFFCURVE",
"100 -1.5 CURVE SMOOTH",
"121.333 0.833 OFFCURVE",
"143 2 OFFCURVE",
"165 2 CURVE SMOOTH",
"185 2 OFFCURVE",
"206 0.833 OFFCURVE",
"228 -1.5 CURVE SMOOTH",
"250 -3.833 OFFCURVE",
"275 -5 OFFCURVE",
"303 -5 CURVE SMOOTH",
"311 -5 OFFCURVE",
"315 -0.667 OFFCURVE",
"315 8 CURVE SMOOTH",
"315 16 OFFCURVE",
"310.667 24 OFFCURVE",
"304 24 CURVE",
"238.673 29.681 OFFCURVE",
"210 44.03 OFFCURVE",
"210 118 CURVE SMOOTH",
"210 234 LINE SMOOTH",
"210 256.667 OFFCURVE",
"225 264 OFFCURVE",
"245 264 CURVE SMOOTH",
"302.333 264 OFFCURVE",
"331.667 234.333 OFFCURVE",
"353 161 CURVE",
"361 125 OFFCURVE",
"373.333 68.333 OFFCURVE",
"388 31 CURVE",
"397.333 0.333 OFFCURVE",
"431 -16 OFFCURVE",
"467 -16 CURVE SMOOTH",
"513.667 -16 OFFCURVE",
"555.333 8.667 OFFCURVE",
"566 66 CURVE",
"566 72.667 OFFCURVE",
"556 80 OFFCURVE",
"548 80 CURVE SMOOTH",
"541.333 80 OFFCURVE",
"537.667 76.667 OFFCURVE",
"537 70 CURVE",
"530.333 46.667 OFFCURVE",
"518.667 35 OFFCURVE",
"502 35 CURVE SMOOTH",
"487.333 35 OFFCURVE",
"474.667 46.333 OFFCURVE",
"468 73 CURVE SMOOTH",
"461.737 100.139 OFFCURVE",
"453.791 150.285 OFFCURVE",
"441 178 CURVE SMOOTH",
"425 212.667 OFFCURVE",
"398.333 244.333 OFFCURVE",
"345 271 CURVE SMOOTH",
"341 273 OFFCURVE",
"339 275.333 OFFCURVE",
"339 278 CURVE SMOOTH",
"339 280.667 OFFCURVE",
"341 282.667 OFFCURVE",
"345 284 CURVE",
"419.937 300.653 OFFCURVE",
"474 343.751 OFFCURVE",
"474 426 CURVE SMOOTH",
"474 533.6 OFFCURVE",
"386.814 578 OFFCURVE",
"288 578 CURVE SMOOTH",
"268 578 OFFCURVE",
"246.667 577.333 OFFCURVE",
"224 576 CURVE SMOOTH",
"201.333 574.667 OFFCURVE",
"172.667 574 OFFCURVE",
"138 574 CURVE SMOOTH",
"118 574 OFFCURVE",
"100.333 574.667 OFFCURVE",
"85 576 CURVE SMOOTH",
"69.667 577.333 OFFCURVE",
"52.333 578 OFFCURVE",
"33 578 CURVE SMOOTH",
"26.333 578 OFFCURVE",
"22 570.667 OFFCURVE",
"22 564 CURVE SMOOTH",
"22 557.333 OFFCURVE",
"26.333 550 OFFCURVE",
"33 550 CURVE SMOOTH",
"106.278 550 OFFCURVE",
"117 503.124 OFFCURVE",
"117 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 498 LINE SMOOTH",
"210 534 OFFCURVE",
"219.667 542 OFFCURVE",
"265 542 CURVE SMOOTH",
"346.333 542 OFFCURVE",
"377 510.667 OFFCURVE",
"377 424 CURVE SMOOTH",
"377 331.639 OFFCURVE",
"350.383 300 OFFCURVE",
"259 300 CURVE SMOOTH",
"225.667 300 OFFCURVE",
"210 299.333 OFFCURVE",
"210 330 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
62 81 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 934 97 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
62 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
89 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 97 106 97 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 97 25 97 41 97 57 97 73 97 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
105 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
72 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
78 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
78 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 929 100 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
92 929 58 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 39 23 39 39 39 55 39 71 39 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 39 102 39 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
67 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 67 119 67 135 67 151 67 167 67 183 67 199 67 215 67 231 67 247 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 67 23 67 39 67 55 67 71 67 87 67 103 67 119 67 135 67 151 67 167 67 183 67 199 67 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 67 230 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
83 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 574;
}
);
note = uni13A1;
},
{
glyphname = uni13A2;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"322 491 LINE SMOOTH",
"322 533.667 OFFCURVE",
"343.333 539 OFFCURVE",
"394 539 CURVE SMOOTH",
"471.496 539 OFFCURVE",
"503.574 515.624 OFFCURVE",
"514 427 CURVE SMOOTH",
"514.667 421 OFFCURVE",
"518.667 418 OFFCURVE",
"526 418 CURVE SMOOTH",
"534 418 OFFCURVE",
"543 422.333 OFFCURVE",
"543 429 CURVE",
"542.333 440.333 OFFCURVE",
"541.5 452.167 OFFCURVE",
"540.5 464.5 CURVE SMOOTH",
"539.5 476.833 OFFCURVE",
"539 489.333 OFFCURVE",
"539 502 CURVE SMOOTH",
"539 524.667 OFFCURVE",
"541.667 546.667 OFFCURVE",
"543 560 CURVE",
"543 572 OFFCURVE",
"527.333 575 OFFCURVE",
"506 575 CURVE SMOOTH",
"48 575 LINE SMOOTH",
"29.333 575 OFFCURVE",
"10 571 OFFCURVE",
"10 559 CURVE",
"12 537.667 OFFCURVE",
"13 517 OFFCURVE",
"13 497 CURVE SMOOTH",
"13 474.333 OFFCURVE",
"12 451.667 OFFCURVE",
"10 429 CURVE",
"10 423.667 OFFCURVE",
"18.333 419 OFFCURVE",
"25 419 CURVE SMOOTH",
"31.667 419 OFFCURVE",
"35.667 422 OFFCURVE",
"37 428 CURVE",
"52.697 516.948 OFFCURVE",
"74.192 539 OFFCURVE",
"159 539 CURVE SMOOTH",
"209.667 539 OFFCURVE",
"229 533.667 OFFCURVE",
"229 491 CURVE SMOOTH",
"229 111 LINE SMOOTH",
"229 39.281 OFFCURVE",
"215.03 29.31 OFFCURVE",
"146 24 CURVE",
"139.333 22.667 OFFCURVE",
"136 17.333 OFFCURVE",
"136 8 CURVE SMOOTH",
"136 -0.667 OFFCURVE",
"139.333 -5 OFFCURVE",
"146 -5 CURVE SMOOTH",
"164.667 -5 OFFCURVE",
"185.667 -3.833 OFFCURVE",
"209 -1.5 CURVE SMOOTH",
"232.333 0.833 OFFCURVE",
"255 2 OFFCURVE",
"277 2 CURVE SMOOTH",
"297 2 OFFCURVE",
"317.5 0.833 OFFCURVE",
"338.5 -1.5 CURVE SMOOTH",
"359.5 -3.833 OFFCURVE",
"381.333 -5 OFFCURVE",
"404 -5 CURVE SMOOTH",
"412 -5 OFFCURVE",
"416 -0.667 OFFCURVE",
"416 8 CURVE SMOOTH",
"416 17.333 OFFCURVE",
"412.333 22.667 OFFCURVE",
"405 24 CURVE",
"331.589 29.438 OFFCURVE",
"322 38.418 OFFCURVE",
"322 111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 24 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
45 929 28 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 5 119 5 135 5 151 5 167 5 183 5 199 5 215 5 231 5 247 5 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 103 5 119 5 135 5 151 5 167 5 183 5 199 5 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 5 230 5 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 553;
}
);
note = uni13A2;
},
{
glyphname = uni13A3;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"301 231 OFFCURVE",
"261 276.667 OFFCURVE",
"193 286 CURVE",
"211.667 327.333 OFFCURVE",
"261 346 OFFCURVE",
"325 346 CURVE SMOOTH",
"423.338 346 OFFCURVE",
"468 266.158 OFFCURVE",
"468 190 CURVE SMOOTH",
"468 112.172 OFFCURVE",
"433.007 18 OFFCURVE",
"366 18 CURVE SMOOTH",
"358.667 18 OFFCURVE",
"355 13.333 OFFCURVE",
"355 4 CURVE SMOOTH",
"355 -2.667 OFFCURVE",
"357.333 -10 OFFCURVE",
"364 -10 CURVE SMOOTH",
"448.444 -10 OFFCURVE",
"566 53.062 OFFCURVE",
"566 185 CURVE SMOOTH",
"566 297.448 OFFCURVE",
"498.104 347.803 OFFCURVE",
"422 370 CURVE SMOOTH",
"383.012 381.996 OFFCURVE",
"374 395.157 OFFCURVE",
"374 451 CURVE SMOOTH",
"374 522.114 OFFCURVE",
"383.163 544.753 OFFCURVE",
"454 550 CURVE",
"460.667 550 OFFCURVE",
"465 558 OFFCURVE",
"465 566 CURVE SMOOTH",
"465 572.667 OFFCURVE",
"461.667 578 OFFCURVE",
"455 578 CURVE SMOOTH",
"431.667 578 OFFCURVE",
"410.667 577.167 OFFCURVE",
"392 575.5 CURVE SMOOTH",
"373.333 573.833 OFFCURVE",
"351.667 573 OFFCURVE",
"327 573 CURVE SMOOTH",
"307 573 OFFCURVE",
"285.167 573.833 OFFCURVE",
"261.5 575.5 CURVE SMOOTH",
"237.833 577.167 OFFCURVE",
"216.667 578 OFFCURVE",
"198 578 CURVE SMOOTH",
"192.667 578 OFFCURVE",
"189 570.667 OFFCURVE",
"189 564 CURVE SMOOTH",
"189 557.333 OFFCURVE",
"192.667 550 OFFCURVE",
"198 550 CURVE",
"269.018 544.739 OFFCURVE",
"282 518.109 OFFCURVE",
"282 447 CURVE SMOOTH",
"282 403 OFFCURVE",
"278.667 385.333 OFFCURVE",
"252 372 CURVE SMOOTH",
"198.775 346.655 OFFCURVE",
"179.372 331.287 OFFCURVE",
"154 289 CURVE",
"88.013 282.054 OFFCURVE",
"22 242.095 OFFCURVE",
"22 139 CURVE SMOOTH",
"22 34.144 OFFCURVE",
"85.409 -6 OFFCURVE",
"162 -6 CURVE SMOOTH",
"226.588 -6 OFFCURVE",
"301 39.356 OFFCURVE",
"301 139 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"212 262 OFFCURVE",
"238 222 OFFCURVE",
"238 138 CURVE SMOOTH",
"238 58 OFFCURVE",
"203.333 23 OFFCURVE",
"166 23 CURVE SMOOTH",
"148 23 OFFCURVE",
"133 32.167 OFFCURVE",
"121 50.5 CURVE SMOOTH",
"109 68.833 OFFCURVE",
"103 100 OFFCURVE",
"103 144 CURVE SMOOTH",
"103 219.831 OFFCURVE",
"136.02 262 OFFCURVE",
"172 262 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
92 934 10 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 98 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
61 934 76 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 0 22 0 38 0 54 0 70 0 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 0 101 0 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
23 98 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 23 106 23 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 23 121 23 137 23 153 23 169 23 185 23 201 23 217 23 233 23 249 23 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 23 25 23 41 23 57 23 73 23 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
90 76 106 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 76 121 76 137 76 153 76 169 76 185 76 201 76 217 76 233 76 249 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 76 25 76 41 76 57 76 73 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
76 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
84 10 61 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 21 values pushed */
102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 92 22 92 38 92 54 92 70 92 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 92 101 92 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
102 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
66 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
34 929 28 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 71 119 71 135 71 151 71 167 71 183 71 199 71 215 71 231 71 247 71 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 71 23 71 39 71 55 71 71 71 87 71 103 71 119 71 135 71 151 71 167 71 183 71 199 71 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 71 230 71 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
95 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 597;
}
);
note = uni13A3;
},
{
glyphname = uni13A4;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"465.586 -8 OFFCURVE",
"585.99 83.483 OFFCURVE",
"604 243 CURVE",
"623 243 LINE SMOOTH",
"727.876 243 OFFCURVE",
"814 315.325 OFFCURVE",
"814 393 CURVE SMOOTH",
"814 457.816 OFFCURVE",
"767.814 506 OFFCURVE",
"679 506 CURVE SMOOTH",
"662.191 506 OFFCURVE",
"627 506.957 OFFCURVE",
"627 491 CURVE SMOOTH",
"627 482.333 OFFCURVE",
"630.333 478 OFFCURVE",
"637 478 CURVE SMOOTH",
"706.088 478 OFFCURVE",
"730 444.403 OFFCURVE",
"730 391 CURVE SMOOTH",
"730 326.203 OFFCURVE",
"693.18 274 OFFCURVE",
"610 274 CURVE SMOOTH",
"609.333 274 OFFCURVE",
"608.833 274.167 OFFCURVE",
"608.5 274.5 CURVE SMOOTH",
"608.167 274.833 OFFCURVE",
"607.667 275 OFFCURVE",
"607 275 CURVE",
"607 279 OFFCURVE",
"607.167 282.833 OFFCURVE",
"607.5 286.5 CURVE SMOOTH",
"607.833 290.167 OFFCURVE",
"608 294 OFFCURVE",
"608 298 CURVE SMOOTH",
"608 387.333 OFFCURVE",
"578.667 461.333 OFFCURVE",
"528 512 CURVE SMOOTH",
"477.333 562.667 OFFCURVE",
"407 592 OFFCURVE",
"323 592 CURVE SMOOTH",
"239 592 OFFCURVE",
"165.667 561 OFFCURVE",
"115 509 CURVE SMOOTH",
"64.333 457 OFFCURVE",
"34 383 OFFCURVE",
"34 295 CURVE SMOOTH",
"34 93.667 OFFCURVE",
"141 -8 OFFCURVE",
"321 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186.394 28 OFFCURVE",
"144 150.441 OFFCURVE",
"144 292 CURVE SMOOTH",
"144 423.699 OFFCURVE",
"197.474 556 OFFCURVE",
"321 556 CURVE SMOOTH",
"451.753 556 OFFCURVE",
"498 428.681 OFFCURVE",
"498 291 CURVE SMOOTH",
"498 158.887 OFFCURVE",
"436.809 28 OFFCURVE",
"324 28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 934 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 934 57 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 31 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
58 31 74 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 31 25 31 41 31 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 57 106 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 57 25 57 41 57 57 57 73 57 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 67 118 67 134 67 150 67 166 67 182 67 198 67 214 67 230 67 246 67 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 67 22 67 38 67 54 67 70 67 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 67 101 67 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 929 62 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 929 29 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
19 929 47 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 52 119 52 135 52 151 52 167 52 183 52 199 52 215 52 231 52 247 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 52 23 52 39 52 55 52 71 52 87 52 103 52 119 52 135 52 151 52 167 52 183 52 199 52 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 52 230 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 819;
}
);
note = uni13A4;
},
{
glyphname = uni20B9.INDIAN_RUPEE_SIGN;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"527 460.217 OFFCURVE",
"487 468.889 OFFCURVE",
"487 488 CURVE",
"481.667 548 OFFCURVE",
"452 598.333 OFFCURVE",
"392 629 CURVE",
"384.667 632.333 OFFCURVE",
"381 635 OFFCURVE",
"381 637 CURVE SMOOTH",
"381 644.182 OFFCURVE",
"444.36 647 OFFCURVE",
"451 647 CURVE SMOOTH",
"482.289 647 OFFCURVE",
"494.693 633 OFFCURVE",
"513 633 CURVE SMOOTH",
"527.667 633 OFFCURVE",
"530 639 OFFCURVE",
"530 659 CURVE SMOOTH",
"530 687 OFFCURVE",
"496 700 OFFCURVE",
"468 700 CURVE SMOOTH",
"404 700 OFFCURVE",
"331.333 688 OFFCURVE",
"266 676 CURVE",
"235.333 684 OFFCURVE",
"188.333 694 OFFCURVE",
"151 694 CURVE SMOOTH",
"90 694 OFFCURVE",
"59 674.713 OFFCURVE",
"59 649 CURVE SMOOTH",
"59 623.667 OFFCURVE",
"78.333 618 OFFCURVE",
"117 618 CURVE SMOOTH",
"173 618 OFFCURVE",
"207 623.667 OFFCURVE",
"247 633 CURVE",
"351.993 633 OFFCURVE",
"435 577.573 OFFCURVE",
"435 491 CURVE SMOOTH",
"435 481.667 OFFCURVE",
"430.667 477 OFFCURVE",
"422 477 CURVE SMOOTH",
"340.667 475.667 OFFCURVE",
"252 475 OFFCURVE",
"180 463 CURVE",
"169.333 460.333 OFFCURVE",
"170 443.667 OFFCURVE",
"170 441 CURVE SMOOTH",
"170 426.333 OFFCURVE",
"176.333 400 OFFCURVE",
"199 400 CURVE SMOOTH",
"209.667 400 OFFCURVE",
"219.833 403.5 OFFCURVE",
"229.5 410.5 CURVE SMOOTH",
"239.167 417.5 OFFCURVE",
"250.333 422 OFFCURVE",
"263 424 CURVE SMOOTH",
"295 429.333 OFFCURVE",
"329.667 431 OFFCURVE",
"363 431 CURVE SMOOTH",
"381.795 431 OFFCURVE",
"427 430.476 OFFCURVE",
"427 419 CURVE SMOOTH",
"427 361.458 OFFCURVE",
"308.479 264 OFFCURVE",
"224 264 CURVE",
"216 267.333 OFFCURVE",
"202.333 272.833 OFFCURVE",
"183 280.5 CURVE SMOOTH",
"163.667 288.167 OFFCURVE",
"133.667 299.667 OFFCURVE",
"93 315 CURVE",
"66.333 308.333 OFFCURVE",
"52 283.667 OFFCURVE",
"52 269 CURVE",
"74.667 263.667 OFFCURVE",
"93.5 258.333 OFFCURVE",
"108.5 253 CURVE SMOOTH",
"123.5 247.667 OFFCURVE",
"140.667 242.333 OFFCURVE",
"160 237 CURVE",
"164.667 234.333 OFFCURVE",
"168.5 230 OFFCURVE",
"171.5 224 CURVE SMOOTH",
"174.5 218 OFFCURVE",
"181.667 215 OFFCURVE",
"193 215 CURVE SMOOTH",
"197.667 215 OFFCURVE",
"202 215.667 OFFCURVE",
"206 217 CURVE SMOOTH",
"210 218.333 OFFCURVE",
"213.667 219 OFFCURVE",
"217 219 CURVE SMOOTH",
"220.333 219 OFFCURVE",
"223.333 218.333 OFFCURVE",
"226 217 CURVE SMOOTH",
"242 208.333 OFFCURVE",
"261.333 196 OFFCURVE",
"284 180 CURVE SMOOTH",
"306.667 164 OFFCURVE",
"333 145.667 OFFCURVE",
"363 125 CURVE SMOOTH",
"447.667 65 OFFCURVE",
"492.667 21.667 OFFCURVE",
"498 -5 CURVE",
"501.333 -8.333 OFFCURVE",
"507.333 -10 OFFCURVE",
"516 -10 CURVE SMOOTH",
"523.333 -10 OFFCURVE",
"529 -6.667 OFFCURVE",
"533 0 CURVE",
"533 5 LINE SMOOTH",
"533 35.667 OFFCURVE",
"521 67.333 OFFCURVE",
"489 98 CURVE SMOOTH",
"460.941 123.253 OFFCURVE",
"360.114 200.639 OFFCURVE",
"317 226 CURVE SMOOTH",
"311.667 229.333 OFFCURVE",
"309 232.333 OFFCURVE",
"309 235 CURVE SMOOTH",
"309 238.333 OFFCURVE",
"312 241.667 OFFCURVE",
"318 245 CURVE",
"394 275.667 OFFCURVE",
"456.333 327.667 OFFCURVE",
"479 405 CURVE",
"479.667 411.667 OFFCURVE",
"483 415 OFFCURVE",
"489 415 CURVE SMOOTH",
"492.333 415 OFFCURVE",
"496.333 413.833 OFFCURVE",
"501 411.5 CURVE SMOOTH",
"505.667 409.167 OFFCURVE",
"508.667 408 OFFCURVE",
"510 408 CURVE SMOOTH",
"524.667 408 OFFCURVE",
"527 413.333 OFFCURVE",
"527 436 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
102 934 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 77 106 77 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 77 25 77 41 77 57 77 73 77 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
102 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
126 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
93 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
93 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
26 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
99 931 110 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 930 60 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
105 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
82 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
99 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
85 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 572;
}
);
note = uni20B9.INDIAN_RUPEE_SIGN;
unicode = 20B9;
},
{
glyphname = minus;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"500 364.667 OFFCURVE",
"497.667 368.333 OFFCURVE",
"493 371 CURVE",
"467.667 365 OFFCURVE",
"447.333 362 OFFCURVE",
"432 362 CURVE SMOOTH",
"152 362 LINE SMOOTH",
"109.872 362 OFFCURVE",
"88.175 370 OFFCURVE",
"46 370 CURVE SMOOTH",
"32.667 370 OFFCURVE",
"20 350.667 OFFCURVE",
"20 336 CURVE SMOOTH",
"20 328 OFFCURVE",
"22.333 319.667 OFFCURVE",
"27 311 CURVE",
"454 311 LINE SMOOTH",
"484.667 311 OFFCURVE",
"500 327.333 OFFCURVE",
"500 360 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
14 931 2 24 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 520;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = Eth;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"487 495 OFFCURVE",
"472 557.667 OFFCURVE",
"442 607 CURVE SMOOTH",
"406 666.333 OFFCURVE",
"352 696 OFFCURVE",
"280 696 CURVE SMOOTH",
"242 696 OFFCURVE",
"210.333 685.333 OFFCURVE",
"185 664 CURVE SMOOTH",
"169 650.667 OFFCURVE",
"153.333 630 OFFCURVE",
"138 602 CURVE SMOOTH",
"123.333 574.667 OFFCURVE",
"111.667 558.333 OFFCURVE",
"103 553 CURVE",
"103 592 LINE SMOOTH",
"103 599.333 OFFCURVE",
"105.167 608.833 OFFCURVE",
"109.5 620.5 CURVE SMOOTH",
"113.833 632.167 OFFCURVE",
"116 642 OFFCURVE",
"116 650 CURVE SMOOTH",
"116 664.667 OFFCURVE",
"92 680 OFFCURVE",
"76 680 CURVE SMOOTH",
"60 680 OFFCURVE",
"52 672.667 OFFCURVE",
"52 658 CURVE SMOOTH",
"52 656 OFFCURVE",
"52.333 653.167 OFFCURVE",
"53 649.5 CURVE SMOOTH",
"53.667 645.833 OFFCURVE",
"54 643.333 OFFCURVE",
"54 642 CURVE SMOOTH",
"54 585.333 OFFCURVE",
"53 501.667 OFFCURVE",
"51 391 CURVE SMOOTH",
"51 383.667 OFFCURVE",
"50.833 376.833 OFFCURVE",
"50.5 370.5 CURVE SMOOTH",
"50.167 364.167 OFFCURVE",
"50 357.667 OFFCURVE",
"50 351 CURVE",
"7 347 LINE",
"2.333 347 OFFCURVE",
"0 344.667 OFFCURVE",
"0 340 CURVE SMOOTH",
"0 321.692 OFFCURVE",
"5.781 284 OFFCURVE",
"26 284 CURVE SMOOTH",
"30 284 OFFCURVE",
"33.833 284.667 OFFCURVE",
"37.5 286 CURVE SMOOTH",
"41.167 287.333 OFFCURVE",
"45 288.667 OFFCURVE",
"49 290 CURVE",
"48.333 259.333 OFFCURVE",
"48 231.667 OFFCURVE",
"48 207 CURVE SMOOTH",
"48 182.333 OFFCURVE",
"48 160.667 OFFCURVE",
"48 142 CURVE SMOOTH",
"48 68.667 OFFCURVE",
"52.667 18.667 OFFCURVE",
"62 -8 CURVE",
"68.667 -12.667 OFFCURVE",
"76 -15 OFFCURVE",
"84 -15 CURVE SMOOTH",
"88 -15 OFFCURVE",
"95.333 -7.667 OFFCURVE",
"106 7 CURVE",
"135.333 -16.333 OFFCURVE",
"166.667 -28 OFFCURVE",
"200 -28 CURVE SMOOTH",
"291.333 -28 OFFCURVE",
"364.667 26 OFFCURVE",
"420 134 CURVE SMOOTH",
"464.667 222.667 OFFCURVE",
"487 317.667 OFFCURVE",
"487 419 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"354 346.667 OFFCURVE",
"320 361 OFFCURVE",
"292 361 CURVE SMOOTH",
"226.667 361 OFFCURVE",
"163.333 360.333 OFFCURVE",
"98 355 CURVE",
"98 395 OFFCURVE",
"103.333 433 OFFCURVE",
"114 469 CURVE SMOOTH",
"126 511.667 OFFCURVE",
"147 552 OFFCURVE",
"177 590 CURVE SMOOTH",
"213.667 636 OFFCURVE",
"250.667 659 OFFCURVE",
"288 659 CURVE SMOOTH",
"340.667 659 OFFCURVE",
"378.667 631 OFFCURVE",
"402 575 CURVE SMOOTH",
"419.333 534.333 OFFCURVE",
"428 484 OFFCURVE",
"428 424 CURVE SMOOTH",
"428 366.667 OFFCURVE",
"422.667 312.333 OFFCURVE",
"412 261 CURVE SMOOTH",
"398.667 201.667 OFFCURVE",
"374.667 149 OFFCURVE",
"340 103 CURVE SMOOTH",
"298 47 OFFCURVE",
"250.333 19 OFFCURVE",
"197 19 CURVE SMOOTH",
"167 19 OFFCURVE",
"142.333 31.667 OFFCURVE",
"123 57 CURVE SMOOTH",
"106.333 79.667 OFFCURVE",
"98 106.667 OFFCURVE",
"98 138 CURVE SMOOTH",
"98 309 LINE",
"116.667 311.667 OFFCURVE",
"139.333 313 OFFCURVE",
"166 313 CURVE SMOOTH",
"206 313 OFFCURVE",
"238 312.333 OFFCURVE",
"262 311 CURVE SMOOTH",
"286 309.667 OFFCURVE",
"302.667 307 OFFCURVE",
"312 303 CURVE SMOOTH",
"315.333 301.667 OFFCURVE",
"319.833 299.5 OFFCURVE",
"325.5 296.5 CURVE SMOOTH",
"331.167 293.5 OFFCURVE",
"335 292 OFFCURVE",
"337 292 CURVE SMOOTH",
"351.667 292 OFFCURVE",
"354 297.333 OFFCURVE",
"354 320 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
87 934 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 934 76 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 87 22 87 38 87 54 87 70 87 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 87 101 87 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
87 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 76 106 76 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 76 121 76 137 76 153 76 169 76 185 76 201 76 217 76 233 76 249 76 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 76 25 76 41 76 57 76 73 76 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
70 931 4 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
90 931 18 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
15 18 90 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
43 8 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
62 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
80 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 80 233 80 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 80 120 80 136 80 152 80 168 80 184 80 200 80 216 80 232 80 248 80 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 80 24 80 40 80 56 80 72 80 88 80 104 80 120 80 136 80 152 80 168 80 184 80 200 80 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 517;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = eth;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"316 638.333 OFFCURVE",
"308 642 OFFCURVE",
"298 642 CURVE SMOOTH",
"279.976 642 OFFCURVE",
"252.653 623.353 OFFCURVE",
"207 586 CURVE",
"197.667 599.333 OFFCURVE",
"188.667 611.333 OFFCURVE",
"178 622 CURVE",
"161.733 640.978 OFFCURVE",
"101.714 692 OFFCURVE",
"75 692 CURVE SMOOTH",
"65.667 692 OFFCURVE",
"43 687.667 OFFCURVE",
"43 657 CURVE SMOOTH",
"43 650.333 OFFCURVE",
"44.333 644 OFFCURVE",
"47 638 CURVE",
"88.217 638 OFFCURVE",
"134.02 588.698 OFFCURVE",
"162 548 CURVE",
"127.333 517.333 OFFCURVE",
"94.333 487.333 OFFCURVE",
"61 454 CURVE SMOOTH",
"59.667 452.667 OFFCURVE",
"59 450.667 OFFCURVE",
"59 448 CURVE SMOOTH",
"59 440.042 OFFCURVE",
"90.096 416 OFFCURVE",
"100 416 CURVE SMOOTH",
"120.314 416 OFFCURVE",
"124.388 456.388 OFFCURVE",
"141 473 CURVE",
"151 484.333 OFFCURVE",
"165.667 498 OFFCURVE",
"185 514 CURVE",
"213 467.333 OFFCURVE",
"235.333 415 OFFCURVE",
"254 363 CURVE",
"235.333 376.333 OFFCURVE",
"211.667 384 OFFCURVE",
"185 384 CURVE SMOOTH",
"93.654 384 OFFCURVE",
"25 255.317 OFFCURVE",
"25 147 CURVE SMOOTH",
"25 35 OFFCURVE",
"79 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"276.231 -30 OFFCURVE",
"342 63.048 OFFCURVE",
"342 170 CURVE SMOOTH",
"342 283.436 OFFCURVE",
"303.915 434.422 OFFCURVE",
"232 550 CURVE",
"266 576 OFFCURVE",
"289 591 OFFCURVE",
"301 595 CURVE",
"321.667 597.667 OFFCURVE",
"332 603.333 OFFCURVE",
"332 612 CURVE SMOOTH",
"332 614.667 OFFCURVE",
"328.667 621 OFFCURVE",
"322 631 CURVE"
);
},
{
closed = 1;
nodes = (
"294 81.627 OFFCURVE",
"251.425 4 OFFCURVE",
"179 4 CURVE SMOOTH",
"115 4 OFFCURVE",
"80 62 OFFCURVE",
"80 150 CURVE SMOOTH",
"80 243.642 OFFCURVE",
"127.778 335 OFFCURVE",
"200 335 CURVE SMOOTH",
"261.59 335 OFFCURVE",
"294 257.718 OFFCURVE",
"294 171 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
90 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 72 106 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 72 121 72 137 72 153 72 169 72 185 72 201 72 217 72 233 72 249 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 72 25 72 41 72 57 72 73 72 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
11 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
90 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
27 19 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
82 933 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 82 22 82 38 82 54 82 70 82 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 82 101 82 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
72 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 941 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
85 929 16 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 931 77 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 77 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
52 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
89 52 105 52 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
104 52 120 52 136 52 152 52 168 52 184 52 200 52 216 52 232 52 248 52 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
8 52 24 52 40 52 56 52 72 52 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 367;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = Thorn;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 651.768 OFFCURVE",
"104.005 670 OFFCURVE",
"92 670 CURVE SMOOTH",
"74.097 670 OFFCURVE",
"40 642.219 OFFCURVE",
"40 624 CURVE SMOOTH",
"36 466.667 OFFCURVE",
"33 315.667 OFFCURVE",
"33 169 CURVE SMOOTH",
"33 146.333 OFFCURVE",
"34.333 120.667 OFFCURVE",
"41 62 CURVE SMOOTH",
"47 15.333 OFFCURVE",
"64.333 -8 OFFCURVE",
"93 -8 CURVE SMOOTH",
"100.333 -8 OFFCURVE",
"110.333 -3.667 OFFCURVE",
"123 5 CURVE",
"106.333 29 OFFCURVE",
"96.333 75.667 OFFCURVE",
"93 145 CURVE",
"127.667 103.667 OFFCURVE",
"182 68 OFFCURVE",
"266 68 CURVE SMOOTH",
"411.964 68 OFFCURVE",
"471 224.964 OFFCURVE",
"471 367 CURVE SMOOTH",
"471 484.809 OFFCURVE",
"418.128 573 OFFCURVE",
"286 573 CURVE SMOOTH",
"231.333 573 OFFCURVE",
"160 536 OFFCURVE",
"104 464 CURVE",
"105.333 481.333 OFFCURVE",
"107 498.833 OFFCURVE",
"109 516.5 CURVE SMOOTH",
"111 534.167 OFFCURVE",
"113 552.333 OFFCURVE",
"115 571 CURVE SMOOTH",
"116.885 586.706 OFFCURVE",
"132 639.917 OFFCURVE",
"132 641 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187.619 117 OFFCURVE",
"125.96 165.56 OFFCURVE",
"93 215 CURVE",
"93 268.333 OFFCURVE",
"95 324 OFFCURVE",
"99 382 CURVE",
"135.756 452.886 OFFCURVE",
"218.959 531 OFFCURVE",
"292 531 CURVE SMOOTH",
"389.337 531 OFFCURVE",
"422 443.719 OFFCURVE",
"422 355 CURVE SMOOTH",
"422 239.569 OFFCURVE",
"378.419 117 OFFCURVE",
"251 117 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
61 934 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 61 22 61 38 61 54 61 70 61 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 61 101 61 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 51 106 51 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 51 121 51 137 51 153 51 169 51 185 51 201 51 217 51 233 51 249 51 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 51 25 51 41 51 57 51 73 51 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
24 33 61 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
46 931 21 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 928 56 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 28 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 28 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 501;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = thorn;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"324 335.311 OFFCURVE",
"269.987 441 OFFCURVE",
"173 441 CURVE SMOOTH",
"139.667 441 OFFCURVE",
"123.333 430.667 OFFCURVE",
"98 388 CURVE SMOOTH",
"90 374.667 OFFCURVE",
"83.333 367 OFFCURVE",
"78 365 CURVE",
"78 403 LINE SMOOTH",
"78 445.596 OFFCURVE",
"97 580.404 OFFCURVE",
"97 623 CURVE SMOOTH",
"97 643 OFFCURVE",
"76.667 667 OFFCURVE",
"58 667 CURVE SMOOTH",
"44 667 LINE",
"37.333 512.333 OFFCURVE",
"33.667 401.667 OFFCURVE",
"31 311 CURVE SMOOTH",
"29.667 265.667 OFFCURVE",
"28.5 224.5 OFFCURVE",
"27.5 187.5 CURVE SMOOTH",
"25.5 113.5 OFFCURVE",
"25 43.5 OFFCURVE",
"25 -34.5 CURVE SMOOTH",
"25 -73.5 OFFCURVE",
"25 -117.667 OFFCURVE",
"25 -167 CURVE SMOOTH",
"25 -192.116 OFFCURVE",
"37.257 -255.257 OFFCURVE",
"47 -265 CURVE",
"53.667 -269.667 OFFCURVE",
"65 -272 OFFCURVE",
"81 -272 CURVE SMOOTH",
"94.333 -272 OFFCURVE",
"101 -266.333 OFFCURVE",
"101 -255 CURVE SMOOTH",
"101 -253.667 OFFCURVE",
"99.333 -250.333 OFFCURVE",
"96 -245 CURVE SMOOTH",
"92.667 -239.667 OFFCURVE",
"88.333 -227.667 OFFCURVE",
"83 -209 CURVE SMOOTH",
"72.333 -174.333 OFFCURVE",
"70 -113 OFFCURVE",
"70 -25 CURVE SMOOTH",
"70 14.333 OFFCURVE",
"72.333 35 OFFCURVE",
"77 37 CURVE",
"103.667 3 OFFCURVE",
"135.667 -14 OFFCURVE",
"173 -14 CURVE SMOOTH",
"229 -14 OFFCURVE",
"270 17 OFFCURVE",
"296 79 CURVE SMOOTH",
"310.667 116.333 OFFCURVE",
"324 160.333 OFFCURVE",
"324 211 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236.667 46 OFFCURVE",
"209 16 OFFCURVE",
"173 16 CURVE SMOOTH",
"131.133 16 OFFCURVE",
"113.301 50.955 OFFCURVE",
"91 86 CURVE",
"86.333 91.333 OFFCURVE",
"82 95.5 OFFCURVE",
"78 98.5 CURVE SMOOTH",
"74 101.5 OFFCURVE",
"71.333 103.333 OFFCURVE",
"70 104 CURVE",
"70 252.682 OFFCURVE",
"108.948 393 OFFCURVE",
"187 393 CURVE SMOOTH",
"243.01 393 OFFCURVE",
"275 266.108 OFFCURVE",
"275 216 CURVE SMOOTH",
"275 173.333 OFFCURVE",
"266.667 140.667 OFFCURVE",
"256 106 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 932 24 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 54 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 9 118 9 134 9 150 9 166 9 182 9 198 9 214 9 230 9 246 9 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 9 22 9 38 9 54 9 70 9 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 9 101 9 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
35 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 31 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 54 106 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 54 25 54 41 54 57 54 73 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 937 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
46 931 59 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 17 31 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
72 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 72 119 72 135 72 151 72 167 72 183 72 199 72 215 72 231 72 247 72 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 72 23 72 39 72 55 72 71 72 87 72 103 72 119 72 135 72 151 72 167 72 183 72 199 72 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 72 230 72 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 350;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = zeroinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"302 254.471 OFFCURVE",
"250.649 335 OFFCURVE",
"182 335 CURVE SMOOTH",
"89.289 335 OFFCURVE",
"24 239.906 OFFCURVE",
"24 146 CURVE SMOOTH",
"24 60.533 OFFCURVE",
"77.311 -6 OFFCURVE",
"159 -6 CURVE SMOOTH",
"243.706 -6 OFFCURVE",
"302 82.111 OFFCURVE",
"302 177 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 104.573 OFFCURVE",
"221.976 38 OFFCURVE",
"164 38 CURVE SMOOTH",
"106.667 38 OFFCURVE",
"70 80.667 OFFCURVE",
"70 146 CURVE SMOOTH",
"70 211.021 OFFCURVE",
"112.028 297 OFFCURVE",
"172 297 CURVE SMOOTH",
"228 297 OFFCURVE",
"258 251 OFFCURVE",
"258 179 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 20 106 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 20 25 20 41 20 57 20 73 20 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
28 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 28 22 28 38 28 54 28 70 28 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 28 101 28 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 929 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 930 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 31 23 31 39 31 55 31 71 31 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 31 102 31 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 340;
}
);
note = zeroinferior;
unicode = 2080;
},
{
glyphname = oneinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"106 322 OFFCURVE",
"90 340 OFFCURVE",
"78 340 CURVE SMOOTH",
"55.457 340 OFFCURVE",
"37 279.959 OFFCURVE",
"37 236 CURVE",
"45 230 LINE",
"45 22 LINE SMOOTH",
"45 1.333 OFFCURVE",
"56.333 -9 OFFCURVE",
"79 -9 CURVE SMOOTH",
"91.667 -9 OFFCURVE",
"98 -3 OFFCURVE",
"98 9 CURVE SMOOTH",
"98 9.667 OFFCURVE",
"95.333 14.667 OFFCURVE",
"90 24 CURVE",
"84.829 29.171 OFFCURVE",
"86 115.367 OFFCURVE",
"86 166 CURVE SMOOTH",
"86 192.667 OFFCURVE",
"89.333 229.333 OFFCURVE",
"100 276 CURVE SMOOTH",
"104 294 OFFCURVE",
"106 305.333 OFFCURVE",
"106 310 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 932 17 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 933 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 149;
}
);
note = oneinferior;
unicode = 2081;
},
{
glyphname = twoinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"286 47 OFFCURVE",
"274.667 62 OFFCURVE",
"260 62 CURVE",
"204 58 OFFCURVE",
"143.333 48.667 OFFCURVE",
"90 38 CURVE",
"118 66 OFFCURVE",
"141.167 87.833 OFFCURVE",
"159.5 103.5 CURVE SMOOTH",
"177.833 119.167 OFFCURVE",
"190.667 131 OFFCURVE",
"198 139 CURVE SMOOTH",
"232.667 177.667 OFFCURVE",
"250 217.333 OFFCURVE",
"250 252 CURVE SMOOTH",
"250 296.787 OFFCURVE",
"206.615 337 OFFCURVE",
"162 337 CURVE SMOOTH",
"102.751 337 OFFCURVE",
"26 277.486 OFFCURVE",
"26 217 CURVE SMOOTH",
"26 206.333 OFFCURVE",
"44.667 193 OFFCURVE",
"54 193 CURVE SMOOTH",
"75.333 193 OFFCURVE",
"76.667 222.333 OFFCURVE",
"82 249 CURVE",
"89.836 275.12 OFFCURVE",
"131.405 302 OFFCURVE",
"158 302 CURVE SMOOTH",
"182 302 OFFCURVE",
"202 285.333 OFFCURVE",
"202 260 CURVE SMOOTH",
"202 202.62 OFFCURVE",
"130.692 116.353 OFFCURVE",
"59 59 CURVE SMOOTH",
"44.333 47.667 OFFCURVE",
"34.833 39.167 OFFCURVE",
"30.5 33.5 CURVE SMOOTH",
"26.167 27.833 OFFCURVE",
"24 21.333 OFFCURVE",
"24 14 CURVE SMOOTH",
"24 -2 OFFCURVE",
"38 -12 OFFCURVE",
"54 -12 CURVE",
"54 -12 OFFCURVE",
"60.667 -10.333 OFFCURVE",
"74 -7 CURVE",
"126 9 OFFCURVE",
"178.333 17 OFFCURVE",
"231 17 CURVE SMOOTH",
"235.667 17 OFFCURVE",
"242.167 15.833 OFFCURVE",
"250.5 13.5 CURVE SMOOTH",
"258.833 11.167 OFFCURVE",
"264.667 10 OFFCURVE",
"268 10 CURVE SMOOTH",
"278.667 10 OFFCURVE",
"286 21.667 OFFCURVE",
"286 31 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 932 21 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 21 106 21 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 21 25 21 41 21 57 21 73 21 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
54 930 6 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 929 24 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
51 6 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 322;
}
);
note = twoinferior;
unicode = 2082;
},
{
glyphname = threeinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 158.667 OFFCURVE",
"280.667 186 OFFCURVE",
"222 198 CURVE",
"246 219.333 OFFCURVE",
"266 251.333 OFFCURVE",
"266 282 CURVE SMOOTH",
"266 320.667 OFFCURVE",
"233.667 346 OFFCURVE",
"191 346 CURVE SMOOTH",
"131.85 346 OFFCURVE",
"35 282.277 OFFCURVE",
"35 245 CURVE SMOOTH",
"35 234.333 OFFCURVE",
"50 224 OFFCURVE",
"62 224 CURVE SMOOTH",
"75.053 224 OFFCURVE",
"105.126 247.379 OFFCURVE",
"110 262 CURVE",
"110 263.333 OFFCURVE",
"109.333 266 OFFCURVE",
"108 270 CURVE",
"117.632 284.447 OFFCURVE",
"172.278 306 OFFCURVE",
"191 306 CURVE SMOOTH",
"210.333 306 OFFCURVE",
"220 296.667 OFFCURVE",
"220 278 CURVE SMOOTH",
"220 262 OFFCURVE",
"212.333 250 OFFCURVE",
"199 234 CURVE",
"168.593 200.828 OFFCURVE",
"166.445 200.691 OFFCURVE",
"118 198 CURVE SMOOTH",
"80.667 195.333 OFFCURVE",
"68 175.333 OFFCURVE",
"68 162 CURVE SMOOTH",
"68 151.333 OFFCURVE",
"81.333 146 OFFCURVE",
"96 146 CURVE SMOOTH",
"110.423 146 OFFCURVE",
"172.111 168 OFFCURVE",
"180 168 CURVE SMOOTH",
"214.445 168 OFFCURVE",
"259 143.233 OFFCURVE",
"259 113 CURVE SMOOTH",
"259 68.879 OFFCURVE",
"198.204 31 OFFCURVE",
"141 31 CURVE SMOOTH",
"115.667 31 OFFCURVE",
"97.333 35.667 OFFCURVE",
"86 45 CURVE",
"75.859 55.141 OFFCURVE",
"68.549 84 OFFCURVE",
"48 84 CURVE SMOOTH",
"37.333 84 OFFCURVE",
"24 74 OFFCURVE",
"24 62 CURVE SMOOTH",
"24 50 OFFCURVE",
"32 38 OFFCURVE",
"48 26 CURVE SMOOTH",
"82.667 -0.667 OFFCURVE",
"113.333 -4 OFFCURVE",
"156 -4 CURVE SMOOTH",
"228.827 -4 OFFCURVE",
"310 44.209 OFFCURVE",
"310 116 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
74 932 49 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
90 49 106 49 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 49 121 49 137 49 153 49 169 49 185 49 201 49 217 49 233 49 249 49 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 49 25 49 41 49 57 49 73 49 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
25 49 74 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 25 106 25 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 25 25 25 41 25 57 25 73 25 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
77 49 74 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
71 928 51 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
41 931 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 13 119 13 135 13 151 13 167 13 183 13 199 13 215 13 231 13 247 13 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 13 23 13 39 13 55 13 71 13 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 13 102 13 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 20 230 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
30 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 353;
}
);
note = threeinferior;
unicode = 2083;
},
{
glyphname = fourinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"341 78 OFFCURVE",
"344 88.333 OFFCURVE",
"344 99 CURVE SMOOTH",
"344 117.667 OFFCURVE",
"317.333 127 OFFCURVE",
"284 127 CURVE SMOOTH",
"278.667 127 OFFCURVE",
"274.167 126.833 OFFCURVE",
"270.5 126.5 CURVE SMOOTH",
"266.833 126.167 OFFCURVE",
"263.333 126 OFFCURVE",
"260 126 CURVE",
"260 144.203 OFFCURVE",
"276.017 239.598 OFFCURVE",
"282 274 CURVE",
"287.333 284.667 OFFCURVE",
"292 297.333 OFFCURVE",
"292 308 CURVE SMOOTH",
"292 322.667 OFFCURVE",
"278 335 OFFCURVE",
"262 335 CURVE SMOOTH",
"236.63 335 OFFCURVE",
"232.401 315.061 OFFCURVE",
"209 294 CURVE SMOOTH",
"162.333 251.333 OFFCURVE",
"126 220 OFFCURVE",
"102 200 CURVE SMOOTH",
"59.333 165.333 OFFCURVE",
"24 136.667 OFFCURVE",
"24 114 CURVE SMOOTH",
"24 95.204 OFFCURVE",
"63.521 72 OFFCURVE",
"86 72 CURVE SMOOTH",
"104.162 72 OFFCURVE",
"186.351 81.039 OFFCURVE",
"213 84 CURVE",
"213 76.988 OFFCURVE",
"212 47.662 OFFCURVE",
"212 34 CURVE SMOOTH",
"212 -5.294 OFFCURVE",
"223.52 -16 OFFCURVE",
"246 -16 CURVE SMOOTH",
"264.667 -16 OFFCURVE",
"270 -0.667 OFFCURVE",
"270 6 CURVE SMOOTH",
"270 8 OFFCURVE",
"268.667 12 OFFCURVE",
"266 18 CURVE",
"255.333 34 OFFCURVE",
"256 62 OFFCURVE",
"256 86 CURVE",
"278.667 86 OFFCURVE",
"297.333 83.667 OFFCURVE",
"312 81 CURVE",
"333 78 LINE"
);
},
{
closed = 1;
nodes = (
"222 206.667 OFFCURVE",
"218 163.667 OFFCURVE",
"216 125 CURVE",
"190.302 123.394 OFFCURVE",
"93.103 114 OFFCURVE",
"86 114 CURVE SMOOTH",
"80.667 114 OFFCURVE",
"78 115.333 OFFCURVE",
"78 118 CURVE SMOOTH",
"78 128.667 OFFCURVE",
"100 152.667 OFFCURVE",
"144 190 CURVE SMOOTH",
"177.333 216.667 OFFCURVE",
"205.333 238 OFFCURVE",
"228 254 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
60 17 23 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
58 17 74 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 17 121 17 137 17 153 17 169 17 185 17 201 17 217 17 233 17 249 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
9 17 25 17 41 17 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
63 17 60 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 54 119 54 135 54 151 54 167 54 183 54 199 54 215 54 231 54 247 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
7 54 23 54 39 54 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
54 54 70 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
27 931 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
63 12 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 374;
}
);
note = fourinferior;
unicode = 2084;
},
{
glyphname = fiveinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"289 173.333 OFFCURVE",
"244 209 OFFCURVE",
"180 209 CURVE SMOOTH",
"154.667 209 OFFCURVE",
"128.667 203.333 OFFCURVE",
"102 192 CURVE",
"101.333 195.333 OFFCURVE",
"101 198.5 OFFCURVE",
"101 201.5 CURVE SMOOTH",
"101 204.5 OFFCURVE",
"101 208.333 OFFCURVE",
"101 213 CURVE SMOOTH",
"101 253 OFFCURVE",
"103.333 275.333 OFFCURVE",
"108 280 CURVE SMOOTH",
"111.032 283.032 OFFCURVE",
"178.797 288 OFFCURVE",
"190 288 CURVE SMOOTH",
"197.333 288 OFFCURVE",
"204.833 286.833 OFFCURVE",
"212.5 284.5 CURVE SMOOTH",
"220.167 282.167 OFFCURVE",
"230.333 281 OFFCURVE",
"243 281 CURVE",
"250.333 294.333 OFFCURVE",
"254 303.333 OFFCURVE",
"254 308 CURVE SMOOTH",
"254 322.667 OFFCURVE",
"235.333 334 OFFCURVE",
"214 334 CURVE SMOOTH",
"197.36 334 OFFCURVE",
"119.712 325 OFFCURVE",
"112 325 CURVE",
"106 331 OFFCURVE",
"99 334 OFFCURVE",
"91 334 CURVE SMOOTH",
"85.667 334 OFFCURVE",
"80 332.667 OFFCURVE",
"74 330 CURVE",
"62.667 304 OFFCURVE",
"57 268.333 OFFCURVE",
"57 223 CURVE SMOOTH",
"57 220.333 OFFCURVE",
"57.167 216.333 OFFCURVE",
"57.5 211 CURVE SMOOTH",
"57.833 205.667 OFFCURVE",
"58 194.667 OFFCURVE",
"58 178 CURVE SMOOTH",
"58 174 OFFCURVE",
"56.833 168.333 OFFCURVE",
"54.5 161 CURVE SMOOTH",
"52.167 153.667 OFFCURVE",
"50.667 148.333 OFFCURVE",
"50 145 CURVE",
"63.333 137.667 OFFCURVE",
"72.667 134 OFFCURVE",
"78 134 CURVE SMOOTH",
"87.071 134 OFFCURVE",
"138.802 167 OFFCURVE",
"174 167 CURVE SMOOTH",
"212.667 167 OFFCURVE",
"240 146 OFFCURVE",
"240 110 CURVE SMOOTH",
"240 62 OFFCURVE",
"196.333 26 OFFCURVE",
"135 26 CURVE SMOOTH",
"113.872 26 OFFCURVE",
"67.672 62 OFFCURVE",
"50 62 CURVE SMOOTH",
"32.667 62 OFFCURVE",
"24 55.333 OFFCURVE",
"24 42 CURVE SMOOTH",
"24 32.667 OFFCURVE",
"34.667 22.333 OFFCURVE",
"56 11 CURVE SMOOTH",
"90.667 -7.667 OFFCURVE",
"112.333 -10 OFFCURVE",
"143 -10 CURVE SMOOTH",
"218.892 -10 OFFCURVE",
"289 46.065 OFFCURVE",
"289 116 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 20 106 20 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 20 25 20 41 20 57 20 73 20 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
62 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 7 values pushed */
38 62 54 62 70 62 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
6 62 22 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 62 101 62 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
47 930 55 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
67 928 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 931 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 12 119 12 135 12 151 12 167 12 183 12 199 12 215 12 231 12 247 12 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 12 23 12 39 12 55 12 71 12 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 12 102 12 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 17 119 17 135 17 151 17 167 17 183 17 199 17 215 17 231 17 247 17 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 17 23 17 39 17 55 17 71 17 87 17 103 17 119 17 135 17 151 17 167 17 183 17 199 17 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 17 230 17 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
65 23 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 332;
}
);
note = fiveinferior;
unicode = 2085;
},
{
glyphname = sixinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"287 182 OFFCURVE",
"240 226 OFFCURVE",
"172 226 CURVE SMOOTH",
"146 226 OFFCURVE",
"118.667 213 OFFCURVE",
"90 187 CURVE",
"90 190 LINE SMOOTH",
"90 222.979 OFFCURVE",
"154.499 292.928 OFFCURVE",
"190 298 CURVE",
"192.667 293.333 OFFCURVE",
"197 291 OFFCURVE",
"203 291 CURVE SMOOTH",
"213.667 291 OFFCURVE",
"222 302.333 OFFCURVE",
"222 313 CURVE SMOOTH",
"222 326.333 OFFCURVE",
"201.667 342 OFFCURVE",
"187 342 CURVE SMOOTH",
"175 342 OFFCURVE",
"156.333 332.667 OFFCURVE",
"131 314 CURVE SMOOTH",
"67 268.667 OFFCURVE",
"24 193 OFFCURVE",
"24 121 CURVE SMOOTH",
"24 42.632 OFFCURVE",
"73.884 -14 OFFCURVE",
"150 -14 CURVE SMOOTH",
"224.442 -14 OFFCURVE",
"287 41.852 OFFCURVE",
"287 114 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 66.236 OFFCURVE",
"199.131 22 OFFCURVE",
"149 22 CURVE SMOOTH",
"106.333 22 OFFCURVE",
"78 52 OFFCURVE",
"74 104 CURVE",
"82 127 LINE",
"98 160.333 OFFCURVE",
"138 188 OFFCURVE",
"174 188 CURVE SMOOTH",
"216.667 188 OFFCURVE",
"242 162.333 OFFCURVE",
"242 121 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 34 106 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 34 25 34 41 34 57 34 73 34 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
29 10 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
41 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
15 37 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
31 929 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 44 119 44 135 44 151 44 167 44 183 44 199 44 215 44 231 44 247 44 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 44 23 44 39 44 55 44 71 44 87 44 103 44 119 44 135 44 151 44 167 44 183 44 199 44 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 44 230 44 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 330;
}
);
note = sixinferior;
unicode = 2086;
},
{
glyphname = seveninferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"264 329.881 OFFCURVE",
"210.212 346 OFFCURVE",
"174 346 CURVE SMOOTH",
"154 346 OFFCURVE",
"135.333 344.667 OFFCURVE",
"118 342 CURVE",
"115.333 342 OFFCURVE",
"108.167 339.667 OFFCURVE",
"96.5 335 CURVE SMOOTH",
"84.833 330.333 OFFCURVE",
"74.667 327.333 OFFCURVE",
"66 326 CURVE",
"60.667 334 OFFCURVE",
"52.667 338.333 OFFCURVE",
"42 339 CURVE",
"30 317.667 OFFCURVE",
"28 298.333 OFFCURVE",
"24 277 CURVE",
"24 275.667 OFFCURVE",
"22.833 271.833 OFFCURVE",
"20.5 265.5 CURVE SMOOTH",
"18.167 259.167 OFFCURVE",
"17 254 OFFCURVE",
"17 250 CURVE SMOOTH",
"17 238 OFFCURVE",
"28.667 229 OFFCURVE",
"42 229 CURVE SMOOTH",
"66.171 229 OFFCURVE",
"70 266.207 OFFCURVE",
"70 280 CURVE",
"79.193 289.193 OFFCURVE",
"177.282 302 OFFCURVE",
"193 302 CURVE SMOOTH",
"197 302 OFFCURVE",
"199 299.667 OFFCURVE",
"199 295 CURVE SMOOTH",
"199 292.333 OFFCURVE",
"198.667 290.667 OFFCURVE",
"198 290 CURVE",
"151.521 223.951 OFFCURVE",
"75 84.033 OFFCURVE",
"75 22 CURVE SMOOTH",
"75 0.667 OFFCURVE",
"91.333 -20 OFFCURVE",
"110 -20 CURVE SMOOTH",
"117.333 -20 OFFCURVE",
"122.667 -15.333 OFFCURVE",
"126 -6 CURVE",
"122.667 2.667 OFFCURVE",
"120.5 9.667 OFFCURVE",
"119.5 15 CURVE SMOOTH",
"118.5 20.333 OFFCURVE",
"118 24 OFFCURVE",
"118 26 CURVE SMOOTH",
"118 39.333 OFFCURVE",
"122 56 OFFCURVE",
"130 76 CURVE SMOOTH",
"163.333 164.667 OFFCURVE",
"203.333 233.333 OFFCURVE",
"250 282 CURVE",
"253.333 286 OFFCURVE",
"256.5 289.667 OFFCURVE",
"259.5 293 CURVE SMOOTH",
"262.5 296.333 OFFCURVE",
"264 301.667 OFFCURVE",
"264 309 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
51 930 24 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 293;
}
);
note = seveninferior;
unicode = 2087;
},
{
glyphname = eightinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"290 134 OFFCURVE",
"260 166 OFFCURVE",
"200 186 CURVE",
"232 200.667 OFFCURVE",
"254 214.167 OFFCURVE",
"266 226.5 CURVE SMOOTH",
"278 238.833 OFFCURVE",
"284 252 OFFCURVE",
"284 266 CURVE SMOOTH",
"284 279.333 OFFCURVE",
"276.333 290 OFFCURVE",
"263 290 CURVE SMOOTH",
"259.667 290 OFFCURVE",
"257.333 289.333 OFFCURVE",
"256 288 CURVE",
"233.333 318.667 OFFCURVE",
"196.667 338 OFFCURVE",
"158 338 CURVE SMOOTH",
"95.228 338 OFFCURVE",
"40 297.665 OFFCURVE",
"40 242 CURVE SMOOTH",
"40 215.333 OFFCURVE",
"54.333 192.667 OFFCURVE",
"83 174 CURVE",
"43.667 150 OFFCURVE",
"24 120 OFFCURVE",
"24 84 CURVE SMOOTH",
"24 24 OFFCURVE",
"80.667 -9 OFFCURVE",
"158 -9 CURVE SMOOTH",
"229.676 -9 OFFCURVE",
"290 23.119 OFFCURVE",
"290 90 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221.284 239.284 OFFCURVE",
"153.972 202 OFFCURVE",
"141 202 CURVE SMOOTH",
"119.811 202 OFFCURVE",
"84 222.111 OFFCURVE",
"84 242 CURVE SMOOTH",
"84 276.667 OFFCURVE",
"116.667 300 OFFCURVE",
"158 300 CURVE SMOOTH",
"195.35 300 OFFCURVE",
"200.01 290.317 OFFCURVE",
"228 246 CURVE"
);
},
{
closed = 1;
nodes = (
"244 49.333 OFFCURVE",
"209.333 28 OFFCURVE",
"160 28 CURVE SMOOTH",
"104 28 OFFCURVE",
"68 49.333 OFFCURVE",
"68 84 CURVE SMOOTH",
"68 100.667 OFFCURVE",
"75.333 115.333 OFFCURVE",
"90 128 CURVE",
"134 156 LINE",
"176.667 144.667 OFFCURVE",
"205.667 133.667 OFFCURVE",
"221 123 CURVE SMOOTH",
"236.333 112.333 OFFCURVE",
"244 99.333 OFFCURVE",
"244 84 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
54 932 8 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 932 48 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 54 22 54 38 54 54 54 70 54 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 54 101 54 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
12 8 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
38 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 38 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
28 8 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
NPUSHW[ ]\011/* 5 values pushed */
90 48 106 48 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 48 121 48 137 48 153 48 169 48 185 48 201 48 217 48 233 48 249 48 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 48 25 48 41 48 57 48 73 48 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 929 35 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 929 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
7 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 13 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
214 57 230 57 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 328;
}
);
note = eightinferior;
unicode = 2088;
},
{
glyphname = nineinferior;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"258 284.316 OFFCURVE",
"213.82 342 OFFCURVE",
"146 342 CURVE SMOOTH",
"70 342 OFFCURVE",
"24 286.333 OFFCURVE",
"24 209 CURVE SMOOTH",
"24 145 OFFCURVE",
"63 106 OFFCURVE",
"127 106 CURVE SMOOTH",
"146.333 106 OFFCURVE",
"168.667 112.667 OFFCURVE",
"194 126 CURVE",
"176.867 89.593 OFFCURVE",
"141.487 36 OFFCURVE",
"122 36 CURVE",
"117.333 40.667 OFFCURVE",
"112 43 OFFCURVE",
"106 43 CURVE SMOOTH",
"95.333 43 OFFCURVE",
"86 34.333 OFFCURVE",
"86 25 CURVE SMOOTH",
"86 12.582 OFFCURVE",
"114.693 -4 OFFCURVE",
"130 -4 CURVE SMOOTH",
"140.667 -4 OFFCURVE",
"161.333 7 OFFCURVE",
"184 31 CURVE SMOOTH",
"237.333 87 OFFCURVE",
"258 146 OFFCURVE",
"258 210 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"214 200 OFFCURVE",
"212.667 194.667 OFFCURVE",
"210 192 CURVE",
"201.773 175.546 OFFCURVE",
"146.863 142 OFFCURVE",
"128 142 CURVE SMOOTH",
"93.333 142 OFFCURVE",
"69 169.333 OFFCURVE",
"69 204 CURVE SMOOTH",
"69 252.671 OFFCURVE",
"102.828 306 OFFCURVE",
"146 306 CURVE SMOOTH",
"186 306 OFFCURVE",
"214 262.667 OFFCURVE",
"214 208 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
90 34 106 34 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 34 121 34 137 34 153 34 169 34 185 34 201 34 217 34 233 34 249 34 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 34 25 34 41 34 57 34 73 34 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 2 values pushed */
0 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
21 26 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
42 932 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
102 42 118 42 134 42 150 42 166 42 182 42 198 42 214 42 230 42 246 42 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
6 42 22 42 38 42 54 42 70 42 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
85 42 101 42 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
29 929 37 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
45 929 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 928 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 21 values pushed */
103 16 119 16 135 16 151 16 167 16 183 16 199 16 215 16 231 16 247 16 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
7 16 23 16 39 16 55 16 71 16 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
86 16 102 16 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
21 23 45 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = nineinferior;
unicode = 2089;
},
{
glyphname = onesuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = oneinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 149;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = threesuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = threeinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 353;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = twosuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = twoinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 322;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = zerosuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = zeroinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 340;
}
);
note = zerosuperior;
unicode = 2070;
},
{
glyphname = foursuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fourinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 374;
}
);
note = foursuperior;
unicode = 2074;
},
{
glyphname = fivesuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fiveinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 332;
}
);
note = fivesuperior;
unicode = 2075;
},
{
glyphname = sixsuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = sixinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 330;
}
);
note = sixsuperior;
unicode = 2076;
},
{
glyphname = sevensuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = seveninferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 293;
}
);
note = sevensuperior;
unicode = 2077;
},
{
glyphname = eightsuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = eightinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 328;
}
);
note = eightsuperior;
unicode = 2078;
},
{
glyphname = ninesuperior;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = nineinferior;
transform = "{1, 0, 0, 1, 0, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 0, 348}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 300;
}
);
note = ninesuperior;
unicode = 2079;
},
{
glyphname = fi;
layers = (
{
components = (
{
name = f;
},
{
name = i;
transform = "{1, 0, 0, 1, 274, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 415;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"383 14 OFFCURVE",
"381.5 19.5 OFFCURVE",
"378.5 26.5 CURVE SMOOTH",
"375.5 33.5 OFFCURVE",
"374 38 OFFCURVE",
"374 40 CURVE",
"364.667 81.333 OFFCURVE",
"360.667 142.333 OFFCURVE",
"358 225 CURVE",
"358.667 221.667 OFFCURVE",
"359 285 OFFCURVE",
"359 415 CURVE SMOOTH",
"359 496.333 OFFCURVE",
"363 559.667 OFFCURVE",
"371 605 CURVE",
"378 630 LINE SMOOTH",
"381.333 642 OFFCURVE",
"383 650.667 OFFCURVE",
"383 656 CURVE SMOOTH",
"383 674.667 OFFCURVE",
"359.667 690 OFFCURVE",
"341 690 CURVE SMOOTH",
"333.667 690 OFFCURVE",
"324.667 686.333 OFFCURVE",
"314 679 CURVE",
"300.667 685.667 OFFCURVE",
"283.333 689 OFFCURVE",
"262 689 CURVE SMOOTH",
"172.667 689 OFFCURVE",
"123 600.333 OFFCURVE",
"113 423 CURVE SMOOTH",
"111.667 401.667 OFFCURVE",
"110.333 385.333 OFFCURVE",
"109 372 CURVE",
"73 372 LINE SMOOTH",
"46.333 372 OFFCURVE",
"33 362.333 OFFCURVE",
"33 343 CURVE SMOOTH",
"33 328.333 OFFCURVE",
"40.667 321 OFFCURVE",
"56 321 CURVE SMOOTH",
"107 321 LINE",
"105.667 307.667 OFFCURVE",
"104.667 279.5 OFFCURVE",
"104 236.5 CURVE SMOOTH",
"103.333 193.5 OFFCURVE",
"103 135 OFFCURVE",
"103 61 CURVE SMOOTH",
"103 7 OFFCURVE",
"113 -20 OFFCURVE",
"133 -20 CURVE SMOOTH",
"155.667 -20 OFFCURVE",
"167 -12 OFFCURVE",
"167 4 CURVE SMOOTH",
"167 6 OFFCURVE",
"166.333 9 OFFCURVE",
"165 13 CURVE",
"158.333 46.333 OFFCURVE",
"154 78 OFFCURVE",
"154 110 CURVE SMOOTH",
"154 182 LINE SMOOTH",
"154 250 OFFCURVE",
"155 297 OFFCURVE",
"157 323 CURVE",
"160.333 325.667 OFFCURVE",
"171 327 OFFCURVE",
"189 327 CURVE SMOOTH",
"211 327 OFFCURVE",
"227.667 330 OFFCURVE",
"239 336 CURVE",
"240.333 345.333 OFFCURVE",
"241 350.667 OFFCURVE",
"241 356 CURVE SMOOTH",
"241 370.667 OFFCURVE",
"228.667 378 OFFCURVE",
"204 378 CURVE SMOOTH",
"177 378 LINE",
"169.667 378.667 OFFCURVE",
"163.667 378.667 OFFCURVE",
"159 378 CURVE",
"159 425.333 OFFCURVE",
"165 475.667 OFFCURVE",
"177 529 CURVE SMOOTH",
"195 603.667 OFFCURVE",
"220.333 641 OFFCURVE",
"253 641 CURVE SMOOTH",
"287 641 OFFCURVE",
"305.667 627 OFFCURVE",
"309 599 CURVE",
"310.333 597.667 OFFCURVE",
"312.333 597 OFFCURVE",
"315 597 CURVE",
"312 165 LINE SMOOTH",
"311.333 44.333 OFFCURVE",
"325.667 -16 OFFCURVE",
"355 -16 CURVE SMOOTH",
"373.667 -16 OFFCURVE",
"383 -7.333 OFFCURVE",
"383 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
27 43 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
63 932 4 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
37 933 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
72 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
46 931 40 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 931 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 408;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = onehalf;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = oneinferior;
transform = "{1, 0, 0, 1, 9, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 9, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
alignment = -1;
name = twoinferior;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 513;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = oneinferior;
transform = "{1, 0, 0, 1, 14, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 14, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
alignment = -1;
name = fourinferior;
transform = "{1, 0, 0, 1, 159, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 548;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = threeinferior;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 280, 0}";
},
{
alignment = -1;
name = fourinferior;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 698;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = oneeighth;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = oneinferior;
transform = "{1, 0, 0, 1, 26, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 26, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
alignment = -1;
name = eightinferior;
transform = "{1, 0, 0, 1, 179, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 514;
}
);
note = oneeighth;
unicode = 215B;
},
{
glyphname = threeeighths;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = threeinferior;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 283, 0}";
},
{
alignment = -1;
name = eightinferior;
transform = "{1, 0, 0, 1, 333, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 668;
}
);
note = threeeighths;
unicode = 215C;
},
{
glyphname = fiveeighths;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = fiveinferior;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 254, 0}";
},
{
alignment = -1;
name = eightinferior;
transform = "{1, 0, 0, 1, 296, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 631;
}
);
note = fiveeighths;
unicode = 215D;
},
{
glyphname = seveneighths;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = seveninferior;
transform = "{1, 0, 0, 1, 28, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 28, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 189, 0}";
},
{
alignment = -1;
name = eightinferior;
transform = "{1, 0, 0, 1, 239, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 574;
}
);
note = seveneighths;
unicode = 215E;
},
{
glyphname = onethird;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = oneinferior;
transform = "{1, 0, 0, 1, 16, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 16, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 122, 0}";
},
{
alignment = -1;
name = threeinferior;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 527;
}
);
note = onethird;
unicode = 2153;
},
{
glyphname = twothirds;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = twoinferior;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 275, 0}";
},
{
alignment = -1;
name = threeinferior;
transform = "{1, 0, 0, 1, 302, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 657;
}
);
note = twothirds;
unicode = 2154;
},
{
glyphname = perthousand;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = zeroinferior;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = space;
transform = "{1, 0, 0, 1, 21, 348}";
},
{
alignment = -1;
name = fraction;
transform = "{1, 0, 0, 1, 253, 0}";
},
{
alignment = -1;
name = zeroinferior;
transform = "{1, 0, 0, 1, 274, 0}";
},
{
alignment = -1;
name = zeroinferior;
transform = "{1, 0, 0, 1, 577, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 924;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = multiply;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"427.667 165 OFFCURVE",
"451 171.333 OFFCURVE",
"451 190 CURVE SMOOTH",
"451 194.093 OFFCURVE",
"432.225 209.695 OFFCURVE",
"413.5 226.5 CURVE SMOOTH",
"387.5 249.833 OFFCURVE",
"349 285 OFFCURVE",
"293 341 CURVE",
"350 398 LINE SMOOTH",
"369 417 OFFCURVE",
"441 455.799 OFFCURVE",
"441 474 CURVE SMOOTH",
"441 498 OFFCURVE",
"423.333 516.333 OFFCURVE",
"402 523 CURVE",
"256 377 LINE",
"219.007 413.993 OFFCURVE",
"138.664 516 OFFCURVE",
"119 516 CURVE SMOOTH",
"99 516 OFFCURVE",
"85.667 502 OFFCURVE",
"79 482 CURVE",
"220 341 LINE",
"172.707 293.707 OFFCURVE",
"117.724 237.055 OFFCURVE",
"103 219.5 CURVE SMOOTH",
"91.361 205.623 OFFCURVE",
"84 193.77 OFFCURVE",
"84 188 CURVE SMOOTH",
"84 178.371 OFFCURVE",
"94.443 150 OFFCURVE",
"109 150 CURVE SMOOTH",
"112.786 150 OFFCURVE",
"121.431 161.091 OFFCURVE",
"131 172.5 CURVE SMOOTH",
"145.458 189.739 OFFCURVE",
"203.663 252.663 OFFCURVE",
"256 305 CURVE",
"305.023 255.977 OFFCURVE",
"364.054 199.695 OFFCURVE",
"381.5 184.5 CURVE SMOOTH",
"395.517 172.292 OFFCURVE",
"406.693 165 OFFCURVE",
"413 165 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 520;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = pi;
layers = (
{
components = (
{
name = pi.Greek;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 458;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = Omega;
layers = (
{
components = (
{
name = OmegaGreek;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 572;
}
);
note = Omega;
unicode = "03A9,2126";
},
{
glyphname = dieresisbelowcmb;
layers = (
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, -301, -832}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 0;
}
);
note = dieresisbelowcmb;
unicode = 0324;
},
{
glyphname = softhyphen;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 284;
}
);
note = softhyphen;
unicode = 00AD;
},
{
glyphname = u20B1;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"266.794 461 OFFCURVE",
"405.764 461 OFFCURVE",
"434 461 CURVE SMOOTH",
"474.667 460.333 OFFCURVE",
"517.333 459.333 OFFCURVE",
"562 458 CURVE SMOOTH",
"573.333 457.333 OFFCURVE",
"579 465 OFFCURVE",
"579 481 CURVE SMOOTH",
"579 493 OFFCURVE",
"573.333 499 OFFCURVE",
"562 499 CURVE SMOOTH",
"196 501.667 OFFCURVE",
"13 496.667 OFFCURVE",
"13 484 CURVE SMOOTH",
"13 464.667 OFFCURVE",
"17.667 455.333 OFFCURVE",
"27 456 CURVE",
"53.667 456.667 OFFCURVE",
"80.333 457.333 OFFCURVE",
"107 458 CURVE SMOOTH",
"129.667 458.667 OFFCURVE",
"154 459.167 OFFCURVE",
"180 459.5 CURVE SMOOTH",
"206 459.833 OFFCURVE",
"229.667 460.333 OFFCURVE",
"251 461 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"266.794 339 OFFCURVE",
"405.764 339 OFFCURVE",
"434 339 CURVE SMOOTH",
"474.667 338.333 OFFCURVE",
"517.333 337.333 OFFCURVE",
"562 336 CURVE SMOOTH",
"573.333 335.333 OFFCURVE",
"579 343 OFFCURVE",
"579 359 CURVE SMOOTH",
"579 371 OFFCURVE",
"573.333 377 OFFCURVE",
"562 377 CURVE SMOOTH",
"196 379.667 OFFCURVE",
"13 374.667 OFFCURVE",
"13 362 CURVE SMOOTH",
"13 342.667 OFFCURVE",
"17.667 333.333 OFFCURVE",
"27 334 CURVE",
"53.667 334.667 OFFCURVE",
"80.333 335.333 OFFCURVE",
"107 336 CURVE SMOOTH",
"129.667 336.667 OFFCURVE",
"154 337.167 OFFCURVE",
"180 337.5 CURVE SMOOTH",
"206 337.833 OFFCURVE",
"229.667 338.333 OFFCURVE",
"251 339 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"521.333 400.667 OFFCURVE",
"523 423.667 OFFCURVE",
"523 447 CURVE SMOOTH",
"523 513.667 OFFCURVE",
"509.667 568.667 OFFCURVE",
"483 612 CURVE SMOOTH",
"450.333 664.667 OFFCURVE",
"402 691 OFFCURVE",
"338 691 CURVE SMOOTH",
"278.667 691 OFFCURVE",
"231 666 OFFCURVE",
"195 616 CURVE",
"179.667 589.333 OFFCURVE",
"164.333 562.667 OFFCURVE",
"149 536 CURVE",
"148 562 LINE",
"148 570.667 OFFCURVE",
"149.833 583 OFFCURVE",
"153.5 599 CURVE SMOOTH",
"157.167 615 OFFCURVE",
"159 627.333 OFFCURVE",
"159 636 CURVE SMOOTH",
"159 658.667 OFFCURVE",
"141.667 683 OFFCURVE",
"119 683 CURVE SMOOTH",
"101.667 683 OFFCURVE",
"93 676.667 OFFCURVE",
"93 664 CURVE SMOOTH",
"93 659.333 OFFCURVE",
"94.167 652 OFFCURVE",
"96.5 642 CURVE SMOOTH",
"98.833 632 OFFCURVE",
"100 624.667 OFFCURVE",
"100 620 CURVE SMOOTH",
"100 525 LINE SMOOTH",
"100 471.036 OFFCURVE",
"89.643 394.469 OFFCURVE",
"90.5 340.5 CURVE SMOOTH",
"91.34 287.583 OFFCURVE",
"82 211.911 OFFCURVE",
"82 159 CURVE SMOOTH",
"82 124.333 OFFCURVE",
"83 90 OFFCURVE",
"85 56 CURVE SMOOTH",
"86.333 34 OFFCURVE",
"89.667 18 OFFCURVE",
"95 8 CURVE",
"103 -5.333 OFFCURVE",
"117 -12 OFFCURVE",
"137 -12 CURVE SMOOTH",
"154.333 -12 OFFCURVE",
"168 5 OFFCURVE",
"168 21 CURVE SMOOTH",
"168 23.667 OFFCURVE",
"164.667 30.833 OFFCURVE",
"158 42.5 CURVE SMOOTH",
"151.333 54.167 OFFCURVE",
"147.667 61 OFFCURVE",
"147 63 CURVE",
"139.667 81.667 OFFCURVE",
"136.333 110.667 OFFCURVE",
"137 150 CURVE SMOOTH",
"137 191 LINE",
"144 196 LINE",
"187.333 158.667 OFFCURVE",
"240.333 138 OFFCURVE",
"303 134 CURVE SMOOTH",
"419 127.333 OFFCURVE",
"490.667 208.667 OFFCURVE",
"518 378 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"474 416.333 OFFCURVE",
"470.333 388 OFFCURVE",
"463 350 CURVE SMOOTH",
"451.667 296 OFFCURVE",
"436.333 256.667 OFFCURVE",
"417 232 CURVE SMOOTH",
"391.667 198.667 OFFCURVE",
"353.667 182 OFFCURVE",
"303 182 CURVE SMOOTH",
"249 182 OFFCURVE",
"209 202 OFFCURVE",
"183 242 CURVE SMOOTH",
"177.667 250.667 OFFCURVE",
"175 256.667 OFFCURVE",
"175 260 CURVE SMOOTH",
"175 262 OFFCURVE",
"175.667 262.667 OFFCURVE",
"177 262 CURVE SMOOTH",
"178.333 261.333 OFFCURVE",
"179.333 262 OFFCURVE",
"180 264 CURVE",
"177.333 266 OFFCURVE",
"174.167 270.333 OFFCURVE",
"170.5 277 CURVE SMOOTH",
"166.833 283.667 OFFCURVE",
"162.667 287 OFFCURVE",
"158 287 CURVE SMOOTH",
"154.667 287 OFFCURVE",
"149.667 285.333 OFFCURVE",
"143 282 CURVE",
"143 335 LINE SMOOTH",
"143 399.667 OFFCURVE",
"160.333 465.333 OFFCURVE",
"195 532 CURVE SMOOTH",
"235.667 610 OFFCURVE",
"285.333 649 OFFCURVE",
"344 649 CURVE SMOOTH",
"389.333 649 OFFCURVE",
"423.667 623.333 OFFCURVE",
"447 572 CURVE SMOOTH",
"465 532.667 OFFCURVE",
"474 487 OFFCURVE",
"474 435 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
96 27 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 932 88 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
90 88 106 88 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 21 values pushed */
105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 11 values pushed */
9 88 25 88 41 88 57 88 73 88 5 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 1 value pushed */
88 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
69 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
51 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 2 values pushed */
74 934 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
96 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
77 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
86 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
116 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
54 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
82 928 92 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
109 931 42 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 928 3 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 928 23 24 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 596;
}
);
note = u20B1;
unicode = 20B1;
},
{
glyphname = u1D43;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = a;
transform = "{0.70001, 0, 0, 0.59998, 0, 301}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 268;
}
);
note = u1D43;
unicode = 1D43;
},
{
glyphname = u1D48;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = d;
transform = "{0.70001, 0, 0, 0.59998, 0, 299}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 261;
}
);
note = u1D48;
unicode = 1D48;
},
{
glyphname = u1D49;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = e;
transform = "{0.70001, 0, 0, 0.59998, 0, 299}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 241;
}
);
note = u1D49;
unicode = 1D49;
},
{
glyphname = u02B0;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = h;
transform = "{0.70001, 0, 0, 0.59998, 7, 300}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 229;
}
);
note = u02B0;
unicode = 02B0;
},
{
glyphname = u207F;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = n;
transform = "{0.70001, 0, 0, 0.59998, 0, 296}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 267;
}
);
note = u207F;
unicode = 207F;
},
{
glyphname = u1D52;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = o;
transform = "{0.70001, 0, 0, 0.59998, 0, 307}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 262;
}
);
note = u1D52;
unicode = 1D52;
},
{
glyphname = u02B3;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = r;
transform = "{0.70001, 0, 0, 0.59998, 0, 292}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 190;
}
);
note = u02B3;
unicode = 02B3;
},
{
glyphname = u02E2;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = s;
transform = "{0.70001, 0, 0, 0.59998, -3, 302}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 250;
}
);
note = u02E2;
unicode = 02E2;
},
{
glyphname = u1D57;
lastChange = "2019-03-01 18:38:32 +0000";
layers = (
{
components = (
{
alignment = -1;
name = t;
transform = "{0.70001, 0, 0, 0.59998, 0, 297}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 193;
}
);
note = u1D57;
unicode = 1D57;
},
{
glyphname = u20BA;
lastChange = "2019-03-01 18:48:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"65.667 442 OFFCURVE",
"71 448.667 OFFCURVE",
"79 456 CURVE SMOOTH",
"86.333 462.667 OFFCURVE",
"97.167 470.667 OFFCURVE",
"111.5 480 CURVE SMOOTH",
"125.833 489.333 OFFCURVE",
"146.333 500.667 OFFCURVE",
"173 514 CURVE SMOOTH",
"215.667 535.333 OFFCURVE",
"268 555.333 OFFCURVE",
"308 570 CURVE SMOOTH",
"331.333 578.667 OFFCURVE",
"354.667 586.667 OFFCURVE",
"378 594 CURVE",
"395.333 600.667 OFFCURVE",
"399 606.333 OFFCURVE",
"399 629 CURVE SMOOTH",
"399 651 OFFCURVE",
"388.333 655.667 OFFCURVE",
"367 643 CURVE",
"345 631.667 OFFCURVE",
"323 620.333 OFFCURVE",
"301 609 CURVE SMOOTH",
"262.333 589 OFFCURVE",
"215.667 564.667 OFFCURVE",
"177 546 CURVE SMOOTH",
"152.333 534 OFFCURVE",
"132 524 OFFCURVE",
"116 516 CURVE SMOOTH",
"100 508 OFFCURVE",
"87.333 501.667 OFFCURVE",
"78 497 CURVE SMOOTH",
"66.667 491.667 OFFCURVE",
"58 487.667 OFFCURVE",
"52 485 CURVE",
"34.667 478.333 OFFCURVE",
"13 472.667 OFFCURVE",
"13 454 CURVE SMOOTH",
"13 427.333 OFFCURVE",
"43 424 OFFCURVE",
"63 436 CURVE"
);
},
{
closed = 1;
nodes = (
"71.333 295 OFFCURVE",
"70.667 298.667 OFFCURVE",
"74 304 CURVE",
"77.333 308.667 OFFCURVE",
"84.333 314.833 OFFCURVE",
"95 322.5 CURVE SMOOTH",
"105.667 330.167 OFFCURVE",
"124.333 340.667 OFFCURVE",
"151 354 CURVE SMOOTH",
"193.667 375.333 OFFCURVE",
"251.333 400.333 OFFCURVE",
"298 419 CURVE SMOOTH",
"324.667 430.333 OFFCURVE",
"351.667 441.333 OFFCURVE",
"379 452 CURVE SMOOTH",
"396.333 458.667 OFFCURVE",
"416.667 469.333 OFFCURVE",
"410 484 CURVE SMOOTH",
"404.667 495.333 OFFCURVE",
"397.667 501 OFFCURVE",
"389 501 CURVE SMOOTH",
"380.333 501 OFFCURVE",
"371 498 OFFCURVE",
"361 492 CURVE",
"331 478 OFFCURVE",
"302 464.333 OFFCURVE",
"274 451 CURVE SMOOTH",
"250 439.667 OFFCURVE",
"224.833 427.5 OFFCURVE",
"198.5 414.5 CURVE SMOOTH",
"172.167 401.5 OFFCURVE",
"149.333 390.333 OFFCURVE",
"130 381 CURVE",
"124.667 377.667 OFFCURVE",
"117.333 373.5 OFFCURVE",
"108 368.5 CURVE SMOOTH",
"98.667 363.5 OFFCURVE",
"89.333 358.333 OFFCURVE",
"80 353 CURVE SMOOTH",
"69.333 347 OFFCURVE",
"58 340.667 OFFCURVE",
"46 334 CURVE",
"28.667 327.333 OFFCURVE",
"17.333 309.667 OFFCURVE",
"24 295 CURVE",
"36 272.333 OFFCURVE",
"56 281 OFFCURVE",
"76 293 CURVE"
);
},
{
closed = 1;
nodes = (
"233.845 -15 OFFCURVE",
"367.363 134.26 OFFCURVE",
"390 205 CURVE",
"396.195 229.78 OFFCURVE",
"421 261.451 OFFCURVE",
"421 292 CURVE",
"422.333 320 OFFCURVE",
"413.667 327.667 OFFCURVE",
"399 329 CURVE",
"393 329 OFFCURVE",
"388 328 OFFCURVE",
"384 326 CURVE SMOOTH",
"378 323 LINE",
"378 227.013 OFFCURVE",
"302.876 111.332 OFFCURVE",
"212 62 CURVE SMOOTH",
"189.835 49.334 OFFCURVE",
"166.762 48.282 OFFCURVE",
"162 84 CURVE SMOOTH",
"159.333 101.333 OFFCURVE",
"157.333 121.167 OFFCURVE",
"156 168.5 CURVE SMOOTH",
"154.667 215.833 OFFCURVE",
"154 288.333 OFFCURVE",
"154 411 CURVE SMOOTH",
"154 487 OFFCURVE",
"157.667 545.667 OFFCURVE",
"167 587 CURVE",
"167 587 OFFCURVE",
"169.667 595.667 OFFCURVE",
"175 613 CURVE SMOOTH",
"178.333 624.333 OFFCURVE",
"180 633 OFFCURVE",
"180 639 CURVE SMOOTH",
"180 666.327 OFFCURVE",
"191.027 690 OFFCURVE",
"162 690 CURVE SMOOTH",
"150.667 690 OFFCURVE",
"134.333 682.667 OFFCURVE",
"113 668 CURVE",
"113 658.1 OFFCURVE",
"119 607.79 OFFCURVE",
"119 599 CURVE SMOOTH",
"119 548.333 OFFCURVE",
"118.333 474 OFFCURVE",
"117 374 CURVE SMOOTH",
"116.333 324 OFFCURVE",
"116 280.333 OFFCURVE",
"116 243 CURVE SMOOTH",
"116 205.667 OFFCURVE",
"116 174.333 OFFCURVE",
"116 149 CURVE SMOOTH",
"116 67.341 OFFCURVE",
"103.935 -15 OFFCURVE",
"150 -15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
93 3 23 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
114 932 108 24 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 21 values pushed */
102 93 118 93 134 93 150 93 166 93 182 93 198 93 214 93 230 93 246 93 10 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
6 93 22 93 38 93 3 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 5 values pushed */
53 93 69 93 2 
DELTAP2[ ]\011/* DeltaExceptionP2 */
PUSHW[ ]\011/* 3 values pushed */
31 3 93 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
93 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
71 932 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
74 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
71 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
79 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
79 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
114 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
125 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
927 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
63 935 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
31 63 81 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 449;
}
);
note = u20BA;
unicode = 20BA;
},
{
glyphname = "ha-ethiopic";
lastChange = "2019-03-01 18:44:19 +0000";
layers = (
{
components = (
{
name = u;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2019-03-01 19:06:29 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = _part.hu;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 400;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2019-03-01 19:06:39 +0000";
layers = (
{
components = (
{
name = _part.hu;
transform = "{1, 0, 0, 1, 0, -430}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"249 -3 LINE",
"234 -179 LINE",
"234 -189 LINE SMOOTH",
"234 -224 OFFCURVE",
"237 -248 OFFCURVE",
"244 -261 CURVE",
"249 -264 OFFCURVE",
"257 -265 OFFCURVE",
"266 -265 CURVE SMOOTH",
"273 -265 OFFCURVE",
"278 -265 OFFCURVE",
"281 -264 CURVE",
"288 -259 OFFCURVE",
"292 -255 OFFCURVE",
"295 -252 CURVE",
"284 -209 OFFCURVE",
"279 -184 OFFCURVE",
"279 -176 CURVE SMOOTH",
"279 -170 OFFCURVE",
"280 -162 OFFCURVE",
"282 -151 CURVE",
"283 -141 OFFCURVE",
"284 -134 OFFCURVE",
"284 -130 CURVE",
"288 -68 OFFCURVE",
"291 51 OFFCURVE",
"295 107 CURVE SMOOTH",
"297 140 OFFCURVE",
"298 163 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 205 OFFCURVE",
"300 241 OFFCURVE",
"305 282 CURVE SMOOTH",
"309 323 OFFCURVE",
"311 353 OFFCURVE",
"311 374 CURVE SMOOTH",
"311 400 OFFCURVE",
"296 412 OFFCURVE",
"266 409 CURVE SMOOTH",
"257 408 OFFCURVE",
"247 404 OFFCURVE",
"238 395 CURVE",
"237 391 OFFCURVE",
"237 387 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"239 370 OFFCURVE",
"243 361 CURVE",
"246 351 OFFCURVE",
"248 343 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 166 OFFCURVE",
"241 129 OFFCURVE",
"228 95 CURVE SMOOTH",
"209 50 OFFCURVE",
"183 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"128 27 OFFCURVE",
"111 41 OFFCURVE",
"98 70 CURVE SMOOTH",
"87 94 OFFCURVE",
"81 118 OFFCURVE",
"82 142 CURVE",
"82 160 OFFCURVE",
"83 202 OFFCURVE",
"85 267 CURVE SMOOTH",
"87 318 OFFCURVE",
"88 360 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413 OFFCURVE",
"79 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"33 424 OFFCURVE",
"22 414 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 114 OFFCURVE",
"31 72 OFFCURVE",
"40 50 CURVE SMOOTH",
"47 34 OFFCURVE",
"60 18 OFFCURVE",
"81 2 CURVE SMOOTH",
"104 -16 OFFCURVE",
"124 -24 OFFCURVE",
"141 -21 CURVE SMOOTH",
"188 -14 OFFCURVE",
"221 4 OFFCURVE",
"240 33 CURVE"
);
}
);
width = 395;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2019-03-01 19:00:02 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"249 -3 LINE",
"234 -179 LINE",
"234 -189 LINE SMOOTH",
"234 -224 OFFCURVE",
"237 -248 OFFCURVE",
"244 -261 CURVE",
"249 -264 OFFCURVE",
"257 -265 OFFCURVE",
"266 -265 CURVE SMOOTH",
"273 -265 OFFCURVE",
"278 -265 OFFCURVE",
"281 -264 CURVE",
"288 -259 OFFCURVE",
"292 -255 OFFCURVE",
"295 -252 CURVE",
"284 -209 OFFCURVE",
"279 -184 OFFCURVE",
"279 -176 CURVE SMOOTH",
"279 -170 OFFCURVE",
"280 -162 OFFCURVE",
"282 -151 CURVE",
"283 -141 OFFCURVE",
"284 -134 OFFCURVE",
"284 -130 CURVE",
"288 -68 OFFCURVE",
"291 51 OFFCURVE",
"295 107 CURVE SMOOTH",
"297 140 OFFCURVE",
"298 163 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 205 OFFCURVE",
"300 241 OFFCURVE",
"305 282 CURVE SMOOTH",
"309 323 OFFCURVE",
"311 353 OFFCURVE",
"311 374 CURVE SMOOTH",
"311 400 OFFCURVE",
"296 412 OFFCURVE",
"266 409 CURVE SMOOTH",
"257 408 OFFCURVE",
"247 404 OFFCURVE",
"238 395 CURVE",
"237 391 OFFCURVE",
"237 387 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"239 370 OFFCURVE",
"243 361 CURVE",
"246 351 OFFCURVE",
"248 343 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 166 OFFCURVE",
"241 129 OFFCURVE",
"228 95 CURVE SMOOTH",
"209 50 OFFCURVE",
"183 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"128 27 OFFCURVE",
"111 41 OFFCURVE",
"98 70 CURVE SMOOTH",
"87 94 OFFCURVE",
"81 118 OFFCURVE",
"82 142 CURVE",
"82 160 OFFCURVE",
"83 202 OFFCURVE",
"85 267 CURVE SMOOTH",
"87 318 OFFCURVE",
"88 360 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413 OFFCURVE",
"79 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"33 424 OFFCURVE",
"22 414 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 114 OFFCURVE",
"31 72 OFFCURVE",
"40 50 CURVE SMOOTH",
"47 34 OFFCURVE",
"60 18 OFFCURVE",
"81 2 CURVE SMOOTH",
"104 -16 OFFCURVE",
"124 -24 OFFCURVE",
"141 -21 CURVE SMOOTH",
"188 -14 OFFCURVE",
"221 4 OFFCURVE",
"240 33 CURVE"
);
}
);
width = 331;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2019-03-01 19:06:46 +0000";
layers = (
{
components = (
{
name = _part.haa;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"249 -3 LINE",
"234 -179 LINE",
"234 -189 LINE SMOOTH",
"234 -224 OFFCURVE",
"237 -248 OFFCURVE",
"244 -261 CURVE",
"249 -264 OFFCURVE",
"257 -265 OFFCURVE",
"266 -265 CURVE SMOOTH",
"273 -265 OFFCURVE",
"278 -265 OFFCURVE",
"281 -264 CURVE",
"288 -259 OFFCURVE",
"292 -255 OFFCURVE",
"295 -252 CURVE",
"284 -209 OFFCURVE",
"279 -184 OFFCURVE",
"279 -176 CURVE SMOOTH",
"279 -170 OFFCURVE",
"280 -162 OFFCURVE",
"282 -151 CURVE",
"283 -141 OFFCURVE",
"284 -134 OFFCURVE",
"284 -130 CURVE",
"288 -68 OFFCURVE",
"291 51 OFFCURVE",
"295 107 CURVE SMOOTH",
"297 140 OFFCURVE",
"298 163 OFFCURVE",
"298 175 CURVE SMOOTH",
"298 205 OFFCURVE",
"300 241 OFFCURVE",
"305 282 CURVE SMOOTH",
"309 323 OFFCURVE",
"311 353 OFFCURVE",
"311 374 CURVE SMOOTH",
"311 400 OFFCURVE",
"296 412 OFFCURVE",
"266 409 CURVE SMOOTH",
"257 408 OFFCURVE",
"247 404 OFFCURVE",
"238 395 CURVE",
"237 391 OFFCURVE",
"237 387 OFFCURVE",
"237 384 CURVE SMOOTH",
"237 378 OFFCURVE",
"239 370 OFFCURVE",
"243 361 CURVE",
"246 351 OFFCURVE",
"248 343 OFFCURVE",
"248 338 CURVE SMOOTH",
"248 207 LINE SMOOTH",
"248 166 OFFCURVE",
"241 129 OFFCURVE",
"228 95 CURVE SMOOTH",
"209 50 OFFCURVE",
"183 27 OFFCURVE",
"149 27 CURVE SMOOTH",
"128 27 OFFCURVE",
"111 41 OFFCURVE",
"98 70 CURVE SMOOTH",
"87 94 OFFCURVE",
"81 118 OFFCURVE",
"82 142 CURVE",
"82 160 OFFCURVE",
"83 202 OFFCURVE",
"85 267 CURVE SMOOTH",
"87 318 OFFCURVE",
"88 360 OFFCURVE",
"88 392 CURVE SMOOTH",
"88 413 OFFCURVE",
"79 424 OFFCURVE",
"60 424 CURVE SMOOTH",
"33 424 OFFCURVE",
"22 414 OFFCURVE",
"26 394 CURVE",
"26 177 LINE SMOOTH",
"26 114 OFFCURVE",
"31 72 OFFCURVE",
"40 50 CURVE SMOOTH",
"47 34 OFFCURVE",
"60 18 OFFCURVE",
"81 2 CURVE SMOOTH",
"104 -16 OFFCURVE",
"124 -24 OFFCURVE",
"141 -21 CURVE SMOOTH",
"188 -14 OFFCURVE",
"221 4 OFFCURVE",
"240 33 CURVE"
);
}
);
width = 370;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2019-03-03 23:12:14 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"68 303 LINE",
"72 270 OFFCURVE",
"73 200 OFFCURVE",
"73 175 CURVE SMOOTH",
"73 163 OFFCURVE",
"72 140 OFFCURVE",
"69 107 CURVE SMOOTH",
"67 73 OFFCURVE",
"66 49 OFFCURVE",
"66 34 CURVE SMOOTH",
"66 5 OFFCURVE",
"69 -13 OFFCURVE",
"76 -19 CURVE",
"80 -22 OFFCURVE",
"86 -23 OFFCURVE",
"93 -23 CURVE SMOOTH",
"108 -23 OFFCURVE",
"118 -17 OFFCURVE",
"123 -4 CURVE",
"126 9 OFFCURVE",
"128 21 OFFCURVE",
"131 33 CURVE",
"150 4 OFFCURVE",
"183 -14 OFFCURVE",
"230 -21 CURVE SMOOTH",
"247 -24 OFFCURVE",
"267 -16 OFFCURVE",
"290 2 CURVE SMOOTH",
"311 18 OFFCURVE",
"324 34 OFFCURVE",
"331 50 CURVE SMOOTH",
"340 72 OFFCURVE",
"345 114 OFFCURVE",
"345 177 CURVE SMOOTH",
"345 394 LINE",
"349 414 OFFCURVE",
"338 424 OFFCURVE",
"311 424 CURVE SMOOTH",
"292 424 OFFCURVE",
"283 413 OFFCURVE",
"283 392 CURVE SMOOTH",
"283 360 OFFCURVE",
"284 318 OFFCURVE",
"286 267 CURVE SMOOTH",
"288 202 OFFCURVE",
"289 160 OFFCURVE",
"289 142 CURVE SMOOTH",
"290 118 OFFCURVE",
"284 94 OFFCURVE",
"273 70 CURVE SMOOTH",
"260 41 OFFCURVE",
"243 27 OFFCURVE",
"222 27 CURVE SMOOTH",
"188 27 OFFCURVE",
"162 50 OFFCURVE",
"143 95 CURVE SMOOTH",
"130 129 OFFCURVE",
"123 166 OFFCURVE",
"123 207 CURVE SMOOTH",
"123 318 LINE"
);
},
{
closed = 1;
nodes = (
"80 291 LINE",
"80 351 LINE SMOOTH",
"80 356 OFFCURVE",
"82 364 OFFCURVE",
"85 374 CURVE SMOOTH",
"88 383 OFFCURVE",
"91 391 OFFCURVE",
"91 397 CURVE SMOOTH",
"91 400 OFFCURVE",
"91 404 OFFCURVE",
"90 408 CURVE",
"81 417 OFFCURVE",
"71 421 OFFCURVE",
"62 422 CURVE SMOOTH",
"32 425 OFFCURVE",
"17 413 OFFCURVE",
"17 387 CURVE SMOOTH",
"17 366 OFFCURVE",
"16 336 OFFCURVE",
"23 295 CURVE SMOOTH",
"24 289 OFFCURVE",
"24 282 OFFCURVE",
"25 276 CURVE"
);
}
);
width = 371;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2019-03-01 19:07:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 16, 508}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 391;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2019-03-01 19:07:54 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"365 400 OFFCURVE",
"350 412 OFFCURVE",
"320 409 CURVE SMOOTH",
"311 408 OFFCURVE",
"301 404 OFFCURVE",
"292 395 CURVE",
"291 391 OFFCURVE",
"291 387 OFFCURVE",
"291 384 CURVE SMOOTH",
"291 378 OFFCURVE",
"293 370 OFFCURVE",
"297 361 CURVE SMOOTH",
"300 351 OFFCURVE",
"302 343 OFFCURVE",
"302 338 CURVE SMOOTH",
"302 207 LINE SMOOTH",
"302 166 OFFCURVE",
"295 129 OFFCURVE",
"282 95 CURVE SMOOTH",
"263 50 OFFCURVE",
"237 27 OFFCURVE",
"203 27 CURVE SMOOTH",
"182 27 OFFCURVE",
"165 41 OFFCURVE",
"152 70 CURVE SMOOTH",
"141 94 OFFCURVE",
"135 118 OFFCURVE",
"136 142 CURVE SMOOTH",
"136 160 OFFCURVE",
"137 202 OFFCURVE",
"139 267 CURVE SMOOTH",
"141 318 OFFCURVE",
"142 360 OFFCURVE",
"142 392 CURVE SMOOTH",
"142 413 OFFCURVE",
"133 424 OFFCURVE",
"114 424 CURVE SMOOTH",
"87 424 OFFCURVE",
"76 414 OFFCURVE",
"80 394 CURVE",
"80 177 LINE SMOOTH",
"80 114 OFFCURVE",
"85 72 OFFCURVE",
"94 50 CURVE SMOOTH",
"101 34 OFFCURVE",
"114 18 OFFCURVE",
"135 2 CURVE SMOOTH",
"158 -16 OFFCURVE",
"178 -24 OFFCURVE",
"195 -21 CURVE SMOOTH",
"242 -14 OFFCURVE",
"275 4 OFFCURVE",
"294 33 CURVE",
"297 21 OFFCURVE",
"299 9 OFFCURVE",
"302 -4 CURVE",
"307 -17 OFFCURVE",
"317 -23 OFFCURVE",
"332 -23 CURVE SMOOTH",
"339 -23 OFFCURVE",
"345 -22 OFFCURVE",
"349 -19 CURVE",
"356 -13 OFFCURVE",
"359 5 OFFCURVE",
"359 34 CURVE SMOOTH",
"359 49 OFFCURVE",
"358 73 OFFCURVE",
"356 107 CURVE SMOOTH",
"353 140 OFFCURVE",
"352 163 OFFCURVE",
"352 175 CURVE SMOOTH",
"352 205 OFFCURVE",
"354 241 OFFCURVE",
"359 282 CURVE SMOOTH",
"363 323 OFFCURVE",
"365 353 OFFCURVE",
"365 374 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"414 357 OFFCURVE",
"402 383 OFFCURVE",
"378 398 CURVE SMOOTH",
"370 403 OFFCURVE",
"364 406 OFFCURVE",
"359 406 CURVE SMOOTH",
"342 406 OFFCURVE",
"327 394 OFFCURVE",
"316 370 CURVE SMOOTH",
"307 351 OFFCURVE",
"303 332 OFFCURVE",
"303 312 CURVE SMOOTH",
"303 292 OFFCURVE",
"307 276 OFFCURVE",
"315 263 CURVE SMOOTH",
"324 249 OFFCURVE",
"338 241 OFFCURVE",
"357 241 CURVE SMOOTH",
"375 241 OFFCURVE",
"390 250 OFFCURVE",
"401 268 CURVE SMOOTH",
"410 283 OFFCURVE",
"414 301 OFFCURVE",
"414 321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397 305 OFFCURVE",
"395 291 OFFCURVE",
"389 279 CURVE SMOOTH",
"381 263 OFFCURVE",
"371 255 OFFCURVE",
"357 255 CURVE SMOOTH",
"344 255 OFFCURVE",
"335 262 OFFCURVE",
"329 276 CURVE SMOOTH",
"325 286 OFFCURVE",
"322 298 OFFCURVE",
"322 313 CURVE SMOOTH",
"322 329 OFFCURVE",
"325 344 OFFCURVE",
"331 359 CURVE SMOOTH",
"338 377 OFFCURVE",
"350 386 OFFCURVE",
"364 386 CURVE SMOOTH",
"377 386 OFFCURVE",
"384 378 OFFCURVE",
"391 362 CURVE SMOOTH",
"396 350 OFFCURVE",
"397 336 OFFCURVE",
"397 321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120 253 OFFCURVE",
"109 249 OFFCURVE",
"99 249 CURVE SMOOTH",
"86 249 OFFCURVE",
"71 256 OFFCURVE",
"54 269 CURVE SMOOTH",
"38 282 OFFCURVE",
"29 288 OFFCURVE",
"27 288 CURVE SMOOTH",
"17 288 OFFCURVE",
"12 283 OFFCURVE",
"12 273 CURVE SMOOTH",
"12 250 OFFCURVE",
"83 207 OFFCURVE",
"108 207 CURVE SMOOTH",
"116 207 OFFCURVE",
"124 208 OFFCURVE",
"132 210 CURVE",
"132 261 LINE"
);
}
);
width = 439;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2019-03-01 19:08:37 +0000";
layers = (
{
components = (
{
name = h;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2019-03-01 19:08:50 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = _part.hu;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 327;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2019-03-01 19:09:34 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, -1, -198}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 391;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2019-03-01 19:10:18 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"294 200 LINE SMOOTH",
"294 303 OFFCURVE",
"265 366 OFFCURVE",
"207 390 CURVE SMOOTH",
"177 403 OFFCURVE",
"151 409 OFFCURVE",
"130 409 CURVE SMOOTH",
"117 409 OFFCURVE",
"98 398 OFFCURVE",
"73 376 CURVE",
"72 463 OFFCURVE",
"71 508 OFFCURVE",
"71 509 CURVE SMOOTH",
"71 524 OFFCURVE",
"74 547 OFFCURVE",
"81 577 CURVE SMOOTH",
"87 607 OFFCURVE",
"90 630 OFFCURVE",
"90 646 CURVE SMOOTH",
"90 658 OFFCURVE",
"54 682 OFFCURVE",
"41 682 CURVE SMOOTH",
"28 682 OFFCURVE",
"21 676 OFFCURVE",
"21 664 CURVE SMOOTH",
"21 660 OFFCURVE",
"22 656 OFFCURVE",
"23 652 CURVE",
"17 37 LINE SMOOTH",
"17 14 OFFCURVE",
"34 -12 OFFCURVE",
"57 -12 CURVE SMOOTH",
"73 -12 OFFCURVE",
"81 -7 OFFCURVE",
"81 4 CURVE SMOOTH",
"81 15 OFFCURVE",
"79 31 OFFCURVE",
"76 52 CURVE SMOOTH",
"73 73 OFFCURVE",
"71 90 OFFCURVE",
"71 101 CURVE SMOOTH",
"71 229 LINE SMOOTH",
"71 232 OFFCURVE",
"72 236 OFFCURVE",
"74 242 CURVE SMOOTH",
"75 247 OFFCURVE",
"76 251 OFFCURVE",
"76 254 CURVE SMOOTH",
"76 279 OFFCURVE",
"83 304 OFFCURVE",
"97 328 CURVE SMOOTH",
"113 356 OFFCURVE",
"133 370 OFFCURVE",
"157 370 CURVE SMOOTH",
"214 370 OFFCURVE",
"242 285 OFFCURVE",
"242 116 CURVE SMOOTH",
"242 82 OFFCURVE",
"242 -195 OFFCURVE",
"241 -252 CURVE",
"249 -261 OFFCURVE",
"257 -266 OFFCURVE",
"264 -266 CURVE SMOOTH",
"279 -266 OFFCURVE",
"289 -263 OFFCURVE",
"294 -258 CURVE"
);
}
);
width = 327;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2019-03-01 19:10:42 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 20, 240}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 383;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2019-03-01 19:11:11 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -220, 240}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 383;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2019-03-01 19:11:50 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 0, 480}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 373;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2019-03-01 19:12:35 +0000";
layers = (
{
components = (
{
name = "laa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"173 -267 LINE",
"313 -267 LINE",
"313 -232 LINE",
"173 -232 LINE"
);
}
);
width = 327;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2019-03-01 19:16:07 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"484 178 LINE SMOOTH",
"484 291 OFFCURVE",
"464 370 OFFCURVE",
"423 413 CURVE SMOOTH",
"401 437 OFFCURVE",
"381 449 OFFCURVE",
"363 449 CURVE SMOOTH",
"344 449 OFFCURVE",
"329 441 OFFCURVE",
"316 425 CURVE SMOOTH",
"308 414 OFFCURVE",
"299 396 OFFCURVE",
"289 371 CURVE SMOOTH",
"279 346 OFFCURVE",
"271 329 OFFCURVE",
"264 321 CURVE",
"239 396 OFFCURVE",
"209 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"149 433 OFFCURVE",
"129 413 OFFCURVE",
"110 378 CURVE SMOOTH",
"77 318 OFFCURVE",
"13 30 OFFCURVE",
"39 4 CURVE",
"45 -3 OFFCURVE",
"52 -6 OFFCURVE",
"60 -6 CURVE SMOOTH",
"77 -6 OFFCURVE",
"85 4 OFFCURVE",
"85 24 CURVE SMOOTH",
"85 32 OFFCURVE",
"86 99 OFFCURVE",
"89 124 CURVE SMOOTH",
"100 214 OFFCURVE",
"117 296 OFFCURVE",
"152 360 CURVE SMOOTH",
"163 380 OFFCURVE",
"178 388 OFFCURVE",
"185 388 CURVE SMOOTH",
"198 388 OFFCURVE",
"210 367 OFFCURVE",
"219 326 CURVE SMOOTH",
"226 293 OFFCURVE",
"230 266 OFFCURVE",
"230 245 CURVE SMOOTH",
"230 44 LINE SMOOTH",
"230 32 OFFCURVE",
"249 10 OFFCURVE",
"261 10 CURVE SMOOTH",
"272 10 OFFCURVE",
"291 23 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 39 OFFCURVE",
"290 46 OFFCURVE",
"287 56 CURVE SMOOTH",
"284 65 OFFCURVE",
"282 73 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 178 LINE SMOOTH",
"282 213 OFFCURVE",
"289 257 OFFCURVE",
"304 308 CURVE SMOOTH",
"323 372 OFFCURVE",
"345 404 OFFCURVE",
"370 404 CURVE SMOOTH",
"413 404 OFFCURVE",
"434 301 OFFCURVE",
"434 96 CURVE SMOOTH",
"434 83 OFFCURVE",
"434 65 OFFCURVE",
"433 42 CURVE SMOOTH",
"433 17 OFFCURVE",
"433 -1 OFFCURVE",
"432 -12 CURVE",
"441 -17 OFFCURVE",
"447 -19 OFFCURVE",
"452 -19 CURVE SMOOTH",
"459 -19 OFFCURVE",
"470 -15 OFFCURVE",
"484 -6 CURVE"
);
},
{
closed = 1;
nodes = (
"181 698 OFFCURVE",
"186 689 OFFCURVE",
"192 676 CURVE",
"219 580 OFFCURVE",
"235 475 OFFCURVE",
"242 360 CURVE",
"242 356 OFFCURVE",
"243 349 OFFCURVE",
"244 339 CURVE SMOOTH",
"245 328 OFFCURVE",
"247 320 OFFCURVE",
"247 314 CURVE SMOOTH",
"247 306 OFFCURVE",
"242 281 OFFCURVE",
"231 238 CURVE",
"234 235 OFFCURVE",
"238 231 OFFCURVE",
"245 226 CURVE",
"248 225 OFFCURVE",
"253 225 OFFCURVE",
"260 225 CURVE SMOOTH",
"269 225 OFFCURVE",
"277 226 OFFCURVE",
"282 229 CURVE",
"289 242 OFFCURVE",
"292 266 OFFCURVE",
"292 301 CURVE SMOOTH",
"292 308 OFFCURVE",
"292 311 OFFCURVE",
"292 311 CURVE",
"263 659 LINE",
"263 664 OFFCURVE",
"275 703 OFFCURVE",
"276 706 CURVE",
"261 719 OFFCURVE",
"244 726 OFFCURVE",
"225 726 CURVE SMOOTH",
"208 726 OFFCURVE",
"192 718 OFFCURVE",
"177 703 CURVE"
);
}
);
width = 509;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2019-03-01 19:16:35 +0000";
layers = (
{
components = (
{
name = "hha-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 581;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2019-03-01 20:03:23 +0000";
layers = (
{
components = (
{
name = "hha-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 181, -183}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 579;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2019-03-01 20:03:50 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"484 178 LINE SMOOTH",
"484 291 OFFCURVE",
"464 370 OFFCURVE",
"423 413 CURVE SMOOTH",
"401 437 OFFCURVE",
"381 449 OFFCURVE",
"363 449 CURVE SMOOTH",
"344 449 OFFCURVE",
"329 441 OFFCURVE",
"316 425 CURVE SMOOTH",
"308 414 OFFCURVE",
"299 396 OFFCURVE",
"289 371 CURVE SMOOTH",
"279 346 OFFCURVE",
"271 329 OFFCURVE",
"264 321 CURVE",
"239 396 OFFCURVE",
"209 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"149 433 OFFCURVE",
"129 413 OFFCURVE",
"110 378 CURVE SMOOTH",
"77 318 OFFCURVE",
"13 30 OFFCURVE",
"39 4 CURVE",
"45 -3 OFFCURVE",
"52 -6 OFFCURVE",
"60 -6 CURVE SMOOTH",
"77 -6 OFFCURVE",
"85 4 OFFCURVE",
"85 24 CURVE SMOOTH",
"85 32 OFFCURVE",
"86 99 OFFCURVE",
"89 124 CURVE SMOOTH",
"100 214 OFFCURVE",
"117 296 OFFCURVE",
"152 360 CURVE SMOOTH",
"163 380 OFFCURVE",
"178 388 OFFCURVE",
"185 388 CURVE SMOOTH",
"198 388 OFFCURVE",
"210 367 OFFCURVE",
"219 326 CURVE SMOOTH",
"226 293 OFFCURVE",
"230 266 OFFCURVE",
"230 245 CURVE SMOOTH",
"230 44 LINE SMOOTH",
"230 32 OFFCURVE",
"249 10 OFFCURVE",
"261 10 CURVE SMOOTH",
"272 10 OFFCURVE",
"291 23 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 39 OFFCURVE",
"290 46 OFFCURVE",
"287 56 CURVE SMOOTH",
"284 65 OFFCURVE",
"282 73 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 178 LINE SMOOTH",
"282 213 OFFCURVE",
"289 257 OFFCURVE",
"304 308 CURVE SMOOTH",
"323 372 OFFCURVE",
"345 404 OFFCURVE",
"370 404 CURVE SMOOTH",
"413 404 OFFCURVE",
"433 319 OFFCURVE",
"433 114 CURVE SMOOTH",
"433 101 OFFCURVE",
"434 -185 OFFCURVE",
"433 -208 CURVE SMOOTH",
"432 -233 OFFCURVE",
"433 -251 OFFCURVE",
"432 -262 CURVE",
"441 -267 OFFCURVE",
"447 -269 OFFCURVE",
"452 -269 CURVE SMOOTH",
"459 -269 OFFCURVE",
"470 -265 OFFCURVE",
"484 -256 CURVE"
);
},
{
closed = 1;
nodes = (
"181 698 OFFCURVE",
"186 689 OFFCURVE",
"192 676 CURVE",
"219 580 OFFCURVE",
"235 475 OFFCURVE",
"242 360 CURVE",
"242 356 OFFCURVE",
"243 349 OFFCURVE",
"244 339 CURVE SMOOTH",
"245 328 OFFCURVE",
"247 320 OFFCURVE",
"247 314 CURVE SMOOTH",
"247 306 OFFCURVE",
"242 281 OFFCURVE",
"231 238 CURVE",
"234 235 OFFCURVE",
"238 231 OFFCURVE",
"245 226 CURVE",
"248 225 OFFCURVE",
"253 225 OFFCURVE",
"260 225 CURVE SMOOTH",
"269 225 OFFCURVE",
"277 226 OFFCURVE",
"282 229 CURVE",
"289 242 OFFCURVE",
"292 266 OFFCURVE",
"292 301 CURVE SMOOTH",
"292 308 OFFCURVE",
"292 311 OFFCURVE",
"292 311 CURVE",
"263 659 LINE",
"263 664 OFFCURVE",
"275 703 OFFCURVE",
"276 706 CURVE",
"261 719 OFFCURVE",
"244 726 OFFCURVE",
"225 726 CURVE SMOOTH",
"208 726 OFFCURVE",
"192 718 OFFCURVE",
"177 703 CURVE"
);
}
);
width = 509;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2019-03-01 20:04:24 +0000";
layers = (
{
components = (
{
name = "hha-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 195, 250}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 578;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2019-03-01 20:04:58 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"484 178 LINE SMOOTH",
"484 291 OFFCURVE",
"464 370 OFFCURVE",
"423 413 CURVE SMOOTH",
"401 437 OFFCURVE",
"381 449 OFFCURVE",
"363 449 CURVE SMOOTH",
"344 449 OFFCURVE",
"329 441 OFFCURVE",
"316 425 CURVE SMOOTH",
"308 414 OFFCURVE",
"299 396 OFFCURVE",
"289 371 CURVE SMOOTH",
"279 346 OFFCURVE",
"271 329 OFFCURVE",
"264 321 CURVE",
"239 396 OFFCURVE",
"209 433 OFFCURVE",
"174 433 CURVE SMOOTH",
"149 433 OFFCURVE",
"129 413 OFFCURVE",
"110 378 CURVE SMOOTH",
"77 318 OFFCURVE",
"13 30 OFFCURVE",
"39 4 CURVE",
"45 -3 OFFCURVE",
"52 -6 OFFCURVE",
"60 -6 CURVE SMOOTH",
"77 -6 OFFCURVE",
"85 4 OFFCURVE",
"85 24 CURVE SMOOTH",
"85 32 OFFCURVE",
"86 99 OFFCURVE",
"89 124 CURVE SMOOTH",
"100 214 OFFCURVE",
"117 296 OFFCURVE",
"152 360 CURVE SMOOTH",
"163 380 OFFCURVE",
"178 388 OFFCURVE",
"185 388 CURVE SMOOTH",
"198 388 OFFCURVE",
"210 367 OFFCURVE",
"219 326 CURVE SMOOTH",
"226 293 OFFCURVE",
"230 266 OFFCURVE",
"230 245 CURVE SMOOTH",
"230 44 LINE SMOOTH",
"230 32 OFFCURVE",
"249 10 OFFCURVE",
"261 10 CURVE SMOOTH",
"272 10 OFFCURVE",
"291 23 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 39 OFFCURVE",
"290 46 OFFCURVE",
"287 56 CURVE SMOOTH",
"284 65 OFFCURVE",
"282 73 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 178 LINE SMOOTH",
"282 213 OFFCURVE",
"289 257 OFFCURVE",
"304 308 CURVE SMOOTH",
"323 372 OFFCURVE",
"345 404 OFFCURVE",
"370 404 CURVE SMOOTH",
"413 404 OFFCURVE",
"434 301 OFFCURVE",
"434 96 CURVE SMOOTH",
"434 83 OFFCURVE",
"434 65 OFFCURVE",
"433 42 CURVE SMOOTH",
"433 17 OFFCURVE",
"433 -1 OFFCURVE",
"432 -12 CURVE",
"441 -17 OFFCURVE",
"447 -19 OFFCURVE",
"452 -19 CURVE SMOOTH",
"459 -19 OFFCURVE",
"470 -15 OFFCURVE",
"484 -6 CURVE"
);
},
{
closed = 1;
nodes = (
"219 561 LINE",
"230 497 OFFCURVE",
"238 431 OFFCURVE",
"242 360 CURVE",
"242 356 OFFCURVE",
"243 349 OFFCURVE",
"244 339 CURVE SMOOTH",
"245 328 OFFCURVE",
"247 320 OFFCURVE",
"247 314 CURVE SMOOTH",
"247 306 OFFCURVE",
"242 281 OFFCURVE",
"231 238 CURVE",
"234 235 OFFCURVE",
"238 231 OFFCURVE",
"245 226 CURVE",
"248 225 OFFCURVE",
"253 225 OFFCURVE",
"260 225 CURVE SMOOTH",
"269 225 OFFCURVE",
"277 226 OFFCURVE",
"282 229 CURVE",
"289 242 OFFCURVE",
"292 266 OFFCURVE",
"292 301 CURVE SMOOTH",
"292 308 OFFCURVE",
"292 311 OFFCURVE",
"292 311 CURVE",
"269 589 LINE"
);
},
{
closed = 1;
nodes = (
"229 549 LINE",
"223 619 LINE",
"223 624 OFFCURVE",
"235 663 OFFCURVE",
"236 666 CURVE",
"221 679 OFFCURVE",
"204 686 OFFCURVE",
"185 686 CURVE SMOOTH",
"168 686 OFFCURVE",
"152 678 OFFCURVE",
"137 663 CURVE",
"141 658 OFFCURVE",
"146 649 OFFCURVE",
"152 636 CURVE",
"162 599 OFFCURVE",
"171 560 OFFCURVE",
"179 521 CURVE"
);
}
);
width = 509;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2019-03-01 20:05:14 +0000";
layers = (
{
components = (
{
name = "hhaa-ethiopic";
transform = "{-1, 0, 0, 1, 509, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2019-03-01 20:05:56 +0000";
layers = (
{
components = (
{
name = "hhaa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"346 -269 LINE",
"506 -269 LINE",
"506 -227 LINE",
"346 -227 LINE"
);
}
);
width = 509;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2019-03-01 20:01:18 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"435 406 OFFCURVE",
"393 431 OFFCURVE",
"344 431 CURVE SMOOTH",
"331 431 OFFCURVE",
"314 431 OFFCURVE",
"290 417 CURVE SMOOTH",
"285 414 OFFCURVE",
"273 407 OFFCURVE",
"264 407 CURVE SMOOTH",
"253 407 OFFCURVE",
"244 414 OFFCURVE",
"239 417 CURVE",
"216 432 OFFCURVE",
"198 431 OFFCURVE",
"185 431 CURVE SMOOTH",
"136 431 OFFCURVE",
"95 405 OFFCURVE",
"63 338 CURVE SMOOTH",
"38 283 OFFCURVE",
"25 228 OFFCURVE",
"25 171 CURVE SMOOTH",
"25 114 OFFCURVE",
"36 68 OFFCURVE",
"58 33 CURVE SMOOTH",
"85 -9 OFFCURVE",
"125 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"200 -30 OFFCURVE",
"222 -26 OFFCURVE",
"237 -18 CURVE SMOOTH",
"242 -15 OFFCURVE",
"245 -10 OFFCURVE",
"245 -5 CURVE SMOOTH",
"245 378 LINE",
"258 376 OFFCURVE",
"271 375 OFFCURVE",
"288 379 CURVE",
"288 0 LINE SMOOTH",
"288 -5 OFFCURVE",
"291 -13 OFFCURVE",
"296 -18 CURVE SMOOTH",
"309 -31 OFFCURVE",
"329 -30 OFFCURVE",
"350 -30 CURVE SMOOTH",
"404 -30 OFFCURVE",
"444 -9 OFFCURVE",
"471 33 CURVE SMOOTH",
"493 68 OFFCURVE",
"504 114 OFFCURVE",
"504 171 CURVE SMOOTH",
"504 228 OFFCURVE",
"491 283 OFFCURVE",
"466 338 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 97 OFFCURVE",
"80 132 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 221 OFFCURVE",
"121 384 OFFCURVE",
"168 384 CURVE SMOOTH",
"198 384 LINE",
"198 11 LINE",
"192 10 OFFCURVE",
"186 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"142 9 OFFCURVE",
"115 29 OFFCURVE",
"98 68 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415 29 OFFCURVE",
"387 9 OFFCURVE",
"350 9 CURVE SMOOTH",
"345 9 OFFCURVE",
"340 9 OFFCURVE",
"335 10 CURVE",
"335 384 LINE",
"370 384 LINE SMOOTH",
"390 384 OFFCURVE",
"446 318 OFFCURVE",
"449 174 CURVE SMOOTH",
"450 132 OFFCURVE",
"443 97 OFFCURVE",
"431 68 CURVE SMOOTH"
);
}
);
width = 527;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2019-03-01 20:06:33 +0000";
layers = (
{
components = (
{
name = "ma-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 613;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2019-03-01 20:10:16 +0000";
layers = (
{
components = (
{
name = "ma-ethiopic";
},
{
name = _part.leg;
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 197, -424}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 587;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2019-03-01 20:10:44 +0000";
layers = (
{
components = (
{
name = "ma-ethiopic";
},
{
name = _part.leg;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 527;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2019-03-01 20:11:23 +0000";
layers = (
{
components = (
{
name = "maa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 573;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2019-03-01 20:13:54 +0000";
layers = (
{
components = (
{
name = "ma-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"213 120 OFFCURVE",
"205 119 OFFCURVE",
"205 117 CURVE SMOOTH",
"205 61 OFFCURVE",
"201 5 OFFCURVE",
"205 -57 CURVE",
"205 -61 OFFCURVE",
"211 -141 OFFCURVE",
"212 -151 CURVE",
"214 -162 OFFCURVE",
"215 -170 OFFCURVE",
"215 -176 CURVE SMOOTH",
"215 -184 OFFCURVE",
"104 -236 OFFCURVE",
"109 -252 CURVE SMOOTH",
"111 -259 OFFCURVE",
"115 -263 OFFCURVE",
"123 -264 CURVE",
"126 -265 OFFCURVE",
"131 -265 OFFCURVE",
"138 -265 CURVE SMOOTH",
"147 -265 OFFCURVE",
"155 -264 OFFCURVE",
"160 -261 CURVE",
"167 -248 OFFCURVE",
"260 -233 OFFCURVE",
"260 -189 CURVE SMOOTH",
"260 -179 LINE",
"245 -3 LINE",
"244 26 LINE",
"213 122 LINE"
);
}
);
width = 527;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2019-03-01 20:15:00 +0000";
layers = (
{
components = (
{
name = "ma-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"199 26 LINE",
"206 -3 LINE",
"191 -179 LINE",
"191 -189 LINE SMOOTH",
"191 -224 OFFCURVE",
"194 -248 OFFCURVE",
"201 -261 CURVE",
"206 -264 OFFCURVE",
"214 -265 OFFCURVE",
"223 -265 CURVE SMOOTH",
"230 -265 OFFCURVE",
"235 -265 OFFCURVE",
"238 -264 CURVE",
"245 -259 OFFCURVE",
"249 -255 OFFCURVE",
"252 -252 CURVE",
"241 -209 OFFCURVE",
"236 -184 OFFCURVE",
"236 -176 CURVE SMOOTH",
"236 -170 OFFCURVE",
"237 -162 OFFCURVE",
"239 -151 CURVE",
"240 -141 OFFCURVE",
"241 -134 OFFCURVE",
"241 -130 CURVE",
"245 -68 OFFCURVE",
"244 11 OFFCURVE",
"244 77 CURVE SMOOTH",
"244 86 OFFCURVE",
"243 150 OFFCURVE",
"243 152 CURVE"
);
}
);
width = 527;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2019-03-01 20:15:35 +0000";
layers = (
{
components = (
{
name = "maa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"351 -270 LINE",
"517 -270 LINE",
"517 -229 LINE",
"351 -229 LINE"
);
}
);
width = 527;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2019-03-01 20:15:46 +0000";
layers = (
{
components = (
{
name = w;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2019-03-01 20:16:09 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 580;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2019-03-03 23:16:48 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = _part.leg;
transform = "{1, 0, 0, 1, -43, -10}";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 149, -443}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2019-03-03 23:16:14 +0000";
layers = (
{
components = (
{
name = w;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"412 33 LINE",
"403 -19 LINE",
"388 -195 LINE",
"388 -205 LINE SMOOTH",
"388 -240 OFFCURVE",
"391 -264 OFFCURVE",
"398 -277 CURVE",
"403 -280 OFFCURVE",
"411 -281 OFFCURVE",
"420 -281 CURVE SMOOTH",
"427 -281 OFFCURVE",
"432 -281 OFFCURVE",
"435 -280 CURVE",
"442 -275 OFFCURVE",
"446 -271 OFFCURVE",
"449 -268 CURVE",
"438 -225 OFFCURVE",
"433 -200 OFFCURVE",
"433 -192 CURVE SMOOTH",
"433 -186 OFFCURVE",
"434 -178 OFFCURVE",
"436 -167 CURVE",
"437 -157 OFFCURVE",
"438 -150 OFFCURVE",
"438 -146 CURVE",
"442 -84 OFFCURVE",
"453 45 OFFCURVE",
"453 101 CURVE SMOOTH",
"453 103 OFFCURVE",
"459 134 OFFCURVE",
"455 136 CURVE"
);
}
);
width = 510;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2019-03-03 23:18:03 +0000";
layers = (
{
components = (
{
name = "szaa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 153, -14}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2019-03-03 23:18:30 +0000";
layers = (
{
components = (
{
name = "szaa-ethiopic";
transform = "{-1, 0, 0, 1, 510, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2019-03-03 23:18:49 +0000";
layers = (
{
components = (
{
name = "sza-ethiopic";
},
{
name = _part.leg;
transform = "{1, 0, 0, 1, -250, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 510;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2019-03-03 23:19:09 +0000";
layers = (
{
components = (
{
name = "szaa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"362 -283 LINE",
"502 -283 LINE",
"502 -235 LINE",
"362 -235 LINE"
);
}
);
width = 510;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2019-03-01 20:18:10 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"113 -13 OFFCURVE",
"143 -11 OFFCURVE",
"182 -7 CURVE SMOOTH",
"221 -2 OFFCURVE",
"253 0 OFFCURVE",
"276 0 CURVE SMOOTH",
"302 0 OFFCURVE",
"315 9 OFFCURVE",
"315 27 CURVE SMOOTH",
"315 43 OFFCURVE",
"300 64 OFFCURVE",
"292 63 CURVE",
"210 44 OFFCURVE",
"150 35 OFFCURVE",
"113 35 CURVE SMOOTH",
"96 35 OFFCURVE",
"85 39 OFFCURVE",
"79 46 CURVE",
"80 72 OFFCURVE",
"111 121 OFFCURVE",
"172 193 CURVE SMOOTH",
"214 240 OFFCURVE",
"256 286 OFFCURVE",
"298 333 CURVE SMOOTH",
"314 352 OFFCURVE",
"322 369 OFFCURVE",
"322 386 CURVE SMOOTH",
"322 404 OFFCURVE",
"289 421 OFFCURVE",
"282 411 CURVE SMOOTH",
"253 371 LINE SMOOTH",
"245 360 OFFCURVE",
"229 328 OFFCURVE",
"190 281 CURVE SMOOTH",
"131 212 OFFCURVE",
"95 169 OFFCURVE",
"82 152 CURVE SMOOTH",
"44 101 OFFCURVE",
"25 63 OFFCURVE",
"25 38 CURVE SMOOTH",
"25 21 OFFCURVE",
"33 8 OFFCURVE",
"48 -1 CURVE SMOOTH",
"61 -9 OFFCURVE",
"76 -13 OFFCURVE",
"93 -13 CURVE SMOOTH"
);
}
);
width = 347;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2019-03-01 20:19:30 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"158 9 LINE",
"156 -9 LINE",
"156 -19 LINE SMOOTH",
"156 -54 OFFCURVE",
"159 -78 OFFCURVE",
"166 -91 CURVE",
"171 -94 OFFCURVE",
"179 -95 OFFCURVE",
"188 -95 CURVE SMOOTH",
"195 -95 OFFCURVE",
"200 -95 OFFCURVE",
"203 -94 CURVE",
"210 -89 OFFCURVE",
"214 -85 OFFCURVE",
"217 -82 CURVE",
"206 -39 OFFCURVE",
"201 -14 OFFCURVE",
"201 -6 CURVE SMOOTH",
"201 -1 OFFCURVE",
"202 7 OFFCURVE",
"204 16 CURVE"
);
}
);
width = 347;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2019-03-01 20:26:01 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 11 LINE",
"328 31 OFFCURVE",
"337 69 OFFCURVE",
"337 83 CURVE SMOOTH",
"337 107 OFFCURVE",
"295 143 OFFCURVE",
"271 143 CURVE SMOOTH",
"256 143 OFFCURVE",
"227 123 OFFCURVE",
"227 108 CURVE SMOOTH",
"227 98 OFFCURVE",
"235 93 OFFCURVE",
"252 93 CURVE SMOOTH",
"255 93 OFFCURVE",
"258 93 OFFCURVE",
"262 94 CURVE SMOOTH",
"266 95 OFFCURVE",
"269 96 OFFCURVE",
"271 96 CURVE SMOOTH",
"276 96 OFFCURVE",
"289 94 OFFCURVE",
"291 91 CURVE",
"283 77 OFFCURVE",
"271 43 OFFCURVE",
"255 29 CURVE"
);
}
);
width = 347;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2019-03-01 20:24:18 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"302 1 LINE SMOOTH",
"313 1 OFFCURVE",
"319 11 OFFCURVE",
"317 22 CURVE SMOOTH",
"306 70 OFFCURVE",
"305 103 OFFCURVE",
"315 120 CURVE",
"326 120 OFFCURVE",
"338 118 OFFCURVE",
"349 119 CURVE",
"358 118 OFFCURVE",
"367 125 OFFCURVE",
"376 137 CURVE",
"376 141 OFFCURVE",
"374 143 OFFCURVE",
"370 146 CURVE SMOOTH",
"351 161 OFFCURVE",
"290 146 OFFCURVE",
"275 127 CURVE SMOOTH",
"256 103 OFFCURVE",
"254 66 OFFCURVE",
"269 19 CURVE SMOOTH",
"271 12 OFFCURVE",
"263 7 OFFCURVE",
"266 0 CURVE"
);
}
);
width = 347;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2019-03-01 20:27:14 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
},
{
name = _part.haa;
transform = "{-1, 0, 0, 1, 567, 267}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2019-03-01 20:29:59 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 138 OFFCURVE",
"305 136 OFFCURVE",
"302 131 CURVE",
"290 103 LINE",
"279 83 OFFCURVE",
"261 64 OFFCURVE",
"238 46 CURVE SMOOTH",
"212 26 OFFCURVE",
"189 16 OFFCURVE",
"170 16 CURVE SMOOTH",
"138 16 OFFCURVE",
"114 32 OFFCURVE",
"99 63 CURVE SMOOTH",
"88 87 OFFCURVE",
"82 117 OFFCURVE",
"82 153 CURVE SMOOTH",
"82 200 OFFCURVE",
"91 249 OFFCURVE",
"108 301 CURVE SMOOTH",
"131 368 OFFCURVE",
"161 402 OFFCURVE",
"198 402 CURVE SMOOTH",
"223 402 OFFCURVE",
"243 409 OFFCURVE",
"251 381 CURVE",
"250 368 OFFCURVE",
"249 358 OFFCURVE",
"247 352 CURVE",
"246 351 OFFCURVE",
"245 348 OFFCURVE",
"242 344 CURVE",
"239 339 OFFCURVE",
"238 336 OFFCURVE",
"238 333 CURVE SMOOTH",
"238 322 OFFCURVE",
"257 313 OFFCURVE",
"268 313 CURVE SMOOTH",
"291 313 OFFCURVE",
"305 366 OFFCURVE",
"300 405 CURVE SMOOTH",
"296 440 OFFCURVE",
"259 446 OFFCURVE",
"160 446 CURVE SMOOTH",
"119 446 OFFCURVE",
"85 407 OFFCURVE",
"58 328 CURVE SMOOTH",
"36 265 OFFCURVE",
"25 207 OFFCURVE",
"25 156 CURVE SMOOTH",
"25 106 OFFCURVE",
"37 65 OFFCURVE",
"61 34 CURVE SMOOTH",
"87 -1 OFFCURVE",
"124 -19 OFFCURVE",
"173 -19 CURVE SMOOTH",
"188 -19 OFFCURVE",
"208 -15 OFFCURVE",
"231 -8 CURVE",
"266 1 OFFCURVE",
"339 72 OFFCURVE",
"339 104 CURVE SMOOTH",
"339 113 OFFCURVE",
"324 138 OFFCURVE",
"316 138 CURVE SMOOTH"
);
}
);
width = 364;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2019-03-01 20:32:46 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"310 138 OFFCURVE",
"305 136 OFFCURVE",
"302 131 CURVE",
"290 103 LINE",
"279 83 OFFCURVE",
"261 64 OFFCURVE",
"238 46 CURVE SMOOTH",
"212 26 OFFCURVE",
"189 16 OFFCURVE",
"170 16 CURVE SMOOTH",
"138 16 OFFCURVE",
"114 32 OFFCURVE",
"99 63 CURVE SMOOTH",
"88 87 OFFCURVE",
"82 117 OFFCURVE",
"82 153 CURVE SMOOTH",
"82 200 OFFCURVE",
"91 249 OFFCURVE",
"108 301 CURVE SMOOTH",
"131 368 OFFCURVE",
"161 402 OFFCURVE",
"198 402 CURVE SMOOTH",
"223 402 OFFCURVE",
"243 409 OFFCURVE",
"251 381 CURVE",
"273 413 LINE",
"294 412 LINE",
"316 399 LINE",
"312 434 OFFCURVE",
"259 446 OFFCURVE",
"160 446 CURVE SMOOTH",
"119 446 OFFCURVE",
"85 407 OFFCURVE",
"58 328 CURVE SMOOTH",
"36 265 OFFCURVE",
"25 207 OFFCURVE",
"25 156 CURVE SMOOTH",
"25 106 OFFCURVE",
"37 65 OFFCURVE",
"61 34 CURVE SMOOTH",
"87 -1 OFFCURVE",
"124 -19 OFFCURVE",
"173 -19 CURVE SMOOTH",
"188 -19 OFFCURVE",
"208 -15 OFFCURVE",
"231 -8 CURVE",
"266 1 OFFCURVE",
"339 72 OFFCURVE",
"339 104 CURVE SMOOTH",
"339 113 OFFCURVE",
"324 138 OFFCURVE",
"316 138 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 381 OFFCURVE",
"326 407 OFFCURVE",
"302 422 CURVE SMOOTH",
"294 427 OFFCURVE",
"288 430 OFFCURVE",
"283 430 CURVE SMOOTH",
"266 430 OFFCURVE",
"251 418 OFFCURVE",
"240 394 CURVE SMOOTH",
"231 375 OFFCURVE",
"227 356 OFFCURVE",
"227 336 CURVE SMOOTH",
"227 316 OFFCURVE",
"231 300 OFFCURVE",
"239 287 CURVE SMOOTH",
"248 273 OFFCURVE",
"262 265 OFFCURVE",
"281 265 CURVE SMOOTH",
"299 265 OFFCURVE",
"314 274 OFFCURVE",
"325 292 CURVE SMOOTH",
"334 307 OFFCURVE",
"338 325 OFFCURVE",
"338 345 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"321 329 OFFCURVE",
"319 315 OFFCURVE",
"313 303 CURVE SMOOTH",
"305 287 OFFCURVE",
"295 279 OFFCURVE",
"281 279 CURVE SMOOTH",
"268 279 OFFCURVE",
"259 286 OFFCURVE",
"253 300 CURVE SMOOTH",
"249 310 OFFCURVE",
"246 322 OFFCURVE",
"246 337 CURVE SMOOTH",
"246 353 OFFCURVE",
"249 368 OFFCURVE",
"255 383 CURVE SMOOTH",
"262 401 OFFCURVE",
"274 410 OFFCURVE",
"288 410 CURVE SMOOTH",
"301 410 OFFCURVE",
"308 402 OFFCURVE",
"315 386 CURVE SMOOTH",
"320 374 OFFCURVE",
"321 360 OFFCURVE",
"321 345 CURVE SMOOTH"
);
}
);
width = 364;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2019-03-01 20:34:09 +0000";
layers = (
{
components = (
{
name = "raa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"171 397 LINE",
"348 397 LINE",
"348 430 LINE",
"171 430 LINE"
);
}
);
width = 405;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2019-03-03 23:41:05 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2019-03-03 23:41:23 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 433;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2019-03-03 23:41:50 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 430;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2019-03-03 23:42:01 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2019-03-03 23:42:12 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 417;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2019-03-03 23:42:59 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"217 405 LINE",
"216 409 OFFCURVE",
"214 414 OFFCURVE",
"212 418 CURVE SMOOTH",
"197 455 OFFCURVE",
"187 484 OFFCURVE",
"182 506 CURVE SMOOTH",
"177 528 OFFCURVE",
"174 545 OFFCURVE",
"172 556 CURVE",
"164 575 OFFCURVE",
"137 590 OFFCURVE",
"116 590 CURVE SMOOTH",
"107 590 OFFCURVE",
"99 585 OFFCURVE",
"90 576 CURVE",
"104 549 OFFCURVE",
"115 528 OFFCURVE",
"123 514 CURVE",
"170 400 LINE"
);
}
);
width = 367;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2019-03-03 23:43:27 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2019-03-03 23:43:39 +0000";
layers = (
{
components = (
{
name = "bwa-ethiopic";
},
{
name = _part.se;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2019-03-03 23:45:47 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2019-03-03 23:46:39 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 433;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2019-03-03 23:47:16 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 430;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2019-03-03 23:47:30 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2019-03-03 23:47:52 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 417;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2019-03-03 23:48:37 +0000";
layers = (
{
components = (
{
name = "se-ethiopic";
},
{
name = _part.topbar;
transform = "{1, 0, 0, 1, -2, 52}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2019-03-03 23:48:57 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic";
},
{
name = _part.she;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2019-03-03 23:49:31 +0000";
layers = (
{
components = (
{
name = "swa-ethiopic";
},
{
name = _part.topbar;
transform = "{1, 0, 0, 1, 0, 28}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2019-03-03 23:51:28 +0000";
layers = (
{
components = (
{
name = efCyrillic;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2019-03-03 23:52:45 +0000";
layers = (
{
components = (
{
name = "qa-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 0, -290}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2019-03-03 23:53:06 +0000";
layers = (
{
components = (
{
name = "qa-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 10, -408}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2019-03-03 23:54:14 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"52 -239 OFFCURVE",
"60 -249 OFFCURVE",
"87 -242 CURVE SMOOTH",
"124 -232 OFFCURVE",
"285 -77 OFFCURVE",
"287 -21 CURVE SMOOTH",
"287 -14 OFFCURVE",
"290 -10 OFFCURVE",
"297 -10 CURVE",
"435 0 OFFCURVE",
"502 75 OFFCURVE",
"502 174 CURVE SMOOTH",
"502 313 OFFCURVE",
"417 400 OFFCURVE",
"296 422 CURVE",
"285 425 OFFCURVE",
"284 430 OFFCURVE",
"284 441 CURVE SMOOTH",
"284 470 OFFCURVE",
"282 584 OFFCURVE",
"282 598 CURVE SMOOTH",
"282 606 OFFCURVE",
"283 617 OFFCURVE",
"285 630 CURVE SMOOTH",
"287 643 OFFCURVE",
"288 653 OFFCURVE",
"288 660 CURVE",
"275 669 OFFCURVE",
"264 674 OFFCURVE",
"256 674 CURVE SMOOTH",
"237 674 OFFCURVE",
"214 659 OFFCURVE",
"214 640 CURVE SMOOTH",
"214 638 OFFCURVE",
"231 458 OFFCURVE",
"233 434 CURVE",
"233 426 OFFCURVE",
"227 425 OFFCURVE",
"220 422 CURVE",
"183 411 OFFCURVE",
"151 397 OFFCURVE",
"124 382 CURVE SMOOTH",
"53 344 OFFCURVE",
"24 304 OFFCURVE",
"24 186 CURVE SMOOTH",
"24 102 OFFCURVE",
"108 8 OFFCURVE",
"228 -7 CURVE",
"235 -10 OFFCURVE",
"239 -11 OFFCURVE",
"239 -19 CURVE SMOOTH",
"239 -73 OFFCURVE",
"113 -141 OFFCURVE",
"68 -186 CURVE SMOOTH",
"62 -192 OFFCURVE",
"52 -205 OFFCURVE",
"52 -218 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"75 322 OFFCURVE",
"136 373 OFFCURVE",
"223 373 CURVE SMOOTH",
"232 373 OFFCURVE",
"236 366 OFFCURVE",
"236 359 CURVE",
"240 295 OFFCURVE",
"242 234 OFFCURVE",
"243 184 CURVE SMOOTH",
"244 144 OFFCURVE",
"244 95 OFFCURVE",
"244 75 CURVE SMOOTH",
"244 65 OFFCURVE",
"243 56 OFFCURVE",
"242 47 CURVE SMOOTH",
"241 38 OFFCURVE",
"238 34 OFFCURVE",
"233 34 CURVE SMOOTH",
"142 34 OFFCURVE",
"75 99 OFFCURVE",
"75 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"444 89 OFFCURVE",
"387 30 OFFCURVE",
"301 30 CURVE SMOOTH",
"293 30 OFFCURVE",
"289 33 OFFCURVE",
"289 40 CURVE SMOOTH",
"289 77 OFFCURVE",
"288 147 OFFCURVE",
"287 197 CURVE SMOOTH",
"287 247 OFFCURVE",
"286 317 OFFCURVE",
"286 353 CURVE SMOOTH",
"286 364 OFFCURVE",
"291 364 OFFCURVE",
"302 364 CURVE SMOOTH",
"385 364 OFFCURVE",
"444 283 OFFCURVE",
"444 170 CURVE SMOOTH"
);
}
);
width = 522;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2019-03-03 23:54:56 +0000";
layers = (
{
components = (
{
name = "qa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 9, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2019-03-03 23:56:40 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"239 581 LINE",
"239 541 OFFCURVE",
"238 460 OFFCURVE",
"238 441 CURVE SMOOTH",
"238 430 OFFCURVE",
"237 425 OFFCURVE",
"226 422 CURVE",
"105 400 OFFCURVE",
"20 313 OFFCURVE",
"20 174 CURVE SMOOTH",
"20 75 OFFCURVE",
"87 0 OFFCURVE",
"225 -10 CURVE",
"232 -10 OFFCURVE",
"235 -14 OFFCURVE",
"235 -21 CURVE SMOOTH",
"237 -77 OFFCURVE",
"238 -242 OFFCURVE",
"275 -242 CURVE SMOOTH",
"302 -242 OFFCURVE",
"310 -239 OFFCURVE",
"310 -218 CURVE SMOOTH",
"310 -215 OFFCURVE",
"308 -210 OFFCURVE",
"303 -204 CURVE SMOOTH",
"298 -198 OFFCURVE",
"295 -192 OFFCURVE",
"294 -186 CURVE SMOOTH",
"284 -141 OFFCURVE",
"283 -73 OFFCURVE",
"283 -19 CURVE SMOOTH",
"283 -11 OFFCURVE",
"287 -10 OFFCURVE",
"294 -7 CURVE",
"414 8 OFFCURVE",
"498 102 OFFCURVE",
"498 186 CURVE SMOOTH",
"498 304 OFFCURVE",
"469 344 OFFCURVE",
"398 382 CURVE SMOOTH",
"371 397 OFFCURVE",
"339 411 OFFCURVE",
"302 422 CURVE",
"295 425 OFFCURVE",
"289 426 OFFCURVE",
"289 434 CURVE",
"290 448 OFFCURVE",
"296 536 OFFCURVE",
"301 589 CURVE"
);
},
{
closed = 1;
nodes = (
"447 99 OFFCURVE",
"380 34 OFFCURVE",
"289 34 CURVE SMOOTH",
"284 34 OFFCURVE",
"281 38 OFFCURVE",
"280 47 CURVE SMOOTH",
"279 56 OFFCURVE",
"278 65 OFFCURVE",
"278 75 CURVE SMOOTH",
"278 95 OFFCURVE",
"278 144 OFFCURVE",
"279 184 CURVE SMOOTH",
"280 234 OFFCURVE",
"282 295 OFFCURVE",
"286 359 CURVE",
"286 366 OFFCURVE",
"290 373 OFFCURVE",
"299 373 CURVE SMOOTH",
"386 373 OFFCURVE",
"447 322 OFFCURVE",
"447 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 283 OFFCURVE",
"137 364 OFFCURVE",
"220 364 CURVE SMOOTH",
"231 364 OFFCURVE",
"236 364 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 317 OFFCURVE",
"235 247 OFFCURVE",
"235 197 CURVE SMOOTH",
"234 147 OFFCURVE",
"233 77 OFFCURVE",
"233 40 CURVE SMOOTH",
"233 33 OFFCURVE",
"229 30 OFFCURVE",
"221 30 CURVE SMOOTH",
"135 30 OFFCURVE",
"78 89 OFFCURVE",
"78 170 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"221 564 LINE",
"225 604 OFFCURVE",
"228 639 OFFCURVE",
"228 640 CURVE SMOOTH",
"228 659 OFFCURVE",
"205 674 OFFCURVE",
"186 674 CURVE SMOOTH",
"178 674 OFFCURVE",
"167 669 OFFCURVE",
"154 660 CURVE",
"154 653 OFFCURVE",
"155 643 OFFCURVE",
"157 630 CURVE SMOOTH",
"159 617 OFFCURVE",
"160 606 OFFCURVE",
"160 598 CURVE SMOOTH",
"160 593 OFFCURVE",
"160 577 OFFCURVE",
"159 556 CURVE"
);
},
{
closed = 1;
nodes = (
"169 563 LINE",
"289 565 LINE",
"301 589 LINE",
"181 589 LINE"
);
}
);
width = 522;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2019-03-03 23:57:30 +0000";
layers = (
{
components = (
{
name = "qa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 22, 768}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2019-03-03 23:58:36 +0000";
layers = (
{
components = (
{
name = "qaa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 5, 780}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 1247;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2019-03-03 23:59:14 +0000";
layers = (
{
components = (
{
name = "qa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"154 -242 LINE",
"409 -242 LINE",
"409 -209 LINE",
"154 -209 LINE"
);
},
{
closed = 1;
nodes = (
"376 -283 LINE",
"410 -283 LINE",
"410 -211 LINE",
"376 -211 LINE"
);
}
);
width = 522;
}
);
unicode = 124B;
},
{
glyphname = "ba-ethiopic";
lastChange = "2019-03-01 20:43:37 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 146 LINE SMOOTH",
"342 233 OFFCURVE",
"329 302 OFFCURVE",
"303 355 CURVE SMOOTH",
"288 386 OFFCURVE",
"262 408 OFFCURVE",
"226 421 CURVE SMOOTH",
"210 427 OFFCURVE",
"198 430 OFFCURVE",
"190 430 CURVE SMOOTH",
"147 430 OFFCURVE",
"102 391 OFFCURVE",
"76 335 CURVE SMOOTH",
"37 252 OFFCURVE",
"28 134 OFFCURVE",
"28 53 CURVE SMOOTH",
"28 12 OFFCURVE",
"41 -10 OFFCURVE",
"68 -10 CURVE SMOOTH",
"82 -10 OFFCURVE",
"89 -5 OFFCURVE",
"89 5 CURVE SMOOTH",
"89 18 OFFCURVE",
"87 36 OFFCURVE",
"83 61 CURVE SMOOTH",
"78 85 OFFCURVE",
"76 103 OFFCURVE",
"76 116 CURVE SMOOTH",
"76 211 OFFCURVE",
"89 292 OFFCURVE",
"140 355 CURVE SMOOTH",
"160 380 OFFCURVE",
"191 391 OFFCURVE",
"208 391 CURVE SMOOTH",
"263 391 OFFCURVE",
"291 280 OFFCURVE",
"291 59 CURVE SMOOTH",
"291 54 OFFCURVE",
"291 45 OFFCURVE",
"290 33 CURVE SMOOTH",
"289 21 OFFCURVE",
"289 12 OFFCURVE",
"289 6 CURVE SMOOTH",
"289 -2 LINE",
"306 -11 OFFCURVE",
"318 -16 OFFCURVE",
"325 -16 CURVE SMOOTH",
"332 -16 OFFCURVE",
"338 -12 OFFCURVE",
"342 -5 CURVE"
);
}
);
width = 367;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2019-03-01 20:43:57 +0000";
layers = (
{
components = (
{
name = _part.hu;
transform = "{1, 0, 0, 1, 40, 0}";
},
{
name = "ba-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 433;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2019-03-03 23:23:07 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 43, -176}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 430;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2019-03-03 23:25:29 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.ha;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2019-03-03 23:26:30 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 52, 249}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 417;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2019-03-03 23:37:21 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
transform = "{1, 0, 0, 1, 68, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"127 213 OFFCURVE",
"116 209 OFFCURVE",
"106 209 CURVE SMOOTH",
"93 209 OFFCURVE",
"78 216 OFFCURVE",
"61 229 CURVE SMOOTH",
"45 242 OFFCURVE",
"36 248 OFFCURVE",
"34 248 CURVE SMOOTH",
"24 248 OFFCURVE",
"19 243 OFFCURVE",
"19 233 CURVE SMOOTH",
"19 210 OFFCURVE",
"90 167 OFFCURVE",
"115 167 CURVE SMOOTH",
"123 167 OFFCURVE",
"131 168 OFFCURVE",
"139 170 CURVE",
"139 221 LINE"
);
}
);
width = 430;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2019-03-03 23:30:51 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic";
transform = "{-1, 0, 0, 1, 367, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2019-03-03 23:31:09 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"213 -266 LINE",
"362 -266 LINE",
"362 -229 LINE",
"213 -229 LINE"
);
}
);
width = 367;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2019-03-03 23:33:58 +0000";
layers = (
{
components = (
{
name = "ba-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2019-03-03 23:34:22 +0000";
layers = (
{
components = (
{
name = "bu-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 433;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2019-03-03 23:34:47 +0000";
layers = (
{
components = (
{
name = "bi-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 430;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2019-03-03 23:35:12 +0000";
layers = (
{
components = (
{
name = "baa-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2019-03-03 23:35:36 +0000";
layers = (
{
components = (
{
name = "bee-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 417;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2019-03-03 23:37:04 +0000";
layers = (
{
components = (
{
name = "be-ethiopic";
},
{
name = _part.topbar;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 437;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2019-03-04 00:00:10 +0000";
layers = (
{
components = (
{
name = "bo-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2019-03-03 23:38:32 +0000";
layers = (
{
components = (
{
name = "bwa-ethiopic";
},
{
name = _part.topbar;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2019-03-03 23:59:55 +0000";
layers = (
{
components = (
{
name = t;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2019-03-04 00:00:35 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, -130, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2019-03-04 00:00:59 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, -128, -179}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2019-03-04 00:03:42 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"43 311 OFFCURVE",
"56 308 OFFCURVE",
"76 305 CURVE SMOOTH",
"98 302 OFFCURVE",
"111 300 OFFCURVE",
"114 298 CURVE",
"115 291 OFFCURVE",
"130 142 OFFCURVE",
"102 82 CURVE SMOOTH",
"40 -51 OFFCURVE",
"23 -87 OFFCURVE",
"23 -140 CURVE SMOOTH",
"23 -151 OFFCURVE",
"40 -164 OFFCURVE",
"51 -164 CURVE SMOOTH",
"64 -164 OFFCURVE",
"75 -150 OFFCURVE",
"83 -123 CURVE SMOOTH",
"89 -103 OFFCURVE",
"105 -54 OFFCURVE",
"153 55 CURVE SMOOTH",
"194 149 OFFCURVE",
"170 247 OFFCURVE",
"169 292 CURVE",
"173 295 OFFCURVE",
"188 295 OFFCURVE",
"215 292 CURVE SMOOTH",
"236 289 OFFCURVE",
"247 297 OFFCURVE",
"247 315 CURVE SMOOTH",
"247 340 OFFCURVE",
"220 352 OFFCURVE",
"166 350 CURVE",
"153 531 LINE",
"153 533 OFFCURVE",
"154 536 OFFCURVE",
"155 541 CURVE SMOOTH",
"157 545 OFFCURVE",
"158 548 OFFCURVE",
"158 550 CURVE SMOOTH",
"158 558 OFFCURVE",
"146 567 OFFCURVE",
"131 566 CURVE SMOOTH",
"108 564 OFFCURVE",
"96 552 OFFCURVE",
"96 531 CURVE SMOOTH",
"96 514 OFFCURVE",
"98 489 OFFCURVE",
"103 456 CURVE SMOOTH",
"108 423 OFFCURVE",
"110 398 OFFCURVE",
"110 382 CURVE SMOOTH",
"110 374 OFFCURVE",
"109 366 OFFCURVE",
"108 359 CURVE",
"53 362 LINE",
"34 362 OFFCURVE",
"25 355 OFFCURVE",
"25 340 CURVE SMOOTH",
"25 329 OFFCURVE",
"29 321 OFFCURVE",
"38 315 CURVE"
);
}
);
width = 272;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2019-03-04 00:04:22 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -118, 260}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2019-03-04 00:06:51 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"115 520 LINE",
"106 350 LINE",
"52 352 OFFCURVE",
"25 340 OFFCURVE",
"25 315 CURVE SMOOTH",
"25 297 OFFCURVE",
"36 289 OFFCURVE",
"57 292 CURVE SMOOTH",
"84 295 OFFCURVE",
"99 295 OFFCURVE",
"103 292 CURVE",
"102 247 OFFCURVE",
"101 178 OFFCURVE",
"101 84 CURVE SMOOTH",
"101 66 OFFCURVE",
"104 47 OFFCURVE",
"109 27 CURVE",
"117 0 OFFCURVE",
"128 -14 OFFCURVE",
"141 -14 CURVE SMOOTH",
"152 -14 OFFCURVE",
"169 -1 OFFCURVE",
"169 10 CURVE SMOOTH",
"169 19 OFFCURVE",
"167 31 OFFCURVE",
"164 47 CURVE SMOOTH",
"161 63 OFFCURVE",
"159 75 OFFCURVE",
"159 82 CURVE",
"158 100 OFFCURVE",
"157 135 OFFCURVE",
"157 187 CURVE SMOOTH",
"157 254 OFFCURVE",
"157 291 OFFCURVE",
"158 298 CURVE",
"161 300 OFFCURVE",
"174 302 OFFCURVE",
"196 305 CURVE SMOOTH",
"216 308 OFFCURVE",
"229 311 OFFCURVE",
"234 315 CURVE",
"243 321 OFFCURVE",
"247 329 OFFCURVE",
"247 340 CURVE SMOOTH",
"247 355 OFFCURVE",
"238 362 OFFCURVE",
"219 362 CURVE",
"164 359 LINE",
"163 366 OFFCURVE",
"162 374 OFFCURVE",
"162 382 CURVE SMOOTH",
"162 398 OFFCURVE",
"168 423 OFFCURVE",
"169 456 CURVE SMOOTH",
"171 516 OFFCURVE",
"172 525 OFFCURVE",
"173 534 CURVE"
);
},
{
closed = 1;
nodes = (
"93 524 LINE",
"95 543 OFFCURVE",
"96 559 OFFCURVE",
"96 571 CURVE SMOOTH",
"96 592 OFFCURVE",
"84 604 OFFCURVE",
"61 606 CURVE SMOOTH",
"46 607 OFFCURVE",
"34 598 OFFCURVE",
"34 590 CURVE SMOOTH",
"34 588 OFFCURVE",
"35 585 OFFCURVE",
"37 581 CURVE",
"39 576 OFFCURVE",
"39 573 OFFCURVE",
"39 571 CURVE",
"35 534 LINE"
);
},
{
closed = 1;
nodes = (
"34 527 LINE SMOOTH",
"33 517 OFFCURVE",
"40 509 OFFCURVE",
"50 509 CURVE SMOOTH",
"163 509 LINE",
"172 534 LINE",
"35 534 LINE"
);
}
);
width = 272;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2019-03-04 00:07:54 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -192, 671}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2019-03-04 00:08:39 +0000";
layers = (
{
components = (
{
name = t;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"236 -2 OFFCURVE",
"202 12 OFFCURVE",
"174 12 CURVE SMOOTH",
"79 12 OFFCURVE",
"136 9 OFFCURVE",
"39 -2 CURVE",
"34 -2 OFFCURVE",
"32 -4 OFFCURVE",
"32 -9 CURVE SMOOTH",
"32 -27 OFFCURVE",
"38 -65 OFFCURVE",
"58 -65 CURVE SMOOTH",
"69 -65 OFFCURVE",
"79 -61 OFFCURVE",
"89 -54 CURVE SMOOTH",
"98 -47 OFFCURVE",
"109 -43 OFFCURVE",
"122 -41 CURVE SMOOTH",
"141 -38 OFFCURVE",
"167 -36 OFFCURVE",
"178 -36 CURVE SMOOTH",
"188 -36 OFFCURVE",
"120 -37 OFFCURVE",
"144 -38 CURVE SMOOTH",
"168 -39 OFFCURVE",
"185 -43 OFFCURVE",
"194 -46 CURVE SMOOTH",
"197 -47 OFFCURVE",
"202 -49 OFFCURVE",
"208 -52 CURVE SMOOTH",
"213 -55 OFFCURVE",
"217 -57 OFFCURVE",
"219 -57 CURVE SMOOTH",
"234 -57 OFFCURVE",
"236 -52 OFFCURVE",
"236 -29 CURVE SMOOTH"
);
}
);
width = 272;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2019-03-04 00:11:07 +0000";
layers = (
{
components = (
{
name = "ta-ethiopic";
},
{
name = _part.topsmall;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 272;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1287;
},
{
glyphname = "xwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1288;
},
{
glyphname = "xwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 128A;
},
{
glyphname = "xwaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 128B;
},
{
glyphname = "xwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 128C;
},
{
glyphname = "xwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 128D;
},
{
glyphname = "na-ethiopic";
lastChange = "2019-03-04 03:34:19 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"69 483 OFFCURVE",
"73 482 OFFCURVE",
"81 525 CURVE",
"86 543 OFFCURVE",
"90 555 OFFCURVE",
"91 562 CURVE SMOOTH",
"92 568 OFFCURVE",
"93 573 OFFCURVE",
"93 576 CURVE SMOOTH",
"93 595 OFFCURVE",
"70 610 OFFCURVE",
"51 610 CURVE SMOOTH",
"43 610 OFFCURVE",
"32 605 OFFCURVE",
"19 596 CURVE",
"19 587 OFFCURVE",
"25 545 OFFCURVE",
"25 534 CURVE SMOOTH",
"23 404 LINE SMOOTH",
"23 392 OFFCURVE",
"35 387 OFFCURVE",
"47 387 CURVE SMOOTH",
"58 387 OFFCURVE",
"69 393 OFFCURVE",
"69 406 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"34 399 OFFCURVE",
"51 383 OFFCURVE",
"57 389 CURVE SMOOTH",
"70 402 OFFCURVE",
"161 401 OFFCURVE",
"181 396 CURVE SMOOTH",
"199 392 OFFCURVE",
"194 353 OFFCURVE",
"193 274 CURVE SMOOTH",
"193 244 OFFCURVE",
"192 207 OFFCURVE",
"192 159 CURVE SMOOTH",
"192 98 OFFCURVE",
"190 60 OFFCURVE",
"187 46 CURVE",
"186 44 OFFCURVE",
"185 40 OFFCURVE",
"182 34 CURVE SMOOTH",
"179 27 OFFCURVE",
"178 22 OFFCURVE",
"178 19 CURVE SMOOTH",
"178 4 OFFCURVE",
"188 -3 OFFCURVE",
"208 -3 CURVE SMOOTH",
"231 -3 OFFCURVE",
"242 9 OFFCURVE",
"242 32 CURVE SMOOTH",
"242 35 OFFCURVE",
"241 40 OFFCURVE",
"239 47 CURVE SMOOTH",
"238 53 OFFCURVE",
"237 58 OFFCURVE",
"237 61 CURVE SMOOTH",
"237 98 OFFCURVE",
"239 153 OFFCURVE",
"242 226 CURVE SMOOTH",
"245 299 OFFCURVE",
"260 356 OFFCURVE",
"247 391 CURVE SMOOTH",
"232 430 OFFCURVE",
"192 450 OFFCURVE",
"70 422 CURVE SMOOTH",
"57 419 OFFCURVE",
"34 441 OFFCURVE",
"34 402 CURVE SMOOTH"
);
}
);
width = 267;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2019-03-04 00:17:08 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"84 475 LINE",
"83 446 OFFCURVE",
"83 417 OFFCURVE",
"83 387 CURVE SMOOTH",
"83 267 LINE",
"83 183 LINE SMOOTH",
"83 108 OFFCURVE",
"71 5 OFFCURVE",
"127 5 CURVE SMOOTH",
"143 5 OFFCURVE",
"151 10 OFFCURVE",
"151 21 CURVE SMOOTH",
"151 35 OFFCURVE",
"147 69 OFFCURVE",
"145 91 CURVE SMOOTH",
"142 123 OFFCURVE",
"139 167 OFFCURVE",
"139 232 CURVE SMOOTH",
"139 281 OFFCURVE",
"144 327 OFFCURVE",
"167 368 CURVE SMOOTH",
"182 395 OFFCURVE",
"260 417 OFFCURVE",
"285 417 CURVE SMOOTH",
"314 417 OFFCURVE",
"334 395 OFFCURVE",
"345 351 CURVE SMOOTH",
"356 307 OFFCURVE",
"362 242 OFFCURVE",
"362 156 CURVE SMOOTH",
"362 139 OFFCURVE",
"362 121 OFFCURVE",
"362 102 CURVE SMOOTH",
"362 84 OFFCURVE",
"362 61 OFFCURVE",
"361 32 CURVE",
"369 23 OFFCURVE",
"380 18 OFFCURVE",
"387 18 CURVE SMOOTH",
"402 18 OFFCURVE",
"420 21 OFFCURVE",
"425 26 CURVE",
"425 43 LINE SMOOTH",
"425 155 OFFCURVE",
"426 244 OFFCURVE",
"414 309 CURVE SMOOTH",
"402 374 OFFCURVE",
"382 417 OFFCURVE",
"335 437 CURVE SMOOTH",
"307 449 OFFCURVE",
"281 456 OFFCURVE",
"258 456 CURVE SMOOTH",
"234 456 OFFCURVE",
"165 431 OFFCURVE",
"143 409 CURVE",
"141 438 OFFCURVE",
"142 465 OFFCURVE",
"142 487 CURVE"
);
},
{
closed = 1;
nodes = (
"142 487 LINE",
"144 521 OFFCURVE",
"146 543 OFFCURVE",
"148 559 CURVE SMOOTH",
"150 574 OFFCURVE",
"154 595 OFFCURVE",
"154 604 CURVE SMOOTH",
"154 611 OFFCURVE",
"144 614 OFFCURVE",
"131 614 CURVE SMOOTH",
"126 614 OFFCURVE",
"121 613 OFFCURVE",
"116 612 CURVE SMOOTH",
"111 611 OFFCURVE",
"106 609 OFFCURVE",
"101 609 CURVE SMOOTH",
"95 609 OFFCURVE",
"92 612 OFFCURVE",
"92 618 CURVE SMOOTH",
"92 670 OFFCURVE",
"120 712 OFFCURVE",
"156 752 CURVE",
"159 755 OFFCURVE",
"160 758 OFFCURVE",
"160 762 CURVE SMOOTH",
"160 774 OFFCURVE",
"141 779 OFFCURVE",
"130 779 CURVE SMOOTH",
"85 779 OFFCURVE",
"54 722 OFFCURVE",
"43 680 CURVE SMOOTH",
"36 652 OFFCURVE",
"31 625 OFFCURVE",
"31 592 CURVE SMOOTH",
"31 566 OFFCURVE",
"41 553 OFFCURVE",
"60 553 CURVE SMOOTH",
"64 553 OFFCURVE",
"67 553 OFFCURVE",
"70 554 CURVE SMOOTH",
"73 555 OFFCURVE",
"76 555 OFFCURVE",
"78 555 CURVE SMOOTH",
"82 555 OFFCURVE",
"84 552 OFFCURVE",
"84 546 CURVE SMOOTH",
"84 522 OFFCURVE",
"85 498 OFFCURVE",
"84 474 CURVE"
);
}
);
width = 600;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2019-03-04 00:22:43 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"103 12 OFFCURVE",
"116 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"155 0 OFFCURVE",
"177 6 OFFCURVE",
"177 24 CURVE SMOOTH",
"177 30 OFFCURVE",
"175 38 OFFCURVE",
"172 48 CURVE SMOOTH",
"169 58 OFFCURVE",
"166 66 OFFCURVE",
"166 71 CURVE SMOOTH",
"166 220 LINE SMOOTH",
"166 312 OFFCURVE",
"204 400 OFFCURVE",
"265 400 CURVE SMOOTH",
"305 400 OFFCURVE",
"332 336 OFFCURVE",
"332 285 CURVE SMOOTH",
"332 250 OFFCURVE",
"326 85 OFFCURVE",
"326 35 CURVE SMOOTH",
"326 14 OFFCURVE",
"335 3 OFFCURVE",
"354 3 CURVE SMOOTH",
"377 3 OFFCURVE",
"389 11 OFFCURVE",
"389 26 CURVE SMOOTH",
"389 30 OFFCURVE",
"389 32 OFFCURVE",
"388 33 CURVE",
"388 250 LINE SMOOTH",
"388 310 OFFCURVE",
"383 352 OFFCURVE",
"374 377 CURVE SMOOTH",
"363 407 OFFCURVE",
"310 449 OFFCURVE",
"280 449 CURVE SMOOTH",
"232 449 OFFCURVE",
"193 421 OFFCURVE",
"174 394 CURVE",
"171 409 OFFCURVE",
"165 433 OFFCURVE",
"145 433 CURVE SMOOTH",
"136 433 OFFCURVE",
"128 430 OFFCURVE",
"121 423 CURVE SMOOTH",
"114 416 OFFCURVE",
"106 413 OFFCURVE",
"97 413 CURVE SMOOTH",
"69 413 OFFCURVE",
"67 415 OFFCURVE",
"67 442 CURVE SMOOTH",
"67 468 OFFCURVE",
"81 504 OFFCURVE",
"81 518 CURVE SMOOTH",
"81 529 OFFCURVE",
"71 534 OFFCURVE",
"60 534 CURVE SMOOTH",
"43 534 OFFCURVE",
"32 527 OFFCURVE",
"26 513 CURVE SMOOTH",
"20 499 OFFCURVE",
"17 473 OFFCURVE",
"17 436 CURVE SMOOTH",
"17 390 OFFCURVE",
"21 366 OFFCURVE",
"73 366 CURVE SMOOTH",
"81 366 OFFCURVE",
"87 367 OFFCURVE",
"92 370 CURVE SMOOTH",
"97 373 OFFCURVE",
"102 373 OFFCURVE",
"108 373 CURVE SMOOTH",
"117 373 OFFCURVE",
"116 293 OFFCURVE",
"116 252 CURVE SMOOTH",
"116 202 OFFCURVE",
"103 72 OFFCURVE",
"103 35 CURVE SMOOTH"
);
}
);
width = 414;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12AF;
},
{
glyphname = "kwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B0;
},
{
glyphname = "kwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B2;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B3;
},
{
glyphname = "kwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B4;
},
{
glyphname = "kwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B5;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12BE;
},
{
glyphname = "kxwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12C0;
},
{
glyphname = "kxwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12C2;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12C3;
},
{
glyphname = "kxwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12C4;
},
{
glyphname = "kxwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12C5;
},
{
glyphname = "wa-ethiopic";
lastChange = "2019-03-04 00:26:53 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"447 99 OFFCURVE",
"380 34 OFFCURVE",
"289 34 CURVE SMOOTH",
"284 34 OFFCURVE",
"281 38 OFFCURVE",
"280 47 CURVE SMOOTH",
"279 56 OFFCURVE",
"278 65 OFFCURVE",
"278 75 CURVE SMOOTH",
"278 95 OFFCURVE",
"278 144 OFFCURVE",
"279 184 CURVE SMOOTH",
"280 234 OFFCURVE",
"282 295 OFFCURVE",
"286 359 CURVE",
"286 366 OFFCURVE",
"290 373 OFFCURVE",
"299 373 CURVE SMOOTH",
"386 373 OFFCURVE",
"447 322 OFFCURVE",
"447 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 283 OFFCURVE",
"137 364 OFFCURVE",
"220 364 CURVE SMOOTH",
"225 364 OFFCURVE",
"236 366 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 317 OFFCURVE",
"235 247 OFFCURVE",
"235 197 CURVE SMOOTH",
"234 147 OFFCURVE",
"233 77 OFFCURVE",
"233 40 CURVE SMOOTH",
"233 33 OFFCURVE",
"229 30 OFFCURVE",
"221 30 CURVE SMOOTH",
"135 30 OFFCURVE",
"78 89 OFFCURVE",
"78 170 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 426 CURVE SMOOTH",
"124 418 OFFCURVE",
"20 313 OFFCURVE",
"20 174 CURVE SMOOTH",
"20 75 OFFCURVE",
"87 0 OFFCURVE",
"225 -10 CURVE",
"294 -7 LINE",
"414 8 OFFCURVE",
"498 102 OFFCURVE",
"498 186 CURVE SMOOTH",
"498 304 OFFCURVE",
"470 356 OFFCURVE",
"398 398 CURVE SMOOTH",
"362 419 OFFCURVE",
"310 430 OFFCURVE"
);
}
);
width = 522;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2019-03-04 00:29:14 +0000";
layers = (
{
components = (
{
name = "wa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"293 1 OFFCURVE",
"396 3 OFFCURVE",
"406 3 CURVE SMOOTH",
"419 3 OFFCURVE",
"434 -4 OFFCURVE",
"451 -17 CURVE SMOOTH",
"467 -30 OFFCURVE",
"476 -36 OFFCURVE",
"478 -36 CURVE SMOOTH",
"488 -36 OFFCURVE",
"493 -31 OFFCURVE",
"493 -21 CURVE SMOOTH",
"493 2 OFFCURVE",
"422 45 OFFCURVE",
"397 45 CURVE SMOOTH",
"389 45 OFFCURVE",
"381 44 OFFCURVE",
"373 42 CURVE",
"281 -7 LINE"
);
}
);
width = 522;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2019-03-04 00:30:14 +0000";
layers = (
{
components = (
{
name = _part.hu;
transform = "{1, 0, 0, 1, 10, -408}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"226 422 CURVE SMOOTH",
"105 400 OFFCURVE",
"20 313 OFFCURVE",
"20 174 CURVE SMOOTH",
"20 75 OFFCURVE",
"87 0 OFFCURVE",
"225 -10 CURVE",
"232 -10 OFFCURVE",
"235 -14 OFFCURVE",
"235 -21 CURVE SMOOTH",
"237 -77 OFFCURVE",
"238 -242 OFFCURVE",
"275 -242 CURVE SMOOTH",
"302 -242 OFFCURVE",
"310 -239 OFFCURVE",
"310 -218 CURVE SMOOTH",
"310 -215 OFFCURVE",
"308 -210 OFFCURVE",
"303 -204 CURVE SMOOTH",
"298 -198 OFFCURVE",
"295 -192 OFFCURVE",
"294 -186 CURVE SMOOTH",
"284 -141 OFFCURVE",
"283 -73 OFFCURVE",
"283 -19 CURVE SMOOTH",
"283 -11 OFFCURVE",
"287 -10 OFFCURVE",
"294 -7 CURVE",
"414 8 OFFCURVE",
"498 102 OFFCURVE",
"498 186 CURVE SMOOTH",
"498 304 OFFCURVE",
"469 344 OFFCURVE",
"398 382 CURVE SMOOTH",
"327 422 OFFCURVE",
"281 433 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"447 99 OFFCURVE",
"380 34 OFFCURVE",
"289 34 CURVE SMOOTH",
"284 34 OFFCURVE",
"281 38 OFFCURVE",
"280 47 CURVE SMOOTH",
"279 56 OFFCURVE",
"278 65 OFFCURVE",
"278 75 CURVE SMOOTH",
"278 95 OFFCURVE",
"278 144 OFFCURVE",
"279 184 CURVE SMOOTH",
"280 234 OFFCURVE",
"282 295 OFFCURVE",
"286 359 CURVE",
"286 366 OFFCURVE",
"290 373 OFFCURVE",
"299 373 CURVE SMOOTH",
"386 373 OFFCURVE",
"447 322 OFFCURVE",
"447 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 283 OFFCURVE",
"137 364 OFFCURVE",
"220 364 CURVE SMOOTH",
"231 364 OFFCURVE",
"236 364 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 317 OFFCURVE",
"235 247 OFFCURVE",
"235 197 CURVE SMOOTH",
"234 147 OFFCURVE",
"233 77 OFFCURVE",
"233 40 CURVE SMOOTH",
"233 33 OFFCURVE",
"229 30 OFFCURVE",
"221 30 CURVE SMOOTH",
"135 30 OFFCURVE",
"78 89 OFFCURVE",
"78 170 CURVE SMOOTH"
);
}
);
width = 522;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2019-03-04 00:31:40 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"226 422 CURVE SMOOTH",
"103 422 OFFCURVE",
"20 313 OFFCURVE",
"20 174 CURVE SMOOTH",
"20 75 OFFCURVE",
"87 0 OFFCURVE",
"225 -10 CURVE",
"232 -10 OFFCURVE",
"235 -14 OFFCURVE",
"235 -21 CURVE SMOOTH",
"237 -77 OFFCURVE",
"238 -242 OFFCURVE",
"275 -242 CURVE SMOOTH",
"302 -242 OFFCURVE",
"310 -239 OFFCURVE",
"310 -218 CURVE SMOOTH",
"310 -215 OFFCURVE",
"308 -210 OFFCURVE",
"303 -204 CURVE SMOOTH",
"298 -198 OFFCURVE",
"295 -192 OFFCURVE",
"294 -186 CURVE SMOOTH",
"284 -141 OFFCURVE",
"283 -73 OFFCURVE",
"283 -19 CURVE SMOOTH",
"283 -11 OFFCURVE",
"287 -10 OFFCURVE",
"294 -7 CURVE",
"414 8 OFFCURVE",
"498 102 OFFCURVE",
"498 186 CURVE SMOOTH",
"498 304 OFFCURVE",
"466 336 OFFCURVE",
"404 389 CURVE SMOOTH",
"355 431 OFFCURVE",
"332 422 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"447 99 OFFCURVE",
"380 34 OFFCURVE",
"289 34 CURVE SMOOTH",
"284 34 OFFCURVE",
"281 38 OFFCURVE",
"280 47 CURVE SMOOTH",
"279 56 OFFCURVE",
"278 65 OFFCURVE",
"278 75 CURVE SMOOTH",
"278 95 OFFCURVE",
"278 144 OFFCURVE",
"279 184 CURVE SMOOTH",
"280 234 OFFCURVE",
"282 295 OFFCURVE",
"286 359 CURVE",
"286 366 OFFCURVE",
"290 373 OFFCURVE",
"299 373 CURVE SMOOTH",
"386 373 OFFCURVE",
"447 322 OFFCURVE",
"447 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 283 OFFCURVE",
"137 364 OFFCURVE",
"220 364 CURVE SMOOTH",
"231 364 OFFCURVE",
"236 364 OFFCURVE",
"236 353 CURVE SMOOTH",
"236 317 OFFCURVE",
"235 247 OFFCURVE",
"235 197 CURVE SMOOTH",
"234 147 OFFCURVE",
"233 77 OFFCURVE",
"233 40 CURVE SMOOTH",
"233 33 OFFCURVE",
"229 30 OFFCURVE",
"221 30 CURVE SMOOTH",
"135 30 OFFCURVE",
"78 89 OFFCURVE",
"78 170 CURVE SMOOTH"
);
}
);
width = 522;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2019-03-04 00:32:05 +0000";
layers = (
{
components = (
{
name = "waa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 20, 30}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 522;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2019-03-04 00:32:23 +0000";
layers = (
{
components = (
{
name = "wa-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 588;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2019-03-04 00:33:21 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"220 422 LINE SMOOTH",
"182 422 OFFCURVE",
"150 407 OFFCURVE",
"123 388 CURVE SMOOTH",
"57 342 OFFCURVE",
"24 304 OFFCURVE",
"24 186 CURVE SMOOTH",
"24 102 OFFCURVE",
"108 8 OFFCURVE",
"228 -7 CURVE",
"235 -10 OFFCURVE",
"239 -11 OFFCURVE",
"239 -19 CURVE SMOOTH",
"239 -73 OFFCURVE",
"113 -141 OFFCURVE",
"68 -186 CURVE SMOOTH",
"62 -192 OFFCURVE",
"52 -205 OFFCURVE",
"52 -218 CURVE SMOOTH",
"52 -239 OFFCURVE",
"60 -249 OFFCURVE",
"87 -242 CURVE SMOOTH",
"124 -232 OFFCURVE",
"285 -77 OFFCURVE",
"287 -21 CURVE SMOOTH",
"287 -14 OFFCURVE",
"290 -10 OFFCURVE",
"297 -10 CURVE",
"435 0 OFFCURVE",
"502 75 OFFCURVE",
"502 174 CURVE SMOOTH",
"502 313 OFFCURVE",
"417 400 OFFCURVE",
"296 422 CURVE"
);
},
{
closed = 1;
nodes = (
"75 322 OFFCURVE",
"136 373 OFFCURVE",
"223 373 CURVE SMOOTH",
"232 373 OFFCURVE",
"236 366 OFFCURVE",
"236 359 CURVE",
"240 295 OFFCURVE",
"242 234 OFFCURVE",
"243 184 CURVE SMOOTH",
"244 144 OFFCURVE",
"244 95 OFFCURVE",
"244 75 CURVE SMOOTH",
"244 65 OFFCURVE",
"243 56 OFFCURVE",
"242 47 CURVE SMOOTH",
"241 38 OFFCURVE",
"238 34 OFFCURVE",
"233 34 CURVE SMOOTH",
"142 34 OFFCURVE",
"75 99 OFFCURVE",
"75 191 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"444 89 OFFCURVE",
"387 30 OFFCURVE",
"301 30 CURVE SMOOTH",
"293 30 OFFCURVE",
"289 33 OFFCURVE",
"289 40 CURVE SMOOTH",
"289 77 OFFCURVE",
"288 147 OFFCURVE",
"287 197 CURVE SMOOTH",
"287 247 OFFCURVE",
"286 317 OFFCURVE",
"286 353 CURVE SMOOTH",
"286 364 OFFCURVE",
"291 364 OFFCURVE",
"302 364 CURVE SMOOTH",
"385 364 OFFCURVE",
"444 283 OFFCURVE",
"444 170 CURVE SMOOTH"
);
}
);
width = 522;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2019-03-04 00:34:20 +0000";
layers = (
{
components = (
{
name = "wo-ethiopic";
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"123 213 OFFCURVE",
"112 209 OFFCURVE",
"102 209 CURVE SMOOTH",
"89 209 OFFCURVE",
"74 216 OFFCURVE",
"57 229 CURVE SMOOTH",
"41 242 OFFCURVE",
"32 248 OFFCURVE",
"30 248 CURVE SMOOTH",
"20 248 OFFCURVE",
"15 243 OFFCURVE",
"15 233 CURVE SMOOTH",
"15 210 OFFCURVE",
"86 167 OFFCURVE",
"111 167 CURVE SMOOTH",
"119 167 OFFCURVE",
"127 168 OFFCURVE",
"135 170 CURVE",
"135 221 LINE"
);
}
);
width = 607;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2019-03-04 00:34:46 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2019-03-04 01:58:01 +0000";
layers = (
{
components = (
{
name = _part.topbar;
transform = "{1, 0, 0, 1, 0, -336}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"97 398 OFFCURVE",
"91 403 OFFCURVE",
"80 408 CURVE",
"71 413 OFFCURVE",
"63 415 OFFCURVE",
"55 415 CURVE SMOOTH",
"47 415 OFFCURVE",
"39 413 OFFCURVE",
"30 408 CURVE",
"30 41 LINE SMOOTH",
"30 10 OFFCURVE",
"46 -6 OFFCURVE",
"79 -6 CURVE SMOOTH",
"84 -6 OFFCURVE",
"87 -3 OFFCURVE",
"90 2 CURVE",
"84 27 OFFCURVE",
"81 47 OFFCURVE",
"81 62 CURVE SMOOTH",
"81 283 LINE SMOOTH",
"81 295 OFFCURVE",
"84 313 OFFCURVE",
"89 337 CURVE SMOOTH",
"94 361 OFFCURVE",
"97 379 OFFCURVE",
"97 391 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 379 OFFCURVE",
"283 361 OFFCURVE",
"288 337 CURVE SMOOTH",
"293 313 OFFCURVE",
"296 295 OFFCURVE",
"296 283 CURVE SMOOTH",
"296 62 LINE SMOOTH",
"296 47 OFFCURVE",
"293 27 OFFCURVE",
"287 2 CURVE",
"290 -3 OFFCURVE",
"293 -6 OFFCURVE",
"298 -6 CURVE SMOOTH",
"331 -6 OFFCURVE",
"347 10 OFFCURVE",
"347 41 CURVE SMOOTH",
"347 408 LINE",
"338 413 OFFCURVE",
"330 415 OFFCURVE",
"322 415 CURVE SMOOTH",
"314 415 OFFCURVE",
"306 413 OFFCURVE",
"297 408 CURVE",
"286 403 OFFCURVE",
"280 398 OFFCURVE",
"280 391 CURVE SMOOTH"
);
}
);
width = 379;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2019-03-04 01:58:31 +0000";
layers = (
{
components = (
{
name = "za-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 447;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2019-03-04 01:59:01 +0000";
layers = (
{
components = (
{
name = "za-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 40, -170}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 431;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2019-03-04 02:00:26 +0000";
layers = (
{
components = (
{
name = _part.topbar;
transform = "{1, 0, 0, 1, 0, -336}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"97 398 OFFCURVE",
"91 403 OFFCURVE",
"80 408 CURVE",
"71 413 OFFCURVE",
"63 415 OFFCURVE",
"55 415 CURVE SMOOTH",
"47 415 OFFCURVE",
"39 413 OFFCURVE",
"30 408 CURVE",
"30 41 LINE SMOOTH",
"30 10 OFFCURVE",
"46 -6 OFFCURVE",
"79 -6 CURVE SMOOTH",
"84 -6 OFFCURVE",
"87 -3 OFFCURVE",
"90 2 CURVE",
"84 27 OFFCURVE",
"81 47 OFFCURVE",
"81 62 CURVE SMOOTH",
"81 283 LINE SMOOTH",
"81 295 OFFCURVE",
"84 313 OFFCURVE",
"89 337 CURVE SMOOTH",
"94 361 OFFCURVE",
"97 379 OFFCURVE",
"97 391 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"280 379 OFFCURVE",
"283 361 OFFCURVE",
"288 337 CURVE SMOOTH",
"293 313 OFFCURVE",
"296 295 OFFCURVE",
"296 283 CURVE SMOOTH",
"296 -208 LINE SMOOTH",
"296 -223 OFFCURVE",
"293 -243 OFFCURVE",
"287 -268 CURVE",
"290 -273 OFFCURVE",
"293 -276 OFFCURVE",
"298 -276 CURVE SMOOTH",
"331 -276 OFFCURVE",
"347 -260 OFFCURVE",
"347 -229 CURVE SMOOTH",
"347 408 LINE",
"338 413 OFFCURVE",
"330 415 OFFCURVE",
"322 415 CURVE SMOOTH",
"314 415 OFFCURVE",
"306 413 OFFCURVE",
"297 408 CURVE",
"286 403 OFFCURVE",
"280 398 OFFCURVE",
"280 391 CURVE SMOOTH"
);
}
);
width = 379;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2019-03-04 02:01:10 +0000";
layers = (
{
components = (
{
name = "za-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 60, 250}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 423;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2019-03-04 02:02:31 +0000";
layers = (
{
components = (
{
name = "za-ethiopic";
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"134 410 LINE",
"126 412 OFFCURVE",
"118 413 OFFCURVE",
"110 413 CURVE SMOOTH",
"85 413 OFFCURVE",
"14 370 OFFCURVE",
"14 347 CURVE SMOOTH",
"14 337 OFFCURVE",
"19 332 OFFCURVE",
"29 332 CURVE SMOOTH",
"31 332 OFFCURVE",
"40 338 OFFCURVE",
"56 351 CURVE SMOOTH",
"73 364 OFFCURVE",
"88 371 OFFCURVE",
"101 371 CURVE SMOOTH",
"111 371 OFFCURVE",
"122 367 OFFCURVE",
"134 359 CURVE"
);
}
);
width = 497;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2019-03-04 02:02:44 +0000";
layers = (
{
components = (
{
name = "zaa-ethiopic";
transform = "{-1, 0, 0, 1, 379, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 379;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2019-03-04 02:03:07 +0000";
layers = (
{
components = (
{
name = "zaa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"225 -276 LINE",
"360 -276 LINE",
"360 -230 LINE",
"225 -230 LINE"
);
}
);
width = 379;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2019-03-04 02:04:34 +0000";
layers = (
{
components = (
{
name = "za-ethiopic";
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"137 411 LINE",
"129 413 OFFCURVE",
"121 414 OFFCURVE",
"113 414 CURVE SMOOTH",
"88 414 OFFCURVE",
"17 371 OFFCURVE",
"17 348 CURVE SMOOTH",
"17 338 OFFCURVE",
"22 333 OFFCURVE",
"32 333 CURVE SMOOTH",
"34 333 OFFCURVE",
"43 339 OFFCURVE",
"59 352 CURVE SMOOTH",
"76 365 OFFCURVE",
"91 372 OFFCURVE",
"104 372 CURVE SMOOTH",
"114 372 OFFCURVE",
"125 368 OFFCURVE",
"137 360 CURVE"
);
},
{
closed = 1;
nodes = (
"382 368 OFFCURVE",
"393 372 OFFCURVE",
"403 372 CURVE SMOOTH",
"416 372 OFFCURVE",
"431 365 OFFCURVE",
"448 352 CURVE SMOOTH",
"464 339 OFFCURVE",
"473 333 OFFCURVE",
"475 333 CURVE SMOOTH",
"485 333 OFFCURVE",
"490 338 OFFCURVE",
"490 348 CURVE SMOOTH",
"490 371 OFFCURVE",
"419 414 OFFCURVE",
"394 414 CURVE SMOOTH",
"386 414 OFFCURVE",
"378 413 OFFCURVE",
"370 411 CURVE",
"370 360 LINE"
);
}
);
width = 507;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2019-03-04 02:05:08 +0000";
layers = (
{
components = (
{
name = "zu-ethiopic";
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"136 411 LINE",
"128 413 OFFCURVE",
"120 414 OFFCURVE",
"112 414 CURVE SMOOTH",
"87 414 OFFCURVE",
"16 371 OFFCURVE",
"16 348 CURVE SMOOTH",
"16 338 OFFCURVE",
"21 333 OFFCURVE",
"31 333 CURVE SMOOTH",
"33 333 OFFCURVE",
"42 339 OFFCURVE",
"58 352 CURVE SMOOTH",
"75 365 OFFCURVE",
"90 372 OFFCURVE",
"103 372 CURVE SMOOTH",
"113 372 OFFCURVE",
"124 368 OFFCURVE",
"136 360 CURVE"
);
},
{
closed = 1;
nodes = (
"381 368 OFFCURVE",
"392 372 OFFCURVE",
"402 372 CURVE SMOOTH",
"415 372 OFFCURVE",
"430 365 OFFCURVE",
"447 352 CURVE SMOOTH",
"463 339 OFFCURVE",
"472 333 OFFCURVE",
"474 333 CURVE SMOOTH",
"484 333 OFFCURVE",
"489 338 OFFCURVE",
"489 348 CURVE SMOOTH",
"489 371 OFFCURVE",
"418 414 OFFCURVE",
"393 414 CURVE SMOOTH",
"385 414 OFFCURVE",
"377 413 OFFCURVE",
"369 411 CURVE",
"369 360 LINE"
);
}
);
width = 509;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2019-03-04 02:05:39 +0000";
layers = (
{
components = (
{
name = "zi-ethiopic";
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 411 LINE",
"124 413 OFFCURVE",
"116 414 OFFCURVE",
"108 414 CURVE SMOOTH",
"83 414 OFFCURVE",
"12 371 OFFCURVE",
"12 348 CURVE SMOOTH",
"12 338 OFFCURVE",
"17 333 OFFCURVE",
"27 333 CURVE SMOOTH",
"29 333 OFFCURVE",
"38 339 OFFCURVE",
"54 352 CURVE SMOOTH",
"71 365 OFFCURVE",
"86 372 OFFCURVE",
"99 372 CURVE SMOOTH",
"109 372 OFFCURVE",
"120 368 OFFCURVE",
"132 360 CURVE"
);
},
{
closed = 1;
nodes = (
"377 368 OFFCURVE",
"388 372 OFFCURVE",
"398 372 CURVE SMOOTH",
"411 372 OFFCURVE",
"426 365 OFFCURVE",
"443 352 CURVE SMOOTH",
"459 339 OFFCURVE",
"468 333 OFFCURVE",
"470 333 CURVE SMOOTH",
"480 333 OFFCURVE",
"485 338 OFFCURVE",
"485 348 CURVE SMOOTH",
"485 371 OFFCURVE",
"414 414 OFFCURVE",
"389 414 CURVE SMOOTH",
"381 414 OFFCURVE",
"373 413 OFFCURVE",
"365 411 CURVE",
"365 360 LINE"
);
}
);
width = 497;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2019-03-04 02:06:33 +0000";
layers = (
{
components = (
{
name = "zaa-ethiopic";
transform = "{1, 0, 0, 1, 65, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"135 411 LINE",
"127 413 OFFCURVE",
"119 414 OFFCURVE",
"111 414 CURVE SMOOTH",
"86 414 OFFCURVE",
"15 371 OFFCURVE",
"15 348 CURVE SMOOTH",
"15 338 OFFCURVE",
"20 333 OFFCURVE",
"30 333 CURVE SMOOTH",
"32 333 OFFCURVE",
"41 339 OFFCURVE",
"57 352 CURVE SMOOTH",
"74 365 OFFCURVE",
"89 372 OFFCURVE",
"102 372 CURVE SMOOTH",
"112 372 OFFCURVE",
"123 368 OFFCURVE",
"135 360 CURVE"
);
},
{
closed = 1;
nodes = (
"380 368 OFFCURVE",
"391 372 OFFCURVE",
"401 372 CURVE SMOOTH",
"414 372 OFFCURVE",
"429 365 OFFCURVE",
"446 352 CURVE SMOOTH",
"462 339 OFFCURVE",
"471 333 OFFCURVE",
"473 333 CURVE SMOOTH",
"483 333 OFFCURVE",
"488 338 OFFCURVE",
"488 348 CURVE SMOOTH",
"488 371 OFFCURVE",
"417 414 OFFCURVE",
"392 414 CURVE SMOOTH",
"384 414 OFFCURVE",
"376 413 OFFCURVE",
"368 411 CURVE",
"368 360 LINE"
);
}
);
width = 502;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2019-03-04 02:07:21 +0000";
layers = (
{
components = (
{
name = "zee-ethiopic";
transform = "{1, 0, 0, 1, 62, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"136 411 LINE",
"128 413 OFFCURVE",
"120 414 OFFCURVE",
"112 414 CURVE SMOOTH",
"87 414 OFFCURVE",
"16 371 OFFCURVE",
"16 348 CURVE SMOOTH",
"16 338 OFFCURVE",
"21 333 OFFCURVE",
"31 333 CURVE SMOOTH",
"33 333 OFFCURVE",
"42 339 OFFCURVE",
"58 352 CURVE SMOOTH",
"75 365 OFFCURVE",
"90 372 OFFCURVE",
"103 372 CURVE SMOOTH",
"113 372 OFFCURVE",
"124 368 OFFCURVE",
"136 360 CURVE"
);
},
{
closed = 1;
nodes = (
"381 368 OFFCURVE",
"392 372 OFFCURVE",
"402 372 CURVE SMOOTH",
"415 372 OFFCURVE",
"430 365 OFFCURVE",
"447 352 CURVE SMOOTH",
"463 339 OFFCURVE",
"472 333 OFFCURVE",
"474 333 CURVE SMOOTH",
"484 333 OFFCURVE",
"489 338 OFFCURVE",
"489 348 CURVE SMOOTH",
"489 371 OFFCURVE",
"418 414 OFFCURVE",
"393 414 CURVE SMOOTH",
"385 414 OFFCURVE",
"377 413 OFFCURVE",
"369 411 CURVE",
"369 360 LINE"
);
}
);
width = 503;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2019-03-04 02:08:14 +0000";
layers = (
{
components = (
{
name = "ze-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"132 501 LINE",
"124 503 OFFCURVE",
"116 504 OFFCURVE",
"108 504 CURVE SMOOTH",
"83 504 OFFCURVE",
"12 461 OFFCURVE",
"12 438 CURVE SMOOTH",
"12 428 OFFCURVE",
"17 423 OFFCURVE",
"27 423 CURVE SMOOTH",
"29 423 OFFCURVE",
"38 429 OFFCURVE",
"54 442 CURVE SMOOTH",
"71 455 OFFCURVE",
"86 462 OFFCURVE",
"99 462 CURVE SMOOTH",
"109 462 OFFCURVE",
"120 458 OFFCURVE",
"132 450 CURVE"
);
},
{
closed = 1;
nodes = (
"377 368 OFFCURVE",
"388 372 OFFCURVE",
"398 372 CURVE SMOOTH",
"411 372 OFFCURVE",
"426 365 OFFCURVE",
"443 352 CURVE SMOOTH",
"459 339 OFFCURVE",
"468 333 OFFCURVE",
"470 333 CURVE SMOOTH",
"480 333 OFFCURVE",
"485 338 OFFCURVE",
"485 348 CURVE SMOOTH",
"485 371 OFFCURVE",
"414 414 OFFCURVE",
"389 414 CURVE SMOOTH",
"381 414 OFFCURVE",
"373 413 OFFCURVE",
"365 411 CURVE",
"365 360 LINE"
);
},
{
closed = 1;
nodes = (
"81 391 LINE",
"100 391 LINE",
"100 463 LINE",
"81 463 LINE"
);
}
);
width = 497;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2019-03-04 02:08:55 +0000";
layers = (
{
components = (
{
name = "zo-ethiopic";
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"137 411 LINE",
"129 413 OFFCURVE",
"121 414 OFFCURVE",
"113 414 CURVE SMOOTH",
"88 414 OFFCURVE",
"17 371 OFFCURVE",
"17 348 CURVE SMOOTH",
"17 338 OFFCURVE",
"22 333 OFFCURVE",
"32 333 CURVE SMOOTH",
"34 333 OFFCURVE",
"43 339 OFFCURVE",
"59 352 CURVE SMOOTH",
"76 365 OFFCURVE",
"91 372 OFFCURVE",
"104 372 CURVE SMOOTH",
"114 372 OFFCURVE",
"125 368 OFFCURVE",
"137 360 CURVE"
);
},
{
closed = 1;
nodes = (
"382 368 OFFCURVE",
"393 372 OFFCURVE",
"403 372 CURVE SMOOTH",
"416 372 OFFCURVE",
"431 365 OFFCURVE",
"448 352 CURVE SMOOTH",
"464 339 OFFCURVE",
"473 333 OFFCURVE",
"475 333 CURVE SMOOTH",
"485 333 OFFCURVE",
"490 338 OFFCURVE",
"490 348 CURVE SMOOTH",
"490 371 OFFCURVE",
"419 414 OFFCURVE",
"394 414 CURVE SMOOTH",
"386 414 OFFCURVE",
"378 413 OFFCURVE",
"370 411 CURVE",
"370 360 LINE"
);
}
);
width = 507;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2019-03-04 02:09:23 +0000";
layers = (
{
components = (
{
name = "zwa-ethiopic";
transform = "{1, 0, 0, 1, 68, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"139 411 LINE",
"131 413 OFFCURVE",
"123 414 OFFCURVE",
"115 414 CURVE SMOOTH",
"90 414 OFFCURVE",
"19 371 OFFCURVE",
"19 348 CURVE SMOOTH",
"19 338 OFFCURVE",
"24 333 OFFCURVE",
"34 333 CURVE SMOOTH",
"36 333 OFFCURVE",
"45 339 OFFCURVE",
"61 352 CURVE SMOOTH",
"78 365 OFFCURVE",
"93 372 OFFCURVE",
"106 372 CURVE SMOOTH",
"116 372 OFFCURVE",
"127 368 OFFCURVE",
"139 360 CURVE"
);
},
{
closed = 1;
nodes = (
"384 368 OFFCURVE",
"395 372 OFFCURVE",
"405 372 CURVE SMOOTH",
"418 372 OFFCURVE",
"433 365 OFFCURVE",
"450 352 CURVE SMOOTH",
"466 339 OFFCURVE",
"475 333 OFFCURVE",
"477 333 CURVE SMOOTH",
"487 333 OFFCURVE",
"492 338 OFFCURVE",
"492 348 CURVE SMOOTH",
"492 371 OFFCURVE",
"421 414 OFFCURVE",
"396 414 CURVE SMOOTH",
"388 414 OFFCURVE",
"380 413 OFFCURVE",
"372 411 CURVE",
"372 360 LINE"
);
}
);
width = 507;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2019-03-04 02:26:30 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 301 OFFCURVE",
"308 374 OFFCURVE",
"239 417 CURVE SMOOTH",
"216 432 OFFCURVE",
"198 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"136 439 OFFCURVE",
"115 405 OFFCURVE",
"83 338 CURVE SMOOTH",
"58 283 OFFCURVE",
"45 228 OFFCURVE",
"45 171 CURVE SMOOTH",
"45 114 OFFCURVE",
"56 68 OFFCURVE",
"78 33 CURVE SMOOTH",
"105 -9 OFFCURVE",
"125 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"232 -30 OFFCURVE",
"274 -4 OFFCURVE",
"304 47 CURVE SMOOTH",
"329 90 OFFCURVE",
"342 140 OFFCURVE",
"342 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 153 OFFCURVE",
"286 112 OFFCURVE",
"270 77 CURVE SMOOTH",
"249 32 OFFCURVE",
"219 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"142 9 OFFCURVE",
"115 29 OFFCURVE",
"98 68 CURVE SMOOTH",
"86 97 OFFCURVE",
"80 132 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 221 OFFCURVE",
"89 264 OFFCURVE",
"106 305 CURVE SMOOTH",
"129 358 OFFCURVE",
"160 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"235 384 OFFCURVE",
"260 360 OFFCURVE",
"277 313 CURVE SMOOTH",
"288 279 OFFCURVE",
"294 241 OFFCURVE",
"294 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 -246 OFFCURVE",
"103 -240 OFFCURVE",
"100 -233 CURVE SMOOTH",
"97 -226 OFFCURVE",
"95 -222 OFFCURVE",
"95 -220 CURVE",
"86 -179 OFFCURVE",
"81 -117 OFFCURVE",
"79 -35 CURVE",
"80 -40 OFFCURVE",
"80 24 OFFCURVE",
"80 155 CURVE SMOOTH",
"80 236 OFFCURVE",
"84 300 OFFCURVE",
"92 345 CURVE",
"45 171 LINE",
"43 -95 LINE SMOOTH",
"42 -216 OFFCURVE",
"47 -276 OFFCURVE",
"76 -276 CURVE SMOOTH",
"95 -276 OFFCURVE",
"104 -267 OFFCURVE",
"104 -250 CURVE SMOOTH"
);
}
);
width = 367;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2019-03-04 02:27:03 +0000";
layers = (
{
components = (
{
name = "ya-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, -180, -331}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2019-03-04 02:19:26 +0000";
layers = (
{
components = (
{
name = "ya-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"124 -60 LINE",
"122 -68 OFFCURVE",
"121 -76 OFFCURVE",
"121 -84 CURVE SMOOTH",
"121 -109 OFFCURVE",
"162 -181 OFFCURVE",
"185 -181 CURVE SMOOTH",
"195 -181 OFFCURVE",
"201 -177 OFFCURVE",
"201 -167 CURVE SMOOTH",
"201 -165 OFFCURVE",
"194 -156 OFFCURVE",
"182 -139 CURVE SMOOTH",
"170 -122 OFFCURVE",
"163 -107 OFFCURVE",
"163 -94 CURVE SMOOTH",
"163 -84 OFFCURVE",
"167 -73 OFFCURVE",
"175 -61 CURVE"
);
},
{
closed = 1;
nodes = (
"160 -163 LINE",
"166 -166 OFFCURVE",
"176 -180 OFFCURVE",
"184 -181 CURVE SMOOTH",
"207 -184 OFFCURVE",
"280 -137 OFFCURVE",
"278 -115 CURVE SMOOTH",
"277 -106 OFFCURVE",
"273 -102 OFFCURVE",
"265 -99 CURVE SMOOTH",
"262 -98 OFFCURVE",
"253 -106 OFFCURVE",
"236 -118 CURVE SMOOTH",
"219 -130 OFFCURVE",
"205 -139 OFFCURVE",
"191 -139 CURVE SMOOTH",
"181 -139 OFFCURVE",
"170 -135 OFFCURVE",
"159 -126 CURVE"
);
},
{
closed = 1;
nodes = (
"72 -94 LINE",
"128 -94 LINE",
"128 -78 LINE",
"72 -78 LINE"
);
}
);
width = 367;
}
);
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2019-03-04 02:25:00 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"342 301 OFFCURVE",
"308 374 OFFCURVE",
"239 417 CURVE SMOOTH",
"216 432 OFFCURVE",
"198 439 OFFCURVE",
"185 439 CURVE SMOOTH",
"136 439 OFFCURVE",
"115 405 OFFCURVE",
"83 338 CURVE SMOOTH",
"58 283 OFFCURVE",
"45 228 OFFCURVE",
"45 171 CURVE SMOOTH",
"45 114 OFFCURVE",
"56 68 OFFCURVE",
"78 33 CURVE",
"105 -9 OFFCURVE",
"125 -30 OFFCURVE",
"179 -30 CURVE SMOOTH",
"232 -30 OFFCURVE",
"274 -4 OFFCURVE",
"304 47 CURVE SMOOTH",
"329 90 OFFCURVE",
"342 140 OFFCURVE",
"342 197 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294 153 OFFCURVE",
"286 112 OFFCURVE",
"270 77 CURVE SMOOTH",
"249 32 OFFCURVE",
"219 9 OFFCURVE",
"179 9 CURVE SMOOTH",
"142 9 OFFCURVE",
"115 29 OFFCURVE",
"98 68 CURVE SMOOTH",
"86 97 OFFCURVE",
"80 132 OFFCURVE",
"80 174 CURVE SMOOTH",
"80 221 OFFCURVE",
"89 264 OFFCURVE",
"106 305 CURVE SMOOTH",
"129 358 OFFCURVE",
"160 384 OFFCURVE",
"200 384 CURVE SMOOTH",
"235 384 OFFCURVE",
"260 360 OFFCURVE",
"277 313 CURVE SMOOTH",
"288 279 OFFCURVE",
"294 241 OFFCURVE",
"294 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 24 OFFCURVE",
"104 3 OFFCURVE",
"106 1 CURVE",
"182 -93 OFFCURVE",
"193 -162 OFFCURVE",
"139 -205 CURVE SMOOTH",
"104 -233 OFFCURVE",
"63 -242 OFFCURVE",
"15 -233 CURVE",
"13 -234 OFFCURVE",
"11 -236 OFFCURVE",
"7 -239 CURVE SMOOTH",
"-4 -248 OFFCURVE",
"-6 -257 OFFCURVE",
"1 -265 CURVE SMOOTH",
"13 -280 OFFCURVE",
"43 -280 OFFCURVE",
"93 -267 CURVE SMOOTH",
"137 -255 OFFCURVE",
"168 -243 OFFCURVE",
"186 -229 CURVE SMOOTH",
"217 -203 OFFCURVE",
"232 -167 OFFCURVE",
"227 -121 CURVE SMOOTH",
"222 -82 OFFCURVE",
"206 -45 OFFCURVE",
"179 -11 CURVE"
);
}
);
width = 367;
}
);
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2019-03-04 02:28:10 +0000";
layers = (
{
components = (
{
name = "ya-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -130, 40}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"62 -78 LINE",
"165 -78 LINE",
"165 -62 LINE",
"62 -62 LINE"
);
}
);
width = 367;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2019-03-04 02:34:02 +0000";
layers = (
{
components = (
{
name = e;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"44 -180 OFFCURVE",
"53 -189 OFFCURVE",
"72 -189 CURVE SMOOTH",
"101 -189 OFFCURVE",
"106 -129 OFFCURVE",
"105 -8 CURVE",
"69 52 LINE",
"67 -30 OFFCURVE",
"62 -92 OFFCURVE",
"53 -133 CURVE",
"53 -135 OFFCURVE",
"51 -139 OFFCURVE",
"48 -146 CURVE SMOOTH",
"45 -153 OFFCURVE",
"44 -159 OFFCURVE",
"44 -163 CURVE SMOOTH"
);
}
);
width = 338;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2019-03-04 02:35:10 +0000";
layers = (
{
components = (
{
name = "ya-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 453;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2019-03-04 02:36:07 +0000";
layers = (
{
components = (
{
name = "yo-ethiopic";
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"123 193 OFFCURVE",
"112 189 OFFCURVE",
"102 189 CURVE SMOOTH",
"89 189 OFFCURVE",
"74 196 OFFCURVE",
"57 209 CURVE SMOOTH",
"41 222 OFFCURVE",
"32 228 OFFCURVE",
"30 228 CURVE SMOOTH",
"20 228 OFFCURVE",
"15 223 OFFCURVE",
"15 213 CURVE SMOOTH",
"15 190 OFFCURVE",
"86 147 OFFCURVE",
"111 147 CURVE SMOOTH",
"119 147 OFFCURVE",
"127 148 OFFCURVE",
"135 150 CURVE",
"135 201 LINE"
);
}
);
width = 509;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2019-03-04 03:02:33 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"74 18 OFFCURVE",
"108 40 OFFCURVE",
"134 40 CURVE SMOOTH",
"160 40 OFFCURVE",
"184 31 OFFCURVE",
"206 14 CURVE SMOOTH",
"219 4 OFFCURVE",
"234 -12 OFFCURVE",
"250 -33 CURVE SMOOTH",
"263 -50 OFFCURVE",
"271 -58 OFFCURVE",
"275 -58 CURVE SMOOTH",
"290 -58 OFFCURVE",
"298 -49 OFFCURVE",
"298 -30 CURVE SMOOTH",
"298 -1 OFFCURVE",
"278 26 OFFCURVE",
"239 49 CURVE SMOOTH",
"204 70 OFFCURVE",
"170 81 OFFCURVE",
"139 81 CURVE SMOOTH",
"101 81 OFFCURVE",
"51 53 OFFCURVE",
"20 22 CURVE SMOOTH",
"7 9 OFFCURVE",
"17 -9 OFFCURVE",
"35 -9 CURVE SMOOTH",
"48 -9 LINE SMOOTH",
"52 -9 OFFCURVE",
"56 -7 OFFCURVE",
"59 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 255 OFFCURVE",
"241 230 OFFCURVE",
"224 209 CURVE SMOOTH",
"206 186 OFFCURVE",
"183 174 OFFCURVE",
"156 174 CURVE SMOOTH",
"117 174 OFFCURVE",
"90 203 OFFCURVE",
"90 242 CURVE SMOOTH",
"90 272 OFFCURVE",
"97 301 OFFCURVE",
"111 329 CURVE SMOOTH",
"128 362 OFFCURVE",
"149 379 OFFCURVE",
"176 379 CURVE SMOOTH",
"220 379 OFFCURVE",
"249 330 OFFCURVE",
"249 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 64 LINE",
"83 83 OFFCURVE",
"78 110 OFFCURVE",
"78 144 CURVE SMOOTH",
"78 149 OFFCURVE",
"82 152 OFFCURVE",
"91 152 CURVE SMOOTH",
"96 152 OFFCURVE",
"105 149 OFFCURVE",
"118 142 CURVE SMOOTH",
"131 135 OFFCURVE",
"139 132 OFFCURVE",
"143 132 CURVE SMOOTH",
"227 132 OFFCURVE",
"306 203 OFFCURVE",
"306 286 CURVE SMOOTH",
"306 350 OFFCURVE",
"208 431 OFFCURVE",
"144 431 CURVE SMOOTH",
"107 431 OFFCURVE",
"76 394 OFFCURVE",
"52 319 CURVE SMOOTH",
"34 262 OFFCURVE",
"25 208 OFFCURVE",
"25 158 CURVE SMOOTH",
"25 111 OFFCURVE",
"23 62 OFFCURVE",
"39 34 CURVE"
);
}
);
width = 338;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2019-03-04 03:04:25 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, -29, -170}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 364;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2019-03-04 03:04:06 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, -1, 19, 163}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 410;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2019-03-04 03:06:01 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"227 -265 OFFCURVE",
"236 -274 OFFCURVE",
"255 -274 CURVE SMOOTH",
"284 -274 OFFCURVE",
"298 -214 OFFCURVE",
"298 -93 CURVE SMOOTH",
"298 -29 LINE SMOOTH",
"298 -16 OFFCURVE",
"291 -9 OFFCURVE",
"276 -8 CURVE",
"256 -8 OFFCURVE",
"252 -17 OFFCURVE",
"252 -33 CURVE SMOOTH",
"252 -116 OFFCURVE",
"245 -177 OFFCURVE",
"236 -218 CURVE",
"236 -220 OFFCURVE",
"234 -224 OFFCURVE",
"231 -231 CURVE SMOOTH",
"228 -238 OFFCURVE",
"227 -244 OFFCURVE",
"227 -248 CURVE SMOOTH"
);
}
);
width = 338;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2019-03-04 03:06:44 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -51, 138}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 338;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2019-03-04 03:08:09 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, 1, 10, 60}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 402;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2019-03-04 03:09:29 +0000";
layers = (
{
components = (
{
name = "da-ethiopic";
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"27 16 LINE",
"24 -9 LINE",
"11 -185 LINE",
"11 -195 LINE SMOOTH",
"11 -230 OFFCURVE",
"14 -254 OFFCURVE",
"21 -267 CURVE",
"26 -270 OFFCURVE",
"34 -271 OFFCURVE",
"43 -271 CURVE SMOOTH",
"50 -271 OFFCURVE",
"55 -271 OFFCURVE",
"58 -270 CURVE",
"65 -265 OFFCURVE",
"69 -261 OFFCURVE",
"72 -258 CURVE",
"61 -215 OFFCURVE",
"56 -190 OFFCURVE",
"56 -182 CURVE SMOOTH",
"56 -176 OFFCURVE",
"56 -168 OFFCURVE",
"58 -157 CURVE",
"59 -147 OFFCURVE",
"75 2 OFFCURVE",
"68 4 CURVE SMOOTH"
);
}
);
width = 350;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2019-03-04 03:10:02 +0000";
layers = (
{
components = (
{
name = "daa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"178 -274 LINE",
"300 -274 LINE",
"300 -245 LINE",
"178 -245 LINE"
);
}
);
width = 338;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2019-03-04 03:44:37 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"259 137 OFFCURVE",
"264 154 OFFCURVE",
"264 250 CURVE SMOOTH",
"264 306 OFFCURVE",
"255 345 OFFCURVE",
"241 374 CURVE SMOOTH",
"226 405 OFFCURVE",
"199 436 OFFCURVE",
"167 434 CURVE SMOOTH",
"113 430 OFFCURVE",
"63 418 OFFCURVE",
"18 401 CURVE",
"18 378 OFFCURVE",
"32 355 OFFCURVE",
"53 355 CURVE SMOOTH",
"73 355 OFFCURVE",
"101 360 OFFCURVE",
"137 372 CURVE SMOOTH",
"149 376 OFFCURVE",
"167 381 OFFCURVE",
"170 381 CURVE SMOOTH",
"198 381 OFFCURVE",
"209 340 OFFCURVE",
"209 249 CURVE SMOOTH",
"209 164 OFFCURVE",
"197 115 OFFCURVE",
"197 74 CURVE SMOOTH",
"197 19 OFFCURVE",
"209 -8 OFFCURVE",
"232 -8 CURVE SMOOTH",
"245 -8 OFFCURVE",
"255 -4 OFFCURVE",
"262 5 CURVE",
"263 12 OFFCURVE",
"263 19 OFFCURVE",
"263 26 CURVE SMOOTH",
"263 35 OFFCURVE",
"262 47 OFFCURVE",
"261 64 CURVE SMOOTH",
"260 81 OFFCURVE",
"259 93 OFFCURVE",
"259 102 CURVE SMOOTH"
);
}
);
width = 289;
}
);
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2019-03-04 03:45:00 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, -1, -30, 402}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 357;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2019-03-04 03:45:13 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.hu;
transform = "{1, 0, 0, -1, -30, 211}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2019-03-04 02:45:19 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"332 393 OFFCURVE",
"324 406 OFFCURVE",
"309 415 CURVE SMOOTH",
"296 423 OFFCURVE",
"281 427 OFFCURVE",
"264 427 CURVE SMOOTH",
"244 427 OFFCURVE",
"214 425 OFFCURVE",
"175 421 CURVE SMOOTH",
"136 417 OFFCURVE",
"104 414 OFFCURVE",
"81 414 CURVE SMOOTH",
"55 414 OFFCURVE",
"42 405 OFFCURVE",
"42 387 CURVE SMOOTH",
"42 371 OFFCURVE",
"57 350 OFFCURVE",
"65 351 CURVE",
"147 370 OFFCURVE",
"207 379 OFFCURVE",
"244 379 CURVE SMOOTH",
"261 379 OFFCURVE",
"272 375 OFFCURVE",
"278 368 CURVE",
"278 362 OFFCURVE",
"272 176 OFFCURVE",
"272 167 CURVE SMOOTH",
"272 153 LINE SMOOTH",
"272 117 OFFCURVE",
"276 87 OFFCURVE",
"265 63 CURVE SMOOTH",
"250 32 OFFCURVE",
"226 16 OFFCURVE",
"194 16 CURVE SMOOTH",
"175 16 OFFCURVE",
"152 26 OFFCURVE",
"126 46 CURVE SMOOTH",
"103 64 OFFCURVE",
"85 83 OFFCURVE",
"74 103 CURVE",
"62 131 LINE",
"59 136 OFFCURVE",
"54 138 OFFCURVE",
"48 138 CURVE SMOOTH",
"40 138 OFFCURVE",
"25 113 OFFCURVE",
"25 104 CURVE SMOOTH",
"25 72 OFFCURVE",
"98 1 OFFCURVE",
"133 -8 CURVE",
"156 -15 OFFCURVE",
"176 -19 OFFCURVE",
"191 -19 CURVE SMOOTH",
"240 -19 OFFCURVE",
"277 -1 OFFCURVE",
"303 34 CURVE SMOOTH",
"327 65 OFFCURVE",
"329 106 OFFCURVE",
"329 156 CURVE SMOOTH",
"329 171 OFFCURVE",
"329 187 OFFCURVE",
"328 203 CURVE SMOOTH",
"328 269 OFFCURVE",
"332 359 OFFCURVE",
"332 376 CURVE SMOOTH"
);
}
);
width = 364;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2019-03-04 03:45:27 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.haa;
transform = "{0.77715, -0.62932, 0.62932, 0.77715, 159, 391}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2019-03-04 03:46:35 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -218, 510}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 331;
}
);
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2019-03-04 02:47:28 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.se;
transform = "{1, 0, 0, 1, -40, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 347;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2019-03-04 03:47:32 +0000";
layers = (
{
components = (
{
name = "go-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"172 -9 LINE",
"315 -9 LINE",
"315 28 LINE",
"172 28 LINE"
);
}
);
width = 347;
}
);
unicode = 130F;
},
{
glyphname = "gwa-ethiopic";
lastChange = "2019-03-04 03:48:09 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 20, 340}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"259 224 LINE",
"307 224 LINE",
"307 237 LINE",
"249 237 LINE"
);
}
);
width = 393;
}
);
unicode = 1310;
},
{
glyphname = "gwi-ethiopic";
lastChange = "2019-03-04 02:50:39 +0000";
layers = (
{
components = (
{
name = "ga-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"296 268 LINE",
"291 262 OFFCURVE",
"286 255 OFFCURVE",
"283 248 CURVE SMOOTH",
"273 225 OFFCURVE",
"277 142 OFFCURVE",
"298 133 CURVE SMOOTH",
"307 129 OFFCURVE",
"314 129 OFFCURVE",
"318 138 CURVE SMOOTH",
"319 140 OFFCURVE",
"317 151 OFFCURVE",
"314 172 CURVE SMOOTH",
"311 192 OFFCURVE",
"315 207 OFFCURVE",
"316 221 CURVE SMOOTH",
"317 231 OFFCURVE",
"320 242 OFFCURVE",
"324 254 CURVE"
);
},
{
closed = 1;
nodes = (
"283 160 LINE",
"287 154 OFFCURVE",
"290 138 OFFCURVE",
"297 133 CURVE SMOOTH",
"316 119 OFFCURVE",
"403 130 OFFCURVE",
"410 151 CURVE SMOOTH",
"413 160 OFFCURVE",
"412 165 OFFCURVE",
"406 171 CURVE SMOOTH",
"403 174 OFFCURVE",
"392 170 OFFCURVE",
"371 167 CURVE SMOOTH",
"351 164 OFFCURVE",
"334 163 OFFCURVE",
"322 168 CURVE SMOOTH",
"313 172 OFFCURVE",
"305 181 OFFCURVE",
"299 194 CURVE"
);
},
{
closed = 1;
nodes = (
"242 226 LINE",
"298 226 LINE",
"298 242 LINE",
"242 242 LINE"
);
}
);
width = 427;
}
);
unicode = 1312;
},
{
glyphname = "gwaa-ethiopic";
lastChange = "2019-03-04 02:52:16 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"231 156 LINE SMOOTH",
"232 166 OFFCURVE",
"226 173 OFFCURVE",
"217 173 CURVE SMOOTH",
"75 180 LINE SMOOTH",
"50 181 OFFCURVE",
"32 177 OFFCURVE",
"19 167 CURVE SMOOTH",
"5 156 OFFCURVE",
"12 120 OFFCURVE",
"24 120 CURVE SMOOTH",
"73 121 LINE SMOOTH",
"87 121 OFFCURVE",
"122 131 OFFCURVE",
"183 127 CURVE SMOOTH",
"199 126 OFFCURVE",
"214 126 OFFCURVE",
"228 126 CURVE"
);
},
{
closed = 1;
nodes = (
"196 168 LINE",
"237 217 OFFCURVE",
"264 248 OFFCURVE",
"275 262 CURVE SMOOTH",
"314 313 OFFCURVE",
"332 351 OFFCURVE",
"332 376 CURVE SMOOTH",
"332 393 OFFCURVE",
"324 406 OFFCURVE",
"309 415 CURVE SMOOTH",
"296 423 OFFCURVE",
"281 427 OFFCURVE",
"264 427 CURVE SMOOTH",
"244 427 OFFCURVE",
"214 425 OFFCURVE",
"175 421 CURVE SMOOTH",
"136 417 OFFCURVE",
"104 414 OFFCURVE",
"81 414 CURVE SMOOTH",
"55 414 OFFCURVE",
"42 405 OFFCURVE",
"42 387 CURVE SMOOTH",
"42 371 OFFCURVE",
"57 350 OFFCURVE",
"65 351 CURVE",
"147 370 OFFCURVE",
"207 379 OFFCURVE",
"244 379 CURVE SMOOTH",
"261 379 OFFCURVE",
"272 375 OFFCURVE",
"278 368 CURVE",
"277 342 OFFCURVE",
"246 293 OFFCURVE",
"185 221 CURVE SMOOTH",
"170 203 OFFCURVE",
"154 185 OFFCURVE",
"138 168 CURVE"
);
},
{
closed = 1;
nodes = (
"184 126 LINE",
"182 86 OFFCURVE",
"178 40 OFFCURVE",
"178 1 CURVE SMOOTH",
"178 -24 OFFCURVE",
"181 -42 OFFCURVE",
"192 -54 CURVE SMOOTH",
"204 -67 OFFCURVE",
"238 -61 OFFCURVE",
"238 -49 CURVE",
"237 0 LINE",
"237 14 OFFCURVE",
"225 49 OFFCURVE",
"229 110 CURVE SMOOTH",
"230 126 OFFCURVE",
"229 141 OFFCURVE",
"229 155 CURVE"
);
}
);
width = 347;
}
);
unicode = 1313;
},
{
glyphname = "gwee-ethiopic";
lastChange = "2019-03-04 03:48:39 +0000";
layers = (
{
components = (
{
name = "gee-ethiopic";
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"167 -6 LINE",
"247 -6 LINE",
"247 37 LINE",
"167 37 LINE"
);
}
);
width = 360;
}
);
unicode = 1314;
},
{
glyphname = "gwe-ethiopic";
lastChange = "2019-03-04 02:52:59 +0000";
layers = (
{
components = (
{
name = "gwi-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 427;
}
);
unicode = 1315;
},
{
glyphname = "gga-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2019-03-04 02:54:01 +0000";
layers = (
{
components = (
{
name = m;
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2019-03-04 02:54:50 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, -210, 270}";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 3, 280}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 509;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2019-03-04 03:00:03 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"236 138 LINE",
"265 160 OFFCURVE",
"279 174 OFFCURVE",
"293 201 CURVE SMOOTH",
"307 228 OFFCURVE",
"307 260 OFFCURVE",
"307 286 CURVE SMOOTH",
"307 310 OFFCURVE",
"304 331 OFFCURVE",
"299 349 CURVE SMOOTH",
"288 392 OFFCURVE",
"206 444 OFFCURVE",
"161 444 CURVE SMOOTH",
"130 444 OFFCURVE",
"104 425 OFFCURVE",
"83 388 CURVE SMOOTH",
"65 357 OFFCURVE",
"56 324 OFFCURVE",
"56 289 CURVE SMOOTH",
"56 270 OFFCURVE",
"59 251 OFFCURVE",
"66 233 CURVE SMOOTH",
"75 209 OFFCURVE",
"90 187 OFFCURVE",
"111 167 CURVE SMOOTH",
"119 159 OFFCURVE",
"131 150 OFFCURVE",
"146 140 CURVE",
"134 132 OFFCURVE",
"120 123 OFFCURVE",
"105 114 CURVE SMOOTH",
"67 91 OFFCURVE",
"48 72 OFFCURVE",
"48 59 CURVE SMOOTH",
"48 37 OFFCURVE",
"64 18 OFFCURVE",
"95 3 CURVE",
"125 25 LINE",
"118 30 OFFCURVE",
"114 38 OFFCURVE",
"114 48 CURVE SMOOTH",
"114 60 OFFCURVE",
"132 77 OFFCURVE",
"168 98 CURVE SMOOTH",
"190 111 LINE",
"197 107 OFFCURVE",
"204 102 OFFCURVE",
"212 98 CURVE",
"248 77 OFFCURVE",
"266 60 OFFCURVE",
"266 48 CURVE SMOOTH",
"266 38 OFFCURVE",
"262 30 OFFCURVE",
"255 25 CURVE",
"285 3 LINE",
"316 18 OFFCURVE",
"332 37 OFFCURVE",
"332 59 CURVE SMOOTH",
"332 72 OFFCURVE",
"313 91 OFFCURVE",
"275 114 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148 201 OFFCURVE",
"132 219 OFFCURVE",
"123 237 CURVE SMOOTH",
"116 251 OFFCURVE",
"113 264 OFFCURVE",
"113 278 CURVE SMOOTH",
"113 304 OFFCURVE",
"119 330 OFFCURVE",
"131 355 CURVE SMOOTH",
"145 386 OFFCURVE",
"164 402 OFFCURVE",
"187 402 CURVE SMOOTH",
"232 402 OFFCURVE",
"254 366 OFFCURVE",
"254 295 CURVE SMOOTH",
"254 265 OFFCURVE",
"251 244 OFFCURVE",
"246 233 CURVE",
"239 216 OFFCURVE",
"237 214 OFFCURVE",
"235 211 CURVE SMOOTH",
"229 201 OFFCURVE",
"222 193 OFFCURVE",
"210 183 CURVE",
"190 168 LINE",
"181 174 OFFCURVE",
"174 179 OFFCURVE",
"170 183 CURVE"
);
}
);
width = 357;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2019-03-04 03:11:46 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = _part.topbar;
transform = "{1, 0, 0, 1, -10, -320}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 367;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2019-03-04 03:13:21 +0000";
layers = (
{
components = (
{
name = "ra-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"168 8 OFFCURVE",
"177 -1 OFFCURVE",
"196 -1 CURVE SMOOTH",
"225 -1 OFFCURVE",
"240 59 OFFCURVE",
"239 180 CURVE SMOOTH",
"239 244 LINE SMOOTH",
"239 257 OFFCURVE",
"232 264 OFFCURVE",
"217 265 CURVE",
"197 265 OFFCURVE",
"193 256 OFFCURVE",
"193 240 CURVE SMOOTH",
"193 157 OFFCURVE",
"186 96 OFFCURVE",
"177 55 CURVE",
"177 53 OFFCURVE",
"175 49 OFFCURVE",
"172 42 CURVE SMOOTH",
"169 35 OFFCURVE",
"168 29 OFFCURVE",
"168 25 CURVE SMOOTH"
);
}
);
width = 347;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2019-03-04 03:15:04 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic";
transform = "{1, 0, 0, 1, 22, 0}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"198 1 LINE",
"198 -53 OFFCURVE",
"72 -121 OFFCURVE",
"27 -166 CURVE SMOOTH",
"21 -172 OFFCURVE",
"11 -185 OFFCURVE",
"11 -198 CURVE SMOOTH",
"11 -219 OFFCURVE",
"19 -229 OFFCURVE",
"46 -222 CURVE SMOOTH",
"83 -212 OFFCURVE",
"246 -57 OFFCURVE",
"246 -1 CURVE SMOOTH",
"246 0 OFFCURVE",
"246 1 OFFCURVE",
"246 1 CURVE SMOOTH"
);
}
);
width = 395;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2019-03-04 03:15:46 +0000";
layers = (
{
components = (
{
name = "ri-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"140 -1 OFFCURVE",
"149 -10 OFFCURVE",
"168 -10 CURVE SMOOTH",
"197 -10 OFFCURVE",
"211 50 OFFCURVE",
"211 171 CURVE SMOOTH",
"211 235 LINE SMOOTH",
"211 248 OFFCURVE",
"204 255 OFFCURVE",
"189 256 CURVE",
"169 256 OFFCURVE",
"165 247 OFFCURVE",
"165 231 CURVE SMOOTH",
"165 148 OFFCURVE",
"158 87 OFFCURVE",
"149 46 CURVE",
"149 44 OFFCURVE",
"147 40 OFFCURVE",
"144 33 CURVE SMOOTH",
"141 26 OFFCURVE",
"140 20 OFFCURVE",
"140 16 CURVE SMOOTH"
);
}
);
width = 347;
}
);
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2019-03-04 03:16:27 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"150 -237 OFFCURVE",
"159 -246 OFFCURVE",
"178 -246 CURVE SMOOTH",
"207 -246 OFFCURVE",
"222 -186 OFFCURVE",
"221 -65 CURVE SMOOTH",
"221 -1 LINE SMOOTH",
"221 12 OFFCURVE",
"214 19 OFFCURVE",
"199 20 CURVE",
"179 20 OFFCURVE",
"175 11 OFFCURVE",
"175 -5 CURVE SMOOTH",
"175 -88 OFFCURVE",
"168 -149 OFFCURVE",
"159 -190 CURVE",
"159 -192 OFFCURVE",
"157 -196 OFFCURVE",
"154 -203 CURVE SMOOTH",
"151 -210 OFFCURVE",
"150 -216 OFFCURVE",
"150 -220 CURVE SMOOTH"
);
}
);
width = 347;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2019-03-04 03:17:53 +0000";
layers = (
{
components = (
{
name = "fa-ethiopic";
},
{
name = _part.haa;
transform = "{1, 0, 0, 1, 35, 269}";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 397;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2019-03-04 03:20:58 +0000";
layers = (
{
components = (
{
name = "re-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"58 185 LINE",
"188 185 LINE",
"188 -221 LINE SMOOTH",
"188 -252 OFFCURVE",
"204 -268 OFFCURVE",
"237 -268 CURVE SMOOTH",
"241 -268 OFFCURVE",
"245 -265 OFFCURVE",
"248 -260 CURVE",
"242 -235 OFFCURVE",
"239 -215 OFFCURVE",
"239 -200 CURVE SMOOTH",
"239 168 LINE SMOOTH",
"239 186 OFFCURVE",
"239 201 OFFCURVE",
"240 212 CURVE SMOOTH",
"240 223 OFFCURVE",
"240 230 OFFCURVE",
"240 234 CURVE SMOOTH",
"240 239 OFFCURVE",
"238 242 OFFCURVE",
"233 245 CURVE",
"208 239 OFFCURVE",
"187 236 OFFCURVE",
"172 236 CURVE SMOOTH",
"58 236 LINE"
);
}
);
width = 364;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2019-03-04 03:21:09 +0000";
layers = (
{
components = (
{
name = "ro-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"58 185 LINE",
"188 185 LINE",
"188 -221 LINE SMOOTH",
"188 -252 OFFCURVE",
"204 -268 OFFCURVE",
"237 -268 CURVE SMOOTH",
"241 -268 OFFCURVE",
"245 -265 OFFCURVE",
"248 -260 CURVE",
"242 -235 OFFCURVE",
"239 -215 OFFCURVE",
"239 -200 CURVE SMOOTH",
"239 168 LINE SMOOTH",
"239 186 OFFCURVE",
"239 201 OFFCURVE",
"240 212 CURVE SMOOTH",
"240 223 OFFCURVE",
"240 230 OFFCURVE",
"240 234 CURVE SMOOTH",
"240 239 OFFCURVE",
"238 242 OFFCURVE",
"233 245 CURVE",
"208 239 OFFCURVE",
"187 236 OFFCURVE",
"172 236 CURVE SMOOTH",
"58 236 LINE"
);
}
);
width = 364;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2019-03-04 03:21:43 +0000";
layers = (
{
components = (
{
name = "fe-ethiopic";
}
);
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"110 -267 LINE",
"260 -267 LINE",
"260 -211 LINE",
"110 -211 LINE"
);
}
);
width = 364;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2019-03-04 03:23:10 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"46 418 OFFCURVE",
"15 408 OFFCURVE",
"15 385 CURVE SMOOTH",
"15 367 OFFCURVE",
"26 359 OFFCURVE",
"47 362 CURVE SMOOTH",
"74 366 OFFCURVE",
"109 365 OFFCURVE",
"113 362 CURVE",
"112 317 OFFCURVE",
"111 178 OFFCURVE",
"111 84 CURVE SMOOTH",
"111 66 OFFCURVE",
"114 47 OFFCURVE",
"119 27 CURVE SMOOTH",
"127 0 OFFCURVE",
"138 -14 OFFCURVE",
"151 -14 CURVE SMOOTH",
"162 -14 OFFCURVE",
"179 -1 OFFCURVE",
"179 10 CURVE SMOOTH",
"179 19 OFFCURVE",
"177 31 OFFCURVE",
"174 47 CURVE SMOOTH",
"171 63 OFFCURVE",
"169 75 OFFCURVE",
"169 82 CURVE",
"168 100 OFFCURVE",
"167 135 OFFCURVE",
"167 187 CURVE SMOOTH",
"167 254 OFFCURVE",
"167 361 OFFCURVE",
"168 368 CURVE",
"171 370 OFFCURVE",
"204 372 OFFCURVE",
"226 375 CURVE SMOOTH",
"246 378 OFFCURVE",
"259 381 OFFCURVE",
"264 385 CURVE",
"273 391 OFFCURVE",
"277 399 OFFCURVE",
"277 410 CURVE SMOOTH",
"277 425 OFFCURVE",
"268 432 OFFCURVE",
"249 432 CURVE SMOOTH",
"215 432 OFFCURVE",
"187 431 OFFCURVE",
"173 430 CURVE"
);
}
);
width = 292;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1358;
},
{
glyphname = "mya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1359;
},
{
glyphname = "fya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 135A;
},
{
glyphname = "mwaSebatbeit-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1380;
},
{
glyphname = "mwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1381;
},
{
glyphname = "mwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1382;
},
{
glyphname = "mwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1383;
},
{
glyphname = "bwaSebatbeit-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1384;
},
{
glyphname = "bwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1385;
},
{
glyphname = "bwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1386;
},
{
glyphname = "bwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1387;
},
{
glyphname = "fwaSebatbeit-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1388;
},
{
glyphname = "fwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1389;
},
{
glyphname = "fwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138A;
},
{
glyphname = "fwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138B;
},
{
glyphname = "pwaSebatbeit-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138C;
},
{
glyphname = "pwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138D;
},
{
glyphname = "pwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138E;
},
{
glyphname = "pwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 138F;
},
{
glyphname = "loa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D80;
},
{
glyphname = "moa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D81;
},
{
glyphname = "roa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D82;
},
{
glyphname = "soa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D83;
},
{
glyphname = "shoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D84;
},
{
glyphname = "boa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D85;
},
{
glyphname = "toa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D86;
},
{
glyphname = "coa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D87;
},
{
glyphname = "noa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D88;
},
{
glyphname = "nyoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D89;
},
{
glyphname = "oaGlottal-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8A;
},
{
glyphname = "zoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8B;
},
{
glyphname = "doa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8C;
},
{
glyphname = "ddoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8D;
},
{
glyphname = "joa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8E;
},
{
glyphname = "thoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D8F;
},
{
glyphname = "choa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D90;
},
{
glyphname = "phoa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D91;
},
{
glyphname = "poa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D92;
},
{
glyphname = "ggwa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D93;
},
{
glyphname = "ggwi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D94;
},
{
glyphname = "ggwee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D95;
},
{
glyphname = "ggwe-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2D96;
},
{
glyphname = "ssa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA0;
},
{
glyphname = "ssu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA1;
},
{
glyphname = "ssi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA2;
},
{
glyphname = "ssaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA3;
},
{
glyphname = "ssee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA4;
},
{
glyphname = "sse-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA5;
},
{
glyphname = "sso-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA6;
},
{
glyphname = "cca-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA8;
},
{
glyphname = "ccu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DA9;
},
{
glyphname = "cci-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DAA;
},
{
glyphname = "ccaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DAB;
},
{
glyphname = "ccee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DAC;
},
{
glyphname = "cce-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DAD;
},
{
glyphname = "cco-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DAE;
},
{
glyphname = "zza-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB0;
},
{
glyphname = "zzu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB1;
},
{
glyphname = "zzi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB2;
},
{
glyphname = "zzaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB3;
},
{
glyphname = "zzee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB4;
},
{
glyphname = "zze-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB5;
},
{
glyphname = "zzo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB6;
},
{
glyphname = "ccha-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB8;
},
{
glyphname = "cchu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DB9;
},
{
glyphname = "cchi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DBA;
},
{
glyphname = "cchaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DBB;
},
{
glyphname = "cchee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DBC;
},
{
glyphname = "cche-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DBD;
},
{
glyphname = "ccho-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DBE;
},
{
glyphname = "qya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC0;
},
{
glyphname = "qyu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC1;
},
{
glyphname = "qyi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC2;
},
{
glyphname = "qyaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC3;
},
{
glyphname = "qyee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC4;
},
{
glyphname = "qye-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC5;
},
{
glyphname = "qyo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC6;
},
{
glyphname = "kya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC8;
},
{
glyphname = "kyu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DC9;
},
{
glyphname = "kyi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DCA;
},
{
glyphname = "kyaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DCB;
},
{
glyphname = "kyee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DCC;
},
{
glyphname = "kye-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DCD;
},
{
glyphname = "kyo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DCE;
},
{
glyphname = "xya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD0;
},
{
glyphname = "xyu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD1;
},
{
glyphname = "xyi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD2;
},
{
glyphname = "xyaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD3;
},
{
glyphname = "xyee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD4;
},
{
glyphname = "xye-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD5;
},
{
glyphname = "xyo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD6;
},
{
glyphname = "gya-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD8;
},
{
glyphname = "gyu-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DD9;
},
{
glyphname = "gyi-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DDA;
},
{
glyphname = "gyaa-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DDB;
},
{
glyphname = "gyee-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DDC;
},
{
glyphname = "gye-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DDD;
},
{
glyphname = "gyo-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 2DDE;
},
{
glyphname = "one-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1369;
},
{
glyphname = "two-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136A;
},
{
glyphname = "three-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136B;
},
{
glyphname = "four-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136C;
},
{
glyphname = "five-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136D;
},
{
glyphname = "six-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136E;
},
{
glyphname = "seven-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 136F;
},
{
glyphname = "eight-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1370;
},
{
glyphname = "nine-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1371;
},
{
glyphname = "ten-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1372;
},
{
glyphname = "twenty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1373;
},
{
glyphname = "thirty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1374;
},
{
glyphname = "forty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1375;
},
{
glyphname = "fifty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1376;
},
{
glyphname = "sixty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1377;
},
{
glyphname = "seventy-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1378;
},
{
glyphname = "eighty-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1379;
},
{
glyphname = "ninety-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 137A;
},
{
glyphname = "hundred-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 137B;
},
{
glyphname = "tenthousand-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 137C;
},
{
glyphname = "colon-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1361;
},
{
glyphname = "chiret-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1396;
},
{
glyphname = "deret-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1391;
},
{
glyphname = "deretHidet-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1398;
},
{
glyphname = "difat-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1394;
},
{
glyphname = "hidet-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1397;
},
{
glyphname = "kenat-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1395;
},
{
glyphname = "kurt-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1399;
},
{
glyphname = "rikrik-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1392;
},
{
glyphname = "shortRikrik-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1393;
},
{
glyphname = "yizet-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 1390;
},
{
glyphname = "geminVowellengthcomb-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
lastChange = "2019-03-01 18:41:01 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
width = 600;
}
);
unicode = 135E;
},
{
export = 0;
glyphname = _part.ha;
lastChange = "2019-03-03 23:25:29 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"293 26 LINE",
"289 -3 LINE",
"276 -179 LINE",
"276 -189 LINE SMOOTH",
"276 -224 OFFCURVE",
"279 -248 OFFCURVE",
"286 -261 CURVE",
"291 -264 OFFCURVE",
"299 -265 OFFCURVE",
"308 -265 CURVE SMOOTH",
"315 -265 OFFCURVE",
"320 -265 OFFCURVE",
"323 -264 CURVE",
"330 -259 OFFCURVE",
"334 -255 OFFCURVE",
"337 -252 CURVE",
"326 -209 OFFCURVE",
"321 -184 OFFCURVE",
"321 -176 CURVE SMOOTH",
"321 -170 OFFCURVE",
"322 -162 OFFCURVE",
"324 -151 CURVE",
"325 -141 OFFCURVE",
"342 -51 OFFCURVE",
"342 -43 CURVE SMOOTH",
"342 152 LINE"
);
}
);
width = 367;
}
);
},
{
export = 0;
glyphname = _part.haa;
lastChange = "2019-03-01 19:02:08 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"350 -151 OFFCURVE",
"338 -125 OFFCURVE",
"314 -110 CURVE SMOOTH",
"306 -105 OFFCURVE",
"300 -102 OFFCURVE",
"295 -102 CURVE SMOOTH",
"278 -102 OFFCURVE",
"263 -114 OFFCURVE",
"252 -138 CURVE SMOOTH",
"243 -157 OFFCURVE",
"239 -176 OFFCURVE",
"239 -196 CURVE SMOOTH",
"239 -216 OFFCURVE",
"243 -232 OFFCURVE",
"251 -245 CURVE SMOOTH",
"260 -259 OFFCURVE",
"274 -267 OFFCURVE",
"293 -267 CURVE SMOOTH",
"311 -267 OFFCURVE",
"326 -258 OFFCURVE",
"337 -240 CURVE SMOOTH",
"346 -225 OFFCURVE",
"350 -207 OFFCURVE",
"350 -187 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 -203 OFFCURVE",
"331 -217 OFFCURVE",
"325 -229 CURVE SMOOTH",
"317 -245 OFFCURVE",
"307 -253 OFFCURVE",
"293 -253 CURVE SMOOTH",
"280 -253 OFFCURVE",
"271 -246 OFFCURVE",
"265 -232 CURVE SMOOTH",
"261 -222 OFFCURVE",
"258 -210 OFFCURVE",
"258 -195 CURVE SMOOTH",
"258 -179 OFFCURVE",
"261 -164 OFFCURVE",
"267 -149 CURVE SMOOTH",
"274 -131 OFFCURVE",
"286 -122 OFFCURVE",
"300 -122 CURVE SMOOTH",
"313 -122 OFFCURVE",
"320 -130 OFFCURVE",
"327 -146 CURVE SMOOTH",
"332 -158 OFFCURVE",
"333 -172 OFFCURVE",
"333 -187 CURVE SMOOTH"
);
}
);
width = 331;
}
);
},
{
export = 0;
glyphname = _part.hu;
lastChange = "2019-03-01 18:48:39 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"255 170 LINE",
"263 168 OFFCURVE",
"271 167 OFFCURVE",
"279 167 CURVE SMOOTH",
"304.333 167 OFFCURVE",
"375 210.333 OFFCURVE",
"375 233 CURVE SMOOTH",
"375 243 OFFCURVE",
"370 248 OFFCURVE",
"360 248 CURVE SMOOTH",
"358 248 OFFCURVE",
"348.833 241.5 OFFCURVE",
"332.5 228.5 CURVE SMOOTH",
"316.167 215.5 OFFCURVE",
"301.333 209 OFFCURVE",
"288 209 CURVE SMOOTH",
"278 209 OFFCURVE",
"267 213 OFFCURVE",
"255 221 CURVE"
);
}
);
width = 331;
}
);
},
{
export = 0;
glyphname = _part.leg;
lastChange = "2019-03-01 20:08:58 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"444 26 LINE",
"451 -3 LINE",
"436 -179 LINE",
"436 -189 LINE SMOOTH",
"436 -224 OFFCURVE",
"439 -248 OFFCURVE",
"446 -261 CURVE",
"451 -264 OFFCURVE",
"459 -265 OFFCURVE",
"468 -265 CURVE SMOOTH",
"475 -265 OFFCURVE",
"480 -265 OFFCURVE",
"483 -264 CURVE",
"490 -259 OFFCURVE",
"494 -255 OFFCURVE",
"497 -252 CURVE",
"486 -209 OFFCURVE",
"481 -184 OFFCURVE",
"481 -176 CURVE SMOOTH",
"481 -170 OFFCURVE",
"482 -162 OFFCURVE",
"484 -151 CURVE",
"485 -141 OFFCURVE",
"486 -134 OFFCURVE",
"486 -130 CURVE",
"490 -68 OFFCURVE",
"501 61 OFFCURVE",
"501 117 CURVE SMOOTH",
"501 119 OFFCURVE",
"503 150 OFFCURVE",
"503 152 CURVE"
);
}
);
width = 537;
}
);
},
{
export = 0;
glyphname = _part.se;
lastChange = "2019-03-03 23:41:05 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"233 406 LINE",
"234 420 OFFCURVE",
"236 437 OFFCURVE",
"239 456 CURVE SMOOTH",
"244 489 OFFCURVE",
"246 514 OFFCURVE",
"246 531 CURVE SMOOTH",
"246 552 OFFCURVE",
"234 564 OFFCURVE",
"211 566 CURVE SMOOTH",
"196 567 OFFCURVE",
"184 558 OFFCURVE",
"184 550 CURVE SMOOTH",
"184 548 OFFCURVE",
"185 545 OFFCURVE",
"187 541 CURVE SMOOTH",
"189 536 OFFCURVE",
"189 533 OFFCURVE",
"189 531 CURVE",
"180 404 LINE"
);
}
);
width = 367;
}
);
},
{
export = 0;
glyphname = _part.she;
lastChange = "2019-03-03 23:45:47 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"233 406 LINE",
"234 420 OFFCURVE",
"236 437 OFFCURVE",
"239 456 CURVE SMOOTH",
"244 489 OFFCURVE",
"246 514 OFFCURVE",
"246 531 CURVE SMOOTH",
"246 552 OFFCURVE",
"234 564 OFFCURVE",
"211 566 CURVE SMOOTH",
"196 567 OFFCURVE",
"184 558 OFFCURVE",
"184 550 CURVE SMOOTH",
"184 548 OFFCURVE",
"185 545 OFFCURVE",
"187 541 CURVE SMOOTH",
"189 536 OFFCURVE",
"189 533 OFFCURVE",
"189 531 CURVE",
"180 404 LINE"
);
},
{
closed = 1;
nodes = (
"343 554 OFFCURVE",
"309 568 OFFCURVE",
"281 568 CURVE SMOOTH",
"186 568 OFFCURVE",
"143 565 OFFCURVE",
"46 554 CURVE",
"41 554 OFFCURVE",
"39 552 OFFCURVE",
"39 547 CURVE SMOOTH",
"39 529 OFFCURVE",
"45 491 OFFCURVE",
"65 491 CURVE SMOOTH",
"76 491 OFFCURVE",
"86 495 OFFCURVE",
"96 502 CURVE SMOOTH",
"105 509 OFFCURVE",
"116 513 OFFCURVE",
"129 515 CURVE SMOOTH",
"148 518 OFFCURVE",
"174 520 OFFCURVE",
"185 520 CURVE SMOOTH",
"195 520 OFFCURVE",
"227 519 OFFCURVE",
"251 518 CURVE SMOOTH",
"275 517 OFFCURVE",
"292 513 OFFCURVE",
"301 510 CURVE SMOOTH",
"304 509 OFFCURVE",
"309 507 OFFCURVE",
"315 504 CURVE SMOOTH",
"320 501 OFFCURVE",
"324 499 OFFCURVE",
"326 499 CURVE SMOOTH",
"341 499 OFFCURVE",
"343 504 OFFCURVE",
"343 527 CURVE SMOOTH"
);
}
);
width = 367;
}
);
},
{
export = 0;
glyphname = _part.topbar;
lastChange = "2019-03-03 23:33:58 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"343 531 OFFCURVE",
"309 545 OFFCURVE",
"281 545 CURVE SMOOTH",
"186 545 OFFCURVE",
"143 542 OFFCURVE",
"46 531 CURVE",
"41 531 OFFCURVE",
"39 529 OFFCURVE",
"39 524 CURVE SMOOTH",
"39 506 OFFCURVE",
"45 468 OFFCURVE",
"65 468 CURVE SMOOTH",
"76 468 OFFCURVE",
"86 472 OFFCURVE",
"96 479 CURVE SMOOTH",
"105 486 OFFCURVE",
"116 490 OFFCURVE",
"129 492 CURVE SMOOTH",
"148 495 OFFCURVE",
"174 497 OFFCURVE",
"185 497 CURVE SMOOTH",
"195 497 OFFCURVE",
"227 496 OFFCURVE",
"251 495 CURVE SMOOTH",
"275 494 OFFCURVE",
"292 490 OFFCURVE",
"301 487 CURVE SMOOTH",
"304 486 OFFCURVE",
"309 484 OFFCURVE",
"315 481 CURVE SMOOTH",
"320 478 OFFCURVE",
"324 476 OFFCURVE",
"326 476 CURVE SMOOTH",
"341 476 OFFCURVE",
"343 481 OFFCURVE",
"343 504 CURVE SMOOTH"
);
}
);
width = 367;
}
);
},
{
export = 0;
glyphname = _part.topsmall;
lastChange = "2019-03-04 00:11:07 +0000";
layers = (
{
layerId = "93C069E7-FFAA-4B97-8A94-34C303BF132C";
paths = (
{
closed = 1;
nodes = (
"173 573 LINE",
"135 571 OFFCURVE",
"98 567 OFFCURVE",
"46 561 CURVE",
"41 561 OFFCURVE",
"39 559 OFFCURVE",
"39 554 CURVE SMOOTH",
"39 536 OFFCURVE",
"45 498 OFFCURVE",
"65 498 CURVE SMOOTH",
"76 498 OFFCURVE",
"86 502 OFFCURVE",
"96 509 CURVE SMOOTH",
"105 516 OFFCURVE",
"116 520 OFFCURVE",
"129 522 CURVE SMOOTH",
"148 525 OFFCURVE",
"174 527 OFFCURVE",
"185 527 CURVE SMOOTH",
"185 527 OFFCURVE",
"185 527 OFFCURVE",
"186 527 CURVE"
);
},
{
closed = 1;
nodes = (
"172 522 LINE",
"190 521 OFFCURVE",
"203 518 OFFCURVE",
"211 515 CURVE SMOOTH",
"214 514 OFFCURVE",
"219 512 OFFCURVE",
"225 509 CURVE SMOOTH",
"230 506 OFFCURVE",
"234 504 OFFCURVE",
"236 504 CURVE SMOOTH",
"251 504 OFFCURVE",
"253 509 OFFCURVE",
"253 532 CURVE SMOOTH",
"253 559 OFFCURVE",
"219 573 OFFCURVE",
"191 573 CURVE SMOOTH",
"183 573 OFFCURVE",
"175 573 OFFCURVE",
"167 573 CURVE"
);
}
);
width = 272;
}
);
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = "Abesha Selam";
},
{
name = postscriptFontName;
value = "Abesha-Selam";
}
);
instanceInterpolations = {
"93C069E7-FFAA-4B97-8A94-34C303BF132C" = 1;
};
name = Light;
weightClass = Light;
}
);
kerning = {
"93C069E7-FFAA-4B97-8A94-34C303BF132C" = {
A = {
B = 12;
C = 13;
D = 20;
F = 13;
L = 24;
M = 17;
N = 24;
P = 6;
Q = -6;
S = -6;
T = -55;
U = 13;
V = -31;
Y = -25;
};
Aacute = {
T = -55;
V = -31;
Y = -25;
};
Acircumflex = {
T = -55;
V = -31;
Y = -25;
};
Adieresis = {
T = -55;
V = -31;
Y = -25;
};
Agrave = {
T = -55;
V = -31;
Y = -25;
};
Aring = {
T = -55;
V = -31;
Y = -25;
};
Atilde = {
T = -55;
V = -31;
Y = -25;
};
B = {
A = -31;
L = 24;
T = -33;
Y = -8;
};
C = {
A = -17;
O = -23;
T = -59;
Y = -35;
};
D = {
A = -44;
E = 7;
L = 36;
R = -17;
};
E = {
A = -62;
C = -41;
E = -12;
F = -17;
G = -35;
H = -29;
I = -6;
J = -52;
N = -6;
O = -41;
Q = -58;
R = -48;
S = -49;
T = -70;
U = -17;
V = -29;
W = -23;
X = -35;
Y = -35;
Z = -6;
};
Eacute = {
R = -48;
S = -48;
};
Ecircumflex = {
R = -60;
S = -60;
};
Edieresis = {
R = -48;
S = -72;
};
Egrave = {
R = -60;
S = -60;
};
F = {
A = -70;
Aacute = -70;
Acircumflex = -70;
Adieresis = -70;
Agrave = -70;
Aring = -70;
Atilde = -70;
O = -24;
a = -74;
aacute = -74;
acircumflex = -74;
adieresis = -74;
agrave = -74;
aring = -74;
atilde = -74;
c = -53;
comma = -120;
d = -53;
e = -53;
eacute = -74;
ecircumflex = -74;
edieresis = -74;
egrave = -74;
f = -60;
g = -53;
j = -47;
m = -7;
n = -13;
o = -61;
oacute = -74;
ocircumflex = -74;
odieresis = -74;
ograve = -74;
oslash = -74;
otilde = -74;
p = -40;
period = -120;
q = -53;
r = -13;
s = -60;
t = -27;
u = -33;
v = -33;
w = -20;
x = -67;
y = -33;
z = -47;
};
G = {
A = -6;
L = 20;
T = -49;
Y = -35;
};
H = {
L = 36;
};
I = {
A = -23;
G = -6;
H = -23;
L = 24;
O = -24;
R = -23;
T = -23;
};
J = {
A = -38;
L = 24;
};
K = {
L = 36;
T = -17;
};
L = {
O = -29;
T = -96;
V = -84;
W = -12;
Y = -72;
};
M = {
A = -19;
L = 12;
};
N = {
A = -17;
B = 6;
D = 24;
E = 23;
I = 23;
L = 36;
O = 11;
Y = 8;
};
O = {
A = -35;
L = 24;
N = 18;
P = 17;
R = -17;
T = -54;
Y = -35;
};
Oacute = {
T = -24;
};
Ocircumflex = {
T = -24;
};
Odieresis = {
T = -36;
};
Ograve = {
T = -36;
};
Oslash = {
T = -48;
};
Otilde = {
T = -48;
};
P = {
A = -40;
B = 8;
J = -17;
L = 24;
T = -31;
X = -33;
a = -33;
aacute = -33;
acircumflex = -33;
adieresis = -33;
agrave = -33;
aring = -33;
atilde = -33;
comma = -155;
e = -13;
eacute = -33;
ecircumflex = -33;
edieresis = -33;
egrave = -33;
o = -13;
oacute = -33;
ocircumflex = -33;
odieresis = -33;
ograve = -33;
oslash = -33;
otilde = -33;
period = -106;
u = 13;
};
Q = {
A = -19;
L = 36;
O = 12;
T = -49;
U = 12;
Y = -17;
a = -19;
b = 13;
c = 13;
d = 7;
e = 13;
i = 26;
u = 32;
};
R = {
A = -44;
B = -6;
E = -12;
F = -23;
G = -17;
H = -12;
I = -12;
J = -47;
O = -29;
P = -12;
Q = -35;
R = -29;
S = -17;
T = -52;
U = -23;
V = -41;
Y = -35;
e = -21;
};
S = {
A = 13;
L = 48;
T = -54;
U = 24;
Y = -16;
};
T = {
A = -148;
Aacute = -148;
Acircumflex = -148;
Adieresis = -148;
Agrave = -148;
Aring = -148;
Atilde = -148;
C = -53;
G = -20;
H = -24;
I = -6;
O = -84;
Oacute = -48;
Ocircumflex = -60;
Odieresis = -48;
Ograve = -60;
Oslash = -60;
Otilde = -60;
Q = -59;
S = -24;
T = -24;
U = -17;
a = -160;
aacute = -160;
acircumflex = -160;
adieresis = -160;
agrave = -160;
aring = -160;
atilde = -160;
c = -140;
ccedilla = -140;
comma = -162;
d = -133;
e = -147;
eacute = -160;
ecircumflex = -160;
edieresis = -160;
egrave = -160;
f = -100;
g = -147;
i = -33;
j = -60;
m = -127;
n = -127;
o = -153;
oacute = -160;
ocircumflex = -160;
odieresis = -160;
ograve = -160;
oslash = -160;
otilde = -160;
p = -140;
period = -127;
q = -153;
r = -127;
s = -160;
t = -127;
u = -120;
v = -127;
w = -120;
x = -133;
y = -140;
z = -140;
};
U = {
A = -19;
D = 17;
I = 12;
L = 48;
N = 19;
};
V = {
A = -55;
Aacute = -55;
Acircumflex = -55;
Adieresis = -55;
Agrave = -55;
Aring = -55;
Atilde = -55;
E = 36;
Eacute = 24;
Ecircumflex = 36;
Edieresis = 24;
Egrave = 36;
L = 36;
a = -57;
aacute = -57;
acircumflex = -57;
adieresis = -57;
agrave = -57;
aring = -57;
atilde = -57;
c = -20;
comma = -113;
d = -20;
e = -43;
eacute = -57;
ecircumflex = -57;
edieresis = -57;
egrave = -57;
f = -20;
g = -40;
h = 27;
i = 7;
k = 13;
l = 13;
o = -40;
oacute = -57;
ocircumflex = -57;
odieresis = -57;
ograve = -57;
oslash = -57;
otilde = -57;
period = -78;
q = -33;
r = -13;
s = -40;
t = -20;
x = -47;
y = -7;
z = -33;
};
W = {
A = -31;
Aacute = -31;
Acircumflex = -31;
Adieresis = -31;
Agrave = -31;
Aring = -31;
Atilde = -31;
L = 36;
a = -15;
aacute = -15;
acircumflex = -15;
adieresis = -15;
agrave = -15;
aring = -15;
atilde = -15;
comma = -71;
d = -7;
e = -8;
eacute = -15;
ecircumflex = -15;
edieresis = -15;
egrave = -15;
oacute = -15;
ocircumflex = -15;
odieresis = -15;
ograve = -15;
oslash = -15;
otilde = -15;
period = -21;
};
X = {
T = -23;
Y = -42;
};
Y = {
A = -136;
Aacute = -136;
Acircumflex = -136;
Adieresis = -136;
Agrave = -136;
Aring = -136;
Atilde = -136;
C = -68;
G = -68;
H = -47;
O = -78;
Q = -94;
S = -36;
a = -155;
aacute = -155;
acircumflex = -155;
adieresis = -155;
agrave = -155;
aring = -155;
atilde = -155;
c = -140;
comma = -205;
d = -140;
e = -156;
eacute = -155;
ecircumflex = -155;
edieresis = -155;
egrave = -155;
f = -100;
g = -133;
i = -40;
j = -73;
m = -73;
n = -93;
o = -113;
oacute = -155;
ocircumflex = -155;
odieresis = -155;
ograve = -155;
oslash = -155;
otilde = -155;
p = -80;
period = -145;
q = -127;
r = -73;
s = -127;
t = -80;
u = -80;
v = -93;
w = -87;
x = -113;
y = -100;
z = -113;
};
Ydieresis = {
A = -136;
Aacute = -136;
Acircumflex = -136;
Adieresis = -136;
Agrave = -136;
Aring = -136;
Atilde = -136;
a = -155;
aacute = -155;
acircumflex = -155;
adieresis = -155;
agrave = -155;
aring = -155;
atilde = -155;
eacute = -155;
ecircumflex = -155;
edieresis = -155;
egrave = -155;
oacute = -155;
ocircumflex = -155;
odieresis = -155;
ograve = -155;
oslash = -155;
otilde = -155;
};
Z = {
C = -29;
G = -29;
H = -29;
O = -52;
Q = -52;
};
a = {
b = 20;
c = 10;
d = 10;
e = 10;
f = -23;
g = 5;
h = 34;
i = 28;
j = -19;
k = 21;
l = 21;
m = 21;
n = 23;
o = 8;
p = 15;
q = 16;
r = 21;
t = -18;
u = 15;
v = -8;
w = 15;
y = 6;
z = 6;
};
adieresis = {
l = 23;
};
atilde = {
l = 15;
};
b = {
a = -15;
f = -24;
g = -8;
h = 16;
i = 24;
j = -32;
k = 16;
l = 16;
m = 8;
n = 16;
s = -16;
t = -32;
u = 16;
v = -16;
w = 8;
x = -49;
y = -16;
z = -16;
};
c = {
a = -8;
d = -8;
f = -65;
g = -16;
j = -24;
p = -8;
q = -8;
s = -16;
t = -57;
v = -24;
w = -8;
x = -57;
y = -32;
z = -24;
};
d = {
a = -23;
f = -24;
g = -16;
h = 8;
i = 8;
k = 16;
l = 16;
q = -8;
s = -16;
t = -41;
v = -8;
x = -8;
y = -24;
z = -16;
};
e = {
a = -8;
f = -32;
i = 24;
s = -16;
t = -32;
u = 5;
v = -16;
w = 8;
x = -56;
y = -16;
z = -24;
};
f = {
a = -73;
b = -23;
c = -49;
comma = -94;
d = -57;
e = -60;
f = -87;
g = -83;
h = -13;
i = -16;
j = -75;
k = -19;
l = -6;
m = -30;
n = -42;
o = -72;
p = -43;
period = -33;
q = -64;
r = -29;
s = -74;
t = -65;
u = -45;
v = -59;
w = -48;
x = -86;
y = -60;
z = -68;
};
g = {
a = -15;
f = -24;
h = 8;
i = 24;
j = 105;
l = 10;
m = 10;
n = 10;
p = 10;
r = 16;
s = -16;
t = -40;
v = -16;
w = 8;
x = -16;
y = -8;
z = -8;
};
h = {
a = -6;
b = 8;
f = -8;
h = 16;
i = 16;
k = 26;
l = 10;
m = 10;
n = 10;
p = 10;
s = -16;
t = -49;
u = 10;
v = -24;
x = -16;
y = -8;
};
i = {
a = -23;
c = -21;
e = -16;
f = -48;
g = -16;
icircumflex = -8;
o = -24;
s = -32;
t = -41;
v = -16;
x = -41;
y = -24;
z = -8;
};
j = {
a = -15;
b = 13;
f = -24;
h = 8;
i = 24;
l = 24;
m = 24;
n = 24;
o = -16;
t = -24;
w = 16;
y = -8;
z = -8;
};
k = {
a = -69;
b = -16;
c = -49;
d = -57;
e = -57;
f = -73;
g = -65;
j = -8;
l = -8;
m = -16;
n = -16;
o = -49;
q = -48;
r = -16;
s = -73;
t = -73;
v = -24;
w = -16;
x = -41;
y = -40;
z = -32;
};
l = {
a = -8;
b = 13;
c = -14;
f = -24;
h = 10;
i = 8;
l = 8;
m = 8;
p = 8;
s = -24;
t = -32;
v = -8;
x = -32;
y = -16;
z = -8;
};
m = {
a = -8;
b = 8;
e = 13;
f = -8;
h = 10;
i = 24;
k = 16;
l = 16;
m = 16;
n = 16;
o = 8;
p = 16;
s = -16;
t = -24;
u = 16;
v = -16;
w = 8;
x = -8;
y = -8;
z = -8;
};
n = {
b = 13;
e = 5;
f = -16;
h = 10;
i = 16;
k = 8;
l = 16;
m = 16;
n = 8;
p = 16;
r = 8;
t = -27;
v = -16;
w = 8;
x = -8;
y = -8;
z = -8;
};
o = {
a = -8;
f = -24;
i = 16;
l = 8;
m = 14;
s = -8;
t = -41;
v = -16;
x = -49;
y = -8;
z = -16;
};
p = {
a = -23;
f = -24;
i = 10;
k = 8;
l = 8;
m = 16;
n = 8;
s = -16;
t = -32;
v = -8;
w = 8;
x = -49;
z = -16;
};
q = {
a = -31;
d = -8;
e = -8;
f = -16;
g = -8;
p = 8;
s = -24;
t = -32;
v = -8;
x = -24;
y = -8;
z = -16;
};
r = {
a = -54;
c = -24;
d = -24;
e = -32;
f = -32;
g = -32;
j = -24;
o = -40;
q = -40;
s = -56;
t = -48;
x = -56;
y = -16;
z = -24;
};
s = {
a = -8;
e = -16;
f = -48;
g = -8;
i = 8;
j = -32;
o = -8;
q = -8;
r = -8;
s = -32;
t = -43;
u = -16;
v = -24;
w = -8;
x = -40;
y = -24;
z = -8;
};
t = {
a = -54;
b = -13;
c = -24;
comma = -65;
d = -24;
e = -37;
f = -32;
g = -41;
h = -16;
j = -16;
l = -7;
o = -32;
p = -8;
period = -32;
q = -24;
s = -40;
t = -68;
u = -16;
v = -24;
w = -8;
x = -56;
y = -40;
z = -32;
};
u = {
a = -8;
b = 21;
f = -8;
h = 16;
i = 24;
k = 8;
l = 16;
m = 24;
n = 16;
p = 24;
r = 24;
s = -8;
t = -8;
w = 24;
x = -16;
};
v = {
a = -46;
c = -8;
comma = -49;
d = -8;
e = -24;
f = -24;
g = -24;
i = 16;
l = 8;
o = -16;
period = -24;
q = -16;
r = 8;
s = -32;
t = -32;
w = 8;
x = -41;
y = -8;
z = -24;
};
w = {
a = -17;
c = -8;
comma = -41;
f = -24;
i = 8;
l = 16;
m = 8;
n = 16;
o = -8;
s = -16;
t = -24;
v = 8;
w = 16;
x = -33;
y = -8;
z = -8;
};
x = {
a = -27;
c = -16;
e = -24;
f = -32;
g = -16;
i = 24;
k = 32;
l = 16;
o = -32;
q = -8;
s = -24;
t = -41;
x = -8;
y = -16;
z = -8;
};
y = {
a = -15;
d = -8;
e = -8;
f = -32;
g = -8;
h = 16;
i = 8;
j = 97;
k = 16;
m = 8;
n = 8;
p = 16;
s = -24;
t = -24;
w = 8;
x = -24;
y = -8;
z = -8;
};
z = {
a = -33;
b = 7;
c = -32;
d = -32;
e = -24;
f = -32;
g = -32;
h = 8;
i = 8;
l = 8;
n = 8;
o = -16;
q = -24;
s = -32;
t = -31;
x = -16;
y = -16;
};
};
};
unitsPerEm = 800;
versionMajor = 1;
versionMinor = 0;
}

{
.appVersion = "1141";
DisplayStrings = (
"½¼¾",
"/ha-ethiopic",
u,
t,
A,
O,
"/_part.hi/hu-ethiopic",
"/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic",
"/hi-ethiopic",
"/haa-ethiopic",
"/ring/hee-ethiopic",
"°",
"/ring",
"ª",
"å",
"/_part.hee/hee-ethiopic",
"/infinity",
"/ring Å",
"/hee-ethiopic",
"/he-ethiopic",
"/ho-ethiopic",
"/hoa-ethiopic",
"/la-ethiopic",
"/li-ethiopic",
"/laa-ethiopic",
"/lee-ethiopic",
p,
"/le-ethiopic",
"/lo-ethiopic",
"/lu-ethiopic",
"/lwa-ethiopic",
"/_part.huo/lwa-ethiopic",
"/la-ethiopic/hha-ethiopic",
"/hha-ethiopic",
"Ú",
"/Ohm",
"ò",
"/ma-ethiopic",
"/sza-ethiopic",
"/ra-ethiopic",
"/_part.hat/sa-ethiopic",
"/sa-ethiopic",
"/_part.hat.1/sha-ethiopic",
"/sha-ethiopic",
"æ",
"a/qa-ethiopic",
"/qa-ethiopic",
"u/ba-ethiopic",
"/ba-ethiopic",
"/ta-ethiopic",
"/xa-ethiopic",
"/na-ethiopic",
"/iGlottal-ethiopic",
"n/aGlottal-ethiopic",
"/aGlottal-ethiopic",
"u/ki-ethiopic",
"/ki-ethiopic",
"/ha-ethiopic/hu-ethiopic/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic/la-ethiopic/lu-ethiopic/li-ethiopic/laa-ethiopic/lee-ethiopic/le-ethiopic/lo-ethiopic/lwa-ethiopic/hha-ethiopic/hhu-ethiopic/hhi-ethiopic/hhaa-ethiopic/hhee-ethiopic/hhe-ethiopic/hho-ethiopic/hhwa-ethiopic/ma-ethiopic/mu-ethiopic/mi-ethiopic/maa-ethiopic/mee-ethiopic/me-ethiopic/mo-ethiopic/mwa-ethiopic/sza-ethiopic/szu-ethiopic/szi-ethiopic/szaa-ethiopic/szee-ethiopic/sze-ethiopic/szo-ethiopic/szwa-ethiopic/ra-ethiopic/ru-ethiopic/ri-ethiopic/raa-ethiopic/ree-ethiopic/re-ethiopic/ro-ethiopic/rwa-ethiopic/sa-ethiopic/su-ethiopic/si-ethiopic/saa-ethiopic/see-ethiopic/se-ethiopic/so-ethiopic/swa-ethiopic/sha-ethiopic/shu-ethiopic/shi-ethiopic/shaa-ethiopic/shee-ethiopic/she-ethiopic/sho-ethiopic/shwa-ethiopic/qa-ethiopic/qu-ethiopic/qi-ethiopic/qaa-ethiopic/qee-ethiopic/qe-ethiopic/qo-ethiopic/qoa-ethiopic/qwaa-ethiopic/ba-ethiopic",
"/wu-ethiopic",
"/uPharyngeal-ethiopic",
"/aPharyngeal-ethiopic",
"r/zi-ethiopic",
"/zi-ethiopic",
"/ya-ethiopic",
"d/da-ethiopic",
"d/da-ethiopic",
"/da-ethiopic",
"/ga-ethiopic",
"/tha-ethiopic",
"/_part.hee/cha-ethiopic",
"/cha-ethiopic",
"/pha-ethiopic",
"/tsa-ethiopic",
y,
"/pa-ethiopic",
g,
"/tsu-ethiopic",
"/du-ethiopic",
"/hhu-ethiopic",
"/hhi-ethiopic",
"/hhaa-ethiopic",
"/hhee-ethiopic",
"/hhe-ethiopic",
"/hho-ethiopic",
"/hhwa-ethiopic",
"/mu-ethiopic",
"/mi-ethiopic",
"/maa-ethiopic",
"/mee-ethiopic",
"/me-ethiopic",
"/mo-ethiopic",
"/mwa-ethiopic",
"/ha-ethiopic/hu-ethiopic/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic/la-ethiopic/lu-ethiopic/li-ethiopic/laa-ethiopic/lee-ethiopic/le-ethiopic/lo-ethiopic/lwa-ethiopic/hha-ethiopic/hha-ethiopic/hhu-ethiopic/hhi-ethiopic/hhaa-ethiopic/hhee-ethiopic/hhe-ethiopic/hho-ethiopic/hhwa-ethiopic/ma-ethiopic/mu-ethiopic/mi-ethiopic/maa-ethiopic/mee-ethiopic/me-ethiopic/mo-ethiopic/mwa-ethiopic/sza-ethiopic",
"uuuuu/ha-ethiopic/hu-ethiopic/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic/la-ethiopic/lu-ethiopic/li-ethiopic/laa-ethiopic/lee-ethiopic/le-ethiopic/lo-ethiopic/lwa-ethiopic/hha-ethiopic/hhu-ethiopic/hhi-ethiopic/hhaa-ethiopic/hhee-ethiopic/hhe-ethiopic/hho-ethiopic/hhwa-ethiopic/ma-ethiopic/mu-ethiopic/mi-ethiopic/maa-ethiopic/mee-ethiopic/me-ethiopic/mo-ethiopic/mwa-ethiopic/sza-ethiopic",
"/ha-ethiopic/hu-ethiopic/hi-ethiopic/haa-ethiopic/hee-ethiopic/he-ethiopic/ho-ethiopic/hoa-ethiopic/la-ethiopic/lu-ethiopic/li-ethiopic/laa-ethiopic/lee-ethiopic/le-ethiopic/lo-ethiopic/lwa-ethiopic/hha-ethiopic/hhu-ethiopic/hhi-ethiopic/hhaa-ethiopic/hhee-ethiopic/hhe-ethiopic/hho-ethiopic/hhwa-ethiopic/ma-ethiopic/mu-ethiopic/mi-ethiopic/maa-ethiopic/mee-ethiopic/me-ethiopic/mo-ethiopic/mwa-ethiopic/sza-ethiopic",
"/hu-ethiopic",
"/szu-ethiopic",
"/szi-ethiopic",
"/szaa-ethiopic",
"/_part.hee/szee-ethiopic",
"/szee-ethiopic",
"/sze-ethiopic",
"/szo-ethiopic",
"/szwa-ethiopic",
"/ru-ethiopic",
"/ri-ethiopic",
"/raa-ethiopic",
"/_part.hee/ree-ethiopic",
"/ree-ethiopic",
"/re-ethiopic",
f,
"§",
"/ro-ethiopic",
j,
"/rwa-ethiopic",
"/su-ethiopic",
"/si-ethiopic",
"/saa-ethiopic",
"/see-ethiopic",
"/se-ethiopic",
"/so-ethiopic",
"/swa-ethiopic",
"/shu-ethiopic",
"/shi-ethiopic",
"/shaa-ethiopic",
"/shee-ethiopic",
"/she-ethiopic",
"/sho-ethiopic",
"/shwa-ethiopic",
"/qu-ethiopic",
"/qi-ethiopic",
"/qaa-ethiopic",
"/_part.hee/qee-ethiopic",
"/qee-ethiopic",
"/qe-ethiopic",
"/qo-ethiopic",
"/qoa-ethiopic",
"/bu-ethiopic",
"/bi-ethiopic",
"/baa-ethiopic",
"/bee-ethiopic",
"/be-ethiopic",
"/bo-ethiopic",
"/bwa-ethiopic",
"/va-ethiopic",
"/vu-ethiopic",
"/vi-ethiopic",
"/vaa-ethiopic",
"/vee-ethiopic",
"/ve-ethiopic",
"/vo-ethiopic",
"/vwa-ethiopic",
"/qwaa-ethiopic",
"/bu-ethiopic/bi-ethiopic/baa-ethiopic/bee-ethiopic/be-ethiopic/bo-ethiopic/bwa-ethiopic/va-ethiopic/vu-ethiopic/vi-ethiopic/vaa-ethiopic/vee-ethiopic/ve-ethiopic/vo-ethiopic/vwa-ethiopic",
"/tu-ethiopic",
"/ti-ethiopic",
"/taa-ethiopic",
"t/tee-ethiopic",
"/tee-ethiopic",
"/te-ethiopic",
"/to-ethiopic",
"/twa-ethiopic",
"/ca-ethiopic",
"/cu-ethiopic",
"/ci-ethiopic",
"/caa-ethiopic",
"/cee-ethiopic",
"/ce-ethiopic",
"/co-ethiopic",
"/cwa-ethiopic",
"/xu-ethiopic",
"/nu-ethiopic",
"/ni-ethiopic",
"/naa-ethiopic",
"/nee-ethiopic",
"/ne-ethiopic",
"/no-ethiopic",
"/nwa-ethiopic",
"/nya-ethiopic",
"/nyu-ethiopic",
"/nyi-ethiopic",
"/nyaa-ethiopic",
"/nyee-ethiopic",
"/nye-ethiopic",
"/nyo-ethiopic",
"/nywa-ethiopic",
"/xi-ethiopic",
"/xaa-ethiopic",
"/xee-ethiopic",
"/xe-ethiopic",
"/xo-ethiopic",
"/xoa-ethiopic",
"/dotaccent/colon-ethiopic",
"/colon-ethiopic",
"/comma-ethiopic",
"/period-ethiopic",
"/question-ethiopic",
"/semicolon-ethiopic",
"/wordspace-ethiopic",
"/paragraphseparator-ethiopic",
"/uGlottal-ethiopic",
"/aaGlottal-ethiopic",
"/eeGlottal-ethiopic",
"/eGlottal-ethiopic",
"/oGlottal-ethiopic",
"/waGlottal-ethiopic",
"/ka-ethiopic",
"/ku-ethiopic",
"/kaa-ethiopic",
"/kee-ethiopic",
"/ke-ethiopic",
"/ko-ethiopic",
"/koa-ethiopic",
"/kwaa-ethiopic",
"/kxa-ethiopic",
"/kxu-ethiopic",
"/kxi-ethiopic",
"/kxaa-ethiopic",
"/kxee-ethiopic",
"/kxe-ethiopic",
"/kxo-ethiopic",
"",
"/kxwaa-ethiopic",
"/wa-ethiopic",
"/wi-ethiopic",
"/waa-ethiopic",
"/wee-ethiopic",
"/we-ethiopic",
"/wo-ethiopic",
"/woa-ethiopic",
"/iPharyngeal-ethiopic",
"/aaPharyngeal-ethiopic",
"/eePharyngeal-ethiopic",
"/ePharyngeal-ethiopic",
"/oPharyngeal-ethiopic",
"/za-ethiopic",
"/zu-ethiopic",
"/zaa-ethiopic",
"/zee-ethiopic",
"/ze-ethiopic",
"/zo-ethiopic",
"/zwa-ethiopic",
"/zha-ethiopic",
"/zhu-ethiopic",
"/zhi-ethiopic",
"/zhaa-ethiopic",
"/zhee-ethiopic",
"/zhe-ethiopic",
"/zho-ethiopic",
"/zhwa-ethiopic",
"/yu-ethiopic",
"/yi-ethiopic",
"/yaa-ethiopic",
"/yee-ethiopic",
"/ye-ethiopic",
")",
"/yo-ethiopic",
"/yoa-ethiopic",
"/di-ethiopic",
"/daa-ethiopic",
"/dee-ethiopic",
"/de-ethiopic",
"/do-ethiopic",
"/dwa-ethiopic",
"/prefacecolon-ethiopic",
"/dda-ethiopic",
"/ddu-ethiopic",
"/ddi-ethiopic/ddaa-ethiopic/ddee-ethiopic/dde-ethiopic/ddo-ethiopic/ddwa-ethiopic/ja-ethiopic/ju-ethiopic/ji-ethiopic/jaa-ethiopic/jee-ethiopic/je-ethiopic/jo-ethiopic/jwa-ethiopic",
"/ddi-ethiopic",
"/ddaa-ethiopic/ddee-ethiopic/dde-ethiopic/ddo-ethiopic/ddwa-ethiopic/ja-ethiopic/ju-ethiopic/ji-ethiopic/jaa-ethiopic/jee-ethiopic/je-ethiopic/jo-ethiopic/jwa-ethiopic",
"/ddaa-ethiopic",
"/ddee-ethiopic",
"/dde-ethiopic",
"/ddo-ethiopic",
"/ddwa-ethiopic",
"/ja-ethiopic",
"/ju-ethiopic",
"/ji-ethiopic",
"/jaa-ethiopic",
"/jee-ethiopic",
"/je-ethiopic",
"/ddo-ethiopic/jo-ethiopic",
"/jo-ethiopic",
"/jwa-ethiopic"
);
copyright = "Typeface © The Monotype Corporation plc. Data © The Monotype Corporation plc / Type Solutions Inc. 1990-91 All Rights Reserved";
customParameters = (
{
name = panose;
value = (
2,
11,
5,
2,
2,
2,
2,
2,
2,
4
);
},
{
name = unicodeRanges;
value = (
0,
1
);
},
{
name = codePageRanges;
value = (
1252
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
Oslash,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu1,
partialdiff,
summation,
product,
pi,
integral,
ordfeminine,
ordmasculine,
Ohm,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
Delta,
guillemotleft,
guillemotright,
ellipsis,
nonbreakingspace,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
lozenge,
ydieresis,
Ydieresis,
fraction,
Euro,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
Scaron,
scaron,
brokenbar,
Eth,
eth,
Yacute,
yacute,
Thorn,
thorn,
multiply,
onesuperior,
twosuperior,
threesuperior,
onehalf,
onequarter,
threequarters,
overscore,
middot,
foursuperior,
currency
);
}
);
date = "2018-11-23 22:43:20 +0000";
designer = "Fasil Fikreab";
disablesNiceNames = 1;
familyName = "Abesha Desta";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 1536;
capHeight = 700;
customParameters = (
{
name = typoAscender;
value = 1536;
},
{
name = typoDescender;
value = -426;
},
{
name = typoLineGap;
value = 229;
},
{
name = winAscent;
value = 1989;
},
{
name = winDescent;
value = 451;
},
{
name = hheaAscender;
value = 2060;
},
{
name = hheaDescender;
value = -451;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\012626 \012PUSHB[ ]	/* 3 values pushed */\012112 55 31 \012PUSHW[ ]	/* 1 value pushed */\012625 \012PUSHB[ ]	/* 4 values pushed */\01293 55 31 221 \012NPUSHW[ ]	/* 9 values pushed */\012615 38 31 617 615 38 31 616 615 \012PUSHB[ ]	/* 3 values pushed */\01238 31 55 \012PUSHW[ ]	/* 1 value pushed */\012623 \012PUSHB[ ]	/* 5 values pushed */\012181 200 31 55 79 \012NPUSHW[ ]	/* 23 values pushed */\012619 95 619 111 619 127 619 143 619 159 619 175 619 7 619 615 38 31 618 615 60 31 615 \012PUSHB[ ]	/* 4 values pushed */\01294 22 31 64 \012NPUSHW[ ]	/* 53 values pushed */\012609 80 609 96 609 112 609 4 0 609 16 609 32 609 48 609 4 208 609 224 609 240 609 3 0 609 16 609 32 609 48 609 4 192 609 208 609 224 609 240 609 4 176 599 240 599 2 0 599 64 599 112 599 \012NPUSHB[ ]	/* 84 values pushed */\0123 16 24 16 25 32 24 32 25 64 24 64 25 6 9 0 24 0 25 2 8 0 20 0 21 16 20 16 21 4 9 0 20 0 21 2 8 63 0 63 1 2 207 0 207 1 255 0 255 1 4 95 0 95 1 143 0 143 1 4 32 0 32 1 79 0 79 1 4 0 0 0 1 240 0 240 1 4 113 173 10 31 113 173 \012NPUSHW[ ]	/* 9 values pushed */\012-74 10 22 343 374 3 31 343 374 \012PUSHB[ ]	/* 5 values pushed */\0126 3 22 149 142 \012PUSHW[ ]	/* 1 value pushed */\012304 \012PUSHB[ ]	/* 4 values pushed */\01234 22 149 142 \012PUSHW[ ]	/* 1 value pushed */\012304 \012PUSHB[ ]	/* 4 values pushed */\01234 22 139 123 \012PUSHW[ ]	/* 1 value pushed */\012307 \012PUSHB[ ]	/* 4 values pushed */\01264 22 139 123 \012PUSHW[ ]	/* 1 value pushed */\012307 \012PUSHB[ ]	/* 4 values pushed */\01264 22 139 123 \012PUSHW[ ]	/* 1 value pushed */\012307 \012PUSHB[ ]	/* 4 values pushed */\01264 22 139 123 \012PUSHW[ ]	/* 1 value pushed */\012307 \012NPUSHB[ ]	/* 12 values pushed */\01264 22 0 70 70 0 0 0 18 21 8 64 \012PUSHW[ ]	/* 6 values pushed */\012498 386 387 13 219 387 \012PUSHB[ ]	/* 3 values pushed */\01213 0 9 \012PUSHW[ ]	/* 1 value pushed */\012398 \012PUSHB[ ]	/* 3 values pushed */\012112 48 31 \012NPUSHW[ ]	/* 9 values pushed */\012389 112 666 31 388 101 666 31 383 \012PUSHB[ ]	/* 4 values pushed */\012111 246 58 22 \012PUSHW[ ]	/* 1 value pushed */\012304 \012PUSHB[ ]	/* 3 values pushed */\012112 37 31 \012PUSHW[ ]	/* 1 value pushed */\012303 \012PUSHB[ ]	/* 3 values pushed */\012112 39 31 \012NPUSHW[ ]	/* 10 values pushed */\012297 249 3034 666 22 296 105 666 31 291 \012PUSHB[ ]	/* 4 values pushed */\012111 194 46 22 \012PUSHW[ ]	/* 1 value pushed */\012290 \012NPUSHB[ ]	/* 10 values pushed */\012111 194 46 22 252 112 46 31 217 92 \012PUSHW[ ]	/* 1 value pushed */\012666 \012PUSHB[ ]	/* 7 values pushed */\01231 197 112 89 31 182 105 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012NPUSHB[ ]	/* 12 values pushed */\01231 181 111 211 50 22 141 112 46 31 140 111 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012PUSHB[ ]	/* 8 values pushed */\01231 130 111 194 46 22 127 105 \012PUSHW[ ]	/* 1 value pushed */\0121332 \012PUSHB[ ]	/* 3 values pushed */\01231 121 111 \012PUSHW[ ]	/* 1 value pushed */\012474 \012PUSHB[ ]	/* 4 values pushed */\012111 22 99 249 \012PUSHW[ ]	/* 1 value pushed */\012666 \012PUSHB[ ]	/* 8 values pushed */\01231 93 111 177 42 22 91 111 \012PUSHW[ ]	/* 2 values pushed */\0121432 333 \012PUSHB[ ]	/* 3 values pushed */\01222 86 249 \012PUSHW[ ]	/* 2 values pushed */\0123034 666 \012PUSHB[ ]	/* 3 values pushed */\01222 85 111 \012PUSHW[ ]	/* 4 values pushed */\0122868 666 22 394 \012PUSHB[ ]	/* 3 values pushed */\01294 45 31 \012PUSHW[ ]	/* 1 value pushed */\012392 \012PUSHB[ ]	/* 3 values pushed */\01294 71 31 \012PUSHW[ ]	/* 1 value pushed */\012391 \012PUSHB[ ]	/* 3 values pushed */\01294 96 31 \012PUSHW[ ]	/* 1 value pushed */\012299 \012PUSHB[ ]	/* 3 values pushed */\01294 167 31 \012PUSHW[ ]	/* 6 values pushed */\012295 122 1189 267 22 289 \012NPUSHB[ ]	/* 10 values pushed */\01288 242 61 22 250 94 84 31 248 88 \012PUSHW[ ]	/* 1 value pushed */\012488 \012NPUSHB[ ]	/* 18 values pushed */\012122 22 247 88 206 52 22 218 94 103 31 214 88 169 43 22 194 122 \012PUSHW[ ]	/* 2 values pushed */\0121980 444 \012PUSHB[ ]	/* 8 values pushed */\01222 192 88 177 45 22 171 122 \012PUSHW[ ]	/* 2 values pushed */\0122972 666 \012PUSHB[ ]	/* 7 values pushed */\01222 148 94 191 31 144 88 \012PUSHW[ ]	/* 1 value pushed */\012669 \012PUSHB[ ]	/* 4 values pushed */\012167 22 126 122 \012PUSHW[ ]	/* 2 values pushed */\0121484 333 \012PUSHB[ ]	/* 8 values pushed */\01222 106 88 242 61 22 98 122 \012PUSHW[ ]	/* 1 value pushed */\012988 \012PUSHB[ ]	/* 4 values pushed */\012222 22 97 88 \012PUSHW[ ]	/* 1 value pushed */\012666 \012NPUSHB[ ]	/* 13 values pushed */\01231 70 0 70 2 70 5 85 20 9 20 9 144 \012PUSHW[ ]	/* 7 values pushed */\012631 7 144 630 7 144 422 \012NPUSHB[ ]	/* 83 values pushed */\0127 144 229 7 144 165 7 144 128 7 144 117 7 144 108 7 144 107 7 144 100 7 144 90 7 144 87 7 36 8 34 8 32 8 30 8 28 8 26 8 24 8 22 8 20 8 18 8 16 8 14 8 12 8 10 8 8 8 6 8 4 8 2 8 0 8 0 15 31 47 31 63 31 111 31 191 31 239 31 240 31 7 192 \012PUSHW[ ]	/* 2 values pushed */\012498 1 \012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SPVTCA[1]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012SPVTCA[0]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012192 \012MUL[ ]	/* Multiply */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012246 \012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012PUSHW[ ]	/* 1 value pushed */\012266 \012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GT[ ]	/* GreaterThan */\012PUSHB[ ]	/* 1 value pushed */\01255 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0128 \012LT[ ]	/* LessThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012GETINFO[ ]	/* GetInfo */\012PUSHW[ ]	/* 1 value pushed */\012256 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012281 \012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012SCANCTRL[ ]	/* ScanConversionControl */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121 293 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0121 511 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SZPS[ ]	/* SetZonePointerS */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LT[ ]	/* LessThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHW[ ]	/* 5 values pushed */\01231 336 7 31 306 \012PUSHB[ ]	/* 4 values pushed */\0127 31 104 7 \012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHW[ ]	/* 5 values pushed */\012144 336 7 144 306 \012PUSHB[ ]	/* 4 values pushed */\0127 144 104 7 \012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHB[ ]	/* 1 value pushed */\012150 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012170 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012255 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012167 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012500 498 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012499 498 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012731 500 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012500 731 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012267 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012101 499 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012112 499 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121230 101 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012101 1230 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012666 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01292 500 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012105 500 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122909 92 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01292 2909 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012666 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012111 92 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01292 92 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122909 111 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012111 2909 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121332 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012249 101 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012101 101 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0126114 249 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012249 6114 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01289 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01288 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01294 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012355 88 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01288 355 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01296 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01288 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\012122 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012383 88 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01288 383 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012666 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01288 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01288 88 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122681 88 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01288 2681 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\012112 101 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\012105 92 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012499 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 33 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012999 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\01270 97 70 \012RCVT[ ]	/* ReadCVT */\012MAX[ ]	/* Maximum */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\012111 249 70 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\012102 174 120 131 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012139 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\012120 174 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012174 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\012120 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\012102 131 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012131 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\012102 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 131 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012131 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\012102 64 102 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\012123 118 96 133 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012137 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01296 118 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012118 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01296 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\012123 133 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012133 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\012123 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 133 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012133 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\012123 64 123 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0122 11 10 18 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012SZPS[ ]	/* SetZonePointerS */\012SRP0[ ]	/* SetRefPoint0 */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01215137 6270 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 424 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01211585 11585 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0126270 15137 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\012424 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 1 value pushed */\012606 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MAX[ ]	/* Maximum */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHW[ ]	/* 1 value pushed */\012607 \012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MAX[ ]	/* Maximum */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 59 values pushed */\01260 59 58 57 56 55 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01270 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012102 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012205 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\012346 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012141 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012237 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01277 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01211 10 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01210 11 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0121 70 \012MIAP[0]	/* MoveIndirectAbsPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0122 70 \012RCVT[ ]	/* ReadCVT */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SFVTL[0]	/* SetFVectorToLine */\012GFV[ ]	/* GetFVector */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MAX[ ]	/* Maximum */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01244 192 \012ROLL[ ]	/* RollTopThreeStack */\012MIN[ ]	/* Minimum */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012CALL[ ]	/* CallFunction */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\012422 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012PUSHW[ ]	/* 1 value pushed */\012256 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01274 -128 \012PUSHB[ ]	/* 2 values pushed */\01273 128 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SDPVTL[1]	/* SetDualPVectorToLine */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SDPVTL[1]	/* SetDualPVectorToLine */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012160 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01271 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012MIN[ ]	/* Minimum */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012RTG[ ]	/* RoundToGrid */\012MDAP[1]	/* MoveDirectAbsPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ROUND[10]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012ROUND[10]	/* Round */\012ADD[ ]	/* Add */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01226 \012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\01226 74 64 \012PUSHW[ ]	/* 2 values pushed */\012-32 74 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012JMPR[ ]	/* Jump */\012PUSHB[ ]	/* 2 values pushed */\01220 0 \012ROLL[ ]	/* RollTopThreeStack */\012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHB[ ]	/* 4 values pushed */\01273 64 32 73 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012NEG[ ]	/* Negate */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SRP0[ ]	/* SetRefPoint0 */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SHC[1]	/* ShiftContourByLastPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012PUSHB[ ]	/* 1 value pushed */\01275 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01275 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012MDAP[1]	/* MoveDirectAbsPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0128192 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 64 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0125461 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 128 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012NEG[ ]	/* Negate */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0124 5 \012CINDEX[ ]	/* CopyXToTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012ROLL[ ]	/* RollTopThreeStack */\012MAX[ ]	/* Maximum */\012ELSE[ ]	/* Else */\012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012MIN[ ]	/* Minimum */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-128 \012DIV[ ]	/* Divide */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 2 values pushed */\01275 75 \012ROLL[ ]	/* RollTopThreeStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-64 \012MAX[ ]	/* Maximum */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MIN[ ]	/* Minimum */\012EIF[ ]	/* EndIf */\012ROUND[00]	/* Round */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[1]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[0]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[0]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ABS[ ]	/* Absolute */\012ROUND[01]	/* Round */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012ROUND[10]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012MIN[ ]	/* Minimum */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012POP[ ]	/* PopTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MIRP[10110]	/* MoveIndirectRelPt */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012MDRP[10000]	/* MoveDirectRelPt */\012SWAP[ ]	/* SwapTopStack */\012MDRP[01001]	/* MoveDirectRelPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP1[ ]	/* SetZonePointer1 */\012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SLOOP[ ]	/* SetLoopVariable */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZP0[ ]	/* SetZonePointer0 */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
1508,
28,
1471,
37,
1471,
37,
1088,
28,
0,
-37,
0,
-28,
0,
-37,
-398,
-28,
1508,
28,
-398,
-28,
810,
-16,
1491,
16,
733,
-18,
1490,
18,
-9,
-18,
748,
18,
0,
0,
0,
0,
0,
0,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
-1,
0,
638,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
-1,
-1,
-1,
142,
0,
142,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
136,
144,
219,
129,
56,
429,
134,
140,
106,
144,
115,
104,
131,
137,
146,
624,
147,
177,
181,
435,
142,
107,
110,
309,
53,
152,
138,
152,
-124,
-59,
12,
246,
289,
-144,
81,
115,
126,
143,
156,
248,
10,
139,
143,
216,
4,
109,
-116,
1133,
-104,
12,
22,
62,
65,
115,
135,
139,
181,
295,
1012,
121,
144,
93,
105,
151,
255,
-197,
-159,
-93,
-45,
16,
43,
275,
0,
53,
58,
84,
109,
202,
218,
246,
677,
-70,
6,
23,
33,
88,
141,
184,
-265,
-178,
-85,
13,
23,
49,
73,
89,
111,
143,
1033,
-68,
8,
10,
12,
13,
24,
61,
84,
99,
127,
140,
143,
151,
167,
179,
370,
417,
542,
571,
818,
996,
-69,
-20,
-4,
12,
17,
25,
56,
70,
83,
98,
138,
139,
140,
157,
157,
194,
196,
260,
308,
328,
336,
357,
426,
437,
455,
608,
616,
636,
722,
916,
949,
-289,
-54,
-27,
1,
3,
20,
26,
28,
77,
78,
84,
103,
118,
146,
160,
165,
181,
201,
228,
274,
303,
327,
353,
361,
434,
452,
524,
550,
626,
690,
709,
709,
774,
842,
847,
915,
1048,
1549,
-617,
-230,
-90,
-32,
-20,
32,
32,
54,
55,
67,
73,
75,
78,
86,
90,
107,
109,
109,
111,
116,
122,
138,
142,
144,
148,
152,
157,
167,
178,
187,
188,
205,
211,
212,
227,
231,
231,
287,
291,
303,
312,
322,
327,
333,
336,
348,
370,
387,
401,
437,
457,
458,
464,
475,
486,
501,
527,
550,
565,
576,
579,
621,
626,
631,
681,
682,
691,
695,
713,
749,
774,
777,
804,
857,
880,
885,
906,
991,
998,
1024,
1044,
1110,
1137,
1140,
1239,
1495,
1571,
1906,
-1019,
-467,
-314,
-283,
-129,
-37,
-25,
4,
61,
69,
78,
79,
88,
90,
90,
93,
93,
103,
103,
105,
108,
115,
129,
138,
141,
142,
147,
152,
155,
158,
163,
166,
174,
178,
179,
179,
180,
191,
196,
196,
201,
202,
211,
226,
227,
252,
256,
266,
283,
288,
297,
300,
309,
318,
328,
342,
357,
377,
378,
393,
396,
397,
401,
420,
427,
455,
467,
484,
497,
498,
506,
509,
519,
527,
528,
545,
602,
606,
615,
626,
634,
650,
660,
663,
737,
802,
807,
807,
834,
838,
862,
869,
881,
933,
937,
941,
962,
1010,
1019,
1024,
1028,
1086,
1106,
1106,
1107,
1133,
1155,
1200,
1230,
1280,
1303,
1318,
1348,
1362,
1365,
1417,
1418,
1438,
1478,
1571,
1612,
1627,
1658,
1684,
1708,
1708,
1774,
1860,
1954,
1962,
2072,
2083,
2103,
2129,
2246,
2292,
141,
148,
140,
0,
0,
0,
0,
0,
0,
0,
230,
602,
107,
313,
205,
81,
154,
439,
205,
502,
281,
302,
231,
320,
49,
235,
270,
412,
151,
176,
79,
121,
172,
228,
70,
213,
-207,
164,
119,
254,
108,
136,
117,
195,
144,
542,
264,
1060,
180,
-228,
435,
358,
411,
290,
191,
261,
212,
231,
256,
67,
64,
198,
742,
121,
53,
336,
361,
309,
167,
517,
158,
249,
266,
350,
268,
233,
259,
396,
180,
107,
21,
61,
192,
157,
197,
204,
89,
55,
17,
306,
174,
338,
198,
32,
-193,
910,
167,
279,
81,
331,
-860,
576,
225,
236,
253,
-347,
139,
484,
116,
150,
389,
246,
178,
340,
172,
27,
680,
174,
194,
208,
154,
138,
1062,
1255,
103,
109,
75,
94,
169,
102,
102,
0,
460,
350
);
}
);
descender = -426;
guideLines = (
{
position = "{129, 1089}";
}
);
id = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
userData = {
GSCornerRadius = 200;
};
weightValue = 400;
widthValue = 5;
xHeight = 500;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1280 0 LINE",
"1280 1280 LINE",
"256 1280 LINE",
"256 0 LINE"
);
},
{
closed = 1;
nodes = (
"288 1248 LINE",
"1248 1248 LINE",
"1248 32 LINE",
"288 32 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
5 4 
PUSHW[ ]\011/* 1 value pushed */
280 
PUSHB[ ]\011/* 3 values pushed */
0 6 7 
PUSHW[ ]\011/* 4 values pushed */
280 2 1 471 
PUSHB[ ]\011/* 6 values pushed */
3 3 0 10 6 5 
PUSHW[ ]\011/* 1 value pushed */
279 
PUSHB[ ]\011/* 7 values pushed */
3 3 2 74 9 7 4 
PUSHW[ ]\011/* 1 value pushed */
279 
PUSHB[ ]\011/* 7 values pushed */
1 0 73 8 149 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1536;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 567;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 567;
}
);
note = space;
unicode = 0020;
},
{
glyphname = exclam;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"228 1508 LINE",
"228 368 LINE",
"373 368 LINE",
"373 1508 LINE"
);
},
{
closed = 1;
nodes = (
"234 220 OFFCURVE",
"179 165.333 OFFCURVE",
"179 96 CURVE SMOOTH",
"179 28 OFFCURVE",
"234 -28 OFFCURVE",
"302 -28 CURVE SMOOTH",
"370 -28 OFFCURVE",
"425 28 OFFCURVE",
"425 96 CURVE SMOOTH",
"425 165.333 OFFCURVE",
"370 220 OFFCURVE",
"302 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
2 298 
NPUSHB[ ]\011/* 28 values pushed */
4 124 10 11 3 0 0 3 1 2 17 71 71 74 5 7 155 1 127 5 2 155 13 73 16 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
0 2 32 2 2 240 2 1 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
0 7 32 7 2 240 7 1 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 604;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"585 1508 LINE",
"437 1508 LINE",
"459 1045 LINE",
"562 1045 LINE"
);
},
{
closed = 1;
nodes = (
"196 1508 LINE",
"48 1508 LINE",
"70 1045 LINE",
"174 1045 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
1 4 0 5 2 7 3 0 5 
PUSHW[ ]\011/* 1 value pushed */
261 
NPUSHB[ ]\011/* 12 values pushed */
3 6 0 0 1 3 2 4 5 7 6 2 
PUSHW[ ]\011/* 1 value pushed */
389 
NPUSHB[ ]\011/* 9 values pushed */
31 3 47 3 2 3 74 9 7 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 6 values pushed */
6 73 8 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 633;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1002 602 LINE",
"1050 936 LINE",
"1290 936 LINE",
"1290 1045 LINE",
"1066 1045 LINE",
"1135 1513 LINE",
"1023 1513 LINE",
"955 1045 LINE",
"623 1045 LINE",
"691 1513 LINE",
"584 1513 LINE",
"514 1045 LINE",
"245 1045 LINE",
"245 936 LINE",
"498 936 LINE",
"447 602 LINE",
"184 602 LINE",
"184 494 LINE",
"430 494 LINE",
"354 0 LINE",
"464 0 LINE",
"540 494 LINE",
"873 494 LINE",
"801 0 LINE",
"913 0 LINE",
"985 494 LINE",
"1233 494 LINE",
"1233 602 LINE"
);
},
{
closed = 1;
nodes = (
"889 602 LINE",
"557 602 LINE",
"606 936 LINE",
"940 936 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 118 values pushed */
23 27 23 30 2 31 11 0 21 4 30 11 0 18 7 29 14 25 18 7 28 14 25 21 4 27 11 0 22 3 26 14 25 22 3 23 15 24 22 3 20 15 24 21 4 19 15 24 18 7 16 15 24 17 8 13 14 25 17 8 12 11 0 17 8 9 10 1 17 8 6 10 1 18 7 5 10 1 21 4 2 10 1 22 3 22 3 3 93 4 21 20 4 4 21 18 7 7 93 8 17 20 8 8 17 4 7 3 8 21 18 22 17 1 10 192 0 11 
PUSHW[ ]\011/* 1 value pushed */
509 
NPUSHB[ ]\011/* 16 values pushed */
3 8 10 24 15 192 25 15 14 1 14 202 22 17 0 4 
PUSHW[ ]\011/* 7 values pushed */
508 21 383 3 508 22 301 
NPUSHB[ ]\011/* 14 values pushed */
0 155 15 25 1 9 15 25 1 8 25 74 33 18 
PUSHW[ ]\011/* 7 values pushed */
508 7 383 17 508 8 301 
NPUSHB[ ]\011/* 13 values pushed */
15 155 0 10 16 10 2 10 73 32 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1475;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"531 1471 LINE",
"369.667 1455 OFFCURVE",
"270 1388.667 OFFCURVE",
"210 1286 CURVE SMOOTH",
"180 1234.667 OFFCURVE",
"165 1179 OFFCURVE",
"165 1119 CURVE SMOOTH",
"165 995 OFFCURVE",
"218.667 903.333 OFFCURVE",
"332 826 CURVE SMOOTH",
"360 807.333 OFFCURVE",
"426.333 772.333 OFFCURVE",
"531 721 CURVE",
"531 102 LINE",
"389 116 OFFCURVE",
"271.667 184.333 OFFCURVE",
"179 307 CURVE",
"72 226 LINE",
"134.667 123.333 OFFCURVE",
"235.333 41.667 OFFCURVE",
"334 3 CURVE SMOOTH",
"383.333 -16.333 OFFCURVE",
"449 -29.333 OFFCURVE",
"531 -36 CURVE",
"531 -349 LINE",
"662 -349 LINE",
"662 -36 LINE",
"740 -26 OFFCURVE",
"801.333 -10 OFFCURVE",
"846 12 CURVE SMOOTH",
"983.333 80 OFFCURVE",
"1070 209.333 OFFCURVE",
"1070 356 CURVE SMOOTH",
"1070 444.667 OFFCURVE",
"1042.667 525.667 OFFCURVE",
"988 599 CURVE SMOOTH",
"945.333 656.333 OFFCURVE",
"836.667 731 OFFCURVE",
"662 823 CURVE",
"662 1322 LINE",
"739.333 1305.333 OFFCURVE",
"803.667 1257.333 OFFCURVE",
"855 1178 CURVE",
"963 1265 LINE",
"877.667 1385 OFFCURVE",
"792.667 1441 OFFCURVE",
"662 1465 CURVE",
"662 1574 LINE",
"531 1574 LINE"
);
},
{
closed = 1;
nodes = (
"531 877 LINE",
"449.667 913.667 OFFCURVE",
"390.333 954.667 OFFCURVE",
"353 1000 CURVE SMOOTH",
"325 1033.333 OFFCURVE",
"311 1074 OFFCURVE",
"311 1122 CURVE SMOOTH",
"311 1196.667 OFFCURVE",
"348.667 1261.833 OFFCURVE",
"410 1298.5 CURVE SMOOTH",
"440.667 1316.833 OFFCURVE",
"481 1328 OFFCURVE",
"531 1332 CURVE"
);
},
{
closed = 1;
nodes = (
"662 668 LINE",
"868.667 557.333 OFFCURVE",
"928 467.667 OFFCURVE",
"928 353 CURVE SMOOTH",
"928 235.667 OFFCURVE",
"823.333 128.667 OFFCURVE",
"662 106 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
59 32 96 27 123 24 116 27 123 41 116 47 112 49 127 53 155 24 155 41 148 45 171 23 180 4 187 23 196 4 15 49 64 19 21 57 7 64 18 21 57 27 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 43 values pushed */
18 22 57 0 5 1 137 24 128 27 128 41 143 49 4 68 11 79 32 79 49 96 27 4 52 11 63 49 80 27 95 49 4 5 11 15 32 10 36 111 49 4 9 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
17 21 57 47 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 51 values pushed */
17 21 57 2 8 54 48 18 19 38 39 29 28 21 20 8 7 40 3 39 2 3 37 3 38 48 49 27 3 18 22 17 16 4 21 54 9 29 47 9 47 28 39 1 19 0 20 15 5 1 5 
PUSHW[ ]\011/* 1 value pushed */
513 
PUSHB[ ]\011/* 4 values pushed */
15 6 1 6 
PUSHW[ ]\011/* 1 value pushed */
514 
PUSHB[ ]\011/* 3 values pushed */
39 126 0 
PUSHW[ ]\011/* 1 value pushed */
380 
PUSHB[ ]\011/* 6 values pushed */
38 5 0 25 1 25 
PUSHW[ ]\011/* 1 value pushed */
513 
PUSHB[ ]\011/* 4 values pushed */
0 26 1 26 
PUSHW[ ]\011/* 1 value pushed */
512 
PUSHB[ ]\011/* 3 values pushed */
28 126 20 
PUSHW[ ]\011/* 1 value pushed */
511 
NPUSHB[ ]\011/* 10 values pushed */
21 13 19 20 0 249 1 1 43 6 
PUSHW[ ]\011/* 1 value pushed */
510 
PUSHB[ ]\011/* 4 values pushed */
47 5 1 5 
PUSHW[ ]\011/* 1 value pushed */
378 
NPUSHB[ ]\011/* 15 values pushed */
51 111 13 74 56 43 111 32 34 48 34 64 34 3 34 
PUSHW[ ]\011/* 3 values pushed */
378 26 510 
PUSHB[ ]\011/* 6 values pushed */
25 73 55 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SLOOP[ ]\011/* SetLoopVariable */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1263 1536 LINE",
"1051 1476 OFFCURVE",
"942.333 1462 OFFCURVE",
"793 1462 CURVE SMOOTH",
"691.667 1462 OFFCURVE",
"597.667 1471.333 OFFCURVE",
"511 1490 CURVE SMOOTH",
"454.333 1502 OFFCURVE",
"413.667 1508 OFFCURVE",
"389 1508 CURVE SMOOTH",
"273 1508 OFFCURVE",
"151 1438.167 OFFCURVE",
"91 1333.5 CURVE SMOOTH",
"61 1281.167 OFFCURVE",
"46 1223 OFFCURVE",
"46 1159 CURVE SMOOTH",
"46 967 OFFCURVE",
"195.667 814 OFFCURVE",
"389 814 CURVE SMOOTH",
"599.667 814 OFFCURVE",
"738 984.333 OFFCURVE",
"738 1167 CURVE SMOOTH",
"738 1231 OFFCURVE",
"717.333 1291.667 OFFCURVE",
"676 1349 CURVE",
"730 1348 LINE SMOOTH",
"896 1348 OFFCURVE",
"1036.667 1362 OFFCURVE",
"1152 1390 CURVE",
"177 -102 LINE",
"309 -102 LINE",
"1381 1536 LINE"
);
},
{
closed = 1;
nodes = (
"513.333 1381 OFFCURVE",
"612 1282.333 OFFCURVE",
"612 1161 CURVE SMOOTH",
"612 1039.667 OFFCURVE",
"513.333 942 OFFCURVE",
"392 942 CURVE SMOOTH",
"270.667 942 OFFCURVE",
"173 1039.667 OFFCURVE",
"173 1161 CURVE SMOOTH",
"173 1282.333 OFFCURVE",
"270.667 1381 OFFCURVE",
"392 1381 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1004.333 649 OFFCURVE",
"849 493.667 OFFCURVE",
"849 303 CURVE SMOOTH",
"849 112.333 OFFCURVE",
"1004.333 -43 OFFCURVE",
"1195 -43 CURVE SMOOTH",
"1385.667 -43 OFFCURVE",
"1541 112.333 OFFCURVE",
"1541 303 CURVE SMOOTH",
"1541 493.667 OFFCURVE",
"1385.667 649 OFFCURVE",
"1195 649 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1316.333 522 OFFCURVE",
"1415 424.333 OFFCURVE",
"1415 303 CURVE SMOOTH",
"1415 181.667 OFFCURVE",
"1316.333 84 OFFCURVE",
"1195 84 CURVE SMOOTH",
"1073.667 84 OFFCURVE",
"976 181.667 OFFCURVE",
"976 303 CURVE SMOOTH",
"976 424.333 OFFCURVE",
"1073.667 522 OFFCURVE",
"1195 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
24 2 1 101 8 3 2 3 4 2 93 1 0 20 1 1 0 3 5 0 2 25 1 159 44 38 97 50 
PUSHW[ ]\011/* 1 value pushed */
515 
NPUSHB[ ]\011/* 14 values pushed */
56 97 44 13 5 106 22 159 25 168 18 11 97 32 
PUSHW[ ]\011/* 1 value pushed */
515 
NPUSHB[ ]\011/* 9 values pushed */
26 97 18 5 0 0 59 53 2 
PUSHW[ ]\011/* 1 value pushed */
383 
PUSHB[ ]\011/* 7 values pushed */
1 1 35 29 53 121 47 
PUSHW[ ]\011/* 1 value pushed */
340 
PUSHB[ ]\011/* 8 values pushed */
59 121 41 74 63 35 121 8 
PUSHW[ ]\011/* 1 value pushed */
340 
PUSHB[ ]\011/* 8 values pushed */
29 121 14 73 62 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 78 values pushed */
39 61 27 34 9 17 16 38 33 10 35 87 1 31 12 29 87 0 27 17 29 87 0 57 43 59 87 1 55 45 53 87 0 61 39 59 87 1 51 49 53 87 0 34 9 32 87 0 30 13 32 87 0 28 15 26 87 1 58 42 56 87 0 54 46 56 87 0 60 40 50 87 1 52 48 50 87 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1587;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1246.667 503.333 OFFCURVE",
"1187.333 452.333 OFFCURVE",
"1114 391 CURVE",
"961 544 LINE",
"738 778 LINE",
"840 864.667 OFFCURVE",
"908.333 935.833 OFFCURVE",
"943 991.5 CURVE SMOOTH",
"977.667 1047.167 OFFCURVE",
"995 1099.667 OFFCURVE",
"995 1149 CURVE SMOOTH",
"995 1242.333 OFFCURVE",
"940.333 1331.667 OFFCURVE",
"839 1381 CURVE SMOOTH",
"788.333 1405.667 OFFCURVE",
"732.333 1418 OFFCURVE",
"671 1418 CURVE SMOOTH",
"573.667 1418 OFFCURVE",
"492.333 1390 OFFCURVE",
"427 1334 CURVE SMOOTH",
"370.333 1286 OFFCURVE",
"342 1225.333 OFFCURVE",
"342 1152 CURVE SMOOTH",
"342 1110 OFFCURVE",
"353.5 1065.833 OFFCURVE",
"376.5 1019.5 CURVE SMOOTH",
"399.5 973.167 OFFCURVE",
"451.333 901.333 OFFCURVE",
"532 804 CURVE",
"246.667 578.667 OFFCURVE",
"179 450.667 OFFCURVE",
"179 304 CURVE SMOOTH",
"179 109.333 OFFCURVE",
"328.333 -37 OFFCURVE",
"555 -37 CURVE SMOOTH",
"725.667 -37 OFFCURVE",
"849.667 5 OFFCURVE",
"1103 197 CURVE",
"1292 0 LINE",
"1497 0 LINE",
"1460.333 42.667 OFFCURVE",
"1416.667 89.333 OFFCURVE",
"1366 140 CURVE SMOOTH",
"1302 204.667 OFFCURVE",
"1253 255 OFFCURVE",
"1219 291 CURVE",
"1270.333 332.333 OFFCURVE",
"1328 381.333 OFFCURVE",
"1392 438 CURVE",
"1292 544 LINE"
);
},
{
closed = 1;
nodes = (
"587.667 955.333 OFFCURVE",
"541.667 1017.333 OFFCURVE",
"509 1074 CURVE SMOOTH",
"495.667 1097.333 OFFCURVE",
"489 1122.333 OFFCURVE",
"489 1149 CURVE SMOOTH",
"489 1218.333 OFFCURVE",
"561 1277 OFFCURVE",
"665 1277 CURVE SMOOTH",
"774.333 1277 OFFCURVE",
"846 1220 OFFCURVE",
"846 1152 CURVE SMOOTH",
"846 1122.667 OFFCURVE",
"833.333 1089 OFFCURVE",
"808 1051 CURVE SMOOTH",
"772 997.667 OFFCURVE",
"718.333 943.333 OFFCURVE",
"647 888 CURVE"
);
},
{
closed = 1;
nodes = (
"678.333 636.333 OFFCURVE",
"723 587 OFFCURVE",
"763 545 CURVE SMOOTH",
"1003 299 LINE",
"895.667 222.333 OFFCURVE",
"802.667 167 OFFCURVE",
"724 133 CURVE SMOOTH",
"674 111.667 OFFCURVE",
"623 101 OFFCURVE",
"571 101 CURVE SMOOTH",
"433.667 101 OFFCURVE",
"326 202 OFFCURVE",
"326 314 CURVE SMOOTH",
"326 361.333 OFFCURVE",
"345.333 412.833 OFFCURVE",
"384 468.5 CURVE SMOOTH",
"422.667 524.167 OFFCURVE",
"504.333 599 OFFCURVE",
"629 693 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 177 values pushed */
10 9 31 0 31 1 47 0 47 1 47 2 52 31 7 132 48 171 38 180 31 180 32 180 49 5 10 19 32 0 32 2 59 37 75 31 79 37 100 32 111 37 127 18 112 31 10 59 8 130 18 130 36 146 18 146 36 162 18 162 36 178 18 178 36 194 18 194 36 10 239 29 239 40 2 0 7 62 50 18 3 61 36 32 33 62 50 18 3 61 36 32 33 2 1 1 10 35 59 59 0 4 5 6 7 7 33 60 59 0 61 8 34 59 0 33 7 9 10 1 61 8 3 10 1 33 7 1 10 10 85 59 0 20 59 59 0 61 8 8 85 7 33 20 7 7 33 33 1 61 3 8 0 43 218 25 3 0 201 8 8 56 97 12 9 61 33 53 8 40 99 9 15 29 1 8 29 
PUSHW[ ]\011/* 5 values pushed */
517 1 381 8 516 
PUSHB[ ]\011/* 6 values pushed */
7 74 64 46 99 21 
PUSHW[ ]\011/* 1 value pushed */
301 
PUSHB[ ]\011/* 8 values pushed */
53 99 15 73 63 103 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
54 55 41 45 22 28 13 14 27 37 23 38 55 13 53 87 0 42 26 40 107 1 44 24 46 107 0 54 14 56 87 0 41 28 43 107 1 45 22 43 107 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1550;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"277 1508 LINE",
"129 1508 LINE",
"151 1045 LINE",
"254 1045 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
1 261 
NPUSHB[ ]\011/* 10 values pushed */
2 0 3 182 2 73 4 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 405;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"338 1233.333 OFFCURVE",
"267 869.667 OFFCURVE",
"267 495 CURVE SMOOTH",
"267 147 OFFCURVE",
"330.333 -188.667 OFFCURVE",
"429 -426 CURVE",
"583 -426 LINE",
"479 -178 OFFCURVE",
"416 162 OFFCURVE",
"416 514 CURVE SMOOTH",
"416 894 OFFCURVE",
"501.333 1268 OFFCURVE",
"632 1536 CURVE",
"470 1536 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
7 1 0 8 19 0 17 15 71 71 74 8 99 7 155 0 197 1 162 4 99 11 73 14 149 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 756;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"418 -123.333 OFFCURVE",
"489 240.667 OFFCURVE",
"489 614 CURVE SMOOTH",
"489 962 OFFCURVE",
"427 1298.667 OFFCURVE",
"327 1536 CURVE",
"173 1536 LINE",
"277 1288 OFFCURVE",
"340 948 OFFCURVE",
"340 596 CURVE SMOOTH",
"340 216 OFFCURVE",
"256 -158 OFFCURVE",
"124 -426 CURVE",
"286 -426 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
7 1 0 8 17 0 19 15 71 71 74 11 99 4 
PUSHW[ ]\011/* 1 value pushed */
301 
NPUSHB[ ]\011/* 12 values pushed */
8 99 7 155 0 197 1 73 14 95 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 756;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"400 1211 LINE",
"154 1387 LINE",
"88 1275 LINE",
"369 1150 LINE",
"88 1027 LINE",
"154 914 LINE",
"400 1088 LINE",
"369 791 LINE",
"499 791 LINE",
"470 1088 LINE",
"716 914 LINE",
"782 1027 LINE",
"505 1150 LINE",
"782 1275 LINE",
"716 1387 LINE",
"470 1211 LINE",
"499 1508 LINE",
"369 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
9 8 7 6 11 12 13 7 10 15 16 1 2 3 4 5 7 0 10 
PUSHW[ ]\011/* 3 values pushed */
258 14 258 
NPUSHB[ ]\011/* 28 values pushed */
0 0 3 4 5 7 4 6 11 17 0 1 2 8 6 9 12 14 15 16 4 10 13 19 71 71 74 6 
PUSHW[ ]\011/* 5 values pushed */
518 9 383 10 518 
PUSHB[ ]\011/* 6 values pushed */
13 73 18 119 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 870;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"115 804 LINE",
"115 667 LINE",
"552 667 LINE",
"552 233 LINE",
"689 233 LINE",
"689 667 LINE",
"1127 667 LINE",
"1127 804 LINE",
"689 804 LINE",
"689 1238 LINE",
"552 1238 LINE",
"552 804 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
9 10 5 1 8 6 10 5 2 7 3 11 4 2 7 0 11 4 1 8 4 5 10 1 228 11 127 8 228 10 2 1 7 8 13 71 71 74 5 228 7 127 8 228 0 10 1 10 73 12 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"128 -130 LINE",
"227 -172 LINE",
"430 206 LINE",
"295 270 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
3 1 2 
PUSHW[ ]\011/* 1 value pushed */
261 
NPUSHB[ ]\011/* 9 values pushed */
0 0 2 3 5 71 71 74 1 
PUSHW[ ]\011/* 1 value pushed */
519 
PUSHB[ ]\011/* 6 values pushed */
3 73 4 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"65 492 LINE",
"615 492 LINE",
"615 614 LINE",
"65 614 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
1 2 0 98 22 3 1 0 3 2 74 5 3 73 4 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 680;
}
);
note = hyphen;
unicode = "002D,00AD";
},
{
glyphname = period;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"242 220 OFFCURVE",
"187 165.333 OFFCURVE",
"187 96 CURVE SMOOTH",
"187 28 OFFCURVE",
"242 -28 OFFCURVE",
"310 -28 CURVE SMOOTH",
"378 -28 OFFCURVE",
"433 28 OFFCURVE",
"433 96 CURVE SMOOTH",
"433 165.333 OFFCURVE",
"378 220 OFFCURVE",
"310 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
192 0 1 0 124 6 11 13 71 71 74 192 3 1 3 116 9 73 12 103 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"682 1508 LINE",
"72 -200 LINE",
"225 -200 LINE",
"836 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
3 0 1 1 85 2 3 20 2 2 3 2 3 0 1 0 0 3 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 4 values pushed */
0 74 5 1 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 6 values pushed */
2 73 4 119 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 895;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"65 349.667 OFFCURVE",
"154.333 152 OFFCURVE",
"305 44 CURVE SMOOTH",
"380.333 -10 OFFCURVE",
"465 -37 OFFCURVE",
"559 -37 CURVE SMOOTH",
"749.667 -37 OFFCURVE",
"913.833 75.333 OFFCURVE",
"1002.5 294 CURVE SMOOTH",
"1046.833 403.333 OFFCURVE",
"1069 550.333 OFFCURVE",
"1069 735 CURVE SMOOTH",
"1069 1105.667 OFFCURVE",
"972.667 1315.5 OFFCURVE",
"818 1425.5 CURVE SMOOTH",
"740.667 1480.5 OFFCURVE",
"654.333 1508 OFFCURVE",
"559 1508 CURVE SMOOTH",
"371 1508 OFFCURVE",
"210.833 1397 OFFCURVE",
"127.5 1185 CURVE SMOOTH",
"85.833 1079 OFFCURVE",
"65 929 OFFCURVE",
"65 735 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"204 1065.333 OFFCURVE",
"265.333 1215.167 OFFCURVE",
"380 1302.5 CURVE SMOOTH",
"437.333 1346.167 OFFCURVE",
"498.667 1368 OFFCURVE",
"564 1368 CURVE SMOOTH",
"692 1368 OFFCURVE",
"816.667 1284.167 OFFCURVE",
"882 1095.5 CURVE SMOOTH",
"914.667 1001.167 OFFCURVE",
"931 880 OFFCURVE",
"931 732 CURVE SMOOTH",
"931 584.667 OFFCURVE",
"912.667 458.667 OFFCURVE",
"876 354 CURVE SMOOTH",
"817.333 182 OFFCURVE",
"694.667 96 OFFCURVE",
"564 96 CURVE SMOOTH",
"434.667 96 OFFCURVE",
"307.833 185.5 OFFCURVE",
"248.5 355.5 CURVE SMOOTH",
"218.833 440.5 OFFCURVE",
"204 566 OFFCURVE",
"204 732 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
83 8 20 126 12 13 29 126 4 5 25 111 8 74 34 16 111 0 73 33 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 62 values pushed */
1 32 10 38 23 24 22 24 2 6 18 38 14 37 6 37 27 38 31 37 2 38 21 11 25 229 1 19 13 16 229 0 28 5 25 229 1 30 3 16 229 0 24 9 20 229 0 17 15 20 229 0 26 7 29 229 1 32 1 29 229 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1135;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"291 1327 LINE",
"522 1327 LINE",
"522 0 LINE",
"668 0 LINE",
"668 1471 LINE",
"379 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
2 1 3 4 5 194 0 4 3 12 1 4 2 0 5 2 249 3 
PUSHW[ ]\011/* 1 value pushed */
520 
PUSHB[ ]\011/* 3 values pushed */
5 73 6 
PUSHW[ ]\011/* 3 values pushed */
312 363 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1135;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"254.333 1236.667 OFFCURVE",
"390 1368 OFFCURVE",
"578 1368 CURVE SMOOTH",
"756.667 1368 OFFCURVE",
"897 1230.333 OFFCURVE",
"897 1065 CURVE SMOOTH",
"897 999.667 OFFCURVE",
"879.833 937.5 OFFCURVE",
"845.5 878.5 CURVE SMOOTH",
"811.167 819.5 OFFCURVE",
"737 729 OFFCURVE",
"623 607 CURVE SMOOTH",
"61 0 LINE",
"1060 0 LINE",
"1060 142 LINE",
"381 142 LINE",
"747 537 LINE SMOOTH",
"977.667 786.333 OFFCURVE",
"1040 901.333 OFFCURVE",
"1040 1068 CURVE SMOOTH",
"1040 1305.333 OFFCURVE",
"856.667 1508 OFFCURVE",
"586 1508 CURVE SMOOTH",
"312.667 1508 OFFCURVE",
"104 1300.667 OFFCURVE",
"96 1010 CURVE",
"237 1010 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
88 2 153 17 201 3 198 9 4 57 3 73 2 73 3 3 23 22 39 22 56 2 3 23 8 0 48 18 20 57 1 64 18 20 57 10 11 11 140 14 15 20 14 14 15 11 13 14 10 15 21 12 194 14 12 0 
PUSHW[ ]\011/* 1 value pushed */
417 
NPUSHB[ ]\011/* 19 values pushed */
21 126 4 5 15 18 14 10 11 18 111 7 241 13 74 25 0 111 1 
PUSHW[ ]\011/* 3 values pushed */
522 11 521 
PUSHB[ ]\011/* 6 values pushed */
14 73 24 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
19 20 5 6 20 5 18 108 1 19 6 21 108 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"335 1300.667 OFFCURVE",
"425.333 1365 OFFCURVE",
"552 1365 CURVE SMOOTH",
"708 1365 OFFCURVE",
"822 1257 OFFCURVE",
"822 1129 CURVE SMOOTH",
"822 1042.333 OFFCURVE",
"774.667 965.833 OFFCURVE",
"664 918.5 CURVE SMOOTH",
"608.667 894.833 OFFCURVE",
"547.333 883 OFFCURVE",
"480 883 CURVE",
"480 748 LINE",
"708 736 OFFCURVE",
"797.833 688 OFFCURVE",
"862.5 588 CURVE SMOOTH",
"894.833 538 OFFCURVE",
"911 484.333 OFFCURVE",
"911 427 CURVE SMOOTH",
"911 255 OFFCURVE",
"770.333 106 OFFCURVE",
"557 106 CURVE SMOOTH",
"463 106 OFFCURVE",
"385.667 133 OFFCURVE",
"325 187 CURVE SMOOTH",
"277.667 229.667 OFFCURVE",
"241.333 298.667 OFFCURVE",
"216 394 CURVE",
"72 394 LINE",
"124 111.333 OFFCURVE",
"301.667 -37 OFFCURVE",
"555 -37 CURVE SMOOTH",
"743 -37 OFFCURVE",
"902 49.167 OFFCURVE",
"990 200.5 CURVE SMOOTH",
"1034 276.167 OFFCURVE",
"1056 355.667 OFFCURVE",
"1056 439 CURVE SMOOTH",
"1056 535.667 OFFCURVE",
"1024 623 OFFCURVE",
"960 701 CURVE SMOOTH",
"914.667 756.333 OFFCURVE",
"856.667 798.333 OFFCURVE",
"786 827 CURVE",
"912 901 OFFCURVE",
"975 1001.333 OFFCURVE",
"975 1128 CURVE SMOOTH",
"975 1257.333 OFFCURVE",
"899.167 1385.5 OFFCURVE",
"766.5 1455.5 CURVE SMOOTH",
"700.167 1490.5 OFFCURVE",
"628.667 1508 OFFCURVE",
"552 1508 CURVE SMOOTH",
"341.333 1508 OFFCURVE",
"175.667 1372.667 OFFCURVE",
"121 1130 CURVE",
"271 1130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
93 31 91 36 107 3 107 36 4 31 64 18 21 57 36 64 16 21 57 24 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 30 values pushed */
11 21 57 185 35 207 32 2 169 31 169 35 185 31 3 46 8 10 33 126 15 34 96 34 2 34 34 41 21 22 
PUSHW[ ]\011/* 1 value pushed */
411 
PUSHB[ ]\011/* 6 values pushed */
26 126 18 13 1 0 
PUSHW[ ]\011/* 1 value pushed */
523 
NPUSHB[ ]\011/* 11 values pushed */
41 126 4 5 10 34 34 22 38 111 8 
PUSHW[ ]\011/* 1 value pushed */
532 
PUSHB[ ]\011/* 8 values pushed */
29 111 14 74 45 0 111 1 
PUSHW[ ]\011/* 1 value pushed */
522 
PUSHB[ ]\011/* 8 values pushed */
22 111 21 73 44 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
39 40 27 28 15 17 5 7 16 38 6 37 27 17 29 108 1 40 5 38 108 1 28 15 26 108 0 39 7 41 108 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"52 342 LINE",
"755 342 LINE",
"755 0 LINE",
"902 0 LINE",
"902 342 LINE",
"1080 342 LINE",
"1080 483 LINE",
"902 483 LINE",
"902 1508 LINE",
"872 1508 LINE"
);
},
{
closed = 1;
nodes = (
"322 483 LINE",
"755 1096 LINE",
"755 483 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
11 12 12 140 9 0 20 9 9 0 3 12 194 4 9 9 0 7 12 11 
PUSHW[ ]\011/* 1 value pushed */
525 
NPUSHB[ ]\011/* 10 values pushed */
0 5 0 11 1 11 7 249 1 6 
PUSHW[ ]\011/* 1 value pushed */
395 
NPUSHB[ ]\011/* 16 values pushed */
15 4 31 4 47 4 3 9 15 4 1 8 4 74 14 12 
PUSHW[ ]\011/* 1 value pushed */
524 
PUSHB[ ]\011/* 6 values pushed */
9 73 13 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[0]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1135;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"370 1471 LINE",
"234 741 LINE",
"357.333 793.667 OFFCURVE",
"462.333 820 OFFCURVE",
"549 820 CURVE SMOOTH",
"758.333 820 OFFCURVE",
"894 683.667 OFFCURVE",
"894 485 CURVE SMOOTH",
"894 265 OFFCURVE",
"734.333 100 OFFCURVE",
"541 100 CURVE SMOOTH",
"442.333 100 OFFCURVE",
"345.5 147.333 OFFCURVE",
"291.5 218 CURVE SMOOTH",
"264.5 253.333 OFFCURVE",
"245.333 299.333 OFFCURVE",
"234 356 CURVE",
"83 356 LINE",
"115 124 OFFCURVE",
"293.333 -37 OFFCURVE",
"532 -37 CURVE SMOOTH",
"732 -37 OFFCURVE",
"888.667 51.667 OFFCURVE",
"978 213 CURVE SMOOTH",
"1022.667 293.667 OFFCURVE",
"1045 382.333 OFFCURVE",
"1045 479 CURVE SMOOTH",
"1045 759 OFFCURVE",
"851 958 OFFCURVE",
"583 958 CURVE SMOOTH",
"531.667 958 OFFCURVE",
"474 948.667 OFFCURVE",
"410 930 CURVE",
"483 1331 LINE",
"1007 1331 LINE",
"1007 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
180 18 192 18 2 52 18 68 18 2 38 8 2 3 3 140 28 29 20 28 28 29 3 5 28 
PUSHW[ ]\011/* 1 value pushed */
528 
NPUSHB[ ]\011/* 13 values pushed */
26 126 5 5 20 2 2 1 194 29 0 4 16 
PUSHW[ ]\011/* 1 value pushed */
408 
PUSHB[ ]\011/* 5 values pushed */
20 126 12 13 0 
PUSHW[ ]\011/* 1 value pushed */
522 
PUSHB[ ]\011/* 6 values pushed */
23 111 8 74 31 2 
PUSHW[ ]\011/* 7 values pushed */
378 3 527 29 526 28 526 
PUSHB[ ]\011/* 6 values pushed */
16 111 15 73 30 213 
PUSHW[ ]\011/* 2 values pushed */
276 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 26 values pushed */
21 25 6 11 10 38 21 11 23 108 1 25 6 23 108 1 22 9 20 108 0 24 7 26 108 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"305 842 LINE SMOOTH",
"179.667 655.333 OFFCURVE",
"138 533 OFFCURVE",
"138 413 CURVE SMOOTH",
"138 251.667 OFFCURVE",
"221.5 99.5 OFFCURVE",
"359.5 21.5 CURVE SMOOTH",
"428.5 -17.5 OFFCURVE",
"503.333 -37 OFFCURVE",
"584 -37 CURVE SMOOTH",
"750.667 -37 OFFCURVE",
"906.333 49.833 OFFCURVE",
"985 186.5 CURVE SMOOTH",
"1024.333 254.833 OFFCURVE",
"1044 331.333 OFFCURVE",
"1044 416 CURVE SMOOTH",
"1044 662.667 OFFCURVE",
"858.333 854 OFFCURVE",
"625 854 CURVE SMOOTH",
"578.333 854 OFFCURVE",
"528.333 845 OFFCURVE",
"475 827 CURVE",
"872 1429 LINE",
"751 1508 LINE"
);
},
{
closed = 1;
nodes = (
"760.667 725 OFFCURVE",
"899 587 OFFCURVE",
"899 415 CURVE SMOOTH",
"899 244.333 OFFCURVE",
"760.667 106 OFFCURVE",
"590 106 CURVE SMOOTH",
"419.333 106 OFFCURVE",
"281 244.333 OFFCURVE",
"281 415 CURVE SMOOTH",
"281 587 OFFCURVE",
"419.333 725 OFFCURVE",
"590 725 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
54 2 1 143 21 1 52 8 18 3 20 2 1 1 140 0 18 20 0 0 18 19 126 2 
PUSHW[ ]\011/* 1 value pushed */
613 
NPUSHB[ ]\011/* 14 values pushed */
4 4 0 5 25 126 11 13 2 1 22 18 15 1 
PUSHW[ ]\011/* 1 value pushed */
529 
NPUSHB[ ]\011/* 24 values pushed */
0 0 15 28 111 0 7 16 7 2 7 74 32 22 111 0 15 16 15 2 15 73 31 215 
PUSHW[ ]\011/* 2 values pushed */
276 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHP[0]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
23 30 5 14 9 38 13 37 26 10 28 108 1 24 12 22 108 0 30 5 28 108 1 27 8 25 108 0 23 14 25 108 0 29 6 19 108 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"147 1332 LINE",
"852 1332 LINE",
"172 25 LINE",
"293 -37 LINE",
"1080 1471 LINE",
"147 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
3 4 4 140 1 2 20 1 1 2 4 1 5 194 0 4 2 13 0 5 4 
PUSHW[ ]\011/* 1 value pushed */
531 
PUSHB[ ]\011/* 6 values pushed */
1 74 7 5 241 2 
PUSHW[ ]\011/* 1 value pushed */
529 
PUSHB[ ]\011/* 3 values pushed */
3 73 6 
PUSHW[ ]\011/* 1 value pushed */
530 
PUSHB[ ]\011/* 2 values pushed */
166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1135;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"927 883 OFFCURVE",
"997 986.667 OFFCURVE",
"997 1120 CURVE SMOOTH",
"997 1253.333 OFFCURVE",
"918.667 1384.333 OFFCURVE",
"788 1455 CURVE SMOOTH",
"722.667 1490.333 OFFCURVE",
"651.667 1508 OFFCURVE",
"575 1508 CURVE SMOOTH",
"417.667 1508 OFFCURVE",
"273.167 1433.5 OFFCURVE",
"196.5 1311.5 CURVE SMOOTH",
"158.167 1250.5 OFFCURVE",
"139 1188 OFFCURVE",
"139 1124 CURVE SMOOTH",
"139 997.333 OFFCURVE",
"211 881.667 OFFCURVE",
"355 807 CURVE",
"149.667 704.333 OFFCURVE",
"69 574 OFFCURVE",
"69 410 CURVE SMOOTH",
"69 186 OFFCURVE",
"239.667 -37 OFFCURVE",
"565 -37 CURVE SMOOTH",
"733.667 -37 OFFCURVE",
"863.333 16 OFFCURVE",
"954 122 CURVE SMOOTH",
"1028 208.667 OFFCURVE",
"1065 308.667 OFFCURVE",
"1065 422 CURVE SMOOTH",
"1065 583.333 OFFCURVE",
"985.667 708.333 OFFCURVE",
"787 807 CURVE"
);
},
{
closed = 1;
nodes = (
"750.667 1365 OFFCURVE",
"849 1244.667 OFFCURVE",
"849 1126 CURVE SMOOTH",
"849 1042 OFFCURVE",
"797.667 950 OFFCURVE",
"711 902 CURVE SMOOTH",
"667.667 878 OFFCURVE",
"621.667 866 OFFCURVE",
"573 866 CURVE SMOOTH",
"421 866 OFFCURVE",
"288 992.333 OFFCURVE",
"288 1123 CURVE SMOOTH",
"288 1255 OFFCURVE",
"406.667 1365 OFFCURVE",
"568 1365 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"764.333 733 OFFCURVE",
"918 583 OFFCURVE",
"918 419 CURVE SMOOTH",
"918 249.667 OFFCURVE",
"781.667 102 OFFCURVE",
"567 102 CURVE SMOOTH",
"428.333 102 OFFCURVE",
"319.667 156 OFFCURVE",
"261 252 CURVE SMOOTH",
"231.667 300 OFFCURVE",
"217 351 OFFCURVE",
"217 405 CURVE SMOOTH",
"217 579.667 OFFCURVE",
"372.333 733 OFFCURVE",
"575 733 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
130 8 0 13 33 126 16 40 96 40 2 40 40 47 27 126 20 5 47 126 7 13 37 111 24 
PUSHW[ ]\011/* 1 value pushed */
532 
PUSHB[ ]\011/* 8 values pushed */
50 111 3 74 54 30 111 16 
PUSHW[ ]\011/* 1 value pushed */
532 
PUSHB[ ]\011/* 8 values pushed */
43 111 10 73 53 137 166 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 98 values pushed */
1 52 5 38 45 38 22 37 18 38 35 37 48 6 50 108 1 46 8 43 108 0 39 21 37 108 1 28 19 30 108 0 41 12 43 108 2 32 14 30 108 2 34 26 37 108 3 52 1 50 108 3 49 4 47 108 0 44 9 47 108 0 38 23 27 108 1 29 17 27 108 1 42 11 40 108 1 12 31 15 33 108 0 14 13 36 25 33 108 0 26 51 2 40 108 1 1 0 
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1135;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"839 628 LINE SMOOTH",
"964.333 814.667 OFFCURVE",
"1006 936.667 OFFCURVE",
"1006 1058 CURVE SMOOTH",
"1006 1218 OFFCURVE",
"922.5 1370.333 OFFCURVE",
"784.5 1449 CURVE SMOOTH",
"715.5 1488.333 OFFCURVE",
"640.333 1508 OFFCURVE",
"559 1508 CURVE SMOOTH",
"393.667 1508 OFFCURVE",
"237.667 1420 OFFCURVE",
"159 1284 CURVE SMOOTH",
"119.667 1216 OFFCURVE",
"100 1139.667 OFFCURVE",
"100 1055 CURVE SMOOTH",
"100 808.333 OFFCURVE",
"285.667 617 OFFCURVE",
"519 617 CURVE SMOOTH",
"565.667 617 OFFCURVE",
"615.667 625.667 OFFCURVE",
"669 643 CURVE",
"272 41 LINE",
"393 -37 LINE"
);
},
{
closed = 1;
nodes = (
"382.333 746 OFFCURVE",
"244 884.333 OFFCURVE",
"244 1055 CURVE SMOOTH",
"244 1225.667 OFFCURVE",
"382.333 1364 OFFCURVE",
"553 1364 CURVE SMOOTH",
"725 1364 OFFCURVE",
"863 1225.667 OFFCURVE",
"863 1055 CURVE SMOOTH",
"863 884.333 OFFCURVE",
"725 746 OFFCURVE",
"553 746 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
84 21 116 21 2 52 8 18 3 20 2 1 1 140 0 18 20 0 0 18 19 126 2 
PUSHW[ ]\011/* 1 value pushed */
613 
NPUSHB[ ]\011/* 14 values pushed */
4 4 0 13 25 126 11 5 2 1 22 18 15 1 
PUSHW[ ]\011/* 1 value pushed */
529 
NPUSHB[ ]\011/* 14 values pushed */
0 0 7 22 111 15 74 32 28 111 7 73 31 213 
PUSHW[ ]\011/* 2 values pushed */
366 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHP[0]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
23 30 5 14 13 37 9 38 30 5 28 108 0 24 12 22 108 1 26 10 28 108 0 29 6 19 108 0 23 14 25 108 1 27 8 25 108 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"242 1116 OFFCURVE",
"187 1060 OFFCURVE",
"187 992 CURVE SMOOTH",
"187 922.667 OFFCURVE",
"242 868 OFFCURVE",
"310 868 CURVE SMOOTH",
"378 868 OFFCURVE",
"433 922.667 OFFCURVE",
"433 992 CURVE SMOOTH",
"433 1061.333 OFFCURVE",
"378 1116 OFFCURVE",
"310 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"242 220 OFFCURVE",
"187 165.333 OFFCURVE",
"187 96 CURVE SMOOTH",
"187 28 OFFCURVE",
"242 -28 OFFCURVE",
"310 -28 CURVE SMOOTH",
"378 -28 OFFCURVE",
"433 28 OFFCURVE",
"433 96 CURVE SMOOTH",
"433 165.333 OFFCURVE",
"378 220 OFFCURVE",
"310 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
207 6 1 6 124 0 7 192 12 1 12 124 18 11 25 71 71 74 192 3 1 3 164 9 9 192 15 1 15 164 21 73 24 103 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"242 1116 OFFCURVE",
"187 1060 OFFCURVE",
"187 992 CURVE SMOOTH",
"187 922.667 OFFCURVE",
"242 868 OFFCURVE",
"310 868 CURVE SMOOTH",
"378 868 OFFCURVE",
"433 922.667 OFFCURVE",
"433 992 CURVE SMOOTH",
"433 1061.333 OFFCURVE",
"378 1116 OFFCURVE",
"310 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"128 -130 LINE",
"227 -172 LINE",
"430 206 LINE",
"295 270 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
14 261 
NPUSHB[ ]\011/* 24 values pushed */
12 207 6 1 6 124 0 7 12 14 15 17 71 71 74 13 207 9 1 9 164 3 129 13 
PUSHW[ ]\011/* 1 value pushed */
519 
NPUSHB[ ]\011/* 9 values pushed */
0 15 1 15 73 16 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"298 734 LINE",
"1137 1124 LINE",
"1137 1271 LINE",
"104 800 LINE",
"104 670 LINE",
"1137 201 LINE",
"1137 347 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
5 4 3 3 85 6 5 20 6 6 5 0 1 2 2 85 6 0 20 6 6 0 5 218 64 4 201 6 32 0 218 64 1 201 32 6 6 3 2 5 0 4 4 0 1 16 1 2 1 74 8 0 2 16 2 2 2 73 7 95 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"115 1024 LINE",
"115 887 LINE",
"1127 887 LINE",
"1127 1024 LINE"
);
},
{
closed = 1;
nodes = (
"115 584 LINE",
"115 447 LINE",
"1127 447 LINE",
"1127 584 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
1 0 2 3 5 4 6 7 3 127 2 
PUSHW[ ]\011/* 1 value pushed */
313 
NPUSHB[ ]\011/* 21 values pushed */
6 127 7 7 2 6 3 4 1 0 0 5 74 9 3 6 73 8 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"104 201 LINE",
"1137 670 LINE",
"1137 800 LINE",
"104 1271 LINE",
"104 1124 LINE",
"943 734 LINE",
"104 347 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
4 1 2 2 85 3 4 20 3 3 4 5 1 0 0 85 6 5 20 6 6 5 0 218 64 6 201 1 32 2 218 64 3 201 32 1 1 4 5 2 0 3 6 0 5 16 5 2 5 74 8 3 0 6 16 6 2 6 73 7 95 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"317.667 1157 OFFCURVE",
"338.333 1223 OFFCURVE",
"377 1269 CURVE SMOOTH",
"432.333 1335 OFFCURVE",
"510 1368 OFFCURVE",
"610 1368 CURVE SMOOTH",
"774 1368 OFFCURVE",
"880 1277 OFFCURVE",
"880 1161 CURVE SMOOTH",
"880 1106.333 OFFCURVE",
"860 1064.333 OFFCURVE",
"820 1035 CURVE SMOOTH",
"779.333 1005.667 OFFCURVE",
"687 961.667 OFFCURVE",
"543 903 CURVE SMOOTH",
"453.667 866.333 OFFCURVE",
"392.833 836 OFFCURVE",
"360.5 812 CURVE SMOOTH",
"328.167 788 OFFCURVE",
"303.167 758.167 OFFCURVE",
"285.5 722.5 CURVE",
"295.833 764 OFFCURVE",
"259 689 OFFCURVE",
"259 609 CURVE SMOOTH",
"259 445 OFFCURVE",
"397 318 OFFCURVE",
"613 318 CURVE SMOOTH",
"830.333 318 OFFCURVE",
"966.667 447.333 OFFCURVE",
"976 670 CURVE",
"830 670 LINE",
"814 522 OFFCURVE",
"745 458 OFFCURVE",
"613 458 CURVE SMOOTH",
"493 458 OFFCURVE",
"410 530.667 OFFCURVE",
"410 608 CURVE SMOOTH",
"410 644.667 OFFCURVE",
"424 676 OFFCURVE",
"452 702 CURVE SMOOTH",
"479.333 727.333 OFFCURVE",
"558 766 OFFCURVE",
"688 818 CURVE SMOOTH",
"894.667 899.333 OFFCURVE",
"956.833 954.167 OFFCURVE",
"997.5 1033.5 CURVE SMOOTH",
"1017.833 1073.167 OFFCURVE",
"1028 1116.333 OFFCURVE",
"1028 1163 CURVE SMOOTH",
"1028 1359 OFFCURVE",
"869.333 1508 OFFCURVE",
"608 1508 CURVE SMOOTH",
"342.667 1508 OFFCURVE",
"172.667 1340.333 OFFCURVE",
"170 1071 CURVE",
"315 1071 LINE"
);
},
{
closed = 1;
nodes = (
"539 220 OFFCURVE",
"484 165.333 OFFCURVE",
"484 96 CURVE SMOOTH",
"484 28 OFFCURVE",
"539 -28 OFFCURVE",
"607 -28 CURVE SMOOTH",
"675 -28 OFFCURVE",
"730 28 OFFCURVE",
"730 96 CURVE SMOOTH",
"730 165.333 OFFCURVE",
"675 220 OFFCURVE",
"607 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
180 32 180 33 196 32 196 33 4 61 12 61 30 95 12 95 30 100 9 125 30 128 12 144 10 175 33 9 20 48 17 21 57 41 
PUSHW[ ]\011/* 1 value pushed */
-48 
NPUSHB[ ]\011/* 24 values pushed */
12 17 57 40 8 11 32 39 48 21 1 0 21 16 21 32 21 3 9 0 21 1 8 21 
PUSHW[ ]\011/* 1 value pushed */
402 
PUSHB[ ]\011/* 3 values pushed */
18 97 25 
PUSHW[ ]\011/* 1 value pushed */
382 
NPUSHB[ ]\011/* 20 values pushed */
192 43 1 43 124 49 11 15 0 31 0 47 0 3 9 15 0 1 8 0 
PUSHW[ ]\011/* 1 value pushed */
412 
NPUSHB[ ]\011/* 36 values pushed */
39 97 15 4 1 4 1 192 46 1 46 164 52 52 28 21 99 22 155 36 99 7 74 56 15 99 28 246 0 99 1 73 55 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
37 38 26 27 16 17 5 6 17 26 15 87 0 38 5 36 87 1 16 27 18 87 0 37 6 39 87 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1210;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1264 119.667 OFFCURVE",
"1121.333 61 OFFCURVE",
"928 61 CURVE SMOOTH",
"664 61 OFFCURVE",
"432 191.167 OFFCURVE",
"308 406.5 CURVE SMOOTH",
"246 514.167 OFFCURVE",
"215 631.667 OFFCURVE",
"215 759 CURVE SMOOTH",
"215 1011 OFFCURVE",
"346.833 1243.167 OFFCURVE",
"559.5 1362.5 CURVE SMOOTH",
"665.833 1422.167 OFFCURVE",
"784.333 1452 OFFCURVE",
"915 1452 CURVE SMOOTH",
"1091 1452 OFFCURVE",
"1240.333 1400.333 OFFCURVE",
"1363 1297 CURVE SMOOTH",
"1494.333 1185.667 OFFCURVE",
"1560 1045.333 OFFCURVE",
"1560 876 CURVE SMOOTH",
"1560 701.333 OFFCURVE",
"1486.5 552.833 OFFCURVE",
"1360.5 461.5 CURVE SMOOTH",
"1297.5 415.833 OFFCURVE",
"1246.333 393 OFFCURVE",
"1207 393 CURVE SMOOTH",
"1177.667 393 OFFCURVE",
"1157 411.333 OFFCURVE",
"1157 442 CURVE SMOOTH",
"1157 448 OFFCURVE",
"1158.667 461.667 OFFCURVE",
"1162 483 CURVE SMOOTH",
"1278 1137 LINE",
"1170 1137 LINE",
"1144 999 LINE",
"1073.333 1108.333 OFFCURVE",
"1001.333 1147 OFFCURVE",
"884 1147 CURVE SMOOTH",
"617.333 1147 OFFCURVE",
"456 914 OFFCURVE",
"456 678 CURVE SMOOTH",
"456 459.333 OFFCURVE",
"596 315 OFFCURVE",
"788 315 CURVE SMOOTH",
"873.333 315 OFFCURVE",
"959.667 358.667 OFFCURVE",
"1005 416 CURVE",
"1005.667 378 OFFCURVE",
"1014.667 351.333 OFFCURVE",
"1032 336 CURVE SMOOTH",
"1054.667 315.333 OFFCURVE",
"1085.333 305 OFFCURVE",
"1124 305 CURVE SMOOTH",
"1177.333 305 OFFCURVE",
"1241.667 324.333 OFFCURVE",
"1317 363 CURVE SMOOTH",
"1514.333 463 OFFCURVE",
"1638 646.667 OFFCURVE",
"1638 896 CURVE SMOOTH",
"1638 1238.667 OFFCURVE",
"1322.667 1540 OFFCURVE",
"920 1540 CURVE SMOOTH",
"634.667 1540 OFFCURVE",
"380.833 1396.667 OFFCURVE",
"241.5 1150 CURVE SMOOTH",
"171.833 1026.667 OFFCURVE",
"137 893.333 OFFCURVE",
"137 750 CURVE SMOOTH",
"137 467.333 OFFCURVE",
"282.333 214.5 OFFCURVE",
"529 76.5 CURVE SMOOTH",
"652.333 7.5 OFFCURVE",
"787 -27 OFFCURVE",
"933 -27 CURVE SMOOTH",
"1071 -27 OFFCURVE",
"1194 4.333 OFFCURVE",
"1302 67 CURVE SMOOTH",
"1378 111.667 OFFCURVE",
"1460.667 189.667 OFFCURVE",
"1550 301 CURVE",
"1444 301 LINE"
);
},
{
closed = 1;
nodes = (
"698 428 OFFCURVE",
"600 532 OFFCURVE",
"600 696 CURVE SMOOTH",
"600 892 OFFCURVE",
"735 1040 OFFCURVE",
"895 1040 CURVE SMOOTH",
"1015 1040 OFFCURVE",
"1098 947.667 OFFCURVE",
"1098 813 CURVE SMOOTH",
"1098 739.667 OFFCURVE",
"1083.333 666.667 OFFCURVE",
"1054 594 CURVE SMOOTH",
"1008.667 483.333 OFFCURVE",
"926 428 OFFCURVE",
"838 428 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
0 6 0 60 16 35 48 33 48 73 70 39 86 39 118 39 138 66 180 35 180 63 207 66 12 4 60 16 0 16 1 16 63 43 4 59 73 148 63 7 190 8 37 69 25 38 38 25 25 85 41 39 20 41 41 39 39 34 38 25 45 37 72 64 106 28 186 45 170 21 188 1 
PUSHW[ ]\011/* 1 value pushed */
416 
NPUSHB[ ]\011/* 39 values pushed */
5 72 106 34 186 38 53 170 13 1 0 38 1 38 7 61 170 5 11 63 64 12 27 57 0 64 12 27 57 1 64 12 27 57 1 39 49 42 25 
NPUSHW[ ]\011/* 9 values pushed */
389 41 381 38 383 39 611 49 286 
PUSHB[ ]\011/* 6 values pushed */
16 74 79 75 99 31 
PUSHW[ ]\011/* 3 values pushed */
611 57 286 
PUSHB[ ]\011/* 6 values pushed */
9 73 78 110 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 33 values pushed */
70 77 43 63 29 36 2 24 3 38 59 38 7 37 18 17 19 17 2 6 47 37 23 37 51 38 55 37 11 38 62 4 0 
PUSHW[ ]\011/* 1 value pushed */
422 
NPUSHB[ ]\011/* 13 values pushed */
1 2 1 63 0 60 6 57 165 0 46 20 49 
PUSHW[ ]\011/* 1 value pushed */
422 
NPUSHB[ ]\011/* 31 values pushed */
1 44 22 42 107 0 77 29 75 87 0 52 14 49 165 1 54 12 57 165 0 71 35 69 87 1 36 37 73 33 75 
PUSHW[ ]\011/* 1 value pushed */
422 
PUSHB[ ]\011/* 4 values pushed */
0 63 2 61 
PUSHW[ ]\011/* 1 value pushed */
422 
NPUSHB[ ]\011/* 9 values pushed */
0 58 8 61 165 0 48 17 45 
PUSHW[ ]\011/* 1 value pushed */
422 
NPUSHB[ ]\011/* 29 values pushed */
0 43 24 45 107 0 76 30 64 87 0 50 15 53 165 1 56 10 53 165 1 70 36 72 87 1 74 32 72 
PUSHW[ ]\011/* 2 values pushed */
422 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1776;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"744 1471 LINE",
"49 0 LINE",
"213 0 LINE",
"443 484 LINE",
"1077 484 LINE",
"1308 0 LINE",
"1466 0 LINE",
"780 1471 LINE"
);
},
{
closed = 1;
nodes = (
"1012 626 LINE",
"509 626 LINE",
"762 1159 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
103 9 1 10 3 2 2 8 9 4 5 5 8 8 2 8 5 2 86 1 0 20 1 1 0 8 5 8 2 5 86 6 7 20 6 6 7 8 7 0 3 10 4 9 2 5 1 6 4 94 9 9 6 0 2 1 6 8 8 0 7 12 
PUSHW[ ]\011/* 5 values pushed */
283 2 535 1 337 
PUSHB[ ]\011/* 3 values pushed */
0 189 7 
NPUSHW[ ]\011/* 9 values pushed */
337 5 535 6 283 11 533 534 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1515;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"183 0 LINE",
"587 0 LINE SMOOTH",
"877.667 0 OFFCURVE",
"1064 186 OFFCURVE",
"1064 422 CURVE SMOOTH",
"1064 538 OFFCURVE",
"1015.667 640.5 OFFCURVE",
"933 710.5 CURVE SMOOTH",
"891.667 745.5 OFFCURVE",
"832.667 776 OFFCURVE",
"756 802 CURVE",
"880 868.667 OFFCURVE",
"945 980.333 OFFCURVE",
"945 1111 CURVE SMOOTH",
"945 1251 OFFCURVE",
"867.333 1374.167 OFFCURVE",
"742 1429.5 CURVE SMOOTH",
"679.333 1457.167 OFFCURVE",
"589.667 1471 OFFCURVE",
"473 1471 CURVE SMOOTH",
"183 1471 LINE"
);
},
{
closed = 1;
nodes = (
"497 1327 LINE SMOOTH",
"702.333 1327 OFFCURVE",
"792 1245.667 OFFCURVE",
"792 1111 CURVE SMOOTH",
"792 1011 OFFCURVE",
"732 922.5 OFFCURVE",
"636 884.5 CURVE SMOOTH",
"588 865.5 OFFCURVE",
"513 856 OFFCURVE",
"411 856 CURVE SMOOTH",
"327 856 LINE",
"327 1327 LINE"
);
},
{
closed = 1;
nodes = (
"410 708 LINE SMOOTH",
"534 708 OFFCURVE",
"621 702 OFFCURVE",
"671 690 CURVE SMOOTH",
"820.333 654 OFFCURVE",
"911 549.667 OFFCURVE",
"911 419 CURVE SMOOTH",
"911 315 OFFCURVE",
"845 217.5 OFFCURVE",
"745 175.5 CURVE SMOOTH",
"695 154.5 OFFCURVE",
"616.333 144 OFFCURVE",
"509 144 CURVE SMOOTH",
"327 144 LINE",
"327 708 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
81 8 27 18 17 8 27 19 38 18 28 15 29 16 17 1 26 0 38 94 15 18 1 9 15 18 1 8 18 18 0 29 94 16 8 26 94 0 2 36 8 21 3 23 0 17 18 27 4 28 16 23 112 15 5 1 5 
PUSHW[ ]\011/* 1 value pushed */
536 
NPUSHB[ ]\011/* 13 values pushed */
33 112 12 74 40 28 101 16 73 39 102 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 59 values pushed */
2 37 21 37 3 37 31 37 10 37 35 34 36 34 2 6 20 7 23 117 3 25 2 23 117 1 30 14 33 117 1 37 9 33 117 3 22 6 19 117 0 7 24 4 26 117 1 32 13 29 117 0 34 11 38 117 1 9 8 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1176;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1407.667 1394 OFFCURVE",
"1179.667 1508 OFFCURVE",
"905 1508 CURVE SMOOTH",
"450.333 1508 OFFCURVE",
"111 1174.667 OFFCURVE",
"111 744 CURVE SMOOTH",
"111 539.333 OFFCURVE",
"173.333 364.667 OFFCURVE",
"298 220 CURVE SMOOTH",
"446.667 48.667 OFFCURVE",
"649.667 -37 OFFCURVE",
"907 -37 CURVE SMOOTH",
"1177.667 -37 OFFCURVE",
"1402.333 69.333 OFFCURVE",
"1549 256 CURVE",
"1433 344 LINE",
"1294.333 182.667 OFFCURVE",
"1122 102 OFFCURVE",
"916 102 CURVE SMOOTH",
"541.333 102 OFFCURVE",
"266 372.333 OFFCURVE",
"266 731 CURVE SMOOTH",
"266 968.333 OFFCURVE",
"381 1165.833 OFFCURVE",
"581 1278.5 CURVE SMOOTH",
"681 1334.833 OFFCURVE",
"789.667 1363 OFFCURVE",
"907 1363 CURVE SMOOTH",
"1121.667 1363 OFFCURVE",
"1305 1275.667 OFFCURVE",
"1433 1109 CURVE",
"1549 1198 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
135 2 1 200 13 198 26 217 1 3 200 1 203 2 203 12 3 187 1 186 12 186 13 3 173 2 173 12 168 13 3 136 12 155 2 155 12 3 116 16 116 25 136 2 132 25 4 40 8 14 0 1 13 
PUSHW[ ]\011/* 1 value pushed */
537 
PUSHB[ ]\011/* 5 values pushed */
11 122 17 9 1 
PUSHW[ ]\011/* 1 value pushed */
537 
NPUSHB[ ]\011/* 22 values pushed */
4 122 24 3 1 0 13 0 14 74 28 48 28 1 8 112 21 73 27 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
18 23 5 10 6 37 19 37 5 23 8 100 0 10 18 8 100 0 7 22 4 100 1 9 20 11 100 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1665;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"647 0 LINE SMOOTH",
"1013.667 0 OFFCURVE",
"1195.167 104 OFFCURVE",
"1322.5 328 CURVE SMOOTH",
"1386.167 440 OFFCURVE",
"1418 569.667 OFFCURVE",
"1418 717 CURVE SMOOTH",
"1418 1058.333 OFFCURVE",
"1248.333 1318 OFFCURVE",
"963 1418 CURVE SMOOTH",
"863.667 1453.333 OFFCURVE",
"704 1471 OFFCURVE",
"484 1471 CURVE SMOOTH",
"179 1471 LINE",
"179 0 LINE"
);
},
{
closed = 1;
nodes = (
"320 1328 LINE",
"424 1328 LINE SMOOTH",
"635.333 1328 OFFCURVE",
"787 1314 OFFCURVE",
"879 1286 CURVE SMOOTH",
"1124.333 1211.333 OFFCURVE",
"1269 999 OFFCURVE",
"1269 715 CURVE SMOOTH",
"1269 444.333 OFFCURVE",
"1134.333 249 OFFCURVE",
"913 177 CURVE SMOOTH",
"834.333 151.667 OFFCURVE",
"693.333 139 OFFCURVE",
"490 139 CURVE SMOOTH",
"320 139 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
55 8 12 11 13 0 23 2 24 1 13 94 0 8 24 94 1 2 24 1 12 0 18 112 7 74 26 12 101 0 73 25 102 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
3 22 9 38 16 17 15 17 2 6 5 6 4 6 2 6 20 19 21 19 2 6 14 10 18 100 1 22 3 18 100 1 17 8 13 100 0 19 6 23 100 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1524;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"180 0 LINE",
"1017 0 LINE",
"1017 145 LINE",
"327 145 LINE",
"327 722 LINE",
"1017 722 LINE",
"1017 866 LINE",
"327 866 LINE",
"327 1326 LINE",
"1023 1326 LINE",
"1023 1471 LINE",
"180 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
7 4 3 10 9 11 8 6 5 7 4 2 1 3 0 7 94 4 4 11 3 94 0 2 8 94 11 8 5 9 13 10 3 0 8 11 5 167 1 167 0 10 1 10 74 13 8 101 11 73 12 102 175 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1098;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"179 0 LINE",
"325 0 LINE",
"325 721 LINE",
"916 721 LINE",
"916 866 LINE",
"325 866 LINE",
"325 1326 LINE",
"916 1326 LINE",
"916 1471 LINE",
"179 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
4 7 8 6 5 7 4 2 1 3 0 7 94 4 4 9 3 94 0 2 9 8 5 2 6 1 3 0 8 9 6 1 74 11 8 101 9 73 10 102 175 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 993;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1388.667 1422.667 OFFCURVE",
"1173.333 1508 OFFCURVE",
"924 1508 CURVE SMOOTH",
"616 1508 OFFCURVE",
"362 1365 OFFCURVE",
"222 1125 CURVE SMOOTH",
"152 1005 OFFCURVE",
"117 875.333 OFFCURVE",
"117 736 CURVE SMOOTH",
"117 548.667 OFFCURVE",
"178 383.667 OFFCURVE",
"300 241 CURVE SMOOTH",
"458.667 55.667 OFFCURVE",
"674 -37 OFFCURVE",
"946 -37 CURVE SMOOTH",
"1394 -37 OFFCURVE",
"1682.333 250.333 OFFCURVE",
"1685 705 CURVE",
"1051 705 LINE",
"1051 563 LINE",
"1520 563 LINE",
"1481.333 291 OFFCURVE",
"1252.667 103 OFFCURVE",
"950 103 CURVE SMOOTH",
"700.667 103 OFFCURVE",
"478.667 224.167 OFFCURVE",
"360 423.5 CURVE SMOOTH",
"300.667 523.167 OFFCURVE",
"271 628.333 OFFCURVE",
"271 739 CURVE SMOOTH",
"271 955 OFFCURVE",
"390.833 1163.667 OFFCURVE",
"599.5 1277 CURVE SMOOTH",
"703.833 1333.667 OFFCURVE",
"813.667 1362 OFFCURVE",
"929 1362 CURVE SMOOTH",
"1114.333 1362 OFFCURVE",
"1320 1277.333 OFFCURVE",
"1484 1116 CURVE",
"1598 1224 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
169 19 185 19 199 0 201 19 4 203 3 202 13 2 182 20 201 1 202 2 3 166 20 189 1 189 3 3 152 14 171 1 171 3 3 137 13 153 1 153 2 3 102 20 116 30 137 2 3 90 13 106 3 102 19 3 46 8 0 1 15 18 16 94 17 17 4 12 122 21 9 1 
PUSHW[ ]\011/* 1 value pushed */
537 
NPUSHB[ ]\011/* 10 values pushed */
4 122 29 3 17 17 15 8 1 0 
PUSHW[ ]\011/* 1 value pushed */
377 
NPUSHB[ ]\011/* 13 values pushed */
15 112 18 74 33 8 112 25 73 32 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
22 28 5 11 6 37 27 38 10 38 23 37 5 28 8 100 0 11 22 8 100 0 7 26 4 100 1 9 24 12 100 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1786;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"177 0 LINE",
"325 0 LINE",
"325 710 LINE",
"1073 710 LINE",
"1073 0 LINE",
"1221 0 LINE",
"1221 1471 LINE",
"1073 1471 LINE",
"1073 854 LINE",
"325 854 LINE",
"325 1471 LINE",
"177 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
8 3 4 9 2 1 7 10 6 11 4 1 5 0 3 2 94 8 9 9 0 6 11 8 5 0 2 5 4 5 8 4 7 6 0 1 2 9 4 10 11 7 101 80 6 1 6 74 13 9 15 13 1 8 10 101 95 11 1 11 73 12 102 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1399;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"158 0 LINE",
"305 0 LINE",
"305 1471 LINE",
"158 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
2 1 0 2 3 8 1 0 3 5 71 71 74 2 101 3 73 4 102 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 463;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"660 483 LINE SMOOTH",
"660 362.333 OFFCURVE",
"653.167 281 OFFCURVE",
"639.5 239 CURVE SMOOTH",
"625.833 197 OFFCURVE",
"601.833 163.333 OFFCURVE",
"567.5 138 CURVE",
"612.167 155 OFFCURVE",
"537 100 OFFCURVE",
"453 100 CURVE SMOOTH",
"421 100 OFFCURVE",
"388.333 107.333 OFFCURVE",
"355 122 CURVE SMOOTH",
"304.333 144 OFFCURVE",
"240.667 182 OFFCURVE",
"164 236 CURVE",
"86 119 LINE",
"226 3 OFFCURVE",
"334.333 -37 OFFCURVE",
"453 -37 CURVE SMOOTH",
"610.333 -37 OFFCURVE",
"725.167 40.167 OFFCURVE",
"772.5 159.5 CURVE SMOOTH",
"796.167 219.167 OFFCURVE",
"808 325.333 OFFCURVE",
"808 478 CURVE SMOOTH",
"808 1471 LINE",
"660 1471 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
11 -64 
NPUSHB[ ]\011/* 9 values pushed */
18 21 57 9 8 1 28 8 9 
PUSHW[ ]\011/* 3 values pushed */
540 10 539 
NPUSHB[ ]\011/* 21 values pushed */
14 122 6 9 0 2 10 9 1 0 18 101 2 74 20 9 73 19 180 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
15 17 3 5 4 38 16 37 15 5 18 117 1 17 3 14 117 0 
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 987;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"179 0 LINE",
"329 0 LINE",
"329 686 LINE",
"975 0 LINE",
"1170 0 LINE",
"408 811 LINE",
"1115 1471 LINE",
"916 1471 LINE",
"329 919 LINE",
"329 1471 LINE",
"179 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
92 6 1 8 8 7 2 1 2 3 3 2 2 86 5 4 20 5 5 4 7 8 8 86 5 6 20 5 5 6 2 8 5 7 9 6 10 3 1 4 0 128 5 1 5 5 10 4 0 2 6 10 8 5 0 1 2 8 4 9 10 3 
PUSHW[ ]\011/* 1 value pushed */
541 
PUSHB[ ]\011/* 3 values pushed */
4 190 7 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 17 values pushed */
6 74 12 15 12 1 9 15 12 1 8 9 101 10 73 11 102 
PUSHW[ ]\011/* 2 values pushed */
277 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[0]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1210;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"179 0 LINE",
"892 0 LINE",
"892 142 LINE",
"327 142 LINE",
"327 1471 LINE",
"179 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
4 3 2 94 5 8 0 2 1 0 2 5 4 74 7 2 101 5 73 6 102 237 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 946;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"397 1060 LINE",
"924 0 LINE",
"961 0 LINE",
"1481 1052 LINE",
"1625 0 LINE",
"1770 0 LINE",
"1559 1471 LINE",
"1535 1471 LINE",
"943 264 LINE",
"345 1471 LINE",
"321 1471 LINE",
"112 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 115 values pushed */
48 8 48 11 2 15 3 103 8 2 24 1 23 5 2 201 8 198 11 2 9 10 196 5 2 203 1 202 2 198 4 3 186 1 185 2 181 5 3 170 1 169 2 165 5 3 155 2 151 4 148 5 3 133 5 136 8 155 1 3 121 2 117 5 138 1 3 105 2 102 5 122 1 3 89 2 86 5 105 1 3 54 5 55 11 90 1 3 40 1 57 1 57 2 3 3 24 1 1 4 9 8 1 1 8 168 11 1 2 32 168 8 4 5 32 
PUSHW[ ]\011/* 1 value pushed */
-103 
NPUSHB[ ]\011/* 62 values pushed */
3 10 9 32 7 6 5 5 86 8 7 20 8 8 7 4 8 9 9 86 3 4 20 3 3 4 10 3 2 2 86 11 10 20 11 11 10 1 11 12 12 86 0 1 20 0 0 1 4 2 5 1 12 10 9 7 4 6 0 8 240 11 
PUSHW[ ]\011/* 1 value pushed */
545 
PUSHB[ ]\011/* 5 values pushed */
0 5 1 2 3 
PUSHW[ ]\011/* 1 value pushed */
544 
NPUSHB[ ]\011/* 17 values pushed */
6 0 8 9 10 3 4 5 6 2 1 0 14 71 71 74 6 
NPUSHW[ ]\011/* 11 values pushed */
296 7 542 8 543 3 543 11 542 12 296 
PUSHB[ ]\011/* 6 values pushed */
0 73 13 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1882;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"332 0 LINE",
"332 1112 LINE",
"1302 0 LINE",
"1335 0 LINE",
"1335 1471 LINE",
"1190 1471 LINE",
"1190 345 LINE",
"212 1471 LINE",
"180 1471 LINE",
"180 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
55 8 72 3 71 8 3 40 3 39 8 56 3 3 0 3 15 8 2 9 0 3 15 8 2 8 3 7 8 8 86 2 3 20 2 2 3 4 2 5 1 7 9 0 5 1 2 6 0 8 7 4 5 3 6 3 1 2 8 3 9 0 3 101 6 74 11 9 101 0 73 10 102 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1515;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"605.333 1508 OFFCURVE",
"354.167 1363.333 OFFCURVE",
"217.5 1122 CURVE SMOOTH",
"149.167 1001.333 OFFCURVE",
"115 870.333 OFFCURVE",
"115 729 CURVE SMOOTH",
"115 305 OFFCURVE",
"456 -37 OFFCURVE",
"892 -37 CURVE SMOOTH",
"1322.667 -37 OFFCURVE",
"1664 305.333 OFFCURVE",
"1664 736 CURVE SMOOTH",
"1664 1170.667 OFFCURVE",
"1325.333 1508 OFFCURVE",
"880 1508 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1108.333 1364 OFFCURVE",
"1321.833 1241.167 OFFCURVE",
"1430.5 1052.5 CURVE SMOOTH",
"1484.833 958.167 OFFCURVE",
"1512 852.667 OFFCURVE",
"1512 736 CURVE SMOOTH",
"1512 501.333 OFFCURVE",
"1397.5 299.667 OFFCURVE",
"1203.5 189 CURVE SMOOTH",
"1106.5 133.667 OFFCURVE",
"1001 106 OFFCURVE",
"887 106 CURVE SMOOTH",
"545.667 106 OFFCURVE",
"268 379.667 OFFCURVE",
"268 729 CURVE SMOOTH",
"268 965 OFFCURVE",
"383.333 1165.667 OFFCURVE",
"578 1279 CURVE SMOOTH",
"675.333 1335.667 OFFCURVE",
"778.333 1364 OFFCURVE",
"887 1364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
67 8 20 122 6 9 13 122 0 3 24 112 3 74 29 17 112 9 73 28 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 50 values pushed */
1 27 22 37 26 38 15 37 11 38 21 5 24 100 1 19 7 17 100 0 27 1 24 100 1 14 12 17 100 0 23 4 20 100 0 18 8 20 100 0 25 2 13 100 1 16 10 13 100 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1780;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"325 0 LINE",
"325 684 LINE",
"430 684 LINE SMOOTH",
"612.667 684 OFFCURVE",
"737.333 692 OFFCURVE",
"804 708 CURVE SMOOTH",
"986.667 752 OFFCURVE",
"1097 883 OFFCURVE",
"1097 1079 CURVE SMOOTH",
"1097 1273.667 OFFCURVE",
"979 1407.667 OFFCURVE",
"811 1449 CURVE SMOOTH",
"752.333 1463.667 OFFCURVE",
"639 1471 OFFCURVE",
"471 1471 CURVE SMOOTH",
"178 1471 LINE"
);
},
{
closed = 1;
nodes = (
"585 1328 LINE SMOOTH",
"783.667 1328 OFFCURVE",
"851.667 1296.5 OFFCURVE",
"905 1214.5 CURVE SMOOTH",
"931.667 1173.5 OFFCURVE",
"945 1128.333 OFFCURVE",
"945 1079 CURVE SMOOTH",
"945 977.667 OFFCURVE",
"888.333 889.167 OFFCURVE",
"795 852.5 CURVE SMOOTH",
"748.333 834.167 OFFCURVE",
"674.667 825 OFFCURVE",
"574 825 CURVE SMOOTH",
"325 828 LINE",
"325 1328 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
52 8 16 12 13 11 17 12 16 25 1 15 0 12 94 16 16 14 15 94 0 2 14 8 0 15 16 12 4 13 14 21 112 6 74 27 13 101 14 73 26 102 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
2 24 8 7 9 7 2 6 19 37 4 5 3 5 2 6 23 38 18 10 21 117 1 24 2 21 117 1 20 7 17 117 0 22 5 25 117 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1212;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1586.333 324 OFFCURVE",
"1666 508.333 OFFCURVE",
"1666 735 CURVE SMOOTH",
"1666 1169.667 OFFCURVE",
"1326 1508 OFFCURVE",
"890 1508 CURVE SMOOTH",
"607.333 1508 OFFCURVE",
"357.333 1364.5 OFFCURVE",
"220 1122.5 CURVE SMOOTH",
"151.333 1001.5 OFFCURVE",
"117 870.333 OFFCURVE",
"117 729 CURVE SMOOTH",
"117 305 OFFCURVE",
"458 -37 OFFCURVE",
"894 -37 CURVE SMOOTH",
"1044.667 -37 OFFCURVE",
"1180 0 OFFCURVE",
"1300 74 CURVE",
"1450 -116 LINE",
"1631 -116 LINE",
"1413 160 LINE"
);
},
{
closed = 1;
nodes = (
"1059 607 LINE",
"880 607 LINE",
"1208 191 LINE",
"1111.333 134.333 OFFCURVE",
"1004.667 106 OFFCURVE",
"888 106 CURVE SMOOTH",
"546.667 106 OFFCURVE",
"270 379.667 OFFCURVE",
"270 729 CURVE SMOOTH",
"270 965 OFFCURVE",
"385.333 1166.833 OFFCURVE",
"580 1279.5 CURVE SMOOTH",
"677.333 1335.833 OFFCURVE",
"781 1364 OFFCURVE",
"891 1364 CURVE SMOOTH",
"1109.667 1364 OFFCURVE",
"1323.833 1241.167 OFFCURVE",
"1432.5 1052.5 CURVE SMOOTH",
"1486.833 958.167 OFFCURVE",
"1514 852.667 OFFCURVE",
"1514 736 CURVE SMOOTH",
"1514 553.333 OFFCURVE",
"1450 399.667 OFFCURVE",
"1322 275 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
43 19 36 34 36 35 57 18 68 0 5 6 3 8 33 2 25 1 111 32 137 18 150 17 231 0 250 32 6 56 8 0 18 35 35 1 3 33 34 2 34 2 2 86 1 35 20 1 1 35 32 33 18 19 4 31 4 3 0 17 4 5 1 35 2 34 34 24 31 2 
PUSHW[ ]\011/* 1 value pushed */
373 
NPUSHB[ ]\011/* 22 values pushed */
31 122 5 9 24 122 12 3 19 18 33 32 4 20 16 17 0 3 4 5 15 34 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 5 values pushed */
35 35 28 20 2 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 15 values pushed */
1 209 20 112 15 74 37 28 112 8 73 36 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 40 values pushed */
21 30 6 14 22 38 26 37 10 38 30 6 28 100 0 23 13 20 100 1 25 11 28 100 0 29 7 31 100 0 21 14 24 100 1 27 9 24 100 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1784;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"187 0 LINE",
"334 0 LINE",
"334 684 LINE",
"418 684 LINE",
"946 0 LINE",
"1128 0 LINE",
"599 684 LINE",
"845.667 685.333 OFFCURVE",
"975.167 747.667 OFFCURVE",
"1050.5 869 CURVE SMOOTH",
"1088.167 929.667 OFFCURVE",
"1107 1000 OFFCURVE",
"1107 1080 CURVE SMOOTH",
"1107 1272 OFFCURVE",
"986.667 1411 OFFCURVE",
"812 1451 CURVE SMOOTH",
"754 1464.333 OFFCURVE",
"643.333 1471 OFFCURVE",
"480 1471 CURVE SMOOTH",
"187 1471 LINE"
);
},
{
closed = 1;
nodes = (
"593 1327 LINE SMOOTH",
"794.333 1327 OFFCURVE",
"860.667 1295.167 OFFCURVE",
"914 1214.5 CURVE SMOOTH",
"940.667 1174.167 OFFCURVE",
"954 1129.333 OFFCURVE",
"954 1080 CURVE SMOOTH",
"954 978.667 OFFCURVE",
"898.5 890.333 OFFCURVE",
"804.5 853 CURVE SMOOTH",
"757.5 834.333 OFFCURVE",
"685 825 OFFCURVE",
"587 825 CURVE SMOOTH",
"334 827 LINE",
"334 1327 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
15 10 15 13 27 10 27 13 43 10 43 13 59 10 59 13 8 48 8 18 14 15 13 14 13 12 13 12 12 86 11 10 20 11 11 10 12 15 11 16 19 10 13 3 14 18 27 1 17 0 14 94 18 18 0 11 16 8 17 94 0 2 10 13 11 0 17 18 14 4 15 16 23 112 6 209 12 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 11 values pushed */
11 74 29 15 101 16 73 28 102 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTCA[0]\011/* SetPVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 34 values pushed */
2 26 8 38 21 37 4 5 3 5 2 6 25 38 20 9 23 117 1 26 2 23 117 1 22 7 19 117 0 24 5 27 117 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1243;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"149.667 50 OFFCURVE",
"292.333 -37 OFFCURVE",
"471 -37 CURVE SMOOTH",
"703 -37 OFFCURVE",
"888 145.667 OFFCURVE",
"888 359 CURVE SMOOTH",
"888 507 OFFCURVE",
"809.667 643 OFFCURVE",
"555 831 CURVE SMOOTH",
"447.667 910.333 OFFCURVE",
"384.333 959.333 OFFCURVE",
"365 978 CURVE SMOOTH",
"294.333 1048.667 OFFCURVE",
"272 1105 OFFCURVE",
"272 1169 CURVE SMOOTH",
"272 1274.333 OFFCURVE",
"355.333 1356 OFFCURVE",
"474 1356 CURVE SMOOTH",
"566 1356 OFFCURVE",
"632.333 1322.667 OFFCURVE",
"743 1176 CURVE",
"863 1267 LINE",
"728.333 1451 OFFCURVE",
"615.667 1508 OFFCURVE",
"477 1508 CURVE SMOOTH",
"346.333 1508 OFFCURVE",
"227.333 1443.333 OFFCURVE",
"166 1338 CURVE SMOOTH",
"135.333 1285.333 OFFCURVE",
"120 1227 OFFCURVE",
"120 1163 CURVE SMOOTH",
"120 1082.333 OFFCURVE",
"146 1007.333 OFFCURVE",
"198 938 CURVE SMOOTH",
"228 896.667 OFFCURVE",
"304.333 829.667 OFFCURVE",
"427 737 CURVE SMOOTH",
"549 645 OFFCURVE",
"633 566.333 OFFCURVE",
"679 501 CURVE SMOOTH",
"712.333 453.667 OFFCURVE",
"729 405.333 OFFCURVE",
"729 356 CURVE SMOOTH",
"729 269.333 OFFCURVE",
"682.667 186.5 OFFCURVE",
"596 140.5 CURVE SMOOTH",
"552.667 117.5 OFFCURVE",
"506.333 106 OFFCURVE",
"457 106 CURVE SMOOTH",
"341.667 106 OFFCURVE",
"240 187 OFFCURVE",
"152 349 CURVE",
"27 274 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 116 values pushed */
0 0 0 1 4 42 169 12 166 35 5 15 21 15 22 15 23 121 10 138 9 141 10 6 10 10 10 12 57 10 90 12 88 13 176 31 176 34 7 68 35 107 41 204 42 3 57 10 57 35 195 35 3 203 23 204 24 197 31 3 187 42 196 1 205 12 3 183 1 186 23 187 24 3 161 2 168 23 169 42 3 69 2 150 2 150 34 3 46 8 122 9 170 13 2 9 13 11 73 11 153 11 2 11 34 102 34 1 32 34 3 22 112 23 1 23 
PUSHW[ ]\011/* 1 value pushed */
546 
NPUSHB[ ]\011/* 11 values pushed */
26 122 19 3 0 175 1 191 1 2 1 
PUSHW[ ]\011/* 1 value pushed */
537 
NPUSHB[ ]\011/* 34 values pushed */
3 122 40 9 23 1 0 22 209 7 112 223 37 239 37 2 37 74 44 47 44 63 44 2 29 112 32 15 48 15 64 15 3 15 
PUSHW[ ]\011/* 1 value pushed */
377 
NPUSHB[ ]\011/* 11 values pushed */
47 0 63 0 2 0 73 43 169 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[0]\011/* ShiftPointByLastPoint */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[0]\011/* ShiftPointByLastPoint */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
38 39 27 28 16 18 4 6 17 38 5 37 27 18 29 117 0 4 39 7 117 1 28 16 26 117 1 6 38 3 117 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1020;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"362 1328 LINE",
"362 0 LINE",
"512 0 LINE",
"512 1328 LINE",
"840 1328 LINE",
"840 1471 LINE",
"33 1471 LINE",
"33 1328 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
4 7 0 3 2 0 94 1 2 6 8 4 7 5 6 2 1 0 9 71 71 74 3 224 5 101 6 224 0 73 8 169 
PUSHW[ ]\011/* 2 values pushed */
277 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 872;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"184 583 LINE SMOOTH",
"184 433.667 OFFCURVE",
"193 330.333 OFFCURVE",
"211 273 CURVE SMOOTH",
"268.333 86.333 OFFCURVE",
"448.667 -37 OFFCURVE",
"686 -37 CURVE SMOOTH",
"904.667 -37 OFFCURVE",
"1068.167 102.5 OFFCURVE",
"1119.5 264.5 CURVE SMOOTH",
"1145.167 345.5 OFFCURVE",
"1158 451.667 OFFCURVE",
"1158 583 CURVE SMOOTH",
"1158 1471 LINE",
"1011 1471 LINE",
"1011 583 LINE SMOOTH",
"1011 467 OFFCURVE",
"1006 390.333 OFFCURVE",
"996 353 CURVE SMOOTH",
"968 249 OFFCURVE",
"907.333 175.333 OFFCURVE",
"818 134 CURVE SMOOTH",
"773.333 113.333 OFFCURVE",
"726.667 103 OFFCURVE",
"678 103 CURVE SMOOTH",
"566 103 OFFCURVE",
"441.333 162.5 OFFCURVE",
"388 240.5 CURVE SMOOTH",
"361.333 279.5 OFFCURVE",
"344.333 328 OFFCURVE",
"337 386 CURVE SMOOTH",
"333 412 OFFCURVE",
"331 477.667 OFFCURVE",
"331 583 CURVE SMOOTH",
"331 1471 LINE",
"184 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
57 8 15 1 16 16 0 2 8 122 21 9 16 15 17 14 1 0 2 26 28 71 71 74 17 101 14 
PUSHW[ ]\011/* 1 value pushed */
614 
PUSHB[ ]\011/* 8 values pushed */
2 101 26 73 27 102 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
5 25 19 38 12 13 11 13 10 13 3 6 6 38 24 25 23 25 2 6 9 20 14 117 1 7 22 4 117 0 5 4 13 18 8 117 0 5 25 8 117 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1341;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"698 0 LINE",
"730 0 LINE",
"1370 1471 LINE",
"1210 1471 LINE",
"714 334 LINE",
"227 1471 LINE",
"67 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
103 2 1 5 2 3 2 1 3 86 4 5 20 4 4 5 2 1 2 3 1 86 0 6 20 0 0 6 3 1 4 4 0 2 6 8 112 8 1 8 
PUSHW[ ]\011/* 5 values pushed */
283 3 535 4 337 
PUSHB[ ]\011/* 3 values pushed */
5 189 6 
PUSHW[ ]\011/* 3 values pushed */
337 1 535 
PUSHB[ ]\011/* 4 values pushed */
112 0 1 0 
PUSHW[ ]\011/* 5 values pushed */
283 7 533 547 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1438;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"511 0 LINE",
"539 0 LINE",
"984 1113 LINE",
"1420 0 LINE",
"1448 0 LINE",
"1870 1471 LINE",
"1720 1471 LINE",
"1415 411 LINE",
"998 1471 LINE",
"968 1471 LINE",
"546 411 LINE",
"247 1471 LINE",
"96 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
11 3 9 11 9 12 27 3 25 11 25 12 56 6 56 7 55 8 56 12 70 8 73 12 87 8 88 12 103 8 135 8 136 12 151 4 151 8 152 12 167 4 168 9 168 12 183 4 184 9 184 12 198 1 201 6 28 0 10 20 2 16 10 90 2 90 5 85 10 183 5 7 128 10 3 4 32 
PUSHW[ ]\011/* 1 value pushed */
-150 
PUSHB[ ]\011/* 4 values pushed */
5 9 8 32 
PUSHW[ ]\011/* 1 value pushed */
-150 
NPUSHB[ ]\011/* 61 values pushed */
2 12 11 32 6 7 8 8 86 5 6 20 5 5 6 9 5 4 4 86 10 9 20 10 10 9 3 10 11 11 86 2 3 20 2 2 3 12 2 1 1 86 0 12 20 0 0 12 9 11 8 12 1 3 4 6 4 7 0 5 2 
PUSHW[ ]\011/* 1 value pushed */
550 
PUSHB[ ]\011/* 4 values pushed */
8 12 8 10 
PUSHW[ ]\011/* 1 value pushed */
549 
NPUSHB[ ]\011/* 17 values pushed */
7 0 2 9 8 7 4 3 10 11 12 0 14 71 71 74 7 
NPUSHW[ ]\011/* 11 values pushed */
296 6 413 5 548 10 548 2 413 1 296 
PUSHB[ ]\011/* 8 values pushed */
64 0 73 13 11 180 175 24 
CALL[ ]\011/* CallFunction */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
0 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1966;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"538 758 LINE",
"69 0 LINE",
"241 0 LINE",
"625 617 LINE",
"1007 0 LINE",
"1179 0 LINE",
"712 758 LINE",
"1150 1471 LINE",
"980 1471 LINE",
"625 897 LINE",
"273 1471 LINE",
"101 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 80 values pushed */
75 5 79 8 200 0 203 5 207 8 5 73 5 71 9 2 71 1 72 3 72 7 3 11 0 7 10 3 8 0 7 9 4 5 1 6 9 4 2 1 6 10 3 7 6 1 1 86 0 7 20 0 0 7 3 4 9 9 86 10 3 20 10 10 3 3 1 4 0 7 9 6 10 4 0 2 6 10 8 3 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 3 values pushed */
4 209 7 
PUSHW[ ]\011/* 1 value pushed */
535 
NPUSHB[ ]\011/* 26 values pushed */
63 6 79 6 95 6 3 15 6 31 6 47 6 3 9 15 6 1 8 6 74 13 112 13 1 1 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 3 values pushed */
0 209 9 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 6 values pushed */
10 73 12 136 184 24 
CALL[ ]\011/* CallFunction */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTG[ ]\011/* RoundToGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1247;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"538 703 LINE",
"538 0 LINE",
"683 0 LINE",
"683 703 LINE",
"1149 1471 LINE",
"979 1471 LINE",
"609 865 LINE",
"233 1471 LINE",
"63 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
5 8 2 3 2 1 3 86 4 5 20 4 4 5 2 1 2 3 1 86 0 8 20 0 0 8 3 1 4 0 7 8 4 0 2 8 2 5 3 6 7 10 
PUSHW[ ]\011/* 5 values pushed */
283 3 535 4 327 
PUSHB[ ]\011/* 3 values pushed */
6 101 7 
NPUSHW[ ]\011/* 9 values pushed */
327 1 535 0 283 9 533 547 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1212;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"675 1329 LINE",
"56 0 LINE",
"867 0 LINE",
"867 143 LINE",
"283 143 LINE",
"898 1471 LINE",
"122 1471 LINE",
"122 1329 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 87 values pushed */
26 2 26 7 2 7 2 8 3 6 7 3 9 7 2 8 3 6 7 3 8 7 2 3 3 86 6 7 20 6 6 7 7 2 0 1 4 5 3 6 0 94 1 2 3 94 6 8 7 3 6 2 209 15 5 1 5 74 9 47 9 1 224 1 1 176 1 192 1 208 1 3 128 1 144 1 160 1 3 1 190 6 73 8 136 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 983;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"290 -398 LINE",
"626 -398 LINE",
"626 -261 LINE",
"430 -261 LINE",
"430 1366 LINE",
"626 1366 LINE",
"626 1508 LINE",
"290 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
2 1 3 0 6 5 7 4 3 98 0 16 4 98 7 18 2 5 1 6 3 0 4 7 9 246 1 6 162 4 127 7 
PUSHW[ ]\011/* 1 value pushed */
551 
PUSHB[ ]\011/* 4 values pushed */
8 142 152 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"66 1508 LINE",
"1019 -200 LINE",
"1172 -200 LINE",
"220 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
5 0 5 3 2 2 1 0 0 85 3 2 20 3 3 2 1 0 3 2 3 0 2 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 4 values pushed */
1 74 5 0 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 6 values pushed */
3 73 4 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1239;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"429 1508 LINE",
"93 1508 LINE",
"93 1371 LINE",
"288 1371 LINE",
"288 -256 LINE",
"93 -256 LINE",
"93 -398 LINE",
"429 -398 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
5 6 4 7 2 1 3 0 4 98 7 16 3 98 0 18 7 4 0 3 5 2 6 1 9 
PUSHW[ ]\011/* 1 value pushed */
518 
PUSHB[ ]\011/* 6 values pushed */
0 127 3 162 6 1 
PUSHW[ ]\011/* 1 value pushed */
292 
PUSHB[ ]\011/* 4 values pushed */
8 119 236 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"120 365 LINE",
"249 365 LINE",
"685 1317 LINE",
"1124 365 LINE",
"1257 365 LINE",
"747 1471 LINE",
"629 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
4 3 4 5 3 85 2 1 20 2 2 1 4 5 4 3 5 85 6 0 20 6 6 0 1 4 0 3 5 2 2 6 4 218 0 2 8 71 71 74 2 
PUSHW[ ]\011/* 5 values pushed */
517 1 292 0 517 
NPUSHB[ ]\011/* 9 values pushed */
0 6 1 6 73 7 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1376;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-12 -256 LINE",
"1036 -256 LINE",
"1036 -154 LINE",
"-12 -154 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
2 1 3 192 0 2 3 0 1 74 5 0 73 4 206 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1024;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"111 1598 LINE",
"406 1290 LINE",
"544 1290 LINE",
"326 1598 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
0 1 3 223 128 2 0 2 1 227 0 3 1 3 73 4 95 
PUSHW[ ]\011/* 2 values pushed */
275 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 774;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1102 1088 LINE",
"1102 888 LINE",
"992.667 1040 OFFCURVE",
"847.667 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"359.667 1116 OFFCURVE",
"107 860.333 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838.333 -28 OFFCURVE",
"984.667 44.333 OFFCURVE",
"1102 187 CURVE",
"1102 0 LINE",
"1240 0 LINE",
"1240 1088 LINE"
);
},
{
closed = 1;
nodes = (
"922.667 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 372.667 OFFCURVE",
"1034.333 235.333 OFFCURVE",
"897 158 CURVE SMOOTH",
"828.333 119.333 OFFCURVE",
"755.667 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"385.667 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"267.667 392 OFFCURVE",
"248 465.333 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 696.667 OFFCURVE",
"332 846.833 OFFCURVE",
"464 923.5 CURVE SMOOTH",
"530 961.833 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
30 64 25 6 27 64 12 17 41 8 15 29 3 2 2 0 1 16 17 88 12 7 1 10 16 6 25 88 6 11 0 16 15 29 3 5 2 92 1 74 33 21 105 9 73 32 96 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
18 24 7 11 23 38 19 37 24 7 21 90 0 18 11 21 90 0 22 8 25 90 0 20 10 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
30 31 13 14 30 14 17 104 5 31 13 29 104 1 14 15 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
26 28 4 5 27 37 28 4 25 104 4 26 5 29 104 1 4 3 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1399;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"304 0 LINE",
"304 200 LINE",
"414.667 48 OFFCURVE",
"558.667 -28 OFFCURVE",
"736 -28 CURVE SMOOTH",
"1045.333 -28 OFFCURVE",
"1298 227.333 OFFCURVE",
"1298 542 CURVE SMOOTH",
"1298 860.667 OFFCURVE",
"1048 1116 OFFCURVE",
"740 1116 CURVE SMOOTH",
"566.667 1116 OFFCURVE",
"421.333 1045 OFFCURVE",
"304 901 CURVE",
"304 1508 LINE",
"165 1508 LINE",
"165 0 LINE"
);
},
{
closed = 1;
nodes = (
"482.333 107 OFFCURVE",
"294 298 OFFCURVE",
"294 550 CURVE SMOOTH",
"294 715.333 OFFCURVE",
"370.5 852.5 OFFCURVE",
"508.5 930.5 CURVE SMOOTH",
"577.5 969.5 OFFCURVE",
"650.333 989 OFFCURVE",
"727 989 CURVE SMOOTH",
"877.667 989 OFFCURVE",
"1019.333 907 OFFCURVE",
"1098 767 CURVE SMOOTH",
"1137.333 697 OFFCURVE",
"1157 623.333 OFFCURVE",
"1157 546 CURVE SMOOTH",
"1157 391.333 OFFCURVE",
"1073 241.167 OFFCURVE",
"941 164.5 CURVE SMOOTH",
"875 126.167 OFFCURVE",
"803 107 OFFCURVE",
"725 107 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
27 64 17 12 30 64 6 25 41 8 15 29 3 2 25 88 6 7 1 0 17 88 12 11 0 10 1 2 3 29 15 5 16 0 21 105 9 74 33 16 92 0 73 32 123 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
18 24 7 11 19 37 23 38 18 11 21 90 1 24 7 21 90 1 20 10 17 90 0 22 8 25 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
26 28 4 5 27 37 28 4 25 104 5 26 5 29 104 0 4 3 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
30 31 13 14 30 14 17 104 4 31 13 29 104 0 14 15 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1397;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1146.667 971.333 OFFCURVE",
"1056.5 1039 OFFCURVE",
"922.5 1083 CURVE SMOOTH",
"855.5 1105 OFFCURVE",
"786 1116 OFFCURVE",
"714 1116 CURVE SMOOTH",
"484.667 1116 OFFCURVE",
"290.5 1009.167 OFFCURVE",
"184.5 828.5 CURVE SMOOTH",
"131.5 738.167 OFFCURVE",
"105 640.333 OFFCURVE",
"105 535 CURVE SMOOTH",
"105 221.667 OFFCURVE",
"359 -28 OFFCURVE",
"703 -28 CURVE SMOOTH",
"927 -28 OFFCURVE",
"1108 62 OFFCURVE",
"1212 218 CURVE",
"1101 291 LINE",
"999.667 163.667 OFFCURVE",
"869 100 OFFCURVE",
"709 100 CURVE SMOOTH",
"534.333 100 OFFCURVE",
"387.167 181 OFFCURVE",
"306.5 321 CURVE SMOOTH",
"266.167 391 OFFCURVE",
"246 465.667 OFFCURVE",
"246 545 CURVE SMOOTH",
"246 789 OFFCURVE",
"442.667 984 OFFCURVE",
"708 984 CURVE SMOOTH",
"874 984 OFFCURVE",
"1005 920.333 OFFCURVE",
"1101 793 CURVE",
"1212 862 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
196 25 1 11 64 15 22 57 2 64 15 22 57 40 8 0 1 13 9 0 12 1 8 12 
PUSHW[ ]\011/* 1 value pushed */
552 
NPUSHB[ ]\011/* 10 values pushed */
10 88 16 11 9 15 1 1 8 1 
PUSHW[ ]\011/* 1 value pushed */
552 
NPUSHB[ ]\011/* 19 values pushed */
3 88 23 7 1 0 12 0 13 74 28 6 105 19 73 27 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
17 22 4 9 21 38 8 38 4 22 6 90 0 9 17 6 90 0 5 20 3 90 1 7 18 10 90 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1325;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1104 1508 LINE",
"1104 888 LINE",
"994.667 1040 OFFCURVE",
"849.667 1116 OFFCURVE",
"671 1116 CURVE SMOOTH",
"361.667 1116 OFFCURVE",
"109 860.333 OFFCURVE",
"109 547 CURVE SMOOTH",
"109 227 OFFCURVE",
"359 -28 OFFCURVE",
"667 -28 CURVE SMOOTH",
"840.333 -28 OFFCURVE",
"986.667 44.333 OFFCURVE",
"1104 187 CURVE",
"1104 0 LINE",
"1242 0 LINE",
"1242 1508 LINE"
);
},
{
closed = 1;
nodes = (
"924.667 981 OFFCURVE",
"1113 790 OFFCURVE",
"1113 538 CURVE SMOOTH",
"1113 372.667 OFFCURVE",
"1036.333 235.333 OFFCURVE",
"899 158 CURVE SMOOTH",
"830.333 119.333 OFFCURVE",
"757.667 100 OFFCURVE",
"681 100 CURVE SMOOTH",
"529 100 OFFCURVE",
"387.667 182 OFFCURVE",
"309 322 CURVE SMOOTH",
"269.667 392 OFFCURVE",
"250 465.333 OFFCURVE",
"250 542 CURVE SMOOTH",
"250 696.667 OFFCURVE",
"334 846.833 OFFCURVE",
"466 923.5 CURVE SMOOTH",
"532 961.833 OFFCURVE",
"604 981 OFFCURVE",
"682 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
30 64 25 6 27 64 12 17 41 8 15 29 3 2 25 88 6 11 2 10 17 88 12 7 0 0 0 16 15 29 3 5 2 92 1 74 33 21 105 9 73 32 96 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
18 24 7 11 23 38 19 37 24 7 21 90 0 18 11 21 90 0 22 8 25 90 0 20 10 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
30 31 13 14 30 14 17 104 5 31 13 29 104 1 14 15 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
26 28 4 5 27 37 28 4 25 104 4 26 5 29 104 1 4 3 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1403;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"986.667 218.333 OFFCURVE",
"924.167 167.667 OFFCURVE",
"819.5 129 CURVE SMOOTH",
"767.167 109.667 OFFCURVE",
"713.333 100 OFFCURVE",
"658 100 CURVE SMOOTH",
"428.667 100 OFFCURVE",
"253.333 279.667 OFFCURVE",
"248 533 CURVE",
"1226 533 LINE",
"1224.667 681.667 OFFCURVE",
"1184.667 805.667 OFFCURVE",
"1106 905 CURVE SMOOTH",
"995.333 1045.667 OFFCURVE",
"847.333 1116 OFFCURVE",
"662 1116 CURVE SMOOTH",
"482 1116 OFFCURVE",
"338.333 1047.333 OFFCURVE",
"231 910 CURVE SMOOTH",
"146.333 802 OFFCURVE",
"104 679 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 247.667 OFFCURVE",
"315.333 -28 OFFCURVE",
"670 -28 CURVE SMOOTH",
"830 -28 OFFCURVE",
"954.667 21.667 OFFCURVE",
"1056 115 CURVE SMOOTH",
"1106.667 161.667 OFFCURVE",
"1151.333 223 OFFCURVE",
"1190 299 CURVE",
"1072 361 LINE"
);
},
{
closed = 1;
nodes = (
"262 654 LINE",
"290.667 754 OFFCURVE",
"333 829 OFFCURVE",
"389 879 CURVE SMOOTH",
"465.667 947.667 OFFCURVE",
"557.333 982 OFFCURVE",
"664 982 CURVE SMOOTH",
"793.333 982 OFFCURVE",
"919.167 922.333 OFFCURVE",
"990.5 833 CURVE SMOOTH",
"1026.167 788.333 OFFCURVE",
"1053.333 728.667 OFFCURVE",
"1072 654 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 87 values pushed */
42 0 42 4 2 26 4 26 6 23 7 3 8 2 25 0 25 2 3 70 13 234 22 248 2 248 3 4 182 14 233 2 235 3 239 4 4 216 2 216 3 221 4 3 197 2 197 3 201 21 3 179 3 185 21 200 0 3 154 22 165 14 172 22 3 137 25 140 27 150 14 3 120 25 136 13 136 14 3 47 8 1 0 16 24 32 0 
PUSHW[ ]\011/* 1 value pushed */
612 
NPUSHB[ ]\011/* 56 values pushed */
17 144 255 32 1 9 15 32 1 8 32 32 28 64 0 80 0 2 0 0 16 0 48 0 3 9 0 0 1 8 20 88 5 11 28 88 12 7 0 32 17 1 178 24 105 16 74 34 17 105 8 73 33 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
29 31 18 19 6 11 30 37 10 38 19 6 17 90 0 29 11 32 90 0 31 32 18 7 20 90 0 31 9 28 90 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1331;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"540.667 1526.667 OFFCURVE",
"486.333 1536 OFFCURVE",
"441 1536 CURVE SMOOTH",
"343.667 1536 OFFCURVE",
"272.167 1491.667 OFFCURVE",
"243.5 1425 CURVE SMOOTH",
"229.167 1391.667 OFFCURVE",
"222 1336 OFFCURVE",
"222 1258 CURVE SMOOTH",
"222 1088 LINE",
"79 1088 LINE",
"79 968 LINE",
"222 968 LINE",
"222 0 LINE",
"362 0 LINE",
"362 968 LINE",
"590 968 LINE",
"590 1088 LINE",
"363 1088 LINE",
"363 1235 LINE SMOOTH",
"363 1321.988 OFFCURVE",
"356.785 1358.647 OFFCURVE",
"404 1387.5 CURVE SMOOTH",
"422 1398.5 OFFCURVE",
"444.667 1404 OFFCURVE",
"472 1404 CURVE SMOOTH",
"508.667 1404 OFFCURVE",
"552.667 1393 OFFCURVE",
"604 1371 CURVE",
"604 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
25 8 17 16 9 18 13 14 15 10 18 13 11 15 10 7 12 8 16 9 7 12 1 3 0 22 10 9 15 144 16 6 3 88 15 22 1 22 1 13 10 14 17 18 7 8 11 6 12 13 9 125 15 0 47 0 2 0 74 25 12 92 13 195 16 15 48 15 64 15 80 15 4 15 73 24 160 
PUSHW[ ]\011/* 2 values pushed */
367 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
4 21 5 37 20 38 4 21 7 128 0 6 19 3 128 1 
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 643;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1093 899 LINE",
"962.333 1053.667 OFFCURVE",
"824.667 1116 OFFCURVE",
"662 1116 CURVE SMOOTH",
"466 1116 OFFCURVE",
"275 1007.5 OFFCURVE",
"175 833.5 CURVE SMOOTH",
"125 746.5 OFFCURVE",
"100 652.667 OFFCURVE",
"100 552 CURVE SMOOTH",
"100 350.667 OFFCURVE",
"200 173.833 OFFCURVE",
"376 74.5 CURVE SMOOTH",
"464 24.833 OFFCURVE",
"558 0 OFFCURVE",
"658 0 CURVE SMOOTH",
"828.667 0 OFFCURVE",
"987.667 73.667 OFFCURVE",
"1093 207 CURVE",
"1093 151 LINE SMOOTH",
"1093 -89 OFFCURVE",
"1041.833 -173.167 OFFCURVE",
"910.5 -244.5 CURVE SMOOTH",
"844.833 -280.167 OFFCURVE",
"764.333 -298 OFFCURVE",
"669 -298 CURVE SMOOTH",
"475.667 -298 OFFCURVE",
"348.667 -230 OFFCURVE",
"266 -86 CURVE",
"114 -86 LINE",
"192.667 -256.667 OFFCURVE",
"275.833 -333.833 OFFCURVE",
"424.5 -386.5 CURVE SMOOTH",
"498.833 -412.833 OFFCURVE",
"582.667 -426 OFFCURVE",
"676 -426 CURVE SMOOTH",
"930.667 -426 OFFCURVE",
"1120.667 -314 OFFCURVE",
"1194 -114 CURVE SMOOTH",
"1220.667 -43.333 OFFCURVE",
"1234 68.333 OFFCURVE",
"1234 221 CURVE SMOOTH",
"1234 1088 LINE",
"1093 1088 LINE"
);
},
{
closed = 1;
nodes = (
"832 981 OFFCURVE",
"974 901.167 OFFCURVE",
"1046 772.5 CURVE SMOOTH",
"1082 708.167 OFFCURVE",
"1100 635 OFFCURVE",
"1100 553 CURVE SMOOTH",
"1100 301 OFFCURVE",
"929.333 132 OFFCURVE",
"672 132 CURVE SMOOTH",
"417.333 132 OFFCURVE",
"241 306.333 OFFCURVE",
"241 545 CURVE SMOOTH",
"241 702.333 OFFCURVE",
"323 846.833 OFFCURVE",
"459 923.5 CURVE SMOOTH",
"527 961.833 OFFCURVE",
"600.667 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
13 -64 
NPUSHB[ ]\011/* 27 values pushed */
13 20 57 27 64 42 23 30 64 31 35 72 8 34 45 20 0 6 35 88 31 7 42 88 23 10 12 
PUSHW[ ]\011/* 1 value pushed */
554 
NPUSHB[ ]\011/* 27 values pushed */
15 88 7 15 2 19 20 45 34 5 0 92 1 74 50 12 105 11 125 39 105 27 73 49 96 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 52 values pushed */
36 41 24 30 16 18 3 6 4 3 5 3 2 6 17 37 25 37 37 37 29 38 16 6 19 90 1 41 24 39 90 0 36 30 39 90 0 18 3 15 90 0 40 26 42 90 0 38 28 35 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
46 48 32 33 47 38 46 33 35 104 5 48 32 45 104 1 33 34 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
43 44 21 22 44 21 42 104 4 43 22 45 104 1 21 20 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 1378;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"296 0 LINE",
"296 399 LINE SMOOTH",
"296 543 OFFCURVE",
"302.667 641.667 OFFCURVE",
"316 695 CURVE SMOOTH",
"358.667 860.333 OFFCURVE",
"506.667 987 OFFCURVE",
"676 987 CURVE SMOOTH",
"824 987 OFFCURVE",
"915.333 914 OFFCURVE",
"950 770 CURVE SMOOTH",
"960 728 OFFCURVE",
"965 644.333 OFFCURVE",
"965 519 CURVE SMOOTH",
"965 0 LINE",
"1105 0 LINE",
"1105 560 LINE SMOOTH",
"1105 857.333 OFFCURVE",
"1046.5 971.333 OFFCURVE",
"920.5 1054 CURVE SMOOTH",
"857.5 1095.333 OFFCURVE",
"785.333 1116 OFFCURVE",
"704 1116 CURVE SMOOTH",
"545.333 1116 OFFCURVE",
"409.333 1042.333 OFFCURVE",
"296 893 CURVE",
"296 1508 LINE",
"156 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
59 3 1 34 64 5 17 30 8 2 22 23 11 23 10 24 0 0 17 88 5 7 10 24 10 12 9 11 10 0 1 2 22 4 23 24 11 92 191 10 207 10 223 10 3 10 74 26 23 92 176 24 192 24 208 24 3 24 73 25 123 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
6 16 7 37 14 13 15 13 2 6 16 6 12 90 1 13 8 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 22 values pushed */
18 21 3 4 20 21 19 21 2 6 21 3 17 104 5 18 4 22 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1249;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"142.333 1536 OFFCURVE",
"90 1484 OFFCURVE",
"90 1420 CURVE SMOOTH",
"90 1357.333 OFFCURVE",
"142.333 1305 OFFCURVE",
"205 1305 CURVE SMOOTH",
"269 1305 OFFCURVE",
"321 1357.333 OFFCURVE",
"321 1420 CURVE SMOOTH",
"321 1484 OFFCURVE",
"269 1536 OFFCURVE",
"205 1536 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 0 LINE",
"276 0 LINE",
"276 1088 LINE",
"135 1088 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
5 6 
PUSHW[ ]\011/* 1 value pushed */
310 
NPUSHB[ ]\011/* 42 values pushed */
15 0 1 5 0 1 13 6 15 10 13 12 14 15 17 71 71 74 192 3 208 3 2 5 3 178 14 92 192 15 208 15 2 5 15 178 9 73 16 160 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
64 15 1 0 15 32 15 48 15 3 224 15 240 15 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
64 3 1 0 3 32 3 48 3 3 224 3 240 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
159 0 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
95 6 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 410;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"144 1536 OFFCURVE",
"93 1484 OFFCURVE",
"93 1420 CURVE SMOOTH",
"93 1357.333 OFFCURVE",
"144 1305 OFFCURVE",
"208 1305 CURVE SMOOTH",
"272 1305 OFFCURVE",
"323 1357.333 OFFCURVE",
"323 1420 CURVE SMOOTH",
"323 1484 OFFCURVE",
"272 1536 OFFCURVE",
"208 1536 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139 -123 LINE SMOOTH",
"139 -186.333 OFFCURVE",
"133.333 -228 OFFCURVE",
"122 -248 CURVE SMOOTH",
"103.333 -279.333 OFFCURVE",
"75 -295 OFFCURVE",
"37 -295 CURVE SMOOTH",
"7 -295 OFFCURVE",
"-26.667 -285.333 OFFCURVE",
"-64 -266 CURVE",
"-64 -392 LINE",
"-4.667 -414.667 OFFCURVE",
"48.667 -426 OFFCURVE",
"96 -426 CURVE SMOOTH",
"210.667 -426 OFFCURVE",
"281 -346.667 OFFCURVE",
"281 -164 CURVE SMOOTH",
"281 1088 LINE",
"139 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
25 8 20 19 17 12 6 22 88 17 15 5 6 
PUSHW[ ]\011/* 1 value pushed */
310 
NPUSHB[ ]\011/* 33 values pushed */
15 0 1 5 0 1 13 12 14 26 28 71 71 74 192 3 208 3 2 5 3 178 14 92 207 9 223 9 2 5 9 178 26 
PUSHW[ ]\011/* 1 value pushed */
399 
NPUSHB[ ]\011/* 13 values pushed */
0 19 16 19 32 19 3 9 0 19 1 8 19 
PUSHW[ ]\011/* 3 values pushed */
558 27 556 
PUSHB[ ]\011/* 2 values pushed */
133 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
79 9 1 15 9 47 9 63 9 3 239 9 255 9 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
64 3 1 0 3 32 3 48 3 3 224 3 240 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
159 0 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
95 6 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
23 25 15 16 24 37 23 16 26 128 1 25 15 22 128 0 
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 416;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"296 0 LINE",
"296 489 LINE",
"842 0 LINE",
"1040 0 LINE",
"408 569 LINE",
"1005 1088 LINE",
"799 1088 LINE",
"296 650 LINE",
"296 1508 LINE",
"155 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 88 values pushed */
216 7 1 9 0 4 1 6 2 1 67 118 2 134 2 151 2 166 2 217 5 5 9 4 5 1 96 6 5 1 54 8 8 7 2 1 2 3 3 2 2 91 5 4 20 5 5 4 7 8 8 91 5 6 20 5 5 6 2 8 5 7 9 6 10 3 1 4 0 5 5 10 4 6 0 0 6 10 10 5 0 1 2 8 4 9 10 3 
PUSHW[ ]\011/* 1 value pushed */
559 
PUSHB[ ]\011/* 3 values pushed */
4 178 7 
PUSHW[ ]\011/* 1 value pushed */
559 
NPUSHB[ ]\011/* 14 values pushed */
6 74 12 32 12 1 9 92 10 73 11 123 185 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[0]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1028;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"135 0 LINE",
"275 0 LINE",
"275 1508 LINE",
"135 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
3 10 0 0 1 0 3 5 71 71 74 2 92 3 73 4 139 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 410;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"294 0 LINE",
"294 461 LINE SMOOTH",
"294 733 OFFCURVE",
"346.833 843.5 OFFCURVE",
"459.5 921.5 CURVE SMOOTH",
"515.833 960.5 OFFCURVE",
"576.333 980 OFFCURVE",
"641 980 CURVE SMOOTH",
"753 980 OFFCURVE",
"838.833 918.5 OFFCURVE",
"871.5 824.5 CURVE",
"826.667 909.167 OFFCURVE",
"855.167 871.5 OFFCURVE",
"871.5 824.5 CURVE SMOOTH",
"887.833 777.5 OFFCURVE",
"896 688.333 OFFCURVE",
"896 557 CURVE SMOOTH",
"896 0 LINE",
"1035 0 LINE",
"1035 426 LINE SMOOTH",
"1035 738 OFFCURVE",
"1084.833 840 OFFCURVE",
"1197.5 920 CURVE SMOOTH",
"1253.833 960 OFFCURVE",
"1316 980 OFFCURVE",
"1384 980 CURVE SMOOTH",
"1496 980 OFFCURVE",
"1580.667 921.833 OFFCURVE",
"1614 834.5 CURVE",
"1568.833 913.333 OFFCURVE",
"1597.333 878.167 OFFCURVE",
"1614 834.5 CURVE SMOOTH",
"1630.667 790.833 OFFCURVE",
"1639 710.667 OFFCURVE",
"1639 594 CURVE SMOOTH",
"1639 0 LINE",
"1782 0 LINE",
"1782 594 LINE SMOOTH",
"1782 866 OFFCURVE",
"1726.833 983 OFFCURVE",
"1611.5 1059 CURVE SMOOTH",
"1553.833 1097 OFFCURVE",
"1487.333 1116 OFFCURVE",
"1412 1116 CURVE SMOOTH",
"1250.667 1116 OFFCURVE",
"1104.333 1025.667 OFFCURVE",
"1011 855 CURVE",
"967 983 OFFCURVE",
"911.667 1043.667 OFFCURVE",
"817 1085 CURVE SMOOTH",
"769.667 1105.667 OFFCURVE",
"719.667 1116 OFFCURVE",
"667 1116 CURVE SMOOTH",
"589 1116 OFFCURVE",
"514.667 1094.667 OFFCURVE",
"444 1052 CURVE SMOOTH",
"392.667 1020 OFFCURVE",
"342.667 969.333 OFFCURVE",
"294 900 CURVE",
"294 1088 LINE",
"155 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
6 8 6 15 107 33 116 8 116 9 116 15 132 8 132 9 132 15 9 33 64 6 35 30 8 2 39 40 40 30 29 19 4 18 41 24 88 13 13 35 88 6 7 0 6 18 41 10 17 20 18 19 31 10 28 3 29 30 0 1 2 39 4 40 41 43 71 71 74 18 92 19 
PUSHW[ ]\011/* 1 value pushed */
560 
PUSHB[ ]\011/* 3 values pushed */
29 92 30 
PUSHW[ ]\011/* 1 value pushed */
560 
PUSHB[ ]\011/* 8 values pushed */
40 92 41 73 42 123 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
25 27 11 12 26 37 25 12 28 90 0 11 10 27 11 24 90 3 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
36 38 3 5 37 37 4 38 38 3 35 104 5 36 5 39 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1921;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"296 0 LINE",
"296 399 LINE SMOOTH",
"296 542.333 OFFCURVE",
"302.667 641 OFFCURVE",
"316 695 CURVE SMOOTH",
"358.667 860.333 OFFCURVE",
"506.667 987 OFFCURVE",
"676 987 CURVE SMOOTH",
"824 987 OFFCURVE",
"916.667 914 OFFCURVE",
"950 770 CURVE SMOOTH",
"960.667 728 OFFCURVE",
"966 644.333 OFFCURVE",
"966 519 CURVE SMOOTH",
"966 0 LINE",
"1105 0 LINE",
"1105 560 LINE SMOOTH",
"1105 856 OFFCURVE",
"1046.5 971.333 OFFCURVE",
"920.5 1054 CURVE SMOOTH",
"857.5 1095.333 OFFCURVE",
"785.333 1116 OFFCURVE",
"704 1116 CURVE SMOOTH",
"544 1116 OFFCURVE",
"408 1042.333 OFFCURVE",
"296 893 CURVE",
"296 1088 LINE",
"156 1088 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
629 
NPUSHB[ ]\011/* 66 values pushed */
26 10 213 15 1 34 64 5 17 30 8 2 22 23 15 6 11 23 10 10 24 10 17 88 5 7 0 6 9 12 10 11 0 1 2 22 4 23 24 11 92 191 10 207 10 223 10 3 10 74 26 23 92 176 24 192 24 208 24 3 24 73 25 123 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
6 16 7 37 14 13 15 13 2 6 16 6 12 90 1 13 8 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 22 values pushed */
18 21 3 4 20 21 19 21 2 6 21 3 17 104 5 18 4 22 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 1249;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822.333 OFFCURVE",
"104 691.667 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"337.667 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692.333 OFFCURVE",
"1187 823.333 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055.333 OFFCURVE",
"838.333 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"901.667 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 380.667 OFFCURVE",
"1013.333 234.5 OFFCURVE",
"884 160.5 CURVE SMOOTH",
"819.333 123.5 OFFCURVE",
"748.333 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516.333 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459.333 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
67 8 14 88 0 7 21 88 7 11 25 105 4 74 29 17 105 10 73 28 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 50 values pushed */
1 27 23 37 19 38 2 37 12 38 22 6 25 90 1 20 8 17 90 0 27 1 25 90 1 15 13 17 90 0 24 5 21 90 0 18 9 21 90 0 26 3 14 90 1 16 11 14 90 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1341;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"158 -398 LINE",
"297 -398 LINE",
"297 187 LINE",
"414.333 44.333 OFFCURVE",
"559.667 -28 OFFCURVE",
"733 -28 CURVE SMOOTH",
"1041 -28 OFFCURVE",
"1291 227 OFFCURVE",
"1291 547 CURVE SMOOTH",
"1291 860.333 OFFCURVE",
"1038.333 1116 OFFCURVE",
"729 1116 CURVE SMOOTH",
"551.667 1116 OFFCURVE",
"407.667 1040 OFFCURVE",
"297 888 CURVE",
"297 1088 LINE",
"158 1088 LINE"
);
},
{
closed = 1;
nodes = (
"874 981 OFFCURVE",
"1013.5 900.667 OFFCURVE",
"1091.5 762 CURVE SMOOTH",
"1130.5 692.667 OFFCURVE",
"1150 619.333 OFFCURVE",
"1150 542 CURVE SMOOTH",
"1150 388.667 OFFCURVE",
"1065.167 236.5 OFFCURVE",
"932.5 158.5 CURVE SMOOTH",
"866.167 119.5 OFFCURVE",
"795.333 100 OFFCURVE",
"720 100 CURVE SMOOTH",
"566.667 100 OFFCURVE",
"416.5 183 OFFCURVE",
"342.5 315 CURVE SMOOTH",
"305.5 381 OFFCURVE",
"287 455.333 OFFCURVE",
"287 538 CURVE SMOOTH",
"287 790 OFFCURVE",
"475.333 981 OFFCURVE",
"718 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
30 64 24 11 27 64 5 17 41 8 2 20 14 15 0 6 17 88 5 7 24 88 11 11 16 14 0 1 20 14 4 15 16 28 105 8 74 33 15 92 16 73 32 123 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
25 31 6 10 26 37 30 38 25 10 28 90 1 31 6 28 90 1 27 9 24 90 0 29 7 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
18 19 3 4 19 3 17 104 5 18 4 20 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
21 23 12 13 22 38 21 13 24 104 4 23 12 20 104 0 13 14 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1397;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1101 1088 LINE",
"1101 888 LINE",
"991.667 1040 OFFCURVE",
"846.667 1116 OFFCURVE",
"668 1116 CURVE SMOOTH",
"358.667 1116 OFFCURVE",
"106 860.333 OFFCURVE",
"106 547 CURVE SMOOTH",
"106 227 OFFCURVE",
"356 -28 OFFCURVE",
"664 -28 CURVE SMOOTH",
"837.333 -28 OFFCURVE",
"983.667 44.333 OFFCURVE",
"1101 187 CURVE",
"1101 -398 LINE",
"1239 -398 LINE",
"1239 1088 LINE"
);
},
{
closed = 1;
nodes = (
"921.667 981 OFFCURVE",
"1110 790 OFFCURVE",
"1110 538 CURVE SMOOTH",
"1110 372.667 OFFCURVE",
"1033.333 235.333 OFFCURVE",
"896 158 CURVE SMOOTH",
"827.333 119.333 OFFCURVE",
"754.667 100 OFFCURVE",
"678 100 CURVE SMOOTH",
"526 100 OFFCURVE",
"384.667 182 OFFCURVE",
"306 322 CURVE SMOOTH",
"266.667 392 OFFCURVE",
"247 465.333 OFFCURVE",
"247 542 CURVE SMOOTH",
"247 696.667 OFFCURVE",
"331 846.833 OFFCURVE",
"463 923.5 CURVE SMOOTH",
"529 961.833 OFFCURVE",
"601 981 OFFCURVE",
"679 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
30 64 25 6 27 64 12 17 41 8 15 29 3 2 0 6 17 88 12 7 25 88 6 11 2 14 0 16 15 29 3 5 2 92 1 74 33 21 105 9 73 32 96 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
18 24 7 11 23 38 19 37 24 7 21 90 0 18 11 21 90 0 22 8 25 90 0 20 10 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
30 31 13 14 30 14 17 104 5 31 13 29 104 1 14 15 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
26 28 4 5 27 37 28 4 25 104 4 26 5 29 104 1 4 3 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1397;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"103 0 LINE",
"246 0 LINE",
"246 368 LINE SMOOTH",
"246 556.667 OFFCURVE",
"254.667 682 OFFCURVE",
"272 744 CURVE SMOOTH",
"317.333 905.333 OFFCURVE",
"412.667 980 OFFCURVE",
"506 980 CURVE SMOOTH",
"526 980 OFFCURVE",
"550.667 973.667 OFFCURVE",
"580 961 CURVE",
"653 1079 LINE",
"609 1103.667 OFFCURVE",
"567.667 1116 OFFCURVE",
"529 1116 CURVE SMOOTH",
"426.333 1116 OFFCURVE",
"331.333 1054.333 OFFCURVE",
"246 929 CURVE",
"246 1088 LINE",
"103 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
34 64 5 10 2 15 16 8 7 5 0 6 10 88 5 7 17 10 8 7 0 1 2 15 4 16 17 7 74 19 16 92 17 73 18 96 210 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 22 values pushed */
11 14 3 4 13 14 12 14 2 6 14 3 10 104 5 11 4 15 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 616;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"601.667 1067 OFFCURVE",
"501 1116 OFFCURVE",
"401 1116 CURVE SMOOTH",
"229 1116 OFFCURVE",
"103 993.333 OFFCURVE",
"103 828 CURVE SMOOTH",
"103 764.667 OFFCURVE",
"120.667 708.333 OFFCURVE",
"156 659 CURVE SMOOTH",
"191.333 609.667 OFFCURVE",
"258 559.667 OFFCURVE",
"356 509 CURVE SMOOTH",
"447.333 462.333 OFFCURVE",
"506 423.667 OFFCURVE",
"532 393 CURVE SMOOTH",
"558 361.667 OFFCURVE",
"571 326 OFFCURVE",
"571 286 CURVE SMOOTH",
"571 188.667 OFFCURVE",
"481 105 OFFCURVE",
"369 105 CURVE SMOOTH",
"289 105 OFFCURVE",
"213.333 145.333 OFFCURVE",
"142 226 CURVE",
"54 126 LINE",
"128.667 30 OFFCURVE",
"249.667 -28 OFFCURVE",
"375 -28 CURVE SMOOTH",
"563 -28 OFFCURVE",
"704 113.333 OFFCURVE",
"704 292 CURVE SMOOTH",
"704 355.333 OFFCURVE",
"685.667 412.333 OFFCURVE",
"649 463 CURVE SMOOTH",
"611.667 513 OFFCURVE",
"541 565 OFFCURVE",
"437 619 CURVE SMOOTH",
"351.667 663 OFFCURVE",
"295.667 701.333 OFFCURVE",
"269 734 CURVE SMOOTH",
"242.333 766 OFFCURVE",
"229 799.667 OFFCURVE",
"229 835 CURVE SMOOTH",
"229 915 OFFCURVE",
"303.333 985 OFFCURVE",
"394 985 CURVE SMOOTH",
"465.333 985 OFFCURVE",
"538.333 948.667 OFFCURVE",
"613 876 CURVE",
"703 969 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 94 values pushed */
164 8 164 13 180 9 180 12 196 9 196 12 6 43 32 52 12 63 32 132 12 139 32 159 30 155 33 164 10 203 2 9 9 3 25 1 75 233 20 1 172 32 216 20 231 0 3 23 1 24 21 2 185 2 198 22 215 28 3 155 31 156 32 170 2 3 121 29 121 32 153 2 3 40 8 30 10 0 1 20 21 9 10 11 3 23 15 1 31 1 47 1 3 1 
PUSHW[ ]\011/* 1 value pushed */
561 
NPUSHB[ ]\011/* 10 values pushed */
3 88 37 7 0 21 16 21 2 21 
PUSHW[ ]\011/* 1 value pushed */
561 
NPUSHB[ ]\011/* 35 values pushed */
23 88 17 11 1 21 20 0 125 26 105 14 74 40 255 40 1 9 15 40 1 8 6 105 192 34 1 34 178 20 73 39 158 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
35 36 24 25 15 16 4 5 4 36 6 128 0 24 16 26 128 1 5 35 3 128 1 25 15 23 128 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 795;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
11 0 7 10 3 8 0 7 9 4 5 1 6 9 4 2 1 6 10 3 11 2 3 4 5 8 6 10 0 0 9 144 10 6 7 10 8 11 0 1 2 5 6 6 7 13 71 71 74 4 
PUSHW[ ]\011/* 1 value pushed */
399 
PUSHB[ ]\011/* 3 values pushed */
6 92 7 
PUSHW[ ]\011/* 3 values pushed */
399 9 376 
PUSHB[ ]\011/* 4 values pushed */
12 160 205 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 694;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2018-11-24 01:48:36 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 254.667 OFFCURVE",
"207.5 122.5 OFFCURVE",
"349.5 36.5 CURVE SMOOTH",
"420.5 -6.5 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"967.5 63 OFFCURVE",
"1037.5 215 CURVE SMOOTH",
"1072.5 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"884.667 190.333 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 190.667 OFFCURVE",
"299 324 CURVE SMOOTH",
"285.667 370.667 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
51 8 13 1 14 0 7 88 19 11 14 0 6 14 13 15 12 1 0 2 23 12 92 15 74 25 2 92 23 73 24 139 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
3 22 17 38 10 11 9 11 2 6 4 3 5 3 2 6 21 37 8 18 12 90 1 6 20 2 90 0 11 16 7 90 0 3 22 7 90 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1245;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"554 0 LINE",
"579 0 LINE",
"1077 1088 LINE",
"927 1088 LINE",
"566 296 LINE",
"202 1088 LINE",
"53 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
184 6 199 5 200 6 3 5 2 3 2 1 3 91 4 5 20 4 4 5 2 1 2 3 1 91 0 6 20 0 0 6 3 1 4 4 0 6 6 10 2 5 6 8 71 71 74 3 
PUSHW[ ]\011/* 3 values pushed */
297 4 329 
PUSHB[ ]\011/* 3 values pushed */
5 242 6 
PUSHW[ ]\011/* 3 values pushed */
329 1 297 
PUSHB[ ]\011/* 8 values pushed */
64 0 73 7 17 158 205 24 
CALL[ ]\011/* CallFunction */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
0 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
FLIPON[ ]\011/* SetAutoFlipOn */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"499 0 LINE",
"848 779 LINE",
"1194 0 LINE",
"1221 0 LINE",
"1693 1088 LINE",
"1547 1088 LINE",
"1208 298 LINE",
"860 1088 LINE",
"835 1088 LINE",
"486 298 LINE",
"153 1088 LINE",
"9 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 81 values pushed */
37 10 57 2 57 5 68 10 86 10 120 2 136 2 200 2 200 5 9 54 8 57 12 89 11 119 8 120 12 134 4 136 9 137 12 8 150 4 152 9 152 12 168 8 184 11 198 8 201 9 201 12 8 39 2 40 3 39 5 39 8 41 12 5 25 10 25 11 120 6 3 9 10 10 1 8 114 10 3 4 32 
PUSHW[ ]\011/* 1 value pushed */
-116 
PUSHB[ ]\011/* 4 values pushed */
5 9 8 32 
PUSHW[ ]\011/* 1 value pushed */
-117 
NPUSHB[ ]\011/* 61 values pushed */
2 12 11 32 6 7 8 8 91 5 6 20 5 5 6 9 5 4 4 91 10 9 20 10 10 9 3 10 11 11 91 2 3 20 2 2 3 12 2 1 1 91 0 12 20 0 0 12 9 11 8 12 1 3 4 6 4 7 0 5 2 
PUSHW[ ]\011/* 1 value pushed */
565 
PUSHB[ ]\011/* 4 values pushed */
8 12 10 10 
PUSHW[ ]\011/* 1 value pushed */
565 
NPUSHB[ ]\011/* 17 values pushed */
7 0 6 9 8 7 4 3 10 11 12 0 14 71 71 74 7 
NPUSHW[ ]\011/* 11 values pushed */
297 6 563 5 564 10 564 2 563 1 297 
PUSHB[ ]\011/* 6 values pushed */
0 73 13 157 207 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1702;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"405 571 LINE",
"-7 0 LINE",
"160 0 LINE",
"488 457 LINE",
"821 0 LINE",
"991 0 LINE",
"572 571 LINE",
"944 1088 LINE",
"776 1088 LINE",
"488 685 LINE",
"200 1088 LINE",
"32 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 74 values pushed */
183 11 1 119 11 135 11 184 5 3 15 13 31 13 47 13 3 11 0 7 10 3 8 0 7 9 4 5 1 6 9 4 2 1 6 10 3 7 6 1 1 91 0 7 20 0 0 7 3 4 9 9 91 10 3 20 10 10 3 3 1 4 0 7 9 6 10 4 0 6 6 10 10 3 
PUSHW[ ]\011/* 1 value pushed */
566 
PUSHB[ ]\011/* 3 values pushed */
4 178 7 
PUSHW[ ]\011/* 1 value pushed */
566 
PUSHB[ ]\011/* 8 values pushed */
6 74 13 15 13 1 5 1 
PUSHW[ ]\011/* 1 value pushed */
566 
PUSHB[ ]\011/* 3 values pushed */
0 178 9 
PUSHW[ ]\011/* 1 value pushed */
566 
PUSHB[ ]\011/* 6 values pushed */
10 73 12 157 185 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 5 values pushed */
160 13 192 13 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 983;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"486 82 LINE",
"276 -398 LINE",
"424 -398 LINE",
"1073 1088 LINE",
"924 1088 LINE",
"561 250 LINE",
"187 1088 LINE",
"39 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
119 2 1 4 3 4 4 20 3 20 4 36 3 36 4 104 2 7 2 2 1 7 6 7 0 6 3 7 7 6 2 1 1 91 0 7 20 0 0 7 6 3 3 91 4 5 20 4 4 5 3 1 4 0 2 2 6 4 0 6 5 6 14 7 2 0 9 71 71 74 3 
PUSHW[ ]\011/* 1 value pushed */
297 
PUSHB[ ]\011/* 4 values pushed */
15 4 1 4 
PUSHW[ ]\011/* 1 value pushed */
567 
PUSHB[ ]\011/* 4 values pushed */
15 2 1 2 
PUSHW[ ]\011/* 8 values pushed */
567 0 5 297 6 308 1 297 
PUSHB[ ]\011/* 3 values pushed */
0 73 8 
PUSHW[ ]\011/* 3 values pushed */
591 368 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
FLIPON[ ]\011/* SetAutoFlipOn */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1098;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"67 965 LINE",
"625 965 LINE",
"9 0 LINE",
"846 0 LINE",
"846 124 LINE",
"250 124 LINE",
"866 1088 LINE",
"67 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
5 2 21 2 2 5 6 1 2 2 91 5 6 20 5 5 6 4 3 5 2 6 1 7 0 2 144 5 10 7 144 0 6 6 1 2 5 4 125 1 74 9 7 178 5 73 8 157 207 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
199 2 199 5 200 6 3 183 5 184 6 200 1 3 120 6 184 1 183 2 3 120 1 119 2 119 5 3 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 870;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"75 428 LINE",
"172.333 425.333 OFFCURVE",
"235.5 376.667 OFFCURVE",
"261.5 290 CURVE",
"226.333 366.833 OFFCURVE",
"248.5 333.333 OFFCURVE",
"261.5 290 CURVE SMOOTH",
"274.5 246.667 OFFCURVE",
"281.333 163.667 OFFCURVE",
"282 41 CURVE SMOOTH",
"282.667 -79 OFFCURVE",
"286 -161 OFFCURVE",
"292 -205 CURVE SMOOTH",
"308 -329 OFFCURVE",
"362.667 -400.667 OFFCURVE",
"452 -434 CURVE SMOOTH",
"482.667 -445.333 OFFCURVE",
"531.333 -451 OFFCURVE",
"598 -451 CURVE SMOOTH",
"654 -451 LINE",
"654 -294 LINE",
"588 -294 OFFCURVE",
"544.833 -290.167 OFFCURVE",
"524.5 -282.5 CURVE SMOOTH",
"504.167 -274.833 OFFCURVE",
"489.333 -264.333 OFFCURVE",
"480 -251 CURVE SMOOTH",
"467.333 -231.667 OFFCURVE",
"459 -204 OFFCURVE",
"455 -168 CURVE SMOOTH",
"452.333 -144.667 OFFCURVE",
"451 -69 OFFCURVE",
"451 59 CURVE SMOOTH",
"451 345.667 OFFCURVE",
"388.667 447.333 OFFCURVE",
"242 510 CURVE",
"372.667 572.667 OFFCURVE",
"426.667 647 OFFCURVE",
"444 811 CURVE SMOOTH",
"448.667 853.667 OFFCURVE",
"451 952.667 OFFCURVE",
"451 1108 CURVE SMOOTH",
"451 1280 OFFCURVE",
"483 1314 OFFCURVE",
"623 1314 CURVE SMOOTH",
"654 1314 LINE",
"654 1471 LINE",
"598 1471 LINE SMOOTH",
"540.667 1471 OFFCURVE",
"499 1467.333 OFFCURVE",
"473 1460 CURVE SMOOTH",
"386.333 1434.667 OFFCURVE",
"330.667 1380.667 OFFCURVE",
"304 1286 CURVE SMOOTH",
"275.031 1183.16 OFFCURVE",
"282.602 921.847 OFFCURVE",
"279 839 CURVE SMOOTH",
"272.333 715 OFFCURVE",
"239.333 653.667 OFFCURVE",
"174 615 CURVE SMOOTH",
"148.667 600.333 OFFCURVE",
"115.667 592.333 OFFCURVE",
"75 591 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
23 0 148 46 46 33 14 148 13 17 33 148 34 19 48 246 13 13 34 162 18 26 
PUSHW[ ]\011/* 1 value pushed */
389 
NPUSHB[ ]\011/* 10 values pushed */
5 129 42 162 46 73 47 119 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"616 -398 LINE",
"759 -398 LINE",
"759 1508 LINE",
"616 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
1 2 0 3 14 0 0 2 3 1 127 0 73 4 231 
PUSHW[ ]\011/* 2 values pushed */
274 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1376;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"546.667 593.667 OFFCURVE",
"483.5 642.167 OFFCURVE",
"457.5 729.5 CURVE",
"492.667 652.167 OFFCURVE",
"470.5 685.833 OFFCURVE",
"457.5 729.5 CURVE SMOOTH",
"444.5 773.167 OFFCURVE",
"437.667 856.333 OFFCURVE",
"437 979 CURVE SMOOTH",
"436.333 1099 OFFCURVE",
"433 1181 OFFCURVE",
"427 1225 CURVE SMOOTH",
"411 1347.667 OFFCURVE",
"356.333 1421 OFFCURVE",
"267 1453 CURVE SMOOTH",
"236.333 1465 OFFCURVE",
"187.667 1471 OFFCURVE",
"121 1471 CURVE SMOOTH",
"65 1471 LINE",
"65 1314 LINE",
"96 1314 LINE SMOOTH",
"214.667 1314 OFFCURVE",
"244.333 1287 OFFCURVE",
"259 1219 CURVE SMOOTH",
"265 1193.667 OFFCURVE",
"268 1107.333 OFFCURVE",
"268 960 CURVE SMOOTH",
"268 678.667 OFFCURVE",
"321 584.667 OFFCURVE",
"477 510 CURVE",
"359.667 459.333 OFFCURVE",
"294.667 376.333 OFFCURVE",
"276 215 CURVE SMOOTH",
"270.667 171.667 OFFCURVE",
"268 70.333 OFFCURVE",
"268 -89 CURVE SMOOTH",
"268 -261 OFFCURVE",
"236 -294 OFFCURVE",
"96 -294 CURVE SMOOTH",
"65 -294 LINE",
"65 -451 LINE",
"121 -451 LINE SMOOTH",
"178.333 -451 OFFCURVE",
"220 -447.333 OFFCURVE",
"246 -440 CURVE SMOOTH",
"332.667 -416 OFFCURVE",
"388.333 -360.5 OFFCURVE",
"415 -266.5 CURVE SMOOTH",
"443.981 -164.343 OFFCURVE",
"436.405 98.305 OFFCURVE",
"440 181 CURVE SMOOTH",
"446.667 305 OFFCURVE",
"479.667 366.333 OFFCURVE",
"545 405 CURVE SMOOTH",
"570.333 419.667 OFFCURVE",
"603.333 427.333 OFFCURVE",
"644 428 CURVE",
"644 591 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
24 0 148 1 1 33 15 148 14 19 33 148 34 17 47 71 71 74 1 162 6 129 42 
PUSHW[ ]\011/* 1 value pushed */
389 
NPUSHB[ ]\011/* 11 values pushed */
27 27 19 162 34 14 73 46 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1044 785 OFFCURVE",
"987.667 753.5 OFFCURVE",
"959 742.5 CURVE SMOOTH",
"930.333 731.5 OFFCURVE",
"902 726 OFFCURVE",
"874 726 CURVE SMOOTH",
"850.667 726 OFFCURVE",
"824.5 730.5 OFFCURVE",
"795.5 739.5 CURVE SMOOTH",
"766.5 748.5 OFFCURVE",
"712.667 771.667 OFFCURVE",
"634 809 CURVE SMOOTH",
"520 863 OFFCURVE",
"430.667 890 OFFCURVE",
"366 890 CURVE SMOOTH",
"335.333 890 OFFCURVE",
"303.667 884.333 OFFCURVE",
"271 873 CURVE SMOOTH",
"238.333 861.667 OFFCURVE",
"185.333 835.333 OFFCURVE",
"112 794 CURVE",
"112 634 LINE",
"186.667 678.667 OFFCURVE",
"241.667 707.333 OFFCURVE",
"277 720 CURVE SMOOTH",
"312.333 732.667 OFFCURVE",
"344.667 739 OFFCURVE",
"374 739 CURVE SMOOTH",
"395.333 739 OFFCURVE",
"418.167 735.167 OFFCURVE",
"442.5 727.5 CURVE SMOOTH",
"466.833 719.833 OFFCURVE",
"523 696 OFFCURVE",
"611 656 CURVE SMOOTH",
"724.333 604.667 OFFCURVE",
"812.667 579 OFFCURVE",
"876 579 CURVE SMOOTH",
"904.667 579 OFFCURVE",
"935.167 584.5 OFFCURVE",
"967.5 595.5 CURVE SMOOTH",
"999.833 606.5 OFFCURVE",
"1053.333 633 OFFCURVE",
"1128 675 CURVE",
"1128 837 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
4 0 4 2 12 12 10 14 4 25 0 25 2 22 12 22 14 4 0 148 1 
PUSHW[ ]\011/* 1 value pushed */
293 
PUSHB[ ]\011/* 3 values pushed */
4 148 21 
PUSHW[ ]\011/* 1 value pushed */
300 
PUSHB[ ]\011/* 4 values pushed */
16 12 148 13 
PUSHW[ ]\011/* 1 value pushed */
293 
NPUSHB[ ]\011/* 18 values pushed */
9 148 16 12 1 13 0 74 25 0 13 1 13 73 24 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1241;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 380, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 417, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 500, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1665;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 225, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 308, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 512, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1780;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 293, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 315, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 313, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 185, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 322, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 250, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 359, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1399;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 331, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1325;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 282, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1331;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 279, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1331;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1331;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1331;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = acute;
transform = "{1, 0, 0, 1, -179, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 410;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = grave;
transform = "{1, 0, 0, 1, -182, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 410;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -309, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 410;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -173, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 410;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 175, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1249;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 287, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 157, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 293, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 221, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 238, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1245;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 235, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1245;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 108, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1245;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 244, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1245;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = dagger;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"518 1051 LINE",
"157 1072 LINE",
"157 923 LINE",
"518 949 LINE",
"489 -314 LINE",
"642 -314 LINE",
"615 949 LINE",
"975 923 LINE",
"975 1072 LINE",
"615 1051 LINE",
"638 1508 LINE",
"489 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
6 1 0 7 4 9 5 8 168 9 218 3 10 2 11 168 10 
PUSHW[ ]\011/* 1 value pushed */
515 
PUSHB[ ]\011/* 6 values pushed */
0 0 3 10 9 4 
PUSHW[ ]\011/* 1 value pushed */
317 
PUSHB[ ]\011/* 7 values pushed */
1 129 6 2 5 135 6 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 6 values pushed */
7 11 8 135 0 7 
PUSHW[ ]\011/* 1 value pushed */
317 
PUSHB[ ]\011/* 6 values pushed */
9 73 12 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1133;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"755 1356 OFFCURVE",
"601.333 1508 OFFCURVE",
"412 1508 CURVE SMOOTH",
"222.667 1508 OFFCURVE",
"65 1355 OFFCURVE",
"65 1167 CURVE SMOOTH",
"65 971 OFFCURVE",
"217 820 OFFCURVE",
"409 820 CURVE SMOOTH",
"601 820 OFFCURVE",
"755 970.667 OFFCURVE",
"755 1164 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"636 1031.333 OFFCURVE",
"534.667 926 OFFCURVE",
"412 926 CURVE SMOOTH",
"289.333 926 OFFCURVE",
"184 1034.667 OFFCURVE",
"184 1164 CURVE SMOOTH",
"184 1296 OFFCURVE",
"287.667 1402 OFFCURVE",
"413 1402 CURVE SMOOTH",
"537 1402 OFFCURVE",
"636 1298 OFFCURVE",
"636 1162 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
55 8 21 106 3 
PUSHW[ ]\011/* 1 value pushed */
338 
NPUSHB[ ]\011/* 17 values pushed */
15 106 9 5 12 121 0 74 25 18 121 6 73 24 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
1 23 22 2 12 87 1 20 4 18 87 0 14 10 12 87 1 16 8 18 87 0 23 1 21 87 0 19 5 21 87 0 13 11 15 87 1 17 7 15 87 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 819;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"828 1083 LINE",
"767.333 1105 OFFCURVE",
"707 1116 OFFCURVE",
"647 1116 CURVE SMOOTH",
"323 1116 OFFCURVE",
"103 855 OFFCURVE",
"103 535 CURVE SMOOTH",
"103 355 OFFCURVE",
"167 208.333 OFFCURVE",
"311 79 CURVE",
"160 -222 LINE",
"277 -286 LINE",
"429 9 LINE",
"503.667 -15.667 OFFCURVE",
"573 -28 OFFCURVE",
"637 -28 CURVE SMOOTH",
"778.333 -28 OFFCURVE",
"929 32 OFFCURVE",
"1033 124 CURVE",
"942 230 LINE",
"835.333 144.667 OFFCURVE",
"733.333 102 OFFCURVE",
"636 102 CURVE SMOOTH",
"590 102 OFFCURVE",
"542 112.667 OFFCURVE",
"492 134 CURVE",
"886 900 LINE",
"918.667 878.667 OFFCURVE",
"950.333 853.333 OFFCURVE",
"981 824 CURVE",
"1066 929 LINE",
"1036.667 961 OFFCURVE",
"998 992.333 OFFCURVE",
"950 1023 CURVE",
"1082 1280 LINE",
"961 1340 LINE"
);
},
{
closed = 1;
nodes = (
"377 209 LINE",
"287.667 290.333 OFFCURVE",
"244 397.667 OFFCURVE",
"244 543 CURVE SMOOTH",
"244 807 OFFCURVE",
"416 982 OFFCURVE",
"644 982 CURVE SMOOTH",
"682 982 OFFCURVE",
"722.333 975 OFFCURVE",
"765 961 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 103 values pushed */
14 32 19 21 57 171 6 203 31 196 37 3 11 64 16 21 57 36 2 68 2 91 21 118 8 134 8 148 37 173 21 180 3 192 3 192 4 10 23 8 2 7 8 18 19 19 1 29 30 38 21 20 0 0 1 19 19 91 20 0 20 20 20 0 22 21 18 17 4 16 37 38 8 9 4 10 32 3 2 29 28 4 27 4 6 7 30 31 4 32 1 0 20 19 13 12 4 9 15 5 1 8 5 
PUSHW[ ]\011/* 1 value pushed */
568 
PUSHB[ ]\011/* 3 values pushed */
32 88 0 
PUSHW[ ]\011/* 1 value pushed */
554 
PUSHB[ ]\011/* 8 values pushed */
27 7 9 0 12 1 8 12 
PUSHW[ ]\011/* 1 value pushed */
561 
PUSHB[ ]\011/* 3 values pushed */
10 88 19 
PUSHW[ ]\011/* 1 value pushed */
553 
NPUSHB[ ]\011/* 26 values pushed */
16 11 0 5 4 12 13 19 20 1 178 4 178 13 74 40 20 178 35 105 24 73 39 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
33 34 25 26 33 26 35 90 0 34 25 32 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */";
};
width = 1135;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"99 715 LINE",
"385 715 LINE",
"415 632.333 OFFCURVE",
"430 544 OFFCURVE",
"430 450 CURVE SMOOTH",
"430 424 OFFCURVE",
"427.667 388.667 OFFCURVE",
"423 344 CURVE",
"371.667 370 OFFCURVE",
"323.667 383 OFFCURVE",
"279 383 CURVE SMOOTH",
"159 383 OFFCURVE",
"57 279 OFFCURVE",
"57 151 CURVE SMOOTH",
"57 35 OFFCURVE",
"138 -37 OFFCURVE",
"266 -37 CURVE SMOOTH",
"368.667 -37 OFFCURVE",
"447.667 16.333 OFFCURVE",
"503 123 CURVE",
"562.333 71.667 OFFCURVE",
"628 30 OFFCURVE",
"700 -2 CURVE SMOOTH",
"752 -25.333 OFFCURVE",
"800.333 -37 OFFCURVE",
"845 -37 CURVE SMOOTH",
"927.667 -37 OFFCURVE",
"995.5 6.5 OFFCURVE",
"1041.5 132.5 CURVE SMOOTH",
"1064.5 195.5 OFFCURVE",
"1075.667 266 OFFCURVE",
"1075 344 CURVE",
"934 344 LINE",
"926.667 189.333 OFFCURVE",
"891.333 112 OFFCURVE",
"828 112 CURVE SMOOTH",
"794.667 112 OFFCURVE",
"758 124 OFFCURVE",
"718 148 CURVE SMOOTH",
"648 190.667 OFFCURVE",
"592.667 229 OFFCURVE",
"552 263 CURVE",
"566.667 317 OFFCURVE",
"574 379.667 OFFCURVE",
"574 451 CURVE SMOOTH",
"574 543 OFFCURVE",
"561.667 631 OFFCURVE",
"537 715 CURVE",
"823 715 LINE",
"823 844 LINE",
"503 844 LINE",
"458 988 LINE",
"451 1006 LINE SMOOTH",
"431.667 1060.667 OFFCURVE",
"422 1115 OFFCURVE",
"422 1169 CURVE SMOOTH",
"422 1291.667 OFFCURVE",
"512.333 1374 OFFCURVE",
"647 1374 CURVE SMOOTH",
"769.667 1374 OFFCURVE",
"847.667 1286.333 OFFCURVE",
"853 1125 CURVE",
"989 1125 LINE",
"974.333 1307.667 OFFCURVE",
"909.833 1408.833 OFFCURVE",
"814.5 1465.5 CURVE SMOOTH",
"766.833 1493.833 OFFCURVE",
"709.667 1508 OFFCURVE",
"643 1508 CURVE SMOOTH",
"439 1508 OFFCURVE",
"282 1357.667 OFFCURVE",
"282 1179 CURVE SMOOTH",
"282 1145 OFFCURVE",
"285.667 1109 OFFCURVE",
"293 1071 CURVE SMOOTH",
"297 1047.667 OFFCURVE",
"317 972 OFFCURVE",
"353 844 CURVE",
"99 844 LINE"
);
},
{
closed = 1;
nodes = (
"352.333 133 OFFCURVE",
"311 96 OFFCURVE",
"261 96 CURVE SMOOTH",
"223.667 96 OFFCURVE",
"194 128.333 OFFCURVE",
"194 171 CURVE SMOOTH",
"194 215 OFFCURVE",
"227 248 OFFCURVE",
"271 248 CURVE SMOOTH",
"301.667 248 OFFCURVE",
"339.667 234.333 OFFCURVE",
"385 207 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
15 38 1 15 64 16 20 57 22 8 24 25 0 98 60 60 16 53 97 63 255 69 97 47 47 41 0 36 1 36 
PUSHW[ ]\011/* 1 value pushed */
569 
PUSHB[ ]\011/* 8 values pushed */
34 148 41 13 15 13 1 13 
PUSHW[ ]\011/* 1 value pushed */
569 
NPUSHB[ ]\011/* 51 values pushed */
16 97 8 5 29 30 45 3 56 55 61 3 57 20 21 22 23 26 27 6 28 19 4 3 2 1 59 58 6 57 5 24 60 0 15 25 1 25 187 13 99 12 246 36 99 37 74 72 57 99 28 
PUSHW[ ]\011/* 1 value pushed */
259 
PUSHB[ ]\011/* 4 values pushed */
66 19 99 5 
PUSHW[ ]\011/* 1 value pushed */
397 
NPUSHB[ ]\011/* 10 values pushed */
0 155 66 99 50 73 71 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SLOOP[ ]\011/* SetLoopVariable */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
17 18 6 7 17 7 19 87 0 18 6 16 87 1 
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = section;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"940 1414 OFFCURVE",
"805.333 1536 OFFCURVE",
"584 1536 CURVE SMOOTH",
"356 1536 OFFCURVE",
"212 1404.333 OFFCURVE",
"212 1219 CURVE SMOOTH",
"212 1101.667 OFFCURVE",
"258 1010.667 OFFCURVE",
"390 916 CURVE",
"276.667 882.667 OFFCURVE",
"202.333 820.167 OFFCURVE",
"161 739.5 CURVE SMOOTH",
"140.333 699.167 OFFCURVE",
"130 658 OFFCURVE",
"130 616 CURVE SMOOTH",
"130 517.333 OFFCURVE",
"181 421.667 OFFCURVE",
"293 335 CURVE SMOOTH",
"318.333 316.333 OFFCURVE",
"388.333 270.333 OFFCURVE",
"503 197 CURVE SMOOTH",
"623 120.333 OFFCURVE",
"699.667 60.667 OFFCURVE",
"733 18 CURVE SMOOTH",
"766.333 -24.667 OFFCURVE",
"783 -68.667 OFFCURVE",
"783 -114 CURVE SMOOTH",
"783 -214 OFFCURVE",
"693 -295 OFFCURVE",
"553 -295 CURVE SMOOTH",
"483.667 -295 OFFCURVE",
"425 -275.667 OFFCURVE",
"377 -237 CURVE SMOOTH",
"347.667 -213.667 OFFCURVE",
"325.333 -180.667 OFFCURVE",
"310 -138 CURVE",
"162 -138 LINE",
"190 -300.667 OFFCURVE",
"344.667 -426 OFFCURVE",
"562 -426 CURVE SMOOTH",
"782 -426 OFFCURVE",
"931 -288 OFFCURVE",
"931 -112 CURVE SMOOTH",
"931 10.667 OFFCURVE",
"854.333 136 OFFCURVE",
"713 224 CURVE",
"887.667 257.333 OFFCURVE",
"999 385.333 OFFCURVE",
"999 520 CURVE SMOOTH",
"999 597.333 OFFCURVE",
"960.5 682.667 OFFCURVE",
"882.5 752 CURVE",
"950.667 679.667 OFFCURVE",
"921.5 717.333 OFFCURVE",
"882.5 752 CURVE SMOOTH",
"843.5 786.667 OFFCURVE",
"769 837 OFFCURVE",
"659 903 CURVE SMOOTH",
"565 959 OFFCURVE",
"499 1003.167 OFFCURVE",
"461 1035.5 CURVE SMOOTH",
"423 1067.833 OFFCURVE",
"395.333 1100.667 OFFCURVE",
"378 1134 CURVE SMOOTH",
"365.333 1158.667 OFFCURVE",
"359 1185.667 OFFCURVE",
"359 1215 CURVE SMOOTH",
"359 1316.333 OFFCURVE",
"444.667 1395 OFFCURVE",
"586 1395 CURVE SMOOTH",
"716.667 1395 OFFCURVE",
"802.333 1319.333 OFFCURVE",
"817 1194 CURVE",
"964 1194 LINE"
);
},
{
closed = 1;
nodes = (
"521 830 LINE",
"679.667 736 OFFCURVE",
"774.667 671.667 OFFCURVE",
"806 637 CURVE SMOOTH",
"837.333 602.333 OFFCURVE",
"853 564.333 OFFCURVE",
"853 523 CURVE SMOOTH",
"853 417.667 OFFCURVE",
"758.667 326 OFFCURVE",
"596 306 CURVE",
"464 376 OFFCURVE",
"375 437.333 OFFCURVE",
"329 490 CURVE SMOOTH",
"293.667 530 OFFCURVE",
"276 574.333 OFFCURVE",
"276 623 CURVE SMOOTH",
"276 732.333 OFFCURVE",
"360.333 816.333 OFFCURVE",
"507 839 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
13 12 2 40 5 64 10 70 25 18 25 50 6 40 8 49 58 65 19 4 33 15 1 1 1 
PUSHW[ ]\011/* 1 value pushed */
402 
PUSHB[ ]\011/* 8 values pushed */
4 97 55 1 0 29 1 29 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 40 values pushed */
33 97 25 15 58 65 49 19 162 36 99 22 155 1 99 0 155 68 99 16 74 73 49 162 7 99 52 155 29 99 28 135 61 99 45 73 72 95 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
53 54 34 35 23 24 5 6 5 54 7 87 0 34 24 36 87 1 6 53 4 87 1 35 23 33 87 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1259;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = bullet;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"450.667 1053 OFFCURVE",
"313 915.333 OFFCURVE",
"313 746 CURVE SMOOTH",
"313 575.333 OFFCURVE",
"450.667 438 OFFCURVE",
"620 438 CURVE SMOOTH",
"789.333 438 OFFCURVE",
"927 575.333 OFFCURVE",
"927 746 CURVE SMOOTH",
"927 915.333 OFFCURVE",
"789.333 1053 OFFCURVE",
"620 1053 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
6 440 
NPUSHB[ ]\011/* 11 values pushed */
0 13 71 71 74 3 230 9 73 12 142 
PUSHW[ ]\011/* 2 values pushed */
364 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"602 -231 LINE",
"602 1438 LINE",
"819 1438 LINE",
"819 -231 LINE",
"938 -231 LINE",
"938 1438 LINE",
"1022 1438 LINE",
"1022 1513 LINE",
"509 1513 LINE SMOOTH",
"374.333 1513 OFFCURVE",
"274.667 1479.667 OFFCURVE",
"210 1413 CURVE SMOOTH",
"132.667 1333.667 OFFCURVE",
"94 1231 OFFCURVE",
"94 1105 CURVE SMOOTH",
"94 966.333 OFFCURVE",
"147 848.833 OFFCURVE",
"231 781.5 CURVE SMOOTH",
"273 747.833 OFFCURVE",
"320 725.333 OFFCURVE",
"372 714 CURVE SMOOTH",
"396 708.667 OFFCURVE",
"433 706 OFFCURVE",
"483 706 CURVE",
"483 -231 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
14 17 18 16 19 15 0 1 1 11 15 0 18 13 
PUSHW[ ]\011/* 1 value pushed */
285 
NPUSHB[ ]\011/* 32 values pushed */
11 12 0 14 17 15 16 18 1 19 0 21 71 71 74 12 246 15 181 16 254 19 181 0 0 1 9 0 0 1 8 0 
PUSHW[ ]\011/* 1 value pushed */
424 
PUSHB[ ]\011/* 6 values pushed */
7 73 20 119 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1155;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"303 0 LINE",
"303 982 LINE SMOOTH",
"303 1106.667 OFFCURVE",
"311 1189.333 OFFCURVE",
"327 1230 CURVE SMOOTH",
"369.667 1334 OFFCURVE",
"472.667 1401 OFFCURVE",
"586 1401 CURVE SMOOTH",
"730 1401 OFFCURVE",
"834 1300 OFFCURVE",
"834 1168 CURVE SMOOTH",
"834 1028 OFFCURVE",
"712.333 916 OFFCURVE",
"527 916 CURVE SMOOTH",
"495 916 LINE",
"495 759 LINE",
"751 751 OFFCURVE",
"890 613.333 OFFCURVE",
"890 412 CURVE SMOOTH",
"890 230.667 OFFCURVE",
"763.667 105 OFFCURVE",
"593 105 CURVE SMOOTH",
"537.667 105 OFFCURVE",
"475 121.333 OFFCURVE",
"405 154 CURVE",
"405 21 LINE",
"461.667 -11.667 OFFCURVE",
"531 -28 OFFCURVE",
"613 -28 CURVE SMOOTH",
"857 -28 OFFCURVE",
"1030 152 OFFCURVE",
"1030 408 CURVE SMOOTH",
"1030 582.667 OFFCURVE",
"944 720 OFFCURVE",
"800 796 CURVE SMOOTH",
"765.333 814 OFFCURVE",
"715.667 828 OFFCURVE",
"651 838 CURVE",
"709.667 846 OFFCURVE",
"755.333 858.333 OFFCURVE",
"788 875 CURVE SMOOTH",
"906.667 936.333 OFFCURVE",
"977 1042 OFFCURVE",
"977 1174 CURVE SMOOTH",
"977 1382 OFFCURVE",
"819 1536 OFFCURVE",
"583 1536 CURVE SMOOTH",
"403 1536 OFFCURVE",
"263.5 1445 OFFCURVE",
"205.5 1317 CURVE SMOOTH",
"176.5 1253 OFFCURVE",
"162 1145.667 OFFCURVE",
"162 995 CURVE SMOOTH",
"162 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
31 64 12 20 57 85 8 24 26 23 21 13 176 33 192 33 2 33 
PUSHW[ ]\011/* 1 value pushed */
581 
NPUSHB[ ]\011/* 27 values pushed */
32 32 26 40 88 5 1 26 88 21 11 0 10 45 1 46 0 37 105 8 178 29 105 18 74 48 32 
PUSHW[ ]\011/* 3 values pushed */
580 23 376 
PUSHB[ ]\011/* 8 values pushed */
46 92 0 73 47 123 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 64 values pushed */
35 44 27 28 19 20 2 12 43 44 42 44 2 6 3 38 10 9 11 9 2 6 27 20 29 128 1 39 6 37 128 1 41 4 45 128 0 35 12 37 128 3 28 19 26 128 0 38 7 40 128 1 44 2 40 128 1 36 9 34 128 0 12 13 
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 1135;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1551 1036 OFFCURVE",
"1399.5 1300.167 OFFCURVE",
"1157.5 1439.5 CURVE SMOOTH",
"1036.5 1509.167 OFFCURVE",
"906 1544 OFFCURVE",
"766 1544 CURVE SMOOTH",
"486 1544 OFFCURVE",
"226.167 1395.333 OFFCURVE",
"85.5 1150 CURVE SMOOTH",
"15.167 1027.333 OFFCURVE",
"-20 896 OFFCURVE",
"-20 756 CURVE SMOOTH",
"-20 478.667 OFFCURVE",
"130 219.167 OFFCURVE",
"374 78.5 CURVE SMOOTH",
"496 8.167 OFFCURVE",
"626.667 -27 OFFCURVE",
"766 -27 CURVE SMOOTH",
"1044.667 -27 OFFCURVE",
"1306 124.5 OFFCURVE",
"1446 366.5 CURVE SMOOTH",
"1516 487.5 OFFCURVE",
"1551 618.667 OFFCURVE",
"1551 760 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1442 515 OFFCURVE",
"1313.333 293.5 OFFCURVE",
"1104 171.5 CURVE SMOOTH",
"999.333 110.5 OFFCURVE",
"887.333 80 OFFCURVE",
"768 80 CURVE SMOOTH",
"528 80 OFFCURVE",
"300.167 209.667 OFFCURVE",
"179.5 419 CURVE SMOOTH",
"119.167 523.667 OFFCURVE",
"89 636.333 OFFCURVE",
"89 757 CURVE SMOOTH",
"89 999.667 OFFCURVE",
"217.167 1225.667 OFFCURVE",
"428.5 1347 CURVE SMOOTH",
"534.167 1407.667 OFFCURVE",
"647.333 1438 OFFCURVE",
"768 1438 CURVE SMOOTH",
"1008 1438 OFFCURVE",
"1229.667 1308.833 OFFCURVE",
"1351 1097.5 CURVE SMOOTH",
"1411.667 991.833 OFFCURVE",
"1442 879 OFFCURVE",
"1442 759 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"439 313 LINE",
"582 313 LINE",
"582 690 LINE",
"809 690 LINE SMOOTH",
"897.518 690 OFFCURVE",
"940.638 684.713 OFFCURVE",
"966.5 643 CURVE SMOOTH",
"976.833 626.333 OFFCURVE",
"983.333 597.667 OFFCURVE",
"986 557 CURVE SMOOTH",
"993 446 LINE SMOOTH",
"997 394.667 OFFCURVE",
"1004 350.333 OFFCURVE",
"1014 313 CURVE",
"1174 313 LINE",
"1159 337 LINE SMOOTH",
"1137.667 369 OFFCURVE",
"1127 409 OFFCURVE",
"1127 457 CURVE SMOOTH",
"1127 559 LINE SMOOTH",
"1127 687 OFFCURVE",
"1105.333 724 OFFCURVE",
"1024 764 CURVE",
"1068.667 793.333 OFFCURVE",
"1097.667 820.333 OFFCURVE",
"1111 845 CURVE SMOOTH",
"1128.333 878.333 OFFCURVE",
"1137 918 OFFCURVE",
"1137 964 CURVE SMOOTH",
"1137 1070.667 OFFCURVE",
"1083.333 1155.167 OFFCURVE",
"1006 1190.5 CURVE SMOOTH",
"967.333 1208.167 OFFCURVE",
"904 1217 OFFCURVE",
"816 1217 CURVE SMOOTH",
"439 1217 LINE"
);
},
{
closed = 1;
nodes = (
"813 1087 LINE SMOOTH",
"953 1087 OFFCURVE",
"994 1046 OFFCURVE",
"994 954 CURVE SMOOTH",
"994 901.333 OFFCURVE",
"976.333 864 OFFCURVE",
"941 842 CURVE SMOOTH",
"917 826.667 OFFCURVE",
"871.333 819 OFFCURVE",
"804 819 CURVE SMOOTH",
"582 819 LINE",
"582 1087 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
4 40 1 64 43 212 39 211 40 3 119 8 69 33 60 32 49 58 48 59 56 62 57 94 61 61 59 60 94 15 32 31 32 2 32 
PUSHW[ ]\011/* 3 values pushed */
573 20 290 
PUSHB[ ]\011/* 7 values pushed */
12 1 48 0 59 1 59 
PUSHW[ ]\011/* 3 values pushed */
573 28 290 
PUSHB[ ]\011/* 7 values pushed */
4 11 66 112 37 167 52 
PUSHW[ ]\011/* 1 value pushed */
296 
PUSHB[ ]\011/* 3 values pushed */
44 190 49 
PUSHW[ ]\011/* 5 values pushed */
535 48 572 16 290 
NPUSHB[ ]\011/* 15 values pushed */
0 74 71 60 58 101 32 0 59 16 59 208 59 3 59 
PUSHW[ ]\011/* 3 values pushed */
571 24 290 
PUSHB[ ]\011/* 3 values pushed */
8 73 70 
PUSHW[ ]\011/* 1 value pushed */
278 
PUSHB[ ]\011/* 2 values pushed */
208 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 88 values pushed */
63 68 1 40 2 38 30 37 26 38 6 37 14 37 18 38 22 37 10 38 39 38 64 37 35 37 29 3 16 100 1 27 5 24 100 0 19 13 16 100 1 21 11 24 100 0 63 40 66 117 3 68 34 66 117 1 31 1 28 100 0 25 7 28 100 0 17 15 20 100 1 23 9 20 100 1 65 38 62 117 0 40 41 67 36 69 117 1 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1530;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1551 1037 OFFCURVE",
"1401.833 1295 OFFCURVE",
"1158.5 1435 CURVE SMOOTH",
"1036.833 1505 OFFCURVE",
"906 1540 OFFCURVE",
"766 1540 CURVE SMOOTH",
"484.667 1540 OFFCURVE",
"225 1390.5 OFFCURVE",
"85 1148.5 CURVE SMOOTH",
"15 1027.5 OFFCURVE",
"-20 897 OFFCURVE",
"-20 757 CURVE SMOOTH",
"-20 477 OFFCURVE",
"129 219.167 OFFCURVE",
"373 78.5 CURVE SMOOTH",
"495 8.167 OFFCURVE",
"626 -27 OFFCURVE",
"766 -27 CURVE SMOOTH",
"1046 -27 OFFCURVE",
"1306 123.667 OFFCURVE",
"1446 365 CURVE SMOOTH",
"1516 485.667 OFFCURVE",
"1551 616.333 OFFCURVE",
"1551 757 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1442 514.333 OFFCURVE",
"1313.333 291.167 OFFCURVE",
"1104 170.5 CURVE SMOOTH",
"999.333 110.167 OFFCURVE",
"886.667 80 OFFCURVE",
"766 80 CURVE SMOOTH",
"524.667 80 OFFCURVE",
"300.167 208.667 OFFCURVE",
"179.5 418 CURVE SMOOTH",
"119.167 522.667 OFFCURVE",
"89 635.667 OFFCURVE",
"89 757 CURVE SMOOTH",
"89 998.333 OFFCURVE",
"217.667 1221.667 OFFCURVE",
"427 1343 CURVE SMOOTH",
"531.667 1403.667 OFFCURVE",
"644.333 1434 OFFCURVE",
"765 1434 CURVE SMOOTH",
"1007.667 1434 OFFCURVE",
"1230.833 1304.167 OFFCURVE",
"1351.5 1095.5 CURVE SMOOTH",
"1411.833 991.167 OFFCURVE",
"1442 878.333 OFFCURVE",
"1442 757 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1134 1110.667 OFFCURVE",
"993.667 1231 OFFCURVE",
"771 1231 CURVE SMOOTH",
"529.667 1231 OFFCURVE",
"355 1054.333 OFFCURVE",
"355 753 CURVE SMOOTH",
"355 466.333 OFFCURVE",
"518 295 OFFCURVE",
"770 295 CURVE SMOOTH",
"971.333 295 OFFCURVE",
"1124.667 434.333 OFFCURVE",
"1150 653 CURVE",
"1014 653 LINE",
"990 489 OFFCURVE",
"898.333 407 OFFCURVE",
"765 407 CURVE SMOOTH",
"606.333 407 OFFCURVE",
"498 527 OFFCURVE",
"498 751 CURVE SMOOTH",
"498 980.333 OFFCURVE",
"609.667 1102 OFFCURVE",
"779 1102 CURVE SMOOTH",
"908.333 1102 OFFCURVE",
"986 1042.667 OFFCURVE",
"1014 924 CURVE",
"1150 924 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
109 8 15 33 31 33 47 33 3 9 15 33 1 8 33 
PUSHW[ ]\011/* 1 value pushed */
610 
NPUSHB[ ]\011/* 24 values pushed */
36 97 15 55 1 55 253 20 130 12 1 0 45 16 45 32 45 3 9 0 45 1 8 45 
PUSHW[ ]\011/* 1 value pushed */
609 
NPUSHB[ ]\011/* 15 values pushed */
42 106 49 253 28 130 4 11 33 99 32 32 45 99 46 
PUSHW[ ]\011/* 1 value pushed */
551 
PUSHB[ ]\011/* 6 values pushed */
16 130 0 74 59 39 
PUSHW[ ]\011/* 3 values pushed */
389 52 570 
PUSHB[ ]\011/* 8 values pushed */
24 130 8 73 58 206 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 82 values pushed */
50 54 37 41 1 31 2 38 30 37 26 38 6 37 14 37 18 38 22 37 10 38 29 3 16 165 1 27 5 24 165 0 19 13 16 165 1 21 11 24 165 0 37 54 39 87 0 41 50 39 87 0 31 1 28 165 0 25 7 28 165 0 17 15 20 165 1 23 9 20 165 1 38 53 36 87 1 40 51 42 87 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1530;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1728 1513 LINE",
"1446 916 LINE",
"1179 1513 LINE",
"936 1513 LINE",
"936 651 LINE",
"1085 651 LINE",
"1085 1361 LINE",
"1396 651 LINE",
"1495 651 LINE",
"1816 1361 LINE",
"1816 651 LINE",
"1966 651 LINE",
"1966 1513 LINE"
);
},
{
closed = 1;
nodes = (
"12 1513 LINE",
"12 1376 LINE",
"315 1376 LINE",
"315 651 LINE",
"465 651 LINE",
"465 1376 LINE",
"770 1376 LINE",
"770 1513 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
1 2 19 17 12 3 4 4 85 11 12 20 11 11 12 10 6 5 5 85 11 10 20 11 11 10 11 6 5 4 3 5 19 17 17 8 
PUSHW[ ]\011/* 1 value pushed */
452 
NPUSHB[ ]\011/* 25 values pushed */
9 14 19 98 20 20 13 13 12 12 10 10 9 0 5 10 7 4 12 11 0 1 127 3 2 
PUSHW[ ]\011/* 3 values pushed */
259 11 259 
PUSHB[ ]\011/* 5 values pushed */
6 7 127 9 8 
PUSHW[ ]\011/* 3 values pushed */
393 14 256 
PUSHB[ ]\011/* 5 values pushed */
15 16 127 18 17 
PUSHW[ ]\011/* 1 value pushed */
256 
PUSHB[ ]\011/* 6 values pushed */
19 73 21 115 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 2048;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"234 1290 LINE",
"372 1290 LINE",
"667 1598 LINE",
"452 1598 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
1 2 0 223 128 3 0 2 1 227 3 73 4 163 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 768;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"110 1518 OFFCURVE",
"58 1466 OFFCURVE",
"58 1402 CURVE SMOOTH",
"58 1338 OFFCURVE",
"110 1286 OFFCURVE",
"174 1286 CURVE SMOOTH",
"238 1286 OFFCURVE",
"290 1338 OFFCURVE",
"290 1402 CURVE SMOOTH",
"290 1466 OFFCURVE",
"238 1518 OFFCURVE",
"174 1518 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"518 1518 OFFCURVE",
"466 1466 OFFCURVE",
"466 1402 CURVE SMOOTH",
"466 1338 OFFCURVE",
"518 1286 OFFCURVE",
"582 1286 CURVE SMOOTH",
"646 1286 OFFCURVE",
"698 1338 OFFCURVE",
"698 1402 CURVE SMOOTH",
"698 1466 OFFCURVE",
"646 1518 OFFCURVE",
"582 1518 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
192 3 192 15 2 192 0 192 12 2 12 124 18 18 0 124 6 15 164 21 
PUSHW[ ]\011/* 1 value pushed */
393 
PUSHB[ ]\011/* 8 values pushed */
3 164 9 73 24 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 756;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = notequal;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"929 1508 LINE",
"787 1508 LINE",
"601 1024 LINE",
"56 1024 LINE",
"56 887 LINE",
"549 887 LINE",
"433 584 LINE",
"56 584 LINE",
"56 447 LINE",
"380 447 LINE",
"194 -37 LINE",
"332 -37 LINE",
"519 447 LINE",
"1068 447 LINE",
"1068 584 LINE",
"572 584 LINE",
"689 887 LINE",
"1068 887 LINE",
"1068 1024 LINE",
"742 1024 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
7 4 23 4 2 17 16 1 18 9 14 15 2 18 9 13 12 5 18 9 10 11 6 18 9 7 11 6 19 8 4 12 5 19 8 3 15 2 19 8 0 16 1 19 8 18 19 8 8 85 9 18 20 9 9 18 19 8 18 9 17 0 1 2 3 14 6 15 16 10 7 6 5 4 13 6 12 11 18 
PUSHW[ ]\011/* 1 value pushed */
605 
PUSHB[ ]\011/* 3 values pushed */
16 127 15 
PUSHW[ ]\011/* 4 values pushed */
313 12 9 605 
NPUSHB[ ]\011/* 12 values pushed */
11 127 12 2 5 1 6 15 12 16 11 18 
PUSHW[ ]\011/* 3 values pushed */
389 19 604 
PUSHB[ ]\011/* 6 values pushed */
1 1 6 74 21 8 
PUSHW[ ]\011/* 3 values pushed */
389 9 604 
PUSHB[ ]\011/* 8 values pushed */
16 16 11 73 20 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1124;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = AE;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"172 0 LINE",
"484 482 LINE",
"1019 482 LINE",
"1019 0 LINE",
"1861 0 LINE",
"1861 144 LINE",
"1168 144 LINE",
"1168 723 LINE",
"1861 723 LINE",
"1861 868 LINE",
"1168 868 LINE",
"1168 1320 LINE",
"1861 1320 LINE",
"1861 1471 LINE",
"951 1471 LINE",
"1 0 LINE"
);
},
{
closed = 1;
nodes = (
"1019 1301 LINE",
"1019 620 LINE",
"578 620 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
5 8 9 17 13 12 16 14 15 1 18 15 15 86 0 1 20 0 0 1 18 4 14 13 94 16 17 
PUSHW[ ]\011/* 1 value pushed */
537 
NPUSHB[ ]\011/* 45 values pushed */
5 7 8 94 6 5 5 12 3 4 94 2 1 2 10 9 94 11 12 12 15 0 8 10 7 6 3 2 5 20 11 4 9 101 18 12 12 0 6 2 2 11 74 20 15 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 6 values pushed */
0 73 19 239 174 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 2032;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Oslash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1605 1447 LINE",
"1500 1534 LINE",
"1356 1360 LINE",
"1216 1458.667 OFFCURVE",
"1060.333 1508 OFFCURVE",
"889 1508 CURVE SMOOTH",
"605 1508 OFFCURVE",
"354.333 1364.5 OFFCURVE",
"217 1122.5 CURVE SMOOTH",
"148.333 1001.5 OFFCURVE",
"114 870.333 OFFCURVE",
"114 729 CURVE SMOOTH",
"114 513 OFFCURVE",
"192 329.333 OFFCURVE",
"348 178 CURVE",
"183 -16 LINE",
"290 -103 LINE",
"454 91 LINE",
"582 5.667 OFFCURVE",
"727.667 -37 OFFCURVE",
"891 -37 CURVE SMOOTH",
"1321.667 -37 OFFCURVE",
"1663 305.333 OFFCURVE",
"1663 736 CURVE SMOOTH",
"1663 946.667 OFFCURVE",
"1587.333 1133 OFFCURVE",
"1454 1269 CURVE"
);
},
{
closed = 1;
nodes = (
"326 412.333 OFFCURVE",
"267 558 OFFCURVE",
"267 728 CURVE SMOOTH",
"267 965.333 OFFCURVE",
"382.333 1165.667 OFFCURVE",
"577 1279 CURVE SMOOTH",
"674.333 1335.667 OFFCURVE",
"777.333 1364 OFFCURVE",
"886 1364 CURVE SMOOTH",
"1019.333 1364 OFFCURVE",
"1142.333 1324.333 OFFCURVE",
"1255 1245 CURVE",
"444 291 LINE"
);
},
{
closed = 1;
nodes = (
"1459.333 1037.667 OFFCURVE",
"1511 898.667 OFFCURVE",
"1511 736 CURVE SMOOTH",
"1511 501.333 OFFCURVE",
"1396.5 299.667 OFFCURVE",
"1202.5 189 CURVE SMOOTH",
"1105.5 133.667 OFFCURVE",
"1000 106 OFFCURVE",
"886 106 CURVE SMOOTH",
"764 106 OFFCURVE",
"652.333 138.667 OFFCURVE",
"551 204 CURVE",
"1356 1153 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 116 values pushed */
117 9 122 20 150 0 153 11 4 41 31 38 32 53 9 58 20 69 9 74 20 85 9 90 20 101 9 111 24 96 33 11 135 23 136 32 151 8 151 23 152 32 168 9 200 9 7 25 9 22 20 40 23 38 30 48 30 63 39 111 39 171 39 8 50 8 0 31 32 8 9 9 21 19 23 22 11 10 20 20 21 9 9 86 10 20 20 10 10 20 24 23 31 39 4 25 18 19 0 1 2 5 17 33 32 22 30 4 34 7 8 11 12 4 6 20 
PUSHW[ ]\011/* 3 values pushed */
373 21 579 
PUSHB[ ]\011/* 5 values pushed */
25 122 17 3 9 
PUSHW[ ]\011/* 3 values pushed */
373 10 578 
NPUSHB[ ]\011/* 30 values pushed */
34 122 6 9 39 31 23 24 4 38 2 1 0 19 18 5 3 30 22 32 33 4 29 12 11 8 7 4 13 20 
PUSHW[ ]\011/* 1 value pushed */
577 
PUSHB[ ]\011/* 8 values pushed */
21 190 38 112 3 74 41 9 
PUSHW[ ]\011/* 4 values pushed */
577 64 10 284 
NPUSHB[ ]\011/* 9 values pushed */
32 29 112 13 73 40 120 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 34 values pushed */
35 37 26 28 14 16 4 5 36 37 27 37 15 38 35 5 38 100 1 26 16 29 100 0 37 4 34 100 0 28 14 25 100 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1778;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = infinity;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"596.333 926 OFFCURVE",
"500 983 OFFCURVE",
"398 983 CURVE SMOOTH",
"262 983 OFFCURVE",
"152 865.333 OFFCURVE",
"152 716 CURVE SMOOTH",
"152 566.667 OFFCURVE",
"262 449 OFFCURVE",
"398 449 CURVE SMOOTH",
"500 449 OFFCURVE",
"596.333 506 OFFCURVE",
"687 620 CURVE",
"829.667 441.333 OFFCURVE",
"904 388 OFFCURVE",
"1020 388 CURVE SMOOTH",
"1180 388 OFFCURVE",
"1308 499 OFFCURVE",
"1308 723 CURVE SMOOTH",
"1308 943 OFFCURVE",
"1166.667 1044 OFFCURVE",
"1020 1044 CURVE SMOOTH",
"916 1044 OFFCURVE",
"843 1006.667 OFFCURVE",
"687 812 CURVE"
);
},
{
closed = 1;
nodes = (
"825.333 811 OFFCURVE",
"876.833 870.167 OFFCURVE",
"910.5 894.5 CURVE SMOOTH",
"944.167 918.833 OFFCURVE",
"978.667 931 OFFCURVE",
"1014 931 CURVE SMOOTH",
"1119.333 931 OFFCURVE",
"1197 853 OFFCURVE",
"1197 713 CURVE SMOOTH",
"1197 578.333 OFFCURVE",
"1120.667 499 OFFCURVE",
"1018 499 CURVE SMOOTH",
"978 499 OFFCURVE",
"941.333 511.667 OFFCURVE",
"908 537 CURVE SMOOTH",
"862 571.667 OFFCURVE",
"811.333 631.667 OFFCURVE",
"756 717 CURVE"
);
},
{
closed = 1;
nodes = (
"540 614 OFFCURVE",
"467.333 563 OFFCURVE",
"400 563 CURVE SMOOTH",
"322.667 563 OFFCURVE",
"263 625.667 OFFCURVE",
"263 719 CURVE SMOOTH",
"263 813.667 OFFCURVE",
"319.333 873 OFFCURVE",
"398 873 CURVE SMOOTH",
"428.667 873 OFFCURVE",
"460.167 863 OFFCURVE",
"492.5 843 CURVE SMOOTH",
"524.833 823 OFFCURVE",
"566.667 780.667 OFFCURVE",
"618 716 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
64 8 0 12 22 3 35 26 106 9 159 14 106 44 
PUSHW[ ]\011/* 3 values pushed */
298 35 298 
NPUSHB[ ]\011/* 10 values pushed */
38 106 20 159 32 106 3 12 0 35 
PUSHW[ ]\011/* 1 value pushed */
389 
NPUSHB[ ]\011/* 16 values pushed */
22 22 41 29 130 6 74 47 41 130 17 73 46 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 48 values pushed */
39 43 27 31 15 19 4 8 27 8 29 87 1 43 15 41 107 0 31 4 29 87 1 39 19 41 107 0 28 7 26 87 0 42 16 44 107 0 30 5 32 87 1 40 18 38 107 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1460;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = plusminus;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"56 913 LINE",
"56 776 LINE",
"493 776 LINE",
"493 342 LINE",
"630 342 LINE",
"630 776 LINE",
"1068 776 LINE",
"1068 913 LINE",
"630 913 LINE",
"630 1347 LINE",
"493 1347 LINE",
"493 913 LINE"
);
},
{
closed = 1;
nodes = (
"56 161 LINE",
"56 24 LINE",
"1068 24 LINE",
"1068 161 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
9 10 5 1 8 6 10 5 2 7 3 11 4 2 7 0 11 4 1 8 4 5 11 10 13 12 14 98 22 15 251 8 1 228 11 127 8 228 10 14 13 15 12 2 1 7 8 17 71 71 74 12 5 228 7 127 8 228 15 10 73 16 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = lessequal;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"240 868 LINE",
"1079 1258 LINE",
"1079 1405 LINE",
"46 934 LINE",
"46 804 LINE",
"1079 335 LINE",
"1079 481 LINE"
);
},
{
closed = 1;
nodes = (
"46 231 LINE",
"46 94 LINE",
"1079 94 LINE",
"1079 231 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
5 4 3 3 85 6 5 20 6 6 5 0 1 2 2 85 6 0 20 6 6 0 10 9 8 98 7 
PUSHW[ ]\011/* 1 value pushed */
382 
NPUSHB[ ]\011/* 38 values pushed */
1 5 218 64 4 201 6 32 0 218 64 1 201 32 6 6 3 2 5 0 4 1 9 8 10 7 7 4 1 74 12 10 2 73 11 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"46 335 LINE",
"1079 804 LINE",
"1079 934 LINE",
"46 1405 LINE",
"46 1258 LINE",
"885 868 LINE",
"46 481 LINE"
);
},
{
closed = 1;
nodes = (
"46 231 LINE",
"46 94 LINE",
"1079 94 LINE",
"1079 231 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
4 1 2 2 85 3 4 20 3 3 4 5 1 0 0 85 6 5 20 6 6 5 8 7 9 98 10 
PUSHW[ ]\011/* 1 value pushed */
382 
NPUSHB[ ]\011/* 37 values pushed */
0 218 64 6 201 1 32 2 218 64 3 201 32 1 1 4 5 2 0 3 6 9 8 10 7 7 5 74 12 3 10 6 73 11 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = yen;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"566 869 LINE",
"229 1471 LINE",
"62 1471 LINE",
"476 736 LINE",
"123 736 LINE",
"123 619 LINE",
"493 619 LINE",
"493 464 LINE",
"123 464 LINE",
"123 347 LINE",
"493 347 LINE",
"493 0 LINE",
"637 0 LINE",
"637 347 LINE",
"1011 347 LINE",
"1011 464 LINE",
"637 464 LINE",
"637 619 LINE",
"1011 619 LINE",
"1011 736 LINE",
"655 736 LINE",
"1072 1471 LINE",
"906 1471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
2 2 1 19 18 19 20 5 16 17 15 14 7 16 11 12 13 8 16 11 9 13 8 5 10 6 14 7 5 10 22 0 22 21 0 86 1 2 20 1 1 2 22 21 22 0 21 86 20 19 20 20 20 19 15 6 7 8 9 12 6 13 14 19 2 3 4 5 16 6 17 18 0 21 1 20 13 247 14 
PUSHW[ ]\011/* 1 value pushed */
390 
NPUSHB[ ]\011/* 39 values pushed */
17 247 18 18 20 11 8 1 20 2 2 19 22 17 14 13 8 7 4 6 3 18 12 15 16 5 6 9 22 7 10 11 24 71 71 74 3 190 0 
PUSHW[ ]\011/* 1 value pushed */
535 
NPUSHB[ ]\011/* 9 values pushed */
1 200 10 101 11 200 18 190 21 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 6 values pushed */
20 73 23 136 184 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
SPVTCA[0]\011/* SetPVectorToAxis */
SFVTCA[0]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1135;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = mu1;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"288 -398 LINE",
"288 115 LINE",
"365.333 20.333 OFFCURVE",
"465.667 -25 OFFCURVE",
"591 -25 CURVE SMOOTH",
"716.333 -25 OFFCURVE",
"814.333 19.333 OFFCURVE",
"893 118 CURVE",
"893 0 LINE",
"1033 0 LINE",
"1033 1088 LINE",
"893 1088 LINE",
"893 501 LINE SMOOTH",
"893 322.333 OFFCURVE",
"841.167 228.5 OFFCURVE",
"748.5 170.5 CURVE SMOOTH",
"702.167 141.5 OFFCURVE",
"650 127 OFFCURVE",
"592 127 CURVE SMOOTH",
"476 127 OFFCURVE",
"366.167 195.667 OFFCURVE",
"321.5 285 CURVE SMOOTH",
"299.167 329.667 OFFCURVE",
"288 397.333 OFFCURVE",
"288 488 CURVE SMOOTH",
"288 1088 LINE",
"147 1088 LINE",
"147 -398 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
27 64 7 19 30 64 7 19 11 10 16 15 3 4 22 23 12 2 13 1 23 14 0 15 13 1 6 15 10 7 
PUSHW[ ]\011/* 1 value pushed */
299 
NPUSHB[ ]\011/* 20 values pushed */
19 11 0 12 15 92 13 14 74 25 2 23 92 1 0 73 24 123 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
20 21 4 6 5 38 4 21 7 104 4 6 20 3 104 0 21 22 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
8 18 9 37 10 17 7 104 4 8 18 11 104 1 17 16 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1180;
}
);
note = mu1;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"482 1288 OFFCURVE",
"557.667 1363 OFFCURVE",
"653 1363 CURVE SMOOTH",
"729 1363 OFFCURVE",
"794.5 1314.5 OFFCURVE",
"828.5 1200.5 CURVE",
"787.5 1298.833 OFFCURVE",
"811.5 1257.5 OFFCURVE",
"828.5 1200.5 CURVE SMOOTH",
"845.5 1143.5 OFFCURVE",
"855.333 1051.333 OFFCURVE",
"858 924 CURVE",
"565.333 918.667 OFFCURVE",
"352.667 850.667 OFFCURVE",
"220 720 CURVE SMOOTH",
"110.667 612 OFFCURVE",
"56 479.333 OFFCURVE",
"56 322 CURVE SMOOTH",
"56 104.667 OFFCURVE",
"180 -25 OFFCURVE",
"364 -25 CURVE SMOOTH",
"558.667 -25 OFFCURVE",
"768.833 118.833 OFFCURVE",
"885.5 411.5 CURVE SMOOTH",
"943.833 557.833 OFFCURVE",
"973 729.333 OFFCURVE",
"973 926 CURVE SMOOTH",
"973 1195.333 OFFCURVE",
"911.667 1360.333 OFFCURVE",
"813 1435 CURVE SMOOTH",
"763.667 1472.333 OFFCURVE",
"709.667 1491 OFFCURVE",
"651 1491 CURVE SMOOTH",
"517.667 1491 OFFCURVE",
"380.333 1396.667 OFFCURVE",
"291 1198 CURVE",
"426 1138 LINE"
);
},
{
closed = 1;
nodes = (
"822 481.333 OFFCURVE",
"724 282.333 OFFCURVE",
"592 185 CURVE SMOOTH",
"526 136.333 OFFCURVE",
"464 112 OFFCURVE",
"406 112 CURVE SMOOTH",
"315.333 112 OFFCURVE",
"236 192.333 OFFCURVE",
"236 303 CURVE SMOOTH",
"236 473.667 OFFCURVE",
"347 655 OFFCURVE",
"495 727 CURVE SMOOTH",
"569 763 OFFCURVE",
"688.667 786 OFFCURVE",
"854 796 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
65 8 1 0 25 97 19 19 23 32 97 12 11 15 0 1 0 
PUSHW[ ]\011/* 1 value pushed */
600 
NPUSHB[ ]\011/* 13 values pushed */
23 97 4 1 25 0 1 19 130 8 74 37 1 
PUSHW[ ]\011/* 3 values pushed */
508 29 398 
PUSHB[ ]\011/* 6 values pushed */
15 73 36 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 46 values pushed */
30 35 20 22 5 14 10 38 34 37 6 37 21 38 33 11 25 165 1 35 25 31 13 29 87 0 22 5 19 87 1 35 9 32 165 0 30 14 32 87 0 20 7 23 87 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1012;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = summation;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"139 1360 LINE",
"742 569 LINE",
"122 -239 LINE",
"122 -426 LINE",
"1386 -426 LINE",
"1386 -265 LINE",
"349 -265 LINE",
"995 576 LINE",
"388 1372 LINE",
"1376 1372 LINE",
"1376 1536 LINE",
"139 1536 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
55 9 56 11 2 3 4 4 221 10 11 20 10 4 5 10 11 4 5 4 3 5 221 9 10 20 9 9 10 9 5 4 11 3 10 10 8 3 
PUSHW[ ]\011/* 1 value pushed */
618 
PUSHB[ ]\011/* 4 values pushed */
0 1 6 5 
PUSHW[ ]\011/* 1 value pushed */
618 
PUSHB[ ]\011/* 7 values pushed */
7 8 15 5 3 11 10 
PUSHW[ ]\011/* 1 value pushed */
602 
NPUSHB[ ]\011/* 17 values pushed */
4 4 6 9 7 167 2 74 13 9 209 11 73 12 216 175 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1460;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = product;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"162 -426 LINE",
"355 -426 LINE",
"355 1362 LINE",
"1333 1362 LINE",
"1333 -426 LINE",
"1524 -426 LINE",
"1524 1536 LINE",
"162 1536 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
4 1 5 0 3 6 2 2 7 15 5 
PUSHW[ ]\011/* 1 value pushed */
615 
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 4 2 3 5 0 6 7 3 
PUSHW[ ]\011/* 1 value pushed */
616 
PUSHB[ ]\011/* 4 values pushed */
2 74 9 6 
PUSHW[ ]\011/* 1 value pushed */
616 
PUSHB[ ]\011/* 6 values pushed */
7 73 8 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1685;
}
);
note = product;
unicode = 220F;
},
{
glyphname = pi;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"0 905 LINE",
"159 905 LINE",
"159 0 LINE",
"347 0 LINE",
"347 905 LINE",
"773 905 LINE",
"773 0 LINE",
"962 0 LINE",
"962 905 LINE",
"1124 905 LINE",
"1124 1063 LINE",
"0 1063 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
3 6 7 10 11 5 8 4 9 1 2 3 6 7 10 6 0 4 9 10 11 
PUSHW[ ]\011/* 1 value pushed */
618 
NPUSHB[ ]\011/* 11 values pushed */
0 6 3 6 4 5 7 10 8 9 5 
PUSHW[ ]\011/* 3 values pushed */
616 4 594 
NPUSHB[ ]\011/* 9 values pushed */
2 74 13 9 15 13 1 8 8 
PUSHW[ ]\011/* 3 values pushed */
616 9 594 
PUSHB[ ]\011/* 6 values pushed */
11 73 12 157 207 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = pi;
},
{
glyphname = integral;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"201 604.667 OFFCURVE",
"213.333 327.667 OFFCURVE",
"238 117 CURVE SMOOTH",
"244 65 OFFCURVE",
"247 25 OFFCURVE",
"247 -3 CURVE SMOOTH",
"247 -45.667 OFFCURVE",
"230.667 -64 OFFCURVE",
"208 -64 CURVE SMOOTH",
"194.667 -64 OFFCURVE",
"178.667 -53.667 OFFCURVE",
"160 -33 CURVE SMOOTH",
"140 -11 OFFCURVE",
"116.667 0 OFFCURVE",
"90 0 CURVE SMOOTH",
"38 0 OFFCURVE",
"0 -40.333 OFFCURVE",
"0 -99 CURVE SMOOTH",
"0 -169.667 OFFCURVE",
"48.667 -220 OFFCURVE",
"118 -220 CURVE SMOOTH",
"175.333 -220 OFFCURVE",
"222.333 -194.333 OFFCURVE",
"259 -143 CURVE SMOOTH",
"309 -73 OFFCURVE",
"337 63.667 OFFCURVE",
"343 267 CURVE SMOOTH",
"353 600.333 OFFCURVE",
"358 789.333 OFFCURVE",
"358 834 CURVE SMOOTH",
"358 1004 OFFCURVE",
"345.667 1225.667 OFFCURVE",
"321 1499 CURVE SMOOTH",
"315 1567.667 OFFCURVE",
"312 1616 OFFCURVE",
"312 1644 CURVE SMOOTH",
"312 1690.667 OFFCURVE",
"328 1708 OFFCURVE",
"352 1708 CURVE SMOOTH",
"363.333 1708 OFFCURVE",
"376.667 1701.333 OFFCURVE",
"392 1688 CURVE SMOOTH",
"419.333 1664 OFFCURVE",
"444.667 1652 OFFCURVE",
"468 1652 CURVE SMOOTH",
"520 1652 OFFCURVE",
"560 1694.667 OFFCURVE",
"560 1756 CURVE SMOOTH",
"560 1810.667 OFFCURVE",
"500.333 1863 OFFCURVE",
"435 1863 CURVE SMOOTH",
"373.667 1863 OFFCURVE",
"304.333 1819 OFFCURVE",
"271 1739 CURVE SMOOTH",
"241.667 1667 OFFCURVE",
"223.667 1569.667 OFFCURVE",
"217 1447 CURVE SMOOTH",
"206.333 1253.667 OFFCURVE",
"201 1087.333 OFFCURVE",
"201 948 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
50 8 13 159 17 148 7 30 148 64 40 159 36 10 48 71 71 74 10 162 14 20 155 22 24 197 64 43 155 22 0 162 14 33 73 47 115 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
0 
SMD[ ]\011/* SetMinimumDistance */
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 1 value pushed */
64 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[01100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
0 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[01100]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
64 
SMD[ ]\011/* SetMinimumDistance */
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[11100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 36 values pushed */
41 42 27 29 18 19 3 6 4 3 5 3 2 6 28 38 18 6 20 107 0 41 29 43 107 1 19 3 17 107 1 42 27 40 107 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 561;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = ordfeminine;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"550 1491 LINE",
"550 1392 LINE",
"495.333 1469.333 OFFCURVE",
"426.333 1508 OFFCURVE",
"345 1508 CURVE SMOOTH",
"193 1508 OFFCURVE",
"57 1356 OFFCURVE",
"57 1152 CURVE SMOOTH",
"57 945.333 OFFCURVE",
"191 794 OFFCURVE",
"343 794 CURVE SMOOTH",
"425.667 794 OFFCURVE",
"494 830.667 OFFCURVE",
"550 904 CURVE",
"550 810 LINE",
"664 810 LINE",
"664 1491 LINE"
);
},
{
closed = 1;
nodes = (
"467.667 1399 OFFCURVE",
"556 1297.333 OFFCURVE",
"556 1148 CURVE SMOOTH",
"556 996 OFFCURVE",
"466.667 898 OFFCURVE",
"364 898 CURVE SMOOTH",
"264 898 OFFCURVE",
"173 1003.333 OFFCURVE",
"173 1150 CURVE SMOOTH",
"173 1295.333 OFFCURVE",
"262.333 1399 OFFCURVE",
"365 1399 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
15 3 2 23 
PUSHW[ ]\011/* 1 value pushed */
623 
PUSHB[ ]\011/* 7 values pushed */
6 21 1 20 16 22 17 
PUSHW[ ]\011/* 1 value pushed */
623 
NPUSHB[ ]\011/* 26 values pushed */
12 23 16 26 129 2 181 1 74 30 15 30 1 9 15 30 1 8 20 181 9 73 29 89 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */";
};
width = 756;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"201 1508 OFFCURVE",
"55 1354.333 OFFCURVE",
"55 1149 CURVE SMOOTH",
"55 946.333 OFFCURVE",
"199.667 794 OFFCURVE",
"377 794 CURVE SMOOTH",
"555.667 794 OFFCURVE",
"700 946.333 OFFCURVE",
"700 1149 CURVE SMOOTH",
"700 1353 OFFCURVE",
"554.333 1508 OFFCURVE",
"377 1508 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"486.333 1398 OFFCURVE",
"583 1289.667 OFFCURVE",
"583 1147 CURVE SMOOTH",
"583 1004.333 OFFCURVE",
"490.333 901 OFFCURVE",
"377 901 CURVE SMOOTH",
"265 901 OFFCURVE",
"172 1004.333 OFFCURVE",
"172 1147 CURVE SMOOTH",
"172 1289.667 OFFCURVE",
"269 1398 OFFCURVE",
"377 1398 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
55 8 18 
PUSHW[ ]\011/* 1 value pushed */
623 
PUSHB[ ]\011/* 3 values pushed */
6 21 12 
PUSHW[ ]\011/* 1 value pushed */
623 
NPUSHB[ ]\011/* 18 values pushed */
0 23 21 181 3 74 25 15 25 1 15 181 9 73 24 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
1 23 19 5 21 87 1 17 7 15 87 0 23 1 21 87 1 13 11 15 87 0 20 4 18 87 0 16 8 18 87 0 22 2 12 87 1 14 10 12 87 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 756;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = Ohm;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"127 168 LINE",
"127 0 LINE",
"704 0 LINE",
"704 180 LINE",
"493.333 274.667 OFFCURVE",
"362 486.667 OFFCURVE",
"362 780 CURVE SMOOTH",
"362 1134.667 OFFCURVE",
"544 1340 OFFCURVE",
"804 1340 CURVE SMOOTH",
"980 1340 OFFCURVE",
"1105.833 1261.833 OFFCURVE",
"1186.5 1082.5 CURVE SMOOTH",
"1226.833 992.833 OFFCURVE",
"1247 891 OFFCURVE",
"1247 777 CURVE SMOOTH",
"1247 571.667 OFFCURVE",
"1166.667 389.333 OFFCURVE",
"1044 272 CURVE SMOOTH",
"1008 238.667 OFFCURVE",
"960 207 OFFCURVE",
"900 177 CURVE",
"900 0 LINE",
"1475 0 LINE",
"1475 166 LINE",
"1111 160 LINE",
"1272.333 266.667 OFFCURVE",
"1362.833 386.5 OFFCURVE",
"1415.5 544.5 CURVE SMOOTH",
"1441.833 623.5 OFFCURVE",
"1455 709 OFFCURVE",
"1455 801 CURVE SMOOTH",
"1455 985 OFFCURVE",
"1406.667 1140.333 OFFCURVE",
"1310 1267 CURVE SMOOTH",
"1190.667 1424.333 OFFCURVE",
"1023.333 1503 OFFCURVE",
"808 1503 CURVE SMOOTH",
"548 1503 OFFCURVE",
"347.167 1386.5 OFFCURVE",
"234.5 1172.5 CURVE SMOOTH",
"178.167 1065.5 OFFCURVE",
"150 942 OFFCURVE",
"150 802 CURVE SMOOTH",
"150 610 OFFCURVE",
"205.5 445.5 OFFCURVE",
"299.5 327.5 CURVE SMOOTH",
"346.5 268.5 OFFCURVE",
"412 212.667 OFFCURVE",
"496 160 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
8 34 138 1 133 15 154 1 150 15 170 1 166 15 185 1 182 15 200 22 200 23 11 43 8 20 16 17 35 0 38 19 36 18 37 29 
PUSHW[ ]\011/* 1 value pushed */
618 
PUSHB[ ]\011/* 5 values pushed */
8 3 17 240 38 
PUSHW[ ]\011/* 1 value pushed */
615 
NPUSHB[ ]\011/* 16 values pushed */
18 37 8 20 16 17 3 18 19 37 0 35 3 36 37 25 
PUSHW[ ]\011/* 1 value pushed */
617 
PUSHB[ ]\011/* 3 values pushed */
12 209 19 
PUSHW[ ]\011/* 1 value pushed */
599 
PUSHB[ ]\011/* 4 values pushed */
18 74 40 32 
PUSHW[ ]\011/* 1 value pushed */
617 
PUSHB[ ]\011/* 3 values pushed */
4 209 36 
PUSHW[ ]\011/* 1 value pushed */
599 
PUSHB[ ]\011/* 6 values pushed */
37 73 39 120 175 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 30 values pushed */
26 31 5 11 10 37 27 38 6 38 28 9 25 100 1 30 7 32 100 0 26 11 29 100 1 31 5 29 100 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1573;
}
);
note = Ohm;
unicode = 2126;
},
{
glyphname = ae;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1117 1088 LINE",
"1117 890 LINE",
"1057.667 961.333 OFFCURVE",
"999 1013.667 OFFCURVE",
"941 1047 CURVE SMOOTH",
"859 1093 OFFCURVE",
"771 1116 OFFCURVE",
"677 1116 CURVE SMOOTH",
"481 1116 OFFCURVE",
"292.667 1006.167 OFFCURVE",
"194 833.5 CURVE SMOOTH",
"144.667 747.167 OFFCURVE",
"120 652 OFFCURVE",
"120 548 CURVE SMOOTH",
"120 226.667 OFFCURVE",
"373 -28 OFFCURVE",
"681 -28 CURVE SMOOTH",
"776.333 -28 OFFCURVE",
"864 -4.667 OFFCURVE",
"944 42 CURVE SMOOTH",
"1000 74 OFFCURVE",
"1057.667 127 OFFCURVE",
"1117 201 CURVE",
"1117 0 LINE",
"1245 0 LINE",
"1245 194 LINE",
"1297.667 124.667 OFFCURVE",
"1353 73.667 OFFCURVE",
"1411 41 CURVE SMOOTH",
"1491.667 -5 OFFCURVE",
"1583.333 -28 OFFCURVE",
"1686 -28 CURVE SMOOTH",
"1919.333 -28 OFFCURVE",
"2114.333 90.333 OFFCURVE",
"2213 297 CURVE",
"2093 357 LINE",
"1994.333 178.333 OFFCURVE",
"1862.667 100 OFFCURVE",
"1696 100 CURVE SMOOTH",
"1541.333 100 OFFCURVE",
"1408.333 173.667 OFFCURVE",
"1331 311 CURVE SMOOTH",
"1292.333 379.667 OFFCURVE",
"1271.667 452.667 OFFCURVE",
"1269 530 CURVE",
"2248 530 LINE",
"2249.333 872.667 OFFCURVE",
"2010 1116 OFFCURVE",
"1682 1116 CURVE SMOOTH",
"1504.667 1116 OFFCURVE",
"1386.333 1060.333 OFFCURVE",
"1245 891 CURVE",
"1245 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1277 651 LINE",
"1310.333 791 OFFCURVE",
"1386.167 882.833 OFFCURVE",
"1505.5 939.5 CURVE SMOOTH",
"1565.167 967.833 OFFCURVE",
"1626.667 982 OFFCURVE",
"1690 982 CURVE SMOOTH",
"1814 982 OFFCURVE",
"1941.333 921.333 OFFCURVE",
"2012 832 CURVE SMOOTH",
"2047.333 787.333 OFFCURVE",
"2074.333 727 OFFCURVE",
"2093 651 CURVE"
);
},
{
closed = 1;
nodes = (
"848.333 981 OFFCURVE",
"995.167 899.333 OFFCURVE",
"1066.5 770 CURVE SMOOTH",
"1102.167 705.333 OFFCURVE",
"1120 629.333 OFFCURVE",
"1120 542 CURVE SMOOTH",
"1120 291.333 OFFCURVE",
"933.333 105 OFFCURVE",
"692 105 CURVE SMOOTH",
"450.667 105 OFFCURVE",
"263 293.333 OFFCURVE",
"263 544 CURVE SMOOTH",
"263 706.667 OFFCURVE",
"340.833 848 OFFCURVE",
"473.5 924 CURVE SMOOTH",
"539.833 962 OFFCURVE",
"611 981 OFFCURVE",
"687 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 116 values pushed */
123 6 180 17 2 45 64 16 21 57 14 64 17 21 57 10 11 12 20 12 22 3 3 2 3 3 5 49 3 3 38 3 40 5 63 3 12 28 12 29 10 60 3 33 64 12 19 34 64 4 47 30 64 59 30 33 64 37 52 41 8 1 23 24 41 62 26 25 16 15 7 43 8 144 255 51 1 9 15 51 1 8 51 51 19 4 42 6 25 10 47 88 4 4 52 88 37 7 64 15 80 15 2 0 15 16 15 48 15 3 9 0 15 1 8 15 
PUSHW[ ]\011/* 1 value pushed */
553 
NPUSHB[ ]\011/* 48 values pushed */
12 88 19 19 59 88 30 11 51 8 15 16 26 62 41 42 0 1 23 7 25 8 125 24 92 25 25 33 16 178 43 105 7 74 67 9 0 67 1 8 56 105 33 73 66 139 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
53 58 31 36 54 37 35 38 58 31 56 90 0 53 36 56 90 0 57 32 59 90 0 55 34 52 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
63 65 38 40 64 38 39 37 63 40 52 104 5 65 38 62 104 1 40 41 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
60 61 27 29 28 38 61 27 59 104 4 60 29 62 104 1 27 26 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
48 50 2 3 49 37 50 2 47 104 5 48 3 51 104 0 50 51 2 1 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
20 22 9 11 10 38 21 37 9 22 12 104 4 11 20 8 104 0 22 23 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 2370;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = oslash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1227 1059 LINE",
"1135 1133 LINE",
"1019 996 LINE",
"919 1076 OFFCURVE",
"802 1116 OFFCURVE",
"668 1116 CURVE SMOOTH",
"334.667 1116 OFFCURVE",
"102 845 OFFCURVE",
"102 541 CURVE SMOOTH",
"102 377.667 OFFCURVE",
"161 239 OFFCURVE",
"279 125 CURVE",
"165 -9 LINE",
"254 -83 LINE",
"370 54 LINE",
"460 -0.667 OFFCURVE",
"559.667 -28 OFFCURVE",
"669 -28 CURVE SMOOTH",
"1001 -28 OFFCURVE",
"1235 237 OFFCURVE",
"1235 541 CURVE SMOOTH",
"1235 681.667 OFFCURVE",
"1190.667 805.667 OFFCURVE",
"1102 913 CURVE"
);
},
{
closed = 1;
nodes = (
"291 306.333 OFFCURVE",
"245 423.333 OFFCURVE",
"245 538 CURVE SMOOTH",
"245 694 OFFCURVE",
"328.167 842.5 OFFCURVE",
"459.5 920.5 CURVE SMOOTH",
"525.167 959.5 OFFCURVE",
"595 979 OFFCURVE",
"669 979 CURVE SMOOTH",
"762.333 979 OFFCURVE",
"848.333 948.333 OFFCURVE",
"927 887 CURVE",
"367 229 LINE"
);
},
{
closed = 1;
nodes = (
"1064.333 721.333 OFFCURVE",
"1093 633 OFFCURVE",
"1093 537 CURVE SMOOTH",
"1093 381 OFFCURVE",
"1011.5 234.5 OFFCURVE",
"881.5 160.5 CURVE SMOOTH",
"816.5 123.5 OFFCURVE",
"745.333 105 OFFCURVE",
"668 105 CURVE SMOOTH",
"597.333 105 OFFCURVE",
"527.667 122.667 OFFCURVE",
"459 158 CURVE",
"1007 802 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 120 values pushed */
47 6 32 17 182 9 185 19 4 31 6 16 17 166 9 169 19 198 9 201 19 6 15 6 0 17 139 11 167 20 168 30 183 20 184 30 199 20 200 30 9 32 1 47 11 105 30 102 31 4 16 1 31 11 121 21 3 0 1 15 11 63 11 121 30 118 31 5 47 8 0 30 31 7 8 8 19 17 21 20 10 9 18 18 19 8 8 91 9 18 20 9 9 18 22 21 30 38 4 23 16 17 0 1 4 15 32 31 20 29 28 5 33 6 7 10 11 4 5 19 
PUSHW[ ]\011/* 3 values pushed */
585 18 586 
PUSHB[ ]\011/* 5 values pushed */
23 88 15 7 9 
PUSHW[ ]\011/* 3 values pushed */
585 8 585 
NPUSHB[ ]\011/* 30 values pushed */
33 88 5 11 38 30 21 22 4 37 1 0 17 16 4 2 28 29 20 31 32 5 27 11 10 7 6 4 12 18 
PUSHW[ ]\011/* 1 value pushed */
584 
PUSHB[ ]\011/* 8 values pushed */
19 125 37 105 2 74 40 8 
PUSHW[ ]\011/* 1 value pushed */
584 
NPUSHB[ ]\011/* 10 values pushed */
9 178 27 105 12 73 39 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
34 36 24 26 13 14 3 4 35 37 25 37 34 4 37 90 1 24 14 27 90 0 36 3 33 90 0 26 13 23 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1337;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = questiondown;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"536 1110 OFFCURVE",
"481 1054 OFFCURVE",
"481 986 CURVE SMOOTH",
"481 916.667 OFFCURVE",
"536 862 OFFCURVE",
"604 862 CURVE SMOOTH",
"672 862 OFFCURVE",
"727 916.667 OFFCURVE",
"727 986 CURVE SMOOTH",
"727 1055.333 OFFCURVE",
"672 1110 OFFCURVE",
"604 1110 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"894 -75 OFFCURVE",
"873.667 -141 OFFCURVE",
"835 -187 CURVE SMOOTH",
"779.667 -253 OFFCURVE",
"701.667 -286 OFFCURVE",
"601 -286 CURVE SMOOTH",
"437 -286 OFFCURVE",
"331 -194 OFFCURVE",
"331 -78 CURVE SMOOTH",
"331 -24 OFFCURVE",
"351.333 17.667 OFFCURVE",
"392 47 CURVE SMOOTH",
"432 76.333 OFFCURVE",
"524 120.333 OFFCURVE",
"668 179 CURVE SMOOTH",
"757.333 215.667 OFFCURVE",
"818.167 246 OFFCURVE",
"850.5 270 CURVE SMOOTH",
"882.833 294 OFFCURVE",
"907.833 323.833 OFFCURVE",
"925.5 359.5 CURVE",
"915.167 318 OFFCURVE",
"952 393 OFFCURVE",
"952 473 CURVE SMOOTH",
"952 638.333 OFFCURVE",
"814 765 OFFCURVE",
"598 765 CURVE SMOOTH",
"380.667 765 OFFCURVE",
"244.333 634.667 OFFCURVE",
"235 412 CURVE",
"381 412 LINE",
"397 560 OFFCURVE",
"466 624 OFFCURVE",
"598 624 CURVE SMOOTH",
"718 624 OFFCURVE",
"801 551.333 OFFCURVE",
"801 474 CURVE SMOOTH",
"801 438 OFFCURVE",
"787.333 407 OFFCURVE",
"760 381 CURVE SMOOTH",
"732 355 OFFCURVE",
"653 316 OFFCURVE",
"523 264 CURVE SMOOTH",
"316.333 182.667 OFFCURVE",
"255.333 127.833 OFFCURVE",
"214 48.5 CURVE SMOOTH",
"193.333 8.833 OFFCURVE",
"183 -34.333 OFFCURVE",
"183 -81 CURVE SMOOTH",
"183 -277 OFFCURVE",
"341.667 -426 OFFCURVE",
"603 -426 CURVE SMOOTH",
"868.333 -426 OFFCURVE",
"1038.333 -258.333 OFFCURVE",
"1041 11 CURVE",
"896 11 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
43 21 43 46 59 21 59 46 57 53 68 42 84 42 107 21 116 42 132 44 154 21 155 22 156 23 155 25 174 23 175 25 163 45 164 46 191 21 188 22 176 43 187 46 207 21 207 22 192 43 201 46 26 31 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 29 values pushed */
17 21 57 53 64 13 21 57 40 8 44 23 51 63 33 1 15 33 31 33 47 33 3 9 15 33 1 8 33 
PUSHW[ ]\011/* 1 value pushed */
402 
PUSHB[ ]\011/* 3 values pushed */
30 97 37 
PUSHW[ ]\011/* 1 value pushed */
382 
NPUSHB[ ]\011/* 20 values pushed */
207 6 1 6 124 0 7 0 12 16 12 32 12 3 9 0 12 1 8 12 
PUSHW[ ]\011/* 1 value pushed */
412 
NPUSHB[ ]\011/* 33 values pushed */
51 97 16 15 207 9 1 9 164 3 3 3 27 99 40 246 12 99 13 74 56 33 99 34 155 48 99 19 73 55 103 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
49 50 38 39 28 29 17 18 50 17 48 87 0 29 38 27 87 1 49 18 51 87 0 28 39 30 87 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1210;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"234 1110 OFFCURVE",
"179 1054 OFFCURVE",
"179 986 CURVE SMOOTH",
"179 916.667 OFFCURVE",
"234 862 OFFCURVE",
"302 862 CURVE SMOOTH",
"370 862 OFFCURVE",
"425 916.667 OFFCURVE",
"425 986 CURVE SMOOTH",
"425 1055.333 OFFCURVE",
"370 1110 OFFCURVE",
"302 1110 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 -426 LINE",
"376 714 LINE",
"231 714 LINE",
"231 -426 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
15 14 12 15 13 
PUSHW[ ]\011/* 1 value pushed */
298 
NPUSHB[ ]\011/* 26 values pushed */
6 124 0 7 15 12 14 13 17 71 71 74 5 3 155 14 127 5 13 155 9 73 16 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
0 13 32 13 2 240 13 1 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
0 3 32 3 2 240 3 1 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01110]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 604;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"115 1024 LINE",
"115 887 LINE",
"989 887 LINE",
"990 447 LINE",
"1127 447 LINE",
"1127 1024 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
1 2 3 0 5 2 
PUSHW[ ]\011/* 1 value pushed */
260 
NPUSHB[ ]\011/* 17 values pushed */
4 127 5 2 129 3 127 1 0 74 7 4 73 6 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1241;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = radical;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"787 244 LINE",
"382 1067 LINE",
"81 916 LINE",
"115 852 LINE",
"313 943 LINE",
"809 -78 LINE",
"1121 1869 LINE",
"1047 1869 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
0 7 7 179 2 1 20 2 7 6 2 1 3 4 4 179 5 6 20 5 5 6 3 6 7 7 85 2 3 20 2 7 0 2 3 7 5 4 3 2 5 0 1 
PUSHW[ ]\011/* 1 value pushed */
447 
NPUSHB[ ]\011/* 22 values pushed */
6 6 3 4 8 7 2 0 3 1 6 6 8 1 74 9 5 73 8 119 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
SHP[0]\011/* ShiftPointByLastPoint */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = florin;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"663 1176 LINE SMOOTH",
"676.333 1272 OFFCURVE",
"691.833 1335.167 OFFCURVE",
"709.5 1365.5 CURVE SMOOTH",
"727.167 1395.833 OFFCURVE",
"752.333 1411 OFFCURVE",
"785 1411 CURVE SMOOTH",
"826.333 1411 OFFCURVE",
"872.667 1386.667 OFFCURVE",
"924 1338 CURVE",
"942 1471 LINE",
"879.333 1514.333 OFFCURVE",
"820.333 1536 OFFCURVE",
"765 1536 CURVE SMOOTH",
"698.333 1536 OFFCURVE",
"643 1504 OFFCURVE",
"599 1440 CURVE SMOOTH",
"574.333 1403.333 OFFCURVE",
"552.667 1323.667 OFFCURVE",
"534 1201 CURVE SMOOTH",
"485 882 LINE",
"344 882 LINE",
"327 760 LINE",
"468 760 LINE",
"367 71 LINE SMOOTH",
"345.667 -77.667 OFFCURVE",
"317.833 -176.333 OFFCURVE",
"283.5 -225 CURVE SMOOTH",
"249.167 -273.667 OFFCURVE",
"208.333 -298 OFFCURVE",
"161 -298 CURVE SMOOTH",
"123.667 -298 OFFCURVE",
"86.667 -283 OFFCURVE",
"50 -253 CURVE",
"32 -377 LINE",
"81.333 -409.667 OFFCURVE",
"128.667 -426 OFFCURVE",
"174 -426 CURVE SMOOTH",
"268.667 -426 OFFCURVE",
"361 -367.667 OFFCURVE",
"421 -241 CURVE SMOOTH",
"451 -177.667 OFFCURVE",
"475.667 -80.667 OFFCURVE",
"495 50 CURVE SMOOTH",
"602 760 LINE",
"835 760 LINE",
"852 882 LINE",
"621 882 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
21 20 19 1 21 16 17 18 2 21 16 3 18 2 33 4 0 19 1 33 4 33 4 4 91 16 21 20 16 16 21 11 13 10 8 28 30 27 25 2 1 18 144 19 19 25 13 88 8 15 30 88 25 1 2 19 1 18 35 71 71 74 27 
NPUSHW[ ]\011/* 9 values pushed */
595 1 399 33 594 4 297 21 594 
PUSHB[ ]\011/* 8 values pushed */
0 18 16 18 2 18 178 16 
PUSHW[ ]\011/* 1 value pushed */
563 
PUSHB[ ]\011/* 3 values pushed */
10 73 34 
PUSHW[ ]\011/* 3 values pushed */
591 592 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1135;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = approxequal;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"986 971 OFFCURVE",
"929.667 939.5 OFFCURVE",
"901 928.5 CURVE SMOOTH",
"872.333 917.5 OFFCURVE",
"844 912 OFFCURVE",
"816 912 CURVE SMOOTH",
"792.667 912 OFFCURVE",
"766.5 916.5 OFFCURVE",
"737.5 925.5 CURVE SMOOTH",
"708.5 934.5 OFFCURVE",
"654.667 957.667 OFFCURVE",
"576 995 CURVE SMOOTH",
"462 1049 OFFCURVE",
"372.667 1076 OFFCURVE",
"308 1076 CURVE SMOOTH",
"277.333 1076 OFFCURVE",
"245.667 1070.5 OFFCURVE",
"213 1059.5 CURVE SMOOTH",
"180.333 1048.5 OFFCURVE",
"127.333 1022 OFFCURVE",
"54 980 CURVE",
"54 820 LINE",
"128.667 864.667 OFFCURVE",
"183.667 893.333 OFFCURVE",
"219 906 CURVE SMOOTH",
"254.333 918.667 OFFCURVE",
"286.667 925 OFFCURVE",
"316 925 CURVE SMOOTH",
"337.333 925 OFFCURVE",
"360.167 921.167 OFFCURVE",
"384.5 913.5 CURVE SMOOTH",
"408.833 905.833 OFFCURVE",
"465 882 OFFCURVE",
"553 842 CURVE SMOOTH",
"666.333 790.667 OFFCURVE",
"754.667 765 OFFCURVE",
"818 765 CURVE SMOOTH",
"846.667 765 OFFCURVE",
"877.167 770.5 OFFCURVE",
"909.5 781.5 CURVE SMOOTH",
"941.833 792.5 OFFCURVE",
"995.333 819 OFFCURVE",
"1070 861 CURVE",
"1070 1023 LINE"
);
},
{
closed = 1;
nodes = (
"986 599 OFFCURVE",
"929.667 567.5 OFFCURVE",
"901 556.5 CURVE SMOOTH",
"872.333 545.5 OFFCURVE",
"844 540 OFFCURVE",
"816 540 CURVE SMOOTH",
"792.667 540 OFFCURVE",
"766.5 544.5 OFFCURVE",
"737.5 553.5 CURVE SMOOTH",
"708.5 562.5 OFFCURVE",
"654.667 585.667 OFFCURVE",
"576 623 CURVE SMOOTH",
"462 677 OFFCURVE",
"372.667 704 OFFCURVE",
"308 704 CURVE SMOOTH",
"277.333 704 OFFCURVE",
"245.667 698.333 OFFCURVE",
"213 687 CURVE SMOOTH",
"180.333 675.667 OFFCURVE",
"127.333 649.333 OFFCURVE",
"54 608 CURVE",
"54 448 LINE",
"128.667 492 OFFCURVE",
"183.667 520.5 OFFCURVE",
"219 533.5 CURVE SMOOTH",
"254.333 546.5 OFFCURVE",
"286.667 553 OFFCURVE",
"316 553 CURVE SMOOTH",
"337.333 553 OFFCURVE",
"360.167 549.167 OFFCURVE",
"384.5 541.5 CURVE SMOOTH",
"408.833 533.833 OFFCURVE",
"465 510 OFFCURVE",
"553 470 CURVE SMOOTH",
"666.333 418.667 OFFCURVE",
"754.667 393 OFFCURVE",
"818 393 CURVE SMOOTH",
"846.667 393 OFFCURVE",
"877.167 398.5 OFFCURVE",
"909.5 409.5 CURVE SMOOTH",
"941.833 420.5 OFFCURVE",
"995.333 447 OFFCURVE",
"1070 489 CURVE",
"1070 651 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
8 6 8 30 2 24 148 25 
PUSHW[ ]\011/* 1 value pushed */
596 
PUSHB[ ]\011/* 3 values pushed */
28 148 45 
PUSHW[ ]\011/* 1 value pushed */
300 
PUSHB[ ]\011/* 4 values pushed */
40 36 148 37 
PUSHW[ ]\011/* 1 value pushed */
596 
PUSHB[ ]\011/* 4 values pushed */
33 148 64 40 
PUSHW[ ]\011/* 1 value pushed */
370 
PUSHB[ ]\011/* 5 values pushed */
4 14 0 148 1 
PUSHW[ ]\011/* 1 value pushed */
596 
PUSHB[ ]\011/* 3 values pushed */
4 148 21 
PUSHW[ ]\011/* 1 value pushed */
300 
PUSHB[ ]\011/* 4 values pushed */
16 12 148 13 
PUSHW[ ]\011/* 1 value pushed */
596 
NPUSHB[ ]\011/* 25 values pushed */
9 148 16 12 1 13 0 24 37 25 36 25 0 74 49 36 0 13 1 13 73 48 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
0 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1124;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = Delta;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"654 1387 LINE",
"26 0 LINE",
"1226 0 LINE"
);
},
{
closed = 1;
nodes = (
"151 82 LINE",
"591 1049 LINE",
"990 82 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
3 4 4 
PUSHW[ ]\011/* 1 value pushed */
303 
NPUSHB[ ]\011/* 25 values pushed */
2 0 20 2 4 5 2 0 4 5 4 3 5 179 1 2 20 1 1 2 0 3 1 5 4 
PUSHW[ ]\011/* 4 values pushed */
416 2 5 285 
PUSHB[ ]\011/* 8 values pushed */
1 10 4 5 2 2 5 3 
PUSHW[ ]\011/* 1 value pushed */
601 
PUSHB[ ]\011/* 4 values pushed */
0 74 7 5 
PUSHW[ ]\011/* 1 value pushed */
383 
PUSHB[ ]\011/* 6 values pushed */
1 73 6 115 238 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1253;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = guillemotleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"243 1088 LINE",
"21 542 LINE",
"243 0 LINE",
"391 0 LINE",
"168 542 LINE",
"391 1088 LINE"
);
},
{
closed = 1;
nodes = (
"701 1088 LINE",
"479 542 LINE",
"701 0 LINE",
"849 0 LINE",
"625 542 LINE",
"849 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 95 values pushed */
5 0 1 1 85 4 5 20 4 1 2 4 5 1 1 0 4 3 3 85 2 1 20 2 2 1 11 6 7 7 85 10 11 20 10 7 8 10 11 7 7 6 10 9 9 85 8 7 20 8 8 7 1 7 0 10 10 4 201 2 32 11 6 6 5 5 0 6 9 8 8 3 3 2 10 5 3 2 1 4 0 4 11 9 8 7 4 10 13 71 71 74 6 226 10 
PUSHW[ ]\011/* 1 value pushed */
325 
NPUSHB[ ]\011/* 9 values pushed */
0 226 128 4 73 12 115 238 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 870;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"626 0 LINE",
"849 545 LINE",
"626 1088 LINE",
"479 1088 LINE",
"702 545 LINE",
"479 0 LINE"
);
},
{
closed = 1;
nodes = (
"169 0 LINE",
"391 545 LINE",
"169 1088 LINE",
"21 1088 LINE",
"244 545 LINE",
"21 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 96 values pushed */
5 0 1 1 85 4 5 20 4 1 2 4 5 1 1 0 4 3 3 85 2 1 20 2 2 1 11 6 7 7 85 10 11 20 10 7 8 10 11 7 7 6 10 9 9 85 8 7 20 8 8 7 1 7 0 10 10 4 201 2 32 11 6 6 5 5 0 10 9 8 8 3 3 2 6 5 3 2 1 4 0 4 11 9 8 7 4 6 10 13 71 71 74 0 226 4 
PUSHW[ ]\011/* 1 value pushed */
325 
NPUSHB[ ]\011/* 9 values pushed */
10 226 128 6 73 12 115 238 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 870;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"956 220 OFFCURVE",
"901 165.333 OFFCURVE",
"901 96 CURVE SMOOTH",
"901 28 OFFCURVE",
"956 -28 OFFCURVE",
"1024 -28 CURVE SMOOTH",
"1092 -28 OFFCURVE",
"1147 28 OFFCURVE",
"1147 96 CURVE SMOOTH",
"1147 165.333 OFFCURVE",
"1092 220 OFFCURVE",
"1024 220 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 220 OFFCURVE",
"218 165.333 OFFCURVE",
"218 96 CURVE SMOOTH",
"218 28 OFFCURVE",
"273 -28 OFFCURVE",
"341 -28 CURVE SMOOTH",
"409 -28 OFFCURVE",
"464 28 OFFCURVE",
"464 96 CURVE SMOOTH",
"464 165.333 OFFCURVE",
"409 220 OFFCURVE",
"341 220 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1639 220 OFFCURVE",
"1584 165.333 OFFCURVE",
"1584 96 CURVE SMOOTH",
"1584 28 OFFCURVE",
"1639 -28 OFFCURVE",
"1707 -28 CURVE SMOOTH",
"1773.667 -28 OFFCURVE",
"1830 28 OFFCURVE",
"1830 96 CURVE SMOOTH",
"1830 165.333 OFFCURVE",
"1773.667 220 OFFCURVE",
"1707 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
24 124 30 30 0 124 6 6 12 124 18 11 37 71 71 74 27 164 33 
PUSHW[ ]\011/* 1 value pushed */
323 
PUSHB[ ]\011/* 3 values pushed */
3 164 9 
PUSHW[ ]\011/* 1 value pushed */
323 
PUSHB[ ]\011/* 6 values pushed */
15 164 21 73 36 163 
PUSHW[ ]\011/* 2 values pushed */
275 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 2048;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = nonbreakingspace;
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 573;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 371, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 308, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 440, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1780;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1522 1186 LINE",
"1452 1277.333 OFFCURVE",
"1369.333 1350.333 OFFCURVE",
"1274 1405 CURVE SMOOTH",
"1154 1473.667 OFFCURVE",
"1028 1508 OFFCURVE",
"896 1508 CURVE SMOOTH",
"620 1508 OFFCURVE",
"353.167 1360.667 OFFCURVE",
"216.5 1118 CURVE SMOOTH",
"148.167 996.667 OFFCURVE",
"114 866.667 OFFCURVE",
"114 728 CURVE SMOOTH",
"114 544.667 OFFCURVE",
"174.667 380.667 OFFCURVE",
"296 236 CURVE SMOOTH",
"448.667 54 OFFCURVE",
"648 -37 OFFCURVE",
"894 -37 CURVE SMOOTH",
"1068.667 -37 OFFCURVE",
"1215.333 9.667 OFFCURVE",
"1334 95 CURVE SMOOTH",
"1393.333 137.667 OFFCURVE",
"1456 201 OFFCURVE",
"1522 285 CURVE",
"1522 0 LINE",
"2360 0 LINE",
"2360 145 LINE",
"1671 145 LINE",
"1671 724 LINE",
"2360 724 LINE",
"2360 869 LINE",
"1671 869 LINE",
"1671 1326 LINE",
"2360 1326 LINE",
"2360 1471 LINE",
"1522 1471 LINE"
);
},
{
closed = 1;
nodes = (
"1108.333 1366 OFFCURVE",
"1326.333 1241.667 OFFCURVE",
"1437 1051 CURVE SMOOTH",
"1492.333 955.667 OFFCURVE",
"1520 851 OFFCURVE",
"1520 737 CURVE SMOOTH",
"1520 387.667 OFFCURVE",
"1243 106 OFFCURVE",
"903 106 CURVE SMOOTH",
"551 106 OFFCURVE",
"273 386.667 OFFCURVE",
"273 740 CURVE SMOOTH",
"273 1076 OFFCURVE",
"561.667 1366 OFFCURVE",
"891 1366 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
36 64 35 16 39 64 24 29 41 8 4 7 8 28 38 12 11 10 9 11 8 6 5 7 4 2 1 3 0 7 94 4 4 11 3 94 0 2 8 94 11 8 35 122 16 9 29 122 24 3 38 12 28 12 0 11 9 2 10 1 8 101 11 11 32 5 1 1 10 74 43 32 112 20 73 42 120 175 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
30 34 17 23 18 37 22 38 34 17 32 100 0 30 23 32 100 0 33 19 35 100 0 31 21 29 100 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 11 values pushed */
39 41 25 27 40 38 26 37 39 27 29 
PUSHW[ ]\011/* 1 value pushed */
336 
PUSHB[ ]\011/* 4 values pushed */
5 41 25 38 
PUSHW[ ]\011/* 1 value pushed */
336 
PUSHB[ ]\011/* 3 values pushed */
1 27 28 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 9 values pushed */
36 37 13 15 14 38 37 13 35 
PUSHW[ ]\011/* 1 value pushed */
336 
PUSHB[ ]\011/* 4 values pushed */
4 36 15 38 
PUSHW[ ]\011/* 1 value pushed */
336 
PUSHB[ ]\011/* 3 values pushed */
1 13 12 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 2445;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"2215 567 LINE SMOOTH",
"2215 868.333 OFFCURVE",
"1967.667 1116 OFFCURVE",
"1657 1116 CURVE SMOOTH",
"1539 1116 OFFCURVE",
"1434.667 1085.333 OFFCURVE",
"1344 1024 CURVE SMOOTH",
"1281.333 982 OFFCURVE",
"1222 916.667 OFFCURVE",
"1166 828 CURVE",
"1106 919.333 OFFCURVE",
"1043 986 OFFCURVE",
"977 1028 CURVE SMOOTH",
"886.333 1086.667 OFFCURVE",
"786.667 1116 OFFCURVE",
"678 1116 CURVE SMOOTH",
"544 1116 OFFCURVE",
"424 1073 OFFCURVE",
"318 987 CURVE SMOOTH",
"180.667 875.667 OFFCURVE",
"112 730 OFFCURVE",
"112 550 CURVE SMOOTH",
"112 227.333 OFFCURVE",
"363.667 -28 OFFCURVE",
"677 -28 CURVE SMOOTH",
"881 -28 OFFCURVE",
"1044.667 64.333 OFFCURVE",
"1166 247 CURVE",
"1274 95 OFFCURVE",
"1344.833 43.167 OFFCURVE",
"1465.5 2.5 CURVE SMOOTH",
"1525.833 -17.833 OFFCURVE",
"1588.667 -28 OFFCURVE",
"1654 -28 CURVE SMOOTH",
"1890 -28 OFFCURVE",
"2054.667 69.333 OFFCURVE",
"2180 300 CURVE",
"2061 361 LINE",
"1982.333 193 OFFCURVE",
"1836.333 101 OFFCURVE",
"1663 101 CURVE SMOOTH",
"1449.667 101 OFFCURVE",
"1256.667 233.667 OFFCURVE",
"1238 531 CURVE",
"2214 531 LINE"
);
},
{
closed = 1;
nodes = (
"910.667 981 OFFCURVE",
"1099 787.667 OFFCURVE",
"1099 537 CURVE SMOOTH",
"1099 374.333 OFFCURVE",
"1024.333 237.5 OFFCURVE",
"891 159.5 CURVE SMOOTH",
"824.333 120.5 OFFCURVE",
"754.333 101 OFFCURVE",
"681 101 CURVE SMOOTH",
"533 101 OFFCURVE",
"382.833 186 OFFCURVE",
"307.5 322 CURVE SMOOTH",
"269.833 390 OFFCURVE",
"251 463.333 OFFCURVE",
"251 542 CURVE SMOOTH",
"251 696.667 OFFCURVE",
"332.333 846.833 OFFCURVE",
"463 923.5 CURVE SMOOTH",
"528.333 961.833 OFFCURVE",
"598 981 OFFCURVE",
"672 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1251 651 LINE",
"1278.333 752.333 OFFCURVE",
"1322.333 828.667 OFFCURVE",
"1383 880 CURVE SMOOTH",
"1461.667 946.667 OFFCURVE",
"1553.333 980 OFFCURVE",
"1658 980 CURVE SMOOTH",
"1852.667 980 OFFCURVE",
"2006.333 861.667 OFFCURVE",
"2061 651 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 115 values pushed */
36 3 52 3 75 12 68 31 91 12 84 31 107 12 100 31 123 12 139 12 128 35 144 35 164 6 187 9 196 6 203 9 16 175 13 175 31 191 13 191 31 207 13 207 31 6 32 3 48 3 123 53 159 13 159 31 5 15 13 15 14 0 16 0 27 0 28 15 30 15 31 7 34 64 4 11 37 64 33 55 81 8 0 52 1 144 255 59 1 9 15 59 1 8 59 59 55 64 7 80 7 2 0 7 16 7 48 7 3 9 0 7 1 8 7 
PUSHW[ ]\011/* 1 value pushed */
553 
NPUSHB[ ]\011/* 43 values pushed */
4 88 11 11 45 88 18 11 55 88 33 33 37 88 25 7 16 1 16 5 16 29 16 49 16 59 5 59 7 8 15 29 1 105 49 49 52 41 8 178 52 105 0 
PUSHW[ ]\011/* 1 value pushed */
294 
NPUSHB[ ]\011/* 9 values pushed */
61 41 105 21 73 60 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 58 values pushed */
38 51 16 28 47 37 43 38 27 37 39 37 23 38 46 17 49 90 1 16 15 44 19 41 90 0 51 26 49 90 1 28 29 38 24 41 90 0 48 16 45 90 2 42 20 45 90 0 50 28 37 90 3 40 22 37 90 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 22 values pushed */
56 58 30 32 57 37 31 38 58 30 55 104 5 56 32 59 104 0 58 59 30 29 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
12 14 2 3 13 37 2 14 4 104 4 3 12 1 104 0 2 1 14 15 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 2329;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = endash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-12 508 LINE",
"1036 508 LINE",
"1036 637 LINE",
"-12 637 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
2 1 0 98 3 1 0 3 2 74 5 3 73 4 206 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1024;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-12 508 LINE",
"2060 508 LINE",
"2060 637 LINE",
"-12 637 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
2 1 0 98 3 1 0 3 2 74 5 3 73 4 206 134 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 2048;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"222.333 1373.333 OFFCURVE",
"204 1303 OFFCURVE",
"204 1131 CURVE SMOOTH",
"204 959 LINE",
"385 959 LINE",
"385 1234 LINE",
"296 1234 LINE",
"305.333 1324.667 OFFCURVE",
"316.333 1362.667 OFFCURVE",
"367 1464 CURVE",
"289 1508 LINE"
);
},
{
closed = 1;
nodes = (
"666 1373.333 OFFCURVE",
"649 1303 OFFCURVE",
"649 1131 CURVE SMOOTH",
"649 959 LINE",
"830 959 LINE",
"830 1234 LINE",
"741 1234 LINE",
"750.333 1324.667 OFFCURVE",
"761.333 1362.667 OFFCURVE",
"812 1464 CURVE",
"734 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
12 11 1 0 18 15 17 16 7 4 6 5 17 156 16 255 11 11 0 6 156 64 5 255 0 0 8 0 1 4 5 5 6 7 19 11 12 15 16 5 17 252 128 18 
PUSHW[ ]\011/* 1 value pushed */
570 
NPUSHB[ ]\011/* 10 values pushed */
64 6 252 128 7 73 22 163 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11110]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1028;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"789 1093.667 OFFCURVE",
"807 1164 OFFCURVE",
"807 1336 CURVE SMOOTH",
"807 1508 LINE",
"626 1508 LINE",
"626 1233 LINE",
"714 1233 LINE",
"706 1142.333 OFFCURVE",
"694.667 1104.333 OFFCURVE",
"644 1003 CURVE",
"721 959 LINE"
);
},
{
closed = 1;
nodes = (
"344 1093.667 OFFCURVE",
"362 1164 OFFCURVE",
"362 1336 CURVE SMOOTH",
"362 1508 LINE",
"181 1508 LINE",
"181 1233 LINE",
"269 1233 LINE",
"261 1142.333 OFFCURVE",
"249.667 1104.333 OFFCURVE",
"199 1003 CURVE",
"276 959 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
12 11 1 0 18 15 17 16 7 4 6 0 255 5 156 6 6 17 11 255 16 156 64 17 0 8 0 1 4 5 5 6 7 19 11 12 15 16 5 17 18 7 252 128 6 
PUSHW[ ]\011/* 1 value pushed */
570 
NPUSHB[ ]\011/* 10 values pushed */
64 18 252 128 17 73 22 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11110]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 991;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"304.333 1373.333 OFFCURVE",
"286 1303 OFFCURVE",
"286 1131 CURVE SMOOTH",
"286 959 LINE",
"467 959 LINE",
"467 1234 LINE",
"378 1234 LINE",
"387.333 1324.667 OFFCURVE",
"398.333 1362.667 OFFCURVE",
"449 1464 CURVE",
"371 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
1 0 7 4 6 156 64 5 255 0 0 8 0 1 4 5 5 6 252 128 7 73 11 142 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"415 1093.667 OFFCURVE",
"433 1164 OFFCURVE",
"433 1336 CURVE SMOOTH",
"433 1508 LINE",
"252 1508 LINE",
"252 1233 LINE",
"340 1233 LINE",
"332 1142.333 OFFCURVE",
"320.667 1104.333 OFFCURVE",
"270 1003 CURVE",
"347 959 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 0 7 4 6 0 255 5 156 64 6 0 8 0 1 4 5 5 7 252 128 6 73 11 149 236 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 719;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = divide;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"461 1005 LINE",
"662 1005 LINE",
"662 1207 LINE",
"461 1207 LINE"
);
},
{
closed = 1;
nodes = (
"56 667 LINE",
"1068 667 LINE",
"1068 804 LINE",
"56 804 LINE"
);
},
{
closed = 1;
nodes = (
"461 261 LINE",
"662 261 LINE",
"662 466 LINE",
"461 466 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
10 9 11 8 2 1 3 0 6 5 7 4 3 
PUSHW[ ]\011/* 3 values pushed */
583 0 424 
PUSHB[ ]\011/* 4 values pushed */
4 127 7 8 
PUSHW[ ]\011/* 3 values pushed */
583 11 424 
NPUSHB[ ]\011/* 15 values pushed */
7 8 3 0 1 2 9 6 10 11 13 71 71 74 6 
PUSHW[ ]\011/* 5 values pushed */
424 10 516 11 424 
PUSHB[ ]\011/* 6 values pushed */
7 73 12 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1124;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = lozenge;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"438 1422 LINE",
"47 709 LINE",
"438 0 LINE",
"549 0 LINE",
"967 709 LINE",
"549 1422 LINE"
);
},
{
closed = 1;
nodes = (
"854 709 LINE",
"495 94 LINE",
"155 709 LINE",
"495 1325 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
0 6 9 9 93 1 0 20 1 9 8 1 0 9 9 6 1 2 2 93 8 9 20 8 8 9 5 6 7 7 93 4 5 20 4 7 8 4 5 7 7 6 4 3 3 93 8 7 20 8 8 7 8 4 3 7 6 1 3 0 5 
PUSHW[ ]\011/* 1 value pushed */
267 
PUSHB[ ]\011/* 3 values pushed */
9 9 4 
PUSHW[ ]\011/* 1 value pushed */
267 
NPUSHB[ ]\011/* 35 values pushed */
32 3 2 10 7 5 3 3 6 4 9 2 0 3 1 8 8 6 6 10 29 1 1 1 74 15 11 1 11 4 73 10 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SHP[0]\011/* ShiftPointByLastPoint */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1012;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 181, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 228, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1212;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = fraction;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-237 -37 LINE",
"688 1508 LINE",
"576 1508 LINE",
"-347 -37 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
8 1 24 1 2 1 2 3 3 93 0 1 20 0 0 1 2 3 1 0 11 15 1 1 1 1 2 
PUSHW[ ]\011/* 1 value pushed */
383 
PUSHB[ ]\011/* 4 values pushed */
1 254 5 0 
PUSHW[ ]\011/* 1 value pushed */
383 
PUSHB[ ]\011/* 3 values pushed */
3 254 4 
PUSHW[ ]\011/* 3 values pushed */
603 319 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 340;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = Euro;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"84 965 LINE",
"47 827 LINE",
"170 827 LINE",
"167.333 792.333 OFFCURVE",
"166 764.333 OFFCURVE",
"166 743 CURVE SMOOTH",
"166 720.333 OFFCURVE",
"167.333 690.333 OFFCURVE",
"170 653 CURVE",
"82 653 LINE",
"47 516 LINE",
"195 516 LINE",
"292.333 170.667 OFFCURVE",
"583.333 -35 OFFCURVE",
"958 -35 CURVE SMOOTH",
"1015.333 -35 OFFCURVE",
"1065.333 -31 OFFCURVE",
"1108 -23 CURVE",
"1108 117 LINE",
"1058.667 105.667 OFFCURVE",
"1012.333 100 OFFCURVE",
"969 100 CURVE SMOOTH",
"685 100 OFFCURVE",
"446 256 OFFCURVE",
"354 516 CURVE",
"879 516 LINE",
"915 653 LINE",
"324 653 LINE",
"320.667 685 OFFCURVE",
"319 711 OFFCURVE",
"319 731 CURVE SMOOTH",
"319 764.333 OFFCURVE",
"321.333 796.333 OFFCURVE",
"326 827 CURVE",
"963 827 LINE",
"999 965 LINE",
"360 965 LINE",
"460 1214.333 OFFCURVE",
"695.667 1364 OFFCURVE",
"961 1364 CURVE SMOOTH",
"1002.333 1364 OFFCURVE",
"1042.333 1360 OFFCURVE",
"1081 1352 CURVE",
"1118 1493 LINE",
"1054.667 1502.333 OFFCURVE",
"1001.333 1507 OFFCURVE",
"958 1507 CURVE SMOOTH",
"599.333 1507 OFFCURVE",
"299.667 1299.667 OFFCURVE",
"197 965 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 168 values pushed */
247 30 1 120 30 1 2 103 30 1 1 101 23 1 2 23 23 135 23 151 23 3 1 165 9 181 9 197 9 3 2 103 9 1 1 103 2 1 2 32 21 194 35 168 18 1 9 18 25 18 2 8 18 14 0 11 194 39 40 14 200 14 248 14 3 0 14 14 24 8 5 126 6 8 126 3 5 27 126 26 24 126 29 13 87 21 119 21 135 21 151 21 167 21 183 21 199 21 7 1 23 21 1 23 11 39 11 87 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 11 21 18 11 14 4 16 87 32 119 32 135 32 151 32 167 32 183 32 199 32 7 2 32 35 0 39 4 37 27 19 12 12 16 5 27 43 16 111 37 40 33 37 
MDAP[1]\011/* MoveDirectAbsPt */
MDRP[11100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[11110]\011/* MoveDirectRelPt */
MDRP[00110]\011/* MoveDirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDRP[10110]\011/* MoveDirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MDRP[10110]\011/* MoveDirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[11110]\011/* MoveDirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDS[ ]\011/* SetDeltaShiftInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = guilsinglleft;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"297 1088 LINE",
"75 542 LINE",
"297 0 LINE",
"445 0 LINE",
"222 542 LINE",
"445 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
5 0 1 1 85 4 5 20 4 1 2 4 5 1 1 0 4 3 3 85 2 1 20 2 2 1 1 0 4 201 2 32 5 0 6 3 2 10 5 3 2 1 4 4 7 71 71 74 0 199 128 4 73 6 119 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTDG[ ]\011/* RoundToDoubleGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 514;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"218 0 LINE",
"440 545 LINE",
"218 1088 LINE",
"70 1088 LINE",
"293 545 LINE",
"70 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
5 0 1 1 85 4 5 20 4 1 2 4 5 1 1 0 4 3 3 85 2 1 20 2 2 1 1 4 201 32 5 0 10 3 2 6 5 3 2 1 4 0 7 71 71 74 4 199 128 0 73 6 119 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTDG[ ]\011/* RoundToDoubleGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 514;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fi;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"847.333 1424 OFFCURVE",
"727 1536 OFFCURVE",
"551 1536 CURVE SMOOTH",
"411 1536 OFFCURVE",
"308.833 1469.167 OFFCURVE",
"261.5 1368.5 CURVE SMOOTH",
"237.833 1318.167 OFFCURVE",
"226 1240.667 OFFCURVE",
"226 1136 CURVE SMOOTH",
"226 1088 LINE",
"84 1088 LINE",
"84 965 LINE",
"226 965 LINE",
"226 0 LINE",
"368 0 LINE",
"368 965 LINE",
"594 965 LINE",
"594 1088 LINE",
"368 1088 LINE",
"368 1136 LINE SMOOTH",
"368 1216 OFFCURVE",
"374 1271.167 OFFCURVE",
"386 1301.5 CURVE SMOOTH",
"398 1331.833 OFFCURVE",
"417.833 1356.167 OFFCURVE",
"445.5 1374.5 CURVE",
"410 1362.167 OFFCURVE",
"466.333 1402 OFFCURVE",
"549 1402 CURVE SMOOTH",
"641 1402 OFFCURVE",
"696.667 1356 OFFCURVE",
"716 1264 CURVE",
"858 1264 LINE"
);
},
{
closed = 1;
nodes = (
"716 0 LINE",
"858 0 LINE",
"858 1088 LINE",
"716 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
25 8 17 16 9 18 13 14 15 10 18 13 11 15 10 7 12 8 16 9 7 12 17 8 9 10 11 14 6 15 16 25 6 10 144 9 15 144 9 16 6 1 
PUSHW[ ]\011/* 1 value pushed */
561 
NPUSHB[ ]\011/* 43 values pushed */
3 88 15 22 1 22 1 27 13 10 10 15 9 16 25 1 0 26 4 27 28 14 17 18 11 8 7 6 12 13 63 9 79 9 2 15 9 31 9 47 9 3 9 
PUSHW[ ]\011/* 1 value pushed */
294 
NPUSHB[ ]\011/* 23 values pushed */
28 92 27 74 30 15 30 1 9 15 30 1 8 12 92 13 195 16 73 29 160 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
4 21 5 37 20 38 4 21 7 128 0 6 19 3 128 1 
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 997;
}
);
note = fi;
unicode = "F001,FB01";
},
{
glyphname = fl;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"379 1088 LINE",
"379 1196 OFFCURVE",
"383 1263.333 OFFCURVE",
"391 1290 CURVE SMOOTH",
"415 1363.333 OFFCURVE",
"475.333 1406 OFFCURVE",
"550 1406 CURVE SMOOTH",
"624.667 1406 OFFCURVE",
"685.833 1363.833 OFFCURVE",
"706.5 1300.5 CURVE",
"676.833 1357.667 OFFCURVE",
"696.167 1332.167 OFFCURVE",
"706.5 1300.5 CURVE SMOOTH",
"716.833 1268.833 OFFCURVE",
"722 1207 OFFCURVE",
"722 1115 CURVE SMOOTH",
"722 0 LINE",
"865 0 LINE",
"865 1107 LINE SMOOTH",
"865 1353.667 OFFCURVE",
"828.167 1421.667 OFFCURVE",
"727.5 1487 CURVE SMOOTH",
"677.167 1519.667 OFFCURVE",
"618.667 1536 OFFCURVE",
"552 1536 CURVE SMOOTH",
"420 1536 OFFCURVE",
"313.167 1465.667 OFFCURVE",
"268.5 1367 CURVE SMOOTH",
"246.167 1317.667 OFFCURVE",
"235 1236.667 OFFCURVE",
"235 1124 CURVE SMOOTH",
"235 1088 LINE",
"92 1088 LINE",
"92 964 LINE",
"235 964 LINE",
"235 0 LINE",
"379 0 LINE",
"379 964 LINE",
"603 964 LINE",
"603 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
47 8 29 7 0 29 3 8 7 0 9 4 5 6 1 9 4 2 6 1 29 3 8 29 0 1 2 5 6 6 7 19 3 18 4 6 144 7 6 24 88 15 13 1 13 1 18 4 10 17 20 18 19 5 8 9 29 2 5 3 4 0 7 6 63 1 79 1 2 15 1 31 1 47 1 3 1 
PUSHW[ ]\011/* 1 value pushed */
294 
NPUSHB[ ]\011/* 23 values pushed */
19 92 18 74 31 15 31 1 9 15 31 1 8 3 92 4 195 6 73 30 160 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 34 values pushed */
10 28 15 37 22 38 27 28 26 28 2 6 11 38 23 14 20 128 1 25 12 29 128 0 21 16 24 128 1 28 10 24 128 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 993;
}
);
note = fl;
unicode = "F002,FB02";
},
{
glyphname = daggerdbl;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"516 1154 LINE",
"159 1177 LINE",
"159 1029 LINE",
"516 1056 LINE",
"492 597 LINE",
"516 145 LINE",
"159 165 LINE",
"159 17 LINE",
"516 45 LINE",
"492 -314 LINE",
"639 -314 LINE",
"616 45 LINE",
"974 17 LINE",
"974 165 LINE",
"616 145 LINE",
"639 597 LINE",
"616 1056 LINE",
"974 1029 LINE",
"974 1177 LINE",
"616 1154 LINE",
"639 1508 LINE",
"492 1508 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
11 1 12 0 8 15 7 16 168 15 218 9 14 10 13 168 14 
PUSHW[ ]\011/* 1 value pushed */
597 
NPUSHB[ ]\011/* 14 values pushed */
12 4 19 5 18 168 19 218 3 20 2 21 168 20 
PUSHW[ ]\011/* 1 value pushed */
597 
NPUSHB[ ]\011/* 23 values pushed */
0 0 5 7 2 10 18 16 21 13 20 3 4 14 15 8 6 19 23 71 71 74 9 
PUSHW[ ]\011/* 1 value pushed */
317 
PUSHB[ ]\011/* 7 values pushed */
1 11 2 10 135 6 11 
PUSHW[ ]\011/* 1 value pushed */
389 
PUSHB[ ]\011/* 7 values pushed */
17 0 12 21 13 135 12 
PUSHW[ ]\011/* 1 value pushed */
317 
PUSHB[ ]\011/* 6 values pushed */
19 73 22 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1133;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = periodcentered;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"216 859 OFFCURVE",
"161 804.333 OFFCURVE",
"161 735 CURVE SMOOTH",
"161 667 OFFCURVE",
"216 611 OFFCURVE",
"284 611 CURVE SMOOTH",
"352 611 OFFCURVE",
"407 667 OFFCURVE",
"407 735 CURVE SMOOTH",
"407 804.333 OFFCURVE",
"352 859 OFFCURVE",
"284 859 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
6 124 0 13 71 71 74 3 116 9 73 12 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 567;
}
);
note = periodcentered;
unicode = 2219;
},
{
glyphname = quotesinglbase;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"418 -139.333 OFFCURVE",
"436 -69 OFFCURVE",
"436 103 CURVE SMOOTH",
"436 275 LINE",
"255 275 LINE",
"255 0 LINE",
"343 0 LINE",
"335 -90.667 OFFCURVE",
"323.667 -129.667 OFFCURVE",
"273 -231 CURVE",
"350 -274 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
1 0 7 4 6 0 255 6 156 64 5 10 8 0 1 4 5 5 7 252 128 6 73 11 149 236 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 725;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"806 -139.333 OFFCURVE",
"824 -69 OFFCURVE",
"824 103 CURVE SMOOTH",
"824 275 LINE",
"643 275 LINE",
"643 0 LINE",
"731 0 LINE",
"723 -90.667 OFFCURVE",
"711.667 -128.667 OFFCURVE",
"661 -230 CURVE",
"738 -274 LINE"
);
},
{
closed = 1;
nodes = (
"361 -139.333 OFFCURVE",
"379 -69 OFFCURVE",
"379 103 CURVE SMOOTH",
"379 275 LINE",
"198 275 LINE",
"198 0 LINE",
"286 0 LINE",
"278 -90.667 OFFCURVE",
"266.667 -128.667 OFFCURVE",
"216 -230 CURVE",
"293 -274 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
12 11 1 0 18 15 17 16 7 4 6 0 255 6 156 5 5 11 255 17 156 64 16 10 8 0 1 4 5 5 6 7 19 11 12 15 16 5 17 18 7 252 128 6 
PUSHW[ ]\011/* 1 value pushed */
570 
NPUSHB[ ]\011/* 10 values pushed */
64 18 252 128 17 73 22 103 150 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11110]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1028;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1266 1536 LINE",
"1054 1476 OFFCURVE",
"945.333 1462 OFFCURVE",
"796 1462 CURVE SMOOTH",
"694.667 1462 OFFCURVE",
"600.667 1471.333 OFFCURVE",
"514 1490 CURVE SMOOTH",
"457.333 1502 OFFCURVE",
"416.667 1508 OFFCURVE",
"392 1508 CURVE SMOOTH",
"276 1508 OFFCURVE",
"154 1438.167 OFFCURVE",
"94 1333.5 CURVE SMOOTH",
"64 1281.167 OFFCURVE",
"49 1223 OFFCURVE",
"49 1159 CURVE SMOOTH",
"49 967 OFFCURVE",
"198.667 814 OFFCURVE",
"392 814 CURVE SMOOTH",
"602.667 814 OFFCURVE",
"741 984.333 OFFCURVE",
"741 1167 CURVE SMOOTH",
"741 1231 OFFCURVE",
"720.333 1291.667 OFFCURVE",
"679 1349 CURVE",
"733 1348 LINE SMOOTH",
"899 1348 OFFCURVE",
"1039.667 1362 OFFCURVE",
"1155 1390 CURVE",
"180 -102 LINE",
"312 -102 LINE",
"1384 1536 LINE"
);
},
{
closed = 1;
nodes = (
"516.333 1381 OFFCURVE",
"615 1282.333 OFFCURVE",
"615 1161 CURVE SMOOTH",
"615 1039.667 OFFCURVE",
"516.333 942 OFFCURVE",
"395 942 CURVE SMOOTH",
"273.667 942 OFFCURVE",
"176 1039.667 OFFCURVE",
"176 1161 CURVE SMOOTH",
"176 1282.333 OFFCURVE",
"273.667 1381 OFFCURVE",
"395 1381 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1007.333 649 OFFCURVE",
"852 493.667 OFFCURVE",
"852 303 CURVE SMOOTH",
"852 112.333 OFFCURVE",
"1007.333 -43 OFFCURVE",
"1198 -43 CURVE SMOOTH",
"1388.667 -43 OFFCURVE",
"1544 112.333 OFFCURVE",
"1544 303 CURVE SMOOTH",
"1544 493.667 OFFCURVE",
"1388.667 649 OFFCURVE",
"1198 649 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1319.333 522 OFFCURVE",
"1418 424.333 OFFCURVE",
"1418 303 CURVE SMOOTH",
"1418 181.667 OFFCURVE",
"1319.333 84 OFFCURVE",
"1198 84 CURVE SMOOTH",
"1076.667 84 OFFCURVE",
"979 181.667 OFFCURVE",
"979 303 CURVE SMOOTH",
"979 424.333 OFFCURVE",
"1076.667 522 OFFCURVE",
"1198 522 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1804 649 OFFCURVE",
"1650 493.667 OFFCURVE",
"1650 303 CURVE SMOOTH",
"1650 112.333 OFFCURVE",
"1804 -43 OFFCURVE",
"1996 -43 CURVE SMOOTH",
"2186.667 -43 OFFCURVE",
"2341 112.333 OFFCURVE",
"2341 303 CURVE SMOOTH",
"2341 493.667 OFFCURVE",
"2186.667 649 OFFCURVE",
"1996 649 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2117.333 522 OFFCURVE",
"2215 424.333 OFFCURVE",
"2215 303 CURVE SMOOTH",
"2215 181.667 OFFCURVE",
"2117.333 84 OFFCURVE",
"1996 84 CURVE SMOOTH",
"1874.667 84 OFFCURVE",
"1776 181.667 OFFCURVE",
"1776 303 CURVE SMOOTH",
"1776 424.333 OFFCURVE",
"1874.667 522 OFFCURVE",
"1996 522 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
24 2 1 149 8 3 2 3 4 2 93 1 0 20 1 1 0 3 5 0 2 25 1 62 97 74 
PUSHW[ ]\011/* 1 value pushed */
515 
NPUSHB[ ]\011/* 10 values pushed */
80 97 68 68 1 159 44 38 97 50 
PUSHW[ ]\011/* 1 value pushed */
515 
NPUSHB[ ]\011/* 14 values pushed */
56 97 44 13 5 106 22 159 25 168 18 11 97 32 
PUSHW[ ]\011/* 1 value pushed */
515 
NPUSHB[ ]\011/* 9 values pushed */
26 97 18 5 0 0 59 53 2 
PUSHW[ ]\011/* 1 value pushed */
383 
NPUSHB[ ]\011/* 9 values pushed */
1 1 35 29 87 155 83 121 65 
PUSHW[ ]\011/* 1 value pushed */
340 
PUSHB[ ]\011/* 3 values pushed */
77 121 71 
PUSHW[ ]\011/* 1 value pushed */
292 
PUSHB[ ]\011/* 3 values pushed */
59 121 41 
PUSHW[ ]\011/* 1 value pushed */
340 
PUSHB[ ]\011/* 3 values pushed */
53 121 47 
PUSHW[ ]\011/* 1 value pushed */
292 
PUSHB[ ]\011/* 3 values pushed */
35 121 8 
PUSHW[ ]\011/* 1 value pushed */
340 
PUSHB[ ]\011/* 6 values pushed */
29 121 14 73 86 89 
PUSHW[ ]\011/* 2 values pushed */
598 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 118 values pushed */
39 85 27 34 9 17 16 38 33 10 35 87 1 31 12 29 87 0 27 17 29 87 0 57 43 59 87 1 55 45 53 87 0 61 39 59 87 1 51 49 53 87 0 81 67 83 87 1 79 69 77 87 0 85 63 83 87 1 75 73 77 87 0 34 9 32 87 0 30 13 32 87 0 28 15 26 87 1 58 42 56 87 0 54 46 56 87 0 60 40 50 87 1 52 48 50 87 1 82 66 80 87 0 78 70 80 87 0 84 64 74 87 1 76 72 74 87 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 2404;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 243, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 95, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 373, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1515;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 232, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 223, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, -153, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 463;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -283, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 463;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -146, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 463;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -155, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 463;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 506, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1780;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 376, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1780;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 503, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1780;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 287, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 157, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 284, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = dotlessi;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"135 0 LINE",
"276 0 LINE",
"276 1088 LINE",
"135 1088 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
3 10 0 6 1 0 3 5 71 71 74 2 92 3 73 4 139 118 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 410;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = circumflex;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"151 1285 LINE",
"337 1285 LINE",
"521 1437 LINE",
"697 1285 LINE",
"877 1285 LINE",
"587 1542 LINE",
"448 1542 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
55 5 1 3 4 4 85 1 2 20 1 1 2 5 4 4 85 0 6 20 0 0 6 1 4 0 3 5 2 6 0 214 64 4 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 14 values pushed */
13 2 6 0 4 1 3 3 5 8 71 71 74 3 
PUSHW[ ]\011/* 1 value pushed */
576 
PUSHB[ ]\011/* 8 values pushed */
160 2 176 2 192 2 3 2 
PUSHW[ ]\011/* 3 values pushed */
266 5 576 
PUSHB[ ]\011/* 6 values pushed */
6 73 7 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1028;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"682 1456.667 OFFCURVE",
"631.667 1439 OFFCURVE",
"595 1439 CURVE SMOOTH",
"562.333 1439 OFFCURVE",
"517.667 1452 OFFCURVE",
"461 1478 CURVE SMOOTH",
"401.667 1504.667 OFFCURVE",
"350.667 1518 OFFCURVE",
"308 1518 CURVE SMOOTH",
"218.667 1518 OFFCURVE",
"143.667 1485.667 OFFCURVE",
"83 1421 CURVE",
"149 1319 LINE",
"229 1377.667 OFFCURVE",
"260.333 1388 OFFCURVE",
"307 1388 CURVE SMOOTH",
"325.667 1388 OFFCURVE",
"343 1385.667 OFFCURVE",
"359 1381 CURVE SMOOTH",
"371 1377.667 OFFCURVE",
"398.667 1365.333 OFFCURVE",
"442 1344 CURVE SMOOTH",
"492.667 1319.333 OFFCURVE",
"542 1307 OFFCURVE",
"590 1307 CURVE SMOOTH",
"663.333 1307 OFFCURVE",
"720 1325.667 OFFCURVE",
"816 1395 CURVE",
"746 1492 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
20 0 27 13 32 15 59 2 52 15 5 1 14 13 0 168 16 97 31 10 47 10 63 10 3 10 
PUSHW[ ]\011/* 1 value pushed */
596 
NPUSHB[ ]\011/* 17 values pushed */
20 97 13 186 4 0 13 14 1 74 23 14 73 22 119 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 899;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"152 1360 LINE",
"842 1360 LINE",
"842 1479 LINE",
"152 1479 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
1 2 0 98 239 3 1 3 2 3 0 1 74 5 0 73 4 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 993;
}
);
note = macron;
unicode = 02C9;
},
{
glyphname = breve;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143.333 1402.333 OFFCURVE",
"272 1314 OFFCURVE",
"468 1314 CURVE SMOOTH",
"665.333 1314 OFFCURVE",
"789.667 1405 OFFCURVE",
"819 1525 CURVE",
"691 1525 LINE",
"632.333 1447.667 OFFCURVE",
"575.667 1421 OFFCURVE",
"469 1421 CURVE SMOOTH",
"363.667 1421 OFFCURVE",
"287.333 1455.667 OFFCURVE",
"242 1525 CURVE",
"110 1525 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
7 1 8 8 0 
PUSHW[ ]\011/* 1 value pushed */
293 
NPUSHB[ ]\011/* 19 values pushed */
4 106 11 7 121 8 74 15 1 121 0 0 1 0 73 14 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 928;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 1518 OFFCURVE",
"112 1466 OFFCURVE",
"112 1402 CURVE SMOOTH",
"112 1338 OFFCURVE",
"164 1286 OFFCURVE",
"228 1286 CURVE SMOOTH",
"292 1286 OFFCURVE",
"344 1338 OFFCURVE",
"344 1402 CURVE SMOOTH",
"344 1466 OFFCURVE",
"292 1518 OFFCURVE",
"228 1518 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
0 124 6 3 116 9 73 12 95 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 455;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"222.667 1691 OFFCURVE",
"127 1595.667 OFFCURVE",
"127 1477 CURVE SMOOTH",
"127 1359.667 OFFCURVE",
"222.667 1264 OFFCURVE",
"340 1264 CURVE SMOOTH",
"458.667 1264 OFFCURVE",
"553 1359.667 OFFCURVE",
"553 1477 CURVE SMOOTH",
"553 1595.667 OFFCURVE",
"457.333 1691 OFFCURVE",
"340 1691 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"399 1590 OFFCURVE",
"448 1540 OFFCURVE",
"448 1480 CURVE SMOOTH",
"448 1420 OFFCURVE",
"399 1370 OFFCURVE",
"339 1370 CURVE SMOOTH",
"277.667 1370 OFFCURVE",
"229 1420 OFFCURVE",
"229 1480 CURVE SMOOTH",
"229 1540 OFFCURVE",
"277.667 1590 OFFCURVE",
"339 1590 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
4 -64 
PUSHB[ ]\011/* 4 values pushed */
9 16 57 2 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 14 values pushed */
9 16 57 8 64 9 16 57 10 64 9 16 57 18 
PUSHW[ ]\011/* 4 values pushed */
628 6 12 628 
NPUSHB[ ]\011/* 14 values pushed */
0 0 6 16 6 32 6 48 6 4 6 6 0 21 
PUSHW[ ]\011/* 4 values pushed */
627 3 15 627 
NPUSHB[ ]\011/* 24 values pushed */
9 15 3 31 3 47 3 63 3 4 3 3 0 9 16 9 2 9 9 25 24 95 113 24 
CALL[ ]\011/* CallFunction */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 680;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = cedilla;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"284 -202 LINE",
"314.667 -196 OFFCURVE",
"338 -193 OFFCURVE",
"354 -193 CURVE SMOOTH",
"392.667 -193 OFFCURVE",
"416 -213.333 OFFCURVE",
"416 -236 CURVE SMOOTH",
"416 -254.667 OFFCURVE",
"406 -270.167 OFFCURVE",
"386 -282.5 CURVE SMOOTH",
"366 -294.833 OFFCURVE",
"331 -301 OFFCURVE",
"281 -301 CURVE SMOOTH",
"243.667 -301 OFFCURVE",
"203.667 -294.333 OFFCURVE",
"161 -281 CURVE",
"139 -350 LINE",
"191 -370 OFFCURVE",
"246.667 -380 OFFCURVE",
"306 -380 CURVE SMOOTH",
"451.333 -380 OFFCURVE",
"535 -310 OFFCURVE",
"535 -222 CURVE SMOOTH",
"535 -160.667 OFFCURVE",
"485.333 -115 OFFCURVE",
"420 -115 CURVE SMOOTH",
"410 -115 OFFCURVE",
"397.333 -116 OFFCURVE",
"382 -118 CURVE",
"399 0 LINE",
"311 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
5 -48 
NPUSHB[ ]\011/* 23 values pushed */
12 15 57 9 64 9 18 57 13 15 12 23 21 2 4 10 170 31 15 47 15 2 15 
PUSHW[ ]\011/* 1 value pushed */
382 
PUSHB[ ]\011/* 3 values pushed */
21 170 4 
PUSHW[ ]\011/* 1 value pushed */
293 
PUSHB[ ]\011/* 8 values pushed */
0 64 9 15 57 0 10 7 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 14 values pushed */
9 11 57 25 71 71 74 7 121 18 187 1 146 0 
PUSHW[ ]\011/* 1 value pushed */
301 
NPUSHB[ ]\011/* 16 values pushed */
0 12 48 12 2 9 0 12 1 8 12 73 24 110 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
CALL[ ]\011/* CallFunction */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 664;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = hungarumlaut;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"257 1290 LINE",
"395 1290 LINE",
"690 1598 LINE",
"475 1598 LINE"
);
},
{
closed = 1;
nodes = (
"573 1290 LINE",
"711 1290 LINE",
"1006 1598 LINE",
"791 1598 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
4 1 5 0 7 2 6 5 0 223 128 6 3 4 6 5 7 0 2 1 3 5 227 64 223 7 239 7 2 7 
PUSHW[ ]\011/* 1 value pushed */
256 
NPUSHB[ ]\011/* 9 values pushed */
12 1 227 3 73 8 149 113 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
GT[ ]\011/* GreaterThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 1 value pushed */
192 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[11100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1130;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"229.667 -55.333 OFFCURVE",
"190 -126.333 OFFCURVE",
"190 -213 CURVE SMOOTH",
"190 -311.667 OFFCURVE",
"270 -393 OFFCURVE",
"418 -393 CURVE SMOOTH",
"446.667 -393 OFFCURVE",
"475 -389.667 OFFCURVE",
"503 -383 CURVE",
"512 -298 LINE",
"485.333 -301.333 OFFCURVE",
"462.333 -303 OFFCURVE",
"443 -303 CURVE SMOOTH",
"348.333 -303 OFFCURVE",
"297 -254.333 OFFCURVE",
"297 -193 CURVE SMOOTH",
"297 -133 OFFCURVE",
"337.333 -68.667 OFFCURVE",
"418 0 CURVE",
"309 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
13 64 11 17 57 11 170 47 6 1 6 
PUSHW[ ]\011/* 1 value pushed */
412 
NPUSHB[ ]\011/* 24 values pushed */
0 10 1 3 0 14 8 254 3 130 47 14 1 9 0 14 1 8 14 73 16 103 152 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 618;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"877 1542 LINE",
"691 1542 LINE",
"508 1390 LINE",
"331 1542 LINE",
"151 1542 LINE",
"441 1285 LINE",
"580 1285 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
5 4 4 85 0 6 20 0 0 6 3 4 4 85 1 2 20 1 1 2 1 4 0 3 5 2 2 6 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 15 values pushed */
13 4 214 0 0 4 1 3 3 5 8 71 71 74 5 
PUSHW[ ]\011/* 1 value pushed */
576 
PUSHB[ ]\011/* 8 values pushed */
160 6 176 6 192 6 3 6 
PUSHW[ ]\011/* 3 values pushed */
266 3 576 
PUSHB[ ]\011/* 6 values pushed */
2 73 7 110 151 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[11100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1028;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, -4, 298}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1020;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, -117, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 795;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = brokenbar;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"759 741 LINE",
"759 1508 LINE",
"616 1508 LINE",
"616 686 LINE"
);
},
{
closed = 1;
nodes = (
"759 -398 LINE",
"759 613 LINE",
"616 559 LINE",
"616 -398 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
6 3 2 0 5 4 0 159 3 
PUSHW[ ]\011/* 1 value pushed */
298 
NPUSHB[ ]\011/* 25 values pushed */
18 5 159 6 6 1 4 14 1 0 6 3 7 2 0 5 1 2 7 127 1 4 73 8 231 
PUSHW[ ]\011/* 2 values pushed */
274 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MPPEM[ ]\011/* MeasurePixelPerEm */
LTEQ[ ]\011/* LessThenOrEqual */
IF[ ]\011/* If */
PUSHB[ ]\011/* 1 value pushed */
128 
SMD[ ]\011/* SetMinimumDistance */
EIF[ ]\011/* EndIf */
MIRP[11110]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1376;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = Eth;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"213 0 LINE",
"742 0 LINE SMOOTH",
"1107.333 0 OFFCURVE",
"1289.167 104 OFFCURVE",
"1416.5 328 CURVE SMOOTH",
"1480.167 440 OFFCURVE",
"1512 569.667 OFFCURVE",
"1512 717 CURVE SMOOTH",
"1512 1058.333 OFFCURVE",
"1342 1318 OFFCURVE",
"1058 1418 CURVE SMOOTH",
"958 1453.333 OFFCURVE",
"798.333 1471 OFFCURVE",
"579 1471 CURVE SMOOTH",
"213 1471 LINE",
"213 804 LINE",
"34 804 LINE",
"34 667 LINE",
"213 667 LINE"
);
},
{
closed = 1;
nodes = (
"741 667 LINE",
"741 804 LINE",
"354 804 LINE",
"354 1328 LINE",
"518 1328 LINE SMOOTH",
"729.333 1328 OFFCURVE",
"881 1314 OFFCURVE",
"973 1286 CURVE SMOOTH",
"1218.333 1211.333 OFFCURVE",
"1364 999 OFFCURVE",
"1364 715 CURVE SMOOTH",
"1364 444.333 OFFCURVE",
"1228.333 249 OFFCURVE",
"1007 177 CURVE SMOOTH",
"928.333 151.667 OFFCURVE",
"787.333 139 OFFCURVE",
"584 139 CURVE SMOOTH",
"354 139 LINE",
"354 667 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
55 8 30 29 17 2 31 16 29 17 1 32 3 4 15 2 31 0 4 15 1 32 31 32 2 1 18 14 17 15 28 5 29 4 2 94 1 1 4 17 94 15 8 29 94 4 2 29 4 17 15 31 2 1 32 32 17 23 112 10 74 34 17 101 1 
PUSHW[ ]\011/* 1 value pushed */
396 
PUSHB[ ]\011/* 3 values pushed */
15 73 33 
PUSHW[ ]\011/* 1 value pushed */
533 
PUSHB[ ]\011/* 2 values pushed */
131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
6 27 12 38 21 22 20 22 2 6 8 9 7 9 2 6 25 24 26 24 2 6 19 13 23 100 1 27 6 23 100 1 22 11 18 100 0 24 9 28 100 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1618;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = eth;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"476.667 1472.667 OFFCURVE",
"532 1428.333 OFFCURVE",
"596 1375 CURVE",
"421 1302 LINE",
"473 1196 LINE",
"691 1286 LINE",
"770.333 1214 OFFCURVE",
"841.333 1135.667 OFFCURVE",
"904 1051 CURVE",
"814 1094.333 OFFCURVE",
"730.333 1116 OFFCURVE",
"653 1116 CURVE SMOOTH",
"355.667 1116 OFFCURVE",
"105 864.333 OFFCURVE",
"105 547 CURVE SMOOTH",
"105 225.667 OFFCURVE",
"356.667 -28 OFFCURVE",
"666 -28 CURVE SMOOTH",
"879.333 -28 OFFCURVE",
"1065.167 79 OFFCURVE",
"1164.5 263 CURVE SMOOTH",
"1214.167 355 OFFCURVE",
"1239 456.333 OFFCURVE",
"1239 567 CURVE SMOOTH",
"1239 797.667 OFFCURVE",
"1117.333 1065.333 OFFCURVE",
"828 1344 CURVE",
"945 1391 LINE",
"893 1498 LINE",
"729 1430 LINE",
"695.667 1457.333 OFFCURVE",
"661.667 1483.333 OFFCURVE",
"627 1508 CURVE",
"430 1508 LINE"
);
},
{
closed = 1;
nodes = (
"833.333 982 OFFCURVE",
"970.167 906.333 OFFCURVE",
"1041.5 773 CURVE SMOOTH",
"1077.167 706.333 OFFCURVE",
"1095 631.333 OFFCURVE",
"1095 548 CURVE SMOOTH",
"1095 381.333 OFFCURVE",
"1017.167 240.167 OFFCURVE",
"884.5 163.5 CURVE SMOOTH",
"818.167 125.167 OFFCURVE",
"747 106 OFFCURVE",
"671 106 CURVE SMOOTH",
"436.333 106 OFFCURVE",
"246 298 OFFCURVE",
"246 550 CURVE SMOOTH",
"246 692 OFFCURVE",
"297 803.333 OFFCURVE",
"399 884 CURVE SMOOTH",
"482.333 949.333 OFFCURVE",
"576 982 OFFCURVE",
"680 982 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
56 8 6 6 7 23 24 24 5 3 26 25 4 4 25 25 91 24 5 20 24 24 5 4 5 25 24 4 19 0 35 88 13 11 28 88 19 7 0 0 21 41 39 7 9 24 4 26 3 23 6 6 25 5 
PUSHW[ ]\011/* 3 values pushed */
563 1 582 
NPUSHB[ ]\011/* 18 values pushed */
25 125 0 0 16 39 105 9 74 44 32 105 16 73 43 96 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 40 values pushed */
29 38 10 18 11 38 37 37 30 37 36 12 39 90 1 34 14 32 90 0 29 18 32 90 0 38 10 35 90 0 33 15 35 90 0 31 17 28 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1341;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 222, 297}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1212;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 165, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1098;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = Thorn;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"325 0 LINE",
"325 340 LINE",
"430 340 LINE SMOOTH",
"612.667 340 OFFCURVE",
"737.333 348 OFFCURVE",
"804 364 CURVE SMOOTH",
"986.667 409.333 OFFCURVE",
"1097 540.333 OFFCURVE",
"1097 735 CURVE SMOOTH",
"1097 929.667 OFFCURVE",
"978 1063.667 OFFCURVE",
"810 1105 CURVE SMOOTH",
"751.333 1119.667 OFFCURVE",
"638.333 1127 OFFCURVE",
"471 1127 CURVE SMOOTH",
"325 1127 LINE",
"325 1471 LINE",
"178 1471 LINE"
);
},
{
closed = 1;
nodes = (
"585 984 LINE SMOOTH",
"783.667 984 OFFCURVE",
"851.667 952.333 OFFCURVE",
"905 871 CURVE SMOOTH",
"931.667 830.333 OFFCURVE",
"945 785 OFFCURVE",
"945 735 CURVE SMOOTH",
"945 633.667 OFFCURVE",
"888.333 546.333 OFFCURVE",
"795 509 CURVE SMOOTH",
"748.333 490.333 OFFCURVE",
"674.667 481 OFFCURVE",
"574 481 CURVE SMOOTH",
"325 484 LINE",
"325 984 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
52 8 2 17 18 14 15 19 13 18 14 27 3 17 2 18 94 14 
PUSHW[ ]\011/* 1 value pushed */
257 
PUSHB[ ]\011/* 8 values pushed */
16 8 17 94 31 2 1 2 
PUSHW[ ]\011/* 1 value pushed */
257 
NPUSHB[ ]\011/* 12 values pushed */
0 2 0 1 2 17 18 14 6 15 16 23 
PUSHW[ ]\011/* 1 value pushed */
296 
NPUSHB[ ]\011/* 11 values pushed */
8 74 29 15 101 16 73 28 102 131 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
4 26 10 9 11 9 2 6 21 37 6 7 5 7 2 6 25 38 20 12 23 117 1 26 4 23 117 1 22 9 19 117 0 24 7 27 117 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1212;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = thorn;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"158 -398 LINE",
"297 -398 LINE",
"297 187 LINE",
"414.333 44.333 OFFCURVE",
"559.667 -28 OFFCURVE",
"733 -28 CURVE SMOOTH",
"1041 -28 OFFCURVE",
"1291 227 OFFCURVE",
"1291 547 CURVE SMOOTH",
"1291 860.333 OFFCURVE",
"1038.333 1116 OFFCURVE",
"729 1116 CURVE SMOOTH",
"551.667 1116 OFFCURVE",
"407.667 1040 OFFCURVE",
"297 888 CURVE",
"297 1508 LINE",
"158 1508 LINE"
);
},
{
closed = 1;
nodes = (
"874 981 OFFCURVE",
"1013.5 900.667 OFFCURVE",
"1091.5 762 CURVE SMOOTH",
"1130.5 692.667 OFFCURVE",
"1150 619.333 OFFCURVE",
"1150 542 CURVE SMOOTH",
"1150 388.667 OFFCURVE",
"1065.167 236.5 OFFCURVE",
"932.5 158.5 CURVE SMOOTH",
"866.167 119.5 OFFCURVE",
"795.333 100 OFFCURVE",
"720 100 CURVE SMOOTH",
"566.667 100 OFFCURVE",
"416.5 183 OFFCURVE",
"342.5 315 CURVE SMOOTH",
"305.5 381 OFFCURVE",
"287 455.333 OFFCURVE",
"287 538 CURVE SMOOTH",
"287 790 OFFCURVE",
"475.333 981 OFFCURVE",
"718 981 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
30 64 24 11 27 64 5 17 41 8 2 20 14 15 17 88 5 7 0 0 24 88 11 11 16 14 0 1 2 20 14 5 15 16 28 105 8 74 33 15 92 16 73 32 123 133 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
25 31 6 10 26 37 30 38 25 10 28 90 1 31 6 28 90 1 27 9 24 90 0 29 7 17 90 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
18 19 3 4 19 3 17 104 5 18 4 20 104 0 3 2 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MD[0]\011/* MeasureDistance */
EQ[ ]\011/* Equal */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
21 23 12 13 22 38 21 13 24 104 4 23 12 20 104 0 13 14 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1397;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = multiply;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1044 1067 LINE",
"952 1159 LINE",
"621 827 LINE",
"289 1159 LINE",
"197 1067 LINE",
"528 735 LINE",
"197 404 LINE",
"289 312 LINE",
"621 643 LINE",
"952 312 LINE",
"1044 404 LINE",
"712 735 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 83 values pushed */
216 11 1 216 4 216 8 216 9 3 216 0 216 1 216 3 3 200 5 200 7 200 8 3 9 8 1 5 10 6 7 2 5 10 3 7 2 4 11 0 8 1 4 11 10 11 4 4 85 5 10 20 5 5 10 2 1 8 8 85 7 2 20 7 7 2 10 7 11 6 0 9 3 5 1 2 10 9 0 4 1 8 4 
PUSHW[ ]\011/* 1 value pushed */
270 
NPUSHB[ ]\011/* 23 values pushed */
8 7 4 8 6 3 0 9 10 2 11 10 5 13 71 71 74 9 15 1 1 8 1 
PUSHW[ ]\011/* 1 value pushed */
270 
PUSHB[ ]\011/* 6 values pushed */
5 73 12 103 150 24 
CALL[ ]\011/* CallFunction */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
RCVT[ ]\011/* ReadCVT */
NEG[ ]\011/* Negate */
WCVTP[ ]\011/* WriteCVTInPixels */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1241;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = onesuperior;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"151 1391 LINE",
"301 1391 LINE",
"301 733 LINE",
"411 733 LINE",
"411 1489 LINE",
"224 1489 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
3 24 5 214 0 27 2 181 4 3 
PUSHW[ ]\011/* 1 value pushed */
301 
NPUSHB[ ]\011/* 11 values pushed */
0 5 16 5 2 5 73 6 110 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 680;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164.333 1346 OFFCURVE",
"233.667 1410 OFFCURVE",
"347 1410 CURVE SMOOTH",
"448.333 1410 OFFCURVE",
"522 1346 OFFCURVE",
"522 1274 CURVE SMOOTH",
"522 1248 OFFCURVE",
"513.333 1221.5 OFFCURVE",
"496 1194.5 CURVE SMOOTH",
"478.667 1167.5 OFFCURVE",
"434.667 1122 OFFCURVE",
"364 1058 CURVE SMOOTH",
"6 733 LINE",
"642 733 LINE",
"642 832 LINE",
"265 832 LINE",
"455 1004 LINE SMOOTH",
"528.333 1070.667 OFFCURVE",
"576 1122.667 OFFCURVE",
"598 1160 CURVE SMOOTH",
"620 1197.333 OFFCURVE",
"631 1236 OFFCURVE",
"631 1276 CURVE SMOOTH",
"631 1402.667 OFFCURVE",
"516.333 1508 OFFCURVE",
"351 1508 CURVE SMOOTH",
"173.667 1508 OFFCURVE",
"51.667 1392.667 OFFCURVE",
"49 1234 CURVE",
"155 1234 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
23 8 10 11 11 93 14 15 20 14 14 15 11 13 14 10 15 21 12 192 14 24 0 
PUSHW[ ]\011/* 1 value pushed */
302 
NPUSHB[ ]\011/* 31 values pushed */
21 130 4 27 15 18 14 10 11 18 130 7 129 128 13 1 80 13 96 13 112 13 3 13 74 25 0 130 1 155 11 
PUSHW[ ]\011/* 1 value pushed */
574 
PUSHB[ ]\011/* 6 values pushed */
14 73 24 115 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
19 20 5 6 20 5 18 107 1 19 6 21 107 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 680;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"222.667 1378.333 OFFCURVE",
"268.667 1409 OFFCURVE",
"342 1409 CURVE SMOOTH",
"431.333 1409 OFFCURVE",
"490 1359.333 OFFCURVE",
"490 1306 CURVE SMOOTH",
"490 1248.667 OFFCURVE",
"424 1198 OFFCURVE",
"288 1198 CURVE",
"288 1104 LINE",
"466.667 1097.333 OFFCURVE",
"542 1047 OFFCURVE",
"542 959 CURVE SMOOTH",
"542 881.667 OFFCURVE",
"465 814 OFFCURVE",
"345 814 CURVE SMOOTH",
"242.333 814 OFFCURVE",
"179.667 858.667 OFFCURVE",
"153 956 CURVE",
"44 956 LINE",
"74.667 798.667 OFFCURVE",
"178.333 715 OFFCURVE",
"345 715 CURVE SMOOTH",
"529 715 OFFCURVE",
"652 830.333 OFFCURVE",
"652 965 CURVE SMOOTH",
"652 1042.333 OFFCURVE",
"603.333 1116.333 OFFCURVE",
"514 1159 CURVE",
"574.667 1198.333 OFFCURVE",
"605 1247 OFFCURVE",
"605 1305 CURVE SMOOTH",
"605 1414.333 OFFCURVE",
"496.667 1508 OFFCURVE",
"342 1508 CURVE SMOOTH",
"204.667 1508 OFFCURVE",
"108 1434.333 OFFCURVE",
"72 1293 CURVE",
"184 1293 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
40 8 9 15 28 31 28 2 9 15 28 1 8 28 170 29 29 35 0 19 16 19 2 9 0 19 1 8 19 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 10 values pushed */
22 106 15 25 15 0 31 0 2 0 
PUSHW[ ]\011/* 1 value pushed */
293 
NPUSHB[ ]\011/* 45 values pushed */
35 106 4 27 9 7 28 28 19 32 130 255 7 1 7 155 25 130 47 12 63 12 79 12 3 12 74 39 15 39 31 39 2 0 130 1 135 19 130 18 73 38 89 114 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SDB[ ]\011/* SetDeltaBaseInGState */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
33 34 23 24 13 14 5 6 23 14 25 107 1 34 5 32 107 1 24 13 22 107 0 33 6 35 107 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 705;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = onehalf;
lastChange = "2018-11-23 22:41:11 +0000";
layers = (
{
components = (
{
name = onesuperior;
},
{
name = fraction;
transform = "{1, 0, 0, 1, 680, 0}";
},
{
name = twosuperior;
transform = "{1, 0, 0, 1, 1020, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1700;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2018-11-23 22:41:11 +0000";
layers = (
{
components = (
{
name = onesuperior;
},
{
name = fraction;
transform = "{1, 0, 0, 1, 680, 0}";
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 1020, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1725;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2018-11-23 22:41:11 +0000";
layers = (
{
components = (
{
name = threesuperior;
},
{
name = fraction;
transform = "{1, 0, 0, 1, 705, 0}";
},
{
name = foursuperior;
transform = "{1, 0, 0, 1, 1045, 0}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1750;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = overscore;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-12 1624 LINE",
"1036 1624 LINE",
"1036 1727 LINE",
"-12 1727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
1 0 
PUSHW[ ]\011/* 1 value pushed */
622 
NPUSHB[ ]\011/* 11 values pushed */
2 3 2 3 0 1 74 5 0 73 4 
PUSHW[ ]\011/* 1 value pushed */
278 
PUSHB[ ]\011/* 2 values pushed */
208 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1024;
}
);
note = overscore;
unicode = 00AF;
},
{
glyphname = middot;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"538 870 OFFCURVE",
"486 818 OFFCURVE",
"486 754 CURVE SMOOTH",
"486 690 OFFCURVE",
"538 638 OFFCURVE",
"602 638 CURVE SMOOTH",
"666 638 OFFCURVE",
"718 690 OFFCURVE",
"718 754 CURVE SMOOTH",
"718 818 OFFCURVE",
"666 870 OFFCURVE",
"602 870 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
6 124 0 9 164 3 74 13 
PUSHW[ ]\011/* 1 value pushed */
328 
PUSHB[ ]\011/* 2 values pushed */
109 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 682;
}
);
note = middot;
unicode = 00B7;
},
{
glyphname = foursuperior;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"19 903 LINE",
"451 903 LINE",
"451 733 LINE",
"562 733 LINE",
"562 903 LINE",
"667 903 LINE",
"667 1000 LINE",
"562 1000 LINE",
"562 1528 LINE"
);
},
{
closed = 1;
nodes = (
"237 1000 LINE",
"451 1248 LINE",
"451 1000 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
10 11 11 93 8 0 20 8 8 0 2 11 192 3 8 8 0 6 24 10 156 0 27 10 6 181 0 79 5 1 31 5 47 5 63 5 3 5 
PUSHW[ ]\011/* 1 value pushed */
381 
PUSHB[ ]\011/* 7 values pushed */
3 74 13 111 13 1 11 
PUSHW[ ]\011/* 1 value pushed */
516 
PUSHB[ ]\011/* 6 values pushed */
8 73 12 115 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[0]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 705;
}
);
note = foursuperior;
},
{
glyphname = currency;
lastChange = "2018-11-23 22:49:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"131 102 LINE",
"248 217 LINE",
"357.333 133 OFFCURVE",
"454.333 102 OFFCURVE",
"569 102 CURVE SMOOTH",
"685 102 OFFCURVE",
"784.667 134.333 OFFCURVE",
"890 217 CURVE",
"1006 102 LINE",
"1095 192 LINE",
"979 306 LINE",
"1059 410 OFFCURVE",
"1088 500.333 OFFCURVE",
"1088 615 CURVE SMOOTH",
"1088 732.333 OFFCURVE",
"1058.333 824.667 OFFCURVE",
"973 930 CURVE",
"1089 1042 LINE",
"1001 1133 LINE",
"884 1020 LINE",
"776 1097.333 OFFCURVE",
"680 1126 OFFCURVE",
"572 1126 CURVE SMOOTH",
"460 1126 OFFCURVE",
"352.333 1092.667 OFFCURVE",
"251 1014 CURVE",
"131 1133 LINE",
"41 1042 LINE",
"161 925 LINE",
"119.667 873.667 OFFCURVE",
"92 827 OFFCURVE",
"78 785 CURVE SMOOTH",
"59.333 730.333 OFFCURVE",
"50 673.333 OFFCURVE",
"50 614 CURVE SMOOTH",
"50 503.333 OFFCURVE",
"76.667 415.333 OFFCURVE",
"158 306 CURVE",
"42 192 LINE"
);
},
{
closed = 1;
nodes = (
"193 820 OFFCURVE",
"362 989 OFFCURVE",
"570 989 CURVE SMOOTH",
"778 989 OFFCURVE",
"945 821.667 OFFCURVE",
"945 615 CURVE SMOOTH",
"945 408.333 OFFCURVE",
"777 240 OFFCURVE",
"569 240 CURVE SMOOTH",
"362.333 240 OFFCURVE",
"193 406.667 OFFCURVE",
"193 612 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 101 values pushed */
10 1 10 8 6 29 10 38 26 1 22 29 25 34 26 38 8 1 17 18 18 0 11 26 27 27 10 8 29 28 28 9 20 35 36 36 19 9 8 8 85 11 10 20 11 11 10 19 20 20 85 17 18 20 17 17 18 29 28 28 85 27 26 20 27 27 26 1 0 0 85 36 35 20 36 36 35 36 35 29 28 27 0 6 32 26 20 8 1 4 40 19 17 11 9 4 14 46 40 97 32 
PUSHW[ ]\011/* 1 value pushed */
461 
NPUSHB[ ]\011/* 47 values pushed */
14 18 10 7 46 97 14 7 0 9 36 10 8 1 4 4 35 29 17 11 4 37 28 26 20 18 4 43 19 27 43 99 23 129 27 74 50 37 99 4 129 9 73 49 89 153 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1135;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = "ha-ethiopic";
lastChange = "2018-11-24 01:49:06 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
}
);
width = 1245;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2018-11-24 01:49:21 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 500 LINE",
"1186 500 LINE",
"1186 700 LINE",
"1085 700 LINE"
);
},
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
}
);
width = 1341;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2018-11-24 01:49:31 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 -426 LINE",
"1186 -426 LINE",
"1186 -226 LINE",
"1085 -226 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -426 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
}
);
width = 1341;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2018-11-24 01:49:43 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -426 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
}
);
width = 1245;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2018-11-24 01:49:52 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 1398;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2018-11-24 01:46:56 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"948 580 LINE SMOOTH",
"948 444 OFFCURVE",
"941 355 OFFCURVE",
"927 313 CURVE SMOOTH",
"886 190 OFFCURVE",
"772 108 OFFCURVE",
"616 108 CURVE SMOOTH",
"460 108 OFFCURVE",
"340 191 OFFCURVE",
"300 324 CURVE SMOOTH",
"287 371 OFFCURVE",
"280 456 OFFCURVE",
"280 580 CURVE SMOOTH",
"280 701 LINE",
"388 895 LINE",
"279 895 LINE",
"279 1088 LINE",
"138 1088 LINE",
"138 893 LINE",
"257 894 LINE",
"139 702 LINE",
"139 564 LINE SMOOTH",
"139 255 OFFCURVE",
"209 123 OFFCURVE",
"351 37 CURVE SMOOTH",
"422 -7 OFFCURVE",
"510 -28 OFFCURVE",
"616 -28 CURVE SMOOTH",
"828 -28 OFFCURVE",
"969 63 OFFCURVE",
"1039 215 CURVE SMOOTH",
"1074 291 OFFCURVE",
"1091 404 OFFCURVE",
"1091 554 CURVE SMOOTH",
"1091 1088 LINE",
"948 1088 LINE"
);
}
);
width = 1246;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1075 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1090 562 LINE",
"1090 1075 LINE",
"947 1089 LINE",
"947 122 LINE"
);
},
{
closed = 1;
nodes = (
"1006 1026 OFFCURVE",
"1018 1027 OFFCURVE",
"1029 1027 CURVE SMOOTH",
"1111 1027 OFFCURVE",
"1178 964 OFFCURVE",
"1178 887 CURVE SMOOTH",
"1178 810 OFFCURVE",
"1111 748 OFFCURVE",
"1029 748 CURVE SMOOTH",
"1014 748 OFFCURVE",
"1000 749 OFFCURVE",
"987 753 CURVE",
"985 694 LINE",
"999 691 OFFCURVE",
"1015 690 OFFCURVE",
"1030 690 CURVE SMOOTH",
"1147 690 OFFCURVE",
"1243 778 OFFCURVE",
"1243 890 CURVE SMOOTH",
"1243 999 OFFCURVE",
"1149 1089 OFFCURVE",
"1030 1089 CURVE SMOOTH",
"1019 1089 OFFCURVE",
"1008 1089 OFFCURVE",
"998 1089 CURVE",
"996 1024 LINE"
);
},
{
closed = 1;
nodes = (
"1048 1048 LINE",
"1019 1089 LINE",
"947 1089 LINE",
"947 1048 LINE"
);
}
);
width = 1398;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2018-11-24 01:50:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1075 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1090 562 LINE",
"1090 1075 LINE",
"947 1089 LINE",
"947 122 LINE"
);
},
{
closed = 1;
nodes = (
"1006 1026 OFFCURVE",
"1018 1027 OFFCURVE",
"1029 1027 CURVE SMOOTH",
"1111 1027 OFFCURVE",
"1178 964 OFFCURVE",
"1178 887 CURVE SMOOTH",
"1178 810 OFFCURVE",
"1111 748 OFFCURVE",
"1029 748 CURVE SMOOTH",
"1014 748 OFFCURVE",
"1000 749 OFFCURVE",
"987 753 CURVE",
"985 694 LINE",
"999 691 OFFCURVE",
"1015 690 OFFCURVE",
"1030 690 CURVE SMOOTH",
"1147 690 OFFCURVE",
"1243 778 OFFCURVE",
"1243 890 CURVE SMOOTH",
"1243 999 OFFCURVE",
"1149 1089 OFFCURVE",
"1030 1089 CURVE SMOOTH",
"1019 1089 OFFCURVE",
"1008 1089 OFFCURVE",
"998 1089 CURVE",
"996 1024 LINE"
);
},
{
closed = 1;
nodes = (
"1048 1048 LINE",
"1019 1089 LINE",
"947 1089 LINE",
"947 1048 LINE"
);
},
{
closed = 1;
nodes = (
"58 500 LINE",
"159 500 LINE",
"159 700 LINE",
"58 700 LINE"
);
}
);
width = 1398;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
}
);
width = 1242;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2018-11-24 01:50:43 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"296 0 LINE",
"296 399 LINE SMOOTH",
"296 543 OFFCURVE",
"303 642 OFFCURVE",
"316 695 CURVE SMOOTH",
"359 860 OFFCURVE",
"507 987 OFFCURVE",
"676 987 CURVE SMOOTH",
"824 987 OFFCURVE",
"915 914 OFFCURVE",
"950 770 CURVE SMOOTH",
"960 728 OFFCURVE",
"965 644 OFFCURVE",
"965 519 CURVE SMOOTH",
"965 0 LINE",
"1105 0 LINE",
"1105 560 LINE SMOOTH",
"1105 857 OFFCURVE",
"1047 971 OFFCURVE",
"921 1054 CURVE SMOOTH",
"858 1095 OFFCURVE",
"785 1116 OFFCURVE",
"704 1116 CURVE SMOOTH",
"545 1116 OFFCURVE",
"409 1042 OFFCURVE",
"296 893 CURVE",
"296 1508 LINE",
"156 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1097 500 LINE",
"1198 500 LINE",
"1198 700 LINE",
"1097 700 LINE"
);
}
);
width = 1333;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2018-11-24 01:50:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"156 0 LINE",
"296 0 LINE",
"296 399 LINE SMOOTH",
"296 543 OFFCURVE",
"303 642 OFFCURVE",
"316 695 CURVE SMOOTH",
"359 860 OFFCURVE",
"507 987 OFFCURVE",
"676 987 CURVE SMOOTH",
"824 987 OFFCURVE",
"915 914 OFFCURVE",
"950 770 CURVE SMOOTH",
"960 728 OFFCURVE",
"965 644 OFFCURVE",
"965 519 CURVE SMOOTH",
"965 0 LINE",
"1105 0 LINE",
"1105 560 LINE SMOOTH",
"1105 857 OFFCURVE",
"1047 971 OFFCURVE",
"921 1054 CURVE SMOOTH",
"858 1095 OFFCURVE",
"785 1116 OFFCURVE",
"704 1116 CURVE SMOOTH",
"545 1116 OFFCURVE",
"409 1042 OFFCURVE",
"296 893 CURVE",
"296 1508 LINE",
"156 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1091 0 LINE",
"1192 0 LINE",
"1192 200 LINE",
"1091 200 LINE"
);
}
);
width = 1341;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 -426 LINE",
"1087 -426 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
}
);
width = 1242;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 -431 LINE",
"1087 -417 LINE",
"1087 554 LINE",
"947 536 LINE"
);
},
{
closed = 1;
nodes = (
"995 -431 LINE",
"1005 -431 OFFCURVE",
"1016 -431 OFFCURVE",
"1027 -431 CURVE SMOOTH",
"1146 -431 OFFCURVE",
"1240 -341 OFFCURVE",
"1240 -232 CURVE SMOOTH",
"1240 -120 OFFCURVE",
"1144 -32 OFFCURVE",
"1027 -32 CURVE SMOOTH",
"1012 -32 OFFCURVE",
"996 -33 OFFCURVE",
"982 -36 CURVE",
"984 -95 LINE",
"997 -91 OFFCURVE",
"1011 -90 OFFCURVE",
"1026 -90 CURVE SMOOTH",
"1108 -90 OFFCURVE",
"1175 -152 OFFCURVE",
"1175 -229 CURVE SMOOTH",
"1175 -306 OFFCURVE",
"1108 -369 OFFCURVE",
"1026 -369 CURVE SMOOTH",
"1015 -369 OFFCURVE",
"1003 -368 OFFCURVE",
"993 -366 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -431 LINE",
"1016 -431 LINE",
"1045 -390 LINE",
"947 -390 LINE"
);
}
);
width = 1395;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
},
{
closed = 1;
nodes = (
"138 -431 LINE",
"278 -417 LINE",
"278 554 LINE",
"138 536 LINE"
);
},
{
closed = 1;
nodes = (
"186 -431 LINE",
"196 -431 OFFCURVE",
"207 -431 OFFCURVE",
"218 -431 CURVE SMOOTH",
"337 -431 OFFCURVE",
"431 -341 OFFCURVE",
"431 -232 CURVE SMOOTH",
"431 -120 OFFCURVE",
"335 -32 OFFCURVE",
"218 -32 CURVE SMOOTH",
"203 -32 OFFCURVE",
"187 -33 OFFCURVE",
"173 -36 CURVE",
"175 -95 LINE",
"188 -91 OFFCURVE",
"202 -90 OFFCURVE",
"217 -90 CURVE SMOOTH",
"299 -90 OFFCURVE",
"366 -152 OFFCURVE",
"366 -229 CURVE SMOOTH",
"366 -306 OFFCURVE",
"299 -369 OFFCURVE",
"217 -369 CURVE SMOOTH",
"206 -369 OFFCURVE",
"194 -368 OFFCURVE",
"184 -366 CURVE"
);
},
{
closed = 1;
nodes = (
"138 -431 LINE",
"207 -431 LINE",
"236 -390 LINE",
"138 -390 LINE"
);
}
);
width = 1242;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 -431 LINE",
"1087 -417 LINE",
"1087 554 LINE",
"947 536 LINE"
);
},
{
closed = 1;
nodes = (
"995 -431 LINE",
"1005 -431 OFFCURVE",
"1016 -431 OFFCURVE",
"1027 -431 CURVE SMOOTH",
"1146 -431 OFFCURVE",
"1240 -341 OFFCURVE",
"1240 -232 CURVE SMOOTH",
"1240 -120 OFFCURVE",
"1144 -32 OFFCURVE",
"1027 -32 CURVE SMOOTH",
"1012 -32 OFFCURVE",
"996 -33 OFFCURVE",
"982 -36 CURVE",
"984 -95 LINE",
"997 -91 OFFCURVE",
"1011 -90 OFFCURVE",
"1026 -90 CURVE SMOOTH",
"1108 -90 OFFCURVE",
"1175 -152 OFFCURVE",
"1175 -229 CURVE SMOOTH",
"1175 -306 OFFCURVE",
"1108 -369 OFFCURVE",
"1026 -369 CURVE SMOOTH",
"1015 -369 OFFCURVE",
"1003 -368 OFFCURVE",
"993 -366 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -431 LINE",
"1016 -431 LINE",
"1045 -390 LINE",
"947 -390 LINE"
);
}
);
width = 1395;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 0 LINE",
"278 0 LINE",
"278 399 LINE SMOOTH",
"278 543 OFFCURVE",
"285 642 OFFCURVE",
"298 695 CURVE SMOOTH",
"341 860 OFFCURVE",
"489 987 OFFCURVE",
"658 987 CURVE SMOOTH",
"806 987 OFFCURVE",
"897 914 OFFCURVE",
"932 770 CURVE SMOOTH",
"942 728 OFFCURVE",
"947 644 OFFCURVE",
"947 519 CURVE SMOOTH",
"947 -426 LINE",
"1087 -426 LINE",
"1087 560 LINE SMOOTH",
"1087 857 OFFCURVE",
"1029 971 OFFCURVE",
"903 1054 CURVE SMOOTH",
"840 1095 OFFCURVE",
"767 1116 OFFCURVE",
"686 1116 CURVE SMOOTH",
"527 1116 OFFCURVE",
"391 1042 OFFCURVE",
"278 893 CURVE",
"278 1508 LINE",
"138 1508 LINE"
);
},
{
closed = 1;
nodes = (
"698 -406 LINE",
"740 -406 LINE",
"740 -303 LINE",
"698 -303 LINE"
);
},
{
closed = 1;
nodes = (
"698 -426 LINE",
"1087 -426 LINE",
"1087 -376 LINE",
"698 -376 LINE"
);
}
);
width = 1242;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 0 LINE",
"1087 0 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 1508 LINE"
);
}
);
width = 2051;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2018-11-24 01:51:31 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 0 LINE",
"1087 0 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1889 500 LINE",
"1990 500 LINE",
"1990 700 LINE",
"1889 700 LINE"
);
}
);
width = 2165;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2018-11-24 01:51:45 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 0 LINE",
"1087 0 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1886 0 LINE",
"2029 0 LINE",
"2029 215 LINE",
"1886 215 LINE"
);
}
);
width = 2198;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 -180 LINE",
"1087 -180 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 -426 LINE",
"1896 -426 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 -180 LINE",
"1087 -180 LINE",
"1087 1508 LINE"
);
}
);
width = 2051;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 0 LINE",
"1087 0 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1756 -421 LINE",
"1896 -407 LINE",
"1896 564 LINE",
"1756 546 LINE"
);
},
{
closed = 1;
nodes = (
"1804 -421 LINE",
"1814 -421 OFFCURVE",
"1825 -421 OFFCURVE",
"1836 -421 CURVE SMOOTH",
"1955 -421 OFFCURVE",
"2049 -331 OFFCURVE",
"2049 -222 CURVE SMOOTH",
"2049 -110 OFFCURVE",
"1953 -22 OFFCURVE",
"1836 -22 CURVE SMOOTH",
"1821 -22 OFFCURVE",
"1805 -23 OFFCURVE",
"1791 -26 CURVE",
"1793 -85 LINE",
"1806 -81 OFFCURVE",
"1820 -80 OFFCURVE",
"1835 -80 CURVE SMOOTH",
"1917 -80 OFFCURVE",
"1984 -142 OFFCURVE",
"1984 -219 CURVE SMOOTH",
"1984 -296 OFFCURVE",
"1917 -359 OFFCURVE",
"1835 -359 CURVE SMOOTH",
"1824 -359 OFFCURVE",
"1812 -358 OFFCURVE",
"1802 -356 CURVE"
);
},
{
closed = 1;
nodes = (
"1756 -421 LINE",
"1825 -421 LINE",
"1854 -380 LINE",
"1756 -380 LINE"
);
}
);
width = 2204;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"525 1316 LINE",
"992 1316 LINE",
"992 1367 LINE",
"525 1367 LINE"
);
},
{
closed = 1;
nodes = (
"947 0 LINE",
"1087 0 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1361 LINE",
"947 1361 LINE"
);
},
{
closed = 1;
nodes = (
"947 1367 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 0 LINE",
"1087 0 LINE",
"1087 1367 LINE"
);
},
{
closed = 1;
nodes = (
"518 1316 LINE",
"661 1316 LINE",
"661 1531 LINE",
"518 1531 LINE"
);
}
);
width = 2051;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 971 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 -426 LINE",
"278 -426 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"328 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"884 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"940 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 -180 LINE",
"1087 -180 LINE",
"1087 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 -180 LINE",
"1087 -180 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1093 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1151 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1707 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 0 LINE",
"1896 0 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 972 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
}
);
width = 2051;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 -180 LINE",
"1087 -180 LINE",
"1087 399 LINE SMOOTH",
"1087 543 OFFCURVE",
"1094 642 OFFCURVE",
"1107 695 CURVE SMOOTH",
"1150 860 OFFCURVE",
"1298 987 OFFCURVE",
"1467 987 CURVE SMOOTH",
"1615 987 OFFCURVE",
"1706 914 OFFCURVE",
"1741 770 CURVE SMOOTH",
"1751 728 OFFCURVE",
"1756 644 OFFCURVE",
"1756 519 CURVE SMOOTH",
"1756 -426 LINE",
"1896 -426 LINE",
"1896 560 LINE SMOOTH",
"1896 857 OFFCURVE",
"1838 971 OFFCURVE",
"1712 1054 CURVE SMOOTH",
"1649 1095 OFFCURVE",
"1576 1116 OFFCURVE",
"1495 1116 CURVE SMOOTH",
"1336 1116 OFFCURVE",
"1200 1042 OFFCURVE",
"1087 893 CURVE",
"1087 1508 LINE",
"947 1508 LINE"
);
},
{
closed = 1;
nodes = (
"947 1508 LINE",
"947 893 LINE",
"834 1042 OFFCURVE",
"698 1116 OFFCURVE",
"539 1116 CURVE SMOOTH",
"458 1116 OFFCURVE",
"385 1095 OFFCURVE",
"322 1054 CURVE SMOOTH",
"196 972 OFFCURVE",
"138 857 OFFCURVE",
"138 560 CURVE SMOOTH",
"138 0 LINE",
"278 0 LINE",
"278 519 LINE SMOOTH",
"278 644 OFFCURVE",
"283 728 OFFCURVE",
"293 770 CURVE SMOOTH",
"327 914 OFFCURVE",
"419 987 OFFCURVE",
"567 987 CURVE SMOOTH",
"736 987 OFFCURVE",
"883 860 OFFCURVE",
"927 695 CURVE SMOOTH",
"941 642 OFFCURVE",
"947 543 OFFCURVE",
"947 399 CURVE SMOOTH",
"947 -180 LINE",
"1087 -180 LINE",
"1087 1508 LINE"
);
},
{
closed = 1;
nodes = (
"1506 -406 LINE",
"1548 -406 LINE",
"1548 -303 LINE",
"1506 -303 LINE"
);
},
{
closed = 1;
nodes = (
"1506 -426 LINE",
"1895 -426 LINE",
"1895 -376 LINE",
"1506 -376 LINE"
);
}
);
width = 2051;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
}
);
width = 2697;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2018-11-24 01:52:17 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
},
{
closed = 1;
nodes = (
"2521 464 LINE",
"2664 464 LINE",
"2664 679 LINE",
"2521 679 LINE"
);
}
);
width = 2789;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2543 -422 LINE",
"2543 559 LINE",
"2400 541 LINE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2472 -426 LINE",
"2501 -385 LINE",
"2400 -385 LINE"
);
},
{
closed = 1;
nodes = (
"2530 -421 LINE",
"2673 -421 LINE",
"2673 -206 LINE",
"2530 -206 LINE"
);
}
);
width = 2828;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2543 -426 LINE",
"2543 559 LINE",
"2400 541 LINE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2472 -426 LINE",
"2501 -385 LINE",
"2400 -385 LINE"
);
}
);
width = 2698;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2543 -412 LINE",
"2543 559 LINE",
"2400 541 LINE"
);
},
{
closed = 1;
nodes = (
"2451 -426 LINE",
"2461 -426 OFFCURVE",
"2472 -426 OFFCURVE",
"2483 -426 CURVE SMOOTH",
"2602 -426 OFFCURVE",
"2696 -336 OFFCURVE",
"2696 -227 CURVE SMOOTH",
"2696 -115 OFFCURVE",
"2600 -27 OFFCURVE",
"2483 -27 CURVE SMOOTH",
"2468 -27 OFFCURVE",
"2452 -28 OFFCURVE",
"2438 -31 CURVE",
"2440 -90 LINE",
"2453 -86 OFFCURVE",
"2467 -85 OFFCURVE",
"2482 -85 CURVE SMOOTH",
"2564 -85 OFFCURVE",
"2631 -147 OFFCURVE",
"2631 -224 CURVE SMOOTH",
"2631 -301 OFFCURVE",
"2564 -364 OFFCURVE",
"2482 -364 CURVE SMOOTH",
"2471 -364 OFFCURVE",
"2459 -363 OFFCURVE",
"2449 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2472 -426 LINE",
"2501 -385 LINE",
"2400 -385 LINE"
);
}
);
width = 2851;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH",
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH",
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH",
"1840 1116 OFFCURVE",
"1723 1076 OFFCURVE",
"1625 996 CURVE",
"1549 1055 OFFCURVE",
"1447 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1036 1011 LINE",
"942 1081 OFFCURVE",
"832 1116 OFFCURVE",
"705 1116 CURVE SMOOTH",
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"878 -28 OFFCURVE",
"1024 44 OFFCURVE",
"1125 156 CURVE",
"1125 -335 LINE",
"654 -335 LINE",
"654 -426 LINE",
"1166 -426 LINE SMOOTH",
"1225 -426 OFFCURVE",
"1268 -383 OFFCURVE",
"1268 -324 CURVE SMOOTH",
"1271 541 LINE SMOOTH",
"1271 681 OFFCURVE",
"1228 803 OFFCURVE",
"1142 909 CURVE",
"1193 937 OFFCURVE",
"1253 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1401 952 OFFCURVE",
"1470 930 OFFCURVE",
"1524 891 CURVE",
"1447 790 OFFCURVE",
"1409 673 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH"
);
}
);
width = 2697;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH",
"1840 1116 OFFCURVE",
"1723 1076 OFFCURVE",
"1625 996 CURVE",
"1549 1055 OFFCURVE",
"1447 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1036 1011 LINE",
"942 1081 OFFCURVE",
"832 1116 OFFCURVE",
"705 1116 CURVE SMOOTH",
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"878 -28 OFFCURVE",
"1024 44 OFFCURVE",
"1125 156 CURVE",
"1125 -426 LINE",
"1268 -426 LINE",
"1271 541 LINE SMOOTH",
"1271 681 OFFCURVE",
"1228 803 OFFCURVE",
"1142 909 CURVE",
"1193 937 OFFCURVE",
"1253 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1401 952 OFFCURVE",
"1470 930 OFFCURVE",
"1524 891 CURVE",
"1447 790 OFFCURVE",
"1409 673 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH",
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH",
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH"
);
}
);
width = 2697;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2018-11-24 01:52:47 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"537 1116 OFFCURVE",
"398 1055 OFFCURVE",
"288 933 CURVE SMOOTH",
"188 822 OFFCURVE",
"138 692 OFFCURVE",
"138 541 CURVE SMOOTH",
"138 237 OFFCURVE",
"372 -28 OFFCURVE",
"705 -28 CURVE SMOOTH",
"1037 -28 OFFCURVE",
"1271 237 OFFCURVE",
"1271 541 CURVE SMOOTH",
"1271 692 OFFCURVE",
"1221 823 OFFCURVE",
"1121 934 CURVE SMOOTH",
"1011 1055 OFFCURVE",
"872 1116 OFFCURVE",
"705 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"936 979 OFFCURVE",
"1129 782 OFFCURVE",
"1129 538 CURVE SMOOTH",
"1129 381 OFFCURVE",
"1047 235 OFFCURVE",
"918 161 CURVE SMOOTH",
"853 124 OFFCURVE",
"782 105 OFFCURVE",
"705 105 CURVE SMOOTH",
"550 105 OFFCURVE",
"414 182 OFFCURVE",
"338 318 CURVE SMOOTH",
"300 386 OFFCURVE",
"281 459 OFFCURVE",
"281 538 CURVE SMOOTH",
"281 782 OFFCURVE",
"473 979 OFFCURVE",
"705 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1808 1116 OFFCURVE",
"1669 1055 OFFCURVE",
"1559 933 CURVE SMOOTH",
"1459 822 OFFCURVE",
"1409 692 OFFCURVE",
"1409 541 CURVE SMOOTH",
"1409 237 OFFCURVE",
"1643 -28 OFFCURVE",
"1976 -28 CURVE SMOOTH",
"2308 -28 OFFCURVE",
"2542 237 OFFCURVE",
"2542 541 CURVE SMOOTH",
"2542 692 OFFCURVE",
"2492 823 OFFCURVE",
"2392 934 CURVE SMOOTH",
"2283 1055 OFFCURVE",
"2143 1116 OFFCURVE",
"1976 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"2207 979 OFFCURVE",
"2400 782 OFFCURVE",
"2400 538 CURVE SMOOTH",
"2400 381 OFFCURVE",
"2318 235 OFFCURVE",
"2189 161 CURVE SMOOTH",
"2124 124 OFFCURVE",
"2053 105 OFFCURVE",
"1976 105 CURVE SMOOTH",
"1821 105 OFFCURVE",
"1685 182 OFFCURVE",
"1609 318 CURVE SMOOTH",
"1571 386 OFFCURVE",
"1552 459 OFFCURVE",
"1552 538 CURVE SMOOTH",
"1552 782 OFFCURVE",
"1744 979 OFFCURVE",
"1976 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1665 960 LINE",
"1586 1042 OFFCURVE",
"1471 1088 OFFCURVE",
"1320 1088 CURVE SMOOTH",
"1214 1088 OFFCURVE",
"1126 1067 OFFCURVE",
"1055 1023 CURVE SMOOTH",
"1021 1002 OFFCURVE",
"990 979 OFFCURVE",
"964 950 CURVE",
"1066 848 LINE",
"1125 914 OFFCURVE",
"1214 952 OFFCURVE",
"1320 952 CURVE SMOOTH",
"1428 952 OFFCURVE",
"1516 912 OFFCURVE",
"1574 847 CURVE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2543 -426 LINE",
"2543 559 LINE",
"2400 541 LINE"
);
},
{
closed = 1;
nodes = (
"2400 -426 LINE",
"2472 -426 LINE",
"2501 -385 LINE",
"2400 -385 LINE"
);
},
{
closed = 1;
nodes = (
"2121 -406 LINE",
"2163 -406 LINE",
"2163 -303 LINE",
"2121 -303 LINE"
);
},
{
closed = 1;
nodes = (
"2121 -426 LINE",
"2510 -426 LINE",
"2510 -376 LINE",
"2121 -376 LINE"
);
}
);
width = 2698;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2018-11-24 01:46:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
}
);
width = 2055;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1894 489 LINE",
"2037 489 LINE",
"2037 704 LINE",
"1894 704 LINE"
);
}
);
width = 2192;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -426 LINE",
"1900 -426 LINE",
"1900 559 LINE",
"1757 541 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -426 LINE",
"1966 -426 LINE",
"1858 -385 LINE",
"1757 -385 LINE"
);
},
{
closed = 1;
nodes = (
"1887 -426 LINE",
"2030 -426 LINE",
"2030 -209 LINE",
"1887 -209 LINE"
);
}
);
width = 2185;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -426 LINE",
"1900 -426 LINE",
"1900 559 LINE",
"1757 541 LINE"
);
}
);
width = 2055;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -425 LINE",
"1900 -411 LINE",
"1900 560 LINE",
"1757 542 LINE"
);
},
{
closed = 1;
nodes = (
"1808 -425 LINE",
"1818 -425 OFFCURVE",
"1829 -425 OFFCURVE",
"1840 -425 CURVE SMOOTH",
"1959 -425 OFFCURVE",
"2053 -335 OFFCURVE",
"2053 -226 CURVE SMOOTH",
"2053 -114 OFFCURVE",
"1957 -26 OFFCURVE",
"1840 -26 CURVE SMOOTH",
"1825 -26 OFFCURVE",
"1809 -27 OFFCURVE",
"1795 -30 CURVE",
"1797 -89 LINE",
"1810 -85 OFFCURVE",
"1824 -84 OFFCURVE",
"1839 -84 CURVE SMOOTH",
"1921 -84 OFFCURVE",
"1988 -146 OFFCURVE",
"1988 -223 CURVE SMOOTH",
"1988 -300 OFFCURVE",
"1921 -363 OFFCURVE",
"1839 -363 CURVE SMOOTH",
"1828 -363 OFFCURVE",
"1816 -362 OFFCURVE",
"1806 -360 CURVE"
);
},
{
closed = 1;
nodes = (
"1757 -425 LINE",
"1829 -425 LINE",
"1858 -384 LINE",
"1757 -384 LINE"
);
}
);
width = 2208;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1759 1088 LINE",
"1759 580 LINE SMOOTH",
"1759 456 OFFCURVE",
"1752 371 OFFCURVE",
"1739 324 CURVE SMOOTH",
"1699 191 OFFCURVE",
"1579 108 OFFCURVE",
"1423 108 CURVE SMOOTH",
"1267 108 OFFCURVE",
"1153 190 OFFCURVE",
"1112 313 CURVE SMOOTH",
"1098 355 OFFCURVE",
"1091 444 OFFCURVE",
"1091 580 CURVE SMOOTH",
"1091 1088 LINE",
"948 1088 LINE",
"948 554 LINE SMOOTH",
"948 404 OFFCURVE",
"965 291 OFFCURVE",
"1000 215 CURVE SMOOTH",
"1070 63 OFFCURVE",
"1211 -28 OFFCURVE",
"1423 -28 CURVE SMOOTH",
"1529 -28 OFFCURVE",
"1617 -7 OFFCURVE",
"1688 37 CURVE SMOOTH",
"1830 123 OFFCURVE",
"1900 255 OFFCURVE",
"1900 564 CURVE SMOOTH",
"1900 1088 LINE"
);
},
{
closed = 1;
nodes = (
"949 1088 LINE",
"949 580 LINE SMOOTH",
"949 456 OFFCURVE",
"943 371 OFFCURVE",
"929 324 CURVE SMOOTH",
"889 191 OFFCURVE",
"769 108 OFFCURVE",
"613 108 CURVE SMOOTH",
"457 108 OFFCURVE",
"343 190 OFFCURVE",
"302 313 CURVE SMOOTH",
"288 355 OFFCURVE",
"281 444 OFFCURVE",
"281 580 CURVE SMOOTH",
"281 1088 LINE",
"138 1088 LINE",
"138 554 LINE SMOOTH",
"138 404 OFFCURVE",
"155 291 OFFCURVE",
"190 215 CURVE SMOOTH",
"260 63 OFFCURVE",
"401 -28 OFFCURVE",
"613 -28 CURVE SMOOTH",
"719 -28 OFFCURVE",
"807 -6 OFFCURVE",
"878 37 CURVE SMOOTH",
"1020 123 OFFCURVE",
"1090 255 OFFCURVE",
"1090 564 CURVE SMOOTH",
"1090 1088 LINE"
);
},
{
closed = 1;
nodes = (
"138 559 LINE",
"138 -426 LINE",
"281 -426 LINE",
"281 541 LINE"
);
}
);
width = 2055;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"988 -426 LINE SMOOTH",
"1047 -426 OFFCURVE",
"1090 -383 OFFCURVE",
"1090 -324 CURVE SMOOTH",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"807 -426 LINE",
"950 -426 LINE",
"950 -209 LINE",
"807 -209 LINE"
);
}
);
width = 2055;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2018-11-24 02:00:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"138 564 LINE SMOOTH",
"138 255 OFFCURVE",
"208 123 OFFCURVE",
"350 37 CURVE SMOOTH",
"421 -7 OFFCURVE",
"509 -28 OFFCURVE",
"615 -28 CURVE SMOOTH",
"827 -28 OFFCURVE",
"968 63 OFFCURVE",
"1038 215 CURVE SMOOTH",
"1073 291 OFFCURVE",
"1090 404 OFFCURVE",
"1090 554 CURVE SMOOTH",
"1090 1088 LINE",
"947 1088 LINE",
"947 580 LINE SMOOTH",
"947 444 OFFCURVE",
"940 355 OFFCURVE",
"926 313 CURVE SMOOTH",
"885 190 OFFCURVE",
"771 108 OFFCURVE",
"615 108 CURVE SMOOTH",
"459 108 OFFCURVE",
"339 191 OFFCURVE",
"299 324 CURVE SMOOTH",
"286 371 OFFCURVE",
"279 456 OFFCURVE",
"279 580 CURVE SMOOTH",
"279 1088 LINE",
"138 1088 LINE"
);
},
{
closed = 1;
nodes = (
"948 564 LINE SMOOTH",
"948 255 OFFCURVE",
"1018 123 OFFCURVE",
"1160 37 CURVE SMOOTH",
"1231 -6 OFFCURVE",
"1319 -28 OFFCURVE",
"1425 -28 CURVE SMOOTH",
"1637 -28 OFFCURVE",
"1778 63 OFFCURVE",
"1848 215 CURVE SMOOTH",
"1883 291 OFFCURVE",
"1900 404 OFFCURVE",
"1900 554 CURVE SMOOTH",
"1900 1088 LINE",
"1757 1088 LINE",
"1757 580 LINE SMOOTH",
"1757 444 OFFCURVE",
"1750 355 OFFCURVE",
"1736 313 CURVE SMOOTH",
"1695 190 OFFCURVE",
"1581 108 OFFCURVE",
"1425 108 CURVE SMOOTH",
"1269 108 OFFCURVE",
"1149 191 OFFCURVE",
"1109 324 CURVE SMOOTH",
"1095 371 OFFCURVE",
"1089 456 OFFCURVE",
"1089 580 CURVE SMOOTH",
"1089 1088 LINE",
"948 1088 LINE"
);
},
{
closed = 1;
nodes = (
"1757 -426 LINE",
"1900 -426 LINE",
"1900 559 LINE",
"1757 541 LINE"
);
},
{
closed = 1;
nodes = (
"1506 -406 LINE",
"1548 -406 LINE",
"1548 -303 LINE",
"1506 -303 LINE"
);
},
{
closed = 1;
nodes = (
"1506 -426 LINE",
"1895 -426 LINE",
"1895 -376 LINE",
"1506 -376 LINE"
);
}
);
width = 2055;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2018-11-24 02:36:19 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1012 170 LINE",
"553 55 LINE SMOOTH",
"481 37 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE SMOOTH",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH",
"458 -86 OFFCURVE",
"582 -50 OFFCURVE",
"644 -36 CURVE SMOOTH",
"1037 53 LINE"
);
}
);
width = 1310;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2018-11-24 02:36:45 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"662 -208 LINE",
"805 -208 LINE",
"805 7 LINE",
"662 7 LINE"
);
},
{
closed = 1;
nodes = (
"1012 170 LINE",
"553 55 LINE SMOOTH",
"481 37 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE SMOOTH",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH",
"458 -86 OFFCURVE",
"582 -50 OFFCURVE",
"644 -36 CURVE SMOOTH",
"1037 53 LINE"
);
}
);
width = 1310;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2018-11-24 02:39:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"871 324 LINE",
"940 293 OFFCURVE",
"1000 252 OFFCURVE",
"981 179 CURVE SMOOTH",
"968 128 OFFCURVE",
"917 130 OFFCURVE",
"553 59 CURVE SMOOTH",
"480 40 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE SMOOTH",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH",
"458 -86 OFFCURVE",
"610 -51 OFFCURVE",
"784 -7 CURVE SMOOTH",
"1035 57 OFFCURVE",
"1129 49 OFFCURVE",
"1129 165 CURVE SMOOTH",
"1129 286 OFFCURVE",
"1042 412 OFFCURVE",
"902 457 CURVE"
);
}
);
width = 1310;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2018-11-24 02:49:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"983 457 LINE SMOOTH",
"935 457 OFFCURVE",
"896 425 OFFCURVE",
"888 378 CURVE SMOOTH",
"876 309 OFFCURVE",
"981 260 OFFCURVE",
"981 179 CURVE SMOOTH",
"981 127 OFFCURVE",
"917 130 OFFCURVE",
"553 59 CURVE",
"480 40 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH",
"458 -86 OFFCURVE",
"610 -51 OFFCURVE",
"784 -7 CURVE SMOOTH",
"1035 57 OFFCURVE",
"1129 49 OFFCURVE",
"1129 165 CURVE SMOOTH",
"1129 219 OFFCURVE",
"1064 302 OFFCURVE",
"1033 350 CURVE",
"1259 352 LINE",
"1259 458 LINE"
);
}
);
width = 1310;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2018-11-24 02:52:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"458 -86 OFFCURVE",
"610 -51 OFFCURVE",
"784 -7 CURVE SMOOTH",
"1035 57 OFFCURVE",
"1128 70 OFFCURVE",
"1093 188 CURVE SMOOTH",
"1079 235 OFFCURVE",
"971 353 OFFCURVE",
"829 338 CURVE SMOOTH",
"719 326 OFFCURVE",
"649 202 OFFCURVE",
"678 88 CURVE SMOOTH",
"679 84 LINE",
"642 76 OFFCURVE",
"600 68 OFFCURVE",
"553 59 CURVE",
"480 40 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"736 97 OFFCURVE",
"735 98 OFFCURVE",
"735 99 CURVE",
"709 177 OFFCURVE",
"764 258 OFFCURVE",
"840 274 CURVE SMOOTH",
"909 289 OFFCURVE",
"1003 248 OFFCURVE",
"1003 175 CURVE SMOOTH",
"1003 146 OFFCURVE",
"914 129 OFFCURVE",
"736 95 CURVE"
);
}
);
width = 1310;
}
);
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2018-11-24 03:21:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"450 937 OFFCURVE",
"560 949 OFFCURVE",
"729 949 CURVE SMOOTH",
"1010 949 LINE",
"1048 1090 LINE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1070 0 LINE",
"1014 143 LINE",
"729 143 LINE SMOOTH",
"561 143 OFFCURVE"
);
}
);
width = 1325;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2018-11-24 03:23:34 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1070 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
}
);
width = 1325;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2018-11-24 03:02:56 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"983 457 LINE SMOOTH",
"935 457 OFFCURVE",
"896 425 OFFCURVE",
"888 378 CURVE SMOOTH",
"876 309 OFFCURVE",
"981 260 OFFCURVE",
"981 179 CURVE SMOOTH",
"981 127 OFFCURVE",
"917 130 OFFCURVE",
"553 59 CURVE",
"480 40 OFFCURVE",
"414 52 OFFCURVE",
"385 92 CURVE",
"375 107 OFFCURVE",
"368 157 OFFCURVE",
"368 217 CURVE SMOOTH",
"368 1428 LINE",
"226 1428 LINE",
"226 176 LINE SMOOTH",
"226 -7 OFFCURVE",
"296 -85 OFFCURVE",
"411 -86 CURVE SMOOTH",
"458 -86 OFFCURVE",
"610 -51 OFFCURVE",
"784 -7 CURVE SMOOTH",
"1035 57 OFFCURVE",
"1129 49 OFFCURVE",
"1129 165 CURVE SMOOTH",
"1129 219 OFFCURVE",
"1064 302 OFFCURVE",
"1033 350 CURVE",
"1259 352 LINE",
"1259 458 LINE"
);
},
{
closed = 1;
nodes = (
"616 1408 LINE",
"574 1408 LINE",
"574 1305 LINE",
"616 1305 LINE"
);
},
{
closed = 1;
nodes = (
"616 1428 LINE",
"227 1428 LINE",
"227 1378 LINE",
"616 1378 LINE"
);
}
);
width = 1310;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2018-11-23 23:44:31 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 1245;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2018-11-24 03:04:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1086 461 LINE",
"1229 461 LINE",
"1229 676 LINE",
"1086 676 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 1245;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2018-11-24 03:05:01 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE",
"1229 0 LINE",
"1229 215 LINE",
"1086 215 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 600;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2018-11-24 03:05:31 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 1000;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2018-11-24 03:06:02 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 1200;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2018-11-24 03:06:58 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"393 1227 LINE",
"519 1096 LINE",
"745 1096 LINE",
"537 1311 LINE",
"393 1311 LINE"
);
}
);
width = 1245;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2018-11-24 03:07:24 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 -426 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 -426 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 600;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2018-11-24 03:07:50 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"701 -406 LINE",
"743 -406 LINE",
"743 -303 LINE",
"701 -303 LINE"
);
},
{
closed = 1;
nodes = (
"701 -426 LINE",
"1090 -426 LINE",
"1090 -376 LINE",
"701 -376 LINE"
);
}
);
width = 1000;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2018-11-23 23:45:28 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1245;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2018-11-24 03:08:12 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1086 461 LINE",
"1229 461 LINE",
"1229 676 LINE",
"1086 676 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1245;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2018-11-24 03:08:25 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE",
"1229 0 LINE",
"1229 215 LINE",
"1086 215 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 600;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2018-11-24 03:08:39 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1000;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2018-11-24 03:08:51 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1200;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2018-11-24 03:09:42 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"223 1306 LINE",
"825 1306 LINE",
"825 1344 LINE",
"223 1344 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"384 1311 LINE",
"551 1096 LINE",
"745 1096 LINE",
"537 1311 LINE",
"393 1311 LINE"
);
}
);
width = 1245;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2018-11-24 03:09:55 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
},
{
closed = 1;
nodes = (
"279 -426 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 -426 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 600;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2018-11-24 03:10:08 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
},
{
closed = 1;
nodes = (
"701 -406 LINE",
"743 -406 LINE",
"743 -303 LINE",
"701 -303 LINE"
);
},
{
closed = 1;
nodes = (
"701 -426 LINE",
"1090 -426 LINE",
"1090 -376 LINE",
"701 -376 LINE"
);
},
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1000;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2018-11-23 23:55:09 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1172 1536 LINE",
"1102 1536 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1176 -426 LINE"
);
},
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1536 LINE",
"1147 1536 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
}
);
width = 1399;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2018-11-24 03:12:10 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1172 1536 LINE",
"1102 1536 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1176 -426 LINE"
);
},
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1536 LINE",
"1147 1536 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1217 -285 LINE",
"1360 -285 LINE",
"1360 -70 LINE",
"1217 -70 LINE"
);
}
);
width = 1399;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2018-11-24 03:11:22 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1172 1536 LINE",
"1102 1536 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1176 -426 LINE"
);
},
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1536 LINE",
"1147 1536 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1217 -426 LINE",
"1360 -426 LINE",
"1360 -211 LINE",
"1217 -211 LINE"
);
}
);
width = 600;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2018-11-24 03:12:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1172 1536 LINE",
"1102 1536 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1176 -426 LINE"
);
},
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1536 LINE",
"1147 1536 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"791 -426 LINE",
"1104 -426 LINE",
"1104 -211 LINE",
"791 -211 LINE"
);
}
);
width = 600;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2018-11-24 03:14:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1175 -41 LINE",
"1172 1536 LINE",
"1102 1536 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -64 LINE",
"1145 -51 LINE",
"1220 -28 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1220 -28 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1536 LINE",
"1147 1536 LINE",
"1145 -51 LINE",
"1102 -64 LINE",
"1175 -41 LINE"
);
},
{
closed = 1;
nodes = (
"1087 -439 LINE",
"1230 -425 LINE",
"1230 342 LINE",
"1087 342 LINE"
);
},
{
closed = 1;
nodes = (
"1138 -439 LINE",
"1148 -439 OFFCURVE",
"1159 -439 OFFCURVE",
"1170 -439 CURVE SMOOTH",
"1289 -439 OFFCURVE",
"1383 -349 OFFCURVE",
"1383 -240 CURVE SMOOTH",
"1383 -128 OFFCURVE",
"1287 -40 OFFCURVE",
"1170 -40 CURVE SMOOTH",
"1155 -40 OFFCURVE",
"1139 -41 OFFCURVE",
"1125 -44 CURVE",
"1127 -103 LINE",
"1140 -99 OFFCURVE",
"1154 -98 OFFCURVE",
"1169 -98 CURVE SMOOTH",
"1251 -98 OFFCURVE",
"1318 -160 OFFCURVE",
"1318 -237 CURVE SMOOTH",
"1318 -314 OFFCURVE",
"1251 -377 OFFCURVE",
"1169 -377 CURVE SMOOTH",
"1158 -377 OFFCURVE",
"1146 -376 OFFCURVE",
"1136 -374 CURVE"
);
},
{
closed = 1;
nodes = (
"1087 -439 LINE",
"1159 -439 LINE",
"1188 -398 LINE",
"1087 -398 LINE"
);
}
);
width = 2100;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2018-11-24 03:15:01 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"695 1316 LINE",
"1162 1316 LINE",
"1162 1367 LINE",
"695 1367 LINE"
);
},
{
closed = 1;
nodes = (
"688 1316 LINE",
"831 1316 LINE",
"831 1531 LINE",
"688 1531 LINE"
);
},
{
closed = 1;
nodes = (
"1172 1367 LINE",
"1102 1367 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1176 -426 LINE"
);
},
{
closed = 1;
nodes = (
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH",
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1145 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1367 LINE",
"1147 1367 LINE"
);
},
{
closed = 1;
nodes = (
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH",
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2018-11-24 03:17:55 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1246 LINE",
"1357 1246 LINE",
"1357 1327 LINE SMOOTH",
"1357 1444 OFFCURVE",
"1269 1540 OFFCURVE",
"1157 1540 CURVE SMOOTH",
"1048 1540 OFFCURVE",
"958 1446 OFFCURVE",
"958 1327 CURVE SMOOTH",
"959 1246 LINE",
"1102 1246 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1237 1475 OFFCURVE",
"1299 1408 OFFCURVE",
"1299 1326 CURVE SMOOTH",
"1299 1299 LINE",
"1020 1298 LINE",
"1020 1326 LINE SMOOTH",
"1020 1384 OFFCURVE",
"1083 1475 OFFCURVE",
"1160 1475 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH",
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH",
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH"
);
}
);
width = 1399;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2018-11-24 03:18:58 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1246 LINE",
"1357 1246 LINE",
"1357 1327 LINE SMOOTH",
"1357 1444 OFFCURVE",
"1269 1540 OFFCURVE",
"1157 1540 CURVE SMOOTH",
"1048 1540 OFFCURVE",
"958 1446 OFFCURVE",
"958 1327 CURVE SMOOTH",
"959 1246 LINE",
"1102 1246 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -426 LINE",
"1220 -426 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1237 1475 OFFCURVE",
"1299 1408 OFFCURVE",
"1299 1326 CURVE SMOOTH",
"1299 1299 LINE",
"1020 1298 LINE",
"1020 1326 LINE SMOOTH",
"1020 1384 OFFCURVE",
"1083 1475 OFFCURVE",
"1160 1475 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH",
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH",
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"836 -415 LINE",
"878 -415 LINE",
"878 -312 LINE",
"836 -312 LINE"
);
},
{
closed = 1;
nodes = (
"836 -435 LINE",
"1225 -435 LINE",
"1225 -385 LINE",
"836 -385 LINE"
);
}
);
width = 1399;
}
);
unicode = 1247;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2018-11-24 03:29:42 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1102 1449 LINE",
"1102 888 LINE",
"993 1040 OFFCURVE",
"848 1116 OFFCURVE",
"669 1116 CURVE SMOOTH",
"360 1116 OFFCURVE",
"107 860 OFFCURVE",
"107 547 CURVE SMOOTH",
"107 227 OFFCURVE",
"357 -28 OFFCURVE",
"665 -28 CURVE SMOOTH",
"838 -28 OFFCURVE",
"985 44 OFFCURVE",
"1102 187 CURVE",
"1102 -286 LINE",
"1220 -286 LINE",
"1220 187 LINE",
"1337 44 OFFCURVE",
"1484 -28 OFFCURVE",
"1657 -28 CURVE SMOOTH",
"1965 -28 OFFCURVE",
"2215 227 OFFCURVE",
"2215 547 CURVE SMOOTH",
"2215 860 OFFCURVE",
"1962 1116 OFFCURVE",
"1653 1116 CURVE SMOOTH",
"1474 1116 OFFCURVE",
"1329 1040 OFFCURVE",
"1220 888 CURVE",
"1220 1449 LINE"
);
},
{
closed = 1;
nodes = (
"828 119 OFFCURVE",
"756 100 OFFCURVE",
"679 100 CURVE SMOOTH",
"527 100 OFFCURVE",
"386 182 OFFCURVE",
"307 322 CURVE SMOOTH",
"268 392 OFFCURVE",
"248 465 OFFCURVE",
"248 542 CURVE SMOOTH",
"248 697 OFFCURVE",
"332 847 OFFCURVE",
"464 924 CURVE SMOOTH",
"530 962 OFFCURVE",
"602 981 OFFCURVE",
"680 981 CURVE SMOOTH",
"923 981 OFFCURVE",
"1111 790 OFFCURVE",
"1111 538 CURVE SMOOTH",
"1111 373 OFFCURVE",
"1034 235 OFFCURVE",
"897 158 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1937 182 OFFCURVE",
"1795 100 OFFCURVE",
"1643 100 CURVE SMOOTH",
"1566 100 OFFCURVE",
"1494 119 OFFCURVE",
"1425 158 CURVE SMOOTH",
"1288 235 OFFCURVE",
"1211 373 OFFCURVE",
"1211 538 CURVE SMOOTH",
"1211 790 OFFCURVE",
"1399 981 OFFCURVE",
"1642 981 CURVE SMOOTH",
"1720 981 OFFCURVE",
"1792 962 OFFCURVE",
"1858 924 CURVE SMOOTH",
"1990 848 OFFCURVE",
"2074 697 OFFCURVE",
"2074 542 CURVE SMOOTH",
"2074 465 OFFCURVE",
"2054 392 OFFCURVE",
"2015 322 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"829 -354 LINE",
"871 -354 LINE",
"871 -251 LINE",
"829 -251 LINE"
);
},
{
closed = 1;
nodes = (
"829 -295 LINE",
"1218 -295 LINE",
"1218 -245 LINE",
"829 -245 LINE"
);
}
);
width = 1399;
}
);
unicode = 124B;
},
{
glyphname = "ba-ethiopic";
lastChange = "2018-11-24 03:20:26 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
}
);
width = 1245;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2018-11-24 03:31:14 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1078 515 LINE",
"1221 515 LINE",
"1221 730 LINE",
"1078 730 LINE"
);
}
);
width = 1376;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2018-11-24 03:31:37 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1078 0 LINE",
"1221 0 LINE",
"1221 215 LINE",
"1078 215 LINE"
);
}
);
width = 1234;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2018-11-24 03:31:47 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 -420 LINE",
"1090 -420 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
}
);
width = 1234;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2018-11-24 03:32:05 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 1234;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2018-11-24 03:32:27 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"15 485 LINE",
"158 485 LINE",
"158 700 LINE",
"15 700 LINE"
);
}
);
width = 1234;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2018-11-24 03:32:38 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 -410 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 -410 LINE"
);
}
);
width = 1234;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2018-11-24 03:33:12 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 -380 LINE",
"1090 -380 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"701 -405 LINE",
"743 -405 LINE",
"743 -302 LINE",
"701 -302 LINE"
);
},
{
closed = 1;
nodes = (
"701 -425 LINE",
"1090 -425 LINE",
"1090 -375 LINE",
"701 -375 LINE"
);
}
);
width = 1234;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2018-11-24 03:34:03 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
}
);
width = 1245;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2018-11-24 03:34:40 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1078 515 LINE",
"1221 515 LINE",
"1221 730 LINE",
"1078 730 LINE"
);
},
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
}
);
width = 1376;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2018-11-24 03:34:55 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1078 0 LINE",
"1221 0 LINE",
"1221 215 LINE",
"1078 215 LINE"
);
}
);
width = 1234;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2018-11-24 03:35:09 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 -420 LINE",
"1090 -420 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
}
);
width = 1234;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2018-11-24 03:35:21 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
},
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
}
);
width = 1234;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2018-11-24 03:35:37 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"15 485 LINE",
"158 485 LINE",
"158 700 LINE",
"15 700 LINE"
);
},
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
}
);
width = 1234;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2018-11-24 03:36:07 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
},
{
closed = 1;
nodes = (
"279 -410 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 -410 LINE"
);
}
);
width = 1234;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2018-11-24 03:36:29 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 511 LINE SMOOTH",
"279 635 OFFCURVE",
"286 720 OFFCURVE",
"299 767 CURVE SMOOTH",
"336 901 OFFCURVE",
"459 983 OFFCURVE",
"615 983 CURVE SMOOTH",
"771 983 OFFCURVE",
"885 901 OFFCURVE",
"926 778 CURVE SMOOTH",
"940 736 OFFCURVE",
"947 647 OFFCURVE",
"947 511 CURVE SMOOTH",
"947 -380 LINE",
"1090 -380 LINE",
"1090 537 LINE SMOOTH",
"1090 687 OFFCURVE",
"1073 800 OFFCURVE",
"1038 876 CURVE SMOOTH",
"968 1028 OFFCURVE",
"827 1119 OFFCURVE",
"615 1119 CURVE SMOOTH",
"509 1119 OFFCURVE",
"421 1098 OFFCURVE",
"350 1054 CURVE SMOOTH",
"209 967 OFFCURVE",
"138 836 OFFCURVE",
"138 527 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"701 -405 LINE",
"743 -405 LINE",
"743 -302 LINE",
"701 -302 LINE"
);
},
{
closed = 1;
nodes = (
"701 -425 LINE",
"1090 -425 LINE",
"1090 -375 LINE",
"701 -375 LINE"
);
},
{
closed = 1;
nodes = (
"279 1245 LINE",
"939 1245 LINE",
"939 1297 LINE",
"279 1297 LINE"
);
}
);
width = 1234;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2018-11-23 23:57:40 +0000";
layers = (
{
components = (
{
name = t;
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 694;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2018-11-24 03:37:29 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"416 498 LINE",
"559 498 LINE",
"559 713 LINE",
"416 713 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2018-11-24 03:37:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"413 0 LINE",
"556 0 LINE",
"556 215 LINE",
"413 215 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 600;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2018-11-24 03:38:24 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"104 0 LINE",
"328 0 LINE",
"328 215 LINE",
"104 215 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 600;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2018-11-24 03:40:11 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 -7 LINE",
"421 7 LINE",
"421 978 LINE",
"278 960 LINE"
);
},
{
closed = 1;
nodes = (
"329 -7 LINE",
"339 -7 OFFCURVE",
"350 -7 OFFCURVE",
"361 -7 CURVE SMOOTH",
"480 -7 OFFCURVE",
"574 83 OFFCURVE",
"574 192 CURVE SMOOTH",
"574 304 OFFCURVE",
"478 392 OFFCURVE",
"361 392 CURVE SMOOTH",
"346 392 OFFCURVE",
"330 391 OFFCURVE",
"316 388 CURVE",
"318 329 LINE",
"331 333 OFFCURVE",
"345 334 OFFCURVE",
"360 334 CURVE SMOOTH",
"442 334 OFFCURVE",
"509 272 OFFCURVE",
"509 195 CURVE SMOOTH",
"509 118 OFFCURVE",
"442 55 OFFCURVE",
"360 55 CURVE SMOOTH",
"349 55 OFFCURVE",
"337 56 OFFCURVE",
"327 58 CURVE"
);
},
{
closed = 1;
nodes = (
"282 -7 LINE",
"354 -7 LINE",
"383 34 LINE",
"282 34 LINE"
);
}
);
width = 694;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2018-11-24 03:47:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"105 1316 LINE",
"419 1316 LINE",
"419 1367 LINE",
"105 1367 LINE"
);
},
{
closed = 1;
nodes = (
"98 1316 LINE",
"241 1316 LINE",
"241 1491 LINE",
"98 1491 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1362 LINE",
"278 1362 LINE"
);
}
);
width = 694;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2018-11-24 03:42:38 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1102 1141 LINE",
"1220 1137 LINE"
);
},
{
closed = 1;
nodes = (
"1237 1475 OFFCURVE",
"1299 1408 OFFCURVE",
"1299 1326 CURVE SMOOTH",
"1299 1299 LINE",
"1020 1298 LINE",
"1020 1326 LINE SMOOTH",
"1020 1384 OFFCURVE",
"1083 1475 OFFCURVE",
"1160 1475 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1220 1137 LINE",
"1220 1246 LINE",
"1357 1246 LINE",
"1357 1327 LINE SMOOTH",
"1357 1444 OFFCURVE",
"1269 1540 OFFCURVE",
"1157 1540 CURVE SMOOTH",
"1048 1540 OFFCURVE",
"958 1446 OFFCURVE",
"958 1327 CURVE SMOOTH",
"959 1246 LINE",
"1102 1246 LINE",
"1102 1141 LINE"
);
},
{
closed = 1;
nodes = (
"1081 1276 LINE",
"1081 1088 LINE",
"890 1088 LINE",
"890 968 LINE",
"1081 968 LINE",
"1081 0 LINE",
"1222 0 LINE",
"1222 968 LINE",
"1444 968 LINE",
"1444 1088 LINE",
"1222 1088 LINE",
"1222 1273 LINE"
);
}
);
width = 1399;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2018-11-24 03:43:27 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"31 8 LINE",
"73 8 LINE",
"73 111 LINE",
"31 111 LINE"
);
},
{
closed = 1;
nodes = (
"31 -12 LINE",
"420 -12 LINE",
"420 38 LINE",
"31 38 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2018-11-24 03:44:16 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2018-11-24 03:45:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
},
{
closed = 1;
nodes = (
"416 498 LINE",
"559 498 LINE",
"559 713 LINE",
"416 713 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2018-11-24 03:45:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"413 0 LINE",
"556 0 LINE",
"556 215 LINE",
"413 215 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
},
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
}
);
width = 600;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2018-11-24 03:46:15 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
},
{
closed = 1;
nodes = (
"104 0 LINE",
"328 0 LINE",
"328 215 LINE",
"104 215 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 600;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2018-11-24 03:46:28 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 -7 LINE",
"421 7 LINE",
"421 978 LINE",
"278 960 LINE"
);
},
{
closed = 1;
nodes = (
"329 -7 LINE",
"339 -7 OFFCURVE",
"350 -7 OFFCURVE",
"361 -7 CURVE SMOOTH",
"480 -7 OFFCURVE",
"574 83 OFFCURVE",
"574 192 CURVE SMOOTH",
"574 304 OFFCURVE",
"478 392 OFFCURVE",
"361 392 CURVE SMOOTH",
"346 392 OFFCURVE",
"330 391 OFFCURVE",
"316 388 CURVE",
"318 329 LINE",
"331 333 OFFCURVE",
"345 334 OFFCURVE",
"360 334 CURVE SMOOTH",
"442 334 OFFCURVE",
"509 272 OFFCURVE",
"509 195 CURVE SMOOTH",
"509 118 OFFCURVE",
"442 55 OFFCURVE",
"360 55 CURVE SMOOTH",
"349 55 OFFCURVE",
"337 56 OFFCURVE",
"327 58 CURVE"
);
},
{
closed = 1;
nodes = (
"282 -7 LINE",
"354 -7 LINE",
"383 34 LINE",
"282 34 LINE"
);
}
);
width = 694;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2018-11-24 03:47:03 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-7 1441 LINE",
"448 1441 LINE",
"448 1493 LINE",
"-7 1493 LINE"
);
},
{
closed = 1;
nodes = (
"105 1316 LINE",
"419 1316 LINE",
"419 1367 LINE",
"105 1367 LINE"
);
},
{
closed = 1;
nodes = (
"98 1316 LINE",
"241 1316 LINE",
"241 1466 LINE",
"98 1471 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1362 LINE",
"278 1362 LINE"
);
}
);
width = 694;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2018-11-24 03:48:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1115 1493 LINE",
"876 1493 LINE",
"876 1441 LINE",
"1068 1441 LINE"
);
},
{
closed = 1;
nodes = (
"1260 1441 LINE",
"1424 1441 LINE",
"1424 1493 LINE",
"1208 1493 LINE"
);
},
{
closed = 1;
nodes = (
"1102 1141 LINE",
"1220 1137 LINE"
);
},
{
closed = 1;
nodes = (
"1237 1475 OFFCURVE",
"1299 1408 OFFCURVE",
"1299 1326 CURVE SMOOTH",
"1299 1299 LINE",
"1020 1298 LINE",
"1020 1326 LINE SMOOTH",
"1020 1384 OFFCURVE",
"1083 1475 OFFCURVE",
"1160 1475 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1220 1137 LINE",
"1220 1246 LINE",
"1357 1246 LINE",
"1357 1327 LINE SMOOTH",
"1357 1444 OFFCURVE",
"1269 1540 OFFCURVE",
"1157 1540 CURVE SMOOTH",
"1048 1540 OFFCURVE",
"958 1446 OFFCURVE",
"958 1327 CURVE SMOOTH",
"959 1246 LINE",
"1102 1246 LINE",
"1102 1141 LINE"
);
},
{
closed = 1;
nodes = (
"1081 1276 LINE",
"1081 1088 LINE",
"890 1088 LINE",
"890 968 LINE",
"1081 968 LINE",
"1081 0 LINE",
"1222 0 LINE",
"1222 968 LINE",
"1444 968 LINE",
"1444 1088 LINE",
"1222 1088 LINE",
"1222 1273 LINE"
);
}
);
width = 1399;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2018-11-24 03:48:59 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"123 1441 LINE",
"578 1441 LINE",
"578 1493 LINE",
"123 1493 LINE"
);
},
{
closed = 1;
nodes = (
"31 8 LINE",
"73 8 LINE",
"73 111 LINE",
"31 111 LINE"
);
},
{
closed = 1;
nodes = (
"31 -12 LINE",
"420 -12 LINE",
"420 38 LINE",
"31 38 LINE"
);
},
{
closed = 1;
nodes = (
"278 1088 LINE",
"87 1088 LINE",
"87 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"641 968 LINE",
"641 1088 LINE",
"419 1088 LINE",
"419 1492 LINE",
"278 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2018-11-24 03:51:37 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"-203 1234 LINE",
"77 1234 LINE",
"77 1352 LINE",
"-203 1352 LINE"
);
}
);
width = 694;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2018-11-24 04:05:51 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"-203 1234 LINE",
"77 1234 LINE",
"77 1352 LINE",
"-203 1352 LINE"
);
},
{
closed = 1;
nodes = (
"412 500 LINE",
"555 500 LINE",
"555 715 LINE",
"412 715 LINE"
);
}
);
width = 694;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2018-11-24 04:06:48 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"-203 1234 LINE",
"77 1234 LINE",
"77 1352 LINE",
"-203 1352 LINE"
);
},
{
closed = 1;
nodes = (
"412 0 LINE",
"555 0 LINE",
"555 215 LINE",
"412 215 LINE"
);
}
);
width = 600;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2018-11-24 04:08:39 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"409 -16 LINE SMOOTH",
"416 -3 OFFCURVE",
"420 8 OFFCURVE",
"420 23 CURVE SMOOTH",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE",
"-2 1352 LINE",
"-203 1352 LINE",
"-203 1234 LINE",
"-2 1234 LINE",
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 21 LINE SMOOTH",
"278 7 OFFCURVE",
"275 -5 OFFCURVE",
"268 -18 CURVE SMOOTH",
"35 -424 LINE",
"172 -424 LINE"
);
}
);
width = 694;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2018-11-24 04:09:09 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-203 1234 LINE",
"77 1234 LINE",
"77 1352 LINE",
"-203 1352 LINE"
);
},
{
closed = 1;
nodes = (
"277 -426 LINE",
"420 -412 LINE",
"420 559 LINE",
"277 541 LINE"
);
},
{
closed = 1;
nodes = (
"328 -426 LINE",
"338 -426 OFFCURVE",
"349 -426 OFFCURVE",
"360 -426 CURVE SMOOTH",
"479 -426 OFFCURVE",
"573 -336 OFFCURVE",
"573 -227 CURVE SMOOTH",
"573 -115 OFFCURVE",
"477 -27 OFFCURVE",
"360 -27 CURVE SMOOTH",
"345 -27 OFFCURVE",
"329 -28 OFFCURVE",
"315 -31 CURVE",
"317 -90 LINE",
"330 -86 OFFCURVE",
"344 -85 OFFCURVE",
"359 -85 CURVE SMOOTH",
"441 -85 OFFCURVE",
"508 -147 OFFCURVE",
"508 -224 CURVE SMOOTH",
"508 -301 OFFCURVE",
"441 -364 OFFCURVE",
"359 -364 CURVE SMOOTH",
"348 -364 OFFCURVE",
"336 -363 OFFCURVE",
"326 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"277 -426 LINE",
"349 -426 LINE",
"378 -385 LINE",
"277 -385 LINE"
);
},
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2018-11-24 04:09:30 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"-203 1234 LINE",
"77 1234 LINE",
"77 1352 LINE",
"-203 1352 LINE"
);
},
{
closed = 1;
nodes = (
"-204 1089 LINE",
"-159 1089 LINE",
"-159 1344 LINE",
"-204 1344 LINE"
);
}
);
width = 694;
}
);
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2018-11-24 04:09:58 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
},
{
closed = 1;
nodes = (
"33 500 LINE",
"134 500 LINE",
"134 700 LINE",
"33 700 LINE"
);
}
);
width = 1325;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2018-11-24 04:10:30 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
},
{
closed = 1;
nodes = (
"33 500 LINE",
"134 500 LINE",
"134 700 LINE",
"33 700 LINE"
);
},
{
closed = 1;
nodes = (
"627 -406 LINE",
"669 -406 LINE",
"669 -303 LINE",
"627 -303 LINE"
);
},
{
closed = 1;
nodes = (
"627 -426 LINE",
"1016 -426 LINE",
"1016 -376 LINE",
"627 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 1287;
},
{
glyphname = "na-ethiopic";
lastChange = "2018-11-24 00:00:25 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2018-11-24 03:52:23 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"406 509 LINE",
"549 509 LINE",
"549 724 LINE",
"406 724 LINE"
);
}
);
width = 694;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2018-11-24 03:52:43 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"418 0 LINE",
"561 0 LINE",
"561 215 LINE",
"418 215 LINE"
);
}
);
width = 600;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2018-11-24 03:53:49 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"827 -427 LINE",
"1004 -427 LINE",
"1004 110 LINE",
"827 110 LINE"
);
},
{
closed = 1;
nodes = (
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"450 937 OFFCURVE",
"560 949 OFFCURVE",
"729 949 CURVE SMOOTH",
"1010 949 LINE",
"1048 1090 LINE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1004 0 LINE",
"1004 143 LINE",
"729 143 LINE SMOOTH",
"561 143 OFFCURVE"
);
}
);
width = 1325;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2018-11-24 03:54:24 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"277 -426 LINE",
"420 -412 LINE",
"420 559 LINE",
"277 541 LINE"
);
},
{
closed = 1;
nodes = (
"328 -426 LINE",
"338 -426 OFFCURVE",
"349 -426 OFFCURVE",
"360 -426 CURVE SMOOTH",
"479 -426 OFFCURVE",
"573 -336 OFFCURVE",
"573 -227 CURVE SMOOTH",
"573 -115 OFFCURVE",
"477 -27 OFFCURVE",
"360 -27 CURVE SMOOTH",
"345 -27 OFFCURVE",
"329 -28 OFFCURVE",
"315 -31 CURVE",
"317 -90 LINE",
"330 -86 OFFCURVE",
"344 -85 OFFCURVE",
"359 -85 CURVE SMOOTH",
"441 -85 OFFCURVE",
"508 -147 OFFCURVE",
"508 -224 CURVE SMOOTH",
"508 -301 OFFCURVE",
"441 -364 OFFCURVE",
"359 -364 CURVE SMOOTH",
"348 -364 OFFCURVE",
"336 -363 OFFCURVE",
"326 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"277 -426 LINE",
"349 -426 LINE",
"378 -385 LINE",
"277 -385 LINE"
);
},
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2018-11-24 03:57:49 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"420 1492 LINE",
"-13 1491 LINE",
"-13 1387 LINE",
"235 1387 LINE",
"97 1103 LINE SMOOTH",
"92 1092 OFFCURVE",
"90 1083 OFFCURVE",
"90 1071 CURVE SMOOTH",
"90 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1088 LINE",
"240 1088 LINE"
);
}
);
width = 694;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2018-11-24 03:59:06 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
}
);
width = 1325;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2018-11-24 03:59:51 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
},
{
closed = 1;
nodes = (
"626 -406 LINE",
"668 -406 LINE",
"668 -303 LINE",
"626 -303 LINE"
);
},
{
closed = 1;
nodes = (
"626 -426 LINE",
"1015 -426 LINE",
"1015 -376 LINE",
"626 -376 LINE"
);
}
);
width = 1325;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2018-11-24 04:00:46 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-127 1441 LINE",
"328 1441 LINE",
"328 1493 LINE",
"-127 1493 LINE"
);
},
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2018-11-24 04:01:06 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-127 1441 LINE",
"328 1441 LINE",
"328 1493 LINE",
"-127 1493 LINE"
);
},
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"406 509 LINE",
"549 509 LINE",
"549 724 LINE",
"406 724 LINE"
);
}
);
width = 694;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2018-11-24 04:01:36 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"418 0 LINE",
"561 0 LINE",
"561 215 LINE",
"418 215 LINE"
);
},
{
closed = 1;
nodes = (
"-127 1441 LINE",
"328 1441 LINE",
"328 1493 LINE",
"-127 1493 LINE"
);
}
);
width = 600;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2018-11-24 04:02:03 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"827 -427 LINE",
"1004 -427 LINE",
"1004 110 LINE",
"827 110 LINE"
);
},
{
closed = 1;
nodes = (
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"450 937 OFFCURVE",
"560 949 OFFCURVE",
"729 949 CURVE SMOOTH",
"1010 949 LINE",
"1048 1090 LINE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1004 0 LINE",
"1004 143 LINE",
"729 143 LINE SMOOTH",
"561 143 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"451 1337 LINE",
"906 1337 LINE",
"906 1389 LINE",
"451 1389 LINE"
);
},
{
closed = 1;
nodes = (
"634 1062 LINE",
"727 1062 LINE",
"727 1366 LINE",
"634 1366 LINE"
);
}
);
width = 1325;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2018-11-24 04:02:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-127 1441 LINE",
"328 1441 LINE",
"328 1493 LINE",
"-127 1493 LINE"
);
},
{
closed = 1;
nodes = (
"277 -426 LINE",
"420 -412 LINE",
"420 559 LINE",
"277 541 LINE"
);
},
{
closed = 1;
nodes = (
"328 -426 LINE",
"338 -426 OFFCURVE",
"349 -426 OFFCURVE",
"360 -426 CURVE SMOOTH",
"479 -426 OFFCURVE",
"573 -336 OFFCURVE",
"573 -227 CURVE SMOOTH",
"573 -115 OFFCURVE",
"477 -27 OFFCURVE",
"360 -27 CURVE SMOOTH",
"345 -27 OFFCURVE",
"329 -28 OFFCURVE",
"315 -31 CURVE",
"317 -90 LINE",
"330 -86 OFFCURVE",
"344 -85 OFFCURVE",
"359 -85 CURVE SMOOTH",
"441 -85 OFFCURVE",
"508 -147 OFFCURVE",
"508 -224 CURVE SMOOTH",
"508 -301 OFFCURVE",
"441 -364 OFFCURVE",
"359 -364 CURVE SMOOTH",
"348 -364 OFFCURVE",
"336 -363 OFFCURVE",
"326 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"277 -426 LINE",
"349 -426 LINE",
"378 -385 LINE",
"277 -385 LINE"
);
},
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-3 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
}
);
width = 694;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2018-11-24 04:03:24 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-7 1435 LINE",
"448 1435 LINE",
"448 1487 LINE",
"-7 1487 LINE"
);
},
{
closed = 1;
nodes = (
"420 1242 LINE",
"-13 1241 LINE",
"-13 1137 LINE",
"235 1137 LINE",
"97 853 LINE SMOOTH",
"92 842 OFFCURVE",
"90 833 OFFCURVE",
"90 821 CURVE SMOOTH",
"90 718 LINE",
"278 718 LINE",
"278 -420 LINE",
"419 -420 LINE",
"419 838 LINE",
"240 838 LINE"
);
},
{
closed = 1;
nodes = (
"151 1203 LINE",
"238 1203 LINE",
"238 1460 LINE",
"151 1460 LINE"
);
}
);
width = 694;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2018-11-24 04:04:32 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"496 1322 LINE",
"951 1322 LINE",
"951 1374 LINE",
"496 1374 LINE"
);
},
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
},
{
closed = 1;
nodes = (
"651 1014 LINE",
"787 1014 LINE",
"787 1363 LINE",
"651 1363 LINE"
);
}
);
width = 1325;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2018-11-24 04:05:04 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"426 1336 LINE",
"881 1336 LINE",
"881 1388 LINE",
"426 1388 LINE"
);
},
{
closed = 1;
nodes = (
"624 1034 LINE",
"713 1034 LINE",
"713 1365 LINE",
"624 1365 LINE"
);
},
{
closed = 1;
nodes = (
"858 -426 LINE",
"1017 -426 LINE",
"1017 144 LINE",
"858 127 LINE"
);
},
{
closed = 1;
nodes = (
"729 143 LINE SMOOTH",
"561 143 OFFCURVE",
"453 156 OFFCURVE",
"386 206 CURVE SMOOTH",
"308 264 OFFCURVE",
"284 371 OFFCURVE",
"284 564 CURVE SMOOTH",
"284 736 OFFCURVE",
"310 833 OFFCURVE",
"382 886 CURVE SMOOTH",
"434 925 OFFCURVE",
"510 941 OFFCURVE",
"619 947 CURVE",
"620 942 OFFCURVE",
"620 938 OFFCURVE",
"621 934 CURVE",
"644 817 OFFCURVE",
"732 730 OFFCURVE",
"840 743 CURVE SMOOTH",
"952 756 OFFCURVE",
"1020 901 OFFCURVE",
"1018 975 CURVE SMOOTH",
"1017 1022 OFFCURVE",
"1011 1049 OFFCURVE",
"997 1090 CURVE",
"713 1090 LINE SMOOTH",
"524 1090 OFFCURVE",
"384 1062 OFFCURVE",
"289 995 CURVE SMOOTH",
"173 914 OFFCURVE",
"121 777 OFFCURVE",
"121 564 CURVE SMOOTH",
"121 361 OFFCURVE",
"162 221 OFFCURVE",
"253 132 CURVE SMOOTH",
"347 39 OFFCURVE",
"494 0 OFFCURVE",
"703 0 CURVE SMOOTH",
"1015 0 LINE",
"1014 143 LINE"
);
},
{
closed = 1;
nodes = (
"961 949 LINE",
"961 877 OFFCURVE",
"906 815 OFFCURVE",
"837 808 CURVE SMOOTH",
"732 798 OFFCURVE",
"696 860 OFFCURVE",
"681 941 CURVE",
"681 943 OFFCURVE",
"680 946 OFFCURVE",
"680 949 CURVE",
"729 949 LINE"
);
},
{
closed = 1;
nodes = (
"626 -406 LINE",
"668 -406 LINE",
"668 -303 LINE",
"626 -303 LINE"
);
},
{
closed = 1;
nodes = (
"626 -426 LINE",
"1015 -426 LINE",
"1015 -376 LINE",
"626 -376 LINE"
);
}
);
width = 1325;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2018-11-24 00:07:16 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
}
);
width = 1943;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2018-11-24 04:16:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
},
{
closed = 1;
nodes = (
"1211 482 LINE",
"1354 482 LINE",
"1354 697 LINE",
"1211 697 LINE"
);
}
);
width = 1943;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2018-11-24 04:17:13 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
},
{
closed = 1;
nodes = (
"1211 2 LINE",
"1354 2 LINE",
"1354 217 LINE",
"1211 217 LINE"
);
}
);
width = 600;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2018-11-24 04:17:34 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 -420 LINE",
"1227 -420 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
}
);
width = 1300;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2018-11-24 04:18:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1090 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
},
{
closed = 1;
nodes = (
"1088 -426 LINE",
"1229 -412 LINE",
"1227 559 LINE",
"1088 541 LINE"
);
},
{
closed = 1;
nodes = (
"1137 -426 LINE",
"1147 -426 OFFCURVE",
"1158 -426 OFFCURVE",
"1169 -426 CURVE SMOOTH",
"1288 -426 OFFCURVE",
"1382 -336 OFFCURVE",
"1382 -227 CURVE SMOOTH",
"1382 -115 OFFCURVE",
"1286 -27 OFFCURVE",
"1169 -27 CURVE SMOOTH",
"1154 -27 OFFCURVE",
"1138 -28 OFFCURVE",
"1124 -31 CURVE",
"1126 -90 LINE",
"1139 -86 OFFCURVE",
"1153 -85 OFFCURVE",
"1168 -85 CURVE SMOOTH",
"1250 -85 OFFCURVE",
"1317 -147 OFFCURVE",
"1317 -224 CURVE SMOOTH",
"1317 -301 OFFCURVE",
"1250 -364 OFFCURVE",
"1168 -364 CURVE SMOOTH",
"1157 -364 OFFCURVE",
"1145 -363 OFFCURVE",
"1135 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"1086 -426 LINE",
"1158 -426 LINE",
"1187 -385 LINE",
"1088 -385 LINE"
);
}
);
width = 600;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2018-11-24 04:22:17 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"278 1189 LINE",
"278 -170 LINE",
"419 -170 LINE",
"419 487 LINE SMOOTH",
"419 583 OFFCURVE",
"428 653 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"531 1042 OFFCURVE",
"419 894 CURVE",
"419 1189 LINE"
);
},
{
closed = 1;
nodes = (
"419 1139 LINE",
"419 1318 LINE",
"229 1318 LINE",
"229 1442 LINE",
"55 1442 LINE",
"55 1589 LINE",
"-88 1589 LINE",
"-88 1374 LINE",
"58 1374 LINE",
"58 1318 LINE",
"57 1198 LINE",
"278 1198 LINE",
"278 1139 LINE"
);
}
);
width = 600;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2018-11-24 04:20:57 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 -426 LINE",
"419 -426 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 -426 LINE",
"418 -426 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 0 LINE",
"1227 0 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
}
);
width = 600;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2018-11-24 04:22:02 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1368 LINE",
"-3 1248 LINE",
"278 1248 LINE",
"278 0 LINE",
"419 0 LINE",
"419 1248 LINE",
"419 1368 LINE",
"139 1368 LINE",
"139 1492 LINE",
"-2 1492 LINE"
);
},
{
closed = 1;
nodes = (
"278 0 LINE",
"418 0 LINE",
"418 399 LINE SMOOTH",
"418 542 OFFCURVE",
"425 641 OFFCURVE",
"438 695 CURVE SMOOTH",
"478 861 OFFCURVE",
"629 987 OFFCURVE",
"798 987 CURVE SMOOTH",
"946 987 OFFCURVE",
"1038 914 OFFCURVE",
"1072 770 CURVE SMOOTH",
"1082 728 OFFCURVE",
"1088 644 OFFCURVE",
"1088 519 CURVE SMOOTH",
"1088 -426 LINE",
"1227 -426 LINE",
"1227 560 LINE SMOOTH",
"1227 856 OFFCURVE",
"1169 972 OFFCURVE",
"1043 1054 CURVE SMOOTH",
"980 1095 OFFCURVE",
"907 1116 OFFCURVE",
"826 1116 CURVE SMOOTH",
"666 1116 OFFCURVE",
"530 1042 OFFCURVE",
"418 893 CURVE",
"418 1368 LINE",
"278 1368 LINE"
);
},
{
closed = 1;
nodes = (
"824 -406 LINE",
"866 -406 LINE",
"866 -303 LINE",
"824 -303 LINE"
);
},
{
closed = 1;
nodes = (
"824 -426 LINE",
"1213 -426 LINE",
"1213 -376 LINE",
"824 -376 LINE"
);
}
);
width = 1200;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2018-11-24 04:22:44 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 1245;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2018-11-24 04:23:26 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"1074 470 LINE",
"1217 470 LINE",
"1217 685 LINE",
"1074 685 LINE"
);
}
);
width = 1245;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2018-11-24 04:23:51 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"1087 1 LINE",
"1230 1 LINE",
"1230 216 LINE",
"1087 216 LINE"
);
}
);
width = 1245;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2018-11-24 04:24:11 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 1041;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2018-11-24 04:24:38 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 600;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2018-11-24 04:30:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 406 LINE",
"279 -110 LINE",
"420 -110 LINE",
"420 407 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"279 407 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 406 LINE"
);
},
{
closed = 1;
nodes = (
"138 363 LINE",
"420 363 LINE",
"420 409 LINE",
"138 409 LINE"
);
}
);
width = 600;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2018-11-24 04:26:30 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 -420 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 -420 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 600;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2018-11-24 04:26:45 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"11 503 LINE",
"154 503 LINE",
"154 718 LINE",
"11 718 LINE"
);
}
);
width = 600;
}
);
unicode = 12AF;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2018-11-24 04:27:48 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -420 LINE",
"1090 -420 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"701 -406 LINE",
"743 -406 LINE",
"743 -303 LINE",
"701 -303 LINE"
);
},
{
closed = 1;
nodes = (
"701 -426 LINE",
"1090 -426 LINE",
"1090 -376 LINE",
"701 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 12B3;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2018-11-24 04:29:22 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 1245;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2018-11-24 04:29:40 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"1074 470 LINE",
"1217 470 LINE",
"1217 685 LINE",
"1074 685 LINE"
);
}
);
width = 1245;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2018-11-24 04:29:52 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"1087 1 LINE",
"1230 1 LINE",
"1230 216 LINE",
"1087 216 LINE"
);
}
);
width = 1245;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2018-11-24 04:30:05 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 1041;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2018-11-24 04:30:22 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 600;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2018-11-24 04:30:44 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 406 LINE",
"279 -100 LINE",
"420 -100 LINE",
"420 407 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
},
{
closed = 1;
nodes = (
"279 407 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 406 LINE"
);
},
{
closed = 1;
nodes = (
"138 363 LINE",
"420 363 LINE",
"420 409 LINE",
"138 409 LINE"
);
}
);
width = 600;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2018-11-24 04:31:09 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 -420 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 -420 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 600;
}
);
unicode = 12BE;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2018-11-24 04:32:13 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-89 1257 LINE",
"402 1257 LINE",
"402 1299 LINE",
"-89 1299 LINE"
);
},
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 -426 LINE",
"1090 -426 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1 980 LINE",
"615 980 LINE",
"615 1116 LINE",
"1 1116 LINE"
);
},
{
closed = 1;
nodes = (
"1 1095 LINE",
"129 1095 LINE",
"129 1257 LINE",
"1 1257 LINE"
);
}
);
width = 1041;
}
);
unicode = 12C3;
},
{
glyphname = "wa-ethiopic";
lastChange = "2018-11-24 04:32:25 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
}
);
width = 2682;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2018-11-24 04:33:22 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1823 -3 LINE",
"2314 -3 LINE",
"2314 113 LINE",
"1823 113 LINE"
);
},
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
}
);
width = 2682;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2018-11-24 04:34:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1095 -412 LINE",
"1238 -412 LINE",
"1238 559 LINE",
"1095 541 LINE"
);
},
{
closed = 1;
nodes = (
"1228 -412 LINE",
"1413 -412 LINE",
"1413.282 -224 LINE",
"1227.609 -224 LINE"
);
}
);
width = 600;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2018-11-24 04:34:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1095 -412 LINE",
"1238 -412 LINE",
"1238 559 LINE",
"1095 541 LINE"
);
}
);
width = 600;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2018-11-24 04:35:12 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1105 -426 LINE",
"1248 -412 LINE",
"1248 559 LINE",
"1105 541 LINE"
);
},
{
closed = 1;
nodes = (
"1156 -426 LINE",
"1166 -426 OFFCURVE",
"1177 -426 OFFCURVE",
"1188 -426 CURVE SMOOTH",
"1307 -426 OFFCURVE",
"1401 -336 OFFCURVE",
"1401 -227 CURVE SMOOTH",
"1401 -115 OFFCURVE",
"1305 -27 OFFCURVE",
"1188 -27 CURVE SMOOTH",
"1173 -27 OFFCURVE",
"1157 -28 OFFCURVE",
"1143 -31 CURVE",
"1145 -90 LINE",
"1158 -86 OFFCURVE",
"1172 -85 OFFCURVE",
"1187 -85 CURVE SMOOTH",
"1269 -85 OFFCURVE",
"1336 -147 OFFCURVE",
"1336 -224 CURVE SMOOTH",
"1336 -301 OFFCURVE",
"1269 -364 OFFCURVE",
"1187 -364 CURVE SMOOTH",
"1176 -364 OFFCURVE",
"1164 -363 OFFCURVE",
"1154 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"1105 -426 LINE",
"1177 -426 LINE",
"1206 -385 LINE",
"1105 -385 LINE"
);
}
);
width = 1245;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2018-11-24 04:35:40 +0000";
layers = (
{
components = (
{
name = _part.hat;
transform = "{1, 0, 0, 1, 1680, -595}";
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 933 CURVE SMOOTH",
"1155 822 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1672 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 823 OFFCURVE",
"2088 934 CURVE SMOOTH",
"1979 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1672 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2096 782 OFFCURVE",
"2096 538 CURVE SMOOTH",
"2096 381 OFFCURVE",
"2014 235 OFFCURVE",
"1885 161 CURVE SMOOTH",
"1820 124 OFFCURVE",
"1749 105 OFFCURVE",
"1672 105 CURVE SMOOTH",
"1517 105 OFFCURVE",
"1381 182 OFFCURVE",
"1305 318 CURVE SMOOTH",
"1267 386 OFFCURVE",
"1248 459 OFFCURVE",
"1248 538 CURVE SMOOTH",
"1248 782 OFFCURVE",
"1440 979 OFFCURVE",
"1672 979 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2018-11-24 04:35:56 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1504 1116 OFFCURVE",
"1365 1055 OFFCURVE",
"1255 934 CURVE SMOOTH",
"1155 823 OFFCURVE",
"1105 692 OFFCURVE",
"1105 541 CURVE SMOOTH",
"1105 237 OFFCURVE",
"1339 -28 OFFCURVE",
"1671 -28 CURVE SMOOTH",
"2004 -28 OFFCURVE",
"2238 237 OFFCURVE",
"2238 541 CURVE SMOOTH",
"2238 692 OFFCURVE",
"2188 822 OFFCURVE",
"2088 933 CURVE SMOOTH",
"1978 1055 OFFCURVE",
"1839 1116 OFFCURVE",
"1671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1903 979 OFFCURVE",
"2095 782 OFFCURVE",
"2095 538 CURVE SMOOTH",
"2095 459 OFFCURVE",
"2076 386 OFFCURVE",
"2038 318 CURVE SMOOTH",
"1962 182 OFFCURVE",
"1826 105 OFFCURVE",
"1671 105 CURVE SMOOTH",
"1594 105 OFFCURVE",
"1523 124 OFFCURVE",
"1458 161 CURVE SMOOTH",
"1329 235 OFFCURVE",
"1247 381 OFFCURVE",
"1247 538 CURVE SMOOTH",
"1247 782 OFFCURVE",
"1440 979 OFFCURVE",
"1671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"363 1055 OFFCURVE",
"254 934 CURVE SMOOTH",
"154 823 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"670 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 822 OFFCURVE",
"1087 933 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"670 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1094 782 OFFCURVE",
"1094 538 CURVE SMOOTH",
"1094 459 OFFCURVE",
"1075 386 OFFCURVE",
"1037 318 CURVE SMOOTH",
"961 182 OFFCURVE",
"825 105 OFFCURVE",
"670 105 CURVE SMOOTH",
"593 105 OFFCURVE",
"522 124 OFFCURVE",
"457 161 CURVE SMOOTH",
"328 235 OFFCURVE",
"246 381 OFFCURVE",
"246 538 CURVE SMOOTH",
"246 782 OFFCURVE",
"439 979 OFFCURVE",
"670 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1104 559 LINE",
"1104 -412 LINE",
"1247 -412 LINE",
"1247 541 LINE"
);
},
{
closed = 1;
nodes = (
"929 -224 LINE",
"929 -412 LINE",
"1114 -412 LINE",
"1114 -224 LINE"
);
}
);
width = 600;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2018-11-24 04:37:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1462 1116 OFFCURVE",
"1323 1055 OFFCURVE",
"1213 934 CURVE SMOOTH",
"1113 823 OFFCURVE",
"1063 692 OFFCURVE",
"1063 541 CURVE SMOOTH",
"1063 237 OFFCURVE",
"1297 -28 OFFCURVE",
"1629 -28 CURVE SMOOTH",
"1962 -28 OFFCURVE",
"2196 237 OFFCURVE",
"2196 541 CURVE SMOOTH",
"2196 692 OFFCURVE",
"2146 822 OFFCURVE",
"2046 933 CURVE SMOOTH",
"1936 1055 OFFCURVE",
"1797 1116 OFFCURVE",
"1629 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1861 979 OFFCURVE",
"2053 782 OFFCURVE",
"2053 538 CURVE SMOOTH",
"2053 459 OFFCURVE",
"2034 386 OFFCURVE",
"1996 318 CURVE SMOOTH",
"1920 182 OFFCURVE",
"1784 105 OFFCURVE",
"1629 105 CURVE SMOOTH",
"1552 105 OFFCURVE",
"1481 124 OFFCURVE",
"1416 161 CURVE SMOOTH",
"1287 235 OFFCURVE",
"1205 381 OFFCURVE",
"1205 538 CURVE SMOOTH",
"1205 782 OFFCURVE",
"1398 979 OFFCURVE",
"1629 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"461 1116 OFFCURVE",
"321 1055 OFFCURVE",
"212 934 CURVE SMOOTH",
"112 823 OFFCURVE",
"62 692 OFFCURVE",
"62 541 CURVE SMOOTH",
"62 237 OFFCURVE",
"296 -28 OFFCURVE",
"628 -28 CURVE SMOOTH",
"961 -28 OFFCURVE",
"1195 237 OFFCURVE",
"1195 541 CURVE SMOOTH",
"1195 692 OFFCURVE",
"1145 822 OFFCURVE",
"1045 933 CURVE SMOOTH",
"935 1055 OFFCURVE",
"796 1116 OFFCURVE",
"628 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"860 979 OFFCURVE",
"1052 782 OFFCURVE",
"1052 538 CURVE SMOOTH",
"1052 459 OFFCURVE",
"1033 386 OFFCURVE",
"995 318 CURVE SMOOTH",
"919 182 OFFCURVE",
"783 105 OFFCURVE",
"628 105 CURVE SMOOTH",
"551 105 OFFCURVE",
"480 124 OFFCURVE",
"415 161 CURVE SMOOTH",
"286 235 OFFCURVE",
"204 381 OFFCURVE",
"204 538 CURVE SMOOTH",
"204 782 OFFCURVE",
"397 979 OFFCURVE",
"628 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1062 559 LINE",
"1062 -412 LINE",
"1205 -412 LINE",
"1205 541 LINE"
);
},
{
closed = 1;
nodes = (
"887 -224 LINE",
"887 -412 LINE",
"1072 -412 LINE",
"1072 -224 LINE"
);
},
{
closed = 1;
nodes = (
"-49 461 LINE",
"94 461 LINE",
"94 676 LINE",
"-49 676 LINE"
);
}
);
width = 2300;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2018-11-24 00:15:55 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 1341;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2018-11-24 04:37:49 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1208 484 LINE",
"1351 484 LINE",
"1351 699 LINE",
"1208 699 LINE"
);
}
);
width = 1341;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2018-11-24 04:38:17 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1095 -412 LINE",
"1238 -412 LINE",
"1238 559 LINE",
"1095 541 LINE"
);
},
{
closed = 1;
nodes = (
"1228 -412 LINE",
"1413 -412 LINE",
"1413.282 -224 LINE",
"1227.609 -224 LINE"
);
},
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
}
);
width = 1341;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2018-11-24 04:38:35 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1095 -412 LINE",
"1238 -412 LINE",
"1238 559 LINE",
"1095 541 LINE"
);
},
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2018-11-24 04:39:12 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1094 -427 LINE",
"1237 -413 LINE",
"1236 558 LINE",
"1095 540 LINE"
);
},
{
closed = 1;
nodes = (
"1145 -427 LINE",
"1155 -427 OFFCURVE",
"1166 -427 OFFCURVE",
"1177 -427 CURVE SMOOTH",
"1296 -427 OFFCURVE",
"1390 -337 OFFCURVE",
"1390 -228 CURVE SMOOTH",
"1390 -116 OFFCURVE",
"1294 -28 OFFCURVE",
"1177 -28 CURVE SMOOTH",
"1162 -28 OFFCURVE",
"1146 -29 OFFCURVE",
"1132 -32 CURVE",
"1134 -91 LINE",
"1147 -87 OFFCURVE",
"1161 -86 OFFCURVE",
"1176 -86 CURVE SMOOTH",
"1258 -86 OFFCURVE",
"1325 -148 OFFCURVE",
"1325 -225 CURVE SMOOTH",
"1325 -302 OFFCURVE",
"1258 -365 OFFCURVE",
"1176 -365 CURVE SMOOTH",
"1165 -365 OFFCURVE",
"1153 -364 OFFCURVE",
"1143 -362 CURVE"
);
},
{
closed = 1;
nodes = (
"1094 -427 LINE",
"1166 -427 LINE",
"1195 -386 LINE",
"1094 -386 LINE"
);
}
);
width = 600;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2018-11-24 04:39:41 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"606 1096 LINE",
"749 1096 LINE",
"749 1311 LINE",
"606 1311 LINE"
);
}
);
width = 1341;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2018-11-24 04:40:55 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"604 -422 LINE",
"747 -422 LINE",
"747 -16 LINE",
"604 -16 LINE"
);
},
{
closed = 1;
nodes = (
"375 -422 LINE",
"650 -422 LINE",
"650 -310 LINE",
"375 -310 LINE"
);
},
{
closed = 1;
nodes = (
"503 1116 OFFCURVE",
"364 1055 OFFCURVE",
"254 933 CURVE SMOOTH",
"154 822 OFFCURVE",
"104 692 OFFCURVE",
"104 541 CURVE SMOOTH",
"104 237 OFFCURVE",
"338 -28 OFFCURVE",
"671 -28 CURVE SMOOTH",
"1003 -28 OFFCURVE",
"1237 237 OFFCURVE",
"1237 541 CURVE SMOOTH",
"1237 692 OFFCURVE",
"1187 823 OFFCURVE",
"1087 934 CURVE SMOOTH",
"977 1055 OFFCURVE",
"838 1116 OFFCURVE",
"671 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"902 979 OFFCURVE",
"1095 782 OFFCURVE",
"1095 538 CURVE SMOOTH",
"1095 381 OFFCURVE",
"1013 235 OFFCURVE",
"884 161 CURVE SMOOTH",
"819 124 OFFCURVE",
"748 105 OFFCURVE",
"671 105 CURVE SMOOTH",
"516 105 OFFCURVE",
"380 182 OFFCURVE",
"304 318 CURVE SMOOTH",
"266 386 OFFCURVE",
"247 459 OFFCURVE",
"247 538 CURVE SMOOTH",
"247 782 OFFCURVE",
"439 979 OFFCURVE",
"671 979 CURVE SMOOTH"
);
}
);
width = 1341;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2018-11-24 04:41:08 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
}
);
width = 600;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2018-11-24 04:41:23 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1259 473 LINE",
"1259 616 LINE"
);
}
);
width = 600;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2018-11-24 04:41:52 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"1085 1 LINE",
"1186 1 LINE",
"1186 201 LINE",
"1085 201 LINE"
);
}
);
width = 1234;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2018-11-24 04:42:15 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 -426 LINE",
"1086 -426 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
}
);
width = 1180;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2018-11-24 04:42:34 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"942 -426 LINE",
"1085 -412 LINE",
"1085 559 LINE",
"942 541 LINE"
);
},
{
closed = 1;
nodes = (
"993 -426 LINE",
"1003 -426 OFFCURVE",
"1014 -426 OFFCURVE",
"1025 -426 CURVE SMOOTH",
"1144 -426 OFFCURVE",
"1238 -336 OFFCURVE",
"1238 -227 CURVE SMOOTH",
"1238 -115 OFFCURVE",
"1142 -27 OFFCURVE",
"1025 -27 CURVE SMOOTH",
"1010 -27 OFFCURVE",
"994 -28 OFFCURVE",
"980 -31 CURVE",
"982 -90 LINE",
"995 -86 OFFCURVE",
"1009 -85 OFFCURVE",
"1024 -85 CURVE SMOOTH",
"1106 -85 OFFCURVE",
"1173 -147 OFFCURVE",
"1173 -224 CURVE SMOOTH",
"1173 -301 OFFCURVE",
"1106 -364 OFFCURVE",
"1024 -364 CURVE SMOOTH",
"1013 -364 OFFCURVE",
"1001 -363 OFFCURVE",
"991 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"942 -426 LINE",
"1014 -426 LINE",
"1043 -385 LINE",
"942 -385 LINE"
);
}
);
width = 600;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2018-11-24 04:43:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"47 887 LINE",
"148 887 LINE",
"148 1087 LINE",
"47 1087 LINE"
);
}
);
width = 600;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2018-11-24 04:43:23 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 -426 LINE",
"286 -426 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
}
);
width = 600;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2018-11-24 04:43:58 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 -400 LINE",
"1086 -400 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"698 -406 LINE",
"740 -406 LINE",
"740 -303 LINE",
"698 -303 LINE"
);
},
{
closed = 1;
nodes = (
"698 -426 LINE",
"1087 -426 LINE",
"1087 -376 LINE",
"698 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2018-11-24 04:44:47 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
}
);
width = 600;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2018-11-24 04:45:03 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1259 473 LINE",
"1259 616 LINE"
);
}
);
width = 600;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2018-11-24 04:45:13 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"1085 1 LINE",
"1186 1 LINE",
"1186 201 LINE",
"1085 201 LINE"
);
}
);
width = 1234;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2018-11-24 04:45:27 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 -426 LINE",
"1086 -426 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
}
);
width = 1180;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2018-11-24 04:45:37 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"942 -426 LINE",
"1085 -412 LINE",
"1085 559 LINE",
"942 541 LINE"
);
},
{
closed = 1;
nodes = (
"993 -426 LINE",
"1003 -426 OFFCURVE",
"1014 -426 OFFCURVE",
"1025 -426 CURVE SMOOTH",
"1144 -426 OFFCURVE",
"1238 -336 OFFCURVE",
"1238 -227 CURVE SMOOTH",
"1238 -115 OFFCURVE",
"1142 -27 OFFCURVE",
"1025 -27 CURVE SMOOTH",
"1010 -27 OFFCURVE",
"994 -28 OFFCURVE",
"980 -31 CURVE",
"982 -90 LINE",
"995 -86 OFFCURVE",
"1009 -85 OFFCURVE",
"1024 -85 CURVE SMOOTH",
"1106 -85 OFFCURVE",
"1173 -147 OFFCURVE",
"1173 -224 CURVE SMOOTH",
"1173 -301 OFFCURVE",
"1106 -364 OFFCURVE",
"1024 -364 CURVE SMOOTH",
"1013 -364 OFFCURVE",
"1001 -363 OFFCURVE",
"991 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"942 -426 LINE",
"1014 -426 LINE",
"1043 -385 LINE",
"942 -385 LINE"
);
}
);
width = 600;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2018-11-24 04:46:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"132 1058 LINE",
"192 1058 LINE",
"192 1293 LINE",
"132 1293 LINE"
);
},
{
closed = 1;
nodes = (
"31 1257 LINE",
"299 1257 LINE",
"299 1294 LINE",
"31 1294 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"47 887 LINE",
"148 887 LINE",
"148 1087 LINE",
"47 1087 LINE"
);
}
);
width = 600;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2018-11-24 04:46:39 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 -426 LINE",
"286 -426 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 0 LINE",
"1086 0 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
}
);
width = 600;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2018-11-24 04:46:56 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 888 LINE",
"1186 888 LINE",
"1186 1088 LINE",
"1085 1088 LINE"
);
},
{
closed = 1;
nodes = (
"57 888 LINE",
"158 888 LINE",
"158 1088 LINE",
"57 1088 LINE"
);
},
{
closed = 1;
nodes = (
"143 0 LINE",
"286 0 LINE",
"286 368 LINE",
"286 929 LINE",
"286 1088 LINE",
"143 1088 LINE"
);
},
{
closed = 1;
nodes = (
"943 -400 LINE",
"1086 -400 LINE",
"1086 368 LINE",
"1086 929 LINE",
"1086 1088 LINE",
"943 1088 LINE"
);
},
{
closed = 1;
nodes = (
"161 616 LINE",
"161 473 LINE",
"529 473 LINE",
"1090 473 LINE",
"1069 473 LINE",
"1069 616 LINE"
);
},
{
closed = 1;
nodes = (
"698 -406 LINE",
"740 -406 LINE",
"740 -303 LINE",
"698 -303 LINE"
);
},
{
closed = 1;
nodes = (
"698 -426 LINE",
"1087 -426 LINE",
"1087 -376 LINE",
"698 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2018-11-24 00:23:33 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
}
);
width = 1397;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2018-11-24 04:47:17 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"222 -179 LINE",
"598 -179 LINE",
"598 -85 LINE",
"222 -85 LINE"
);
}
);
width = 600;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2018-11-24 04:47:40 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"222 -179 LINE",
"598 -179 LINE",
"598 -85 LINE",
"222 -85 LINE"
);
},
{
closed = 1;
nodes = (
"480 -245 LINE",
"850 -245 LINE",
"850 -171 LINE",
"480 -171 LINE"
);
}
);
width = 600;
}
);
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2018-11-24 04:48:13 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"68 -426 LINE",
"169 -426 LINE",
"169 -226 LINE",
"68 -226 LINE"
);
}
);
width = 600;
}
);
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2018-11-24 04:49:34 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"214 -187 LINE",
"655 -187 LINE",
"669 -94 LINE",
"232 -94 LINE"
);
},
{
closed = 1;
nodes = (
"606 -105 OFFCURVE",
"607 -115 OFFCURVE",
"607 -126 CURVE SMOOTH",
"607 -208 OFFCURVE",
"544 -275 OFFCURVE",
"467 -275 CURVE SMOOTH",
"390 -275 OFFCURVE",
"328 -208 OFFCURVE",
"328 -126 CURVE SMOOTH",
"328 -111 OFFCURVE",
"325 -110 OFFCURVE",
"329 -97 CURVE",
"271 -96 LINE",
"268 -110 OFFCURVE",
"270 -112 OFFCURVE",
"270 -127 CURVE SMOOTH",
"270 -244 OFFCURVE",
"358 -340 OFFCURVE",
"470 -340 CURVE SMOOTH",
"579 -340 OFFCURVE",
"669 -246 OFFCURVE",
"669 -127 CURVE SMOOTH",
"669 -116 OFFCURVE",
"669 -105 OFFCURVE",
"669 -95 CURVE",
"604 -95 LINE"
);
},
{
closed = 1;
nodes = (
"669 -116 LINE"
);
}
);
width = 600;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2018-11-24 04:57:08 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 -125 LINE",
"167 -214 OFFCURVE",
"167 -314 OFFCURVE",
"167 -426 CURVE",
"302 -426 LINE",
"302 -124 LINE"
);
},
{
closed = 1;
nodes = (
"876 138 OFFCURVE",
"806 120 OFFCURVE",
"731 120 CURVE SMOOTH",
"579 120 OFFCURVE",
"446 195 OFFCURVE",
"371 328 CURVE SMOOTH",
"333 395 OFFCURVE",
"315 467 OFFCURVE",
"315 544 CURVE SMOOTH",
"315 783 OFFCURVE",
"504 976 OFFCURVE",
"731 976 CURVE SMOOTH",
"957 976 OFFCURVE",
"1147 783 OFFCURVE",
"1147 544 CURVE SMOOTH",
"1147 390 OFFCURVE",
"1066 248 OFFCURVE",
"940 175 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"301 -124 LINE",
"301 166 LINE",
"402 82 OFFCURVE",
"550 21 OFFCURVE",
"731 29 CURVE SMOOTH",
"1146 48 OFFCURVE",
"1295 292 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1298 691 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH",
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"167 -125 LINE"
);
},
{
closed = 1;
nodes = (
"187 -318 LINE",
"292 -313 OFFCURVE",
"398 -302 OFFCURVE",
"504 -285 CURVE SMOOTH",
"848 -230 OFFCURVE",
"1170 -117 OFFCURVE",
"1389 19 CURVE",
"1365 171 LINE",
"1136 29 OFFCURVE",
"810 -86 OFFCURVE",
"463 -141 CURVE SMOOTH",
"371 -156 OFFCURVE",
"278 -165 OFFCURVE",
"187 -170 CURVE"
);
}
);
width = 1397;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2018-11-24 04:57:56 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1276 479 LINE",
"1377 479 LINE",
"1377 679 LINE",
"1276 679 LINE"
);
}
);
width = 600;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2018-11-24 04:58:21 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1037 1055 OFFCURVE",
"898 1116 OFFCURVE",
"731 1116 CURVE SMOOTH",
"563 1116 OFFCURVE",
"424 1055 OFFCURVE",
"314 933 CURVE SMOOTH",
"217 825 OFFCURVE",
"167 700 OFFCURVE",
"164 555 CURVE SMOOTH",
"164 547 OFFCURVE",
"165 311 OFFCURVE",
"168 -426 CURVE",
"301 -426 LINE",
"301 166 LINE",
"402 48 OFFCURVE",
"552 -28 OFFCURVE",
"731 -28 CURVE SMOOTH",
"1063 -28 OFFCURVE",
"1297 237 OFFCURVE",
"1297 541 CURVE SMOOTH",
"1297 692 OFFCURVE",
"1247 823 OFFCURVE",
"1147 934 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"879 124 OFFCURVE",
"808 105 OFFCURVE",
"731 105 CURVE SMOOTH",
"576 105 OFFCURVE",
"440 182 OFFCURVE",
"364 318 CURVE SMOOTH",
"326 386 OFFCURVE",
"307 459 OFFCURVE",
"307 538 CURVE SMOOTH",
"307 782 OFFCURVE",
"499 979 OFFCURVE",
"731 979 CURVE SMOOTH",
"962 979 OFFCURVE",
"1155 782 OFFCURVE",
"1155 538 CURVE SMOOTH",
"1155 381 OFFCURVE",
"1073 235 OFFCURVE",
"944 161 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1276 479 LINE",
"1377 479 LINE",
"1377 679 LINE",
"1276 679 LINE"
);
},
{
closed = 1;
nodes = (
"76 479 LINE",
"177 479 LINE",
"177 679 LINE",
"76 679 LINE"
);
}
);
width = 600;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2018-11-24 04:59:26 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
}
);
width = 1403;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2018-11-24 04:59:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1172 -268 LINE",
"1273 -268 LINE",
"1273 -68 LINE",
"1172 -68 LINE"
);
}
);
width = 1403;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2018-11-24 04:59:40 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1172 -425 LINE",
"1273 -425 LINE",
"1273 -225 LINE",
"1172 -225 LINE"
);
}
);
width = 600;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2018-11-24 04:59:49 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
}
);
width = 600;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2018-11-24 05:01:50 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1134 -427 LINE",
"1134 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1102 -427 LINE",
"1112 -427 OFFCURVE",
"1123 -427 OFFCURVE",
"1134 -427 CURVE SMOOTH",
"1253 -427 OFFCURVE",
"1347 -346 OFFCURVE",
"1347 -247 CURVE SMOOTH",
"1347 -146 OFFCURVE",
"1251 -67 OFFCURVE",
"1134 -67 CURVE",
"1119 -67 OFFCURVE",
"1103 -68 OFFCURVE",
"1089 -70 CURVE",
"1091 -124 LINE",
"1104 -120 OFFCURVE",
"1118 -119 OFFCURVE",
"1133 -119 CURVE SMOOTH",
"1215 -119 OFFCURVE",
"1282 -175 OFFCURVE",
"1282 -245 CURVE SMOOTH",
"1282 -314 OFFCURVE",
"1215 -371 OFFCURVE",
"1133 -371 CURVE SMOOTH",
"1122 -371 OFFCURVE",
"1110 -370 OFFCURVE",
"1100 -368 CURVE"
);
},
{
closed = 1;
nodes = (
"1047 -426 LINE",
"1119 -426 LINE"
);
}
);
width = 600;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2018-11-24 05:02:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1085 500 LINE",
"1186 500 LINE",
"1186 700 LINE",
"1085 700 LINE"
);
}
);
width = 600;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2018-11-24 05:02:45 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -226 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -421 LINE",
"182 -422 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -226 LINE"
);
}
);
width = 600;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2018-11-24 05:03:19 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"787 -406 LINE",
"829 -406 LINE",
"829 -303 LINE",
"787 -303 LINE"
);
},
{
closed = 1;
nodes = (
"787 -426 LINE",
"1176 -426 LINE",
"1176 -376 LINE",
"787 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2018-11-24 05:04:57 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
}
);
width = 1403;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2018-11-24 05:05:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1172 -268 LINE",
"1273 -268 LINE",
"1273 -68 LINE",
"1172 -68 LINE"
);
}
);
width = 1403;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2018-11-24 05:07:15 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1177 -426 LINE",
"1278 -426 LINE",
"1278 -226 LINE",
"1177 -226 LINE"
);
}
);
width = 1356;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2018-11-24 05:07:33 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
}
);
width = 1264;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2018-11-24 05:09:36 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1134 -427 LINE",
"1134 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1102 -427 LINE",
"1112 -427 OFFCURVE",
"1123 -427 OFFCURVE",
"1134 -427 CURVE SMOOTH",
"1253 -427 OFFCURVE",
"1347 -346 OFFCURVE",
"1347 -247 CURVE SMOOTH",
"1347 -146 OFFCURVE",
"1251 -67 OFFCURVE",
"1134 -67 CURVE",
"1119 -67 OFFCURVE",
"1103 -68 OFFCURVE",
"1089 -70 CURVE",
"1091 -124 LINE",
"1104 -120 OFFCURVE",
"1118 -119 OFFCURVE",
"1133 -119 CURVE SMOOTH",
"1215 -119 OFFCURVE",
"1282 -175 OFFCURVE",
"1282 -245 CURVE SMOOTH",
"1282 -314 OFFCURVE",
"1215 -371 OFFCURVE",
"1133 -371 CURVE SMOOTH",
"1122 -371 OFFCURVE",
"1110 -370 OFFCURVE",
"1100 -368 CURVE"
);
},
{
closed = 1;
nodes = (
"1047 -426 LINE",
"1119 -426 LINE"
);
}
);
width = 600;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2018-11-24 05:10:03 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
},
{
closed = 1;
nodes = (
"1094 500 LINE",
"1195 500 LINE",
"1195 700 LINE",
"1094 700 LINE"
);
}
);
width = 600;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2018-11-24 05:10:17 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -425 LINE",
"182 -426 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
}
);
width = 600;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2018-11-24 05:10:52 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -386 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -386 LINE"
);
},
{
closed = 1;
nodes = (
"793 -406 LINE",
"835 -406 LINE",
"835 -303 LINE",
"793 -303 LINE"
);
},
{
closed = 1;
nodes = (
"793 -426 LINE",
"1182 -426 LINE",
"1182 -376 LINE",
"793 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2018-11-24 05:11:15 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
},
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
}
);
width = 600;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2018-11-24 05:12:02 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1172 -268 LINE",
"1273 -268 LINE",
"1273 -68 LINE",
"1172 -68 LINE"
);
}
);
width = 1403;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2018-11-24 05:12:16 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1177 -426 LINE",
"1278 -426 LINE",
"1278 -226 LINE",
"1177 -226 LINE"
);
}
);
width = 1356;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2018-11-24 05:12:45 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -426 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
}
);
width = 1264;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2018-11-24 05:13:06 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1134 -427 LINE",
"1134 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -426 LINE"
);
},
{
closed = 1;
nodes = (
"1102 -427 LINE",
"1112 -427 OFFCURVE",
"1123 -427 OFFCURVE",
"1134 -427 CURVE SMOOTH",
"1253 -427 OFFCURVE",
"1347 -346 OFFCURVE",
"1347 -247 CURVE SMOOTH",
"1347 -146 OFFCURVE",
"1251 -67 OFFCURVE",
"1134 -67 CURVE",
"1119 -67 OFFCURVE",
"1103 -68 OFFCURVE",
"1089 -70 CURVE",
"1091 -124 LINE",
"1104 -120 OFFCURVE",
"1118 -119 OFFCURVE",
"1133 -119 CURVE SMOOTH",
"1215 -119 OFFCURVE",
"1282 -175 OFFCURVE",
"1282 -245 CURVE SMOOTH",
"1282 -314 OFFCURVE",
"1215 -371 OFFCURVE",
"1133 -371 CURVE SMOOTH",
"1122 -371 OFFCURVE",
"1110 -370 OFFCURVE",
"1100 -368 CURVE"
);
},
{
closed = 1;
nodes = (
"1047 -426 LINE",
"1119 -426 LINE"
);
}
);
width = 600;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2018-11-24 05:13:23 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
},
{
closed = 1;
nodes = (
"1094 500 LINE",
"1195 500 LINE",
"1195 700 LINE",
"1094 700 LINE"
);
}
);
width = 600;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2018-11-24 05:13:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -246 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -425 LINE",
"182 -426 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -246 LINE"
);
}
);
width = 600;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2018-11-24 05:14:14 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"167 1283 LINE",
"864 1283 LINE",
"864 1323 LINE",
"167 1323 LINE"
);
},
{
closed = 1;
nodes = (
"455 1063 LINE",
"579 1063 LINE",
"579 1307 LINE",
"455 1307 LINE"
);
},
{
closed = 1;
nodes = (
"896 848 OFFCURVE",
"980 697 OFFCURVE",
"980 542 CURVE SMOOTH",
"980 465 OFFCURVE",
"960 392 OFFCURVE",
"921 322 CURVE SMOOTH",
"843 182 OFFCURVE",
"701 100 OFFCURVE",
"549 100 CURVE SMOOTH",
"472 100 OFFCURVE",
"399 118 OFFCURVE",
"331 158 CURVE SMOOTH",
"320 164 OFFCURVE",
"309 171 OFFCURVE",
"299 178 CURVE",
"299 839 LINE SMOOTH",
"299 929 OFFCURVE",
"439 989 OFFCURVE",
"548 989 CURVE SMOOTH",
"626 989 OFFCURVE",
"698 962 OFFCURVE",
"764 924 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1182 -386 LINE",
"1182 -69 LINE",
"1173 -69 LINE",
"1173 -67 LINE",
"299 -67 LINE",
"299 39 LINE",
"379 -6 OFFCURVE",
"467 -28 OFFCURVE",
"563 -28 CURVE SMOOTH",
"871 -28 OFFCURVE",
"1121 227 OFFCURVE",
"1121 547 CURVE SMOOTH",
"1121 860 OFFCURVE",
"868 1116 OFFCURVE",
"559 1116 CURVE SMOOTH",
"459 1116 OFFCURVE",
"333 1087 OFFCURVE",
"260 1030 CURVE SMOOTH",
"153 946 OFFCURVE",
"161 870 OFFCURVE",
"161 821 CURVE SMOOTH",
"161 -69 LINE",
"44 -69 LINE",
"44 -263 LINE",
"182 -264 LINE",
"182 -205 LINE",
"1044 -205 LINE",
"1044 -386 LINE"
);
},
{
closed = 1;
nodes = (
"793 -406 LINE",
"835 -406 LINE",
"835 -303 LINE",
"793 -303 LINE"
);
},
{
closed = 1;
nodes = (
"793 -426 LINE",
"1182 -426 LINE",
"1182 -376 LINE",
"793 -376 LINE"
);
}
);
width = 600;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2018-11-24 00:28:30 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-2 1088 LINE",
"-2 1088 LINE",
"-72 1087 LINE",
"-73 968 LINE",
"278 968 LINE",
"278 0 LINE",
"419 0 LINE",
"419 968 LINE",
"419 1088 LINE",
"139 1088 LINE"
);
}
);
width = 694;
}
);
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 130F;
},
{
glyphname = "gwa-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1310;
},
{
glyphname = "gwi-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1312;
},
{
glyphname = "gwaa-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1313;
},
{
glyphname = "gwee-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1314;
},
{
glyphname = "gwe-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1315;
},
{
glyphname = "gga-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2018-11-23 22:45:53 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2018-11-24 00:29:43 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1089 0 LINE",
"1089 508 LINE SMOOTH",
"1089 632 OFFCURVE",
"1095 717 OFFCURVE",
"1109 764 CURVE SMOOTH",
"1149 897 OFFCURVE",
"1269 980 OFFCURVE",
"1425 980 CURVE SMOOTH",
"1581 980 OFFCURVE",
"1695 898 OFFCURVE",
"1736 775 CURVE SMOOTH",
"1750 733 OFFCURVE",
"1757 644 OFFCURVE",
"1757 508 CURVE SMOOTH",
"1757 0 LINE",
"1900 0 LINE",
"1900 534 LINE SMOOTH",
"1900 684 OFFCURVE",
"1883 797 OFFCURVE",
"1848 873 CURVE SMOOTH",
"1778 1025 OFFCURVE",
"1637 1116 OFFCURVE",
"1425 1116 CURVE SMOOTH",
"1319 1116 OFFCURVE",
"1231 1094 OFFCURVE",
"1160 1051 CURVE SMOOTH",
"1018 965 OFFCURVE",
"948 833 OFFCURVE",
"948 524 CURVE SMOOTH",
"948 0 LINE"
);
}
);
width = 2490;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2018-11-24 00:32:20 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"279 0 LINE",
"279 508 LINE SMOOTH",
"279 632 OFFCURVE",
"286 717 OFFCURVE",
"299 764 CURVE SMOOTH",
"336 898 OFFCURVE",
"459 980 OFFCURVE",
"615 980 CURVE SMOOTH",
"771 980 OFFCURVE",
"885 898 OFFCURVE",
"926 775 CURVE SMOOTH",
"940 733 OFFCURVE",
"947 644 OFFCURVE",
"947 508 CURVE SMOOTH",
"947 0 LINE",
"1090 0 LINE",
"1090 534 LINE SMOOTH",
"1090 684 OFFCURVE",
"1073 797 OFFCURVE",
"1038 873 CURVE SMOOTH",
"968 1025 OFFCURVE",
"827 1116 OFFCURVE",
"615 1116 CURVE SMOOTH",
"509 1116 OFFCURVE",
"421 1095 OFFCURVE",
"350 1051 CURVE SMOOTH",
"209 964 OFFCURVE",
"138 833 OFFCURVE",
"138 524 CURVE SMOOTH",
"138 0 LINE"
);
},
{
closed = 1;
nodes = (
"1089 0 LINE",
"1089 508 LINE SMOOTH",
"1089 632 OFFCURVE",
"1095 717 OFFCURVE",
"1109 764 CURVE SMOOTH",
"1149 897 OFFCURVE",
"1269 980 OFFCURVE",
"1425 980 CURVE SMOOTH",
"1581 980 OFFCURVE",
"1695 898 OFFCURVE",
"1736 775 CURVE SMOOTH",
"1750 733 OFFCURVE",
"1757 644 OFFCURVE",
"1757 508 CURVE SMOOTH",
"1757 0 LINE",
"1900 0 LINE",
"1900 534 LINE SMOOTH",
"1900 684 OFFCURVE",
"1883 797 OFFCURVE",
"1848 873 CURVE SMOOTH",
"1778 1025 OFFCURVE",
"1637 1116 OFFCURVE",
"1425 1116 CURVE SMOOTH",
"1319 1116 OFFCURVE",
"1231 1094 OFFCURVE",
"1160 1051 CURVE SMOOTH",
"1018 965 OFFCURVE",
"948 833 OFFCURVE",
"948 524 CURVE SMOOTH",
"948 0 LINE"
);
},
{
closed = 1;
nodes = (
"279 403 LINE",
"136 402 LINE",
"136 -6 LINE",
"187 -6 LINE SMOOTH",
"194 -6 OFFCURVE",
"201 -6 OFFCURVE",
"208 -6 CURVE SMOOTH",
"219 -6 LINE SMOOTH",
"338 -6 OFFCURVE",
"432 84 OFFCURVE",
"432 193 CURVE SMOOTH",
"432 285 OFFCURVE",
"367 361 OFFCURVE",
"279 385 CURVE"
);
},
{
closed = 1;
nodes = (
"279 323 LINE",
"331 301 OFFCURVE",
"367 253 OFFCURVE",
"367 196 CURVE SMOOTH",
"367 139 OFFCURVE",
"331 90 OFFCURVE",
"279 68 CURVE"
);
},
{
closed = 1;
nodes = (
"1903 403 LINE",
"1760 402 LINE",
"1760 -6 LINE",
"1811 -6 LINE SMOOTH",
"1818 -6 OFFCURVE",
"1825 -6 OFFCURVE",
"1832 -6 CURVE SMOOTH",
"1843 -6 LINE SMOOTH",
"1962 -6 OFFCURVE",
"2056 84 OFFCURVE",
"2056 193 CURVE SMOOTH",
"2056 285 OFFCURVE",
"1991 361 OFFCURVE",
"1903 385 CURVE"
);
},
{
closed = 1;
nodes = (
"1903 323 LINE",
"1955 301 OFFCURVE",
"1991 253 OFFCURVE",
"1991 196 CURVE SMOOTH",
"1991 139 OFFCURVE",
"1955 90 OFFCURVE",
"1903 68 CURVE"
);
}
);
width = 2490;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2018-11-24 01:15:27 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"173 1116 OFFCURVE",
"34 1055 OFFCURVE",
"-76 933 CURVE SMOOTH",
"-176 822 OFFCURVE",
"-226 692 OFFCURVE",
"-226 541 CURVE SMOOTH",
"-226 237 OFFCURVE",
"8 -28 OFFCURVE",
"341 -28 CURVE SMOOTH",
"673 -28 OFFCURVE",
"907 237 OFFCURVE",
"907 541 CURVE SMOOTH",
"907 692 OFFCURVE",
"857 823 OFFCURVE",
"757 934 CURVE SMOOTH",
"647 1055 OFFCURVE",
"508 1116 OFFCURVE",
"341 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"572 979 OFFCURVE",
"765 782 OFFCURVE",
"765 538 CURVE SMOOTH",
"765 381 OFFCURVE",
"683 235 OFFCURVE",
"554 161 CURVE SMOOTH",
"489 124 OFFCURVE",
"418 105 OFFCURVE",
"341 105 CURVE SMOOTH",
"186 105 OFFCURVE",
"50 182 OFFCURVE",
"-26 318 CURVE SMOOTH",
"-64 386 OFFCURVE",
"-83 459 OFFCURVE",
"-83 538 CURVE SMOOTH",
"-83 782 OFFCURVE",
"109 979 OFFCURVE",
"341 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"789 -414 LINE",
"784 -299 OFFCURVE",
"767 -209 OFFCURVE",
"738 -145 CURVE SMOOTH",
"668 7 OFFCURVE",
"527 98 OFFCURVE",
"315 98 CURVE SMOOTH",
"209 98 OFFCURVE",
"121 77 OFFCURVE",
"50 33 CURVE SMOOTH",
"-80 -46 OFFCURVE",
"-150 -163 OFFCURVE",
"-161 -421 CURVE",
"-20 -420 LINE",
"-17 -344 OFFCURVE",
"-11 -289 OFFCURVE",
"-1 -254 CURVE SMOOTH",
"39 -121 OFFCURVE",
"159 -38 OFFCURVE",
"315 -38 CURVE SMOOTH",
"471 -38 OFFCURVE",
"585 -120 OFFCURVE",
"626 -243 CURVE SMOOTH",
"636 -274 OFFCURVE",
"643 -332 OFFCURVE",
"646 -415 CURVE"
);
}
);
width = 600;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2018-11-24 01:15:02 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"173 1116 OFFCURVE",
"34 1055 OFFCURVE",
"-76 933 CURVE SMOOTH",
"-176 822 OFFCURVE",
"-226 692 OFFCURVE",
"-226 541 CURVE SMOOTH",
"-226 237 OFFCURVE",
"8 -28 OFFCURVE",
"341 -28 CURVE SMOOTH",
"673 -28 OFFCURVE",
"907 237 OFFCURVE",
"907 541 CURVE SMOOTH",
"907 692 OFFCURVE",
"857 823 OFFCURVE",
"757 934 CURVE SMOOTH",
"647 1055 OFFCURVE",
"508 1116 OFFCURVE",
"341 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"572 979 OFFCURVE",
"765 782 OFFCURVE",
"765 538 CURVE SMOOTH",
"765 381 OFFCURVE",
"683 235 OFFCURVE",
"554 161 CURVE SMOOTH",
"489 124 OFFCURVE",
"418 105 OFFCURVE",
"341 105 CURVE SMOOTH",
"186 105 OFFCURVE",
"50 182 OFFCURVE",
"-26 318 CURVE SMOOTH",
"-64 386 OFFCURVE",
"-83 459 OFFCURVE",
"-83 538 CURVE SMOOTH",
"-83 782 OFFCURVE",
"109 979 OFFCURVE",
"341 979 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"789 -414 LINE",
"784 -299 OFFCURVE",
"767 -209 OFFCURVE",
"738 -145 CURVE SMOOTH",
"668 7 OFFCURVE",
"527 98 OFFCURVE",
"315 98 CURVE SMOOTH",
"209 98 OFFCURVE",
"121 77 OFFCURVE",
"50 33 CURVE SMOOTH",
"-80 -46 OFFCURVE",
"-150 -163 OFFCURVE",
"-161 -421 CURVE",
"-20 -420 LINE",
"-17 -344 OFFCURVE",
"-11 -289 OFFCURVE",
"-1 -254 CURVE SMOOTH",
"39 -121 OFFCURVE",
"159 -38 OFFCURVE",
"315 -38 CURVE SMOOTH",
"471 -38 OFFCURVE",
"585 -120 OFFCURVE",
"626 -243 CURVE SMOOTH",
"636 -274 OFFCURVE",
"643 -332 OFFCURVE",
"646 -415 CURVE"
);
}
);
width = 600;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2018-11-24 00:58:16 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"-202 968 LINE",
"612 968 LINE",
"612 1089 LINE",
"-202 1089 LINE"
);
},
{
closed = 1;
nodes = (
"103 0 LINE",
"246 0 LINE",
"246 1088 LINE",
"103 1088 LINE"
);
}
);
width = 616;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1358;
},
{
glyphname = "mya-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1359;
},
{
glyphname = "fya-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 135A;
},
{
glyphname = "colon-ethiopic";
lastChange = "2018-11-24 04:12:33 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 1116 OFFCURVE",
"112 1064 OFFCURVE",
"112 1000 CURVE SMOOTH",
"112 936 OFFCURVE",
"164 884 OFFCURVE",
"228 884 CURVE SMOOTH",
"292 884 OFFCURVE",
"344 936 OFFCURVE",
"344 1000 CURVE SMOOTH",
"344 1064 OFFCURVE",
"292 1116 OFFCURVE",
"228 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 500 LINE",
"344 500 LINE",
"344 700 LINE",
"96 700 LINE"
);
}
);
width = 444;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2018-11-24 04:15:51 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 712 OFFCURVE",
"112 660 OFFCURVE",
"112 596 CURVE SMOOTH",
"112 532 OFFCURVE",
"164 480 OFFCURVE",
"228 480 CURVE SMOOTH",
"292 480 OFFCURVE",
"344 532 OFFCURVE",
"344 596 CURVE SMOOTH",
"344 660 OFFCURVE",
"292 712 OFFCURVE",
"228 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"90 887 LINE",
"338 887 LINE",
"338 1087 LINE",
"90 1087 LINE"
);
}
);
width = 455;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2018-11-24 04:13:57 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"97 616 OFFCURVE",
"45 564 OFFCURVE",
"45 500 CURVE SMOOTH",
"45 436 OFFCURVE",
"97 384 OFFCURVE",
"161 384 CURVE SMOOTH",
"225 384 OFFCURVE",
"277 436 OFFCURVE",
"277 500 CURVE SMOOTH",
"277 564 OFFCURVE",
"225 616 OFFCURVE",
"161 616 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"97 207 OFFCURVE",
"45 155 OFFCURVE",
"45 91 CURVE SMOOTH",
"45 27 OFFCURVE",
"97 -25 OFFCURVE",
"161 -25 CURVE SMOOTH",
"225 -25 OFFCURVE",
"277 27 OFFCURVE",
"277 91 CURVE SMOOTH",
"277 155 OFFCURVE",
"225 207 OFFCURVE",
"161 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397 616 OFFCURVE",
"345 564 OFFCURVE",
"345 500 CURVE SMOOTH",
"345 436 OFFCURVE",
"397 384 OFFCURVE",
"461 384 CURVE SMOOTH",
"525 384 OFFCURVE",
"577 436 OFFCURVE",
"577 500 CURVE SMOOTH",
"577 564 OFFCURVE",
"525 616 OFFCURVE",
"461 616 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397 207 OFFCURVE",
"345 155 OFFCURVE",
"345 91 CURVE SMOOTH",
"345 27 OFFCURVE",
"397 -25 OFFCURVE",
"461 -25 CURVE SMOOTH",
"525 -25 OFFCURVE",
"577 27 OFFCURVE",
"577 91 CURVE SMOOTH",
"577 155 OFFCURVE",
"525 207 OFFCURVE",
"461 207 CURVE SMOOTH"
);
}
);
width = 721;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2018-11-24 05:03:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 1116 OFFCURVE",
"112 1064 OFFCURVE",
"112 1000 CURVE SMOOTH",
"112 936 OFFCURVE",
"164 884 OFFCURVE",
"228 884 CURVE SMOOTH",
"292 884 OFFCURVE",
"344 936 OFFCURVE",
"344 1000 CURVE SMOOTH",
"344 1064 OFFCURVE",
"292 1116 OFFCURVE",
"228 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 500 LINE",
"521 500 LINE",
"521 700 LINE",
"273 700 LINE"
);
}
);
width = 600;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2018-11-24 04:14:26 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 1116 OFFCURVE",
"112 1064 OFFCURVE",
"112 1000 CURVE SMOOTH",
"112 936 OFFCURVE",
"164 884 OFFCURVE",
"228 884 CURVE SMOOTH",
"292 884 OFFCURVE",
"344 936 OFFCURVE",
"344 1000 CURVE SMOOTH",
"344 1064 OFFCURVE",
"292 1116 OFFCURVE",
"228 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 1116 OFFCURVE",
"112 1064 OFFCURVE",
"112 1000 CURVE SMOOTH",
"112 936 OFFCURVE",
"164 884 OFFCURVE",
"228 884 CURVE SMOOTH",
"292 884 OFFCURVE",
"344 936 OFFCURVE",
"344 1000 CURVE SMOOTH",
"344 1064 OFFCURVE",
"292 1116 OFFCURVE",
"228 1116 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 656 OFFCURVE",
"112 604 OFFCURVE",
"112 540 CURVE SMOOTH",
"112 476 OFFCURVE",
"164 424 OFFCURVE",
"228 424 CURVE SMOOTH",
"292 424 OFFCURVE",
"344 476 OFFCURVE",
"344 540 CURVE SMOOTH",
"344 604 OFFCURVE",
"292 656 OFFCURVE",
"228 656 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2018-11-24 04:15:23 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 696 OFFCURVE",
"112 644 OFFCURVE",
"112 580 CURVE SMOOTH",
"112 516 OFFCURVE",
"164 464 OFFCURVE",
"228 464 CURVE SMOOTH",
"292 464 OFFCURVE",
"344 516 OFFCURVE",
"344 580 CURVE SMOOTH",
"344 644 OFFCURVE",
"292 696 OFFCURVE",
"228 696 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 307 OFFCURVE",
"112 255 OFFCURVE",
"112 191 CURVE SMOOTH",
"112 127 OFFCURVE",
"164 75 OFFCURVE",
"228 75 CURVE SMOOTH",
"292 75 OFFCURVE",
"344 127 OFFCURVE",
"344 191 CURVE SMOOTH",
"344 255 OFFCURVE",
"292 307 OFFCURVE",
"228 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 842 LINE",
"347 842 LINE",
"347 1011 LINE",
"93 1011 LINE"
);
},
{
closed = 1;
nodes = (
"93 -248 LINE",
"347 -248 LINE",
"347 -79 LINE",
"93 -79 LINE"
);
}
);
width = 600;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2018-11-24 04:16:00 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"164 712 OFFCURVE",
"112 660 OFFCURVE",
"112 596 CURVE SMOOTH",
"112 532 OFFCURVE",
"164 480 OFFCURVE",
"228 480 CURVE SMOOTH",
"292 480 OFFCURVE",
"344 532 OFFCURVE",
"344 596 CURVE SMOOTH",
"344 660 OFFCURVE",
"292 712 OFFCURVE",
"228 712 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 207 OFFCURVE",
"112 155 OFFCURVE",
"112 91 CURVE SMOOTH",
"112 27 OFFCURVE",
"164 -25 OFFCURVE",
"228 -25 CURVE SMOOTH",
"292 -25 OFFCURVE",
"344 27 OFFCURVE",
"344 91 CURVE SMOOTH",
"344 155 OFFCURVE",
"292 207 OFFCURVE",
"228 207 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 1361;
},
{
glyphname = "geminVowellengthcomb-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
lastChange = "2018-11-23 22:45:54 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
width = 600;
}
);
unicode = 135E;
},
{
export = 0;
glyphname = _part.hat;
lastChange = "2018-11-23 23:44:24 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"536 1096 LINE",
"679 1096 LINE",
"679 1311 LINE",
"536 1311 LINE"
);
}
);
width = 1245;
}
);
},
{
export = 0;
glyphname = _part.hat.1;
lastChange = "2018-11-23 23:45:16 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"301 1306 LINE",
"903 1306 LINE",
"903 1344 LINE",
"301 1344 LINE"
);
}
);
width = 1245;
}
);
},
{
export = 0;
glyphname = _part.hee;
lastChange = "2018-11-23 23:15:28 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"947 -426 LINE",
"1090 -412 LINE",
"1090 559 LINE",
"947 541 LINE"
);
},
{
closed = 1;
nodes = (
"998 -426 LINE",
"1008 -426 OFFCURVE",
"1019 -426 OFFCURVE",
"1030 -426 CURVE SMOOTH",
"1149 -426 OFFCURVE",
"1243 -336 OFFCURVE",
"1243 -227 CURVE SMOOTH",
"1243 -115 OFFCURVE",
"1147 -27 OFFCURVE",
"1030 -27 CURVE SMOOTH",
"1015 -27 OFFCURVE",
"999 -28 OFFCURVE",
"985 -31 CURVE",
"987 -90 LINE",
"1000 -86 OFFCURVE",
"1014 -85 OFFCURVE",
"1029 -85 CURVE SMOOTH",
"1111 -85 OFFCURVE",
"1178 -147 OFFCURVE",
"1178 -224 CURVE SMOOTH",
"1178 -301 OFFCURVE",
"1111 -364 OFFCURVE",
"1029 -364 CURVE SMOOTH",
"1018 -364 OFFCURVE",
"1006 -363 OFFCURVE",
"996 -361 CURVE"
);
},
{
closed = 1;
nodes = (
"947 -426 LINE",
"1019 -426 LINE",
"1048 -385 LINE",
"947 -385 LINE"
);
}
);
width = 1245;
}
);
},
{
export = 0;
glyphname = _part.hi;
lastChange = "2018-11-23 23:21:04 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"1085 500 LINE",
"1186 500 LINE",
"1186 700 LINE",
"1085 700 LINE"
);
}
);
width = 1245;
}
);
},
{
export = 0;
glyphname = _part.huo;
lastChange = "2018-11-24 01:37:37 +0000";
layers = (
{
layerId = "F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D";
paths = (
{
closed = 1;
nodes = (
"716 -406 LINE",
"758 -406 LINE",
"758 -303 LINE",
"716 -303 LINE"
);
},
{
closed = 1;
nodes = (
"716 -426 LINE",
"1105 -426 LINE",
"1105 -376 LINE",
"716 -376 LINE"
);
}
);
width = 1249;
}
);
}
);
instances = (
{
customParameters = (
{
name = localizedStyleName;
value = "Catalan;Normal";
},
{
name = localizedStyleName;
value = "Catalan;Normal";
},
{
name = postscriptFullName;
value = "Century Gothic";
},
{
name = postscriptFontName;
value = CenturyGothic;
}
);
instanceInterpolations = {
"F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"F6FCABFB-DB8B-4A8A-BD05-D26D4B0CC58D" = {
A = {
T = -166;
V = -250;
W = -195;
Y = -250;
v = -150;
w = -133;
y = -147;
};
F = {
comma = -250;
period = -162;
A = -123;
};
L = {
T = -94;
V = -231;
W = -137;
Y = -186;
y = -47;
};
P = {
comma = -252;
period = -186;
A = -152;
};
R = {
T = 12;
V = -80;
W = 4;
Y = -41;
y = 66;
};
T = {
comma = -209;
hyphen = 0;
period = -145;
colon = 6;
semicolon = -59;
A = -166;
a = -106;
c = -104;
e = -100;
i = 63;
o = -100;
r = -61;
s = -47;
u = -94;
w = 14;
y = 10;
};
V = {
comma = -217;
hyphen = 0;
period = -154;
colon = -2;
semicolon = -68;
A = -250;
a = -213;
e = -207;
i = 10;
o = -207;
r = -82;
u = -82;
y = -51;
};
W = {
comma = -217;
hyphen = 0;
period = -152;
colon = -2;
semicolon = -68;
A = -150;
a = -102;
e = -96;
i = 12;
o = -94;
r = -59;
u = -61;
y = -4;
};
Y = {
comma = -199;
hyphen = 0;
period = -133;
colon = 18;
semicolon = -47;
A = -250;
a = -190;
e = -182;
i = 27;
o = -182;
p = -137;
q = -190;
u = -141;
v = -35;
};
f = {
f = 6;
};
r = {
comma = -215;
hyphen = 0;
period = -150;
c = -14;
d = -12;
e = -8;
f = 98;
g = 2;
h = 59;
m = 57;
n = 43;
o = -8;
q = -16;
};
};
};
manufacturer = codeHabesha;
unitsPerEm = 2048;
versionMajor = 0;
versionMinor = 350;
}

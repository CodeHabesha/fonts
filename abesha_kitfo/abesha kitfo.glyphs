{
.appVersion = "1141";
copyright = "Copyright Â© 2018 by Fasil Fikreab. All rights reserved.";
customParameters = (
{
name = panose;
value = (
2,
7,
3,
9,
2,
2,
5,
2,
4,
4
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
11,
13,
29,
30,
31,
32,
33,
38,
43,
44,
45,
46,
62,
63,
64,
67
);
},
{
name = codePageRanges;
value = (
1252,
1250,
1251,
1253,
1254,
1255,
1256,
1257,
1258,
869,
866,
865,
864,
863,
862,
861,
860,
857,
855,
852,
775,
737,
708,
850,
437
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
Oslash,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu1,
partialdiff,
summation,
product,
pi1,
integral,
ordfeminine,
ordmasculine,
Ohm,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
uni2206,
guillemotleft,
guillemotright,
ellipsis,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
lozenge,
ydieresis,
Ydieresis,
fraction,
Euro,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
Lslash,
lslash,
Scaron,
scaron,
Zcaron,
zcaron,
brokenbar,
Eth,
eth,
Yacute,
yacute,
Thorn,
thorn,
minus,
multiply,
onesuperior,
twosuperior,
threesuperior,
onehalf,
onequarter,
threequarters,
franc,
Gbreve,
gbreve,
Idotaccent,
Scedilla,
scedilla,
Cacute,
cacute,
Ccaron,
ccaron,
dmacron,
overscore,
middot,
Abreve,
abreve,
Aogonek,
aogonek,
Dcaron,
dcaron,
Dslash,
Eogonek,
eogonek,
Ecaron,
ecaron,
Lacute,
lacute,
Lcaron,
lcaron,
Ldot,
ldot,
Nacute,
nacute,
Ncaron,
ncaron,
Odblacute,
odblacute,
Racute,
racute,
Rcaron,
rcaron,
Sacute,
sacute,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Uring,
uring,
Udblacute,
udblacute,
Zacute,
zacute,
Zdot,
zdot,
Gamma,
Theta,
Phi,
alpha,
delta,
epsilon,
sigma,
tau,
phi,
underscoredbl,
exclamdbl,
nsuperior,
peseta,
arrowleft,
arrowup,
arrowright,
arrowdown,
arrowboth,
arrowupdn,
arrowupdnbse,
orthogonal,
intersection,
equivalence,
house,
revlogicalnot,
integraltp,
integralbt,
SF100000,
SF110000,
SF010000,
SF030000,
SF020000,
SF040000,
SF080000,
SF090000,
SF060000,
SF070000,
SF050000,
SF430000,
SF240000,
SF510000,
SF520000,
SF390000,
SF220000,
SF210000,
SF250000,
SF500000,
SF490000,
SF380000,
SF280000,
SF270000,
SF260000,
SF360000,
SF370000,
SF420000,
SF190000,
SF200000,
SF230000,
SF470000,
SF480000,
SF410000,
SF450000,
SF460000,
SF400000,
SF540000,
SF530000,
SF440000,
upblock,
dnblock,
block,
lfblock,
rtblock,
ltshade,
shade,
dkshade,
filledbox,
filledrect,
triagup,
triagrt,
triagdn,
triaglf,
circle,
invbullet,
invcircle,
smileface,
invsmileface,
sun,
female,
male,
spade,
club,
heart,
diamond,
musicalnote,
musicalnotedbl,
IJ,
ij,
napostrophe,
minute,
second,
afii61248,
afii61289,
H22073,
H18543,
H18551,
H18533,
openbullet,
Amacron,
amacron,
Ccircumflex,
ccircumflex,
Cdot,
cdot,
Emacron,
emacron,
Ebreve,
ebreve,
Edot,
edot,
Gcircumflex,
gcircumflex,
Gdot,
gdot,
Gcedilla,
gcedilla,
Hcircumflex,
hcircumflex,
Hbar,
hbar,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Jcircumflex,
jcircumflex,
Kcedilla,
kcedilla,
kgreenlandic,
Lcedilla,
lcedilla,
Ncedilla,
ncedilla,
Eng,
eng,
Omacron,
omacron,
Obreve,
obreve,
Rcedilla,
rcedilla,
Scircumflex,
scircumflex,
Tbar,
tbar,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
longs,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
anoteleia,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Ygrave,
ygrave,
quotereversed,
radicalex,
afii08941,
estimated,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
commaaccent,
undercommaaccent,
tonos,
dieresistonos,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Delta,
Epsilon,
Zeta,
Eta,
Iota,
Kappa,
Lambda,
Mu,
Nu,
Xi,
Omicron,
Pi,
Rho,
Sigma,
Tau,
Upsilon,
Chi,
Psi,
Omega,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
beta,
gamma,
zeta,
eta,
theta,
iota,
kappa,
lambda,
mu,
nu,
xi,
omicron,
rho,
sigma1,
upsilon,
chi,
psi,
omega,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
afii10023,
afii10051,
afii10052,
afii10053,
afii10054,
afii10055,
afii10056,
afii10057,
afii10058,
afii10059,
afii10060,
afii10061,
afii10062,
afii10145,
afii10017,
afii10018,
afii10019,
afii10020,
afii10021,
afii10022,
afii10024,
afii10025,
afii10026,
afii10027,
afii10028,
afii10029,
afii10030,
afii10031,
afii10032,
afii10033,
afii10034,
afii10035,
afii10036,
afii10037,
afii10038,
afii10039,
afii10040,
afii10041,
afii10042,
afii10043,
afii10044,
afii10045,
afii10046,
afii10047,
afii10048,
afii10049,
afii10065,
afii10066,
afii10067,
afii10068,
afii10069,
afii10070,
afii10072,
afii10073,
afii10074,
afii10075,
afii10076,
afii10077,
afii10078,
afii10079,
afii10080,
afii10081,
afii10082,
afii10083,
afii10084,
afii10085,
afii10086,
afii10087,
afii10088,
afii10089,
afii10090,
afii10091,
afii10092,
afii10093,
afii10094,
afii10095,
afii10096,
afii10097,
afii10071,
afii10099,
afii10100,
afii10101,
afii10102,
afii10103,
afii10104,
afii10105,
afii10106,
afii10107,
afii10108,
afii10109,
afii10110,
afii10193,
afii10050,
afii10098,
afii00208,
afii61352,
pi,
sheva,
hatafsegol,
hatafpatah,
hatafqamats,
hiriq,
tsere,
segol,
patah,
qamats,
holam,
qubuts,
dagesh,
meteg,
maqaf,
rafe,
paseq,
shindot,
sindot,
sofpasuq,
alef,
bet,
gimel,
dalet,
he,
vav,
zayin,
het,
tet,
yod,
finalkaf,
kaf,
lamed,
finalmem,
mem,
finalnun,
nun,
samekh,
ayin,
finalpe,
pe,
finaltsadi,
tsadi,
qof,
resh,
shin,
tav,
doublevav,
vavyod,
doubleyod,
geresh,
gershayim,
newsheqelsign,
"vav_holamhaser-hb",
"finalkaf_sheva-hb",
"finalkaf_qamats-hb",
"lamed_holam-hb",
"lamed_dagesh_holam-hb",
altayin,
shinshindot,
shinsindot,
shindageshshindot,
shindageshsindot,
alefpatah,
alefqamats,
alefmapiq,
betdagesh,
gimeldagesh,
daletdagesh,
hedagesh,
vavdagesh,
zayindagesh,
tetdagesh,
yoddagesh,
finalkafdagesh,
kafdagesh,
lameddagesh,
memdagesh,
nundagesh,
samekhdagesh,
finalpedagesh,
pedagesh,
tsadidagesh,
qofdagesh,
reshdagesh,
shindagesh,
tavdages,
vavholam,
betrafe,
kafrafe,
perafe,
aleflamed,
zerowidthnonjoiner,
zerowidthjoiner,
lefttorightmark,
righttoleftmark,
afii57388,
afii57403,
afii57407,
afii57409,
afii57440,
afii57451,
afii57452,
afii57453,
afii57454,
afii57455,
afii57456,
afii57457,
afii57458,
afii57392,
afii57393,
afii57394,
afii57395,
afii57396,
afii57397,
afii57398,
afii57399,
afii57400,
afii57401,
afii57381,
afii57461,
afii63167,
afii57459,
afii57543,
afii57534,
afii57494,
afii62843,
afii62844,
afii62845,
afii64240,
afii64241,
afii63954,
afii57382,
afii64242,
"fathatan_shadda-ar",
afii57504,
afii57369,
afii57370,
afii57371,
afii57372,
afii57373,
afii57374,
afii57375,
afii57391,
afii57471,
afii57460,
afii52258,
afii57506,
afii62958,
afii62956,
afii52957,
afii57505,
afii62889,
afii62887,
afii62888,
afii57507,
afii62961,
afii62959,
afii62960,
afii57508,
afii62962,
afii57567,
afii62964,
afii52305,
afii52306,
afii57509,
afii62967,
afii62965,
afii62966,
afii57555,
afii52364,
afii63753,
afii63754,
afii63759,
afii63763,
afii63795,
afii62891,
afii63808,
afii62938,
afii63810,
afii62942,
afii62947,
afii63813,
afii63823,
afii63824,
afii63833,
afii63844,
afii62882,
afii62883,
afii62884,
afii62885,
afii62886,
afii63846,
afii63849,
afii63850,
afii63851,
afii63852,
afii63855,
afii63856,
afii63761,
afii63882,
afii63825,
afii63885,
afii63888,
afii63896,
afii63897,
afii63898,
afii63899,
afii63900,
afii63901,
afii63902,
afii63903,
afii63904,
afii63905,
afii63906,
afii63908,
afii63910,
afii63912,
afii62927,
afii63941,
afii62939,
afii63943,
afii62943,
afii62946,
afii63946,
afii62951,
afii63948,
afii62953,
afii63950,
afii63951,
afii63952,
afii63953,
afii63956,
afii63958,
afii63959,
afii63960,
afii63961,
afii64046,
afii64058,
afii64059,
afii64060,
afii64061,
afii62945,
afii64184,
afii52399,
afii52400,
afii62753,
afii57411,
afii62754,
afii57412,
afii62755,
afii57413,
afii62756,
afii57414,
afii62759,
afii62757,
afii62758,
afii57415,
afii62760,
afii57416,
afii62763,
afii62761,
afii62762,
afii57417,
afii62764,
afii57418,
afii62767,
afii62765,
afii62766,
afii57419,
afii62770,
afii62768,
afii62769,
afii57420,
afii62773,
afii62771,
afii62772,
afii57421,
afii62776,
afii62774,
afii62775,
afii57422,
afii62779,
afii62777,
afii62778,
afii57423,
afii62780,
afii57424,
afii62781,
afii57425,
afii62782,
afii57426,
afii62783,
afii57427,
afii62786,
afii62784,
afii62785,
afii57428,
afii62789,
afii62787,
afii62788,
afii57429,
afii62792,
afii62790,
afii62791,
afii57430,
afii62795,
afii62793,
afii62794,
afii57431,
afii62798,
afii62796,
afii62797,
afii57432,
afii62801,
afii62799,
afii62800,
afii57433,
afii62804,
afii62802,
afii62803,
afii57434,
afii62807,
afii62805,
afii62806,
afii57441,
afii62810,
afii62808,
afii62809,
afii57442,
afii62813,
afii62811,
afii62812,
afii57443,
afii62816,
afii57410,
afii62815,
afii57444,
afii62819,
afii62817,
afii62818,
afii57445,
afii62822,
afii62820,
afii62821,
afii57446,
afii62825,
afii62823,
afii62824,
afii57447,
afii62828,
afii57470,
afii62827,
afii57448,
afii62829,
afii57449,
afii62830,
afii57450,
afii62833,
afii62831,
afii62832,
afii62834,
afii62835,
afii62836,
afii62837,
afii62838,
afii62839,
afii62840,
afii62841,
glyph1021,
"afii57543-2",
"afii57454-2",
"afii57451-2",
glyph1025,
glyph1026,
"afii57471-2",
"afii57458-2",
"afii57457-2",
"afii57494-2",
"afii57459-2",
"afii57455-2",
"afii57452-2",
glyph1034,
glyph1035,
glyph1036,
"afii62884-2",
"afii62881-2",
"afii62886-2",
"afii62883-2",
"afii62885-2",
"afii62882-2",
"afii57504-2",
"afii57456-2",
"afii57453-2",
glyph1046,
glyph1047,
"afii57543-3",
"afii57454-3",
"afii57451-3",
glyph1051,
glyph1052,
"afii57471-3",
"afii57458-3",
"afii57457-3",
"afii57494-3",
"afii57459-3",
"afii57455-3",
"afii57452-3",
glyph1060,
glyph1061,
glyph1062,
"afii62884-3",
"afii62881-3",
"afii62886-3",
"afii62883-3",
"afii62885-3",
"afii62882-3",
"afii57504-3",
"afii57456-3",
"afii57453-3",
glyph1072,
glyph1073,
"afii57543-4",
"afii57454-4",
"afii57451-4",
glyph1077,
glyph1078,
"afii57471-4",
"afii57458-4",
"afii57457-4",
"afii57494-4",
"afii57459-4",
"afii57455-4",
"afii57452-4",
glyph1086,
glyph1087,
glyph1088,
"afii62884-4",
"afii62881-4",
"afii62886-4",
"afii62883-4",
"afii62885-4",
"afii62882-4",
"afii57504-4",
"afii57456-4",
"afii57453-4",
glyph1098,
glyph1099,
glyph1100,
glyph1101,
glyph1102,
glyph1103,
glyph1104,
glyph1105,
afii57449.init,
glyph1107,
glyph1108,
glyph1109,
uni066F.init,
glyph1111,
glyph1112,
glyph1113,
glyph1114,
glyph1115,
glyph1116,
glyph1117,
glyph1118,
glyph1119,
glyph1120,
glyph1121,
glyph1122,
glyph1123,
glyph1124,
glyph1125,
glyph1126,
currency,
uniFFFC,
Ohorn,
ohorn,
Uhorn,
uhorn,
glyph1133,
glyph1134,
glyph1135,
uniF006,
uniF007,
uniF009,
combininghookabove,
uniF010,
uniF013,
uniF011,
uniF01C,
uniF015,
combiningtildeaccent,
glyph1146,
glyph1147,
uniF02C,
dongsign,
onethird,
twothirds,
uniF008,
glyph1153,
glyph1154,
uniF00F,
uniF012,
uniF014,
uniF016,
uniF017,
uniF018,
uniF019,
uniF01A,
uniF01B,
uniF01E,
uniF01F,
uniF020,
uniF021,
uniF022,
combininggraveaccent,
combiningacuteaccent,
uniF01D,
combiningdotbelow,
uniF023,
uniF029,
uniF02A,
uniF02B,
uniF024,
uniF025,
uniF026,
uniF027,
uniF028,
uniF02D,
uniF02E,
uniF02F,
uniF030,
Adotbelow,
adotbelow,
Ahookabove,
ahookabove,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflexhookabove,
acircumflexhookabove,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevehookabove,
abrevehookabove,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Ehookabove,
ehookabove,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflexhookabove,
ecircumflexhookabove,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Ihookabove,
ihookabove,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ohookabove,
ohookabove,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflexhookabove,
ocircumflexhookabove,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohornhookabove,
ohornhookabove,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Udotbelow,
udotbelow,
Uhookabove,
uhookabove,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhornhookabove,
uhornhookabove,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
Ydotbelow,
ydotbelow,
Yhookabove,
yhookabove,
Ytilde,
ytilde,
glyph1750,
glyph1751,
glyph1752,
uni01D0,
uni01D1,
uni01D2,
uni01D3,
uni01D4,
uni01D5,
uni01D6,
uni01D7,
uni01D8,
uni01D9,
uni01DA,
uni01DB,
uni01DC,
glyph1290,
glyph1291,
glyph1292,
glyph1293,
uni0492,
uni0493,
uni0496,
uni0497,
uni049A,
uni049B,
uni049C,
uni049D,
uni04A2,
uni04A3,
uni04AE,
uni04AF,
uni04B0,
uni04B1,
uni04B2,
uni04B3,
uni04B8,
uni04B9,
uni04BA,
uni04BB,
uni018F,
uni0259,
uni04E8,
uni04E9,
glyph1318,
glyph1319,
glyph1320,
glyph1321,
glyph1322,
glyph1323,
uni0672,
uni0672.fina,
uni0673,
uni0673.fina,
uni0675,
uni0675.fina,
uni0676,
uni0676.fina,
uni0677,
uni0677.fina,
uni0678,
uni0678.fina,
uni0679,
uniFB67,
uniFB68,
uniFB69,
uni067A,
uniFB5F,
uniFB60,
uniFB61,
uni067B,
uniFB53,
uniFB54,
uniFB55,
uni067C,
uni067C.fina,
uni067C.init,
uni067C.medi,
uni067D,
uni067D.fina,
uni067D.init,
uni067D.medi,
uni067F,
uniFB63,
uniFB64,
uniFB65,
uni0680,
uniFB5B,
uniFB5C,
uniFB5D,
uni0681,
uni0681.fina,
uni0681.init,
uni0681.medi,
uni0682,
uni0682.fina,
uni0682.init,
uni0682.medi,
uni0683,
uniFB77,
uniFB78,
uniFB79,
uni0684,
uniFB73,
uniFB74,
uniFB75,
uni0685,
uni0685.fina,
uni0685.init,
uni0685.medi,
uni0687,
uniFB7F,
uniFB80,
uniFB81,
uni0688,
uniFB89,
uni0689,
uni0689.fina,
uni068A,
uni068A.fina,
uni068B,
uni068B.fina,
uni068C,
uniFB85,
uni068D,
uniFB83,
uni068E,
uniFB87,
uni068F,
uni068F.fina,
uni0690,
uni0690.fina,
uni0691,
uniFB8D,
uni0692,
uni0692.fina,
uni0693,
uni0693.fina,
uni0694,
uni0694.fina,
uni0695,
uni0695.fina,
uni0696,
uni0696.fina,
uni0697,
uni0697.fina,
uni0699,
uni0699.fina,
uni069A,
uni069A.fina,
uni069A.init,
uni069A.medi,
uni069B,
uni069B.fina,
uni069B.init,
uni069B.medi,
uni069C,
uni069C.fina,
uni069C.init,
uni069C.medi,
uni069D,
uni069D.fina,
uni069D.init,
uni069D.medi,
uni069E,
uni069E.fina,
uni069E.init,
uni069E.medi,
uni069F,
uni069F.fina,
glyph1444,
glyph1445,
uni06A0,
uni06A0.fina,
uni06A0.init,
uni06A0.medi,
uni06A1,
glyph1451,
glyph1452,
glyph1453,
uni06A2,
uni06A2.fina,
uni06A2.init,
uni06A2.medi,
uni06A3,
uni06A3.fina,
uni06A3.init,
uni06A3.medi,
uni06A5,
uni06A5.fina,
uni06A5.init,
uni06A5.medi,
uni06A6,
uniFB6F,
uniFB70,
uniFB71,
uni066F,
uni066F.fina,
uni06A7,
uni06A7.fina,
uni06A8,
uni06A8.fina,
uni06AA,
uni06AA.fina,
uni06AA.init,
uni06AA.medi,
uni06AB,
glyph1481,
uni06AB.init,
uni06AB.medi,
uni06AC,
uni06AC.fina,
uni06AC.init,
uni06AC.medi,
uni06AD,
uniFBD4,
uniFBD5,
uniFBD6,
uni06AE,
uni06AE.fina,
uni06AE.init,
uni06AE.medi,
uni06B0,
uni06B0.fina,
uni06B0.init,
uni06B0.medi,
uni06B1,
uniFB9B,
uniFB9C,
uniFB9D,
uni06B2,
uni06B2.fina,
uni06B2.init,
uni06B2.medi,
uni06B3,
uniFB97,
uniFB98,
uniFB99,
uni06B4,
uni06B4.fina,
uni06B4.init,
uni06B4.medi,
uni06B5,
uni06B5.fina,
uni06B5.init,
uni06B5.medi,
uni06B6,
uni06B6.fina,
uni06B6.init,
uni06B6.medi,
uni06B7,
uni06B7.fina,
uni06B7.init,
uni06B7.medi,
uni06B8,
uni06B8.fina,
uni06B8.init,
uni06B8.medi,
uni06B9,
uni06B9.fina,
uni06B9.init,
uni06B9.medi,
uni06BA,
uniFB9F,
glyph1538,
glyph1539,
uni06BB,
uniFBA1,
uniFBA2,
uniFBA3,
uni06BC,
uni06BC.fina,
uni06BC.init,
uni06BC.medi,
uni06BD,
uni06BD.fina,
glyph1550,
glyph1551,
uni06BF,
uni06BF.fina,
uni06BF.init,
uni06BF.medi,
uni06C0,
uniFBA5,
uni06C1,
uniFBA6,
uniFBA8,
uniFBA9,
uni06C2,
glyph1563,
uni06C3,
glyph1565,
uni06C4,
uni06C4.fina,
uni06C5,
uniFBE1,
uni06C6,
uniFBDA,
uni06C7,
uniFBD8,
uni06C8,
uniFBDC,
uni06C9,
uniFBE3,
uni06CA,
uni06CA.fina,
uni06CB,
uniFBDF,
uni06CD,
uni06CD.fina,
uni06CE,
uni06CE.fina,
uni06CE.medi,
glyph1587,
uni06CF,
uni06CF.fina,
uni06D0,
uniFBE5,
uniFBE6,
uniFBE7,
uni06D1,
uni06D1.fina,
uni06D2,
uniFBAF,
uni06D3,
uniFBB1,
uni06D4,
glyph1601,
uni06D6,
uni06D7,
uni06D8,
uni06D9,
uni06DA,
uni06DB,
uni06DC,
uni06DD,
uni06DE,
uni06DF,
uni06E0,
uni06E1,
uni06E2,
uni06E3,
uni06E5,
uni06E6,
uni06E7,
uni06E8,
uni06E9,
uni06EA,
uni06EB,
uni06EC,
uni06ED,
uni06FA,
uni06FA.fina,
uni06FA.init,
uni06FA.medi,
uni06FB,
uni06FB.fina,
uni06FB.init,
uni06FB.medi,
uni06FC,
uni06FC.fina,
uni06FC.init,
uni06FC.medi,
uni06FD,
uni06FE,
glyph1639,
glyph1640,
glyph1641,
glyph1642,
glyph1643,
glyph1644,
glyph1645,
glyph1646,
glyph1647,
glyph1648,
glyph1649,
glyph1650,
glyph1651,
glyph1652,
glyph1653,
glyph1654,
uniFB1D,
uniFB1E,
glyph1657,
uniFB1F,
glyph1659,
glyph1660,
glyph1661,
glyph1662,
afii62843.locl,
afii57399.locl,
glyph1665,
glyph1666,
uni20A0,
uni20A1,
uni20A2,
uni20A5,
uni20A6,
uni20A8,
uni20A9,
uni20AD,
uni20AE,
uni20AF,
uni20B0,
uni20B1,
uni0180,
uni0181,
uni0182,
uni0183,
uni0184,
uni0185,
uni0186,
uni0187,
uni0188,
uni0189,
uni018A,
uni018B,
uni018C,
uni018D,
uni018E,
uni0190,
uni0191,
uni0193,
uni0194,
uni0195,
uni0196,
uni0197,
uni0198,
uni0199,
uni019A,
uni019B,
uni019C,
uni019D,
uni019E,
uni019F,
uni01A2,
uni01A3,
uni01A4,
uni01A5,
uni01A6,
uni01A7,
uni01A8,
uni01A9,
uni01AA,
uni01AB,
uni01AC,
uni01AD,
uni01AE,
uni01B1,
uni01B2,
uni01B3,
uni01B4,
uni01B5,
uni01B6,
uni01B7,
uni01B8,
uni01B9,
uni01BA,
uni01BB,
uni01BC,
uni01BD,
uni01BE,
uni01BF,
uni01C0,
uni01C1,
uni01C2,
uni01C3,
uni01C4,
uni01C5,
uni01C6,
uni01C7,
uni01C8,
uni01C9,
uni01CA,
uni01CB,
uni01CC,
uni01CD,
uni01CE,
uni01CF,
glyph1753,
uni01E0,
uni01E1,
uni01E2,
uni01E3,
uni01E4,
uni01E5,
uni01E6,
uni01E7,
uni01E8,
uni01E9,
uni01EA,
uni01EB,
uni01EC,
uni01ED,
uni01EE,
uni01EF,
uni01F0,
uni01F1,
uni01F2,
uni01F3,
uni01F4,
uni01F5,
uni01F6,
uni01F7,
uni01F8,
uni01F9,
uni0200,
uni0201,
uni0202,
uni0203,
uni0204,
uni0205,
uni0206,
uni0207,
uni0208,
uni0209,
uni020A,
uni020B,
uni020C,
uni020D,
uni020E,
uni020F,
uni0210,
uni0211,
uni0212,
uni0213,
uni0214,
uni0215,
uni0216,
uni0217,
uni0218,
uni0219,
uni021A,
uni021B,
uni021C,
uni021D,
uni021E,
uni021F,
uni0220,
uni0222,
uni0223,
uni0224,
uni0225,
uni0226,
uni0227,
uni0228,
uni0229,
uni022A,
uni022B,
glyph1823,
uni022C,
uni022D,
uni022E,
uni022F,
uni0230,
uni0231,
uni0232,
uni0233,
uni0250,
uni0251,
uni0252,
uni0253,
uni0254,
uni0255,
uni0256,
uni0257,
uni0258,
uni025A,
uni025B,
uni025C,
uni025D,
uni025E,
uni025F,
uni0260,
uni0261,
uni0262,
uni0263,
uni0264,
uni0265,
uni0266,
uni0267,
uni0268,
uni0269,
uni026A,
uni026B,
uni026C,
uni026D,
uni026E,
uni026F,
uni0270,
uni0271,
uni0272,
uni0273,
uni0274,
uni0275,
uni0276,
uni0277,
uni0278,
uni0279,
uni027A,
uni027B,
uni027C,
uni027D,
uni027E,
uni027F,
uni0280,
uni0281,
uni0282,
uni0283,
uni0284,
uni0285,
uni0286,
uni0287,
uni0288,
uni0289,
uni028A,
uni028B,
uni028C,
uni028D,
uni028E,
uni028F,
uni0290,
uni0291,
uni0292,
uni0293,
uni0294,
uni0295,
uni0296,
uni0297,
uni0298,
uni0299,
uni029A,
uni029B,
uni029C,
uni029D,
uni029E,
uni029F,
uni02A0,
uni02A1,
uni02A2,
uni02A3,
uni02A4,
uni02A5,
uni02A6,
uni02A7,
uni02A8,
uni02A9,
uni02AA,
uni02AB,
uni02AC,
uni02AD,
uni02B0,
uni02B1,
uni02B2,
uni02B3,
uni02B4,
uni02B5,
uni02B6,
uni02B7,
uni02B8,
uni02B9,
uni02BA,
uni02BB,
uni02BC,
uni02BD,
uni02BE,
uni02BF,
uni02C0,
uni02C1,
uni02C2,
uni02C3,
uni02C4,
uni02C5,
uni02C8,
uni02CA,
uni02CB,
uni02CC,
uni02CD,
uni02CE,
uni02CF,
uni02D0,
uni02D1,
uni02D2,
uni02D3,
uni02D4,
uni02D5,
uni02D6,
uni02D7,
uni02DE,
uni02DF,
uni02E0,
uni02E1,
uni02E2,
uni02E3,
uni02E4,
uni02EC,
uni02ED,
uni02EE,
uni0302,
uni0304,
uni0305,
uni0306,
uni0307,
uni0308,
uni030A,
uni030B,
uni030C,
uni030D,
uni030E,
uni030F,
uni0310,
uni0311,
uni0312,
uni0313,
uni0314,
uni0315,
uni0316,
uni0317,
uni0318,
uni0319,
uni031A,
uni031B,
uni031C,
uni031D,
uni031E,
uni031F,
uni0320,
uni0321,
uni0322,
uni0324,
uni0325,
uni0326,
uni0327,
uni0328,
uni0329,
uni032A,
uni032B,
uni032C,
uni032D,
uni032E,
uni032F,
uni0330,
uni0331,
uni0332,
uni0333,
uni0334,
uni0335,
uni0336,
uni0337,
uni0338,
uni0339,
uni033A,
uni033B,
uni033C,
uni033D,
uni033E,
uni033F,
uni0340,
uni0341,
uni0342,
uni0343,
uni0344,
uni0345,
uni0346,
uni0347,
uni0348,
uni0349,
uni034A,
uni034B,
uni034C,
uni034D,
uni034E,
uni034F,
uni0360,
uni0361,
uni0362,
uni0363,
uni0364,
uni0365,
uni0366,
uni0367,
uni0368,
uni0369,
uni036A,
uni036B,
uni036C,
uni036D,
uni036E,
uni036F,
uni0374,
uni0375,
uni037A,
uni03D0,
uni03D1,
uni03D2,
uni03D3,
uni03D4,
uni03D5,
uni03D6,
uni03D7,
uni03D8,
uni03D9,
uni03DA,
uni03DB,
uni03DC,
uni03DD,
uni03DE,
uni03DF,
uni03E0,
uni03E1,
uni03E2,
uni03E3,
uni03E4,
uni03E5,
uni03E6,
uni03E7,
uni03E8,
uni03E9,
uni03EA,
uni03EB,
uni03EC,
uni03ED,
uni03EE,
uni03EF,
uni03F0,
uni03F1,
uni03F2,
uni03F3,
uni03F4,
uni03F5,
uni03F6,
uni0400,
uni040D,
uni0450,
uni045D,
uni0460,
uni0461,
uni0462,
uni0463,
uni0464,
uni0465,
uni0466,
uni0467,
uni0468,
uni0469,
uni046A,
uni046B,
uni046C,
uni046D,
uni046E,
uni046F,
uni0470,
uni0471,
uni0472,
uni0473,
uni0474,
uni0475,
uni0476,
uni0477,
uni0478,
uni0479,
uni047A,
uni047B,
uni047C,
uni047D,
glyph2139,
uni047E,
uni047F,
uni0480,
uni0481,
uni0482,
uni0483,
uni0484,
uni0485,
uni0486,
uni0488,
uni0489,
uni048A,
uni048B,
uni048C,
uni048D,
uni048E,
uni048F,
uni0494,
uni0495,
uni0498,
uni0499,
uni049E,
uni049F,
uni04A0,
uni04A1,
uni04A4,
uni04A5,
uni04A6,
uni04A7,
uni04A8,
uni04A9,
uni04AA,
uni04AB,
uni04AC,
uni04AD,
uni04B4,
uni04B5,
uni04B6,
uni04B7,
uni04BC,
uni04BD,
uni04BE,
uni04BF,
uni04C0,
uni04C1,
uni04C2,
uni04C3,
uni04C4,
uni04C5,
uni04C6,
uni04C7,
uni04C8,
uni04C9,
uni04CA,
uni04CB,
uni04CC,
uni04CD,
uni04CE,
glyph2198,
uni04D0,
uni04D1,
uni04D2,
uni04D3,
uni04D4,
uni04D5,
uni04D6,
uni04D7,
uni04DA,
uni04DB,
uni04DC,
uni04DD,
uni04DE,
uni04DF,
uni04E0,
uni04E1,
uni04E2,
uni04E3,
uni04E4,
uni04E5,
uni04E6,
uni04E7,
uni04EA,
uni04EB,
uni04EC,
uni04ED,
uni04EE,
uni04EF,
uni04F0,
uni04F1,
uni04F2,
uni04F3,
uni04F4,
uni04F5,
uni04F8,
uni04F9,
uni0500,
uni0501,
uni0502,
uni0503,
uni0504,
uni0505,
uni0506,
uni0507,
uni0508,
uni0509,
uni050A,
uni050B,
uni050C,
uni050D,
uni050E,
uni050F,
uni0591,
uni0592,
uni0593,
uni0594,
uni0595,
uni0596,
uni0597,
uni0598,
uni0599,
uni059A,
uni059B,
uni059C,
uni059D,
uni059E,
uni059F,
uni05A0,
uni05A1,
uni05A3,
uni05A4,
uni05A5,
uni05A6,
uni05A7,
uni05A8,
uni05A9,
uni05AA,
uni05AB,
uni05AC,
uni05AD,
uni05AE,
uni05AF,
glyph2281,
glyph2282,
glyph2283,
glyph2284,
glyph2285,
glyph2286,
glyph2287,
glyph2288,
uni1E00,
uni1E01,
uni1E02,
uni1E03,
uni1E04,
uni1E05,
uni1E06,
uni1E07,
uni1E08,
uni1E09,
uni1E0A,
uni1E0B,
uni1E0C,
uni1E0D,
uni1E0E,
uni1E0F,
uni1E10,
uni1E11,
uni1E12,
uni1E13,
uni1E14,
uni1E15,
uni1E16,
uni1E17,
uni1E18,
uni1E19,
uni1E1A,
uni1E1B,
uni1E1C,
uni1E1D,
uni1E1E,
uni1E1F,
uni1E20,
uni1E21,
uni1E22,
uni1E23,
uni1E24,
uni1E25,
uni1E26,
uni1E27,
uni1E28,
uni1E29,
uni1E2A,
uni1E2B,
uni1E2C,
uni1E2D,
uni1E2E,
uni1E2F,
uni1E30,
uni1E31,
uni1E32,
uni1E33,
uni1E34,
uni1E35,
uni1E36,
uni1E37,
uni1E38,
uni1E39,
uni1E3A,
uni1E3B,
uni1E3C,
uni1E3D,
uni1E3E,
uni1E3F,
uni1E40,
uni1E41,
uni1E42,
uni1E43,
uni1E44,
uni1E45,
uni1E46,
uni1E47,
uni1E48,
uni1E49,
uni1E4A,
uni1E4B,
uni1E4C,
uni1E4D,
uni1E4E,
uni1E4F,
uni1E50,
uni1E51,
uni1E52,
uni1E53,
uni1E54,
uni1E55,
uni1E56,
uni1E57,
uni1E58,
uni1E59,
uni1E5A,
uni1E5B,
uni1E5C,
uni1E5D,
uni1E5E,
uni1E5F,
uni1E60,
uni1E61,
uni1E62,
uni1E63,
uni1E64,
uni1E65,
uni1E66,
uni1E67,
uni1E68,
uni1E69,
uni1E6A,
uni1E6B,
uni1E6C,
uni1E6D,
uni1E6E,
uni1E6F,
uni1E70,
uni1E71,
uni1E72,
uni1E73,
uni1E74,
uni1E75,
uni1E76,
uni1E77,
uni1E78,
uni1E79,
uni1E7A,
uni1E7B,
uni1E7C,
uni1E7D,
uni1E7E,
uni1E7F,
uni1E86,
uni1E87,
uni1E88,
uni1E89,
uni1E8A,
uni1E8B,
uni1E8C,
uni1E8D,
uni1E8E,
uni1E8F,
uni1E90,
uni1E91,
uni1E92,
uni1E93,
uni1E94,
uni1E95,
glyph2433,
uni1E97,
uni1E98,
uni1E99,
uni1E9A,
uni1E9B,
uni1F00,
uni1F01,
uni1F02,
uni1F03,
uni1F04,
uni1F05,
uni1F06,
uni1F07,
uni1F08,
uni1F09,
uni1F0A,
uni1F0B,
uni1F0C,
uni1F0D,
uni1F0E,
uni1F0F,
uni1F10,
uni1F11,
uni1F12,
uni1F13,
uni1F14,
uni1F15,
uni1F18,
uni1F19,
uni1F1A,
uni1F1B,
uni1F1C,
uni1F1D,
uni1F20,
uni1F21,
uni1F22,
uni1F23,
uni1F24,
uni1F25,
uni1F26,
uni1F27,
uni1F28,
uni1F29,
uni1F2A,
uni1F2B,
uni1F2C,
uni1F2D,
uni1F2E,
uni1F2F,
uni1F30,
uni1F31,
uni1F32,
uni1F33,
uni1F34,
uni1F35,
uni1F36,
uni1F37,
uni1F38,
uni1F39,
uni1F3A,
uni1F3B,
uni1F3C,
uni1F3D,
uni1F3E,
uni1F3F,
uni1F40,
uni1F41,
uni1F42,
uni1F43,
uni1F44,
uni1F45,
uni1F48,
uni1F49,
uni1F4A,
uni1F4B,
uni1F4C,
uni1F4D,
uni1F50,
uni1F51,
uni1F52,
uni1F53,
uni1F54,
uni1F55,
uni1F56,
uni1F57,
uni1F59,
uni1F5B,
uni1F5D,
uni1F5F,
uni1F60,
uni1F61,
uni1F62,
uni1F63,
uni1F64,
uni1F65,
uni1F66,
uni1F67,
uni1F68,
uni1F69,
uni1F6A,
uni1F6B,
uni1F6C,
uni1F6D,
uni1F6E,
uni1F6F,
uni1F70,
uni1F71,
uni1F72,
uni1F73,
uni1F74,
uni1F75,
uni1F76,
uni1F77,
uni1F78,
uni1F79,
uni1F7A,
uni1F7B,
uni1F7C,
uni1F7D,
uni1F80,
uni1F81,
uni1F82,
uni1F83,
uni1F84,
uni1F85,
uni1F86,
uni1F87,
uni1F88,
uni1F89,
uni1F8A,
uni1F8B,
uni1F8C,
uni1F8D,
uni1F8E,
uni1F8F,
uni1F90,
uni1F91,
uni1F92,
uni1F93,
uni1F94,
uni1F95,
uni1F96,
uni1F97,
uni1F98,
uni1F99,
uni1F9A,
uni1F9B,
uni1F9C,
uni1F9D,
uni1F9E,
uni1F9F,
uni1FA0,
uni1FA1,
uni1FA2,
uni1FA3,
uni1FA4,
uni1FA5,
uni1FA6,
uni1FA7,
uni1FA8,
uni1FA9,
uni1FAA,
uni1FAB,
uni1FAC,
uni1FAD,
uni1FAE,
uni1FAF,
uni1FB0,
uni1FB1,
uni1FB2,
uni1FB3,
uni1FB4,
uni1FB6,
uni1FB7,
uni1FB8,
uni1FB9,
uni1FBA,
uni1FBB,
uni1FBC,
uni1FBD,
uni1FBE,
uni1FBF,
uni1FC0,
uni1FC1,
uni1FC2,
uni1FC3,
uni1FC4,
uni1FC6,
uni1FC7,
uni1FC8,
uni1FC9,
uni1FCA,
uni1FCB,
uni1FCC,
uni1FCD,
uni1FCE,
uni1FCF,
uni1FD0,
uni1FD1,
uni1FD2,
uni1FD3,
uni1FD6,
uni1FD7,
uni1FD8,
uni1FD9,
uni1FDA,
uni1FDB,
uni1FDD,
uni1FDE,
uni1FDF,
uni1FE0,
uni1FE1,
uni1FE2,
uni1FE3,
uni1FE4,
uni1FE5,
uni1FE6,
uni1FE7,
uni1FE8,
uni1FE9,
uni1FEA,
uni1FEB,
uni1FEC,
uni1FED,
uni1FEE,
uni1FEF,
uni1FF2,
uni1FF3,
uni1FF4,
uni1FF6,
uni1FF7,
uni1FF8,
uni1FF9,
uni1FFA,
uni1FFB,
uni1FFC,
uni1FFD,
uni1FFE,
uni266F,
uni25CC,
uniFE20,
uniFE21,
uniFE22,
uniFE23,
glyph2678,
glyph2679,
uni0221,
uni0234,
uni0235,
uni0236,
uni02AE,
uni02AF,
uni02EF,
uni02F0,
uni02F1,
uni02F2,
uni02F3,
uni02F4,
uni02F5,
uni02F6,
uni02F7,
uni02F8,
uni02F9,
uni02FA,
uni02FB,
uni02FC,
uni02FD,
uni02FE,
uni02FF,
uni0350,
uni0351,
uni0352,
uni0353,
uni0354,
uni0355,
uni0356,
uni0357,
uni035D,
uni035E,
uni035F,
uni03F7,
uni03F8,
uni1D00,
uni1D01,
uni1D02,
uni1D03,
uni1D04,
uni1D05,
uni1D06,
uni1D07,
uni1D08,
uni1D09,
uni1D0A,
uni1D0B,
uni1D0C,
uni1D0D,
uni1D0E,
uni1D0F,
uni1D10,
uni1D11,
uni1D12,
uni1D13,
uni1D14,
uni1D15,
uni1D16,
uni1D17,
uni1D18,
uni1D19,
uni1D1A,
uni1D1B,
uni1D1C,
uni1D1D,
uni1D1E,
uni1D1F,
uni1D20,
uni1D21,
uni1D22,
uni1D23,
uni1D24,
uni1D25,
uni1D26,
uni1D27,
uni1D28,
uni1D29,
uni1D2A,
uni1D2B,
uni1D2C,
uni1D2D,
uni1D2E,
uni1D2F,
uni1D30,
uni1D31,
uni1D32,
uni1D33,
uni1D34,
uni1D35,
uni1D36,
uni1D37,
uni1D38,
uni1D39,
uni1D3A,
uni1D3B,
uni1D3C,
uni1D3D,
uni1D3E,
uni1D3F,
uni1D40,
uni1D41,
uni1D42,
uni1D43,
uni1D44,
uni1D45,
uni1D46,
uni1D47,
uni1D48,
uni1D49,
uni1D4A,
uni1D4B,
uni1D4C,
uni1D4D,
uni1D4E,
uni1D4F,
uni1D50,
uni1D51,
uni1D52,
uni1D53,
uni1D54,
uni1D55,
uni1D56,
uni1D57,
uni1D58,
uni1D59,
uni1D5A,
uni1D5B,
uni1D5C,
uni1D5D,
uni1D5E,
uni1D5F,
uni1D60,
uni1D61,
uni1D62,
uni1D63,
uni1D64,
uni1D65,
uni1D66,
uni1D67,
uni1D68,
uni1D69,
uni1D6A,
uni0600,
uni0601,
uni0602,
uni0603,
uni060D,
uni060E,
uni060F,
uni0610,
uni0611,
uni0612,
uni0613,
uni0614,
uni0656,
uni0657,
uni0658,
glyph2900,
uni06EE,
uni06EE.fina,
uni06EF,
uni06EF.fina,
uni06FF.init,
uni06FF.fina,
uni06FF,
uni06FF.medi,
uniFB21,
uniFB22,
uniFB23,
uniFB24,
uniFB25,
uniFB26,
uniFB27,
uniFB28,
uniFB29,
"hatafsegol_meteg-hb",
"hatafpatah_meteg-hb",
"hatafqamats_meteg-hb",
uni2012,
uni201F,
uni2034,
glyph2862,
glyph2863,
glyph2864,
glyph2865,
"alef_afii62817_afii62818_afii62828-ar",
uniFDFC,
uni03F9,
uni03FA,
uni03FB,
uni1D6B,
uni0238,
uni0239,
uni023A,
uni023B,
uni023C,
uni023D,
uni023E,
uni023F,
uni0240,
uni0241,
uni0358,
uni0359,
uni035A,
uni035B,
uni035C,
uni03FC,
uni03FD,
uni03FE,
uni03FF,
uni04F6,
uni04F7,
uni05A2,
uni05BA,
uni05C5,
uni05C6,
uni05C7,
uni060B,
uni061E,
uni0659,
uni065A,
uni065B,
uni065C,
uni065D,
uni065E,
glyph2906,
uni0750,
uni0750.fina,
uni0750.init,
uni0750.medi,
uni0751,
uni0751.fina,
uni0751.init,
uni0751.medi,
uni0752,
uni0752.fina,
uni0752.init,
uni0752.medi,
uni0753,
uni0753.fina,
uni0753.init,
uni0753.medi,
uni0754,
uni0754.fina,
uni0754.init,
uni0754.medi,
uni0755,
uni0755.fina,
uni0755.init,
uni0755.medi,
uni0756,
uni0756.fina,
uni0756.init,
uni0756.medi,
uni0757,
uni0757.fina,
uni0757.init,
uni0757.medi,
uni0758,
uni0758.fina,
uni0758.init,
uni0758.medi,
uni0759,
uni0759.fina,
uni075A,
glyph2946,
uni075B,
uni075B.fina,
uni075C,
uni075C.fina,
uni075C.init,
uni075C.medi,
uni075D,
uni075D.fina,
uni075D.init,
uni075D.medi,
uni075E,
uni075E.fina,
uni075E.init,
uni075E.medi,
uni075F,
uni075F.fina,
uni075F.init,
uni075F.medi,
uni0760,
uni0760.fina,
uni0760.init,
uni0760.medi,
uni0761,
uni0761.fina,
uni0761.init,
uni0761.medi,
uni0762,
uni0762.fina,
uni0762.init,
uni0762.medi,
uni0763,
uni0763.fina,
uni0763.init,
uni0763.medi,
uni0764,
uni0764.fina,
uni0764.init,
uni0764.medi,
uni0765,
uni0765.fina,
uni0765.init,
uni0765.medi,
uni0766,
uni0766.fina,
uni0766.init,
uni0766.medi,
uni0767,
uni0767.fina,
uni0767.init,
uni0767.medi,
uni0768,
uni0768.fina,
uni0768.init,
uni0768.medi,
uni0769,
uni0769.fina,
uni0769.init,
uni0769.medi,
uni076A,
uni076A.fina,
uni076A.init,
uni076A.medi,
uni076B,
uni076B.fina,
uni076C,
uni076C.fina,
uni076D,
uni076D.fina,
uni076D.init,
uni076D.medi,
uni1D6C,
uni1D6D,
uni1D6E,
uni1D6F,
uni1D70,
uni1D71,
uni1D72,
uni1D73,
uni1D74,
uni1D75,
uni1D76,
uni1D77,
uni1D78,
uni1D79,
uni1D7A,
uni1D7B,
uni1D7C,
uni1D7D,
uni1D7E,
uni1D7F,
uni1D80,
uni1D81,
uni1D82,
uni1D83,
uni1D84,
uni1D85,
uni1D86,
uni1D87,
uni1D88,
uni1D89,
uni1D8A,
uni1D8B,
uni1D8C,
uni1D8D,
uni1D8E,
uni1D8F,
uni1D90,
uni1D91,
uni1D92,
uni1D93,
uni1D94,
uni1D95,
uni1D96,
uni1D97,
uni1D98,
uni1D99,
uni1D9A,
uni1D9B,
uni1D9C,
uni1D9D,
uni1D9E,
uni1D9F,
uni1DA0,
uni1DA1,
uni1DA2,
uni1DA3,
uni1DA4,
uni1DA5,
uni1DA6,
uni1DA7,
uni1DA8,
uni1DA9,
uni1DAA,
uni1DAB,
uni1DAC,
uni1DAD,
uni1DAE,
uni1DAF,
uni1DB0,
uni1DB1,
uni1DB2,
uni1DB3,
uni1DB4,
uni1DB5,
uni1DB6,
uni1DB7,
uni1DB8,
uni1DB9,
uni1DBA,
uni1DBB,
uni1DBC,
uni1DBD,
uni1DBE,
uni1DBF,
uni1DC0,
uni1DC1,
uni1DC2,
uni1DC3,
uni205E,
uni2090,
uni2091,
uni2092,
uni2093,
uni2094,
uni20B2,
uni20B3,
uni20B4,
uni20B5,
uni2E17,
glyph3116,
glyph3117,
glyph3118,
glyph3119,
glyph3120,
glyph3121,
glyph3122,
glyph3123,
glyph3124,
glyph3125,
glyph3126,
glyph3127,
glyph3128,
glyph3129,
glyph3130,
glyph3131,
glyph3132,
glyph3133,
glyph3134,
glyph3135,
glyph3136,
glyph3137,
glyph3138,
glyph3139,
glyph3140,
glyph3141,
glyph3142,
glyph3143,
glyph3144,
glyph3145,
glyph3146,
glyph3147,
glyph3148,
glyph3149,
iacute.locl
);
}
);
date = "2018-11-25 06:30:34 +0000";
designer = "Fasil Fikreab";
disablesNiceNames = 1;
familyName = "Abesha Kitfo";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012languagesystem latn dflt;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "script latn;\012language CAT;\012sub  l' periodcentered' l by ldot;\012sub  L' periodcentered' L by Ldot;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub n by nsuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 1255;
capHeight = 1170;
customParameters = (
{
name = typoAscender;
value = 1255;
},
{
name = typoDescender;
value = -386;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1705;
},
{
name = winDescent;
value = 615;
},
{
name = hheaAscender;
value = 1705;
},
{
name = hheaDescender;
value = -615;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 3 values pushed */\01284 -64 960 \012PUSHB[ ]	/* 3 values pushed */\01285 51 64 \012PUSHW[ ]	/* 1 value pushed */\012960 \012PUSHB[ ]	/* 3 values pushed */\01258 51 64 \012PUSHW[ ]	/* 1 value pushed */\012960 \012PUSHB[ ]	/* 4 values pushed */\01214 36 50 128 \012PUSHW[ ]	/* 1 value pushed */\012960 \012PUSHB[ ]	/* 4 values pushed */\01211 13 50 128 \012PUSHW[ ]	/* 1 value pushed */\012960 \012PUSHB[ ]	/* 3 values pushed */\0129 51 63 \012NPUSHW[ ]	/* 47 values pushed */\012960 112 960 175 960 207 960 4 95 960 127 960 175 960 3 31 960 63 960 95 960 143 960 4 160 955 176 955 192 955 208 955 4 160 954 176 954 192 954 208 954 4 63 952 1 951 950 \012PUSHB[ ]	/* 3 values pushed */\01236 31 64 \012PUSHW[ ]	/* 1 value pushed */\012948 \012PUSHB[ ]	/* 4 values pushed */\01225 36 50 239 \012NPUSHW[ ]	/* 26 values pushed */\012947 255 947 2 913 907 33 31 862 907 33 31 863 907 33 31 911 907 42 31 912 907 42 31 909 907 \012PUSHB[ ]	/* 3 values pushed */\01259 31 15 \012NPUSHW[ ]	/* 9 values pushed */\012907 1 239 907 255 907 2 -64 924 \012PUSHB[ ]	/* 3 values pushed */\01271 79 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 924 \012PUSHB[ ]	/* 3 values pushed */\01255 60 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 923 \012PUSHB[ ]	/* 3 values pushed */\01271 79 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 923 \012PUSHB[ ]	/* 4 values pushed */\01255 60 50 31 \012NPUSHW[ ]	/* 25 values pushed */\012924 176 924 192 924 208 924 4 239 924 1 31 923 176 923 192 923 208 923 4 239 923 1 -64 924 \012PUSHB[ ]	/* 3 values pushed */\01233 41 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 923 \012PUSHB[ ]	/* 3 values pushed */\01233 41 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 924 \012PUSHB[ ]	/* 3 values pushed */\01215 22 50 \012PUSHW[ ]	/* 2 values pushed */\012-64 923 \012PUSHB[ ]	/* 3 values pushed */\01215 22 50 \012NPUSHW[ ]	/* 10 values pushed */\012857 854 50 31 856 854 50 31 855 854 \012PUSHB[ ]	/* 3 values pushed */\01250 31 191 \012NPUSHW[ ]	/* 96 values pushed */\012853 1 175 853 1 160 852 1 143 852 1 95 852 1 79 852 1 127 853 1 127 852 1 111 853 1 111 852 1 63 853 1 63 852 1 63 852 1 47 852 1 47 852 1 31 852 1 15 852 1 850 851 41 31 849 842 41 31 848 837 37 31 847 842 37 31 846 841 37 31 845 839 37 31 844 842 24 31 843 837 18 31 842 838 24 31 841 837 68 31 840 838 68 31 839 838 \012PUSHB[ ]	/* 3 values pushed */\01268 31 48 \012NPUSHW[ ]	/* 112 values pushed */\012838 95 837 2 15 836 31 836 47 836 63 836 4 15 836 143 836 160 836 223 836 4 95 836 127 836 207 836 3 47 836 1 836 836 835 835 833 833 15 832 31 832 47 832 3 832 832 831 831 830 830 15 829 1 829 829 64 828 1 31 828 47 828 63 828 79 828 95 828 192 828 208 828 7 828 828 32 821 48 821 64 821 80 821 96 821 5 15 812 47 812 143 812 3 812 813 36 31 801 652 20 31 800 652 20 31 799 651 30 31 798 651 \012PUSHB[ ]	/* 3 values pushed */\01230 31 64 \012NPUSHW[ ]	/* 9 values pushed */\012692 80 692 96 692 112 692 128 692 \012PUSHB[ ]	/* 3 values pushed */\0125 18 15 \012NPUSHW[ ]	/* 20 values pushed */\012651 31 651 47 651 79 651 95 651 127 651 159 651 175 651 8 63 651 79 651 \012NPUSHB[ ]	/* 11 values pushed */\0122 63 2 63 3 79 2 79 3 4 64 \012PUSHW[ ]	/* 1 value pushed */\012809 \012PUSHB[ ]	/* 4 values pushed */\01260 60 50 64 \012PUSHW[ ]	/* 1 value pushed */\012809 \012PUSHB[ ]	/* 4 values pushed */\01251 54 50 64 \012PUSHW[ ]	/* 1 value pushed */\012809 \012PUSHB[ ]	/* 4 values pushed */\01228 29 50 64 \012PUSHW[ ]	/* 1 value pushed */\012809 \012PUSHB[ ]	/* 4 values pushed */\01212 26 50 15 \012NPUSHW[ ]	/* 114 values pushed */\012809 127 809 159 809 3 15 809 47 809 63 809 3 15 809 31 809 2 175 807 191 807 207 807 223 807 4 15 807 79 807 95 807 143 807 159 807 175 807 6 191 807 239 807 255 807 3 111 807 127 807 143 807 159 807 175 807 5 15 807 31 807 47 807 79 807 95 807 5 15 808 47 808 95 808 127 808 175 808 5 223 808 1 15 807 15 808 80 808 143 808 191 808 5 223 802 1 143 802 1 63 802 79 802 2 47 802 63 802 2 15 802 31 802 \012PUSHB[ ]	/* 3 values pushed */\0122 9 15 \012PUSHW[ ]	/* 1 value pushed */\012651 \012PUSHB[ ]	/* 3 values pushed */\0121 58 15 \012NPUSHW[ ]	/* 55 values pushed */\012652 79 652 2 15 653 47 653 63 653 3 47 651 1 47 652 63 652 79 652 143 652 175 652 5 953 953 809 809 807 807 808 808 802 802 801 801 800 800 799 799 798 798 656 656 655 655 654 654 653 653 652 652 651 651 \012NPUSHB[ ]	/* 20 values pushed */\012175 43 191 43 2 95 53 111 53 127 53 143 53 159 53 175 53 191 53 7 \012PUSHW[ ]	/* 4 values pushed */\012609 609 608 608 \012NPUSHB[ ]	/* 10 values pushed */\0120 22 22 0 0 0 18 17 8 26 \012NPUSHW[ ]	/* 16 values pushed */\012516 92 13 506 92 13 429 92 13 370 92 13 320 92 13 279 \012NPUSHB[ ]	/* 26 values pushed */\01292 13 228 92 13 200 92 13 153 92 13 149 92 13 88 92 13 78 92 13 70 92 13 47 92 13 \012PUSHW[ ]	/* 1 value pushed */\012354 \012NPUSHB[ ]	/* 23 values pushed */\01243 13 219 43 13 144 43 13 86 43 13 54 43 13 53 43 13 51 43 13 41 43 13 \012NPUSHW[ ]	/* 17 values pushed */\012345 343 13 190 343 13 66 343 13 50 343 13 34 343 13 29 343 \012PUSHB[ ]	/* 3 values pushed */\01213 0 9 \012PUSHW[ ]	/* 5 values pushed */\012347 33 2049 31 295 \012PUSHB[ ]	/* 5 values pushed */\01233 129 31 229 33 \012PUSHW[ ]	/* 1 value pushed */\0121025 \012PUSHB[ ]	/* 3 values pushed */\01231 131 33 \012PUSHW[ ]	/* 1 value pushed */\0122049 \012PUSHB[ ]	/* 3 values pushed */\01231 130 33 \012PUSHW[ ]	/* 1 value pushed */\0121025 \012PUSHB[ ]	/* 3 values pushed */\01231 91 33 \012PUSHW[ ]	/* 1 value pushed */\0121025 \012PUSHB[ ]	/* 3 values pushed */\01231 59 33 \012PUSHW[ ]	/* 1 value pushed */\0122049 \012PUSHB[ ]	/* 7 values pushed */\01231 48 33 103 31 44 33 \012PUSHW[ ]	/* 1 value pushed */\0121025 \012PUSHB[ ]	/* 3 values pushed */\01231 38 33 \012PUSHW[ ]	/* 1 value pushed */\0121025 \012PUSHB[ ]	/* 3 values pushed */\01231 36 33 \012PUSHW[ ]	/* 6 values pushed */\0121025 31 85 428 7 299 \012NPUSHB[ ]	/* 44 values pushed */\0127 201 7 95 7 64 7 57 7 46 7 45 7 40 7 39 7 35 7 31 7 20 8 18 8 16 8 14 8 12 8 10 8 8 8 6 8 4 8 2 8 0 8 20 \012PUSHW[ ]	/* 1 value pushed */\012-32 \012NPUSHB[ ]	/* 43 values pushed */\0120 0 1 0 20 6 16 0 0 1 0 6 4 0 0 1 0 4 16 0 0 1 0 16 2 0 0 1 0 2 0 0 0 1 0 0 2 1 8 2 0 74 0 \012PUSHB[ ]	/* 1 value pushed */\01219 \012SPVTCA[1]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012SPVTCA[0]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012192 \012MUL[ ]	/* Multiply */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012246 \012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012PUSHW[ ]	/* 1 value pushed */\012266 \012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012WS[ ]	/* WriteStore */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\01255 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0122047 \012GT[ ]	/* GreaterThan */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012GETINFO[ ]	/* GetInfo */\012PUSHW[ ]	/* 1 value pushed */\012256 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012511 \012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012SCANCTRL[ ]	/* ScanConversionControl */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0121 300 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0121 300 \012SCANCTRL[ ]	/* ScanConversionControl */\012SCANTYPE[ ]	/* ScanType */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 1 \012SCANTYPE[ ]	/* ScanType */\012SCANTYPE[ ]	/* ScanType */\012EIF[ ]	/* EndIf */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012SZPS[ ]	/* SetZonePointerS */\012SROUND[ ]	/* SuperRound */\012MIAP[1]	/* MoveIndirectAbsPt */\012RTG[ ]	/* RoundToGrid */\012MIAP[1]	/* MoveIndirectAbsPt */\012SRP2[ ]	/* SetRefPoint2 */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SRP1[ ]	/* SetRefPoint1 */\012IP[ ]	/* InterpolatePts */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\01255 \012CALL[ ]	/* CallFunction */\012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHB[ ]	/* 1 value pushed */\012150 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012170 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012255 \012SCVTCI[ ]	/* SetCVTCutIn */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121025 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012568 566 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\012567 566 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122688 568 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012568 2688 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121025 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01232 568 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\01233 568 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122688 32 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01232 2688 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121025 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01230 567 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHW[ ]	/* 2 values pushed */\01237 567 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122688 30 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01230 2688 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121025 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01261 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122688 61 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01261 2688 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0121025 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012103 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122688 103 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\012103 2688 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012769 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122016 33 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01233 2016 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012769 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01230 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122016 33 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01233 2016 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012769 \012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01233 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01237 33 \012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0122016 33 \012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01233 2016 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 2 values pushed */\01274 470 \012PUSHB[ ]	/* 2 values pushed */\01267 122 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012139 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 2 values pushed */\01267 470 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHW[ ]	/* 1 value pushed */\012470 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01274 122 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012122 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 122 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012122 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\01274 64 74 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01271 97 42 173 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\012137 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012RTG[ ]	/* RoundToGrid */\012PUSHB[ ]	/* 1 value pushed */\012128 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01242 97 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\01297 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01242 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01271 173 \012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012ADD[ ]	/* Add */\012DIV[ ]	/* Divide */\012MUL[ ]	/* Multiply */\012ROUND[00]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\012173 \012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01271 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0120 173 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\012173 64 \012NEG[ ]	/* Negate */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\01271 64 71 \012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012WS[ ]	/* WriteStore */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0128 0 \012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0122 11 10 18 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012SZPS[ ]	/* SetZonePointerS */\012SRP0[ ]	/* SetRefPoint0 */\012WCVTF[ ]	/* WriteCVTInFUnits */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01215137 6270 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 424 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\01211585 11585 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\0121024 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0126270 15137 \012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 3 values pushed */\012424 1024 11 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012RTG[ ]	/* RoundToGrid */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012RTG[ ]	/* RoundToGrid */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SDB[ ]	/* SetDeltaBaseInGState */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012NPUSHW[ ]	/* 12 values pushed */\01231 651 31 653 2 15 651 15 652 15 653 3 \012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012EIF[ ]	/* EndIf */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012CALL[ ]	/* CallFunction */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC1[ ]	/* DeltaExceptionC1 */\012DELTAC2[ ]	/* DeltaExceptionC2 */\012DELTAC3[ ]	/* DeltaExceptionC3 */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */\012CALL[ ]	/* CallFunction */";
},
{
name = "Fpgm Table Assembly";
value = "NPUSHB[ ]	/* 65 values pushed */\01284 64 63 62 61 60 59 58 57 56 55 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 \012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01270 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012102 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SCFS[ ]	/* SetCoordFromStackFP */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012205 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\012346 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012141 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012237 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01277 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012144 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012WCVTP[ ]	/* WriteCVTInPixels */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[00]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SROUND[ ]	/* SuperRound */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01211 10 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01210 11 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012RCVT[ ]	/* ReadCVT */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SFVTL[0]	/* SetFVectorToLine */\012GFV[ ]	/* GetFVector */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SPVFS[ ]	/* SetPVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MAX[ ]	/* Maximum */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\01244 192 \012ROLL[ ]	/* RollTopThreeStack */\012MIN[ ]	/* Minimum */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012CALL[ ]	/* CallFunction */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01223 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SDPVTL[1]	/* SetDualPVectorToLine */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01223 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012RCVT[ ]	/* ReadCVT */\012RTG[ ]	/* RoundToGrid */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SDPVTL[1]	/* SetDualPVectorToLine */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012160 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\01223 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01223 \012ROFF[ ]	/* RoundOff */\012MIRP[00100]	/* MoveIndirectRelPt */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SUB[ ]	/* Subtract */\012MIN[ ]	/* Minimum */\012SCFS[ ]	/* SetCoordFromStackFP */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012DUP[ ]	/* DuplicateTopStack */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SCANCTRL[ ]	/* ScanConversionControl */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SCANCTRL[ ]	/* ScanConversionControl */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012RCVT[ ]	/* ReadCVT */\012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ROUND[10]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ROUND[00]	/* Round */\012ROLL[ ]	/* RollTopThreeStack */\012ROUND[10]	/* Round */\012ADD[ ]	/* Add */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01226 \012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\01226 26 64 \012PUSHW[ ]	/* 2 values pushed */\012-32 26 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012JMPR[ ]	/* Jump */\012PUSHB[ ]	/* 2 values pushed */\01220 0 \012ROLL[ ]	/* RollTopThreeStack */\012GT[ ]	/* GreaterThan */\012JROF[ ]	/* JumpRelativeOnFalse */\012PUSHB[ ]	/* 4 values pushed */\01225 64 32 25 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01263 \012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01214 15 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012RS[ ]	/* ReadStore */\012NEG[ ]	/* Negate */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012NEG[ ]	/* Negate */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ROLL[ ]	/* RollTopThreeStack */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\012100 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SRP0[ ]	/* SetRefPoint0 */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012MIRP[10101]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MIRP[01101]	/* MoveIndirectRelPt */\012MIRP[01100]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012SFVFS[ ]	/* SetFVectorFromStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SHC[1]	/* ShiftContourByLastPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012SROUND[ ]	/* SuperRound */\012PUSHW[ ]	/* 1 value pushed */\012617 \012SWAP[ ]	/* SwapTopStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012SRP0[ ]	/* SetRefPoint0 */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\012617 \012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012MDAP[1]	/* MoveDirectAbsPt */\012RTG[ ]	/* RoundToGrid */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0128192 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 64 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\0125461 \012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0120 128 47 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012MAX[ ]	/* Maximum */\012PUSHW[ ]	/* 1 value pushed */\01216384 \012DIV[ ]	/* Divide */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 5 values pushed */\0120 1 0 0 0 \012SZP2[ ]	/* SetZonePointer2 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MINDEX[ ]	/* MoveXToTopStack */\012ISECT[ ]	/* MovePtToIntersect */\012SRP0[ ]	/* SetRefPoint0 */\012SZPS[ ]	/* SetZonePointerS */\012SZP0[ ]	/* SetZonePointer0 */\012RCVT[ ]	/* ReadCVT */\012ROUND[00]	/* Round */\012NEG[ ]	/* Negate */\012MSIRP[0]	/* MoveStackIndirRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[1]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[0]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SPVTCA[0]	/* SetPVectorToAxis */\012ELSE[ ]	/* Else */\012SPVTCA[1]	/* SetPVectorToAxis */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SPVTL[0]	/* SetPVectorToLine */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHW[ ]	/* 1 value pushed */\0121800 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012ADD[ ]	/* Add */\012SCFS[ ]	/* SetCoordFromStackFP */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012ADD[ ]	/* Add */\012SCFS[ ]	/* SetCoordFromStackFP */\012EIF[ ]	/* EndIf */\012SPVFS[ ]	/* SetPVectorFromStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012IF[ ]	/* If */\012GPV[ ]	/* GetPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SPVTL[0]	/* SetPVectorToLine */\012GPV[ ]	/* GetPVector */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHW[ ]	/* 1 value pushed */\0121800 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHW[ ]	/* 1 value pushed */\012-16 \012ADD[ ]	/* Add */\012SCFS[ ]	/* SetCoordFromStackFP */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHW[ ]	/* 1 value pushed */\012-16 \012ADD[ ]	/* Add */\012SCFS[ ]	/* SetCoordFromStackFP */\012EIF[ ]	/* EndIf */\012SPVFS[ ]	/* SetPVectorFromStack */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012SWAP[ ]	/* SwapTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GPV[ ]	/* GetPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SPVTCA[1]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SPVTCA[0]	/* SetPVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012AND[ ]	/* LogicalAnd */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SPVFS[ ]	/* SetPVectorFromStack */\012PUSHB[ ]	/* 1 value pushed */\01218 \012RS[ ]	/* ReadStore */\012NOT[ ]	/* LogicalNot */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-128 \012DIV[ ]	/* Divide */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012SRP0[ ]	/* SetRefPoint0 */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHW[ ]	/* 2 values pushed */\012806 806 \012ROLL[ ]	/* RollTopThreeStack */\012WCVTF[ ]	/* WriteCVTInFUnits */\012RCVT[ ]	/* ReadCVT */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\012-70 \012MAX[ ]	/* Maximum */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01270 \012MIN[ ]	/* Minimum */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012ADD[ ]	/* Add */\012ROUND[00]	/* Round */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01235 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012PUSHB[ ]	/* 2 values pushed */\01264 1 \012GETINFO[ ]	/* GetInfo */\012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0124096 32 \012GETINFO[ ]	/* GetInfo */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 3 values pushed */\0122 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
1255,
0,
1170,
27,
1255,
30,
866,
30,
0,
-33,
0,
-33,
0,
-30,
-386,
0,
1255,
0,
-259,
-1,
727,
0,
84,
0,
84,
0,
0,
0,
0,
84,
84,
149,
84,
84,
84,
333,
84,
84,
84,
100,
212,
109,
145,
151,
84,
307,
462,
169,
64,
15,
84,
212,
3,
256,
344,
60,
147,
119,
213,
85,
-15,
84,
33,
163,
239,
44,
57,
104,
-2,
17,
127,
254,
381,
163,
258,
2,
15,
56,
211,
101,
144,
572,
811,
1259,
1,
42,
304,
939,
386,
45,
60,
84,
150,
23,
207,
344,
42,
-246,
60,
179,
541,
572,
2,
84,
203,
863,
2092,
-208,
-14,
448,
1225,
-158,
162,
316,
726,
1198,
204,
237,
290,
1024,
-381,
-117,
-101,
-100,
14,
244,
797,
-573,
-207,
-147,
84,
85,
96,
117,
124,
127,
128,
158,
205,
345,
573,
703,
-119,
17,
88,
101,
127,
183,
203,
299,
1024,
1120,
18,
82,
85,
132,
152,
185,
190,
207,
216,
229,
257,
271,
296,
384,
467,
468,
1280,
-572,
-316,
-183,
-158,
-145,
69,
78,
80,
128,
271,
285,
293,
321,
602,
858,
941,
983,
-541,
-288,
-226,
17,
84,
118,
120,
123,
143,
144,
171,
215,
217,
219,
259,
522,
596,
597,
941,
27,
61,
90,
98,
145,
147,
158,
169,
201,
223,
264,
308,
314,
320,
390,
428,
630,
1027,
-572,
3,
4,
21,
57,
72,
84,
100,
145,
155,
163,
165,
175,
196,
208,
209,
215,
241,
254,
259,
281,
299,
341,
348,
381,
389,
398,
404,
421,
428,
430,
491,
517,
728,
771,
897,
1222,
1259,
-298,
-246,
-102,
-87,
27,
27,
28,
32,
41,
44,
56,
76,
109,
205,
234,
296,
298,
300,
319,
466,
555,
556,
769,
1036,
-514,
-461,
-185,
-129,
-59,
-41,
35,
39,
56,
61,
68,
69,
77,
87,
98,
121,
131,
187,
198,
205,
205,
206,
230,
247,
257,
259,
266,
274,
285,
288,
291,
338,
339,
373,
428,
429,
495,
509,
534,
541,
568,
620,
690,
724,
811,
973,
1111,
1198,
-588,
-491,
-334,
-273,
-257,
-85,
-80,
-61,
-52,
2,
84,
54,
56,
67,
85,
93,
112,
115,
124,
127,
181,
187,
197,
228,
233,
245,
257,
262,
287,
296,
328,
331,
341,
408,
428,
479,
508,
512,
520,
638,
684,
767,
829,
912,
969,
1049,
1176,
-434,
-403,
-360,
-333,
-204,
-179,
1,
3,
5,
25,
52,
52,
58,
60,
85,
89,
115,
130,
145,
163,
170,
171,
179,
204,
214,
238,
280,
286,
304,
329,
342,
344,
352,
360,
367,
368,
369,
379,
380,
389,
425,
436,
443,
470,
475,
494,
516,
518,
533,
555,
555,
611,
642,
659,
692,
708,
726,
740,
768,
851,
856,
881,
891,
915,
948,
976,
1000,
1040,
1068,
1072,
1101,
1120,
1145,
1146,
1280,
1283,
1558,
2252,
-1001,
-915,
-670,
-614,
-573,
-466,
-444,
-405,
-373,
-319,
-298,
-286,
-245,
-65,
-27,
6,
48,
60,
89,
103,
115,
125,
127,
134,
142,
159,
169,
170,
214,
225,
231,
235,
241,
242,
245,
259,
265,
282,
286,
287,
300,
319,
323,
329,
333,
342,
343,
345,
358,
358,
360,
362,
373,
384,
427,
434,
444,
448,
449,
457,
459,
466,
476,
495,
513,
533,
558,
558,
571,
573,
597,
614,
642,
666,
683,
688,
729,
729,
757,
761,
806,
812,
818,
819,
830,
864,
881,
903,
904,
915,
919,
988,
997,
1026,
1045,
1073,
1107,
1151,
1223,
1283,
1380,
1430,
1435,
1476,
1480,
1514,
1552,
1627,
84,
84,
84,
84,
0,
0,
0,
0,
0,
0,
972,
705,
1086,
876,
160,
80,
515,
1002,
722,
572,
381,
763,
423,
541,
449,
757,
541,
848,
848,
579,
571,
2,
443,
72,
109,
20,
1947,
1569,
1569,
532,
16,
1888,
0,
0,
665,
557,
855,
1062,
780,
116,
80,
0,
602,
646,
608,
166,
444,
251,
584,
338,
374,
973,
672,
607,
923,
1170,
1086,
471,
127,
705,
1024,
525,
502,
65,
65,
318,
425,
467,
113,
726,
557,
943,
1230,
0,
0,
1288,
1020,
1389,
525,
-121,
1255,
1282,
978,
0,
1085,
258,
970,
346,
493,
336,
534,
449,
315,
654,
35,
346,
272,
493,
35,
329,
57,
217,
77,
185,
343,
56,
1248,
908,
586,
731,
57,
108,
147,
449,
972,
699,
108,
699,
418,
242,
56,
254,
370,
336,
412,
817,
126,
369,
84,
57,
106,
660,
34,
624,
546,
124,
85,
243,
386,
277,
215,
251,
427,
292,
614,
4,
781,
611,
212,
601,
60,
208,
274,
558,
382,
52,
109,
139,
394,
44,
509,
448,
204,
657,
54,
357,
958,
-999,
-728,
513,
-787,
433,
840,
177,
507,
1225,
1225,
516,
251,
449,
541,
304,
264,
320,
225,
163,
155,
85,
198,
33,
806,
169,
56,
5,
556,
3,
93,
96,
76,
17,
757,
380,
620,
105,
408,
1001,
421,
577,
79,
101,
883,
582,
406,
-267,
1089,
819,
65,
186,
281,
323,
1593,
2048,
1340,
1309,
1076,
1045,
1255,
62,
103,
103,
0,
1640,
1247,
1410,
103,
103,
979,
1012,
-167,
-223,
-417,
1294,
-292,
122,
217,
72,
219,
395,
179,
72,
218,
278,
350,
337,
1279,
587,
1279,
-170,
171,
687,
1244,
-233,
268,
289,
209,
-208,
329,
-331,
316,
292,
-224,
369,
-245,
337,
134,
94,
1705,
-615,
1163,
1157,
1141,
1148,
0,
-5,
123,
134,
146,
154,
194,
213,
164,
30,
39,
57,
76,
84,
92,
98,
105,
45,
48,
50,
53,
56,
62,
66,
68,
73,
76,
80,
86,
90,
96,
100,
102,
110,
113,
120,
157,
172,
177,
64,
75,
85,
94,
98,
102,
106,
113,
115,
119,
123,
126,
130,
135,
140,
145,
150,
166,
209,
682,
671,
801,
648,
709,
630,
617,
218,
218,
967,
832,
342,
212,
1161,
1151,
83,
36,
81,
275,
105,
55,
60,
31,
140,
140,
-45,
90,
41,
27,
271,
308,
127,
84,
84,
-21,
-42,
-88,
-561,
166,
166,
146,
146,
1602,
235,
1603,
40,
79,
502,
1050,
261
);
}
);
descender = -386;
id = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
userData = {
GSCornerRadius = 50;
};
weightValue = 400;
widthValue = 5;
xHeight = 866;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1127 0 LINE",
"1127 1280 LINE",
"103 1280 LINE",
"103 0 LINE"
);
},
{
closed = 1;
nodes = (
"135 1248 LINE",
"1095 1248 LINE",
"1095 32 LINE",
"135 32 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 7 
PUSHW[ ]\011/* 1 value pushed */
268 
PUSHB[ ]\011/* 5 values pushed */
2 1 0 5 4 
PUSHW[ ]\011/* 1 value pushed */
268 
PUSHB[ ]\011/* 5 values pushed */
3 0 10 6 5 
PUSHW[ ]\011/* 1 value pushed */
268 
PUSHB[ ]\011/* 7 values pushed */
3 3 2 26 9 7 4 
PUSHW[ ]\011/* 1 value pushed */
268 
PUSHB[ ]\011/* 7 values pushed */
1 0 25 8 79 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = space;
unicode = "0020,00A0";
},
{
glyphname = exclam;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"695.667 1186 OFFCURVE",
"696 1197.333 OFFCURVE",
"696 1204 CURVE SMOOTH",
"696 1250.667 OFFCURVE",
"661.667 1285 OFFCURVE",
"615 1285 CURVE SMOOTH",
"568.333 1285 OFFCURVE",
"533 1250.333 OFFCURVE",
"533 1205 CURVE SMOOTH",
"533 1197.667 OFFCURVE",
"533.667 1186 OFFCURVE",
"535 1170 CURVE SMOOTH",
"572 492 LINE SMOOTH",
"574.667 449.333 OFFCURVE",
"591 434 OFFCURVE",
"615 434 CURVE SMOOTH",
"637.667 434 OFFCURVE",
"654.333 449.333 OFFCURVE",
"657 492 CURVE SMOOTH",
"695 1170 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"539 178 OFFCURVE",
"491 133 OFFCURVE",
"491 73 CURVE SMOOTH",
"491 17 OFFCURVE",
"537.667 -30 OFFCURVE",
"595 -30 CURVE SMOOTH",
"634 -30 LINE SMOOTH",
"690 -30 OFFCURVE",
"738 15.333 OFFCURVE",
"738 74 CURVE SMOOTH",
"738 131.333 OFFCURVE",
"691.333 178 OFFCURVE",
"634 178 CURVE SMOOTH",
"595 178 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
214 11 229 11 2 8 7 10 0 16 1 19 116 26 4 
PUSHW[ ]\011/* 1 value pushed */
439 
NPUSHB[ ]\011/* 19 values pushed */
13 0 26 11 22 174 16 62 1 10 62 29 174 1 91 0 7 1 7 
PUSHW[ ]\011/* 5 values pushed */
585 32 254 334 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"336 748 LINE SMOOTH",
"344 697.333 OFFCURVE",
"365.667 679 OFFCURVE",
"399 679 CURVE SMOOTH",
"432.333 679 OFFCURVE",
"454 697.333 OFFCURVE",
"462 748 CURVE SMOOTH",
"532 1234 LINE",
"266 1234 LINE"
);
},
{
closed = 1;
nodes = (
"766 748 LINE SMOOTH",
"772.667 697.333 OFFCURVE",
"794.333 679 OFFCURVE",
"829 679 CURVE SMOOTH",
"861 679 OFFCURVE",
"883 697.333 OFFCURVE",
"891 748 CURVE SMOOTH",
"961 1234 LINE",
"695 1234 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
14 5 
PUSHW[ ]\011/* 1 value pushed */
646 
NPUSHB[ ]\011/* 10 values pushed */
1 10 9 9 0 1 0 10 215 9 
PUSHW[ ]\011/* 3 values pushed */
676 11 702 
NPUSHB[ ]\011/* 12 values pushed */
32 17 191 17 207 17 223 17 239 17 5 17 
PUSHW[ ]\011/* 3 values pushed */
278 2 702 
PUSHB[ ]\011/* 4 values pushed */
8 1 215 0 
PUSHW[ ]\011/* 1 value pushed */
676 
PUSHB[ ]\011/* 6 values pushed */
48 8 111 8 2 8 
PUSHW[ ]\011/* 5 values pushed */
665 18 241 336 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"985 740 LINE SMOOTH",
"1025 740 OFFCURVE",
"1041 756.667 OFFCURVE",
"1041 782 CURVE SMOOTH",
"1041 807.333 OFFCURVE",
"1025 824 OFFCURVE",
"985 824 CURVE SMOOTH",
"806 824 LINE",
"839 1286 LINE",
"840 1302 LINE",
"840 1318 OFFCURVE",
"831.333 1331.333 OFFCURVE",
"814 1342 CURVE",
"797 1346 LINE",
"774.333 1346 OFFCURVE",
"757.667 1330.667 OFFCURVE",
"755 1292 CURVE SMOOTH",
"722 824 LINE",
"533 824 LINE",
"565 1286 LINE",
"566 1302 LINE",
"566 1318 OFFCURVE",
"557.667 1331.333 OFFCURVE",
"541 1342 CURVE",
"523 1346 LINE",
"501.667 1346 OFFCURVE",
"483.667 1330.667 OFFCURVE",
"481 1292 CURVE SMOOTH",
"448 824 LINE",
"286 824 LINE SMOOTH",
"244.667 824 OFFCURVE",
"229 807.333 OFFCURVE",
"229 782 CURVE SMOOTH",
"229 756.667 OFFCURVE",
"244.667 740 OFFCURVE",
"286 740 CURVE SMOOTH",
"442 740 LINE",
"424 476 LINE",
"243 476 LINE SMOOTH",
"203 476 OFFCURVE",
"187 459.333 OFFCURVE",
"187 434 CURVE SMOOTH",
"187 408.667 OFFCURVE",
"203 392 OFFCURVE",
"243 392 CURVE SMOOTH",
"418 392 LINE",
"386 -70 LINE",
"385 -85 LINE",
"385 -102.333 OFFCURVE",
"393.333 -116 OFFCURVE",
"410 -126 CURVE",
"428 -130 LINE",
"449.333 -130 OFFCURVE",
"467.333 -116 OFFCURVE",
"470 -76 CURVE SMOOTH",
"502 392 LINE",
"692 392 LINE",
"659 -70 LINE",
"659 -85 LINE SMOOTH",
"659 -102.333 OFFCURVE",
"667.333 -116 OFFCURVE",
"684 -126 CURVE",
"701 -130 LINE",
"723.667 -130 OFFCURVE",
"740.333 -116 OFFCURVE",
"743 -76 CURVE SMOOTH",
"776 392 LINE",
"943 392 LINE SMOOTH",
"983 392 OFFCURVE",
"999 408.667 OFFCURVE",
"999 434 CURVE SMOOTH",
"999 459.333 OFFCURVE",
"983 476 OFFCURVE",
"943 476 CURVE SMOOTH",
"782 476 LINE",
"800 740 LINE"
);
},
{
closed = 1;
nodes = (
"698 476 LINE",
"508 476 LINE",
"527 740 LINE",
"716 740 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
80 19 80 28 159 20 159 27 175 20 175 26 175 27 7 71 0 72 38 37 73 65 64 55 44 45 54 91 73 64 19 53 73 182 49 59 49 2 1 75 35 36 74 8 9 18 29 28 19 91 74 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
34 53 74 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
36 53 74 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
29 53 74 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 7 values pushed */
23 53 74 182 23 13 23 
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 61 values pushed */
5 160 1 68 160 64 41 160 45 32 160 36 1 91 75 0 91 72 64 91 55 63 91 56 62 55 52 72 52 75 52 18 10 91 17 9 91 17 62 18 64 42 150 52 18 64 34 53 18 64 22 58 52 18 64 15 53 95 18 1 18 
PUSHW[ ]\011/* 1 value pushed */
592 
NPUSHB[ ]\011/* 45 values pushed */
77 46 91 53 45 91 54 37 91 73 36 91 74 53 62 54 52 73 52 80 74 1 74 52 19 27 91 20 144 24 160 24 2 28 91 80 20 144 20 160 20 3 20 62 19 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 11 values pushed */
42 150 52 16 19 144 19 160 19 3 19 
PUSHW[ ]\011/* 5 values pushed */
753 76 241 337 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
MIRP[01100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[01100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"389.667 1176.667 OFFCURVE",
"271 1048 OFFCURVE",
"271 904 CURVE SMOOTH",
"271 826.667 OFFCURVE",
"296.333 768 OFFCURVE",
"347 728 CURVE SMOOTH",
"397 688 OFFCURVE",
"486.667 655.333 OFFCURVE",
"616 630 CURVE SMOOTH",
"705.333 613.333 OFFCURVE",
"764 599.333 OFFCURVE",
"792 588 CURVE SMOOTH",
"877.333 552 OFFCURVE",
"916 496.667 OFFCURVE",
"916 418 CURVE SMOOTH",
"916 299.333 OFFCURVE",
"801 195 OFFCURVE",
"613 195 CURVE SMOOTH",
"431.667 195 OFFCURVE",
"320 288.333 OFFCURVE",
"312 359 CURVE",
"310.667 379.667 OFFCURVE",
"307 393 OFFCURVE",
"301 399 CURVE SMOOTH",
"292.333 407.667 OFFCURVE",
"282 412 OFFCURVE",
"270 412 CURVE SMOOTH",
"244.667 412 OFFCURVE",
"228 395 OFFCURVE",
"228 355 CURVE SMOOTH",
"228 191 LINE SMOOTH",
"228 151 OFFCURVE",
"246 135 OFFCURVE",
"270 135 CURVE SMOOTH",
"309.182 135 OFFCURVE",
"312 163.086 OFFCURVE",
"312 213 CURVE",
"382 153 OFFCURVE",
"468.333 119.667 OFFCURVE",
"571 113 CURVE",
"571 -134 LINE SMOOTH",
"571 -175.333 OFFCURVE",
"587.667 -191 OFFCURVE",
"613 -191 CURVE SMOOTH",
"638.333 -191 OFFCURVE",
"655 -175.333 OFFCURVE",
"655 -134 CURVE SMOOTH",
"655 113 LINE",
"877.667 135.667 OFFCURVE",
"1000 265 OFFCURVE",
"1000 417 CURVE SMOOTH",
"1000 530.333 OFFCURVE",
"947.667 610.333 OFFCURVE",
"841 657 CURVE SMOOTH",
"803.667 674.333 OFFCURVE",
"732.5 692.833 OFFCURVE",
"627.5 712.5 CURVE SMOOTH",
"522.5 732.167 OFFCURVE",
"453.667 753.333 OFFCURVE",
"421 776 CURVE SMOOTH",
"377.667 805.333 OFFCURVE",
"356 847.667 OFFCURVE",
"356 903 CURVE SMOOTH",
"356 1013.667 OFFCURVE",
"465.333 1118 OFFCURVE",
"616 1118 CURVE SMOOTH",
"690 1118 OFFCURVE",
"754.333 1100 OFFCURVE",
"809 1064 CURVE SMOOTH",
"846.333 1038.667 OFFCURVE",
"867 1010.333 OFFCURVE",
"871 979 CURVE SMOOTH",
"876.333 945.667 OFFCURVE",
"891.667 933 OFFCURVE",
"913 933 CURVE SMOOTH",
"938.333 933 OFFCURVE",
"956 949 OFFCURVE",
"956 989 CURVE SMOOTH",
"956 1114 LINE SMOOTH",
"956 1154 OFFCURVE",
"938.333 1170 OFFCURVE",
"913 1170 CURVE SMOOTH",
"890.333 1170 OFFCURVE",
"872.333 1154.333 OFFCURVE",
"871 1121 CURVE",
"791 1174.333 OFFCURVE",
"745.667 1190 OFFCURVE",
"655 1198 CURVE",
"655 1304 LINE SMOOTH",
"655 1345.333 OFFCURVE",
"638.333 1361 OFFCURVE",
"613 1361 CURVE SMOOTH",
"587.667 1361 OFFCURVE",
"571 1345.333 OFFCURVE",
"571 1304 CURVE SMOOTH",
"571 1198 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
34 34 12 16 63 74 35 74 36 120 35 121 36 191 0 219 26 6 85 34 132 34 181 34 181 36 4 88 8 32 33 34 35 36 37 38 7 39 31 80 79 78 77 76 75 74 7 73 82 63 
PUSHW[ ]\011/* 1 value pushed */
715 
PUSHB[ ]\011/* 3 values pushed */
56 225 70 
PUSHW[ ]\011/* 1 value pushed */
347 
PUSHB[ ]\011/* 3 values pushed */
50 50 42 
NPUSHW[ ]\011/* 12 values pushed */
641 46 21 713 14 269 8 0 483 4 28 347 
PUSHB[ ]\011/* 5 values pushed */
8 191 0 1 0 
PUSHW[ ]\011/* 7 values pushed */
483 4 24 347 18 11 347 
PUSHB[ ]\011/* 3 values pushed */
17 17 18 
PUSHW[ ]\011/* 1 value pushed */
269 
PUSHB[ ]\011/* 4 values pushed */
39 50 103 42 
PUSHW[ ]\011/* 1 value pushed */
718 
PUSHB[ ]\011/* 7 values pushed */
59 73 61 39 26 86 52 
NPUSHW[ ]\011/* 10 values pushed */
347 67 347 59 269 82 0 347 8 641 
PUSHB[ ]\011/* 3 values pushed */
31 61 82 
PUSHW[ ]\011/* 6 values pushed */
623 85 161 262 24 356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 60 values pushed */
71 84 29 41 37 37 75 38 29 84 31 64 0 33 80 31 64 0 76 36 73 64 1 71 41 73 64 1 30 83 28 64 1 84 0 32 81 34 64 0 33 34 80 79 74 38 77 64 1 36 35 76 77 72 40 70 64 0 41 42 
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
37 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 5 values pushed */
71 30 75 20 69 
PUSHW[ ]\011/* 7 values pushed */
-32 33 -20 29 -20 30 -20 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"742 1160 OFFCURVE",
"627.333 1275 OFFCURVE",
"486 1275 CURVE SMOOTH",
"344.667 1275 OFFCURVE",
"230 1160 OFFCURVE",
"230 1016 CURVE SMOOTH",
"230 872 OFFCURVE",
"344.667 756 OFFCURVE",
"486 756 CURVE SMOOTH",
"626 756 OFFCURVE",
"742 872 OFFCURVE",
"742 1016 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"682 905.333 OFFCURVE",
"594 817 OFFCURVE",
"486 817 CURVE SMOOTH",
"378 817 OFFCURVE",
"290 905.333 OFFCURVE",
"290 1016 CURVE SMOOTH",
"290 1126.667 OFFCURVE",
"378 1215 OFFCURVE",
"486 1215 CURVE SMOOTH",
"594 1215 OFFCURVE",
"682 1126.667 OFFCURVE",
"682 1016 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 729 OFFCURVE",
"1033.667 733 OFFCURVE",
"1037 737 CURVE",
"1041.667 743.667 OFFCURVE",
"1044 750.333 OFFCURVE",
"1044 757 CURVE SMOOTH",
"1044 773 OFFCURVE",
"1030.333 787 OFFCURVE",
"1017 787 CURVE SMOOTH",
"1011.667 787 OFFCURVE",
"1004.333 785.667 OFFCURVE",
"995 783 CURVE",
"217 530 LINE SMOOTH",
"205 526 OFFCURVE",
"197.333 522 OFFCURVE",
"194 518 CURVE",
"189.333 511.333 OFFCURVE",
"187 504.667 OFFCURVE",
"187 498 CURVE SMOOTH",
"187 482 OFFCURVE",
"200.333 468 OFFCURVE",
"215 468 CURVE SMOOTH",
"219.667 468 OFFCURVE",
"226.667 469.333 OFFCURVE",
"236 472 CURVE",
"1014 725 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1001 379 OFFCURVE",
"885.333 495 OFFCURVE",
"744 495 CURVE SMOOTH",
"602.667 495 OFFCURVE",
"488 379 OFFCURVE",
"488 235 CURVE SMOOTH",
"488 92.333 OFFCURVE",
"604 -24 OFFCURVE",
"744 -24 CURVE SMOOTH",
"885.333 -24 OFFCURVE",
"1001 91 OFFCURVE",
"1001 235 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"940 124.333 OFFCURVE",
"852 36 OFFCURVE",
"744 36 CURVE SMOOTH",
"636 36 OFFCURVE",
"548 125.667 OFFCURVE",
"548 235 CURVE SMOOTH",
"548 345.667 OFFCURVE",
"636 434 OFFCURVE",
"744 434 CURVE SMOOTH",
"852 434 OFFCURVE",
"940 347 OFFCURVE",
"940 235 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
200 25 1 6 34 1 107 8 29 28 27 26 25 24 43 42 41 9 31 32 33 34 35 36 37 38 39 9 40 30 24 77 31 35 223 35 2 35 35 53 3 34 77 16 25 208 25 2 25 25 3 59 55 53 255 65 55 47 21 55 3 255 15 55 9 12 55 15 0 1 0 255 18 55 6 
PUSHW[ ]\011/* 1 value pushed */
487 
NPUSHB[ ]\011/* 16 values pushed */
68 30 62 6 40 62 56 55 15 44 1 44 255 62 55 50 
PUSHW[ ]\011/* 1 value pushed */
755 
PUSHB[ ]\011/* 8 values pushed */
68 9 0 47 11 99 171 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 84 values pushed */
45 67 1 23 60 52 62 40 0 58 54 56 40 1 64 48 62 40 0 66 46 56 40 1 16 8 18 40 0 14 10 12 40 1 20 4 18 40 0 22 2 12 40 1 61 51 59 40 1 57 55 59 40 1 63 49 65 40 0 67 45 65 40 0 17 7 15 40 1 13 11 15 40 1 19 5 21 40 0 23 1 21 40 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
37 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 9 values pushed */
66 28 58 28 22 28 14 28 60 
NPUSHW[ ]\011/* 9 values pushed */
-28 63 -20 64 -28 16 -28 20 -28 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"966 0 LINE SMOOTH",
"1006 0 OFFCURVE",
"1022 18 OFFCURVE",
"1022 42 CURVE SMOOTH",
"1022 67.333 OFFCURVE",
"1006 84 OFFCURVE",
"966 84 CURVE SMOOTH",
"895 84 LINE",
"838 170 LINE",
"879.333 232 OFFCURVE",
"916 319.333 OFFCURVE",
"948 432 CURVE",
"995.385 432 OFFCURVE",
"1022 437.518 OFFCURVE",
"1022 475 CURVE SMOOTH",
"1022 499 OFFCURVE",
"1006 517 OFFCURVE",
"966 517 CURVE SMOOTH",
"884 517 LINE",
"860.667 416.333 OFFCURVE",
"828.667 327.667 OFFCURVE",
"788 251 CURVE",
"556 620 LINE SMOOTH",
"496 715.333 OFFCURVE",
"466 784.667 OFFCURVE",
"466 828 CURVE SMOOTH",
"466 912 OFFCURVE",
"546 993 OFFCURVE",
"638 993 CURVE SMOOTH",
"683.333 993 OFFCURVE",
"726.667 975.333 OFFCURVE",
"768 938 CURVE",
"833 973 LINE SMOOTH",
"861 987.667 OFFCURVE",
"868 1000 OFFCURVE",
"868 1016 CURVE SMOOTH",
"868 1040 OFFCURVE",
"848.667 1059 OFFCURVE",
"826 1059 CURVE SMOOTH",
"819.333 1059 OFFCURVE",
"801.667 1051.667 OFFCURVE",
"773 1037 CURVE",
"727.667 1065 OFFCURVE",
"682.333 1078 OFFCURVE",
"637 1078 CURVE SMOOTH",
"497 1078 OFFCURVE",
"382 962 OFFCURVE",
"382 830 CURVE SMOOTH",
"382 803.333 OFFCURVE",
"386.833 777.5 OFFCURVE",
"396.5 752.5 CURVE SMOOTH",
"406.167 727.5 OFFCURVE",
"435.667 675.333 OFFCURVE",
"485 596 CURVE",
"341 553.333 OFFCURVE",
"254 435.333 OFFCURVE",
"254 294 CURVE SMOOTH",
"254 111.333 OFFCURVE",
"396 -33 OFFCURVE",
"556 -33 CURVE SMOOTH",
"650.667 -33 OFFCURVE",
"728 11 OFFCURVE",
"788 99 CURVE",
"852 0 LINE"
);
},
{
closed = 1;
nodes = (
"739 177 LINE",
"690.333 93 OFFCURVE",
"628.667 51 OFFCURVE",
"554 51 CURVE SMOOTH",
"443.333 51 OFFCURVE",
"338 159.333 OFFCURVE",
"338 294 CURVE SMOOTH",
"338 407.333 OFFCURVE",
"409 495.333 OFFCURVE",
"521 522 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
124 7 124 9 124 57 202 1 204 32 5 59 42 86 48 103 35 103 47 123 7 132 62 137 65 169 7 162 62 195 62 10 36 47 41 64 53 47 58 64 93 38 85 58 6 36 48 49 49 35 57 65 1 0 0 9 56 50 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 49 values pushed */
53 53 155 49 53 53 50 49 50 56 49 35 35 49 49 36 0 9 20 0 0 9 65 36 1 48 4 9 35 57 3 42 6 65 36 1 48 4 9 35 57 3 15 3 46 91 39 39 38 
PUSHW[ ]\011/* 1 value pushed */
282 
PUSHB[ ]\011/* 5 values pushed */
30 44 64 15 36 
PUSHW[ ]\011/* 4 values pushed */
399 32 1 773 
NPUSHB[ ]\011/* 23 values pushed */
56 0 10 63 44 3 11 42 53 26 67 33 91 12 177 60 44 6 25 66 241 188 24 
PUSHW[ ]\011/* 1 value pushed */
292 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"551 730 LINE SMOOTH",
"559 674 OFFCURVE",
"580.667 655 OFFCURVE",
"614 655 CURVE SMOOTH",
"646 655 OFFCURVE",
"669 674 OFFCURVE",
"677 730 CURVE SMOOTH",
"747 1255 LINE",
"481 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
5 182 0 0 1 174 2 146 0 174 143 8 255 8 2 8 
PUSHW[ ]\011/* 5 values pushed */
589 9 254 334 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"605 326 OFFCURVE",
"641 170 OFFCURVE",
"753 -50 CURVE SMOOTH",
"809 -160 OFFCURVE",
"849.333 -226.333 OFFCURVE",
"874 -249 CURVE SMOOTH",
"882 -256.333 OFFCURVE",
"890.667 -260 OFFCURVE",
"900 -260 CURVE SMOOTH",
"924 -260 OFFCURVE",
"943 -240.667 OFFCURVE",
"943 -218 CURVE SMOOTH",
"943 -211.333 OFFCURVE",
"940.667 -204 OFFCURVE",
"936 -196 CURVE SMOOTH",
"789.333 72 OFFCURVE",
"732 278 OFFCURVE",
"732 498 CURVE SMOOTH",
"732 716.667 OFFCURVE",
"789.333 922.667 OFFCURVE",
"936 1192 CURVE SMOOTH",
"940.667 1200 OFFCURVE",
"943 1207.333 OFFCURVE",
"943 1214 CURVE SMOOTH",
"943 1236.667 OFFCURVE",
"924 1255 OFFCURVE",
"900 1255 CURVE SMOOTH",
"890.667 1255 OFFCURVE",
"882 1251.333 OFFCURVE",
"874 1244 CURVE SMOOTH",
"822 1197.333 OFFCURVE",
"675 914 OFFCURVE",
"635 742 CURVE SMOOTH",
"615 656 OFFCURVE",
"605 574.667 OFFCURVE",
"605 498 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
41 12 42 16 2 5 23 14 19 10 18 22 6 6 5 16 23 22 19 21 62 19 5 77 9 9 19 160 14 36 0 0 16 0 2 0 25 28 202 
PUSHW[ ]\011/* 3 values pushed */
261 24 281 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"639 669 OFFCURVE",
"603 825 OFFCURVE",
"491 1045 CURVE SMOOTH",
"435 1155 OFFCURVE",
"394.667 1221.333 OFFCURVE",
"370 1244 CURVE SMOOTH",
"362 1251.333 OFFCURVE",
"353.333 1255 OFFCURVE",
"344 1255 CURVE SMOOTH",
"320 1255 OFFCURVE",
"301 1236.667 OFFCURVE",
"301 1214 CURVE SMOOTH",
"301 1207.333 OFFCURVE",
"303.333 1200 OFFCURVE",
"308 1192 CURVE SMOOTH",
"454.667 922.667 OFFCURVE",
"512 717 OFFCURVE",
"512 497 CURVE SMOOTH",
"512 278.333 OFFCURVE",
"454.667 72 OFFCURVE",
"308 -196 CURVE SMOOTH",
"303.333 -204 OFFCURVE",
"301 -211.333 OFFCURVE",
"301 -218 CURVE SMOOTH",
"301 -240.667 OFFCURVE",
"320 -260 OFFCURVE",
"344 -260 CURVE SMOOTH",
"353.333 -260 OFFCURVE",
"362 -256 OFFCURVE",
"370 -248 CURVE",
"422 -202.667 OFFCURVE",
"569 82.167 OFFCURVE",
"609 253.5 CURVE SMOOTH",
"629 339.167 OFFCURVE",
"639 420.333 OFFCURVE",
"639 497 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
9 2 9 26 25 2 25 26 4 5 23 14 19 9 18 6 23 22 16 5 6 19 5 77 10 10 21 62 19 160 14 36 15 0 31 0 2 0 26 29 164 
PUSHW[ ]\011/* 3 values pushed */
333 24 281 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"295 1000 LINE SMOOTH",
"282.333 1004 OFFCURVE",
"272.333 1006 OFFCURVE",
"265 1006 CURVE SMOOTH",
"245 1006 OFFCURVE",
"226 986.667 OFFCURVE",
"226 964 CURVE SMOOTH",
"226 944 OFFCURVE",
"234.667 930.667 OFFCURVE",
"268 920 CURVE SMOOTH",
"542 830 LINE",
"373 598 LINE SMOOTH",
"361.667 582.667 OFFCURVE",
"356 570.667 OFFCURVE",
"356 562 CURVE SMOOTH",
"356 538 OFFCURVE",
"375 519 OFFCURVE",
"399 519 CURVE SMOOTH",
"413 519 OFFCURVE",
"427 528.667 OFFCURVE",
"441 548 CURVE SMOOTH",
"610 781 LINE",
"779 548 LINE SMOOTH",
"793 528.667 OFFCURVE",
"807.333 519 OFFCURVE",
"822 519 CURVE SMOOTH",
"844.667 519 OFFCURVE",
"864 538 OFFCURVE",
"864 562 CURVE SMOOTH",
"864 570.667 OFFCURVE",
"858.667 582.667 OFFCURVE",
"848 598 CURVE SMOOTH",
"679 830 LINE",
"952 919 LINE SMOOTH",
"986.667 929.667 OFFCURVE",
"995 944 OFFCURVE",
"995 964 CURVE SMOOTH",
"995 986.667 OFFCURVE",
"976.333 1006 OFFCURVE",
"955 1006 CURVE SMOOTH",
"948.333 1006 OFFCURVE",
"938.667 1004 OFFCURVE",
"926 1000 CURVE SMOOTH",
"653 911 LINE",
"653 1198 LINE SMOOTH",
"653 1239.333 OFFCURVE",
"635 1255 OFFCURVE",
"611 1255 CURVE SMOOTH",
"585.667 1255 OFFCURVE",
"568 1239.333 OFFCURVE",
"568 1198 CURVE SMOOTH",
"568 911 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 131 values pushed */
20 28 16 35 64 28 245 26 248 36 5 67 25 135 19 128 20 3 31 27 31 36 76 36 3 42 36 96 13 100 19 109 36 204 23 243 18 244 27 240 36 8 44 42 34 3 0 40 10 20 14 8 20 33 18 44 42 39 15 10 5 4 37 0 45 45 36 37 36 20 37 37 36 36 35 36 37 35 36 28 27 20 28 28 27 27 26 27 28 26 36 19 18 20 19 19 18 9 8 8 36 18 17 20 18 18 17 45 37 36 35 28 5 0 40 26 19 18 17 9 5 14 8 36 0 18 9 45 4 0 37 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 18 values pushed */
17 7 18 91 8 8 0 7 36 77 27 32 18 189 0 14 1 14 
PUSHW[ ]\011/* 1 value pushed */
410 
NPUSHB[ ]\011/* 15 values pushed */
8 64 27 77 18 32 7 8 36 0 4 249 40 1 0 
PUSHW[ ]\011/* 1 value pushed */
317 
NPUSHB[ ]\011/* 11 values pushed */
79 40 111 40 2 40 25 46 199 188 24 
PUSHW[ ]\011/* 1 value pushed */
292 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SFVTCA[0]\011/* SetFVectorToAxis */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[0]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1029 543 LINE SMOOTH",
"1069 543 OFFCURVE",
"1085 559.667 OFFCURVE",
"1085 585 CURVE SMOOTH",
"1085 610.333 OFFCURVE",
"1069 627 OFFCURVE",
"1029 627 CURVE SMOOTH",
"657 627 LINE",
"657 1045 LINE SMOOTH",
"657 1085 OFFCURVE",
"639 1101 OFFCURVE",
"615 1101 CURVE SMOOTH",
"589.667 1101 OFFCURVE",
"572 1085 OFFCURVE",
"572 1045 CURVE SMOOTH",
"572 627 LINE",
"200 627 LINE SMOOTH",
"160 627 OFFCURVE",
"144 610.333 OFFCURVE",
"144 585 CURVE SMOOTH",
"144 559.667 OFFCURVE",
"160 543 OFFCURVE",
"200 543 CURVE SMOOTH",
"572 543 LINE",
"572 123 LINE SMOOTH",
"572 83 OFFCURVE",
"590 67 OFFCURVE",
"614 67 CURVE SMOOTH",
"639.333 67 OFFCURVE",
"657 83 OFFCURVE",
"657 123 CURVE SMOOTH",
"657 543 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
25 91 31 31 0 0 8 20 167 16 91 4 167 8 15 91 9 9 8 28 220 0 91 8 23 91 17 17 24 91 16 16 8 1 91 7 7 8 220 48 12 1 12 25 32 8 80 129 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"302 -218 LINE SMOOTH",
"300 -226 OFFCURVE",
"299 -233.333 OFFCURVE",
"299 -240 CURVE SMOOTH",
"299 -273.333 OFFCURVE",
"325.667 -300 OFFCURVE",
"359 -300 CURVE SMOOTH",
"384.333 -300 OFFCURVE",
"406 -283.333 OFFCURVE",
"424 -250 CURVE SMOOTH",
"721 302 LINE",
"448 302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
194 0 210 0 224 0 240 0 4 0 182 4 1 243 2 193 0 210 15 7 31 7 2 7 
PUSHW[ ]\011/* 5 values pushed */
408 10 109 285 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"186 639 LINE",
"186 519 LINE",
"1043 519 LINE",
"1043 639 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
0 192 2 0 26 5 2 25 4 99 171 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = hyphen;
unicode = "002D,00AD";
},
{
glyphname = period;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"523.667 241 OFFCURVE",
"461 182.333 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30.333 OFFCURVE",
"522.333 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706.333 -30 OFFCURVE",
"769 28.667 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 180.667 OFFCURVE",
"707.667 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
1 178 8 11 4 216 11 25 14 109 
PUSHW[ ]\011/* 2 values pushed */
286 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"998.667 1330.667 OFFCURVE",
"1002 1341.667 OFFCURVE",
"1002 1349 CURVE SMOOTH",
"1002 1369 OFFCURVE",
"982.667 1389 OFFCURVE",
"960 1389 CURVE SMOOTH",
"941.333 1389 OFFCURVE",
"929.667 1382.667 OFFCURVE",
"915 1352 CURVE SMOOTH",
"240 -96 LINE SMOOTH",
"233.333 -110 OFFCURVE",
"230 -121 OFFCURVE",
"230 -129 CURVE SMOOTH",
"230 -149 OFFCURVE",
"249.333 -169 OFFCURVE",
"272 -169 CURVE SMOOTH",
"290 -169 OFFCURVE",
"304.667 -156.667 OFFCURVE",
"316 -132 CURVE SMOOTH",
"992 1316 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
9 9 22 1 25 9 3 56 0 57 9 70 1 73 9 91 9 107 9 118 1 120 9 137 8 137 9 150 1 153 9 165 1 169 9 182 0 182 1 199 1 201 9 214 1 230 1 233 9 246 1 248 9 23 11 9 1 11 
PUSHW[ ]\011/* 1 value pushed */
456 
PUSHB[ ]\011/* 6 values pushed */
3 11 62 0 91 9 
PUSHW[ ]\011/* 1 value pushed */
434 
NPUSHB[ ]\011/* 10 values pushed */
1 91 8 189 47 3 1 3 215 17 
PUSHW[ ]\011/* 1 value pushed */
443 
PUSHB[ ]\011/* 2 values pushed */
188 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1000 808.333 OFFCURVE",
"992.667 875.667 OFFCURVE",
"978 933 CURVE SMOOTH",
"956.667 1013 OFFCURVE",
"904 1127.667 OFFCURVE",
"864 1173 CURVE SMOOTH",
"802.667 1243.667 OFFCURVE",
"713 1285 OFFCURVE",
"613 1285 CURVE SMOOTH",
"510.333 1285 OFFCURVE",
"425.333 1243.667 OFFCURVE",
"358 1161 CURVE SMOOTH",
"272 1055.667 OFFCURVE",
"229 912.333 OFFCURVE",
"229 731 CURVE SMOOTH",
"229 523 LINE SMOOTH",
"229 446.333 OFFCURVE",
"236.667 379.333 OFFCURVE",
"252 322 CURVE SMOOTH",
"272 240.667 OFFCURVE",
"326.333 126 OFFCURVE",
"365 82 CURVE SMOOTH",
"426.333 11.333 OFFCURVE",
"517.333 -30 OFFCURVE",
"616 -30 CURVE SMOOTH",
"718.667 -30 OFFCURVE",
"803.667 11.333 OFFCURVE",
"871 94 CURVE SMOOTH",
"957 199.333 OFFCURVE",
"1000 342.333 OFFCURVE",
"1000 523 CURVE SMOOTH",
"1000 731 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"916 535 LINE SMOOTH",
"916 279 OFFCURVE",
"802.667 54 OFFCURVE",
"616 54 CURVE SMOOTH",
"568 54 OFFCURVE",
"525 66 OFFCURVE",
"487 90 CURVE SMOOTH",
"460.333 106.667 OFFCURVE",
"439 126.333 OFFCURVE",
"423 149 CURVE SMOOTH",
"365.667 230.333 OFFCURVE",
"313 376.333 OFFCURVE",
"313 535 CURVE SMOOTH",
"313 720 LINE SMOOTH",
"313 976 OFFCURVE",
"426 1200 OFFCURVE",
"614 1200 CURVE SMOOTH",
"661.333 1200 OFFCURVE",
"704 1188.333 OFFCURVE",
"742 1165 CURVE SMOOTH",
"768.667 1148.333 OFFCURVE",
"790.333 1128.333 OFFCURVE",
"807 1105 CURVE SMOOTH",
"863 1023.667 OFFCURVE",
"916 878.667 OFFCURVE",
"916 720 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
18 2 10 35 
PUSHW[ ]\011/* 3 values pushed */
-14 3 -12 
PUSHB[ ]\011/* 3 values pushed */
45 8 41 
NPUSHW[ ]\011/* 9 values pushed */
-14 40 -12 39 -9 22 -9 21 -9 
PUSHB[ ]\011/* 7 values pushed */
28 14 9 14 8 14 2 
PUSHW[ ]\011/* 3 values pushed */
-8 16 -14 
PUSHB[ ]\011/* 3 values pushed */
29 14 45 
PUSHW[ ]\011/* 3 values pushed */
-14 42 -14 
NPUSHB[ ]\011/* 35 values pushed */
41 5 28 14 31 14 34 18 109 8 30 28 18 0 46 1 39 5 13 34 35 14 33 61 18 44 61 5 18 5 5 13 26 61 0 
PUSHW[ ]\011/* 1 value pushed */
716 
PUSHB[ ]\011/* 7 values pushed */
49 36 61 14 25 48 161 
PUSHW[ ]\011/* 3 values pushed */
262 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 90 values pushed */
2 46 16 38 24 25 23 25 22 25 21 25 20 25 5 6 28 27 29 27 30 27 31 27 4 6 39 38 40 38 41 38 42 38 4 6 11 12 10 12 9 12 8 12 7 12 5 6 3 38 34 17 36 64 0 32 19 26 64 1 43 6 37 64 0 45 4 47 64 1 35 15 33 64 1 27 25 33 64 1 38 12 44 64 0 46 2 44 64 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
17 30 19 25 63 20 30 17 23 63 17 30 17 23 63 22 30 30 18 63 34 
PUSHW[ ]\011/* 1 value pushed */
-5 
NPUSHB[ ]\011/* 64 values pushed */
30 18 63 39 20 28 17 63 39 20 27 16 63 39 20 25 15 63 39 20 23 14 63 35 20 23 14 63 39 20 22 13 63 35 20 22 13 63 3 20 30 18 63 3 30 18 11 63 45 10 18 11 63 22 30 18 11 63 29 20 25 33 63 34 
PUSHW[ ]\011/* 1 value pushed */
-20 
NPUSHB[ ]\011/* 23 values pushed */
25 33 63 15 20 23 31 63 35 20 23 31 63 2 10 16 17 62 23 10 16 17 62 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 1151 LINE",
"255.333 1145 OFFCURVE",
"244.333 1139.333 OFFCURVE",
"239 1134 CURVE",
"232.333 1125.333 OFFCURVE",
"229 1116 OFFCURVE",
"229 1106 CURVE SMOOTH",
"229 1083.333 OFFCURVE",
"249 1064 OFFCURVE",
"269 1064 CURVE SMOOTH",
"275 1064 OFFCURVE",
"284.667 1066 OFFCURVE",
"298 1070 CURVE SMOOTH",
"572 1156 LINE",
"572 84 LINE",
"284 84 LINE SMOOTH",
"244 84 OFFCURVE",
"228 67.333 OFFCURVE",
"228 42 CURVE SMOOTH",
"228 18 OFFCURVE",
"244 0 OFFCURVE",
"284 0 CURVE SMOOTH",
"944 0 LINE SMOOTH",
"984 0 OFFCURVE",
"1000 18 OFFCURVE",
"1000 42 CURVE SMOOTH",
"1000 67.333 OFFCURVE",
"984 84 OFFCURVE",
"944 84 CURVE SMOOTH",
"656 84 LINE",
"656 1272 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
18 8 27 
PUSHW[ ]\011/* 1 value pushed */
-8 
NPUSHB[ ]\011/* 15 values pushed */
17 6 0 8 9 27 64 27 80 18 80 27 4 9 15 
PUSHW[ ]\011/* 3 values pushed */
681 12 411 
NPUSHB[ ]\011/* 9 values pushed */
16 12 12 15 16 190 9 8 2 
PUSHW[ ]\011/* 3 values pushed */
681 5 411 
NPUSHB[ ]\011/* 18 values pushed */
1 5 5 2 1 190 8 25 24 23 22 21 20 19 7 18 27 20 
PUSHW[ ]\011/* 3 values pushed */
727 17 615 
PUSHB[ ]\011/* 8 values pushed */
0 5 9 8 12 25 2 20 
PUSHW[ ]\011/* 4 values pushed */
641 17 23 718 
NPUSHB[ ]\011/* 10 values pushed */
0 103 17 17 1 103 0 16 1 16 
PUSHW[ ]\011/* 6 values pushed */
624 28 161 462 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */";
};
width = 1229;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"253 90 LINE",
"377 197.333 OFFCURVE",
"537.667 348.333 OFFCURVE",
"735 543 CURVE SMOOTH",
"813.667 620.333 OFFCURVE",
"868.167 678.167 OFFCURVE",
"898.5 716.5 CURVE SMOOTH",
"928.833 754.833 OFFCURVE",
"950.333 790.167 OFFCURVE",
"963 822.5 CURVE",
"959.167 793.167 OFFCURVE",
"982 851.667 OFFCURVE",
"982 929 CURVE SMOOTH",
"982 1113 OFFCURVE",
"808.333 1285 OFFCURVE",
"599 1285 CURVE SMOOTH",
"469.667 1285 OFFCURVE",
"334.5 1218.333 OFFCURVE",
"264.5 1109 CURVE SMOOTH",
"229.5 1054.333 OFFCURVE",
"212 1011 OFFCURVE",
"212 979 CURVE SMOOTH",
"212 957.667 OFFCURVE",
"229.333 940 OFFCURVE",
"252 940 CURVE SMOOTH",
"262.667 940 OFFCURVE",
"272 943.333 OFFCURVE",
"280 950 CURVE SMOOTH",
"286 954.667 OFFCURVE",
"291 965 OFFCURVE",
"295 981 CURVE SMOOTH",
"328.333 1105 OFFCURVE",
"453.333 1200 OFFCURVE",
"600 1200 CURVE SMOOTH",
"764 1200 OFFCURVE",
"897 1070 OFFCURVE",
"897 926 CURVE SMOOTH",
"897 872.667 OFFCURVE",
"880 824.333 OFFCURVE",
"824 755 CURVE",
"871.167 820.167 OFFCURVE",
"852 789.667 OFFCURVE",
"824 755 CURVE SMOOTH",
"796 720.333 OFFCURVE",
"744.333 666 OFFCURVE",
"669 592 CURVE SMOOTH",
"507.667 433.333 OFFCURVE",
"341.667 277.333 OFFCURVE",
"171 124 CURVE",
"171 0 LINE",
"983 0 LINE",
"983 117 LINE SMOOTH",
"983 157 OFFCURVE",
"965 173 OFFCURVE",
"941 173 CURVE SMOOTH",
"915.667 173 OFFCURVE",
"898 157 OFFCURVE",
"898 117 CURVE SMOOTH",
"898 84 LINE",
"253 84 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
27 11 43 5 4 20 0 0 
PUSHW[ ]\011/* 1 value pushed */
347 
PUSHB[ ]\011/* 6 values pushed */
10 12 20 61 34 5 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 -34 
NPUSHB[ ]\011/* 44 values pushed */
27 36 52 72 15 122 14 134 39 134 40 134 41 166 40 166 41 187 12 180 42 9 13 18 10 22 53 12 56 42 4 41 35 42 30 43 20 39 30 40 35 12 20 11 
PUSHW[ ]\011/* 1 value pushed */
-20 
NPUSHB[ ]\011/* 13 values pushed */
234 18 237 22 250 18 253 22 4 40 8 8 2 
PUSHW[ ]\011/* 3 values pushed */
681 5 476 
PUSHB[ ]\011/* 8 values pushed */
1 5 5 2 1 190 8 5 
PUSHW[ ]\011/* 6 values pushed */
484 9 11 269 1 347 
PUSHB[ ]\011/* 5 values pushed */
9 9 10 12 26 
PUSHW[ ]\011/* 1 value pushed */
505 
PUSHB[ ]\011/* 5 values pushed */
20 61 34 5 0 
PUSHW[ ]\011/* 4 values pushed */
347 11 2 347 
PUSHB[ ]\011/* 5 values pushed */
8 225 17 61 37 
NPUSHW[ ]\011/* 13 values pushed */
623 45 23 347 30 269 11 621 44 401 262 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
31 36 18 24 22 37 32 38 21 33 24 64 0 19 35 17 64 1 23 31 20 64 1 18 36 20 64 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"913.667 743 OFFCURVE",
"980 850 OFFCURVE",
"980 962 CURVE SMOOTH",
"980 1138 OFFCURVE",
"829 1285 OFFCURVE",
"617 1285 CURVE SMOOTH",
"514.333 1285 OFFCURVE",
"422.667 1256.667 OFFCURVE",
"342 1200 CURVE SMOOTH",
"284 1159.333 OFFCURVE",
"255 1125.667 OFFCURVE",
"255 1099 CURVE SMOOTH",
"255 1077.667 OFFCURVE",
"273.333 1060 OFFCURVE",
"296 1060 CURVE SMOOTH",
"310.667 1060 OFFCURVE",
"318.667 1062.333 OFFCURVE",
"340 1089 CURVE SMOOTH",
"398.667 1158.333 OFFCURVE",
"501 1201 OFFCURVE",
"617 1201 CURVE SMOOTH",
"782.333 1201 OFFCURVE",
"895 1088.333 OFFCURVE",
"895 963 CURVE SMOOTH",
"895 841.667 OFFCURVE",
"785.667 734 OFFCURVE",
"635 734 CURVE SMOOTH",
"563 735 LINE SMOOTH",
"529.667 735 OFFCURVE",
"513 717 OFFCURVE",
"513 693 CURVE SMOOTH",
"513 667.667 OFFCURVE",
"529 651 OFFCURVE",
"569 651 CURVE SMOOTH",
"693 651 OFFCURVE",
"827.833 592 OFFCURVE",
"892.5 496 CURVE SMOOTH",
"924.833 448 OFFCURVE",
"941 399 OFFCURVE",
"941 349 CURVE SMOOTH",
"941 199.667 OFFCURVE",
"792.667 54 OFFCURVE",
"598 54 CURVE SMOOTH",
"482.667 54 OFFCURVE",
"373.333 92.333 OFFCURVE",
"270 169 CURVE SMOOTH",
"256.667 179 OFFCURVE",
"244.667 184 OFFCURVE",
"234 184 CURVE SMOOTH",
"212.667 184 OFFCURVE",
"195 165.333 OFFCURVE",
"195 144 CURVE SMOOTH",
"195 132 OFFCURVE",
"200 120.667 OFFCURVE",
"210 110 CURVE SMOOTH",
"271.333 46 OFFCURVE",
"452 -30 OFFCURVE",
"596 -30 CURVE SMOOTH",
"841.333 -30 OFFCURVE",
"1025 150.667 OFFCURVE",
"1025 352 CURVE SMOOTH",
"1025 482.667 OFFCURVE",
"941.667 613.667 OFFCURVE",
"787 683 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
108 56 1 0 
PUSHW[ ]\011/* 1 value pushed */
-14 
NPUSHB[ ]\011/* 51 values pushed */
50 50 53 17 58 36 73 36 74 37 67 56 114 0 6 127 33 134 56 149 4 147 53 150 56 165 53 166 56 185 19 186 23 203 19 203 20 205 23 219 19 221 23 236 19 250 23 255 47 17 0 
PUSHW[ ]\011/* 1 value pushed */
-14 
PUSHB[ ]\011/* 6 values pushed */
20 34 27 36 52 17 
PUSHW[ ]\011/* 1 value pushed */
-34 
NPUSHB[ ]\011/* 28 values pushed */
27 36 52 41 8 15 11 43 40 17 3 47 33 30 26 24 0 5 35 28 0 25 30 32 40 38 44 25 
PUSHW[ ]\011/* 1 value pushed */
347 
PUSHB[ ]\011/* 4 values pushed */
32 32 18 44 
PUSHW[ ]\011/* 1 value pushed */
397 
PUSHB[ ]\011/* 4 values pushed */
38 61 51 14 
PUSHW[ ]\011/* 1 value pushed */
397 
PUSHB[ ]\011/* 6 values pushed */
18 61 6 35 61 54 
PUSHW[ ]\011/* 1 value pushed */
269 
NPUSHB[ ]\011/* 10 values pushed */
21 61 3 28 28 57 3 26 58 47 
PUSHW[ ]\011/* 3 values pushed */
269 28 641 
PUSHB[ ]\011/* 8 values pushed */
11 25 57 51 5 6 13 236 
PUSHW[ ]\011/* 3 values pushed */
384 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
52 53 36 37 19 20 4 5 37 52 35 64 1 19 5 21 64 1 36 53 38 64 1 20 4 18 64 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SHPIX[ ]\011/* ShiftZoneByPixel */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"771 84 LINE",
"614 84 LINE SMOOTH",
"572.667 84 OFFCURVE",
"557 67.333 OFFCURVE",
"557 42 CURVE SMOOTH",
"557 18 OFFCURVE",
"572.667 0 OFFCURVE",
"614 0 CURVE SMOOTH",
"926 0 LINE SMOOTH",
"967.333 0 OFFCURVE",
"983 18 OFFCURVE",
"983 42 CURVE SMOOTH",
"983 67.333 OFFCURVE",
"967.333 84 OFFCURVE",
"926 84 CURVE SMOOTH",
"856 84 LINE",
"856 351 LINE",
"926 351 LINE SMOOTH",
"967.333 351 OFFCURVE",
"983 369 OFFCURVE",
"983 393 CURVE SMOOTH",
"983 418.333 OFFCURVE",
"967.333 435 OFFCURVE",
"926 435 CURVE SMOOTH",
"856 435 LINE",
"856 1255 LINE",
"681 1255 LINE",
"214 448 LINE",
"214 351 LINE",
"771 351 LINE"
);
},
{
closed = 1;
nodes = (
"302 435 LINE",
"727 1170 LINE",
"771 1170 LINE",
"771 435 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
0 3 0 32 2 30 33 5 29 31 28 22 25 
PUSHW[ ]\011/* 1 value pushed */
486 
PUSHB[ ]\011/* 7 values pushed */
29 29 190 22 15 21 18 
PUSHW[ ]\011/* 1 value pushed */
352 
NPUSHB[ ]\011/* 18 values pushed */
14 14 190 21 32 33 33 103 2 3 20 2 2 3 2 33 31 32 
PUSHW[ ]\011/* 1 value pushed */
347 
PUSHB[ ]\011/* 8 values pushed */
3 3 4 5 33 30 13 30 
PUSHW[ ]\011/* 1 value pushed */
347 
PUSHB[ ]\011/* 3 values pushed */
0 14 0 
PUSHW[ ]\011/* 1 value pushed */
754 
PUSHB[ ]\011/* 3 values pushed */
29 29 28 
PUSHW[ ]\011/* 4 values pushed */
347 22 15 347 
PUSHB[ ]\011/* 3 values pushed */
22 21 3 
PUSHW[ ]\011/* 1 value pushed */
643 
NPUSHB[ ]\011/* 15 values pushed */
1 5 14 103 29 29 31 0 15 30 1 0 30 1 30 
PUSHW[ ]\011/* 3 values pushed */
622 33 347 
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 1 25 34 4 4 21 12 161 
PUSHW[ ]\011/* 3 values pushed */
466 24 292 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SFVTCA[1]\011/* SetFVectorToAxis */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"885 1170 LINE SMOOTH",
"925 1170 OFFCURVE",
"941 1188 OFFCURVE",
"941 1212 CURVE SMOOTH",
"941 1237.333 OFFCURVE",
"925 1255 OFFCURVE",
"885 1255 CURVE SMOOTH",
"299 1255 LINE",
"299 698 LINE SMOOTH",
"299 668.667 OFFCURVE",
"315 652 OFFCURVE",
"339 652 CURVE SMOOTH",
"347.667 652 OFFCURVE",
"362.667 657.333 OFFCURVE",
"384 668 CURVE SMOOTH",
"471.333 714 OFFCURVE",
"558.667 737 OFFCURVE",
"646 737 CURVE SMOOTH",
"816.667 737 OFFCURVE",
"940 611.333 OFFCURVE",
"940 422 CURVE SMOOTH",
"940 199.333 OFFCURVE",
"797 54 OFFCURVE",
"601 54 CURVE SMOOTH",
"482.333 54 OFFCURVE",
"372.667 101 OFFCURVE",
"272 195 CURVE SMOOTH",
"259.333 207 OFFCURVE",
"247.333 213 OFFCURVE",
"236 213 CURVE SMOOTH",
"214.667 213 OFFCURVE",
"196 194 OFFCURVE",
"196 170 CURVE SMOOTH",
"196 155.333 OFFCURVE",
"208.667 137 OFFCURVE",
"234 115 CURVE SMOOTH",
"276.667 78.333 OFFCURVE",
"324 47.667 OFFCURVE",
"376 23 CURVE SMOOTH",
"449.333 -12.333 OFFCURVE",
"525.667 -30 OFFCURVE",
"605 -30 CURVE SMOOTH",
"845 -30 OFFCURVE",
"1025 151.333 OFFCURVE",
"1025 418 CURVE SMOOTH",
"1025 659.333 OFFCURVE",
"864.667 821 OFFCURVE",
"654 821 CURVE SMOOTH",
"572.667 821 OFFCURVE",
"481.667 800.333 OFFCURVE",
"383 759 CURVE",
"383 1170 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
11 27 9 28 34 9 41 25 58 24 5 45 41 76 41 95 41 110 41 152 41 201 25 219 24 235 24 8 25 34 27 36 52 22 
PUSHW[ ]\011/* 1 value pushed */
-34 
NPUSHB[ ]\011/* 19 values pushed */
27 36 52 27 32 35 8 20 16 32 36 22 31 26 1 31 29 33 0 
PUSHW[ ]\011/* 6 values pushed */
347 37 1 347 33 484 
NPUSHB[ ]\011/* 9 values pushed */
29 61 4 4 10 0 38 37 19 
PUSHW[ ]\011/* 1 value pushed */
483 
NPUSHB[ ]\011/* 9 values pushed */
23 61 10 26 61 16 7 1 7 
PUSHW[ ]\011/* 3 values pushed */
645 41 620 
PUSHB[ ]\011/* 6 values pushed */
37 0 1 103 37 36 
PUSHW[ ]\011/* 1 value pushed */
477 
PUSHB[ ]\011/* 8 values pushed */
16 25 45 37 4 10 13 236 
PUSHW[ ]\011/* 3 values pushed */
384 24 292 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 24 values pushed */
24 28 5 9 28 5 26 64 1 24 9 26 64 1 27 6 29 64 1 25 8 23 64 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"360 577.667 OFFCURVE",
"358 612 OFFCURVE",
"358 634 CURVE SMOOTH",
"358 942 OFFCURVE",
"614 1200 OFFCURVE",
"874 1200 CURVE SMOOTH",
"914.667 1200 OFFCURVE",
"948.667 1193.333 OFFCURVE",
"976 1180 CURVE",
"988 1173.333 OFFCURVE",
"998.333 1170 OFFCURVE",
"1007 1170 CURVE SMOOTH",
"1029.667 1170 OFFCURVE",
"1046 1187 OFFCURVE",
"1046 1211 CURVE SMOOTH",
"1046 1227.667 OFFCURVE",
"1038 1241 OFFCURVE",
"1022 1251 CURVE SMOOTH",
"984.667 1273.667 OFFCURVE",
"938 1285 OFFCURVE",
"882 1285 CURVE SMOOTH",
"716.667 1285 OFFCURVE",
"571.667 1210.5 OFFCURVE",
"465 1104.5 CURVE SMOOTH",
"411.667 1051.5 OFFCURVE",
"369 990 OFFCURVE",
"337 920 CURVE SMOOTH",
"295 829.333 OFFCURVE",
"274 731.333 OFFCURVE",
"274 626 CURVE SMOOTH",
"274 486 OFFCURVE",
"296.333 358.333 OFFCURVE",
"341 243 CURVE SMOOTH",
"413 57.667 OFFCURVE",
"547.667 -30 OFFCURVE",
"693 -30 CURVE SMOOTH",
"915.667 -30 OFFCURVE",
"1050 169 OFFCURVE",
"1050 369 CURVE SMOOTH",
"1050 587.667 OFFCURVE",
"886.667 756 OFFCURVE",
"708 756 CURVE SMOOTH",
"573.333 756 OFFCURVE",
"468 684.333 OFFCURVE",
"364 531 CURVE"
);
},
{
closed = 1;
nodes = (
"433 486.667 OFFCURVE",
"478 552.333 OFFCURVE",
"518 589 CURVE SMOOTH",
"578 644.333 OFFCURVE",
"640.333 672 OFFCURVE",
"705 672 CURVE SMOOTH",
"839.667 672 OFFCURVE",
"966 543.667 OFFCURVE",
"966 369 CURVE SMOOTH",
"966 182.333 OFFCURVE",
"844.333 54 OFFCURVE",
"695 54 CURVE SMOOTH",
"547 54 OFFCURVE",
"433.667 149.333 OFFCURVE",
"383 392 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
46 34 20 36 52 34 30 43 30 33 30 38 
PUSHW[ ]\011/* 3 values pushed */
-10 0 -30 
NPUSHB[ ]\011/* 14 values pushed */
53 4 59 8 67 4 75 8 85 4 90 8 6 37 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 32 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 34 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 4 values pushed */
27 35 52 36 
PUSHW[ ]\011/* 1 value pushed */
-44 
NPUSHB[ ]\011/* 10 values pushed */
27 36 52 41 30 43 30 36 8 13 
PUSHW[ ]\011/* 1 value pushed */
-30 
NPUSHB[ ]\011/* 127 values pushed */
4 4 4 8 20 4 20 8 38 4 38 8 42 19 58 19 75 19 91 19 106 19 121 19 136 19 133 36 187 19 181 36 218 11 218 18 235 13 19 11 1 5 8 7 32 6 38 25 15 36 32 37 33 101 32 99 33 121 33 121 40 115 47 112 48 179 34 187 42 214 12 226 10 230 12 18 90 8 35 15 33 16 17 18 32 19 20 31 21 30 22 29 23 25 16 24 13 34 0 36 13 12 37 11 38 10 1 48 47 2 46 44 4 40 8 41 7 43 42 5 23 6 14 13 36 49 0 
PUSHW[ ]\011/* 1 value pushed */
677 
PUSHB[ ]\011/* 6 values pushed */
45 61 3 3 9 27 
PUSHW[ ]\011/* 1 value pushed */
478 
NPUSHB[ ]\011/* 22 values pushed */
31 61 20 5 39 61 9 13 24 225 6 61 0 42 16 42 32 42 48 42 4 42 
PUSHW[ ]\011/* 6 values pushed */
717 50 36 292 12 678 
PUSHB[ ]\011/* 8 values pushed */
34 61 48 14 1 14 25 49 
PUSHW[ ]\011/* 4 values pushed */
312 385 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
37 44 32 33 4 19 16 15 17 15 18 15 3 6 12 13 11 13 2 6 44 4 42 64 1 32 19 34 
PUSHW[ ]\011/* 1 value pushed */
428 
NPUSHB[ ]\011/* 21 values pushed */
0 38 10 36 64 0 37 36 40 8 42 64 1 43 5 45 64 1 33 15 31 
PUSHW[ ]\011/* 1 value pushed */
428 
NPUSHB[ ]\011/* 11 values pushed */
1 37 13 39 64 0 41 7 39 64 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"564 66 LINE SMOOTH",
"560 54 OFFCURVE",
"558 44.667 OFFCURVE",
"558 38 CURVE SMOOTH",
"558 16.667 OFFCURVE",
"576 -2 OFFCURVE",
"600 -2 CURVE SMOOTH",
"618.667 -2 OFFCURVE",
"633.333 6.333 OFFCURVE",
"644 41 CURVE SMOOTH",
"982 1121 LINE",
"982 1255 LINE",
"211 1255 LINE",
"211 1096 LINE SMOOTH",
"211 1056 OFFCURVE",
"229 1040 OFFCURVE",
"253 1040 CURVE SMOOTH",
"278.333 1040 OFFCURVE",
"295 1056 OFFCURVE",
"295 1096 CURVE SMOOTH",
"295 1170 LINE",
"897 1170 LINE",
"897 1132 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
9 3 
PUSHW[ ]\011/* 3 values pushed */
681 6 352 
NPUSHB[ ]\011/* 42 values pushed */
2 6 6 3 2 190 9 12 13 13 103 21 0 20 21 21 0 21 9 0 1 12 23 11 21 12 0 3 16 1 2 103 11 10 17 15 16 10 4 16 12 11 
PUSHW[ ]\011/* 3 values pushed */
347 1 680 
PUSHB[ ]\011/* 5 values pushed */
23 9 25 22 236 
PUSHW[ ]\011/* 3 values pushed */
262 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"848.333 686.333 OFFCURVE",
"892.667 723.333 OFFCURVE",
"920 762 CURVE SMOOTH",
"958.667 815.333 OFFCURVE",
"978 874.667 OFFCURVE",
"978 940 CURVE SMOOTH",
"978 1124 OFFCURVE",
"816.333 1285 OFFCURVE",
"615 1285 CURVE SMOOTH",
"415 1285 OFFCURVE",
"252 1124 OFFCURVE",
"252 940 CURVE SMOOTH",
"252 874.667 OFFCURVE",
"271.333 815 OFFCURVE",
"310 761 CURVE SMOOTH",
"338 723 OFFCURVE",
"382.667 686.333 OFFCURVE",
"444 651 CURVE",
"302.667 581.667 OFFCURVE",
"231 463.667 OFFCURVE",
"231 337 CURVE SMOOTH",
"231 138.333 OFFCURVE",
"401.667 -30 OFFCURVE",
"615 -30 CURVE SMOOTH",
"828.333 -30 OFFCURVE",
"999 138.333 OFFCURVE",
"999 337 CURVE SMOOTH",
"999 465 OFFCURVE",
"927 583 OFFCURVE",
"787 651 CURVE"
);
},
{
closed = 1;
nodes = (
"892 807.667 OFFCURVE",
"772.667 693 OFFCURVE",
"614 693 CURVE SMOOTH",
"456.667 693 OFFCURVE",
"337 807.333 OFFCURVE",
"337 938 CURVE SMOOTH",
"337 1079.333 OFFCURVE",
"459.333 1200 OFFCURVE",
"614 1200 CURVE SMOOTH",
"770 1200 OFFCURVE",
"892 1081 OFFCURVE",
"892 937 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"915 184.333 OFFCURVE",
"784.333 54 OFFCURVE",
"615 54 CURVE SMOOTH",
"445.667 54 OFFCURVE",
"315 184 OFFCURVE",
"315 336 CURVE SMOOTH",
"315 482.667 OFFCURVE",
"444.333 610 OFFCURVE",
"615 610 CURVE SMOOTH",
"785.667 610 OFFCURVE",
"915 483 OFFCURVE",
"915 335 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
18 167 34 202 0 238 0 238 12 4 26 4 29 21 43 45 87 43 101 2 5 11 14 4 24 27 14 20 24 138 24 148 1 154 8 154 11 147 39 159 43 156 45 169 1 163 39 181 2 191 10 186 12 186 43 205 10 202 43 19 121 1 165 33 2 49 20 45 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 3 values pushed */
28 35 30 
PUSHW[ ]\011/* 1 value pushed */
-35 
PUSHB[ ]\011/* 3 values pushed */
48 35 46 
PUSHW[ ]\011/* 3 values pushed */
-35 21 -8 
PUSHB[ ]\011/* 5 values pushed */
17 8 40 40 36 
PUSHW[ ]\011/* 1 value pushed */
-35 
PUSHB[ ]\011/* 3 values pushed */
42 40 34 
PUSHW[ ]\011/* 3 values pushed */
-20 37 -22 
PUSHB[ ]\011/* 3 values pushed */
39 34 33 
PUSHW[ ]\011/* 1 value pushed */
-20 
NPUSHB[ ]\011/* 18 values pushed */
43 40 64 8 35 61 41 41 6 29 61 19 5 47 61 6 13 35 
PUSHW[ ]\011/* 1 value pushed */
473 
NPUSHB[ ]\011/* 16 values pushed */
41 41 22 16 38 61 3 225 26 61 63 22 79 22 2 22 
PUSHW[ ]\011/* 1 value pushed */
493 
NPUSHB[ ]\011/* 11 values pushed */
51 32 61 16 225 44 61 9 25 50 161 
PUSHW[ ]\011/* 3 values pushed */
262 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 48 values pushed */
45 49 27 31 17 21 4 8 30 18 32 64 0 28 20 26 64 1 46 7 44 64 0 48 5 38 64 1 31 17 29 64 1 27 21 29 64 1 45 8 47 64 0 49 4 47 64 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
43 -24 
PUSHB[ ]\011/* 4 values pushed */
30 18 63 33 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
23 14 63 33 
PUSHW[ ]\011/* 1 value pushed */
-24 
NPUSHB[ ]\011/* 48 values pushed */
22 13 63 5 24 23 14 63 5 24 22 13 63 1 24 23 14 63 1 24 22 13 63 5 24 20 12 63 21 24 30 18 63 21 24 23 14 63 21 24 22 13 63 21 24 20 12 63 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"961.667 659.333 OFFCURVE",
"963 620 OFFCURVE",
"963 592 CURVE SMOOTH",
"963 284 OFFCURVE",
"728 54 OFFCURVE",
"444 54 CURVE SMOOTH",
"410 54 OFFCURVE",
"380 60.333 OFFCURVE",
"354 73 CURVE SMOOTH",
"338.667 80.333 OFFCURVE",
"327 84 OFFCURVE",
"319 84 CURVE SMOOTH",
"296.333 84 OFFCURVE",
"278 66.667 OFFCURVE",
"278 44 CURVE SMOOTH",
"278 28 OFFCURVE",
"286.667 14.667 OFFCURVE",
"304 4 CURVE SMOOTH",
"342 -18.667 OFFCURVE",
"391 -30 OFFCURVE",
"451 -30 CURVE SMOOTH",
"541.667 -30 OFFCURVE",
"629 -9 OFFCURVE",
"713 33 CURVE SMOOTH",
"835.667 95.667 OFFCURVE",
"939.333 203.333 OFFCURVE",
"990 310 CURVE SMOOTH",
"1028 388.667 OFFCURVE",
"1047 487.333 OFFCURVE",
"1047 606 CURVE SMOOTH",
"1047 758.667 OFFCURVE",
"1024.667 892.667 OFFCURVE",
"980 1008 CURVE SMOOTH",
"910.667 1188 OFFCURVE",
"778 1285 OFFCURVE",
"626 1285 CURVE SMOOTH",
"412.667 1285 OFFCURVE",
"275 1083.333 OFFCURVE",
"275 878 CURVE SMOOTH",
"275 736.667 OFFCURVE",
"343.833 595.667 OFFCURVE",
"452.5 529 CURVE SMOOTH",
"506.833 495.667 OFFCURVE",
"563 479 OFFCURVE",
"621 479 CURVE SMOOTH",
"746.333 479 OFFCURVE",
"872.333 556.667 OFFCURVE",
"959 710 CURVE"
);
},
{
closed = 1;
nodes = (
"901.667 772.667 OFFCURVE",
"870 719.667 OFFCURVE",
"848 691 CURVE SMOOTH",
"780 605.667 OFFCURVE",
"701.667 563 OFFCURVE",
"623 563 CURVE SMOOTH",
"487 563 OFFCURVE",
"359 696.333 OFFCURVE",
"359 879 CURVE SMOOTH",
"359 1067 OFFCURVE",
"485.333 1200 OFFCURVE",
"628 1200 CURVE SMOOTH",
"768 1200 OFFCURVE",
"872.333 1120.667 OFFCURVE",
"943 850 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
7 8 4 42 7 43 0 46 170 36 186 36 6 38 34 20 36 52 35 44 20 36 52 14 24 20 36 52 13 14 30 50 52 12 34 30 50 52 50 22 51 44 39 44 21 
PUSHW[ ]\011/* 1 value pushed */
-14 
NPUSHB[ ]\011/* 15 values pushed */
91 49 229 18 249 35 243 42 244 46 5 191 0 1 49 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 4 values pushed */
20 36 52 35 
PUSHW[ ]\011/* 1 value pushed */
-22 
PUSHB[ ]\011/* 3 values pushed */
39 22 34 
PUSHW[ ]\011/* 3 values pushed */
-22 50 -24 
NPUSHB[ ]\011/* 45 values pushed */
30 50 52 6 20 181 49 196 49 211 49 4 94 8 13 36 0 38 14 12 39 11 40 9 42 8 12 7 14 12 39 13 38 0 38 14 13 4 15 36 41 61 10 5 0 
PUSHW[ ]\011/* 1 value pushed */
677 
NPUSHB[ ]\011/* 10 values pushed */
47 61 3 3 10 33 61 22 13 38 
PUSHW[ ]\011/* 3 values pushed */
292 13 678 
NPUSHB[ ]\011/* 10 values pushed */
36 61 15 26 53 26 225 7 61 44 
PUSHW[ ]\011/* 6 values pushed */
680 52 312 385 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 39 values pushed */
39 46 34 35 4 21 13 14 12 14 2 6 17 16 18 16 19 16 20 16 4 6 5 37 42 9 44 64 0 40 11 38 64 1 39 38 34 21 36 
PUSHW[ ]\011/* 1 value pushed */
428 
NPUSHB[ ]\011/* 19 values pushed */
1 46 4 44 64 0 43 8 41 64 1 39 14 41 64 1 35 16 33 
PUSHW[ ]\011/* 1 value pushed */
428 
PUSHB[ ]\011/* 6 values pushed */
0 45 6 47 64 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"523.667 866 OFFCURVE",
"461 807.667 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 655.667 OFFCURVE",
"522.333 594 OFFCURVE",
"597 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706.333 594 OFFCURVE",
"769 652.333 OFFCURVE",
"769 731 CURVE SMOOTH",
"769 804.333 OFFCURVE",
"707.667 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"597 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"523.667 241 OFFCURVE",
"461 182.333 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30.333 OFFCURVE",
"522.333 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706.333 -30 OFFCURVE",
"769 28.667 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 180.667 OFFCURVE",
"707.667 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
15 178 22 11 8 178 0 6 18 
PUSHW[ ]\011/* 4 values pushed */
278 25 4 278 
PUSHB[ ]\011/* 6 values pushed */
11 11 25 25 28 109 
PUSHW[ ]\011/* 2 values pushed */
286 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 866 OFFCURVE",
"461 807.667 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 655.667 OFFCURVE",
"521.333 594 OFFCURVE",
"596 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706.333 594 OFFCURVE",
"768 652.333 OFFCURVE",
"768 731 CURVE SMOOTH",
"768 804.333 OFFCURVE",
"707.667 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"596 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 -132 LINE SMOOTH",
"314 -144.667 OFFCURVE",
"312 -155 OFFCURVE",
"312 -163 CURVE SMOOTH",
"312 -191 OFFCURVE",
"336 -214 OFFCURVE",
"368 -214 CURVE SMOOTH",
"379.333 -214 OFFCURVE",
"389.167 -211 OFFCURVE",
"397.5 -205 CURVE SMOOTH",
"405.833 -199 OFFCURVE",
"417 -184.667 OFFCURVE",
"431 -162 CURVE SMOOTH",
"714 302 LINE",
"450 302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
192 14 208 14 216 16 224 14 233 16 240 14 249 16 7 23 19 
PUSHW[ ]\011/* 1 value pushed */
426 
PUSHB[ ]\011/* 4 values pushed */
48 15 1 15 
PUSHW[ ]\011/* 1 value pushed */
282 
NPUSHB[ ]\011/* 9 values pushed */
8 178 0 15 243 16 193 22 4 
PUSHW[ ]\011/* 1 value pushed */
278 
NPUSHB[ ]\011/* 13 values pushed */
11 52 14 210 15 22 1 22 218 25 0 6 109 
PUSHW[ ]\011/* 2 values pushed */
286 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = semicolon;
unicode = "003B,037E";
},
{
glyphname = less;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1005 77 LINE SMOOTH",
"1019.667 69 OFFCURVE",
"1030.667 65 OFFCURVE",
"1038 65 CURVE SMOOTH",
"1060.667 65 OFFCURVE",
"1080 84.333 OFFCURVE",
"1080 107 CURVE SMOOTH",
"1080 123.667 OFFCURVE",
"1068.667 138.333 OFFCURVE",
"1046 151 CURVE SMOOTH",
"269 583 LINE",
"1047 1015 LINE SMOOTH",
"1069.667 1027.667 OFFCURVE",
"1081 1042.333 OFFCURVE",
"1081 1059 CURVE SMOOTH",
"1081 1081.667 OFFCURVE",
"1061.667 1101 OFFCURVE",
"1039 1101 CURVE SMOOTH",
"1031.667 1101 OFFCURVE",
"1020.667 1097 OFFCURVE",
"1006 1089 CURVE SMOOTH",
"98 583 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
177 6 1 8 9 9 36 0 1 20 0 9 10 0 1 10 9 9 36 0 17 20 0 9 8 0 17 8 91 1 
PUSHW[ ]\011/* 1 value pushed */
426 
PUSHB[ ]\011/* 4 values pushed */
0 10 91 17 
NPUSHW[ ]\011/* 9 values pushed */
426 10 444 12 662 17 683 8 444 
PUSHB[ ]\011/* 3 values pushed */
6 185 1 
PUSHW[ ]\011/* 1 value pushed */
683 
NPUSHB[ ]\011/* 10 values pushed */
47 0 1 0 25 18 0 79 129 24 
PUSHW[ ]\011/* 1 value pushed */
291 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1113 695 OFFCURVE",
"1129 713 OFFCURVE",
"1129 737 CURVE SMOOTH",
"1129 762.333 OFFCURVE",
"1113 780 OFFCURVE",
"1073 780 CURVE SMOOTH",
"157 780 LINE SMOOTH",
"117 780 OFFCURVE",
"101 762 OFFCURVE",
"101 738 CURVE SMOOTH",
"101 712.667 OFFCURVE",
"117 695 OFFCURVE",
"157 695 CURVE SMOOTH",
"1073 695 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1113 394 OFFCURVE",
"1129 410.667 OFFCURVE",
"1129 436 CURVE SMOOTH",
"1129 461.333 OFFCURVE",
"1113 478 OFFCURVE",
"1073 478 CURVE SMOOTH",
"157 478 LINE SMOOTH",
"117 478 OFFCURVE",
"101 461.333 OFFCURVE",
"101 436 CURVE SMOOTH",
"101 410.667 OFFCURVE",
"117 394 OFFCURVE",
"157 394 CURVE SMOOTH",
"1073 394 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
7 36 1 
PUSHW[ ]\011/* 1 value pushed */
760 
NPUSHB[ ]\011/* 27 values pushed */
21 36 15 11 25 26 29 4 79 18 1 79 18 1 15 18 47 18 63 18 3 18 25 28 79 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"224 1089 LINE SMOOTH",
"209.333 1097 OFFCURVE",
"198.333 1101 OFFCURVE",
"191 1101 CURVE SMOOTH",
"168.333 1101 OFFCURVE",
"149 1081.667 OFFCURVE",
"149 1059 CURVE SMOOTH",
"149 1042.333 OFFCURVE",
"160.333 1027.667 OFFCURVE",
"183 1015 CURVE SMOOTH",
"960 583 LINE",
"182 151 LINE SMOOTH",
"159.333 138.333 OFFCURVE",
"148 123.667 OFFCURVE",
"148 107 CURVE SMOOTH",
"148 84.333 OFFCURVE",
"167.333 65 OFFCURVE",
"190 65 CURVE SMOOTH",
"197.333 65 OFFCURVE",
"208.333 69 OFFCURVE",
"223 77 CURVE SMOOTH",
"1131 583 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
191 6 209 12 242 12 3 10 9 9 36 0 17 20 0 9 8 0 17 8 9 9 36 0 1 20 0 9 10 0 1 10 91 17 
PUSHW[ ]\011/* 1 value pushed */
426 
PUSHB[ ]\011/* 4 values pushed */
0 8 91 1 
NPUSHW[ ]\011/* 11 values pushed */
426 12 662 10 444 17 683 8 444 1 683 
NPUSHB[ ]\011/* 12 values pushed */
0 185 47 6 1 6 25 18 0 80 123 24 
PUSHW[ ]\011/* 1 value pushed */
289 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"808 576.667 OFFCURVE",
"902.167 632.167 OFFCURVE",
"942.5 680.5 CURVE SMOOTH",
"982.833 728.833 OFFCURVE",
"1003 784.333 OFFCURVE",
"1003 847 CURVE SMOOTH",
"1003 1051 OFFCURVE",
"855.667 1200 OFFCURVE",
"633 1200 CURVE SMOOTH",
"581 1200 OFFCURVE",
"529 1193.667 OFFCURVE",
"477 1181 CURVE SMOOTH",
"446.333 1173 OFFCURVE",
"379 1146 OFFCURVE",
"275 1100 CURVE",
"275 959 LINE SMOOTH",
"275 919 OFFCURVE",
"293 903 OFFCURVE",
"317 903 CURVE SMOOTH",
"342.333 903 OFFCURVE",
"359 919 OFFCURVE",
"359 959 CURVE SMOOTH",
"359 1045 LINE",
"471 1099.667 OFFCURVE",
"538 1116 OFFCURVE",
"626 1116 CURVE SMOOTH",
"799.333 1116 OFFCURVE",
"919 994.333 OFFCURVE",
"919 845 CURVE SMOOTH",
"919 799.667 OFFCURVE",
"904 762 OFFCURVE",
"874 732 CURVE SMOOTH",
"820.667 678 OFFCURVE",
"721 624 OFFCURVE",
"575 570 CURVE",
"575 429 LINE SMOOTH",
"575 389 OFFCURVE",
"592.667 373 OFFCURVE",
"618 373 CURVE SMOOTH",
"642 373 OFFCURVE",
"660 389 OFFCURVE",
"660 429 CURVE SMOOTH",
"660 514 LINE"
);
},
{
closed = 1;
nodes = (
"518 178 OFFCURVE",
"470 133 OFFCURVE",
"470 73 CURVE SMOOTH",
"470 17 OFFCURVE",
"516.667 -30 OFFCURVE",
"574 -30 CURVE SMOOTH",
"658 -30 LINE SMOOTH",
"714 -30 OFFCURVE",
"763 15.333 OFFCURVE",
"763 74 CURVE SMOOTH",
"763 131.333 OFFCURVE",
"716.667 178 OFFCURVE",
"658 178 CURVE SMOOTH",
"574 178 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
68 8 1 157 14 158 17 2 13 14 159 10 155 13 3 39 9 37 35 130 35 175 14 4 45 8 8 0 35 3 80 4 1 4 18 26 15 22 37 116 44 11 22 160 15 44 15 30 47 30 2 30 4 4 44 30 1 91 80 7 1 7 7 8 40 
PUSHW[ ]\011/* 1 value pushed */
315 
NPUSHB[ ]\011/* 19 values pushed */
47 132 8 8 50 51 12 44 33 26 51 19 91 24 25 50 163 188 24 
PUSHW[ ]\011/* 1 value pushed */
356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 30 values pushed */
27 32 13 17 28 38 16 29 18 39 0 17 18 27 26 14 31 12 40 1 17 27 15 39 1 13 32 15 40 1 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"927 302 LINE SMOOTH",
"964.005 302 OFFCURVE",
"983 314.348 OFFCURVE",
"983 345 CURVE SMOOTH",
"983 367.667 OFFCURVE",
"969.667 383.333 OFFCURVE",
"943 386 CURVE",
"943 962 LINE SMOOTH",
"943 1102 OFFCURVE",
"860 1216.5 OFFCURVE",
"768 1262.5 CURVE SMOOTH",
"722 1285.5 OFFCURVE",
"671.667 1297 OFFCURVE",
"617 1297 CURVE SMOOTH",
"511.667 1297 OFFCURVE",
"423 1253.667 OFFCURVE",
"351 1167 CURVE SMOOTH",
"260.333 1059 OFFCURVE",
"215 919.667 OFFCURVE",
"215 749 CURVE SMOOTH",
"215 413 LINE SMOOTH",
"215 338.333 OFFCURVE",
"222.667 274 OFFCURVE",
"238 220 CURVE SMOOTH",
"259.333 142.667 OFFCURVE",
"322.667 22.333 OFFCURVE",
"360 -19 CURVE SMOOTH",
"420 -88.333 OFFCURVE",
"511.333 -130 OFFCURVE",
"618 -130 CURVE SMOOTH",
"721.333 -130 OFFCURVE",
"805 -109.667 OFFCURVE",
"869 -69 CURVE SMOOTH",
"909 -43.667 OFFCURVE",
"929 -20.333 OFFCURVE",
"929 1 CURVE SMOOTH",
"929 22.333 OFFCURVE",
"910.667 41 OFFCURVE",
"888 41 CURVE SMOOTH",
"877.333 41 OFFCURVE",
"866.333 35.667 OFFCURVE",
"855 25 CURVE SMOOTH",
"805 -22.333 OFFCURVE",
"730 -46 OFFCURVE",
"630 -46 CURVE SMOOTH",
"427.333 -46 OFFCURVE",
"299 154.333 OFFCURVE",
"299 413 CURVE SMOOTH",
"299 744 LINE SMOOTH",
"299 918.667 OFFCURVE",
"352 1031 OFFCURVE",
"416 1115 CURVE SMOOTH",
"434.667 1139 OFFCURVE",
"458.333 1159.333 OFFCURVE",
"487 1176 CURVE SMOOTH",
"529 1200 OFFCURVE",
"573.667 1212 OFFCURVE",
"621 1212 CURVE SMOOTH",
"757 1212 OFFCURVE",
"859 1108.667 OFFCURVE",
"859 962 CURVE SMOOTH",
"859 865 LINE",
"632.333 865 OFFCURVE",
"494 729 OFFCURVE",
"494 565 CURVE SMOOTH",
"494 421 OFFCURVE",
"610 305 OFFCURVE",
"774 305 CURVE SMOOTH",
"798 305 OFFCURVE",
"825.667 307.667 OFFCURVE",
"859 313 CURVE",
"859 302 LINE"
);
},
{
closed = 1;
nodes = (
"859 398 LINE",
"832.333 392.667 OFFCURVE",
"807.667 389 OFFCURVE",
"785 389 CURVE SMOOTH",
"654.333 389 OFFCURVE",
"578 465.667 OFFCURVE",
"578 567 CURVE SMOOTH",
"578 679 OFFCURVE",
"683 780.667 OFFCURVE",
"859 782 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
16 -64 
PUSHB[ ]\011/* 4 values pushed */
28 30 52 18 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 9 values pushed */
18 30 52 13 64 18 30 52 63 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
18 30 52 19 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
18 30 52 24 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
18 24 52 67 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 23 values pushed */
18 24 52 186 8 188 64 2 18 16 47 13 35 16 3 104 8 32 29 1 61 54 57 
PUSHW[ ]\011/* 1 value pushed */
270 
NPUSHB[ ]\011/* 10 values pushed */
54 54 50 61 1 4 71 62 68 29 
PUSHW[ ]\011/* 1 value pushed */
773 
NPUSHB[ ]\011/* 9 values pushed */
25 49 44 14 220 62 91 10 61 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 17 values pushed */
4 44 68 68 25 10 6 36 44 25 11 32 174 57 62 54 32 
PUSHW[ ]\011/* 1 value pushed */
326 
NPUSHB[ ]\011/* 13 values pushed */
22 10 62 53 54 36 62 71 36 0 54 1 54 
PUSHW[ ]\011/* 1 value pushed */
415 
PUSHB[ ]\011/* 3 values pushed */
65 44 7 
PUSHW[ ]\011/* 1 value pushed */
303 
NPUSHB[ ]\011/* 11 values pushed */
22 21 36 45 22 36 45 80 44 1 44 
PUSHW[ ]\011/* 5 values pushed */
487 72 199 261 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 82 values pushed */
63 67 37 52 5 24 42 43 41 43 40 43 39 43 38 43 5 6 19 20 18 20 17 20 16 20 4 6 47 38 51 37 63 9 65 40 0 24 37 22 95 0 15 48 21 95 0 13 50 11 40 1 67 5 65 40 0 64 8 62 40 1 23 43 25 95 0 20 46 14 95 1 12 52 14 40 1 66 6 68 40 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1006 84 LINE",
"846 84 LINE SMOOTH",
"804.667 84 OFFCURVE",
"789 67.333 OFFCURVE",
"789 42 CURVE SMOOTH",
"789 18 OFFCURVE",
"804.667 0 OFFCURVE",
"846 0 CURVE SMOOTH",
"1159 0 LINE SMOOTH",
"1199 0 OFFCURVE",
"1215 18 OFFCURVE",
"1215 42 CURVE SMOOTH",
"1215 67.333 OFFCURVE",
"1199 84 OFFCURVE",
"1159 84 CURVE SMOOTH",
"1094 84 LINE",
"684 1170 LINE",
"261 1170 LINE SMOOTH",
"221 1170 OFFCURVE",
"205 1153.333 OFFCURVE",
"205 1128 CURVE SMOOTH",
"205 1102.667 OFFCURVE",
"221 1086 OFFCURVE",
"261 1086 CURVE SMOOTH",
"509 1086 LINE",
"138 84 LINE",
"73 84 LINE SMOOTH",
"33 84 OFFCURVE",
"17 67.333 OFFCURVE",
"17 42 CURVE SMOOTH",
"17 18 OFFCURVE",
"33 0 OFFCURVE",
"73 0 CURVE SMOOTH",
"387 0 LINE SMOOTH",
"427 0 OFFCURVE",
"443 18 OFFCURVE",
"443 42 CURVE SMOOTH",
"443 67.333 OFFCURVE",
"427 84 OFFCURVE",
"387 84 CURVE SMOOTH",
"226 84 LINE",
"339 391 LINE",
"891 391 LINE"
);
},
{
closed = 1;
nodes = (
"371 475 LINE",
"596 1086 LINE",
"627 1086 LINE",
"859 475 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
54 17 57 18 57 27 62 44 55 45 71 18 73 26 76 44 70 45 80 18 80 22 95 26 95 44 80 45 248 42 15 43 0 42 42 44 46 1 2 2 45 10 16 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 22 values pushed */
13 143 13 159 13 2 223 13 1 13 41 17 13 13 16 17 29 10 17 18 35 41 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
38 38 51 42 38 38 41 42 29 35 42 44 9 3 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
6 6 51 2 6 6 3 2 29 9 2 45 25 19 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
22 22 86 18 22 22 19 18 29 25 18 17 34 28 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 72 values pushed */
31 0 31 128 31 144 31 3 208 31 1 31 41 27 31 31 28 27 29 34 27 26 26 44 42 42 30 27 26 20 27 27 26 18 17 17 30 2 45 20 2 2 45 36 35 35 10 9 8 0 1 30 43 15 46 31 46 2 46 46 9 25 45 44 38 26 19 38 26 25 2 26 
PUSHW[ ]\011/* 3 values pushed */
344 44 318 
NPUSHB[ ]\011/* 20 values pushed */
42 38 27 64 15 9 63 0 17 1 15 27 31 27 224 27 240 27 4 27 
PUSHW[ ]\011/* 1 value pushed */
300 
PUSHB[ ]\011/* 7 values pushed */
48 2 38 17 45 38 18 
PUSHW[ ]\011/* 3 values pushed */
318 17 -64 
PUSHB[ ]\011/* 4 values pushed */
17 10 63 17 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 16 values pushed */
15 9 63 15 17 1 0 17 79 17 239 17 255 17 4 17 
PUSHW[ ]\011/* 1 value pushed */
300 
PUSHB[ ]\011/* 4 values pushed */
47 69 108 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 84 LINE SMOOTH",
"103 84 OFFCURVE",
"87 67.333 OFFCURVE",
"87 42 CURVE SMOOTH",
"87 18 OFFCURVE",
"103 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"771 0 LINE SMOOTH",
"900.333 0 OFFCURVE",
"1019.667 74.833 OFFCURVE",
"1073 167.5 CURVE SMOOTH",
"1099.667 213.833 OFFCURVE",
"1113 265 OFFCURVE",
"1113 321 CURVE SMOOTH",
"1113 446.333 OFFCURVE",
"1034.667 555.333 OFFCURVE",
"860 618 CURVE",
"970 681.333 OFFCURVE",
"1025 764.333 OFFCURVE",
"1025 867 CURVE SMOOTH",
"1025 1029.667 OFFCURVE",
"880.333 1170 OFFCURVE",
"671 1170 CURVE SMOOTH",
"143 1170 LINE SMOOTH",
"103 1170 OFFCURVE",
"87 1153.333 OFFCURVE",
"87 1128 CURVE SMOOTH",
"87 1102.667 OFFCURVE",
"103 1086 OFFCURVE",
"143 1086 CURVE SMOOTH",
"256 1086 LINE",
"256 84 LINE"
);
},
{
closed = 1;
nodes = (
"340 1086 LINE",
"673 1086 LINE SMOOTH",
"831.667 1086 OFFCURVE",
"940 979.333 OFFCURVE",
"940 874 CURVE SMOOTH",
"940 800.667 OFFCURVE",
"892.333 722.333 OFFCURVE",
"811 685 CURVE SMOOTH",
"758.333 661.667 OFFCURVE",
"700.333 650 OFFCURVE",
"637 650 CURVE SMOOTH",
"340 650 LINE"
);
},
{
closed = 1;
nodes = (
"340 565 LINE",
"642 565 LINE SMOOTH",
"827.333 565 OFFCURVE",
"924.167 523 OFFCURVE",
"983.5 443 CURVE SMOOTH",
"1013.167 403 OFFCURVE",
"1028 361.667 OFFCURVE",
"1028 319 CURVE SMOOTH",
"1028 243 OFFCURVE",
"986 168 OFFCURVE",
"906 120 CURVE SMOOTH",
"866 96 OFFCURVE",
"819 84 OFFCURVE",
"765 84 CURVE SMOOTH",
"340 84 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 189 values pushed */
175 42 171 43 198 10 197 11 215 10 5 143 42 138 43 157 32 155 37 159 43 174 37 6 123 36 127 37 115 43 117 45 143 10 143 20 139 36 143 37 8 85 16 101 16 127 10 112 16 112 17 112 18 112 19 7 74 32 77 33 73 36 75 43 134 14 5 50 15 59 32 58 33 58 37 63 42 59 43 69 15 71 16 8 9 47 25 32 28 33 27 37 27 42 27 47 35 15 42 43 8 121 16 188 36 199 47 3 70 32 73 37 118 32 134 32 138 48 149 32 165 32 181 32 8 44 8 28 22 25 43 0 0 29 22 2 8 5 43 1 1 29 8 48 32 14 3 35 40 14 50 32 39 29 41 38 22 39 38 8 30 29 30 49 50 50 22 8 2 22 8 35 37 15 12 31 12 47 12 63 12 79 12 95 12 111 12 7 12 
PUSHW[ ]\011/* 1 value pushed */
387 
NPUSHB[ ]\011/* 41 values pushed */
45 37 0 17 16 17 2 15 17 144 17 192 17 208 17 224 17 240 17 6 17 26 52 39 40 30 1 0 0 16 0 2 240 0 1 0 25 51 74 121 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 30 values pushed */
36 44 18 20 10 11 19 38 43 37 42 20 45 45 1 37 10 35 45 1 44 18 41 45 0 36 11 38 45 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"884 1149.667 OFFCURVE",
"764.667 1197 OFFCURVE",
"626 1197 CURVE SMOOTH",
"446 1197 OFFCURVE",
"282.167 1101.167 OFFCURVE",
"193.5 928.5 CURVE SMOOTH",
"149.167 842.167 OFFCURVE",
"127 757.667 OFFCURVE",
"127 675 CURVE SMOOTH",
"127 504 LINE SMOOTH",
"127 276.409 OFFCURVE",
"303.377 68.234 OFFCURVE",
"480 2 CURVE SMOOTH",
"542.667 -21.333 OFFCURVE",
"604.333 -33 OFFCURVE",
"665 -33 CURVE SMOOTH",
"805 -33 OFFCURVE",
"947.667 29.333 OFFCURVE",
"1057 152 CURVE SMOOTH",
"1085.667 183.333 OFFCURVE",
"1100 206.667 OFFCURVE",
"1100 222 CURVE SMOOTH",
"1100 244.667 OFFCURVE",
"1084 261 OFFCURVE",
"1060 261 CURVE SMOOTH",
"1046 261 OFFCURVE",
"1033.333 254 OFFCURVE",
"1022 240 CURVE SMOOTH",
"915.333 113.333 OFFCURVE",
"807 51 OFFCURVE",
"663 51 CURVE SMOOTH",
"423 51 OFFCURVE",
"211 265.333 OFFCURVE",
"211 516 CURVE SMOOTH",
"211 663 LINE SMOOTH",
"211 721.667 OFFCURVE",
"220.333 774.333 OFFCURVE",
"239 821 CURVE SMOOTH",
"265 884.333 OFFCURVE",
"300 942 OFFCURVE",
"344 994 CURVE SMOOTH",
"369.333 1024 OFFCURVE",
"403.333 1049.333 OFFCURVE",
"446 1070 CURVE SMOOTH",
"503.333 1098.667 OFFCURVE",
"564.333 1113 OFFCURVE",
"629 1113 CURVE SMOOTH",
"727.667 1113 OFFCURVE",
"815.667 1083.333 OFFCURVE",
"893 1024 CURVE SMOOTH",
"950.333 980.667 OFFCURVE",
"980.667 931 OFFCURVE",
"984 875 CURVE SMOOTH",
"986.667 839 OFFCURVE",
"1003.333 824 OFFCURVE",
"1026 824 CURVE SMOOTH",
"1051.333 824 OFFCURVE",
"1068 839.667 OFFCURVE",
"1068 881 CURVE SMOOTH",
"1068 1114 LINE SMOOTH",
"1068 1154 OFFCURVE",
"1051.333 1170 OFFCURVE",
"1026 1170 CURVE SMOOTH",
"1000.667 1170 OFFCURVE",
"984 1154 OFFCURVE",
"984 1114 CURVE SMOOTH",
"984 1055 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 120 values pushed */
45 20 1 47 0 63 0 79 0 3 5 22 21 22 86 23 101 20 100 22 105 46 112 20 115 22 112 24 180 23 10 55 28 54 48 74 22 74 54 91 23 91 53 106 23 104 53 133 28 153 47 10 51 49 15 32 27 34 1 0 3 8 14 22 23 55 50 32 35 30 15 13 0 3 18 11 35 180 43 18 37 55 11 139 4 30 37 43 55 3 4 2 43 9 14 38 8 96 33 38 38 26 58 27 38 15 49 31 49 47 49 63 49 4 49 25 57 135 121 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
28 -20 
PUSHB[ ]\011/* 3 values pushed */
17 20 0 
PUSHW[ ]\011/* 3 values pushed */
-20 29 -20 
PUSHB[ ]\011/* 6 values pushed */
22 22 23 28 24 22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"214 84 LINE SMOOTH",
"174 84 OFFCURVE",
"158 67.333 OFFCURVE",
"158 42 CURVE SMOOTH",
"158 18 OFFCURVE",
"174 0 OFFCURVE",
"214 0 CURVE SMOOTH",
"666 0 LINE SMOOTH",
"752.667 0 OFFCURVE",
"829 22 OFFCURVE",
"895 66 CURVE SMOOTH",
"1072.333 186 OFFCURVE",
"1142 355 OFFCURVE",
"1142 527 CURVE SMOOTH",
"1142 643 LINE SMOOTH",
"1142 713 OFFCURVE",
"1132.333 773.667 OFFCURVE",
"1113 825 CURVE SMOOTH",
"1085.667 895.667 OFFCURVE",
"1045.667 962.667 OFFCURVE",
"993 1026 CURVE SMOOTH",
"931.667 1100.667 OFFCURVE",
"807.333 1170 OFFCURVE",
"666 1170 CURVE SMOOTH",
"214 1170 LINE SMOOTH",
"174 1170 OFFCURVE",
"158 1153.333 OFFCURVE",
"158 1128 CURVE SMOOTH",
"158 1102.667 OFFCURVE",
"174 1086 OFFCURVE",
"214 1086 CURVE SMOOTH",
"285 1086 LINE",
"285 84 LINE"
);
},
{
closed = 1;
nodes = (
"369 1086 LINE",
"674 1086 LINE SMOOTH",
"782 1086 OFFCURVE",
"883 1027.667 OFFCURVE",
"931 969 CURVE SMOOTH",
"975 915.667 OFFCURVE",
"1009 859.333 OFFCURVE",
"1033 800 CURVE SMOOTH",
"1049.667 759.333 OFFCURVE",
"1058 713 OFFCURVE",
"1058 661 CURVE SMOOTH",
"1058 509 LINE SMOOTH",
"1058 383.667 OFFCURVE",
"995.833 245 OFFCURVE",
"872.5 153 CURVE SMOOTH",
"810.833 107 OFFCURVE",
"744.667 84 OFFCURVE",
"674 84 CURVE SMOOTH",
"369 84 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
142 10 137 11 136 18 137 19 137 20 140 21 143 31 143 32 138 33 141 39 138 41 143 42 12 11 40 1 39 32 41 28 33 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 9 values pushed */
153 39 181 33 2 67 8 23 29 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
26 41 0 26 26 29 0 29 23 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 53 values pushed */
5 41 1 5 5 2 1 29 8 17 46 15 31 30 22 22 29 30 23 8 43 30 9 9 2 30 8 2 36 38 15 15 1 15 15 32 15 2 15 26 46 44 30 30 1 32 0 79 0 2 0 25 45 
PUSHW[ ]\011/* 4 values pushed */
313 264 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 52 values pushed */
32 42 10 21 14 15 13 15 12 15 11 15 4 6 38 37 39 37 40 37 41 37 4 6 19 18 20 18 2 6 33 37 42 10 36 46 1 32 21 35 46 1 37 15 43 46 1 34 18 31 46 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"642 565 LINE",
"642 470 LINE SMOOTH",
"642 430 OFFCURVE",
"659.667 414 OFFCURVE",
"685 414 CURVE SMOOTH",
"709 414 OFFCURVE",
"727 430 OFFCURVE",
"727 470 CURVE SMOOTH",
"727 744 LINE SMOOTH",
"727 784 OFFCURVE",
"709 800 OFFCURVE",
"685 800 CURVE SMOOTH",
"659.667 800 OFFCURVE",
"642 784 OFFCURVE",
"642 744 CURVE SMOOTH",
"642 649 LINE",
"341 649 LINE",
"341 1086 LINE",
"943 1086 LINE",
"943 881 LINE SMOOTH",
"943 841 OFFCURVE",
"959.667 825 OFFCURVE",
"985 825 CURVE SMOOTH",
"1010.333 825 OFFCURVE",
"1027 841 OFFCURVE",
"1027 881 CURVE SMOOTH",
"1027 1170 LINE",
"144 1170 LINE SMOOTH",
"104 1170 OFFCURVE",
"88 1153.333 OFFCURVE",
"88 1128 CURVE SMOOTH",
"88 1102.667 OFFCURVE",
"104 1086 OFFCURVE",
"144 1086 CURVE SMOOTH",
"257 1086 LINE",
"257 84 LINE",
"144 84 LINE SMOOTH",
"104 84 OFFCURVE",
"88 67.333 OFFCURVE",
"88 42 CURVE SMOOTH",
"88 18 OFFCURVE",
"104 0 OFFCURVE",
"144 0 CURVE SMOOTH",
"1071 0 LINE",
"1071 332 LINE SMOOTH",
"1071 372 OFFCURVE",
"1054.333 388 OFFCURVE",
"1029 388 CURVE SMOOTH",
"1003.667 388 OFFCURVE",
"987 372 OFFCURVE",
"987 332 CURVE SMOOTH",
"987 84 LINE",
"341 84 LINE",
"341 565 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
95 31 111 6 127 6 3 17 11 14 43 18 18 29 11 34 28 31 53 35 35 29 28 3 9 6 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
15 30 63 6 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 44 values pushed */
15 25 63 6 86 2 2 29 9 20 26 23 43 19 19 29 26 52 46 15 49 31 49 2 49 43 53 53 29 46 39 45 0 42 16 42 2 42 43 38 38 29 45 31 
PUSHW[ ]\011/* 1 value pushed */
364 
NPUSHB[ ]\011/* 60 values pushed */
26 2 1 38 11 35 36 38 26 53 0 38 37 30 0 0 11 26 2 11 8 34 38 15 28 1 239 28 255 28 2 28 65 3 38 0 9 1 80 9 160 9 208 9 224 9 240 9 5 9 53 38 38 46 0 45 16 45 2 45 
PUSHW[ ]\011/* 1 value pushed */
318 
NPUSHB[ ]\011/* 22 values pushed */
37 37 36 0 1 30 9 82 19 47 18 239 18 240 18 3 18 25 54 74 111 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"713 565 LINE",
"713 470 LINE SMOOTH",
"713 430 OFFCURVE",
"730.667 414 OFFCURVE",
"756 414 CURVE SMOOTH",
"780 414 OFFCURVE",
"798 430 OFFCURVE",
"798 470 CURVE SMOOTH",
"798 744 LINE SMOOTH",
"798 784 OFFCURVE",
"780 800 OFFCURVE",
"756 800 CURVE SMOOTH",
"730.667 800 OFFCURVE",
"713 784 OFFCURVE",
"713 744 CURVE SMOOTH",
"713 649 LINE",
"412 649 LINE",
"412 1086 LINE",
"1055 1086 LINE",
"1055 881 LINE SMOOTH",
"1055 841 OFFCURVE",
"1072.667 825 OFFCURVE",
"1098 825 CURVE SMOOTH",
"1122 825 OFFCURVE",
"1140 841 OFFCURVE",
"1140 881 CURVE SMOOTH",
"1140 1170 LINE",
"215 1170 LINE SMOOTH",
"195 1170 OFFCURVE",
"181.333 1166.667 OFFCURVE",
"174 1160 CURVE SMOOTH",
"164 1151.333 OFFCURVE",
"159 1140.667 OFFCURVE",
"159 1128 CURVE SMOOTH",
"159 1102.667 OFFCURVE",
"175 1086 OFFCURVE",
"215 1086 CURVE SMOOTH",
"328 1086 LINE",
"328 84 LINE",
"215 84 LINE SMOOTH",
"175 84 OFFCURVE",
"159 67.333 OFFCURVE",
"159 42 CURVE SMOOTH",
"159 18 OFFCURVE",
"175 0 OFFCURVE",
"215 0 CURVE SMOOTH",
"700 0 LINE SMOOTH",
"740 0 OFFCURVE",
"756 18 OFFCURVE",
"756 42 CURVE SMOOTH",
"756 67.333 OFFCURVE",
"740 84 OFFCURVE",
"700 84 CURVE SMOOTH",
"412 84 LINE",
"412 565 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 94 values pushed */
96 5 1 15 9 12 43 16 16 29 9 33 27 30 53 34 34 29 27 51 45 15 48 31 48 2 48 43 52 52 29 45 2 8 5 54 1 1 29 8 18 25 21 43 17 17 29 25 38 44 0 41 16 41 2 41 43 37 37 29 44 34 35 38 25 52 0 37 36 38 0 0 25 2 1 38 9 25 2 9 8 52 37 45 37 38 0 44 16 44 80 44 3 44 
PUSHW[ ]\011/* 1 value pushed */
318 
NPUSHB[ ]\011/* 44 values pushed */
36 36 35 0 1 38 16 34 38 0 27 32 27 2 80 27 160 27 208 27 224 27 240 27 5 27 82 17 32 16 1 0 16 128 16 144 16 240 16 4 16 25 53 246 
PUSHW[ ]\011/* 2 values pushed */
264 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1124.597 434 OFFCURVE",
"1157 435.561 OFFCURVE",
"1157 476 CURVE SMOOTH",
"1157 501.333 OFFCURVE",
"1141 518 OFFCURVE",
"1101 518 CURVE SMOOTH",
"697 519 LINE SMOOTH",
"657 519 OFFCURVE",
"641 501.333 OFFCURVE",
"641 476 CURVE SMOOTH",
"641 450.667 OFFCURVE",
"657 434 OFFCURVE",
"697 434 CURVE SMOOTH",
"986 434 LINE",
"986 123 LINE",
"870 69.667 OFFCURVE",
"794.333 51 OFFCURVE",
"693 51 CURVE SMOOTH",
"393 51 OFFCURVE",
"212 227.333 OFFCURVE",
"212 506 CURVE SMOOTH",
"212 659 LINE SMOOTH",
"212 737.667 OFFCURVE",
"230 808 OFFCURVE",
"266 870 CURVE SMOOTH",
"374 1059.333 OFFCURVE",
"495.333 1113 OFFCURVE",
"650 1113 CURVE SMOOTH",
"814 1113 OFFCURVE",
"980 1033.333 OFFCURVE",
"988 920 CURVE",
"989.333 881.333 OFFCURVE",
"1006.333 868 OFFCURVE",
"1029 868 CURVE SMOOTH",
"1053 868 OFFCURVE",
"1071 882.667 OFFCURVE",
"1071 924 CURVE SMOOTH",
"1071 1114 LINE SMOOTH",
"1071 1154 OFFCURVE",
"1053 1170 OFFCURVE",
"1029 1170 CURVE SMOOTH",
"987.1 1170 OFFCURVE",
"986 1139.88 OFFCURVE",
"986 1086 CURVE",
"892.667 1160 OFFCURVE",
"778.333 1197 OFFCURVE",
"643 1197 CURVE SMOOTH",
"456.333 1197 OFFCURVE",
"287.833 1102.5 OFFCURVE",
"196.5 928.5 CURVE SMOOTH",
"150.833 841.5 OFFCURVE",
"128 752 OFFCURVE",
"128 660 CURVE SMOOTH",
"128 506 LINE SMOOTH",
"128 323.333 OFFCURVE",
"183.333 215 OFFCURVE",
"278 119 CURVE SMOOTH",
"372.667 23 OFFCURVE",
"509 -33 OFFCURVE",
"689 -33 CURVE SMOOTH",
"815.667 -33 OFFCURVE",
"943 3.333 OFFCURVE",
"1071 74 CURVE",
"1071 434 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
140 32 154 32 2 47 16 63 16 79 16 3 73 12 70 36 86 11 93 12 86 36 166 11 166 36 188 6 186 12 9 4 35 23 35 38 12 39 35 38 36 54 36 6 54 0 57 144 0 57 57 0 29 54 53 47 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 51 values pushed */
15 50 1 50 54 46 50 50 47 46 29 53 10 8 31 39 16 45 19 1 30 23 24 62 0 1 45 54 42 31 29 16 3 33 27 60 38 54 47 38 54 102 53 53 4 19 33 37 14 3 27 
PUSHW[ ]\011/* 1 value pushed */
361 
NPUSHB[ ]\011/* 32 values pushed */
20 20 19 2 42 37 4 9 30 102 46 46 45 30 1 1 0 26 62 39 38 15 8 31 8 2 8 25 61 135 111 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
NPUSHW[ ]\011/* 10 values pushed */
16 -20 5 -12 44 -22 41 -22 40 -22 
PUSHB[ ]\011/* 6 values pushed */
36 22 34 22 35 22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"899 84 LINE",
"787 84 LINE SMOOTH",
"745.667 84 OFFCURVE",
"731 67.333 OFFCURVE",
"731 42 CURVE SMOOTH",
"731 18 OFFCURVE",
"747 0 OFFCURVE",
"787 0 CURVE SMOOTH",
"1079 0 LINE SMOOTH",
"1119 0 OFFCURVE",
"1135 18 OFFCURVE",
"1135 42 CURVE SMOOTH",
"1135 67.333 OFFCURVE",
"1119 84 OFFCURVE",
"1079 84 CURVE SMOOTH",
"984 84 LINE",
"984 1086 LINE",
"1036 1086 LINE SMOOTH",
"1077.333 1086 OFFCURVE",
"1093 1102.667 OFFCURVE",
"1093 1128 CURVE SMOOTH",
"1093 1153.333 OFFCURVE",
"1077.333 1170 OFFCURVE",
"1036 1170 CURVE SMOOTH",
"787 1170 LINE SMOOTH",
"745.667 1170 OFFCURVE",
"731 1153.333 OFFCURVE",
"731 1128 CURVE SMOOTH",
"731 1102.667 OFFCURVE",
"747 1086 OFFCURVE",
"787 1086 CURVE SMOOTH",
"899 1086 LINE",
"899 650 LINE",
"342 650 LINE",
"342 1086 LINE",
"455 1086 LINE SMOOTH",
"495 1086 OFFCURVE",
"511 1102.667 OFFCURVE",
"511 1128 CURVE SMOOTH",
"511 1153.333 OFFCURVE",
"495 1170 OFFCURVE",
"455 1170 CURVE SMOOTH",
"206 1170 LINE SMOOTH",
"164.667 1170 OFFCURVE",
"149 1153.333 OFFCURVE",
"149 1128 CURVE SMOOTH",
"149 1102.667 OFFCURVE",
"164.667 1086 OFFCURVE",
"206 1086 CURVE SMOOTH",
"258 1086 LINE",
"258 84 LINE",
"163 84 LINE SMOOTH",
"123 84 OFFCURVE",
"107 67.333 OFFCURVE",
"107 42 CURVE SMOOTH",
"107 18 OFFCURVE",
"123 0 OFFCURVE",
"163 0 CURVE SMOOTH",
"455 0 LINE SMOOTH",
"495 0 OFFCURVE",
"511 18 OFFCURVE",
"511 42 CURVE SMOOTH",
"511 67.333 OFFCURVE",
"495 84 OFFCURVE",
"455 84 CURVE SMOOTH",
"342 84 LINE",
"342 566 LINE",
"899 566 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
18 161 22 174 47 179 22 191 47 4 10 16 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
13 43 17 13 13 16 17 29 10 26 32 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
16 29 1 29 43 33 29 29 32 33 29 26 44 50 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 47 1 47 41 51 47 47 50 51 29 44 60 66 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 16 values pushed */
15 63 31 63 2 63 43 67 63 63 66 67 29 60 9 3 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
6 43 2 6 6 3 2 29 9 25 19 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
22 41 18 22 22 19 18 29 25 43 37 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
15 40 1 40 43 36 40 40 37 36 29 43 59 53 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 67 values pushed */
0 56 1 56 43 52 56 56 53 52 29 59 35 34 30 0 1 1 9 25 50 38 44 44 43 32 38 26 37 38 43 43 26 19 38 26 25 2 60 59 59 10 10 9 8 51 30 36 52 30 36 67 64 28 31 52 159 67 175 67 2 143 67 223 67 2 67 
PUSHW[ ]\011/* 1 value pushed */
699 
NPUSHB[ ]\011/* 27 values pushed */
69 18 30 33 33 17 30 48 2 64 2 144 2 3 79 2 208 2 2 15 2 95 2 111 2 3 2 
PUSHW[ ]\011/* 5 values pushed */
699 68 74 470 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
47 -64 
NPUSHB[ ]\011/* 9 values pushed */
15 20 63 22 64 15 20 63 47 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 8 values pushed */
14 19 63 22 64 14 19 63 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"945 1086 LINE SMOOTH",
"985 1086 OFFCURVE",
"1001 1102.667 OFFCURVE",
"1001 1128 CURVE SMOOTH",
"1001 1153.333 OFFCURVE",
"985 1170 OFFCURVE",
"945 1170 CURVE SMOOTH",
"285 1170 LINE SMOOTH",
"245 1170 OFFCURVE",
"229 1153.333 OFFCURVE",
"229 1128 CURVE SMOOTH",
"229 1102.667 OFFCURVE",
"245 1086 OFFCURVE",
"285 1086 CURVE SMOOTH",
"573 1086 LINE",
"573 84 LINE",
"285 84 LINE SMOOTH",
"245 84 OFFCURVE",
"229 67.333 OFFCURVE",
"229 42 CURVE SMOOTH",
"229 18 OFFCURVE",
"245 0 OFFCURVE",
"285 0 CURVE SMOOTH",
"945 0 LINE SMOOTH",
"985 0 OFFCURVE",
"1001 18 OFFCURVE",
"1001 42 CURVE SMOOTH",
"1001 67.333 OFFCURVE",
"985 84 OFFCURVE",
"945 84 CURVE SMOOTH",
"657 84 LINE",
"657 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
47 4 46 5 35 12 32 13 32 20 32 21 47 28 47 30 62 5 51 12 48 20 48 21 63 28 63 30 78 5 67 12 64 20 64 21 75 28 79 29 79 30 21 9 15 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
12 54 16 12 12 15 16 29 9 25 31 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
28 54 0 28 28 31 0 29 25 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
5 54 1 5 5 2 1 29 8 24 18 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 39 values pushed */
21 54 17 21 21 18 17 29 24 31 38 25 18 38 25 24 2 2 38 8 15 38 9 9 8 8 0 1 30 17 79 16 1 16 25 32 140 223 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1143 1086 LINE SMOOTH",
"1183 1086 OFFCURVE",
"1199 1102.667 OFFCURVE",
"1199 1128 CURVE SMOOTH",
"1199 1153.333 OFFCURVE",
"1183 1170 OFFCURVE",
"1143 1170 CURVE SMOOTH",
"529 1170 LINE SMOOTH",
"487.667 1170 OFFCURVE",
"472 1153.333 OFFCURVE",
"472 1128 CURVE SMOOTH",
"472 1102.667 OFFCURVE",
"487.667 1086 OFFCURVE",
"529 1086 CURVE SMOOTH",
"858 1086 LINE",
"858 344 LINE SMOOTH",
"858 236 OFFCURVE",
"785.333 131 OFFCURVE",
"712 91 CURVE SMOOTH",
"663.333 64.333 OFFCURVE",
"611.667 51 OFFCURVE",
"557 51 CURVE SMOOTH",
"458.333 51 OFFCURVE",
"357.667 98.333 OFFCURVE",
"255 193 CURVE",
"256 463 LINE SMOOTH",
"256 503 OFFCURVE",
"238.333 519 OFFCURVE",
"213 519 CURVE SMOOTH",
"189 519 OFFCURVE",
"171 503 OFFCURVE",
"171 463 CURVE SMOOTH",
"171 153 LINE",
"315 21 OFFCURVE",
"430.333 -33 OFFCURVE",
"557 -33 CURVE SMOOTH",
"767.667 -33 OFFCURVE",
"943 140 OFFCURVE",
"943 344 CURVE SMOOTH",
"943 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 124 values pushed */
126 3 127 19 122 20 137 2 140 3 143 19 138 20 248 22 8 9 2 11 20 11 21 3 154 2 157 7 170 7 231 16 229 20 229 22 6 4 16 102 16 182 16 182 20 4 50 8 38 32 35 53 0 0 29 32 25 31 28 219 24 24 29 31 7 15 18 11 11 4 32 31 2 18 37 4 9 24 23 30 1 1 0 64 13 17 63 0 64 12 16 63 224 0 1 128 0 1 0 26 40 15 102 14 30 8 8 7 64 13 17 63 7 64 12 16 63 128 7 1 7 25 39 157 
PUSHW[ ]\011/* 2 values pushed */
469 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 34 values pushed */
16 22 2 6 21 22 20 22 2 6 17 5 15 57 0 16 15 6 7 19 3 23 45 1 16 6 18 57 0 22 2 18 45 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"511 610 LINE",
"601 582 OFFCURVE",
"676 533.5 OFFCURVE",
"736 464.5 CURVE SMOOTH",
"796 395.5 OFFCURVE",
"870 240.667 OFFCURVE",
"958 0 CURVE",
"1120 0 LINE SMOOTH",
"1161.333 0 OFFCURVE",
"1177 18 OFFCURVE",
"1177 42 CURVE SMOOTH",
"1177 67.333 OFFCURVE",
"1161.333 84 OFFCURVE",
"1120 84 CURVE SMOOTH",
"1015 84 LINE",
"951 244 OFFCURVE",
"907 345.667 OFFCURVE",
"883 389 CURVE SMOOTH",
"799 543.667 OFFCURVE",
"718.333 617 OFFCURVE",
"581 673 CURVE",
"1043 1086 LINE",
"1077 1086 LINE SMOOTH",
"1117 1086 OFFCURVE",
"1133 1102.667 OFFCURVE",
"1133 1128 CURVE SMOOTH",
"1133 1153.333 OFFCURVE",
"1117 1170 OFFCURVE",
"1077 1170 CURVE SMOOTH",
"830 1170 LINE SMOOTH",
"788.667 1170 OFFCURVE",
"773 1153.333 OFFCURVE",
"773 1128 CURVE SMOOTH",
"773 1102.667 OFFCURVE",
"788.667 1086 OFFCURVE",
"830 1086 CURVE SMOOTH",
"922 1086 LINE",
"342 569 LINE",
"342 1086 LINE",
"497 1086 LINE SMOOTH",
"538.333 1086 OFFCURVE",
"554 1102.667 OFFCURVE",
"554 1128 CURVE SMOOTH",
"554 1153.333 OFFCURVE",
"538.333 1170 OFFCURVE",
"497 1170 CURVE SMOOTH",
"145 1170 LINE SMOOTH",
"105 1170 OFFCURVE",
"89 1153.333 OFFCURVE",
"89 1128 CURVE SMOOTH",
"89 1102.667 OFFCURVE",
"105 1086 OFFCURVE",
"145 1086 CURVE SMOOTH",
"258 1086 LINE",
"258 84 LINE",
"145 84 LINE SMOOTH",
"105 84 OFFCURVE",
"89 67.333 OFFCURVE",
"89 42 CURVE SMOOTH",
"89 18 OFFCURVE",
"105 0 OFFCURVE",
"145 0 CURVE SMOOTH",
"497 0 LINE SMOOTH",
"538.333 0 OFFCURVE",
"554 18 OFFCURVE",
"554 42 CURVE SMOOTH",
"554 67.333 OFFCURVE",
"538.333 84 OFFCURVE",
"497 84 CURVE SMOOTH",
"342 84 LINE",
"342 458 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 93 values pushed */
24 45 24 54 26 65 36 51 53 51 55 54 71 33 91 65 103 33 108 65 119 33 124 65 138 64 138 65 153 64 155 65 175 65 187 65 203 51 19 15 0 54 51 69 51 87 52 4 15 34 43 54 70 52 65 53 86 49 196 63 195 64 192 65 8 27 34 27 49 105 34 105 49 148 52 175 45 169 54 232 34 249 45 249 54 10 50 66 0 0 49 9 15 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
12 43 16 12 12 15 16 29 9 25 31 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 28 1 28 51 32 28 28 31 32 29 25 42 48 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 22 values pushed */
32 45 144 45 2 48 45 1 45 45 144 49 45 45 48 49 29 42 49 0 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 5 1 5 51 1 5 5 2 1 29 8 24 18 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
21 43 17 21 21 18 17 29 24 41 35 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 80 values pushed */
38 15 38 31 38 48 38 3 38 43 34 38 38 35 34 29 41 34 33 65 52 64 54 4 63 66 34 49 0 18 0 30 33 34 20 33 33 34 0 33 49 34 4 32 1 48 38 42 35 38 42 41 41 25 49 34 34 32 31 38 25 25 18 38 24 2 56 55 38 62 63 63 8 8 16 38 64 9 8 0 
PUSHW[ ]\011/* 1 value pushed */
634 
PUSHB[ ]\011/* 5 values pushed */
33 33 24 9 50 
PUSHW[ ]\011/* 1 value pushed */
344 
PUSHB[ ]\011/* 8 values pushed */
32 66 66 49 0 66 38 50 
PUSHW[ ]\011/* 3 values pushed */
424 34 634 
NPUSHB[ ]\011/* 23 values pushed */
64 80 49 96 49 112 49 3 0 49 64 49 80 49 3 224 49 240 49 2 49 65 55 
PUSHW[ ]\011/* 4 values pushed */
344 32 63 310 
NPUSHB[ ]\011/* 17 values pushed */
68 33 32 0 1 30 17 0 16 1 240 16 1 16 25 67 74 
PUSHW[ ]\011/* 3 values pushed */
340 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 64 30 60 63 0 64 28 55 63 0 64 25 50 63 0 64 23 45 63 0 64 20 40 63 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
RTG[ ]\011/* RoundToGrid */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
34 -32 
PUSHB[ ]\011/* 4 values pushed */
25 36 52 33 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
25 36 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"669 1086 LINE SMOOTH",
"709 1086 OFFCURVE",
"725 1102.667 OFFCURVE",
"725 1128 CURVE SMOOTH",
"725 1153.333 OFFCURVE",
"709 1170 OFFCURVE",
"669 1170 CURVE SMOOTH",
"184 1170 LINE SMOOTH",
"144 1170 OFFCURVE",
"128 1153.333 OFFCURVE",
"128 1128 CURVE SMOOTH",
"128 1102.667 OFFCURVE",
"144 1086 OFFCURVE",
"184 1086 CURVE SMOOTH",
"384 1086 LINE",
"384 84 LINE",
"184 84 LINE SMOOTH",
"144 84 OFFCURVE",
"128 67.333 OFFCURVE",
"128 42 CURVE SMOOTH",
"128 18 OFFCURVE",
"144 0 OFFCURVE",
"184 0 CURVE SMOOTH",
"1112 0 LINE",
"1112 418 LINE SMOOTH",
"1112 459.333 OFFCURVE",
"1094 474 OFFCURVE",
"1070 474 CURVE SMOOTH",
"1044.667 474 OFFCURVE",
"1027 458 OFFCURVE",
"1027 418 CURVE SMOOTH",
"1027 84 LINE",
"469 84 LINE",
"469 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
17 11 14 53 18 18 29 11 33 27 30 53 0 0 29 27 3 9 6 219 2 2 29 9 20 26 23 53 19 19 29 26 2 38 11 27 26 2 11 8 15 9 1 9 26 35 0 1 30 19 18 25 34 165 121 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"987 1086 LINE",
"1005 1086 LINE",
"1005 84 LINE",
"850 84 LINE SMOOTH",
"808.667 84 OFFCURVE",
"793 67.333 OFFCURVE",
"793 42 CURVE SMOOTH",
"793 18 OFFCURVE",
"810 0 OFFCURVE",
"850 0 CURVE SMOOTH",
"1159 0 LINE SMOOTH",
"1200.333 0 OFFCURVE",
"1216 18 OFFCURVE",
"1216 42 CURVE SMOOTH",
"1216 67.333 OFFCURVE",
"1200.333 84 OFFCURVE",
"1159 84 CURVE SMOOTH",
"1089 84 LINE",
"1089 1086 LINE",
"1141 1086 LINE SMOOTH",
"1182.333 1086 OFFCURVE",
"1198 1102.667 OFFCURVE",
"1198 1128 CURVE SMOOTH",
"1198 1153.333 OFFCURVE",
"1182.333 1170 OFFCURVE",
"1141 1170 CURVE SMOOTH",
"935 1170 LINE",
"622 446 LINE",
"304 1170 LINE",
"98 1170 LINE SMOOTH",
"58 1170 OFFCURVE",
"42 1153.333 OFFCURVE",
"42 1128 CURVE SMOOTH",
"42 1102.667 OFFCURVE",
"58 1086 OFFCURVE",
"98 1086 CURVE SMOOTH",
"151 1086 LINE",
"151 84 LINE",
"80 84 LINE SMOOTH",
"40 84 OFFCURVE",
"24 67.333 OFFCURVE",
"24 42 CURVE SMOOTH",
"24 18 OFFCURVE",
"40 0 OFFCURVE",
"80 0 CURVE SMOOTH",
"390 0 LINE SMOOTH",
"430 0 OFFCURVE",
"446 18 OFFCURVE",
"446 42 CURVE SMOOTH",
"446 67.333 OFFCURVE",
"430 84 OFFCURVE",
"390 84 CURVE SMOOTH",
"235 84 LINE",
"235 1086 LINE",
"251 1086 LINE",
"574 351 LINE",
"670 351 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
226 29 230 30 2 70 0 74 56 192 0 208 0 211 1 216 28 209 29 246 0 246 1 246 29 10 37 0 39 29 39 30 38 56 71 28 87 28 168 30 185 30 212 0 212 1 212 29 234 1 232 29 13 88 30 1 12 18 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 19 values pushed */
159 15 1 15 15 31 15 2 15 41 19 15 15 18 19 29 12 31 37 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 16 values pushed */
0 34 80 34 2 34 41 38 34 34 37 38 29 31 47 53 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
50 51 54 50 50 53 54 29 47 11 5 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
8 51 4 8 8 5 4 29 11 27 21 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 19 values pushed */
159 24 1 15 24 31 24 2 24 41 20 24 24 21 20 29 27 46 40 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 43 80 43 2 43 41 39 43 43 40 39 29 46 
PUSHW[ ]\011/* 1 value pushed */
-117 
NPUSHB[ ]\011/* 28 values pushed */
29 1 0 32 28 29 29 30 1 2 20 1 29 30 1 2 30 56 0 0 30 29 30 20 29 29 30 0 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 11 values pushed */
30 37 38 31 31 30 30 28 29 38 1 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 74 values pushed */
28 28 27 56 55 2 3 21 38 27 2 46 47 39 54 38 47 47 11 11 12 4 19 38 12 8 38 39 56 56 29 30 30 29 55 54 30 39 64 0 207 1 31 39 95 39 111 39 175 39 191 39 5 39 64 39 41 52 39 64 18 53 15 39 143 39 208 39 224 39 240 39 5 39 
PUSHW[ ]\011/* 1 value pushed */
737 
NPUSHB[ ]\011/* 21 values pushed */
29 31 1 95 1 2 143 1 207 1 2 1 1 4 28 28 4 2 2 4 29 
PUSHW[ ]\011/* 1 value pushed */
633 
NPUSHB[ ]\011/* 22 values pushed */
19 32 3 4 20 4 30 79 19 207 19 223 19 239 19 4 19 25 57 194 111 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1026 1086 LINE",
"1097 1086 LINE SMOOTH",
"1137 1086 OFFCURVE",
"1153 1102.667 OFFCURVE",
"1153 1128 CURVE SMOOTH",
"1153 1153.333 OFFCURVE",
"1137 1170 OFFCURVE",
"1097 1170 CURVE SMOOTH",
"787 1170 LINE SMOOTH",
"745.667 1170 OFFCURVE",
"731 1153.333 OFFCURVE",
"731 1128 CURVE SMOOTH",
"731 1102.667 OFFCURVE",
"747 1086 OFFCURVE",
"787 1086 CURVE SMOOTH",
"942 1086 LINE",
"942 121 LINE",
"322 1170 LINE",
"102 1170 LINE SMOOTH",
"62 1170 OFFCURVE",
"46 1153.333 OFFCURVE",
"46 1128 CURVE SMOOTH",
"46 1102.667 OFFCURVE",
"62 1086 OFFCURVE",
"102 1086 CURVE SMOOTH",
"215 1086 LINE",
"215 84 LINE",
"145 84 LINE SMOOTH",
"103.667 84 OFFCURVE",
"88 67.333 OFFCURVE",
"88 42 CURVE SMOOTH",
"88 18 OFFCURVE",
"103.667 0 OFFCURVE",
"145 0 CURVE SMOOTH",
"454 0 LINE SMOOTH",
"495.333 0 OFFCURVE",
"511 18 OFFCURVE",
"511 42 CURVE SMOOTH",
"511 67.333 OFFCURVE",
"495.333 84 OFFCURVE",
"454 84 CURVE SMOOTH",
"299 84 LINE",
"299 1047 LINE",
"918 0 LINE",
"1026 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
8 2 1 9 28 25 28 2 199 2 1 11 1 6 27 27 1 22 27 4 11 17 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
14 41 18 14 14 17 18 29 11 37 43 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 40 1 40 41 44 40 40 43 44 29 37 10 4 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
7 51 3 7 7 4 3 29 10 26 20 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
23 43 19 23 23 20 19 29 26 36 30 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 34 values pushed */
33 51 29 33 33 30 29 29 36 27 2 1 18 1 30 28 27 20 28 28 27 1 27 0 19 43 38 37 37 30 38 36 36 2 
PUSHW[ ]\011/* 1 value pushed */
634 
PUSHB[ ]\011/* 7 values pushed */
27 20 38 27 26 2 28 
PUSHW[ ]\011/* 1 value pushed */
634 
NPUSHB[ ]\011/* 10 values pushed */
1 11 10 10 1 8 29 28 30 1 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 27 values pushed */
0 0 44 64 37 53 15 44 79 44 95 44 111 44 143 44 223 44 6 44 26 46 2 3 30 18 27 
PUSHW[ ]\011/* 1 value pushed */
634 
NPUSHB[ ]\011/* 19 values pushed */
18 95 19 111 19 143 19 240 19 4 15 19 1 19 25 45 58 107 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
1 8 20 40 63 1 20 17 28 63 1 20 16 27 63 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1128 807.333 OFFCURVE",
"1030.667 1010.333 OFFCURVE",
"872 1117 CURVE SMOOTH",
"792.667 1170.333 OFFCURVE",
"707.333 1197 OFFCURVE",
"616 1197 CURVE SMOOTH",
"345.333 1197 OFFCURVE",
"104 943.333 OFFCURVE",
"104 582 CURVE SMOOTH",
"104 222 OFFCURVE",
"345.333 -33 OFFCURVE",
"616 -33 CURVE SMOOTH",
"798.667 -33 OFFCURVE",
"969.333 79.167 OFFCURVE",
"1060 270.5 CURVE SMOOTH",
"1105.333 366.167 OFFCURVE",
"1128 470 OFFCURVE",
"1128 582 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1043 307.333 OFFCURVE",
"868 51 OFFCURVE",
"616 51 CURVE SMOOTH",
"396 51 OFFCURVE",
"188 270 OFFCURVE",
"188 582 CURVE SMOOTH",
"188 875.333 OFFCURVE",
"380 1113 OFFCURVE",
"616 1113 CURVE SMOOTH",
"868 1113 OFFCURVE",
"1043 855.333 OFFCURVE",
"1043 582 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 255 values pushed */
201 15 197 25 2 18 230 22 230 24 249 16 249 18 244 22 244 25 6 199 22 217 16 217 18 214 22 215 24 233 16 233 18 7 26 16 26 18 21 22 22 24 4 199 18 250 15 246 19 3 157 9 149 12 164 2 169 5 169 9 164 12 202 6 202 8 8 131 2 140 5 141 8 128 12 137 19 137 21 148 2 155 5 8 55 6 55 8 51 9 60 12 58 16 51 18 51 22 58 24 8 42 2 43 12 47 16 37 18 37 22 47 24 59 2 7 188 15 191 16 178 18 178 19 178 21 176 22 191 24 186 25 8 173 15 174 16 165 18 162 19 163 21 164 22 175 24 170 25 8 87 19 81 22 93 24 159 16 149 19 147 22 156 24 153 25 8 69 19 69 21 69 22 74 24 76 25 90 15 90 16 82 18 8 41 24 58 15 54 19 55 21 57 24 78 15 74 16 69 18 8 11 6 10 8 27 6 27 8 41 15 39 19 39 21 7 6 21 25 1 4 8 19 15 13 4 0 7 23 37 4 9 17 37 10 3 14 37 0 0 16 0 32 0 48 0 160 0 5 0 119 20 37 7 25 
PUSHB[ ]\011/* 4 values pushed */
26 67 122 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
22 10 28 17 63 18 
PUSHW[ ]\011/* 1 value pushed */
-10 
PUSHB[ ]\011/* 4 values pushed */
28 17 63 16 
PUSHW[ ]\011/* 1 value pushed */
-8 
PUSHB[ ]\011/* 4 values pushed */
18 24 63 22 
PUSHW[ ]\011/* 1 value pushed */
-8 
NPUSHB[ ]\011/* 14 values pushed */
20 27 63 22 24 22 29 63 24 24 22 29 63 9 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
15 25 63 22 
PUSHW[ ]\011/* 1 value pushed */
-22 
PUSHB[ ]\011/* 4 values pushed */
15 25 63 5 
PUSHW[ ]\011/* 1 value pushed */
-42 
PUSHB[ ]\011/* 4 values pushed */
15 25 63 22 
PUSHW[ ]\011/* 1 value pushed */
-22 
PUSHB[ ]\011/* 4 values pushed */
11 18 63 5 
PUSHW[ ]\011/* 1 value pushed */
-62 
PUSHB[ ]\011/* 4 values pushed */
11 18 63 9 
PUSHW[ ]\011/* 1 value pushed */
-62 
PUSHB[ ]\011/* 4 values pushed */
11 18 63 19 
PUSHW[ ]\011/* 1 value pushed */
-62 
PUSHB[ ]\011/* 4 values pushed */
13 17 63 21 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
13 17 63 21 
PUSHW[ ]\011/* 1 value pushed */
-12 
NPUSHB[ ]\011/* 14 values pushed */
12 16 63 21 32 13 18 62 19 30 13 18 62 1 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
19 25 63 13 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
19 25 63 2 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
16 21 63 12 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
16 21 63 24 
PUSHW[ ]\011/* 1 value pushed */
-14 
NPUSHB[ ]\011/* 13 values pushed */
17 19 62 1 14 17 19 62 12 34 17 19 62 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"695 480 LINE SMOOTH",
"752.333 480 OFFCURVE",
"800.333 486.333 OFFCURVE",
"839 499 CURVE SMOOTH",
"892.333 516.333 OFFCURVE",
"944 543.667 OFFCURVE",
"994 581 CURVE SMOOTH",
"1060.667 630.333 OFFCURVE",
"1115 721 OFFCURVE",
"1115 829 CURVE SMOOTH",
"1115 1011.667 OFFCURVE",
"953.667 1170 OFFCURVE",
"723 1170 CURVE SMOOTH",
"235 1170 LINE SMOOTH",
"195 1170 OFFCURVE",
"179 1153.333 OFFCURVE",
"179 1128 CURVE SMOOTH",
"179 1102.667 OFFCURVE",
"195 1086 OFFCURVE",
"235 1086 CURVE SMOOTH",
"348 1086 LINE",
"348 84 LINE",
"235 84 LINE SMOOTH",
"195 84 OFFCURVE",
"179 67.333 OFFCURVE",
"179 42 CURVE SMOOTH",
"179 18 OFFCURVE",
"195 0 OFFCURVE",
"235 0 CURVE SMOOTH",
"720 0 LINE SMOOTH",
"760 0 OFFCURVE",
"776 18 OFFCURVE",
"776 42 CURVE SMOOTH",
"776 67.333 OFFCURVE",
"760 84 OFFCURVE",
"720 84 CURVE SMOOTH",
"432 84 LINE",
"432 480 LINE"
);
},
{
closed = 1;
nodes = (
"432 1086 LINE",
"731 1086 LINE SMOOTH",
"904.333 1086 OFFCURVE",
"1031 961 OFFCURVE",
"1031 829 CURVE SMOOTH",
"1031 746.333 OFFCURVE",
"983.167 660.833 OFFCURVE",
"874.5 605.5 CURVE SMOOTH",
"820.167 577.833 OFFCURVE",
"762 564 OFFCURVE",
"700 564 CURVE SMOOTH",
"432 564 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
4 26 4 27 7 30 0 31 19 27 18 31 37 27 53 27 69 27 185 43 10 42 18 39 
PUSHW[ ]\011/* 1 value pushed */
-18 
NPUSHB[ ]\011/* 16 values pushed */
117 26 132 26 2 39 8 42 8 147 26 149 31 2 9 15 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
12 43 16 12 12 15 16 29 9 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
5 54 1 5 5 2 1 29 8 24 18 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 49 values pushed */
21 43 17 21 21 18 17 29 24 44 18 38 25 24 2 35 0 30 37 18 15 36 63 36 2 36 36 24 9 8 8 41 37 15 28 1 28 26 47 45 1 30 17 16 25 46 246 121 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
36 64 11 18 63 36 64 9 15 63 36 64 11 15 63 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 -29 OFFCURVE",
"1128 226 OFFCURVE",
"1128 582 CURVE SMOOTH",
"1128 943.333 OFFCURVE",
"886.667 1197 OFFCURVE",
"616 1197 CURVE SMOOTH",
"345.333 1197 OFFCURVE",
"104 943.333 OFFCURVE",
"104 582 CURVE SMOOTH",
"104 272.667 OFFCURVE",
"287.333 33.667 OFFCURVE",
"510 -21 CURVE",
"323 -156 LINE SMOOTH",
"307.667 -166.667 OFFCURVE",
"300 -178.667 OFFCURVE",
"300 -192 CURVE SMOOTH",
"300 -218.667 OFFCURVE",
"318.333 -236 OFFCURVE",
"341 -236 CURVE SMOOTH",
"347 -236 OFFCURVE",
"356.667 -234.333 OFFCURVE",
"370 -231 CURVE SMOOTH",
"410.667 -219.667 OFFCURVE",
"464.667 -208.333 OFFCURVE",
"532 -197 CURVE SMOOTH",
"580 -189 OFFCURVE",
"620.333 -185 OFFCURVE",
"653 -185 CURVE SMOOTH",
"699 -185 OFFCURVE",
"746.667 -194 OFFCURVE",
"796 -212 CURVE SMOOTH",
"845.333 -230 OFFCURVE",
"884 -239 OFFCURVE",
"912 -239 CURVE SMOOTH",
"948 -239 OFFCURVE",
"984.667 -230.667 OFFCURVE",
"1022 -214 CURVE SMOOTH",
"1071.333 -192.667 OFFCURVE",
"1103 -174 OFFCURVE",
"1117 -158 CURVE SMOOTH",
"1123.667 -150.667 OFFCURVE",
"1127 -142 OFFCURVE",
"1127 -132 CURVE SMOOTH",
"1127 -106.667 OFFCURVE",
"1110 -90 OFFCURVE",
"1086 -90 CURVE SMOOTH",
"1078 -90 OFFCURVE",
"1064.667 -96 OFFCURVE",
"1046 -108 CURVE SMOOTH",
"998.667 -139.333 OFFCURVE",
"955.667 -155 OFFCURVE",
"917 -155 CURVE SMOOTH",
"895 -155 OFFCURVE",
"864 -147.333 OFFCURVE",
"824 -132 CURVE SMOOTH",
"767.333 -110.667 OFFCURVE",
"709.667 -100 OFFCURVE",
"651 -100 CURVE SMOOTH",
"615 -100 OFFCURVE",
"569.333 -105.667 OFFCURVE",
"514 -117 CURVE",
"626 -33 LINE"
);
},
{
closed = 1;
nodes = (
"1043 307.333 OFFCURVE",
"868 51 OFFCURVE",
"616 51 CURVE SMOOTH",
"396 51 OFFCURVE",
"188 270 OFFCURVE",
"188 582 CURVE SMOOTH",
"188 875.333 OFFCURVE",
"380 1113 OFFCURVE",
"616 1113 CURVE SMOOTH",
"868 1113 OFFCURVE",
"1043 855.333 OFFCURVE",
"1043 582 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 95 values pushed */
135 43 134 48 138 52 151 43 153 52 168 40 166 42 164 46 8 18 106 49 105 51 2 10 39 3 43 27 39 20 43 20 45 38 0 74 48 67 52 67 54 73 57 75 58 93 36 90 37 86 39 93 48 83 51 85 52 87 55 91 57 92 58 100 43 100 49 103 52 96 55 174 48 163 52 160 55 189 48 182 51 178 52 176 55 185 58 198 43 198 48 34 48 12 55 
PUSHW[ ]\011/* 1 value pushed */
-8 
PUSHB[ ]\011/* 7 values pushed */
58 10 48 8 36 12 55 
PUSHW[ ]\011/* 1 value pushed */
-12 
PUSHB[ ]\011/* 3 values pushed */
49 8 51 
PUSHW[ ]\011/* 1 value pushed */
-12 
NPUSHB[ ]\011/* 89 values pushed */
43 12 39 8 41 45 41 57 53 40 63 42 58 45 58 57 73 36 71 43 141 36 139 39 131 43 132 46 132 48 137 54 155 36 155 39 147 43 144 46 149 48 153 54 165 0 166 43 211 43 233 57 250 48 246 52 246 54 250 58 28 54 55 57 58 4 52 51 48 3 44 38 34 1 0 0 30 35 34 20 35 35 34 29 102 20 37 7 1 
PUSHW[ ]\011/* 1 value pushed */
342 
PUSHB[ ]\011/* 3 values pushed */
11 102 7 
PUSHW[ ]\011/* 1 value pushed */
393 
NPUSHB[ ]\011/* 19 values pushed */
3 37 23 56 38 0 9 50 37 41 23 41 3 35 9 14 102 44 0 
PUSHW[ ]\011/* 1 value pushed */
349 
PUSHB[ ]\011/* 3 values pushed */
1 237 32 
PUSHW[ ]\011/* 1 value pushed */
300 
NPUSHB[ ]\011/* 24 values pushed */
53 47 37 0 44 16 44 32 44 48 44 160 44 5 44 119 53 37 38 25 59 67 122 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
7 -64 
PUSHB[ ]\011/* 3 values pushed */
9 16 52 
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
MIRP[00100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[00101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 70 values pushed */
35 60 25 15 63 46 100 30 18 63 43 40 30 18 63 46 10 28 17 63 54 30 28 17 63 52 30 28 17 63 54 20 27 16 63 52 20 27 16 63 54 30 25 15 63 54 20 23 14 63 52 20 23 14 63 54 20 22 13 63 52 20 22 13 63 43 20 13 17 63 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"608 522 LINE",
"682 486.667 OFFCURVE",
"747.5 437.333 OFFCURVE",
"804.5 374 CURVE SMOOTH",
"861.5 310.667 OFFCURVE",
"942 186 OFFCURVE",
"1046 0 CURVE",
"1158 0 LINE SMOOTH",
"1198 0 OFFCURVE",
"1214 18 OFFCURVE",
"1214 42 CURVE SMOOTH",
"1214 67.333 OFFCURVE",
"1198 84 OFFCURVE",
"1158 84 CURVE SMOOTH",
"1094 84 LINE",
"1000 245.333 OFFCURVE",
"931.667 352 OFFCURVE",
"889 404 CURVE SMOOTH",
"846.333 456 OFFCURVE",
"795 502.667 OFFCURVE",
"735 544 CURVE",
"943 614.667 OFFCURVE",
"1024 726 OFFCURVE",
"1024 846 CURVE SMOOTH",
"1024 1012.667 OFFCURVE",
"861.333 1170 OFFCURVE",
"652 1170 CURVE SMOOTH",
"144 1170 LINE SMOOTH",
"104 1170 OFFCURVE",
"88 1153.333 OFFCURVE",
"88 1128 CURVE SMOOTH",
"88 1102.667 OFFCURVE",
"104 1086 OFFCURVE",
"144 1086 CURVE SMOOTH",
"257 1086 LINE",
"257 84 LINE",
"144 84 LINE SMOOTH",
"104 84 OFFCURVE",
"88 67.333 OFFCURVE",
"88 42 CURVE SMOOTH",
"88 18 OFFCURVE",
"104 0 OFFCURVE",
"144 0 CURVE SMOOTH",
"496 0 LINE SMOOTH",
"537.333 0 OFFCURVE",
"553 18 OFFCURVE",
"553 42 CURVE SMOOTH",
"553 67.333 OFFCURVE",
"537.333 84 OFFCURVE",
"496 84 CURVE SMOOTH",
"341 84 LINE",
"341 522 LINE"
);
},
{
closed = 1;
nodes = (
"341 1086 LINE",
"650 1086 LINE SMOOTH",
"811.333 1086 OFFCURVE",
"940 962 OFFCURVE",
"940 850 CURVE SMOOTH",
"940 775.333 OFFCURVE",
"888.833 699.333 OFFCURVE",
"769.5 646 CURVE SMOOTH",
"709.833 619.333 OFFCURVE",
"643.333 606 OFFCURVE",
"570 606 CURVE SMOOTH",
"341 606 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
33 -60 
NPUSHB[ ]\011/* 78 values pushed */
32 33 62 43 20 23 24 62 91 53 102 49 117 49 3 7 43 58 49 74 49 90 26 88 49 116 32 116 44 120 53 141 53 165 42 170 49 207 38 213 31 211 32 223 38 213 45 239 38 17 15 38 9 49 69 31 70 33 120 44 133 31 138 44 145 31 162 31 171 44 200 32 201 33 230 43 13 30 
PUSHW[ ]\011/* 4 values pushed */
-8 9 15 676 
NPUSHB[ ]\011/* 11 values pushed */
12 43 16 12 12 15 16 29 9 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
5 51 1 5 5 2 1 29 8 24 18 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 59 values pushed */
21 43 17 21 21 18 17 29 24 44 31 32 42 43 33 6 34 45 44 35 31 46 0 54 38 25 25 18 38 24 2 45 0 30 47 46 64 11 18 63 46 64 11 15 63 46 46 8 24 41 35 38 42 42 9 9 8 8 31 
PUSHW[ ]\011/* 3 values pushed */
634 45 672 
NPUSHB[ ]\011/* 13 values pushed */
0 0 55 1 30 16 51 37 28 0 38 1 38 
PUSHW[ ]\011/* 1 value pushed */
349 
PUSHB[ ]\011/* 6 values pushed */
127 28 143 28 2 28 
PUSHW[ ]\011/* 1 value pushed */
296 
NPUSHB[ ]\011/* 13 values pushed */
0 34 1 80 34 160 34 208 34 240 34 4 34 
PUSHW[ ]\011/* 1 value pushed */
541 
NPUSHB[ ]\011/* 15 values pushed */
17 64 16 1 47 16 240 16 2 16 25 56 74 108 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
31 12 32 
PUSHW[ ]\011/* 3 values pushed */
-12 33 -12 
PUSHB[ ]\011/* 5 values pushed */
43 12 53 22 31 
PUSHW[ ]\011/* 1 value pushed */
-10 
PUSHB[ ]\011/* 3 values pushed */
52 32 49 
PUSHW[ ]\011/* 1 value pushed */
-22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"830.333 1160 OFFCURVE",
"729.333 1197 OFFCURVE",
"612 1197 CURVE SMOOTH",
"381.333 1197 OFFCURVE",
"228 1051 OFFCURVE",
"228 875 CURVE SMOOTH",
"228 786.333 OFFCURVE",
"258.667 718 OFFCURVE",
"320 670 CURVE SMOOTH",
"381.333 622 OFFCURVE",
"481.667 586.333 OFFCURVE",
"621 563 CURVE SMOOTH",
"722.333 545.667 OFFCURVE",
"789 530 OFFCURVE",
"821 516 CURVE SMOOTH",
"913 476 OFFCURVE",
"960 405 OFFCURVE",
"960 317 CURVE SMOOTH",
"960 173 OFFCURVE",
"829.667 51 OFFCURVE",
"619 51 CURVE SMOOTH",
"408.333 51 OFFCURVE",
"275.667 171.333 OFFCURVE",
"269 294 CURVE SMOOTH",
"267.667 330 OFFCURVE",
"251 345 OFFCURVE",
"227 345 CURVE SMOOTH",
"201.667 345 OFFCURVE",
"185 329.333 OFFCURVE",
"185 288 CURVE SMOOTH",
"185 56 LINE SMOOTH",
"185 16 OFFCURVE",
"203 0 OFFCURVE",
"227 0 CURVE SMOOTH",
"252.333 0 OFFCURVE",
"269 16 OFFCURVE",
"269 56 CURVE SMOOTH",
"269 104 LINE",
"356.333 12.667 OFFCURVE",
"473 -33 OFFCURVE",
"619 -33 CURVE SMOOTH",
"879 -33 OFFCURVE",
"1044 122 OFFCURVE",
"1044 314 CURVE SMOOTH",
"1044 439.333 OFFCURVE",
"984 533 OFFCURVE",
"868 585 CURVE SMOOTH",
"824.667 604.333 OFFCURVE",
"746 623.333 OFFCURVE",
"632 642 CURVE SMOOTH",
"496 664.667 OFFCURVE",
"446.667 681.5 OFFCURVE",
"396 715.5 CURVE SMOOTH",
"345.333 749.5 OFFCURVE",
"312 806.333 OFFCURVE",
"312 873 CURVE SMOOTH",
"312 1002.333 OFFCURVE",
"429.667 1113 OFFCURVE",
"615 1113 CURVE SMOOTH",
"791 1113 OFFCURVE",
"908.333 1007 OFFCURVE",
"915 895 CURVE SMOOTH",
"916.333 859 OFFCURVE",
"933 844 OFFCURVE",
"957 844 CURVE SMOOTH",
"982.333 844 OFFCURVE",
"999 860 OFFCURVE",
"999 900 CURVE SMOOTH",
"999 1114 LINE SMOOTH",
"999 1154 OFFCURVE",
"982.333 1170 OFFCURVE",
"957 1170 CURVE SMOOTH",
"931.667 1170 OFFCURVE",
"915 1154 OFFCURVE",
"915 1114 CURVE SMOOTH",
"915 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
61 51 76 27 79 51 93 51 119 22 134 22 135 26 137 27 140 57 153 66 10 73 32 70 65 2 145 31 162 31 169 65 168 66 213 23 230 23 245 23 7 27 
PUSHW[ ]\011/* 1 value pushed */
-10 
PUSHB[ ]\011/* 3 values pushed */
19 24 54 
PUSHW[ ]\011/* 1 value pushed */
-34 
NPUSHB[ ]\011/* 89 values pushed */
43 64 41 61 59 26 24 15 5 20 0 1 55 14 50 48 35 3 46 52 15 13 0 3 17 11 25 38 60 60 52 17 37 67 11 139 4 46 139 39 52 37 33 67 3 4 2 39 8 33 9 14 38 8 96 55 37 95 30 111 30 2 30 26 70 20 37 64 49 38 35 38 64 65 111 41 127 41 143 41 159 41 175 41 5 41 25 69 157 
PUSHW[ ]\011/* 3 values pushed */
287 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1000 1086 LINE",
"1000 795 LINE SMOOTH",
"1000 753.667 OFFCURVE",
"1016.667 738 OFFCURVE",
"1042 738 CURVE SMOOTH",
"1067.333 738 OFFCURVE",
"1084 753.667 OFFCURVE",
"1084 795 CURVE SMOOTH",
"1084 1170 LINE",
"143 1170 LINE",
"143 795 LINE SMOOTH",
"143 753.667 OFFCURVE",
"161 738 OFFCURVE",
"185 738 CURVE SMOOTH",
"210.333 738 OFFCURVE",
"227 753.667 OFFCURVE",
"227 795 CURVE SMOOTH",
"227 1086 LINE",
"571 1086 LINE",
"571 84 LINE",
"353 84 LINE SMOOTH",
"313 84 OFFCURVE",
"297 67.333 OFFCURVE",
"297 42 CURVE SMOOTH",
"297 18 OFFCURVE",
"313 0 OFFCURVE",
"353 0 CURVE SMOOTH",
"874 0 LINE SMOOTH",
"914 0 OFFCURVE",
"930 18 OFFCURVE",
"930 42 CURVE SMOOTH",
"930 67.333 OFFCURVE",
"914 84 OFFCURVE",
"874 84 CURVE SMOOTH",
"656 84 LINE",
"656 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
15 9 12 53 16 16 29 9 34 28 31 54 35 35 29 28 2 8 5 53 1 1 29 8 19 25 22 54 18 18 29 25 35 18 30 27 26 2 9 8 8 25 
PUSHW[ ]\011/* 1 value pushed */
367 
PUSHB[ ]\011/* 7 values pushed */
16 16 17 30 0 0 1 
PUSHW[ ]\011/* 1 value pushed */
367 
NPUSHB[ ]\011/* 32 values pushed */
16 28 47 28 96 28 207 28 4 15 28 63 28 79 28 95 28 112 28 143 28 175 28 223 28 8 28 233 37 194 111 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1092 1086 LINE SMOOTH",
"1132 1086 OFFCURVE",
"1148 1102.667 OFFCURVE",
"1148 1128 CURVE SMOOTH",
"1148 1153.333 OFFCURVE",
"1132 1170 OFFCURVE",
"1092 1170 CURVE SMOOTH",
"782 1170 LINE SMOOTH",
"742 1170 OFFCURVE",
"726 1153.333 OFFCURVE",
"726 1128 CURVE SMOOTH",
"726 1102.667 OFFCURVE",
"742 1086 OFFCURVE",
"782 1086 CURVE SMOOTH",
"937 1086 LINE",
"937 384 LINE SMOOTH",
"937 252 OFFCURVE",
"856.833 139.667 OFFCURVE",
"765.5 89 CURVE SMOOTH",
"719.833 63.667 OFFCURVE",
"669.333 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"440.667 51 OFFCURVE",
"294 198.667 OFFCURVE",
"294 384 CURVE SMOOTH",
"294 1086 LINE",
"449 1086 LINE SMOOTH",
"489 1086 OFFCURVE",
"505 1102.667 OFFCURVE",
"505 1128 CURVE SMOOTH",
"505 1153.333 OFFCURVE",
"489 1170 OFFCURVE",
"449 1170 CURVE SMOOTH",
"139 1170 LINE SMOOTH",
"119 1170 OFFCURVE",
"105 1166.667 OFFCURVE",
"97 1160 CURVE",
"87.667 1151.333 OFFCURVE",
"83 1140.667 OFFCURVE",
"83 1128 CURVE SMOOTH",
"83 1102.667 OFFCURVE",
"99 1086 OFFCURVE",
"139 1086 CURVE SMOOTH",
"210 1086 LINE",
"210 384 LINE SMOOTH",
"210 224 OFFCURVE",
"303 81.333 OFFCURVE",
"419 16 CURVE SMOOTH",
"477 -16.667 OFFCURVE",
"543.333 -33 OFFCURVE",
"618 -33 CURVE SMOOTH",
"840.667 -33 OFFCURVE",
"1021 148 OFFCURVE",
"1021 384 CURVE SMOOTH",
"1021 1086 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
28 -8 31 -8 
PUSHB[ ]\011/* 3 values pushed */
31 16 28 
PUSHW[ ]\011/* 3 values pushed */
-8 27 -8 
NPUSHB[ ]\011/* 34 values pushed */
119 27 228 6 230 28 234 31 249 2 245 6 245 27 248 31 251 32 9 11 2 4 6 1 27 11 31 133 27 155 6 6 18 24 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 16 values pushed */
0 21 16 21 2 21 51 25 21 21 24 25 29 18 42 48 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 45 1 45 41 0 45 45 48 0 29 42 17 10 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
13 41 9 13 13 10 9 29 17 41 35 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 71 values pushed */
38 51 34 38 38 35 34 29 41 48 38 42 42 35 38 41 41 24 38 18 10 38 18 17 2 29 37 4 9 34 33 30 1 1 111 0 143 0 2 15 0 79 0 95 0 3 0 26 50 25 26 30 8 8 79 9 95 9 111 9 127 9 143 9 5 9 25 49 58 107 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */";
};
width = 1229;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1093 1086 LINE",
"1157 1086 LINE SMOOTH",
"1194.604 1086 OFFCURVE",
"1214 1100.06 OFFCURVE",
"1214 1128 CURVE SMOOTH",
"1214 1157.129 OFFCURVE",
"1194.324 1170 OFFCURVE",
"1157 1170 CURVE SMOOTH",
"845 1170 LINE SMOOTH",
"807.396 1170 OFFCURVE",
"788 1155.94 OFFCURVE",
"788 1128 CURVE SMOOTH",
"788 1098.871 OFFCURVE",
"807.676 1086 OFFCURVE",
"845 1086 CURVE SMOOTH",
"1005 1086 LINE",
"620 84 LINE",
"614 84 LINE",
"224 1086 LINE",
"385 1086 LINE SMOOTH",
"421.367 1086 OFFCURVE",
"441 1100.552 OFFCURVE",
"441 1128 CURVE SMOOTH",
"441 1157.165 OFFCURVE",
"421.727 1170 OFFCURVE",
"385 1170 CURVE SMOOTH",
"72 1170 LINE SMOOTH",
"34.833 1170 OFFCURVE",
"16 1156.466 OFFCURVE",
"16 1128 CURVE SMOOTH",
"16 1099.534 OFFCURVE",
"34.833 1086 OFFCURVE",
"72 1086 CURVE SMOOTH",
"137 1086 LINE",
"560 0 LINE",
"677 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
7 0 7 24 48 0 76 24 74 43 96 29 146 16 208 29 249 24 249 43 10 168 0 168 29 2 12 20 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
16 16 51 21 16 16 20 21 29 12 21 22 34 42 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 28 values pushed */
0 38 112 38 2 0 38 16 38 96 38 208 38 4 38 38 41 43 38 38 42 43 29 34 43 0 11 3 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 24 values pushed */
111 7 1 15 7 31 7 111 7 3 7 7 41 2 7 7 3 2 29 11 2 1 33 25 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 73 values pushed */
29 29 51 24 29 29 25 24 29 33 24 23 21 2 1 1 30 22 21 20 22 22 21 24 43 0 0 30 23 24 20 23 23 24 23 22 42 38 34 25 38 33 20 38 12 3 38 11 34 33 33 12 12 11 2 0 1 8 0 43 1 43 38 48 24 80 24 176 24 240 24 4 24 
PUSHW[ ]\011/* 1 value pushed */
318 
NPUSHB[ ]\011/* 11 values pushed */
23 2 38 47 21 95 21 191 21 3 21 
PUSHW[ ]\011/* 1 value pushed */
318 
PUSHB[ ]\011/* 4 values pushed */
255 23 1 23 
PUSHW[ ]\011/* 3 values pushed */
387 22 720 
PUSHB[ ]\011/* 4 values pushed */
44 69 108 24 
PUSHW[ ]\011/* 1 value pushed */
356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1100 1086 LINE",
"1131 1086 LINE SMOOTH",
"1172.333 1086 OFFCURVE",
"1188 1102.667 OFFCURVE",
"1188 1128 CURVE SMOOTH",
"1188 1153.333 OFFCURVE",
"1172.333 1170 OFFCURVE",
"1131 1170 CURVE SMOOTH",
"821 1170 LINE SMOOTH",
"781 1170 OFFCURVE",
"765 1153.333 OFFCURVE",
"765 1128 CURVE SMOOTH",
"765 1102.667 OFFCURVE",
"781 1086 OFFCURVE",
"821 1086 CURVE SMOOTH",
"1018 1086 LINE",
"909 96 LINE",
"676 911 LINE",
"547 911 LINE",
"320 96 LINE",
"209 1086 LINE",
"405 1086 LINE SMOOTH",
"446.333 1086 OFFCURVE",
"462 1102.667 OFFCURVE",
"462 1128 CURVE SMOOTH",
"462 1153.333 OFFCURVE",
"446.333 1170 OFFCURVE",
"405 1170 CURVE SMOOTH",
"93 1170 LINE SMOOTH",
"53 1170 OFFCURVE",
"37 1153.333 OFFCURVE",
"37 1128 CURVE SMOOTH",
"37 1102.667 OFFCURVE",
"53 1086 OFFCURVE",
"93 1086 CURVE SMOOTH",
"124 1086 LINE",
"248 0 LINE",
"380 0 LINE",
"613 831 LINE",
"851 0 LINE",
"983 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
21 24 2 22 23 5 6 4 1 4 8 40 26 20 6 38 32 12 2 9 36 2 21 41 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 83 values pushed */
111 26 111 27 111 28 111 29 136 22 134 23 192 5 192 20 232 22 9 96 16 96 17 96 18 96 19 4 207 2 1 16 22 16 23 64 22 64 23 4 24 2 27 23 30 25 31 29 30 40 41 23 54 2 54 22 49 23 70 2 70 22 65 23 89 1 91 22 88 23 136 23 168 23 201 2 200 22 218 23 20 13 19 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 17 values pushed */
16 80 16 1 16 53 20 16 16 19 20 29 13 20 21 33 39 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 30 values pushed */
36 32 36 112 36 2 0 36 16 36 80 36 192 36 208 36 5 36 144 40 36 36 39 40 29 33 40 0 12 6 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 30 values pushed */
9 15 9 31 9 2 15 9 191 9 223 9 239 9 255 9 5 9 144 5 9 9 6 5 29 12 5 4 32 26 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 20 values pushed */
29 95 29 1 29 53 25 29 29 26 25 29 32 25 24 0 2 22 23 32 
PUSHW[ ]\011/* 1 value pushed */
-262 
NPUSHB[ ]\011/* 52 values pushed */
21 4 3 32 20 5 4 4 30 21 20 20 21 21 20 40 0 0 30 24 25 20 24 24 25 2 1 2 3 1 30 24 23 20 24 24 23 2 3 2 1 3 30 21 22 20 21 21 22 2 38 23 
PUSHW[ ]\011/* 1 value pushed */
630 
NPUSHB[ ]\011/* 30 values pushed */
24 38 0 1 1 3 21 38 3 4 8 39 38 33 26 38 33 26 38 32 32 19 38 13 6 38 13 12 2 1 
PUSHW[ ]\011/* 7 values pushed */
300 0 24 349 25 0 349 
NPUSHB[ ]\011/* 50 values pushed */
207 25 1 31 25 1 25 64 42 53 25 64 52 54 52 25 128 47 53 25 64 35 36 52 25 64 38 39 52 25 38 64 15 40 31 40 95 40 127 40 143 40 159 40 207 40 239 40 8 40 
PUSHW[ ]\011/* 4 values pushed */
633 2 23 300 
NPUSHB[ ]\011/* 23 values pushed */
22 64 42 53 22 64 47 53 22 64 52 54 52 22 64 26 53 15 22 239 22 2 22 
PUSHW[ ]\011/* 1 value pushed */
344 
PUSHB[ ]\011/* 5 values pushed */
2 64 38 53 2 
PUSHW[ ]\011/* 1 value pushed */
633 
PUSHB[ ]\011/* 3 values pushed */
5 32 21 
PUSHW[ ]\011/* 6 values pushed */
349 20 3 300 4 301 
NPUSHB[ ]\011/* 21 values pushed */
31 20 1 192 20 1 20 38 16 5 1 0 5 79 5 143 5 207 5 4 5 
PUSHW[ ]\011/* 6 values pushed */
300 41 69 340 24 356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
RTG[ ]\011/* RoundToGrid */
MIRP[00110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
38 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
42 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 8 values pushed */
2 128 2 26 23 26 22 26 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
2 -20 
PUSHB[ ]\011/* 3 values pushed */
2 8 23 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 2 values pushed */
22 16 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1039 1086 LINE",
"1071 1086 LINE SMOOTH",
"1111 1086 OFFCURVE",
"1127 1102.667 OFFCURVE",
"1127 1128 CURVE SMOOTH",
"1127 1153.333 OFFCURVE",
"1111 1170 OFFCURVE",
"1071 1170 CURVE SMOOTH",
"841 1170 LINE SMOOTH",
"799.667 1170 OFFCURVE",
"784 1153.333 OFFCURVE",
"784 1128 CURVE SMOOTH",
"784 1102.667 OFFCURVE",
"799.667 1086 OFFCURVE",
"841 1086 CURVE SMOOTH",
"935 1086 LINE",
"613 667 LINE",
"289 1086 LINE",
"383 1086 LINE SMOOTH",
"424.333 1086 OFFCURVE",
"440 1102.667 OFFCURVE",
"440 1128 CURVE SMOOTH",
"440 1153.333 OFFCURVE",
"424.333 1170 OFFCURVE",
"383 1170 CURVE SMOOTH",
"154 1170 LINE SMOOTH",
"114 1170 OFFCURVE",
"98 1153.333 OFFCURVE",
"98 1128 CURVE SMOOTH",
"98 1102.667 OFFCURVE",
"114 1086 OFFCURVE",
"154 1086 CURVE SMOOTH",
"185 1086 LINE",
"561 599 LINE",
"167 84 LINE",
"112.241 84 OFFCURVE",
"80 84.133 OFFCURVE",
"80 42 CURVE SMOOTH",
"80 18 OFFCURVE",
"96 0 OFFCURVE",
"136 0 CURVE SMOOTH",
"404 0 LINE SMOOTH",
"444 0 OFFCURVE",
"460 18 OFFCURVE",
"460 42 CURVE SMOOTH",
"460 67.333 OFFCURVE",
"444 84 OFFCURVE",
"404 84 CURVE SMOOTH",
"270 84 LINE",
"613 530 LINE",
"960 84 LINE",
"826 84 LINE SMOOTH",
"786 84 OFFCURVE",
"770 67.333 OFFCURVE",
"770 42 CURVE SMOOTH",
"770 18 OFFCURVE",
"786 0 OFFCURVE",
"826 0 CURVE SMOOTH",
"1096 0 LINE SMOOTH",
"1136 0 OFFCURVE",
"1152 18 OFFCURVE",
"1152 42 CURVE SMOOTH",
"1152 67.333 OFFCURVE",
"1136 84 OFFCURVE",
"1096 84 CURVE SMOOTH",
"1064 84 LINE",
"665 599 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 149 values pushed */
18 53 1 58 33 56 35 53 67 64 12 79 22 79 46 65 56 81 12 95 22 93 46 81 56 97 12 110 22 110 46 97 56 158 46 144 56 167 34 184 18 184 33 184 52 184 67 200 18 200 33 200 52 200 67 216 0 236 52 239 63 237 67 247 0 241 1 241 16 34 24 0 1 0 50 1 18 67 17 18 67 35 16 34 35 16 33 52 51 50 1 33 52 52 67 18 18 18 30 33 52 20 33 33 52 50 35 16 18 16 30 1 50 20 1 1 50 2 38 1 38 16 38 15 38 10 19 38 18 38 33 38 32 38 26 66 38 67 38 52 38 53 38 59 49 38 50 38 32 
PUSHW[ ]\011/* 1 value pushed */
632 
NPUSHB[ ]\011/* 28 values pushed */
35 38 42 10 8 26 8 59 2 42 2 239 52 1 52 38 67 67 63 56 56 63 35 35 46 46 39 67 
PUSHW[ ]\011/* 1 value pushed */
296 
NPUSHB[ ]\011/* 18 values pushed */
63 65 5 16 38 1 1 5 12 12 5 29 29 12 22 22 29 1 
PUSHW[ ]\011/* 1 value pushed */
296 
NPUSHB[ ]\011/* 17 values pushed */
15 5 47 5 63 5 79 5 95 5 5 5 26 69 50 38 35 
PUSHW[ ]\011/* 1 value pushed */
296 
PUSHB[ ]\011/* 6 values pushed */
39 102 29 18 38 33 
PUSHW[ ]\011/* 1 value pushed */
296 
NPUSHB[ ]\011/* 10 values pushed */
79 29 95 29 111 29 3 29 25 68 
PUSHW[ ]\011/* 4 values pushed */
294 264 24 277 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
16 64 25 50 63 16 64 23 45 63 16 64 20 40 63 16 34 18 30 63 16 14 13 22 63 16 14 12 20 63 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
18 -44 
PUSHB[ ]\011/* 4 values pushed */
25 50 63 18 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
23 45 63 18 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
20 40 63 18 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
18 30 63 18 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
13 22 63 18 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 3 values pushed */
12 20 63 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
51 -15 
NPUSHB[ ]\011/* 19 values pushed */
14 23 63 17 15 17 28 63 17 5 21 28 63 17 5 16 21 63 1 
PUSHW[ ]\011/* 1 value pushed */
-24 
NPUSHB[ ]\011/* 19 values pushed */
17 28 63 33 24 14 23 63 67 24 14 23 63 16 24 15 20 63 18 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
15 20 63 50 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 8 values pushed */
15 20 63 17 14 23 24 62 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1022 1086 LINE",
"1072 1086 LINE SMOOTH",
"1112 1086 OFFCURVE",
"1128 1102.667 OFFCURVE",
"1128 1128 CURVE SMOOTH",
"1128 1153.333 OFFCURVE",
"1112 1170 OFFCURVE",
"1072 1170 CURVE SMOOTH",
"842 1170 LINE SMOOTH",
"800.667 1170 OFFCURVE",
"785 1153.333 OFFCURVE",
"785 1128 CURVE SMOOTH",
"785 1102.667 OFFCURVE",
"800.667 1086 OFFCURVE",
"842 1086 CURVE SMOOTH",
"924 1086 LINE",
"617 613 LINE",
"303 1086 LINE",
"386 1086 LINE SMOOTH",
"426 1086 OFFCURVE",
"442 1102.667 OFFCURVE",
"442 1128 CURVE SMOOTH",
"442 1153.333 OFFCURVE",
"426 1170 OFFCURVE",
"386 1170 CURVE SMOOTH",
"155 1170 LINE SMOOTH",
"115 1170 OFFCURVE",
"99 1153.333 OFFCURVE",
"99 1128 CURVE SMOOTH",
"99 1102.667 OFFCURVE",
"115 1086 OFFCURVE",
"155 1086 CURVE SMOOTH",
"205 1086 LINE",
"574 528 LINE",
"574 84 LINE",
"356 84 LINE SMOOTH",
"314.667 84 OFFCURVE",
"300 67.333 OFFCURVE",
"300 42 CURVE SMOOTH",
"300 18 OFFCURVE",
"316 0 OFFCURVE",
"356 0 CURVE SMOOTH",
"877 0 LINE SMOOTH",
"917 0 OFFCURVE",
"933 18 OFFCURVE",
"933 42 CURVE SMOOTH",
"933 67.333 OFFCURVE",
"917 84 OFFCURVE",
"877 84 CURVE SMOOTH",
"659 84 LINE",
"659 528 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
34 -25 
PUSHB[ ]\011/* 4 values pushed */
23 31 63 34 
PUSHW[ ]\011/* 1 value pushed */
-25 
NPUSHB[ ]\011/* 53 values pushed */
19 25 63 182 34 1 9 35 9 50 25 35 25 50 105 35 105 50 6 90 18 94 22 95 29 90 33 4 8 33 100 34 148 34 165 34 4 247 33 248 35 2 6 33 9 35 21 33 25 35 4 9 15 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
12 53 16 12 12 15 16 29 9 26 32 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 13 values pushed */
29 43 33 29 29 32 33 29 26 33 34 43 49 
PUSHW[ ]\011/* 1 value pushed */
676 
PUSHB[ ]\011/* 4 values pushed */
16 46 1 46 
PUSHW[ ]\011/* 1 value pushed */
706 
NPUSHB[ ]\011/* 11 values pushed */
50 46 46 49 50 29 43 50 0 8 2 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
5 53 1 5 5 2 1 29 8 25 19 
PUSHW[ ]\011/* 3 values pushed */
676 22 706 
NPUSHB[ ]\011/* 11 values pushed */
18 22 22 19 18 29 25 18 17 42 36 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 51 values pushed */
39 43 35 39 39 36 35 29 42 35 34 34 1 16 34 17 0 3 25 9 50 35 19 49 38 43 36 38 43 42 32 38 42 26 33 18 18 19 38 26 25 2 9 8 8 35 38 80 50 1 50 
PUSHW[ ]\011/* 1 value pushed */
703 
PUSHB[ ]\011/* 6 values pushed */
0 0 1 38 17 16 
PUSHW[ ]\011/* 1 value pushed */
703 
NPUSHB[ ]\011/* 15 values pushed */
33 38 0 18 79 18 143 18 3 18 25 51 58 107 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
37 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 4 values pushed */
0 24 17 24 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1022 377 LINE SMOOTH",
"1022 418.333 OFFCURVE",
"1005.333 434 OFFCURVE",
"980 434 CURVE SMOOTH",
"954.667 434 OFFCURVE",
"938 418.333 OFFCURVE",
"938 377 CURVE SMOOTH",
"938 84 LINE",
"294 84 LINE",
"294 93 LINE",
"976 1051 LINE",
"976 1170 LINE",
"251 1170 LINE",
"251 839 LINE SMOOTH",
"251 797.667 OFFCURVE",
"269 782 OFFCURVE",
"293 782 CURVE SMOOTH",
"318.333 782 OFFCURVE",
"336 797.667 OFFCURVE",
"336 839 CURVE SMOOTH",
"336 1086 LINE",
"895 1086 LINE",
"895 1079 LINE",
"213 122 LINE",
"213 0 LINE",
"1022 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
121 3 1 18 97 9 97 21 96 22 112 10 113 11 112 22 6 184 3 232 2 232 15 3 8 2 15 3 8 15 31 3 23 15 40 2 47 3 56 2 63 3 79 3 127 3 119 15 118 16 137 2 136 3 15 12 6 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
9 86 5 9 9 6 5 29 12 25 19 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 42 values pushed */
22 54 18 22 22 19 18 29 25 16 15 2 3 17 4 5 30 14 13 2 18 17 30 0 1 8 15 64 32 53 15 64 29 53 15 64 25 28 52 15 38 4 
PUSHW[ ]\011/* 1 value pushed */
634 
NPUSHB[ ]\011/* 35 values pushed */
25 15 0 79 0 95 0 111 0 4 0 26 27 17 38 12 65 32 1 1 79 1 111 1 127 1 240 1 4 1 25 26 58 107 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
15 -14 
PUSHB[ ]\011/* 2 values pushed */
2 14 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
3 20 25 15 63 16 
PUSHW[ ]\011/* 1 value pushed */
-30 
PUSHB[ ]\011/* 4 values pushed */
25 15 63 16 
PUSHW[ ]\011/* 1 value pushed */
-30 
PUSHB[ ]\011/* 8 values pushed */
23 14 63 2 3 15 31 60 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"861 1170 LINE SMOOTH",
"901 1170 OFFCURVE",
"917 1188 OFFCURVE",
"917 1212 CURVE SMOOTH",
"917 1237.333 OFFCURVE",
"901 1255 OFFCURVE",
"861 1255 CURVE SMOOTH",
"573 1255 LINE",
"573 -259 LINE",
"861 -259 LINE SMOOTH",
"901 -259 OFFCURVE",
"917 -242.333 OFFCURVE",
"917 -217 CURVE SMOOTH",
"917 -191.667 OFFCURVE",
"901 -175 OFFCURVE",
"861 -175 CURVE SMOOTH",
"657 -175 LINE",
"657 1170 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
17 11 14 242 0 0 50 11 2 8 5 242 1 1 50 8 11 10 16 8 18 0 1 36 9 16 10 48 10 80 10 3 10 25 18 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"302 1370.667 OFFCURVE",
"287 1383 OFFCURVE",
"269 1383 CURVE SMOOTH",
"246.333 1383 OFFCURVE",
"227 1364.333 OFFCURVE",
"227 1343 CURVE SMOOTH",
"227 1335.667 OFFCURVE",
"230.333 1325 OFFCURVE",
"237 1311 CURVE SMOOTH",
"912 -138 LINE SMOOTH",
"923.333 -162.667 OFFCURVE",
"938.333 -175 OFFCURVE",
"957 -175 CURVE SMOOTH",
"979.667 -175 OFFCURVE",
"999 -155.333 OFFCURVE",
"999 -134 CURVE SMOOTH",
"999 -127.333 OFFCURVE",
"995.667 -116.667 OFFCURVE",
"989 -102 CURVE SMOOTH",
"314 1346 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
9 40 11 25 52 1 
PUSHW[ ]\011/* 1 value pushed */
-40 
NPUSHB[ ]\011/* 13 values pushed */
11 25 52 9 9 25 9 110 1 105 8 4 14 
PUSHW[ ]\011/* 1 value pushed */
456 
PUSHB[ ]\011/* 5 values pushed */
6 77 1 91 8 
PUSHW[ ]\011/* 1 value pushed */
434 
NPUSHB[ ]\011/* 12 values pushed */
0 91 9 189 47 14 1 14 215 16 6 199 
PUSHW[ ]\011/* 2 values pushed */
459 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"372 -175 LINE SMOOTH",
"332 -175 OFFCURVE",
"316 -193 OFFCURVE",
"316 -217 CURVE SMOOTH",
"316 -242.333 OFFCURVE",
"332 -259 OFFCURVE",
"372 -259 CURVE SMOOTH",
"660 -259 LINE",
"660 1255 LINE",
"372 1255 LINE SMOOTH",
"332 1255 OFFCURVE",
"316 1237.333 OFFCURVE",
"316 1212 CURVE SMOOTH",
"316 1188 OFFCURVE",
"332 1170 OFFCURVE",
"372 1170 CURVE SMOOTH",
"575 1170 LINE",
"575 -175 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
17 11 14 242 0 0 50 11 2 8 5 242 1 1 50 8 16 11 18 9 10 36 1 63 0 1 0 25 18 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"246 816 LINE SMOOTH",
"234 800.667 OFFCURVE",
"228 788.333 OFFCURVE",
"228 779 CURVE SMOOTH",
"228 755 OFFCURVE",
"247 736 OFFCURVE",
"271 736 CURVE SMOOTH",
"284.333 736 OFFCURVE",
"298 745 OFFCURVE",
"312 763 CURVE SMOOTH",
"614 1147 LINE",
"916 763 LINE",
"930.667 745.667 OFFCURVE",
"944.667 737 OFFCURVE",
"958 737 CURVE SMOOTH",
"982 737 OFFCURVE",
"1001 755 OFFCURVE",
"1001 779 CURVE SMOOTH",
"1001 788.333 OFFCURVE",
"995 800.667 OFFCURVE",
"983 816 CURVE SMOOTH",
"614 1279 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
104 8 120 8 136 8 3 9 11 9 7 11 91 16 0 20 16 16 0 9 7 9 11 7 91 2 0 20 2 2 0 16 0 9 11 7 2 6 3 15 16 11 7 2 4 12 9 193 0 64 6 
PUSHW[ ]\011/* 3 values pushed */
771 12 281 
NPUSHB[ ]\011/* 21 values pushed */
32 0 176 3 1 63 3 111 3 143 3 3 3 26 19 15 25 18 199 188 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1214.333 -561 OFFCURVE",
"1229 -544.333 OFFCURVE",
"1229 -519 CURVE SMOOTH",
"1229 -493.667 OFFCURVE",
"1214.333 -477 OFFCURVE",
"1173 -477 CURVE SMOOTH",
"56 -477 LINE SMOOTH",
"16 -477 OFFCURVE",
"0 -493.667 OFFCURVE",
"0 -519 CURVE SMOOTH",
"0 -544.333 OFFCURVE",
"16 -561 OFFCURVE",
"56 -561 CURVE SMOOTH",
"1173 -561 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
7 91 1 11 4 
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"509.667 1322.333 OFFCURVE",
"497 1329 OFFCURVE",
"487 1329 CURVE SMOOTH",
"463 1329 OFFCURVE",
"444 1310 OFFCURVE",
"444 1286 CURVE SMOOTH",
"444 1273.333 OFFCURVE",
"452.333 1259.667 OFFCURVE",
"469 1245 CURVE SMOOTH",
"705 1041 LINE SMOOTH",
"720.333 1027.667 OFFCURVE",
"733 1021 OFFCURVE",
"743 1021 CURVE SMOOTH",
"767 1021 OFFCURVE",
"786 1040 OFFCURVE",
"786 1064 CURVE SMOOTH",
"786 1071.333 OFFCURVE",
"785 1076.667 OFFCURVE",
"783 1080 CURVE",
"761 1105 LINE",
"525 1309 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
0 7 16 7 96 7 112 7 128 7 5 7 
PUSHW[ ]\011/* 5 values pushed */
498 15 4 503 12 
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1053 0 LINE SMOOTH",
"1094.333 0 OFFCURVE",
"1110 18 OFFCURVE",
"1110 42 CURVE SMOOTH",
"1110 67.333 OFFCURVE",
"1094.333 84 OFFCURVE",
"1053 84 CURVE SMOOTH",
"941 84 LINE",
"941 640 LINE SMOOTH",
"941 772 OFFCURVE",
"816 896 OFFCURVE",
"604 896 CURVE SMOOTH",
"550.667 896 OFFCURVE",
"472 882 OFFCURVE",
"368 854 CURVE SMOOTH",
"302 836.667 OFFCURVE",
"264.333 823 OFFCURVE",
"255 813 CURVE SMOOTH",
"248.333 806.333 OFFCURVE",
"245 797.333 OFFCURVE",
"245 786 CURVE SMOOTH",
"245 762 OFFCURVE",
"262.667 744 OFFCURVE",
"284 744 CURVE SMOOTH",
"290 744 OFFCURVE",
"303.667 747.333 OFFCURVE",
"325 754 CURVE SMOOTH",
"443 792 OFFCURVE",
"534.667 811 OFFCURVE",
"600 811 CURVE SMOOTH",
"770.667 811 OFFCURVE",
"856 732 OFFCURVE",
"856 640 CURVE SMOOTH",
"856 504 LINE",
"750.667 525.333 OFFCURVE",
"660.333 535 OFFCURVE",
"583 535 CURVE SMOOTH",
"296.333 535 OFFCURVE",
"144 393.667 OFFCURVE",
"144 231 CURVE SMOOTH",
"144 83 OFFCURVE",
"263.667 -33 OFFCURVE",
"465 -33 CURVE SMOOTH",
"603.667 -33 OFFCURVE",
"734 18.333 OFFCURVE",
"856 121 CURVE",
"856 0 LINE"
);
},
{
closed = 1;
nodes = (
"856 233 LINE",
"724 106.333 OFFCURVE",
"606.333 51 OFFCURVE",
"461 51 CURVE SMOOTH",
"309 51 OFFCURVE",
"228 129.667 OFFCURVE",
"228 231 CURVE SMOOTH",
"228 285.667 OFFCURVE",
"254 332.667 OFFCURVE",
"306 372 CURVE SMOOTH",
"374.667 424.667 OFFCURVE",
"470 451 OFFCURVE",
"592 451 CURVE SMOOTH",
"689.333 451 OFFCURVE",
"777.333 440.667 OFFCURVE",
"856 418 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 81 values pushed */
170 7 164 31 170 46 3 38 7 37 31 59 4 116 19 119 26 118 27 128 20 133 26 146 20 149 26 171 7 160 20 164 26 174 47 181 7 188 14 177 20 180 26 185 30 203 14 244 49 21 10 1 25 1 42 1 3 154 17 148 26 2 123 46 138 46 155 46 170 14 171 46 197 49 213 49 229 49 8 40 34 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 26 values pushed */
37 47 33 37 37 34 33 34 40 18 29 19 23 41 54 33 0 54 41 1 3 51 12 9 44 54 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 90 values pushed */
1 136 40 0 10 51 33 3 11 9 33 0 44 16 44 112 44 3 44 41 59 12 12 40 20 156 16 33 29 7 51 33 3 11 13 0 32 32 33 64 13 22 63 15 33 1 47 33 63 33 79 33 95 33 159 33 175 33 191 33 223 33 8 33 26 56 23 143 48 33 6 64 13 22 63 111 6 159 6 191 6 223 6 4 6 25 55 42 187 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 8 values pushed */
7 -8 52 -16 53 -16 25 -12 
PUSHB[ ]\011/* 4 values pushed */
18 8 46 8 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 4 values pushed */
30 -16 19 -64 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"101 1255 LINE SMOOTH",
"61 1255 OFFCURVE",
"45 1237 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1187.667 OFFCURVE",
"61 1170 OFFCURVE",
"101 1170 CURVE SMOOTH",
"214 1170 LINE",
"214 84 LINE",
"101 84 LINE SMOOTH",
"61 84 OFFCURVE",
"45 67.333 OFFCURVE",
"45 42 CURVE SMOOTH",
"45 18 OFFCURVE",
"61 0 OFFCURVE",
"101 0 CURVE SMOOTH",
"298 0 LINE",
"298 165 LINE",
"396 33 OFFCURVE",
"518.333 -33 OFFCURVE",
"665 -33 CURVE SMOOTH",
"906.333 -33 OFFCURVE",
"1111 173.667 OFFCURVE",
"1111 435 CURVE SMOOTH",
"1111 693.667 OFFCURVE",
"910.333 896 OFFCURVE",
"665 896 CURVE SMOOTH",
"521.667 896 OFFCURVE",
"399.333 830 OFFCURVE",
"298 698 CURVE",
"298 1255 LINE"
);
},
{
closed = 1;
nodes = (
"1027 219 OFFCURVE",
"857.667 51 OFFCURVE",
"663 51 CURVE SMOOTH",
"468.333 51 OFFCURVE",
"299 219 OFFCURVE",
"299 431 CURVE SMOOTH",
"299 643 OFFCURVE",
"468.333 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"857.667 811 OFFCURVE",
"1027 643 OFFCURVE",
"1027 431 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
13 19 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
16 47 20 16 16 19 20 34 13 28 22 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 19 values pushed */
25 47 21 25 25 22 21 34 28 30 7 3 1 11 32 38 12 93 11 
PUSHW[ ]\011/* 1 value pushed */
355 
PUSHB[ ]\011/* 6 values pushed */
38 33 9 32 33 1 
PUSHW[ ]\011/* 1 value pushed */
355 
NPUSHB[ ]\011/* 42 values pushed */
3 28 0 0 3 7 9 11 29 33 15 6 223 6 2 6 26 42 35 84 0 12 32 21 20 64 15 9 63 15 20 111 20 223 20 3 20 25 41 94 142 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 84 values pushed */
106 9 1 48 11 48 36 71 40 86 40 100 40 169 34 165 36 183 1 185 11 188 30 182 39 196 5 203 8 212 4 220 8 228 5 234 8 17 22 4 49 1 50 5 61 11 67 1 79 11 73 30 86 1 85 5 93 7 93 11 100 1 102 5 108 11 117 2 123 10 123 30 121 31 137 30 186 31 189 34 181 37 22 1 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 3 values pushed */
11 16 40 
PUSHW[ ]\011/* 1 value pushed */
-22 
PUSHB[ ]\011/* 2 values pushed */
30 22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"877.667 857.667 OFFCURVE",
"769.667 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370.333 896 OFFCURVE",
"171 695.667 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 159.667 OFFCURVE",
"364.333 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"768.333 -33 OFFCURVE",
"889.333 2.667 OFFCURVE",
"998 74 CURVE SMOOTH",
"1065.333 118 OFFCURVE",
"1099 154.333 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1099 205.667 OFFCURVE",
"1081.667 223 OFFCURVE",
"1059 223 CURVE SMOOTH",
"1048.333 223 OFFCURVE",
"1036 216.333 OFFCURVE",
"1022 203 CURVE SMOOTH",
"912.667 96.333 OFFCURVE",
"769.667 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412.333 51 OFFCURVE",
"255 208.667 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627.333 OFFCURVE",
"386.667 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833.333 811 OFFCURVE",
"957 706.667 OFFCURVE",
"965 612 CURVE SMOOTH",
"967.667 576 OFFCURVE",
"984.333 562 OFFCURVE",
"1007 562 CURVE SMOOTH",
"1032.333 562 OFFCURVE",
"1048.667 577.667 OFFCURVE",
"1050 619 CURVE SMOOTH",
"1050 809 LINE SMOOTH",
"1050 850.333 OFFCURVE",
"1032.333 866 OFFCURVE",
"1007 866 CURVE SMOOTH",
"983 866 OFFCURVE",
"965 850.333 OFFCURVE",
"965 809 CURVE SMOOTH",
"965 781 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
33 10 11 15 63 21 
PUSHW[ ]\011/* 1 value pushed */
-10 
NPUSHB[ ]\011/* 44 values pushed */
11 15 63 199 21 220 37 217 39 224 31 224 33 235 37 234 39 7 36 21 39 22 68 32 77 37 77 39 85 32 93 37 90 39 106 15 106 25 105 37 137 25 12 22 
PUSHW[ ]\011/* 1 value pushed */
-14 
NPUSHB[ ]\011/* 115 values pushed */
19 20 89 19 86 21 107 37 102 39 246 26 5 6 26 25 16 21 26 41 16 41 18 37 26 138 16 155 16 150 24 149 26 165 21 165 25 12 22 35 38 18 17 15 25 20 27 1 0 3 8 14 25 28 23 15 13 0 3 17 11 0 136 17 33 41 7 11 179 4 6 28 162 23 33 35 11 14 59 8 89 160 31 1 144 31 192 31 2 31 26 44 20 33 38 64 15 9 63 160 38 1 15 38 31 38 144 38 3 38 25 43 196 142 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"829 1255 LINE SMOOTH",
"787.667 1255 OFFCURVE",
"772 1237 OFFCURVE",
"772 1213 CURVE SMOOTH",
"772 1187.667 OFFCURVE",
"787.667 1170 OFFCURVE",
"829 1170 CURVE SMOOTH",
"941 1170 LINE",
"941 696 LINE",
"841 829.333 OFFCURVE",
"717.667 896 OFFCURVE",
"571 896 CURVE SMOOTH",
"417.667 896 OFFCURVE",
"267.167 811.167 OFFCURVE",
"186.5 662.5 CURVE SMOOTH",
"146.167 588.167 OFFCURVE",
"126 511 OFFCURVE",
"126 431 CURVE SMOOTH",
"126 272.333 OFFCURVE",
"212.167 108.167 OFFCURVE",
"351.5 27.5 CURVE SMOOTH",
"421.167 -12.833 OFFCURVE",
"494 -33 OFFCURVE",
"570 -33 CURVE SMOOTH",
"720 -33 OFFCURVE",
"843.667 33.667 OFFCURVE",
"941 167 CURVE",
"941 0 LINE",
"1138 0 LINE SMOOTH",
"1179.333 0 OFFCURVE",
"1195 18 OFFCURVE",
"1195 42 CURVE SMOOTH",
"1195 67.333 OFFCURVE",
"1179.333 84 OFFCURVE",
"1138 84 CURVE SMOOTH",
"1026 84 LINE",
"1026 1255 LINE"
);
},
{
closed = 1;
nodes = (
"941 219 OFFCURVE",
"774.667 51 OFFCURVE",
"576 51 CURVE SMOOTH",
"376 51 OFFCURVE",
"210 219 OFFCURVE",
"210 431 CURVE SMOOTH",
"210 644.333 OFFCURVE",
"376 811 OFFCURVE",
"576 811 CURVE SMOOTH",
"774.667 811 OFFCURVE",
"941 644.333 OFFCURVE",
"941 431 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
73 42 104 42 2 8 2 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
0 5 1 5 47 1 5 5 2 1 34 8 30 24 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
27 47 23 27 27 24 23 34 30 10 22 34 40 9 93 10 
PUSHW[ ]\011/* 1 value pushed */
355 
PUSHB[ ]\011/* 4 values pushed */
40 33 12 22 
PUSHW[ ]\011/* 1 value pushed */
355 
NPUSHB[ ]\011/* 32 values pushed */
34 33 20 30 0 12 11 20 7 0 0 0 1 23 31 9 32 128 1 1 15 1 1 1 26 44 37 33 128 16 1 16 
PUSHW[ ]\011/* 1 value pushed */
396 
PUSHB[ ]\011/* 4 values pushed */
43 42 128 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 4 values pushed */
14 8 18 8 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
42 -20 
PUSHB[ ]\011/* 3 values pushed */
32 20 39 
PUSHW[ ]\011/* 3 values pushed */
-8 38 -25 
PUSHB[ ]\011/* 4 values pushed */
35 8 36 25 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1071.667 698.333 OFFCURVE",
"873.667 896 OFFCURVE",
"599 896 CURVE SMOOTH",
"332.333 896 OFFCURVE",
"128 695 OFFCURVE",
"128 451 CURVE SMOOTH",
"128 183 OFFCURVE",
"345 -33 OFFCURVE",
"633 -33 CURVE SMOOTH",
"805 -33 OFFCURVE",
"991 37.333 OFFCURVE",
"1055 104 CURVE SMOOTH",
"1065.667 114.667 OFFCURVE",
"1071 125.667 OFFCURVE",
"1071 137 CURVE SMOOTH",
"1071 159.667 OFFCURVE",
"1052.333 179 OFFCURVE",
"1031 179 CURVE SMOOTH",
"1021.667 179 OFFCURVE",
"1010.667 174 OFFCURVE",
"998 164 CURVE SMOOTH",
"911.333 96 OFFCURVE",
"758.333 51 OFFCURVE",
"633 51 CURVE SMOOTH",
"407.667 51 OFFCURVE",
"242.333 195.667 OFFCURVE",
"213 413 CURVE",
"1069 413 LINE"
);
},
{
closed = 1;
nodes = (
"214 498 LINE",
"248.667 686 OFFCURVE",
"403 811 OFFCURVE",
"599 811 CURVE SMOOTH",
"795 811 OFFCURVE",
"950.667 683.333 OFFCURVE",
"984 498 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 105 values pushed */
10 22 153 21 2 50 2 66 2 82 2 99 2 198 2 198 19 202 25 218 18 218 25 220 27 227 24 229 31 250 22 13 25 28 42 28 52 2 56 30 74 27 76 31 92 27 90 31 111 27 108 31 126 27 140 27 153 28 153 30 183 5 15 117 22 186 28 196 3 196 18 201 28 201 30 6 8 197 17 26 32 32 0 1 1 17 29 33 23 7 4 33 17 11 12 84 26 59 160 0 1 112 0 1 0 
PUSHW[ ]\011/* 1 value pushed */
485 
NPUSHB[ ]\011/* 23 values pushed */
34 32 59 1 59 160 20 1 111 20 191 20 207 20 223 20 4 20 25 33 42 172 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
22 20 6 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 5 values pushed */
27 20 31 30 2 
PUSHW[ ]\011/* 1 value pushed */
-20 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"952 781 LINE SMOOTH",
"992 781 OFFCURVE",
"1008 799 OFFCURVE",
"1008 823 CURVE SMOOTH",
"1008 848.333 OFFCURVE",
"992 866 OFFCURVE",
"952 866 CURVE SMOOTH",
"559 866 LINE",
"559 993 LINE SMOOTH",
"559 1085 OFFCURVE",
"641.333 1170 OFFCURVE",
"788 1170 CURVE SMOOTH",
"857.333 1170 OFFCURVE",
"942.333 1162.333 OFFCURVE",
"1043 1147 CURVE SMOOTH",
"1055.667 1145 OFFCURVE",
"1064.667 1144 OFFCURVE",
"1070 1144 CURVE SMOOTH",
"1096.667 1144 OFFCURVE",
"1114 1161 OFFCURVE",
"1114 1185 CURVE SMOOTH",
"1114 1197 OFFCURVE",
"1110.5 1206.667 OFFCURVE",
"1103.5 1214 CURVE SMOOTH",
"1096.5 1221.333 OFFCURVE",
"1076 1227.667 OFFCURVE",
"1042 1233 CURVE SMOOTH",
"952 1247.667 OFFCURVE",
"867.333 1255 OFFCURVE",
"788 1255 CURVE SMOOTH",
"598.667 1255 OFFCURVE",
"474 1134.333 OFFCURVE",
"474 993 CURVE SMOOTH",
"474 866 LINE",
"292 866 LINE SMOOTH",
"252 866 OFFCURVE",
"236 848 OFFCURVE",
"236 824 CURVE SMOOTH",
"236 798.667 OFFCURVE",
"252 781 OFFCURVE",
"292 781 CURVE SMOOTH",
"474 781 LINE",
"474 84 LINE",
"271 84 LINE SMOOTH",
"231 84 OFFCURVE",
"215 67.333 OFFCURVE",
"215 42 CURVE SMOOTH",
"215 18 OFFCURVE",
"231 0 OFFCURVE",
"271 0 CURVE SMOOTH",
"928 0 LINE SMOOTH",
"968 0 OFFCURVE",
"984 18 OFFCURVE",
"984 42 CURVE SMOOTH",
"984 67.333 OFFCURVE",
"968 84 OFFCURVE",
"928 84 CURVE SMOOTH",
"559 84 LINE",
"559 781 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
64 12 80 5 128 5 131 12 129 49 160 12 178 12 180 43 194 43 212 43 10 23 8 15 9 12 200 16 16 34 9 52 46 0 49 1 49 
PUSHW[ ]\011/* 1 value pushed */
516 
PUSHB[ ]\011/* 7 values pushed */
0 0 34 46 2 8 5 
PUSHW[ ]\011/* 1 value pushed */
320 
NPUSHB[ ]\011/* 26 values pushed */
1 1 34 8 36 40 34 0 37 93 41 33 29 0 0 18 32 25 46 45 24 6 9 8 10 34 
PUSHW[ ]\011/* 1 value pushed */
396 
NPUSHB[ ]\011/* 10 values pushed */
54 0 44 1 32 26 207 16 1 16 
PUSHW[ ]\011/* 1 value pushed */
405 
NPUSHB[ ]\011/* 13 values pushed */
47 21 64 21 112 21 208 21 4 21 25 53 117 
PUSHW[ ]\011/* 2 values pushed */
460 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
42 43 27 28 42 28 44 31 0 43 27 41 31 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"807 834.667 OFFCURVE",
"691 896 OFFCURVE",
"549 896 CURVE SMOOTH",
"318.333 896 OFFCURVE",
"125 700.333 OFFCURVE",
"125 459 CURVE SMOOTH",
"125 217.667 OFFCURVE",
"318.333 21 OFFCURVE",
"549 21 CURVE SMOOTH",
"691 21 OFFCURVE",
"807 82.667 OFFCURVE",
"897 206 CURVE",
"897 -46 LINE SMOOTH",
"897 -89.333 OFFCURVE",
"889.667 -125 OFFCURVE",
"875 -153 CURVE SMOOTH",
"823 -250.333 OFFCURVE",
"741.667 -302 OFFCURVE",
"643 -302 CURVE SMOOTH",
"402 -301 LINE SMOOTH",
"362 -301 OFFCURVE",
"346 -318.667 OFFCURVE",
"346 -344 CURVE SMOOTH",
"346 -369.333 OFFCURVE",
"362 -386 OFFCURVE",
"402 -386 CURVE SMOOTH",
"640 -386 LINE SMOOTH",
"742.667 -386 OFFCURVE",
"790.333 -361.667 OFFCURVE",
"865 -299 CURVE SMOOTH",
"902.333 -267.667 OFFCURVE",
"929 -237.333 OFFCURVE",
"945 -208 CURVE SMOOTH",
"969 -164 OFFCURVE",
"981 -114 OFFCURVE",
"981 -58 CURVE SMOOTH",
"981 781 LINE",
"1094 781 LINE SMOOTH",
"1134 781 OFFCURVE",
"1150 799 OFFCURVE",
"1150 823 CURVE SMOOTH",
"1150 848.333 OFFCURVE",
"1134 866 OFFCURVE",
"1094 866 CURVE SMOOTH",
"897 866 LINE",
"897 712 LINE"
);
},
{
closed = 1;
nodes = (
"897 261.667 OFFCURVE",
"741 106 OFFCURVE",
"553 106 CURVE SMOOTH",
"365 106 OFFCURVE",
"210 261.667 OFFCURVE",
"210 459 CURVE SMOOTH",
"210 655 OFFCURVE",
"365 811 OFFCURVE",
"553 811 CURVE SMOOTH",
"741 811 OFFCURVE",
"897 656.333 OFFCURVE",
"897 459 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
69 20 112 20 2 220 33 211 37 236 33 228 37 251 33 244 36 6 107 41 109 45 99 47 99 51 122 13 124 41 113 51 140 41 128 51 157 41 145 51 171 41 160 51 186 30 14 2 8 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 98 values pushed */
0 5 1 5 47 9 5 5 8 9 34 2 0 30 43 49 24 32 16 23 32 17 17 16 14 30 147 49 33 32 10 43 33 0 147 38 7 8 59 2 6 1 6 1 40 29 32 1 32 10 10 16 9 160 9 176 9 3 15 9 79 9 95 9 175 9 207 9 5 9 26 53 46 33 128 35 144 35 160 35 176 35 4 191 35 207 35 224 35 240 35 4 35 25 52 42 97 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 4 values pushed */
27 -12 26 -12 
PUSHB[ ]\011/* 3 values pushed */
42 8 50 
PUSHW[ ]\011/* 1 value pushed */
-8 
PUSHB[ ]\011/* 3 values pushed */
30 8 0 
PUSHW[ ]\011/* 1 value pushed */
-12 
PUSHB[ ]\011/* 3 values pushed */
44 8 48 
PUSHW[ ]\011/* 1 value pushed */
-12 
PUSHB[ ]\011/* 3 values pushed */
41 12 51 
PUSHW[ ]\011/* 1 value pushed */
-8 
PUSHB[ ]\011/* 3 values pushed */
45 22 47 
PUSHW[ ]\011/* 1 value pushed */
-22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1187.667 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67.333 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67.333 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695.333 OFFCURVE",
"461.667 745.667 OFFCURVE",
"493 767 CURVE SMOOTH",
"536.333 797 OFFCURVE",
"588.667 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720.333 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"762.667 84 OFFCURVE",
"747 67.333 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"762.667 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118.333 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67.333 OFFCURVE",
"1118.333 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710.333 OFFCURVE",
"913.833 815.5 OFFCURVE",
"822.5 861.5 CURVE SMOOTH",
"776.833 884.5 OFFCURVE",
"721.333 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"534.667 896 OFFCURVE",
"444.667 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
153 26 251 32 2 4 1 21 1 100 6 117 6 144 1 148 2 160 1 164 2 176 1 179 2 10 165 6 166 7 180 5 181 7 198 7 216 7 223 26 7 26 8 17 23 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
15 20 31 20 2 20 92 24 20 20 23 24 34 17 41 47 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
44 92 48 44 44 47 48 34 41 16 10 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
0 13 1 13 92 9 13 13 10 9 34 16 40 34 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
37 92 33 37 37 34 33 34 40 56 50 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 35 values pushed */
53 47 49 53 53 50 49 34 56 1 32 41 28 33 4 41 40 40 17 17 16 56 0 4 7 16 10 8 9 32 25 223 24 1 24 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 11 values pushed */
58 0 33 32 49 191 48 207 48 2 48 
PUSHW[ ]\011/* 1 value pushed */
491 
PUSHB[ ]\011/* 4 values pushed */
57 71 97 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
1 -64 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 1 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
17 26 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
26 27 5 7 6 37 27 5 25 31 1 26 7 28 31 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
6 -12 
PUSHB[ ]\011/* 6 values pushed */
32 12 31 20 30 22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"532 1297 LINE",
"532 1080 LINE",
"656 1080 LINE",
"656 1297 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"288.667 866 OFFCURVE",
"273 848.333 OFFCURVE",
"273 823 CURVE SMOOTH",
"273 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67.333 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030.333 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67.333 OFFCURVE",
"1030.333 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
34 25 50 25 64 25 82 25 99 25 116 25 132 25 7 19 13 16 88 20 20 34 13 6 12 9 88 5 5 34 12 22 28 25 149 21 21 34 28 3 197 2 
PUSHW[ ]\011/* 1 value pushed */
404 
PUSHB[ ]\011/* 7 values pushed */
28 6 13 12 10 0 1 
PUSHW[ ]\011/* 4 values pushed */
351 3 2 480 
NPUSHB[ ]\011/* 14 values pushed */
4 4 5 32 21 79 20 1 20 25 29 81 127 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"611 1297 LINE",
"611 1080 LINE",
"735 1080 LINE",
"735 1297 LINE"
);
},
{
closed = 1;
nodes = (
"740 -59 LINE SMOOTH",
"740 -196.333 OFFCURVE",
"643.667 -302 OFFCURVE",
"501 -302 CURVE SMOOTH",
"236 -301 LINE SMOOTH",
"196 -301 OFFCURVE",
"180 -318.667 OFFCURVE",
"180 -344 CURVE SMOOTH",
"180 -369.333 OFFCURVE",
"196 -386 OFFCURVE",
"236 -386 CURVE SMOOTH",
"503 -386 LINE SMOOTH",
"559 -386 OFFCURVE",
"607.333 -375.667 OFFCURVE",
"648 -355 CURVE SMOOTH",
"765.333 -295 OFFCURVE",
"824 -201.667 OFFCURVE",
"824 -59 CURVE SMOOTH",
"824 866 LINE",
"241 866 LINE SMOOTH",
"199.667 866 OFFCURVE",
"185 848 OFFCURVE",
"185 824 CURVE SMOOTH",
"185 798.667 OFFCURVE",
"201 781 OFFCURVE",
"241 781 CURVE SMOOTH",
"740 781 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
16 0 16 1 16 2 16 3 91 15 89 28 106 15 106 28 116 15 128 0 128 1 128 2 128 3 149 15 14 78 8 143 8 159 8 171 28 186 28 5 28 8 27 
PUSHW[ ]\011/* 3 values pushed */
-12 28 -12 
PUSHB[ ]\011/* 3 values pushed */
5 11 8 
PUSHW[ ]\011/* 1 value pushed */
429 
PUSHB[ ]\011/* 7 values pushed */
4 4 34 11 3 197 2 
PUSHW[ ]\011/* 1 value pushed */
404 
NPUSHB[ ]\011/* 14 values pushed */
11 6 26 84 25 32 18 19 14 22 147 30 0 1 
PUSHW[ ]\011/* 1 value pushed */
351 
NPUSHB[ ]\011/* 17 values pushed */
2 2 3 3 30 31 12 13 32 29 29 79 4 1 4 25 30 
PUSHW[ ]\011/* 3 values pushed */
437 465 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"540 455 LINE",
"901 84 LINE",
"842 84 LINE SMOOTH",
"802 84 OFFCURVE",
"786 67.333 OFFCURVE",
"786 42 CURVE SMOOTH",
"786 18 OFFCURVE",
"802 0 OFFCURVE",
"842 0 CURVE SMOOTH",
"1114 0 LINE SMOOTH",
"1155.333 0 OFFCURVE",
"1171 18 OFFCURVE",
"1171 42 CURVE SMOOTH",
"1171 67.333 OFFCURVE",
"1155.333 84 OFFCURVE",
"1114 84 CURVE SMOOTH",
"1017 84 LINE",
"602 507 LINE",
"930 781 LINE",
"1027 781 LINE SMOOTH",
"1068.333 781 OFFCURVE",
"1084 799 OFFCURVE",
"1084 823 CURVE SMOOTH",
"1084 848.333 OFFCURVE",
"1068.333 866 OFFCURVE",
"1027 866 CURVE SMOOTH",
"758 866 LINE SMOOTH",
"718 866 OFFCURVE",
"702 848.333 OFFCURVE",
"702 823 CURVE SMOOTH",
"702 799 OFFCURVE",
"718 781 OFFCURVE",
"758 781 CURVE SMOOTH",
"801 781 LINE",
"444 481 LINE",
"444 1255 LINE",
"247 1255 LINE SMOOTH",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1187.667 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"360 1170 LINE",
"360 84 LINE",
"247 84 LINE SMOOTH",
"207 84 OFFCURVE",
"191 67.333 OFFCURVE",
"191 42 CURVE SMOOTH",
"191 18 OFFCURVE",
"207 0 OFFCURVE",
"247 0 CURVE SMOOTH",
"444 0 LINE",
"444 374 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
41 -64 
PUSHB[ ]\011/* 4 values pushed */
22 13 63 41 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
20 12 63 41 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 79 values pushed */
18 11 63 103 19 166 19 2 196 52 1 42 20 42 37 46 41 42 52 40 53 57 36 63 37 61 41 63 52 106 20 106 35 11 102 19 1 35 19 54 19 2 43 20 79 41 217 37 217 52 236 37 236 52 251 37 251 52 8 58 37 58 52 106 36 106 53 171 20 171 35 6 36 53 35 35 0 2 8 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
5 47 9 5 5 8 9 34 2 28 34 
PUSHW[ ]\011/* 1 value pushed */
686 
PUSHB[ ]\011/* 5 values pushed */
0 31 1 31 31 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
12 16 63 31 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 16 values pushed */
11 15 63 31 92 35 31 31 34 35 34 28 35 0 45 51 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
48 48 70 52 48 48 51 52 34 45 52 53 17 11 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
14 47 10 14 14 11 10 34 17 27 21 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 19 values pushed */
15 24 31 24 2 24 24 153 20 24 24 21 20 34 27 20 19 44 38 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 71 values pushed */
41 41 92 37 41 41 38 37 34 44 37 36 37 36 36 32 53 52 20 53 53 52 35 20 19 18 19 32 0 35 20 0 0 35 0 19 53 36 20 5 35 1 34 59 28 28 21 59 27 6 38 59 44 51 59 45 45 44 44 2 11 59 18 17 0 8 59 1 2 10 20 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 9 values pushed */
111 35 1 35 154 37 36 85 53 
PUSHW[ ]\011/* 3 values pushed */
416 37 480 
NPUSHB[ ]\011/* 13 values pushed */
112 52 128 52 2 32 52 48 52 96 52 3 52 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 29 values pushed */
55 19 0 0 18 1 32 10 112 9 128 9 2 16 9 32 9 48 9 128 9 160 9 176 9 6 9 25 54 
PUSHW[ ]\011/* 4 values pushed */
413 128 24 356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[0]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
19 -44 
PUSHB[ ]\011/* 4 values pushed */
30 60 63 19 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
28 55 63 19 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
25 50 63 19 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
23 45 63 19 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 3 values pushed */
20 40 63 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
19 -32 
PUSHB[ ]\011/* 4 values pushed */
26 36 52 20 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
15 17 52 19 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
15 17 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
35 -20 
PUSHB[ ]\011/* 3 values pushed */
20 8 37 
PUSHW[ ]\011/* 3 values pushed */
-14 52 -10 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
80 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
35 -8 
PUSHB[ ]\011/* 4 values pushed */
37 25 52 32 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"331 1255 LINE SMOOTH",
"289.667 1255 OFFCURVE",
"274 1237 OFFCURVE",
"274 1213 CURVE SMOOTH",
"274 1187.667 OFFCURVE",
"291 1170 OFFCURVE",
"331 1170 CURVE SMOOTH",
"573 1170 LINE",
"573 84 LINE",
"243 84 LINE SMOOTH",
"203 84 OFFCURVE",
"187 67.333 OFFCURVE",
"187 42 CURVE SMOOTH",
"187 18 OFFCURVE",
"203 0 OFFCURVE",
"243 0 CURVE SMOOTH",
"987 0 LINE SMOOTH",
"1028.333 0 OFFCURVE",
"1044 18 OFFCURVE",
"1044 42 CURVE SMOOTH",
"1044 67.333 OFFCURVE",
"1028.333 84 OFFCURVE",
"987 84 CURVE SMOOTH",
"657 84 LINE",
"657 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
98 21 115 21 131 21 3 15 9 12 88 16 16 34 9 2 8 5 88 1 1 34 8 18 24 21 149 17 17 34 24 0 9 8 10 0 1 32 17 16 16 79 16 191 16 3 16 25 25 81 127 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"77 866 LINE SMOOTH",
"37 866 OFFCURVE",
"21 848 OFFCURVE",
"21 824 CURVE SMOOTH",
"21 798.667 OFFCURVE",
"37 781 OFFCURVE",
"77 781 CURVE SMOOTH",
"148 781 LINE",
"148 84 LINE",
"77 84 LINE SMOOTH",
"37 84 OFFCURVE",
"21 67.333 OFFCURVE",
"21 42 CURVE SMOOTH",
"21 18 OFFCURVE",
"37 0 OFFCURVE",
"77 0 CURVE SMOOTH",
"303 0 LINE SMOOTH",
"343 0 OFFCURVE",
"359 18 OFFCURVE",
"359 42 CURVE SMOOTH",
"359 67.333 OFFCURVE",
"343 84 OFFCURVE",
"303 84 CURVE SMOOTH",
"232 84 LINE",
"232 641 LINE",
"276.667 707.667 OFFCURVE",
"319.333 754.667 OFFCURVE",
"360 782 CURVE SMOOTH",
"389.333 801.333 OFFCURVE",
"419 811 OFFCURVE",
"449 811 CURVE SMOOTH",
"514.333 811 OFFCURVE",
"577 746.333 OFFCURVE",
"577 657 CURVE SMOOTH",
"577 0 LINE",
"732 0 LINE SMOOTH",
"772 0 OFFCURVE",
"788 18 OFFCURVE",
"788 42 CURVE SMOOTH",
"788 67.333 OFFCURVE",
"772 84 OFFCURVE",
"732 84 CURVE SMOOTH",
"662 84 LINE",
"662 641 LINE",
"705.333 708.333 OFFCURVE",
"744 753.5 OFFCURVE",
"778 776.5 CURVE SMOOTH",
"812 799.5 OFFCURVE",
"844.333 811 OFFCURVE",
"875 811 CURVE SMOOTH",
"943 811 OFFCURVE",
"1004 748.333 OFFCURVE",
"1004 663 CURVE SMOOTH",
"1004 0 LINE",
"1159 0 LINE SMOOTH",
"1199 0 OFFCURVE",
"1215 18 OFFCURVE",
"1215 42 CURVE SMOOTH",
"1215 67.333 OFFCURVE",
"1199 84 OFFCURVE",
"1159 84 CURVE SMOOTH",
"1088 84 LINE",
"1088 671 LINE SMOOTH",
"1088 731 OFFCURVE",
"1064.333 786.333 OFFCURVE",
"1017 837 CURVE SMOOTH",
"981 876.333 OFFCURVE",
"932.667 896 OFFCURVE",
"872 896 CURVE SMOOTH",
"794.667 896 OFFCURVE",
"717.667 850.333 OFFCURVE",
"643 757 CURVE",
"599 850.333 OFFCURVE",
"533.667 896 OFFCURVE",
"447 896 CURVE SMOOTH",
"375 896 OFFCURVE",
"303.333 857.667 OFFCURVE",
"232 781 CURVE",
"232 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
15 55 15 56 14 57 15 58 15 60 15 61 15 64 15 67 15 69 9 18 38 12 54 12 180 27 178 44 4 39 1 54 1 2 85 28 98 7 98 28 116 7 116 28 5 54 7 50 28 69 7 69 28 85 7 5 48 8 55 61 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
223 58 1 58 70 62 58 58 61 62 34 55 21 15 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 30 values pushed */
32 18 1 80 18 208 18 224 18 240 18 4 0 18 16 18 64 18 3 18 70 14 18 18 15 14 34 21 37 31 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
0 34 16 34 2 34 70 30 34 34 31 30 34 37 54 48 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
0 51 16 51 2 51 70 47 51 51 48 47 34 54 70 64 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 101 values pushed */
223 67 1 67 70 63 67 67 64 63 34 45 47 6 30 38 46 45 40 29 28 6 1 7 42 55 64 59 0 70 6 42 33 3 26 33 9 9 3 7 55 54 54 37 37 21 10 13 14 32 23 22 64 31 53 48 22 128 22 2 22 252 38 29 30 32 39 38 64 31 53 48 38 128 38 2 38 252 62 0 47 32 63 62 64 13 22 63 0 62 191 62 207 62 3 62 25 71 42 173 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
6 -64 
PUSHB[ ]\011/* 4 values pushed */
22 36 52 1 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 1 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
17 26 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 32 values pushed */
40 41 24 25 10 12 4 5 11 37 41 4 39 31 1 5 6 25 10 23 31 1 40 5 42 31 1 24 12 26 31 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
NPUSHW[ ]\011/* 10 values pushed */
10 -18 4 -18 7 -38 6 -38 1 -45 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
7 -64 
PUSHB[ ]\011/* 4 values pushed */
22 26 62 6 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
22 26 62 1 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
22 26 62 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"188 866 LINE SMOOTH",
"148 866 OFFCURVE",
"132 848 OFFCURVE",
"132 824 CURVE SMOOTH",
"132 798.667 OFFCURVE",
"148 781 OFFCURVE",
"188 781 CURVE SMOOTH",
"259 781 LINE",
"259 84 LINE",
"164 84 LINE SMOOTH",
"124 84 OFFCURVE",
"108 67.333 OFFCURVE",
"108 42 CURVE SMOOTH",
"108 18 OFFCURVE",
"124 0 OFFCURVE",
"164 0 CURVE SMOOTH",
"438 0 LINE SMOOTH",
"478 0 OFFCURVE",
"494 18 OFFCURVE",
"494 42 CURVE SMOOTH",
"494 67.333 OFFCURVE",
"478 84 OFFCURVE",
"438 84 CURVE SMOOTH",
"343 84 LINE",
"343 611 LINE",
"493.667 788.333 OFFCURVE",
"550.333 811 OFFCURVE",
"661 811 CURVE SMOOTH",
"806.333 811 OFFCURVE",
"900 717.667 OFFCURVE",
"900 599 CURVE SMOOTH",
"900 84 LINE",
"830 84 LINE SMOOTH",
"788.667 84 OFFCURVE",
"773 67.333 OFFCURVE",
"773 42 CURVE SMOOTH",
"773 18 OFFCURVE",
"788.667 0 OFFCURVE",
"830 0 CURVE SMOOTH",
"1055 0 LINE SMOOTH",
"1095 0 OFFCURVE",
"1111 18 OFFCURVE",
"1111 42 CURVE SMOOTH",
"1111 67.333 OFFCURVE",
"1095 84 OFFCURVE",
"1055 84 CURVE SMOOTH",
"984 84 LINE",
"984 613 LINE SMOOTH",
"984 710.333 OFFCURVE",
"911.667 815 OFFCURVE",
"837 855 CURVE SMOOTH",
"784.333 882.333 OFFCURVE",
"726 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"543.333 896 OFFCURVE",
"460.333 857.667 OFFCURVE",
"343 739 CURVE",
"343 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
213 6 213 8 2 196 6 196 8 2 163 8 178 6 178 8 3 113 7 128 7 2 99 7 100 8 100 27 3 155 27 165 6 2 123 31 179 1 180 2 3 28 31 106 31 2 0 1 4 2 2 30 8 18 24 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
15 21 31 21 2 21 70 25 21 21 24 25 34 18 41 47 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
44 92 48 44 44 47 48 34 41 17 11 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
0 14 1 14 70 10 14 14 11 10 34 17 40 34 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 16 values pushed */
0 37 16 37 2 37 92 33 37 37 34 33 34 40 56 50 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 13 values pushed */
53 70 49 53 53 50 49 34 50 59 56 6 1 
PUSHW[ ]\011/* 3 values pushed */
480 32 355 
NPUSHB[ ]\011/* 19 values pushed */
29 33 4 7 41 40 40 18 18 17 10 9 10 32 26 223 25 1 25 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 16 values pushed */
58 0 33 32 49 144 48 160 48 2 48 25 57 71 97 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
1 -64 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 1 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
17 26 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 20 values pushed */
27 28 5 8 7 8 6 8 2 6 28 5 26 31 1 27 8 29 31 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
31 20 1 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 2 values pushed */
27 20 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688.333 OFFCURVE",
"873.667 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"353.667 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176.333 OFFCURVE",
"353.667 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"873.667 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 221.667 OFFCURVE",
"827.333 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"400.667 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640.333 OFFCURVE",
"400.667 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827.333 811 OFFCURVE",
"999 641.667 OFFCURVE",
"999 431 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
18 22 4 22 20 23 22 3 201 1 201 11 213 2 219 5 221 7 213 11 6 107 7 105 17 2 101 2 101 4 105 8 105 10 106 13 108 17 101 19 102 23 8 21 33 3 15 33 9 3 11 9 7 12 33 0 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
15 25 63 0 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
14 23 63 0 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 13 values pushed */
21 53 176 0 1 16 0 48 0 96 0 3 0 
PUSHW[ ]\011/* 1 value pushed */
647 
NPUSHB[ ]\011/* 24 values pushed */
18 33 6 64 15 25 63 6 64 14 23 63 111 6 191 6 207 6 224 6 240 6 5 6 
PUSHW[ ]\011/* 1 value pushed */
482 
PUSHB[ ]\011/* 4 values pushed */
24 42 173 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 4 values pushed */
22 -12 20 -12 
PUSHB[ ]\011/* 5 values pushed */
16 20 14 20 23 
PUSHW[ ]\011/* 3 values pushed */
-30 19 -30 
PUSHB[ ]\011/* 4 values pushed */
13 30 17 30 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
22 20 16 27 63 20 20 16 27 63 17 
PUSHW[ ]\011/* 1 value pushed */
-10 
NPUSHB[ ]\011/* 19 values pushed */
15 30 63 11 20 15 30 63 8 10 15 30 63 7 10 15 30 63 17 
PUSHW[ ]\011/* 1 value pushed */
-20 
NPUSHB[ ]\011/* 29 values pushed */
18 11 63 7 20 11 18 63 11 20 11 18 63 22 20 17 23 62 20 20 17 23 62 19 20 15 20 63 17 
PUSHW[ ]\011/* 1 value pushed */
-60 
NPUSHB[ ]\011/* 18 values pushed */
15 20 63 10 10 12 16 63 8 10 12 16 63 2 3 15 31 60 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"101 866 LINE SMOOTH",
"61 866 OFFCURVE",
"45 848 OFFCURVE",
"45 824 CURVE SMOOTH",
"45 798.667 OFFCURVE",
"61 781 OFFCURVE",
"101 781 CURVE SMOOTH",
"214 781 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -318.667 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369.333 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -318.667 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 204 LINE",
"391.333 82 OFFCURVE",
"513 21 OFFCURVE",
"663 21 CURVE SMOOTH",
"915 21 OFFCURVE",
"1111 217.667 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 760.667 OFFCURVE",
"891 838 CURVE SMOOTH",
"821 876.667 OFFCURVE",
"744.667 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834.333 OFFCURVE",
"298 713 CURVE",
"298 866 LINE"
);
},
{
closed = 1;
nodes = (
"1026 264.333 OFFCURVE",
"864.333 106 OFFCURVE",
"663 106 CURVE SMOOTH",
"459 106 OFFCURVE",
"298 265.667 OFFCURVE",
"298 459 CURVE SMOOTH",
"298 651 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"865.667 811 OFFCURVE",
"1026 652.333 OFFCURVE",
"1026 459 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
49 10 15 57 39 10 15 57 53 45 81 1 85 2 93 13 100 1 101 2 101 6 107 13 116 1 123 42 114 46 11 195 6 192 10 217 7 217 9 218 39 217 49 230 6 229 10 8 25 3 44 3 123 7 140 3 153 3 172 3 6 22 28 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
25 47 29 25 25 28 29 34 22 21 15 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
18 200 14 18 18 15 14 34 21 37 31 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 65 values pushed */
34 47 30 34 34 31 30 34 37 1 13 41 47 15 59 21 28 59 22 22 21 14 47 33 11 10 41 33 1 147 4 7 0 31 59 37 6 38 33 15 8 1 8 26 51 44 0 14 32 30 15 29 79 29 95 29 111 29 4 29 25 50 94 142 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
40 12 48 
PUSHW[ ]\011/* 3 values pushed */
-12 45 -12 
PUSHB[ ]\011/* 5 values pushed */
43 12 13 32 1 
PUSHW[ ]\011/* 3 values pushed */
-30 49 -35 
PUSHB[ ]\011/* 2 values pushed */
39 35 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"847.333 835 OFFCURVE",
"726.333 896 OFFCURVE",
"577 896 CURVE SMOOTH",
"323.667 896 OFFCURVE",
"128 701.667 OFFCURVE",
"128 459 CURVE SMOOTH",
"128 217.667 OFFCURVE",
"324.333 21 OFFCURVE",
"575 21 CURVE SMOOTH",
"725.667 21 OFFCURVE",
"847.333 82 OFFCURVE",
"940 204 CURVE",
"940 -302 LINE",
"737 -302 LINE SMOOTH",
"697 -302 OFFCURVE",
"681 -318.667 OFFCURVE",
"681 -344 CURVE SMOOTH",
"681 -369.333 OFFCURVE",
"697 -386 OFFCURVE",
"737 -386 CURVE SMOOTH",
"1137 -386 LINE SMOOTH",
"1178.333 -386 OFFCURVE",
"1194 -368 OFFCURVE",
"1194 -344 CURVE SMOOTH",
"1194 -318.667 OFFCURVE",
"1178.333 -302 OFFCURVE",
"1137 -302 CURVE SMOOTH",
"1025 -302 LINE",
"1025 781 LINE",
"1137 781 LINE SMOOTH",
"1178.333 781 OFFCURVE",
"1194 799 OFFCURVE",
"1194 823 CURVE SMOOTH",
"1194 848.333 OFFCURVE",
"1178.333 866 OFFCURVE",
"1137 866 CURVE SMOOTH",
"940 866 LINE",
"940 713 LINE"
);
},
{
closed = 1;
nodes = (
"940 265.667 OFFCURVE",
"778.667 106 OFFCURVE",
"576 106 CURVE SMOOTH",
"373.333 106 OFFCURVE",
"212 265.667 OFFCURVE",
"212 459 CURVE SMOOTH",
"212 652.333 OFFCURVE",
"373.333 811 OFFCURVE",
"576 811 CURVE SMOOTH",
"778.667 811 OFFCURVE",
"940 652.333 OFFCURVE",
"940 459 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
43 -10 
PUSHB[ ]\011/* 3 values pushed */
15 57 41 
PUSHW[ ]\011/* 1 value pushed */
-10 
NPUSHB[ ]\011/* 56 values pushed */
15 57 174 0 167 27 174 37 3 82 0 95 26 100 0 110 26 106 33 115 0 124 26 118 46 131 0 141 26 134 46 153 38 156 44 151 46 169 38 172 44 166 46 17 164 35 1 155 41 171 32 171 41 3 2 8 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
0 5 1 5 47 9 5 5 8 9 34 2 18 24 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
21 200 25 21 21 24 25 34 18 17 11 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 82 values pushed */
0 14 1 14 47 10 14 14 11 10 34 17 0 26 39 45 24 59 18 11 59 18 17 14 45 33 28 10 9 8 59 2 6 39 33 0 147 34 7 36 1 25 9 25 32 128 10 1 15 10 224 10 240 10 3 10 26 49 42 33 128 31 144 31 160 31 176 31 4 207 31 224 31 240 31 3 31 25 48 42 128 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
26 20 0 
PUSHW[ ]\011/* 3 values pushed */
-20 47 -20 
PUSHB[ ]\011/* 3 values pushed */
37 20 44 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 3 values pushed */
40 20 43 
PUSHW[ ]\011/* 1 value pushed */
-35 
PUSHB[ ]\011/* 2 values pushed */
41 35 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"275 866 LINE SMOOTH",
"233.667 866 OFFCURVE",
"219 848 OFFCURVE",
"219 824 CURVE SMOOTH",
"219 798.667 OFFCURVE",
"235 781 OFFCURVE",
"275 781 CURVE SMOOTH",
"430 781 LINE",
"430 81 LINE",
"227 81 LINE SMOOTH",
"185.667 81 OFFCURVE",
"171 63.667 OFFCURVE",
"171 41 CURVE SMOOTH",
"171 17 OFFCURVE",
"187 0 OFFCURVE",
"227 0 CURVE SMOOTH",
"886 0 LINE SMOOTH",
"927.333 0 OFFCURVE",
"943 18 OFFCURVE",
"943 42 CURVE SMOOTH",
"943 67.333 OFFCURVE",
"927.333 84 OFFCURVE",
"886 84 CURVE SMOOTH",
"514 84 LINE",
"514 544 LINE",
"641.333 658 OFFCURVE",
"730.833 729.667 OFFCURVE",
"782.5 759 CURVE SMOOTH",
"834.167 788.333 OFFCURVE",
"878.333 803 OFFCURVE",
"915 803 CURVE SMOOTH",
"948.333 803 OFFCURVE",
"980.333 788.667 OFFCURVE",
"1027 742 CURVE SMOOTH",
"1039.667 729.333 OFFCURVE",
"1048.333 721.833 OFFCURVE",
"1053 719.5 CURVE SMOOTH",
"1057.667 717.167 OFFCURVE",
"1063.333 716 OFFCURVE",
"1070 716 CURVE SMOOTH",
"1095.333 716 OFFCURVE",
"1114 734.667 OFFCURVE",
"1114 760 CURVE SMOOTH",
"1114 794.667 OFFCURVE",
"1010 887 OFFCURVE",
"910 887 CURVE SMOOTH",
"864 887 OFFCURVE",
"813.833 872.833 OFFCURVE",
"759.5 844.5 CURVE SMOOTH",
"705.167 816.167 OFFCURVE",
"623.333 752.667 OFFCURVE",
"514 654 CURVE",
"514 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
124 14 1 44 9 79 10 106 18 121 18 137 18 150 6 157 19 7 28 34 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
31 200 35 31 31 34 35 34 28 27 21 
PUSHW[ ]\011/* 3 values pushed */
686 24 320 
NPUSHB[ ]\011/* 9 values pushed */
20 24 24 21 20 34 27 43 37 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 79 values pushed */
40 78 36 40 40 37 36 34 43 11 14 20 12 11 10 9 8 5 7 13 1 19 0 20 14 16 10 36 37 59 0 43 6 10 63 16 33 4 7 21 59 27 34 59 28 28 27 10 15 7 240 7 2 7 26 45 0 20 32 36 15 35 80 35 128 35 144 35 160 35 240 35 6 35 25 44 253 142 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
1 -64 
PUSHB[ ]\011/* 4 values pushed */
27 36 52 1 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 3 values pushed */
17 26 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
19 20 14 22 18 28 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"819.333 867.667 OFFCURVE",
"725 896 OFFCURVE",
"609 896 CURVE SMOOTH",
"413 896 OFFCURVE",
"250 805 OFFCURVE",
"250 661 CURVE SMOOTH",
"250 581 OFFCURVE",
"303.333 505.667 OFFCURVE",
"394 471 CURVE SMOOTH",
"518.327 423.463 OFFCURVE",
"727.416 440.274 OFFCURVE",
"857 366 CURVE SMOOTH",
"911 334.667 OFFCURVE",
"938 293 OFFCURVE",
"938 241 CURVE SMOOTH",
"938 150.333 OFFCURVE",
"832.667 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"466 51 OFFCURVE",
"361.667 98 OFFCURVE",
"315 162 CURVE SMOOTH",
"299.667 182.667 OFFCURVE",
"292 208.333 OFFCURVE",
"292 239 CURVE SMOOTH",
"292 267 OFFCURVE",
"273 285 OFFCURVE",
"249 285 CURVE SMOOTH",
"223.667 285 OFFCURVE",
"207 269 OFFCURVE",
"207 229 CURVE SMOOTH",
"207 56 LINE SMOOTH",
"207 16 OFFCURVE",
"225 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"284.35 0 OFFCURVE",
"291 24.052 OFFCURVE",
"291 68 CURVE",
"375.667 0.667 OFFCURVE",
"484.333 -33 OFFCURVE",
"617 -33 CURVE SMOOTH",
"882.333 -33 OFFCURVE",
"1022 98.333 OFFCURVE",
"1022 241 CURVE SMOOTH",
"1022 337 OFFCURVE",
"959.333 425.333 OFFCURVE",
"830 472 CURVE SMOOTH",
"784.667 488 OFFCURVE",
"703.667 502.333 OFFCURVE",
"587 515 CURVE SMOOTH",
"497.667 525 OFFCURVE",
"437 539.333 OFFCURVE",
"405 558 CURVE SMOOTH",
"358.333 584.667 OFFCURVE",
"335 618 OFFCURVE",
"335 658 CURVE SMOOTH",
"335 693.333 OFFCURVE",
"354.667 725.333 OFFCURVE",
"394 754 CURVE SMOOTH",
"446 792 OFFCURVE",
"519 811 OFFCURVE",
"613 811 CURVE SMOOTH",
"703 811 OFFCURVE",
"775.333 792.333 OFFCURVE",
"830 755 CURVE SMOOTH",
"867.333 729 OFFCURVE",
"888 696 OFFCURVE",
"892 656 CURVE SMOOTH",
"894.667 622.667 OFFCURVE",
"911.333 609 OFFCURVE",
"934 609 CURVE SMOOTH",
"959.333 609 OFFCURVE",
"977 625 OFFCURVE",
"977 665 CURVE SMOOTH",
"977 809 LINE SMOOTH",
"977 850.333 OFFCURVE",
"959.333 866 OFFCURVE",
"934 866 CURVE SMOOTH",
"910 866 OFFCURVE",
"892 849.667 OFFCURVE",
"892 811 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 136 values pushed */
20 63 28 65 2 18 76 0 89 0 105 68 172 32 172 55 161 56 204 19 201 66 222 19 214 22 214 62 219 66 235 19 228 52 232 66 252 19 244 52 248 66 18 11 19 6 22 5 62 9 66 31 19 21 22 21 62 27 66 139 34 149 52 187 15 11 87 19 90 56 105 56 106 59 122 56 126 59 137 56 137 59 165 20 178 20 10 142 59 181 31 2 81 8 43 41 35 38 49 64 61 60 52 26 24 15 14 7 21 12 57 0 52 50 48 35 4 46 54 15 14 12 3 10 0 3 17 25 59 61 61 33 17 33 67 10 
PUSHW[ ]\011/* 1 value pushed */
309 
PUSHB[ ]\011/* 5 values pushed */
3 32 46 1 46 
PUSHW[ ]\011/* 1 value pushed */
406 
NPUSHB[ ]\011/* 28 values pushed */
38 54 33 33 0 59 7 85 57 33 79 30 95 30 111 30 3 30 26 70 49 84 35 59 41 21 33 64 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 22 values pushed */
15 25 63 64 89 111 41 1 41 25 69 67 7 3 6 38 10 33 11 94 128 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 56 values pushed */
55 66 18 32 28 37 19 37 23 62 21 31 0 59 27 57 31 1 55 32 57 31 1 18 66 21 31 0 22 63 24 31 0 23 24 62 61 58 29 60 31 1 27 26 59 60 56 31 54 31 0 20 65 17 31 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
17 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 5 values pushed */
59 20 52 10 28 
PUSHW[ ]\011/* 5 values pushed */
-25 23 -20 68 -20 
PUSHB[ ]\011/* 3 values pushed */
62 20 55 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 4 values pushed */
34 22 60 28 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
56 -20 
NPUSHB[ ]\011/* 9 values pushed */
13 22 63 59 20 13 22 63 56 
PUSHW[ ]\011/* 1 value pushed */
-20 
NPUSHB[ ]\011/* 24 values pushed */
16 21 63 59 20 16 21 63 68 20 15 20 63 68 20 12 16 63 68 20 11 15 63 28 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 4 values pushed */
15 25 63 56 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 8 values pushed */
15 25 63 0 20 15 25 63 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"442 1114 LINE SMOOTH",
"442 1154 OFFCURVE",
"424.333 1170 OFFCURVE",
"399 1170 CURVE SMOOTH",
"375 1170 OFFCURVE",
"357 1154 OFFCURVE",
"357 1114 CURVE SMOOTH",
"357 866 LINE",
"202 866 LINE SMOOTH",
"162 866 OFFCURVE",
"146 848 OFFCURVE",
"146 824 CURVE SMOOTH",
"146 798.667 OFFCURVE",
"162 781 OFFCURVE",
"202 781 CURVE SMOOTH",
"357 781 LINE",
"357 222 LINE SMOOTH",
"357 66 OFFCURVE",
"482 -33 OFFCURVE",
"678 -33 CURVE SMOOTH",
"828.667 -33 OFFCURVE",
"1027.333 33 OFFCURVE",
"1070 77 CURVE SMOOTH",
"1078.667 85.667 OFFCURVE",
"1083 95 OFFCURVE",
"1083 105 CURVE SMOOTH",
"1083 127.667 OFFCURVE",
"1064.333 147 OFFCURVE",
"1043 147 CURVE SMOOTH",
"1034.333 147 OFFCURVE",
"1023.333 142.667 OFFCURVE",
"1010 134 CURVE",
"936.667 91.333 OFFCURVE",
"785.333 51 OFFCURVE",
"672 51 CURVE SMOOTH",
"521.333 51 OFFCURVE",
"442 124.667 OFFCURVE",
"442 222 CURVE SMOOTH",
"442 781 LINE",
"898 781 LINE SMOOTH",
"938 781 OFFCURVE",
"954 799 OFFCURVE",
"954 823 CURVE SMOOTH",
"954 848.333 OFFCURVE",
"938 866 OFFCURVE",
"898 866 CURVE SMOOTH",
"442 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
251 27 1 13 27 26 27 2 164 10 181 10 194 10 211 10 228 10 5 118 14 134 14 149 14 166 14 198 11 214 11 6 23 8 1 7 
PUSHW[ ]\011/* 3 values pushed */
686 4 370 
NPUSHB[ ]\011/* 21 values pushed */
8 4 4 7 8 34 1 16 20 9 21 17 15 16 17 18 20 5 25 12 41 
PUSHW[ ]\011/* 1 value pushed */
419 
NPUSHB[ ]\011/* 17 values pushed */
30 59 36 36 7 59 1 1 0 6 12 33 25 11 20 136 4 
PUSHW[ ]\011/* 1 value pushed */
425 
NPUSHB[ ]\011/* 20 values pushed */
44 44 8 9 32 38 33 198 0 28 16 28 32 28 112 28 191 28 5 28 
PUSHW[ ]\011/* 1 value pushed */
741 
PUSHB[ ]\011/* 4 values pushed */
45 42 173 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
26 27 10 11 11 26 9 31 0 10 27 12 31 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1057 0 LINE SMOOTH",
"1097 0 OFFCURVE",
"1113 18 OFFCURVE",
"1113 42 CURVE SMOOTH",
"1113 67.333 OFFCURVE",
"1097 84 OFFCURVE",
"1057 84 CURVE SMOOTH",
"986 84 LINE",
"986 866 LINE",
"747 866 LINE SMOOTH",
"707 866 OFFCURVE",
"691 848 OFFCURVE",
"691 824 CURVE SMOOTH",
"691 798.667 OFFCURVE",
"707 781 OFFCURVE",
"747 781 CURVE SMOOTH",
"902 781 LINE",
"902 239 LINE",
"788 113.667 OFFCURVE",
"662.667 51 OFFCURVE",
"526 51 CURVE SMOOTH",
"422 51 OFFCURVE",
"344 129.667 OFFCURVE",
"344 239 CURVE SMOOTH",
"344 866 LINE",
"147 866 LINE SMOOTH",
"107 866 OFFCURVE",
"91 848 OFFCURVE",
"91 824 CURVE SMOOTH",
"91 798.667 OFFCURVE",
"107 781 OFFCURVE",
"147 781 CURVE SMOOTH",
"260 781 LINE",
"260 239 LINE SMOOTH",
"260 161 OFFCURVE",
"287.667 92.667 OFFCURVE",
"343 34 CURVE SMOOTH",
"385.667 -10.667 OFFCURVE",
"448 -33 OFFCURVE",
"530 -33 CURVE SMOOTH",
"663.333 -33 OFFCURVE",
"787.333 19 OFFCURVE",
"902 123 CURVE",
"902 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
10 4 181 22 2 40 22 1 26 8 15 9 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
12 47 8 12 12 9 8 34 15 30 24 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
27 78 23 27 27 24 23 34 30 39 33 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 45 values pushed */
0 36 1 36 70 32 36 36 33 32 34 39 1 22 15 20 32 33 59 0 39 10 23 24 59 31 30 30 15 8 9 59 16 15 6 20 33 3 11 32 32 0 0 23 22 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 9 values pushed */
41 16 17 32 8 207 7 1 7 
PUSHW[ ]\011/* 1 value pushed */
491 
PUSHB[ ]\011/* 4 values pushed */
40 71 97 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 10 values pushed */
1 64 27 36 52 1 32 17 26 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 16 values pushed */
18 19 4 6 5 37 19 4 17 31 0 18 6 20 31 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
19 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 6 values pushed */
21 -20 22 -30 18 -30 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1029 781 LINE",
"1114 781 LINE SMOOTH",
"1155.333 781 OFFCURVE",
"1170 799 OFFCURVE",
"1170 823 CURVE SMOOTH",
"1170 848.333 OFFCURVE",
"1155.333 866 OFFCURVE",
"1114 866 CURVE SMOOTH",
"798 866 LINE SMOOTH",
"758 866 OFFCURVE",
"742 848 OFFCURVE",
"742 824 CURVE SMOOTH",
"742 798.667 OFFCURVE",
"758 781 OFFCURVE",
"798 781 CURVE SMOOTH",
"938 781 LINE",
"636 84 LINE",
"599 84 LINE",
"291 781 LINE",
"430 781 LINE SMOOTH",
"470 781 OFFCURVE",
"486 799 OFFCURVE",
"486 823 CURVE SMOOTH",
"486 848.333 OFFCURVE",
"470 866 OFFCURVE",
"430 866 CURVE SMOOTH",
"115 866 LINE SMOOTH",
"75 866 OFFCURVE",
"59 848 OFFCURVE",
"59 824 CURVE SMOOTH",
"59 798.667 OFFCURVE",
"75 781 OFFCURVE",
"115 781 CURVE SMOOTH",
"201 781 LINE",
"546 0 LINE",
"688 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
171 1 171 18 172 19 3 32 10 32 11 32 12 32 13 32 14 32 15 32 16 58 0 59 1 56 18 58 19 102 2 103 17 105 20 105 35 175 1 171 18 170 19 18 64 31 1 10 16 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 21 values pushed */
13 0 13 16 13 47 13 3 13 78 17 13 13 16 17 34 10 17 18 28 34 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 17 values pushed */
31 0 31 1 31 92 35 31 31 34 35 34 28 35 0 9 3 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
6 6 92 2 6 6 3 2 34 9 2 1 27 21 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 63 values pushed */
24 15 24 31 24 2 24 78 20 24 24 21 20 34 27 20 19 17 2 1 1 32 18 17 20 18 18 17 20 35 0 0 32 19 20 20 19 19 20 19 18 1 0 10 34 59 28 28 21 59 27 27 16 59 10 3 59 10 9 6 35 59 20 
PUSHW[ ]\011/* 1 value pushed */
362 
NPUSHB[ ]\011/* 11 values pushed */
19 2 59 47 17 63 17 175 17 3 17 
PUSHW[ ]\011/* 3 values pushed */
362 19 265 
NPUSHB[ ]\011/* 13 values pushed */
64 18 1 48 18 111 18 160 18 208 18 4 18 
PUSHW[ ]\011/* 6 values pushed */
431 36 293 289 24 356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[00110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1075 781 LINE",
"1115 781 LINE SMOOTH",
"1156.333 781 OFFCURVE",
"1172 799 OFFCURVE",
"1172 823 CURVE SMOOTH",
"1172 848.333 OFFCURVE",
"1156.333 866 OFFCURVE",
"1115 866 CURVE SMOOTH",
"885 866 LINE SMOOTH",
"843.667 866 OFFCURVE",
"828 848 OFFCURVE",
"828 824 CURVE SMOOTH",
"828 798.667 OFFCURVE",
"845 781 OFFCURVE",
"885 781 CURVE SMOOTH",
"991 781 LINE",
"848 115 LINE",
"664 647 LINE",
"564 647 LINE",
"385 115 LINE",
"236 781 LINE",
"343 781 LINE SMOOTH",
"383 781 OFFCURVE",
"399 799 OFFCURVE",
"399 823 CURVE SMOOTH",
"399 848.333 OFFCURVE",
"383 866 OFFCURVE",
"343 866 CURVE SMOOTH",
"112 866 LINE SMOOTH",
"72 866 OFFCURVE",
"56 848 OFFCURVE",
"56 824 CURVE SMOOTH",
"56 798.667 OFFCURVE",
"72 781 OFFCURVE",
"112 781 CURVE SMOOTH",
"153 781 LINE",
"327 0 LINE",
"431 -1 LINE",
"615 539 LINE",
"800 -1 LINE",
"904 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 165 values pushed */
40 22 39 23 134 3 170 22 165 23 184 2 185 22 180 23 8 0 2 16 2 127 22 143 22 175 22 190 22 223 22 254 22 8 160 2 176 2 207 2 3 8 4 8 21 24 4 24 21 40 2 41 4 40 21 39 23 56 4 56 21 72 4 72 21 87 4 87 20 88 21 88 25 88 40 102 1 107 4 104 21 103 23 103 25 103 40 123 4 120 21 152 22 150 23 166 2 171 4 168 21 160 23 181 2 187 4 184 21 176 23 183 25 183 40 201 22 199 23 219 22 212 23 233 22 228 23 43 11 22 27 22 43 2 43 22 43 23 135 25 135 40 172 22 187 22 198 5 198 20 220 22 232 1 232 23 248 2 251 22 248 23 17 13 19 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
16 16 47 20 16 16 19 20 34 13 20 21 33 39 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 44 values pushed */
112 36 1 0 36 32 36 64 36 3 240 36 1 0 36 160 36 208 36 3 112 36 128 36 2 16 36 80 36 2 36 36 153 40 36 36 39 40 34 33 40 0 12 6 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 41 values pushed */
95 9 127 9 143 9 3 15 9 31 9 79 9 3 239 9 1 175 9 191 9 223 9 3 15 9 1 9 9 153 5 9 9 6 5 34 12 5 4 32 26 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 17 values pushed */
29 29 47 25 29 29 26 25 34 32 25 24 149 2 22 23 32 
PUSHW[ ]\011/* 1 value pushed */
-182 
NPUSHB[ ]\011/* 50 values pushed */
21 4 3 32 20 5 4 4 32 21 20 20 21 21 20 40 0 0 32 24 25 20 24 24 25 2 1 2 3 1 32 24 23 20 24 24 23 2 3 2 1 3 32 21 22 20 21 21 22 2 
PUSHW[ ]\011/* 8 values pushed */
480 23 372 24 480 1 21 480 
NPUSHB[ ]\011/* 35 values pushed */
4 0 84 1 1 3 84 4 10 39 59 33 26 59 32 19 59 13 6 59 12 33 32 32 13 13 12 6 111 24 1 24 195 25 1 
PUSHW[ ]\011/* 1 value pushed */
396 
NPUSHB[ ]\011/* 38 values pushed */
0 147 25 64 48 53 25 64 40 43 52 25 64 37 39 52 25 64 29 30 52 25 64 25 26 52 25 64 15 17 52 25 59 64 96 40 1 40 
PUSHW[ ]\011/* 4 values pushed */
423 2 23 395 
NPUSHB[ ]\011/* 23 values pushed */
22 85 2 64 49 57 52 2 64 29 30 52 2 64 25 26 52 2 64 16 17 52 2 
PUSHW[ ]\011/* 1 value pushed */
423 
NPUSHB[ ]\011/* 13 values pushed */
5 32 96 21 1 21 195 20 4 147 20 59 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
48 53 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
56 57 52 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 3 values pushed */
43 53 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
37 39 52 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
29 30 52 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
16 17 52 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 26 52 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 18 values pushed */
22 23 52 5 64 21 53 127 5 143 5 2 0 5 79 5 2 5 
PUSHW[ ]\011/* 6 values pushed */
482 41 293 289 24 356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[11101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
40 8 25 8 4 16 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */";
};
width = 1229;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1015 781 LINE",
"1059.252 781 OFFCURVE",
"1085 788.299 OFFCURVE",
"1085 823 CURVE SMOOTH",
"1085 848.333 OFFCURVE",
"1069 866 OFFCURVE",
"1029 866 CURVE SMOOTH",
"800 866 LINE SMOOTH",
"758.667 866 OFFCURVE",
"743 848 OFFCURVE",
"743 824 CURVE SMOOTH",
"743 798.667 OFFCURVE",
"760 781 OFFCURVE",
"800 781 CURVE SMOOTH",
"900 781 LINE",
"615 508 LINE",
"332 781 LINE",
"432 781 LINE SMOOTH",
"473.333 781 OFFCURVE",
"488 799 OFFCURVE",
"488 823 CURVE SMOOTH",
"488 848.333 OFFCURVE",
"473.333 866 OFFCURVE",
"432 866 CURVE SMOOTH",
"203 866 LINE SMOOTH",
"161.667 866 OFFCURVE",
"146 848 OFFCURVE",
"146 824 CURVE SMOOTH",
"146 787.793 OFFCURVE",
"171.553 781 OFFCURVE",
"216 781 CURVE",
"558 453 LINE",
"173 84 LINE",
"126.743 84 OFFCURVE",
"101 78.968 OFFCURVE",
"101 42 CURVE SMOOTH",
"101 18 OFFCURVE",
"117 0 OFFCURVE",
"157 0 CURVE SMOOTH",
"430 0 LINE SMOOTH",
"470 0 OFFCURVE",
"486 18 OFFCURVE",
"486 42 CURVE SMOOTH",
"486 67.333 OFFCURVE",
"470 84 OFFCURVE",
"430 84 CURVE SMOOTH",
"290 84 LINE",
"615 397 LINE",
"942 84 LINE",
"803 84 LINE SMOOTH",
"761.667 84 OFFCURVE",
"746 67.333 OFFCURVE",
"746 42 CURVE SMOOTH",
"746 18 OFFCURVE",
"761.667 0 OFFCURVE",
"803 0 CURVE SMOOTH",
"1073 0 LINE SMOOTH",
"1114.333 0 OFFCURVE",
"1130 18 OFFCURVE",
"1130 42 CURVE SMOOTH",
"1130 79.172 OFFCURVE",
"1104.29 84 OFFCURVE",
"1057 84 CURVE",
"672 453 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 149 values pushed */
31 17 31 18 2 18 56 17 87 17 2 27 0 1 16 0 31 34 96 1 109 18 111 33 111 35 96 67 195 1 195 16 206 18 206 33 204 35 204 50 194 52 194 67 15 8 0 24 0 152 34 3 0 50 1 18 67 17 18 67 35 16 34 35 16 33 52 51 50 1 33 52 50 35 16 18 16 32 1 50 20 1 1 50 52 67 18 18 18 32 33 52 20 33 33 52 2 59 1 59 15 59 16 59 10 19 59 18 59 33 59 32 59 26 49 59 50 59 36 59 35 59 42 66 59 67 59 53 59 52 59 59 64 67 67 63 56 56 63 35 35 39 46 46 39 63 89 5 52 
PUSHW[ ]\011/* 1 value pushed */
302 
PUSHB[ ]\011/* 5 values pushed */
32 67 154 63 16 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 27 values pushed */
1 1 5 12 33 33 22 12 12 5 0 22 1 22 22 29 1 154 15 5 111 5 2 5 26 69 50 
PUSHW[ ]\011/* 1 value pushed */
480 
PUSHB[ ]\011/* 4 values pushed */
35 154 39 18 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 27 values pushed */
33 154 39 89 15 29 47 29 79 29 95 29 111 29 5 29 25 68 10 10 26 10 42 6 59 6 230 
PUSHW[ ]\011/* 3 values pushed */
263 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SFVTCA[1]\011/* SetFVectorToAxis */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
18 -54 
PUSHB[ ]\011/* 4 values pushed */
25 50 63 18 
PUSHW[ ]\011/* 1 value pushed */
-44 
PUSHB[ ]\011/* 4 values pushed */
23 45 63 18 
PUSHW[ ]\011/* 1 value pushed */
-84 
PUSHB[ ]\011/* 4 values pushed */
20 40 63 18 
PUSHW[ ]\011/* 1 value pushed */
-10 
PUSHB[ ]\011/* 4 values pushed */
18 35 63 18 
PUSHW[ ]\011/* 1 value pushed */
-30 
PUSHB[ ]\011/* 4 values pushed */
14 23 63 18 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 3 values pushed */
27 60 62 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
16 54 25 50 63 16 44 23 45 63 16 64 20 40 63 16 10 18 35 63 16 30 14 23 63 16 30 13 22 63 16 34 27 60 62 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
PUSHB[ ]\011/* 2 values pushed */
6 2 
RS[ ]\011/* ReadStore */
EQ[ ]\011/* Equal */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
17 24 13 15 52 51 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 3 values pushed */
13 15 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
51 -30 
NPUSHB[ ]\011/* 9 values pushed */
18 11 63 17 30 11 18 63 51 
PUSHW[ ]\011/* 1 value pushed */
-30 
NPUSHB[ ]\011/* 74 values pushed */
11 18 63 17 10 22 23 62 17 10 17 18 62 67 65 30 18 63 1 65 30 18 63 67 55 28 17 63 1 55 28 17 63 67 55 27 16 63 1 55 27 16 63 67 20 25 15 63 1 20 25 15 63 33 10 29 32 62 52 15 29 32 62 50 20 25 27 62 16 20 16 21 63 50 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 4 values pushed */
16 21 63 18 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 4 values pushed */
16 21 63 67 
PUSHW[ ]\011/* 1 value pushed */
-60 
PUSHB[ ]\011/* 4 values pushed */
16 20 62 1 
PUSHW[ ]\011/* 1 value pushed */
-60 
NPUSHB[ ]\011/* 13 values pushed */
16 20 62 35 60 16 20 62 33 60 16 20 62 
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"472 -302 LINE",
"209 -302 LINE SMOOTH",
"169 -302 OFFCURVE",
"153 -318.667 OFFCURVE",
"153 -344 CURVE SMOOTH",
"153 -369.333 OFFCURVE",
"169 -386 OFFCURVE",
"209 -386 CURVE SMOOTH",
"693 -386 LINE SMOOTH",
"733 -386 OFFCURVE",
"749 -368 OFFCURVE",
"749 -344 CURVE SMOOTH",
"749 -318.667 OFFCURVE",
"733 -302 OFFCURVE",
"693 -302 CURVE SMOOTH",
"562 -302 LINE",
"1094 781 LINE",
"1145.438 781 OFFCURVE",
"1176 783.904 OFFCURVE",
"1176 823 CURVE SMOOTH",
"1176 848.333 OFFCURVE",
"1160.333 866 OFFCURVE",
"1119 866 CURVE SMOOTH",
"890 866 LINE SMOOTH",
"850 866 OFFCURVE",
"834 848 OFFCURVE",
"834 824 CURVE SMOOTH",
"834 798.667 OFFCURVE",
"850 781 OFFCURVE",
"890 781 CURVE SMOOTH",
"1003 781 LINE",
"665 92 LINE",
"322 781 LINE",
"435 781 LINE SMOOTH",
"475 781 OFFCURVE",
"491 799 OFFCURVE",
"491 823 CURVE SMOOTH",
"491 848.333 OFFCURVE",
"475 866 OFFCURVE",
"435 866 CURVE SMOOTH",
"205 866 LINE SMOOTH",
"168.819 866 OFFCURVE",
"149 853.152 OFFCURVE",
"149 823 CURVE SMOOTH",
"149 799 OFFCURVE",
"165 781 OFFCURVE",
"205 781 CURVE SMOOTH",
"230 781 LINE",
"620 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
24 0 24 18 24 34 43 13 33 23 53 1 53 17 79 13 64 23 251 19 249 34 11 9 19 75 19 74 34 104 1 104 17 120 19 120 34 136 19 136 34 185 17 189 19 186 34 198 34 215 34 14 0 0 1 18 50 18 17 50 19 10 16 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 30 values pushed */
13 13 47 17 13 13 16 17 34 10 17 18 27 34 30 128 30 1 30 153 34 30 30 34 34 27 34 35 43 49 
PUSHW[ ]\011/* 1 value pushed */
686 
PUSHB[ ]\011/* 5 values pushed */
46 48 46 1 46 
PUSHW[ ]\011/* 1 value pushed */
279 
NPUSHB[ ]\011/* 11 values pushed */
50 46 46 49 50 34 43 50 19 9 2 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
5 5 153 1 5 5 2 1 34 9 1 0 26 20 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 17 values pushed */
23 48 23 1 23 47 19 23 23 20 19 34 26 19 50 42 36 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 109 values pushed */
39 39 47 35 39 39 36 35 34 42 35 34 19 50 50 32 35 34 20 35 35 34 17 18 18 32 0 1 20 0 18 19 0 1 50 35 34 19 18 17 1 0 8 30 5 18 9 0 10 34 59 27 27 20 59 26 26 16 59 10 2 59 10 9 6 36 59 42 49 59 43 43 42 14 0 30 80 30 2 112 30 224 30 240 30 3 30 26 52 80 5 1 0 5 16 5 32 5 112 5 224 5 240 5 6 5 25 51 42 
PUSHW[ ]\011/* 3 values pushed */
289 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"256 866 LINE",
"256 667 LINE SMOOTH",
"256 627 OFFCURVE",
"273.667 611 OFFCURVE",
"299 611 CURVE SMOOTH",
"323 611 OFFCURVE",
"341 627 OFFCURVE",
"341 667 CURVE SMOOTH",
"341 781 LINE",
"863 781 LINE",
"237 75 LINE",
"237 0 LINE",
"1005 0 LINE",
"1006 200 LINE SMOOTH",
"1006 240 OFFCURVE",
"988.333 256 OFFCURVE",
"963 256 CURVE SMOOTH",
"937.667 256 OFFCURVE",
"921 240 OFFCURVE",
"921 200 CURVE SMOOTH",
"921 84 LINE",
"353 84 LINE",
"982 791 LINE",
"982 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
14 10 12 16 63 1 8 14 10 2 
PUSHW[ ]\011/* 6 values pushed */
-10 13 -8 10 4 686 
NPUSHB[ ]\011/* 11 values pushed */
7 47 3 7 7 4 3 34 10 22 16 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 68 values pushed */
19 47 15 19 19 16 15 34 22 14 1 2 18 2 32 13 14 20 13 13 14 13 12 2 14 1 22 13 2 12 1 14 15 32 0 23 6 3 2 32 11 12 10 1 93 4 59 15 10 63 10 111 10 3 10 26 25 22 93 111 12 1 12 25 24 117 128 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
RS[ ]\011/* ReadStore */
NOT[ ]\011/* LogicalNot */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
2 -44 
PUSHB[ ]\011/* 4 values pushed */
25 50 63 2 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
23 45 63 2 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
20 40 63 2 
PUSHW[ ]\011/* 1 value pushed */
-40 
PUSHB[ ]\011/* 3 values pushed */
14 23 63 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
EIF[ ]\011/* EndIf */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"634 548.667 OFFCURVE",
"657 592 OFFCURVE",
"657 676 CURVE SMOOTH",
"657 1036 LINE SMOOTH",
"657 1109.333 OFFCURVE",
"705.333 1163.333 OFFCURVE",
"772 1170 CURVE SMOOTH",
"793.333 1172 OFFCURVE",
"807 1176.333 OFFCURVE",
"813 1183 CURVE",
"821.667 1191 OFFCURVE",
"826 1201 OFFCURVE",
"826 1213 CURVE SMOOTH",
"826 1237 OFFCURVE",
"808 1255 OFFCURVE",
"776 1255 CURVE SMOOTH",
"664 1255 OFFCURVE",
"572 1161.333 OFFCURVE",
"572 1036 CURVE SMOOTH",
"572 676 LINE SMOOTH",
"572 602.667 OFFCURVE",
"524.333 547.333 OFFCURVE",
"455 542 CURVE SMOOTH",
"417.667 538 OFFCURVE",
"405 523.333 OFFCURVE",
"405 498 CURVE SMOOTH",
"405 471.333 OFFCURVE",
"417.667 457 OFFCURVE",
"455 453 CURVE SMOOTH",
"523 447.667 OFFCURVE",
"572 392.333 OFFCURVE",
"572 319 CURVE SMOOTH",
"572 -41 LINE SMOOTH",
"572 -107 OFFCURVE",
"595.667 -163 OFFCURVE",
"643 -209 CURVE SMOOTH",
"678.333 -242.333 OFFCURVE",
"722.333 -259 OFFCURVE",
"775 -259 CURVE SMOOTH",
"808.333 -259 OFFCURVE",
"826 -242.333 OFFCURVE",
"826 -217 CURVE SMOOTH",
"826 -205 OFFCURVE",
"821.667 -195 OFFCURVE",
"813 -187 CURVE SMOOTH",
"806.333 -181 OFFCURVE",
"792.667 -177 OFFCURVE",
"772 -175 CURVE SMOOTH",
"706.667 -168.333 OFFCURVE",
"657 -116 OFFCURVE",
"657 -40 CURVE SMOOTH",
"657 319 LINE SMOOTH",
"657 360.333 OFFCURVE",
"649.333 396 OFFCURVE",
"634 426 CURVE SMOOTH",
"622 448.667 OFFCURVE",
"599.333 472.667 OFFCURVE",
"566 498 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
213 18 213 34 2 7 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 8 values pushed */
30 53 22 34 28 34 52 30 
PUSHW[ ]\011/* 1 value pushed */
-34 
NPUSHB[ ]\011/* 20 values pushed */
28 34 52 35 34 36 46 17 18 16 3 15 5 44 91 64 63 36 1 36 
PUSHW[ ]\011/* 1 value pushed */
536 
PUSHB[ ]\011/* 6 values pushed */
0 32 8 91 64 15 
PUSHW[ ]\011/* 1 value pushed */
536 
NPUSHB[ ]\011/* 33 values pushed */
0 32 26 0 39 212 46 12 212 4 5 36 19 19 20 212 26 47 46 36 33 33 32 212 0 26 16 26 2 26 25 50 250 
PUSHW[ ]\011/* 2 values pushed */
381 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTG[ ]\011/* RoundToGrid */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1239.333 OFFCURVE",
"639.333 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239.333 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 -203 LINE SMOOTH",
"572 -243 OFFCURVE",
"590 -259 OFFCURVE",
"614 -259 CURVE SMOOTH",
"639.333 -259 OFFCURVE",
"656 -243 OFFCURVE",
"656 -203 CURVE SMOOTH",
"657 1198 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
4 563 
NPUSHB[ ]\011/* 13 values pushed */
11 0 1 52 0 36 7 8 25 14 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"596 447.333 OFFCURVE",
"573 403 OFFCURVE",
"573 319 CURVE SMOOTH",
"573 -40 LINE SMOOTH",
"573 -113.333 OFFCURVE",
"524.667 -168.333 OFFCURVE",
"458 -175 CURVE SMOOTH",
"436.667 -177 OFFCURVE",
"422.667 -181 OFFCURVE",
"416 -187 CURVE",
"408 -195 OFFCURVE",
"404 -205 OFFCURVE",
"404 -217 CURVE SMOOTH",
"404 -242.333 OFFCURVE",
"420.667 -260 OFFCURVE",
"454 -260 CURVE SMOOTH",
"564.667 -260 OFFCURVE",
"657 -166.333 OFFCURVE",
"657 -41 CURVE SMOOTH",
"657 319 LINE SMOOTH",
"657 392.333 OFFCURVE",
"705.667 447.667 OFFCURVE",
"775 453 CURVE SMOOTH",
"811 457 OFFCURVE",
"825 471.333 OFFCURVE",
"825 498 CURVE SMOOTH",
"825 523.333 OFFCURVE",
"811 538 OFFCURVE",
"775 542 CURVE SMOOTH",
"707 547.333 OFFCURVE",
"657 602.667 OFFCURVE",
"657 676 CURVE SMOOTH",
"657 1036 LINE SMOOTH",
"657 1102.667 OFFCURVE",
"633.333 1158.667 OFFCURVE",
"586 1204 CURVE SMOOTH",
"551.333 1238 OFFCURVE",
"507.333 1255 OFFCURVE",
"454 1255 CURVE SMOOTH",
"420.667 1255 OFFCURVE",
"404 1237 OFFCURVE",
"404 1213 CURVE SMOOTH",
"404 1201 OFFCURVE",
"408.333 1190.667 OFFCURVE",
"417 1182 CURVE SMOOTH",
"423 1176 OFFCURVE",
"436.667 1172 OFFCURVE",
"458 1170 CURVE SMOOTH",
"523.333 1164.667 OFFCURVE",
"573 1110.667 OFFCURVE",
"573 1036 CURVE SMOOTH",
"573 676 LINE SMOOTH",
"573 634.667 OFFCURVE",
"580.667 599.333 OFFCURVE",
"596 570 CURVE SMOOTH",
"607.333 547.333 OFFCURVE",
"630 523.333 OFFCURVE",
"664 498 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
42 34 1 122 34 202 34 234 34 3 170 34 1 28 44 37 45 52 24 
PUSHW[ ]\011/* 1 value pushed */
-44 
NPUSHB[ ]\011/* 14 values pushed */
37 45 52 29 34 37 45 52 31 34 37 45 52 23 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
37 45 52 21 
PUSHW[ ]\011/* 1 value pushed */
-34 
PUSHB[ ]\011/* 4 values pushed */
37 45 52 22 
PUSHW[ ]\011/* 1 value pushed */
-34 
NPUSHB[ ]\011/* 33 values pushed */
37 45 52 30 44 37 45 52 4 18 20 18 2 35 34 36 46 17 15 5 30 77 22 77 0 32 7 91 64 63 15 1 15 
PUSHW[ ]\011/* 1 value pushed */
536 
PUSHB[ ]\011/* 6 values pushed */
0 32 43 91 64 36 
PUSHW[ ]\011/* 1 value pushed */
536 
NPUSHB[ ]\011/* 29 values pushed */
0 32 26 0 39 212 47 46 36 33 33 32 212 26 12 212 4 5 36 19 19 20 212 15 26 31 26 2 26 
PUSHW[ ]\011/* 5 values pushed */
694 51 443 459 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTG[ ]\011/* RoundToGrid */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP3[ ]\011/* DeltaExceptionP3 */";
};
width = 1229;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"994.333 668 OFFCURVE",
"986.667 666 OFFCURVE",
"980 662 CURVE SMOOTH",
"973.333 658 OFFCURVE",
"960.333 643.667 OFFCURVE",
"941 619 CURVE SMOOTH",
"887.667 551 OFFCURVE",
"837.333 517 OFFCURVE",
"790 517 CURVE SMOOTH",
"774 517 OFFCURVE",
"757.833 521.833 OFFCURVE",
"741.5 531.5 CURVE SMOOTH",
"725.167 541.167 OFFCURVE",
"683.333 577 OFFCURVE",
"616 639 CURVE SMOOTH",
"532 715 OFFCURVE",
"486.667 735 OFFCURVE",
"432 735 CURVE SMOOTH",
"366.667 735 OFFCURVE",
"301 699.333 OFFCURVE",
"213 590 CURVE SMOOTH",
"195.667 568 OFFCURVE",
"187 551.667 OFFCURVE",
"187 541 CURVE SMOOTH",
"187 518.333 OFFCURVE",
"204.333 501 OFFCURVE",
"227 501 CURVE SMOOTH",
"233.667 501 OFFCURVE",
"239.833 502.667 OFFCURVE",
"245.5 506 CURVE SMOOTH",
"251.167 509.333 OFFCURVE",
"263.667 522 OFFCURVE",
"283 544 CURVE SMOOTH",
"323.667 591.333 OFFCURVE",
"355.667 621.667 OFFCURVE",
"379 635 CURVE SMOOTH",
"396.333 645.667 OFFCURVE",
"414.667 651 OFFCURVE",
"434 651 CURVE SMOOTH",
"450 651 OFFCURVE",
"467.833 645.333 OFFCURVE",
"487.5 634 CURVE SMOOTH",
"507.167 622.667 OFFCURVE",
"536 599 OFFCURVE",
"574 563 CURVE SMOOTH",
"630.667 509.667 OFFCURVE",
"674.333 474.5 OFFCURVE",
"705 457.5 CURVE SMOOTH",
"735.667 440.5 OFFCURVE",
"766 432 OFFCURVE",
"796 432 CURVE SMOOTH",
"893.333 432 OFFCURVE",
"1043 581.333 OFFCURVE",
"1043 628 CURVE SMOOTH",
"1043 649.333 OFFCURVE",
"1024.333 668 OFFCURVE",
"1003 668 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 74 values pushed */
37 8 38 9 41 30 3 89 29 106 16 152 16 185 36 4 8 25 1 10 8 29 31 16 5 3 22 29 27 12 8 6 10 31 12 33 31 29 29 91 10 8 20 10 10 8 0 210 33 91 6 174 19 210 12 91 27 111 3 1 15 3 111 3 2 3 26 39 22 25 38 99 171 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -90, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, -51, 239}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 6, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 3, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -2, 268}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 0, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 0, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -47, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 4, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = acute;
transform = "{1, 0, 0, 1, -85, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = grave;
transform = "{1, 0, 0, 1, -76, -9}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -84, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -84, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acute;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = grave;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -36, -1}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = dagger;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"921 783 LINE SMOOTH",
"962.333 783 OFFCURVE",
"978 801 OFFCURVE",
"978 825 CURVE SMOOTH",
"978 850.333 OFFCURVE",
"962.333 867 OFFCURVE",
"921 867 CURVE SMOOTH",
"657 867 LINE",
"657 1198 LINE SMOOTH",
"657 1239.333 OFFCURVE",
"640.333 1255 OFFCURVE",
"615 1255 CURVE SMOOTH",
"589.667 1255 OFFCURVE",
"573 1239.333 OFFCURVE",
"573 1198 CURVE SMOOTH",
"573 867 LINE",
"308 868 LINE SMOOTH",
"268 868 OFFCURVE",
"252 850.333 OFFCURVE",
"252 825 CURVE SMOOTH",
"252 801 OFFCURVE",
"268 783 OFFCURVE",
"308 783 CURVE SMOOTH",
"573 783 LINE",
"573 -73 LINE SMOOTH",
"573 -114.333 OFFCURVE",
"589.667 -130 OFFCURVE",
"615 -130 CURVE SMOOTH",
"640.333 -130 OFFCURVE",
"657 -114.333 OFFCURVE",
"657 -73 CURVE SMOOTH",
"657 783 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
15 9 12 181 16 16 50 9 31 25 28 181 0 0 50 25 20 0 4 
PUSHW[ ]\011/* 1 value pushed */
550 
NPUSHB[ ]\011/* 20 values pushed */
24 9 91 25 25 24 16 6 0 23 1 91 17 7 16 25 32 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = degree;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"337 1059.333 OFFCURVE",
"462 936 OFFCURVE",
"614 936 CURVE SMOOTH",
"767.333 936 OFFCURVE",
"892 1060.667 OFFCURVE",
"892 1214 CURVE SMOOTH",
"892 1367.333 OFFCURVE",
"768.667 1491 OFFCURVE",
"614 1491 CURVE SMOOTH",
"462 1491 OFFCURVE",
"337 1367.333 OFFCURVE",
"337 1214 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"446 1307.333 OFFCURVE",
"521.667 1383 OFFCURVE",
"615 1383 CURVE SMOOTH",
"707 1383 OFFCURVE",
"783 1307.333 OFFCURVE",
"783 1214 CURVE SMOOTH",
"783 1120.667 OFFCURVE",
"707 1045 OFFCURVE",
"615 1045 CURVE SMOOTH",
"521.667 1045 OFFCURVE",
"446 1120.667 OFFCURVE",
"446 1214 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
16 64 21 23 52 19 64 21 23 52 23 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
21 23 52 14 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 6 values pushed */
21 23 52 15 44 9 
PUSHW[ ]\011/* 1 value pushed */
281 
PUSHB[ ]\011/* 6 values pushed */
21 44 3 18 44 6 
PUSHW[ ]\011/* 1 value pushed */
430 
PUSHB[ ]\011/* 6 values pushed */
12 44 0 25 24 245 
PUSHW[ ]\011/* 2 values pushed */
335 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"469.667 1008 OFFCURVE",
"392 970 OFFCURVE",
"338 916 CURVE SMOOTH",
"264.667 842.667 OFFCURVE",
"228 752.667 OFFCURVE",
"228 646 CURVE SMOOTH",
"228 450 OFFCURVE",
"372.333 287 OFFCURVE",
"571 263 CURVE",
"571 56 LINE SMOOTH",
"571 16 OFFCURVE",
"587.667 0 OFFCURVE",
"613 0 CURVE SMOOTH",
"638.333 0 OFFCURVE",
"655 16 OFFCURVE",
"655 56 CURVE SMOOTH",
"655 263 LINE",
"749 268.333 OFFCURVE",
"835 295.667 OFFCURVE",
"913 345 CURVE SMOOTH",
"947 366.333 OFFCURVE",
"964 386.667 OFFCURVE",
"964 406 CURVE SMOOTH",
"964 430 OFFCURVE",
"948 447 OFFCURVE",
"924 447 CURVE SMOOTH",
"913.333 447 OFFCURVE",
"901 441.333 OFFCURVE",
"887 430 CURVE SMOOTH",
"820.333 375.333 OFFCURVE",
"715.333 343 OFFCURVE",
"626 343 CURVE SMOOTH",
"444.667 343 OFFCURVE",
"312 475 OFFCURVE",
"312 647 CURVE SMOOTH",
"312 821.667 OFFCURVE",
"443 952 OFFCURVE",
"635 952 CURVE SMOOTH",
"780.333 952 OFFCURVE",
"862.333 885 OFFCURVE",
"873 805 CURVE SMOOTH",
"877 770.333 OFFCURVE",
"892.333 757 OFFCURVE",
"915 757 CURVE SMOOTH",
"940.333 757 OFFCURVE",
"957 772.667 OFFCURVE",
"957 814 CURVE SMOOTH",
"957 941 LINE SMOOTH",
"957 974.333 OFFCURVE",
"939.333 992 OFFCURVE",
"914 992 CURVE SMOOTH",
"895.333 992 OFFCURVE",
"879.667 980.667 OFFCURVE",
"873 958 CURVE",
"813 1005.333 OFFCURVE",
"740.333 1030.333 OFFCURVE",
"655 1033 CURVE",
"655 1280 LINE SMOOTH",
"655 1320 OFFCURVE",
"638.333 1336 OFFCURVE",
"613 1336 CURVE SMOOTH",
"587.667 1336 OFFCURVE",
"571 1320 OFFCURVE",
"571 1280 CURVE SMOOTH",
"571 1030 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
46 8 36 34 24 22 12 10 6 17 8 44 52 34 37 32 22 24 20 10 26 0 8 13 37 
PUSHW[ ]\011/* 1 value pushed */
763 
PUSHB[ ]\011/* 4 values pushed */
32 8 59 4 
PUSHW[ ]\011/* 1 value pushed */
511 
PUSHB[ ]\011/* 6 values pushed */
79 26 1 26 85 13 
PUSHW[ ]\011/* 3 values pushed */
489 20 425 
PUSHB[ ]\011/* 3 values pushed */
52 59 32 
PUSHW[ ]\011/* 1 value pushed */
504 
PUSHB[ ]\011/* 4 values pushed */
48 10 16 17 
PUSHW[ ]\011/* 1 value pushed */
436 
NPUSHB[ ]\011/* 9 values pushed */
40 114 55 8 7 32 1 1 0 
PUSHW[ ]\011/* 1 value pushed */
416 
NPUSHB[ ]\011/* 9 values pushed */
29 33 55 44 45 32 51 51 52 
PUSHW[ ]\011/* 1 value pushed */
416 
PUSHB[ ]\011/* 6 values pushed */
55 25 59 117 97 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 30 values pushed */
53 58 27 31 57 38 27 58 29 35 0 31 53 29 35 0 28 56 26 35 1 58 0 30 54 32 35 0 53 52 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1229;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"450.667 184 OFFCURVE",
"490 318 OFFCURVE",
"490 446 CURVE SMOOTH",
"490 485.333 OFFCURVE",
"486.667 525.667 OFFCURVE",
"480 567 CURVE",
"666 567 LINE SMOOTH",
"706 567 OFFCURVE",
"722 583.667 OFFCURVE",
"722 609 CURVE SMOOTH",
"722 634.333 OFFCURVE",
"706 651 OFFCURVE",
"666 651 CURVE SMOOTH",
"461 651 LINE",
"429.667 763 OFFCURVE",
"413.333 821.333 OFFCURVE",
"412 826 CURVE",
"406 854.667 OFFCURVE",
"403 880.667 OFFCURVE",
"403 904 CURVE SMOOTH",
"403 1020 OFFCURVE",
"499 1117 OFFCURVE",
"615 1117 CURVE SMOOTH",
"686.333 1117 OFFCURVE",
"748.333 1082.667 OFFCURVE",
"801 1014 CURVE SMOOTH",
"814.333 997.333 OFFCURVE",
"827 989 OFFCURVE",
"839 989 CURVE SMOOTH",
"860.333 989 OFFCURVE",
"881 1009.333 OFFCURVE",
"881 1028 CURVE SMOOTH",
"881 1081.333 OFFCURVE",
"752 1202 OFFCURVE",
"612 1202 CURVE SMOOTH",
"452 1202 OFFCURVE",
"318 1066.667 OFFCURVE",
"318 904 CURVE SMOOTH",
"318 853.333 OFFCURVE",
"337 769 OFFCURVE",
"375 651 CURVE",
"180 651 LINE SMOOTH",
"140 651 OFFCURVE",
"124 634.333 OFFCURVE",
"124 609 CURVE SMOOTH",
"124 583.667 OFFCURVE",
"140 567 OFFCURVE",
"180 567 CURVE SMOOTH",
"396 567 LINE",
"404 534.333 OFFCURVE",
"408 495.667 OFFCURVE",
"408 451 CURVE SMOOTH",
"408 341.667 OFFCURVE",
"367.667 195 OFFCURVE",
"297 123 CURVE SMOOTH",
"273 97.667 OFFCURVE",
"246.667 84.333 OFFCURVE",
"218 83 CURVE",
"187.333 83 OFFCURVE",
"171 64.667 OFFCURVE",
"171 42 CURVE SMOOTH",
"171 18 OFFCURVE",
"187 0 OFFCURVE",
"227 0 CURVE SMOOTH",
"896 0 LINE SMOOTH",
"988 0 OFFCURVE",
"1071 83.333 OFFCURVE",
"1071 194 CURVE SMOOTH",
"1071 220.667 OFFCURVE",
"1052 239 OFFCURVE",
"1028 239 CURVE SMOOTH",
"1005.333 239 OFFCURVE",
"988.667 224 OFFCURVE",
"986 192 CURVE SMOOTH",
"980.667 121.333 OFFCURVE",
"941.667 84 OFFCURVE",
"891 84 CURVE SMOOTH",
"372 84 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 86 values pushed */
46 42 244 42 2 4 42 36 42 93 48 88 49 4 42 49 83 69 102 69 184 35 217 39 223 49 215 57 233 23 233 35 250 35 10 43 61 36 69 52 69 67 69 4 20 41 21 42 51 42 67 42 76 48 82 42 86 51 100 42 107 48 207 42 10 22 21 19 3 17 35 27 57 65 4 67 37 65 27 64 28 3 5 7 0 43 
PUSHW[ ]\011/* 1 value pushed */
773 
NPUSHB[ ]\011/* 11 values pushed */
50 44 40 58 34 36 64 64 28 1 28 
PUSHW[ ]\011/* 1 value pushed */
282 
PUSHB[ ]\011/* 5 values pushed */
14 7 210 0 20 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 12 values pushed */
1 1 0 36 13 14 4 44 10 46 77 10 
PUSHW[ ]\011/* 3 values pushed */
353 43 281 
NPUSHB[ ]\011/* 31 values pushed */
37 67 44 25 132 53 44 37 210 17 61 182 17 62 15 31 47 31 127 31 3 31 25 70 40 3 14 10 134 129 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = section;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"582 1255 LINE SMOOTH",
"488.667 1255 OFFCURVE",
"405 1197 OFFCURVE",
"365 1125 CURVE SMOOTH",
"345 1089 OFFCURVE",
"335 1049.333 OFFCURVE",
"335 1006 CURVE SMOOTH",
"335 974 OFFCURVE",
"346.333 941 OFFCURVE",
"369 907 CURVE",
"217 899 OFFCURVE",
"143 825.667 OFFCURVE",
"143 743 CURVE SMOOTH",
"143 702.333 OFFCURVE",
"162.667 659.667 OFFCURVE",
"202 615 CURVE SMOOTH",
"240.667 570.333 OFFCURVE",
"318 514.333 OFFCURVE",
"434 447 CURVE SMOOTH",
"564 372 LINE SMOOTH",
"685.333 302 OFFCURVE",
"763 245.667 OFFCURVE",
"797 203 CURVE SMOOTH",
"822.333 171 OFFCURVE",
"835 139 OFFCURVE",
"835 107 CURVE SMOOTH",
"835 32.333 OFFCURVE",
"770.333 -69 OFFCURVE",
"637 -69 CURVE SMOOTH",
"293 -69 LINE",
"293 89 LINE SMOOTH",
"293 117 OFFCURVE",
"280.667 129 OFFCURVE",
"262 129 CURVE SMOOTH",
"244.667 129 OFFCURVE",
"232 117 OFFCURVE",
"232 89 CURVE SMOOTH",
"232 -130 LINE",
"638 -130 LINE SMOOTH",
"744.667 -130 OFFCURVE",
"826.167 -77.833 OFFCURVE",
"865.5 -2.5 CURVE SMOOTH",
"885.167 35.167 OFFCURVE",
"895 73.667 OFFCURVE",
"895 113 CURVE SMOOTH",
"895 149 OFFCURVE",
"883.667 184.667 OFFCURVE",
"861 220 CURVE",
"1006.333 221.333 OFFCURVE",
"1085 297.333 OFFCURVE",
"1085 384 CURVE SMOOTH",
"1085 428.667 OFFCURVE",
"1067 472 OFFCURVE",
"1031 514 CURVE SMOOTH",
"995 555.333 OFFCURVE",
"922.333 607.333 OFFCURVE",
"813 670 CURVE SMOOTH",
"700 734 LINE SMOOTH",
"557.333 815.333 OFFCURVE",
"468 877.667 OFFCURVE",
"432 921 CURVE SMOOTH",
"407.333 950.333 OFFCURVE",
"395 981.333 OFFCURVE",
"395 1014 CURVE SMOOTH",
"395 1104.667 OFFCURVE",
"483 1194 OFFCURVE",
"587 1194 CURVE SMOOTH",
"937 1194 LINE",
"937 1038 LINE SMOOTH",
"937 1010 OFFCURVE",
"949.333 998 OFFCURVE",
"968 998 CURVE SMOOTH",
"985.333 998 OFFCURVE",
"997 1010 OFFCURVE",
"997 1038 CURVE SMOOTH",
"997 1255 LINE"
);
},
{
closed = 1;
nodes = (
"478.333 794.333 OFFCURVE",
"513.667 768.667 OFFCURVE",
"659 686 CURVE SMOOTH",
"789 613 LINE SMOOTH",
"889.667 555.667 OFFCURVE",
"956.333 506.333 OFFCURVE",
"989 465 CURVE SMOOTH",
"1013 435 OFFCURVE",
"1025 407.333 OFFCURVE",
"1025 382 CURVE SMOOTH",
"1025 357.333 OFFCURVE",
"1011.667 334.833 OFFCURVE",
"985 314.5 CURVE SMOOTH",
"958.333 294.167 OFFCURVE",
"911.667 283.333 OFFCURVE",
"845 282 CURVE SMOOTH",
"831 281.333 OFFCURVE",
"820.667 279 OFFCURVE",
"814 275 CURVE",
"775.333 312.333 OFFCURVE",
"704.333 361 OFFCURVE",
"601 421 CURVE SMOOTH",
"476 494 LINE SMOOTH",
"370.667 554.667 OFFCURVE",
"299 603.333 OFFCURVE",
"261 640 CURVE SMOOTH",
"222.333 676 OFFCURVE",
"203 709 OFFCURVE",
"203 739 CURVE SMOOTH",
"203 793.667 OFFCURVE",
"259 846 OFFCURVE",
"383 846 CURVE SMOOTH",
"396.333 846 OFFCURVE",
"407.667 847 OFFCURVE",
"417 849 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
9 72 39 72 42 85 55 19 60 48 59 50 75 48 7 11 83 37 28 41 59 123 19 138 19 5 7 1 4 148 8 8 48 1 38 32 35 148 39 39 48 32 16 48 84 84 74 55 48 62 48 48 71 71 74 62 
PUSHW[ ]\011/* 1 value pushed */
317 
NPUSHB[ ]\011/* 11 values pushed */
9 9 4 213 8 48 61 0 24 48 74 
PUSHW[ ]\011/* 1 value pushed */
317 
NPUSHB[ ]\011/* 27 values pushed */
40 40 35 213 39 48 30 31 63 0 1 0 31 79 48 21 178 24 48 74 62 26 48 43 38 48 43 
PUSHW[ ]\011/* 1 value pushed */
326 
PUSHB[ ]\011/* 3 values pushed */
32 32 31 
PUSHW[ ]\011/* 1 value pushed */
487 
PUSHB[ ]\011/* 6 values pushed */
87 8 7 48 0 1 
PUSHW[ ]\011/* 1 value pushed */
326 
NPUSHB[ ]\011/* 22 values pushed */
64 189 12 55 62 57 48 12 178 67 48 15 52 31 52 2 52 25 87 80 129 24 
PUSHW[ ]\011/* 1 value pushed */
356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = bullet;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"862 773 OFFCURVE",
"751.333 884 OFFCURVE",
"614 884 CURVE SMOOTH",
"478 884 OFFCURVE",
"367 773 OFFCURVE",
"367 637 CURVE SMOOTH",
"367 499.667 OFFCURVE",
"478 389 OFFCURVE",
"614 389 CURVE SMOOTH",
"750 389 OFFCURVE",
"862 499.667 OFFCURVE",
"862 637 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
3 521 
PUSHB[ ]\011/* 3 values pushed */
9 7 0 
PUSHW[ ]\011/* 1 value pushed */
321 
NPUSHB[ ]\011/* 18 values pushed */
207 6 1 15 6 79 6 111 6 159 6 160 6 5 6 25 12 72 
PUSHW[ ]\011/* 2 values pushed */
382 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1023 1194 LINE SMOOTH",
"1052.333 1194 OFFCURVE",
"1064 1206.333 OFFCURVE",
"1064 1225 CURVE SMOOTH",
"1064 1242.333 OFFCURVE",
"1052.333 1255 OFFCURVE",
"1023 1255 CURVE SMOOTH",
"614 1255 LINE SMOOTH",
"458 1255 OFFCURVE",
"334 1196.667 OFFCURVE",
"266 1146 CURVE SMOOTH",
"242.667 1128.667 OFFCURVE",
"222.667 1106 OFFCURVE",
"206 1078 CURVE SMOOTH",
"182.667 1038.667 OFFCURVE",
"171 997.333 OFFCURVE",
"171 954 CURVE SMOOTH",
"171 857 LINE SMOOTH",
"171 779.667 OFFCURVE",
"200.833 736.167 OFFCURVE",
"273.5 675.5 CURVE SMOOTH",
"309.833 645.167 OFFCURVE",
"346.667 623 OFFCURVE",
"384 609 CURVE SMOOTH",
"447.333 584.333 OFFCURVE",
"518.333 569.333 OFFCURVE",
"597 564 CURVE",
"597 -69 LINE",
"382 -69 LINE SMOOTH",
"354 -69 OFFCURVE",
"342 -81.333 OFFCURVE",
"342 -100 CURVE SMOOTH",
"342 -117.333 OFFCURVE",
"354 -130 OFFCURVE",
"382 -130 CURVE SMOOTH",
"662 -130 LINE SMOOTH",
"690 -130 OFFCURVE",
"702 -117.667 OFFCURVE",
"702 -99 CURVE SMOOTH",
"702 -77.662 OFFCURVE",
"687.234 -69 OFFCURVE",
"658 -69 CURVE",
"658 1194 LINE",
"834 1194 LINE",
"834 -69 LINE",
"805.055 -69 OFFCURVE",
"790 -79.39 OFFCURVE",
"790 -99 CURVE SMOOTH",
"790 -117.667 OFFCURVE",
"801.667 -130 OFFCURVE",
"831 -130 CURVE SMOOTH",
"1026 -130 LINE SMOOTH",
"1054 -130 OFFCURVE",
"1066 -117.667 OFFCURVE",
"1066 -99 CURVE SMOOTH",
"1066 -81.667 OFFCURVE",
"1055.333 -69 OFFCURVE",
"1026 -69 CURVE SMOOTH",
"895 -69 LINE",
"895 1194 LINE"
);
},
{
closed = 1;
nodes = (
"597 627 LINE",
"531 633 OFFCURVE",
"473.333 649.333 OFFCURVE",
"424 676 CURVE SMOOTH",
"386.667 696.667 OFFCURVE",
"351.667 730.333 OFFCURVE",
"319 777 CURVE SMOOTH",
"301 803.667 OFFCURVE",
"292 835.333 OFFCURVE",
"292 872 CURVE SMOOTH",
"292 949 LINE SMOOTH",
"292 1059.667 OFFCURVE",
"403.667 1176.667 OFFCURVE",
"597 1194 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
68 37 70 39 2 103 47 118 47 230 47 3 9 16 12 
PUSHW[ ]\011/* 1 value pushed */
270 
NPUSHB[ ]\011/* 37 values pushed */
16 16 48 9 33 27 30 242 34 34 48 27 56 50 0 53 1 53 234 0 0 48 50 2 8 0 5 1 5 234 1 1 48 8 26 19 23 
PUSHW[ ]\011/* 1 value pushed */
270 
NPUSHB[ ]\011/* 20 values pushed */
19 19 48 26 42 61 41 2 48 8 8 33 48 27 27 9 26 35 48 67 
PUSHW[ ]\011/* 1 value pushed */
778 
NPUSHB[ ]\011/* 26 values pushed */
50 0 17 18 57 48 50 50 49 0 0 1 48 16 16 17 232 18 18 19 48 57 0 34 1 34 
PUSHW[ ]\011/* 1 value pushed */
408 
NPUSHB[ ]\011/* 13 values pushed */
61 193 16 41 32 41 48 41 3 41 232 68 99 
PUSHW[ ]\011/* 2 values pushed */
335 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"145 84 LINE SMOOTH",
"105 84 OFFCURVE",
"89 67.333 OFFCURVE",
"89 42 CURVE SMOOTH",
"89 18 OFFCURVE",
"105 0 OFFCURVE",
"145 0 CURVE SMOOTH",
"374 0 LINE SMOOTH",
"414 0 OFFCURVE",
"430 18 OFFCURVE",
"430 42 CURVE SMOOTH",
"430 67.333 OFFCURVE",
"414 84 OFFCURVE",
"374 84 CURVE SMOOTH",
"342 84 LINE",
"342 990 LINE SMOOTH",
"342 1082 OFFCURVE",
"427.667 1170 OFFCURVE",
"553 1170 CURVE SMOOTH",
"674.333 1170 OFFCURVE",
"772 1071 OFFCURVE",
"772 955 CURVE SMOOTH",
"772 892.333 OFFCURVE",
"737.833 839.667 OFFCURVE",
"670.5 805 CURVE SMOOTH",
"636.833 787.667 OFFCURVE",
"599.667 779 OFFCURVE",
"559 779 CURVE SMOOTH",
"531 779 OFFCURVE",
"513 759.667 OFFCURVE",
"513 737 CURVE SMOOTH",
"513 723 OFFCURVE",
"518.333 711.667 OFFCURVE",
"529 703 CURVE",
"537 697 OFFCURVE",
"551.333 694 OFFCURVE",
"572 694 CURVE SMOOTH",
"622.667 694 OFFCURVE",
"666.667 685.667 OFFCURVE",
"704 669 CURVE SMOOTH",
"822.667 614.333 OFFCURVE",
"870.167 576 OFFCURVE",
"913.5 484 CURVE SMOOTH",
"935.167 438 OFFCURVE",
"946 387.333 OFFCURVE",
"946 332 CURVE SMOOTH",
"946 193.333 OFFCURVE",
"874 51 OFFCURVE",
"758 51 CURVE SMOOTH",
"720 51 OFFCURVE",
"689 64.333 OFFCURVE",
"665 91 CURVE SMOOTH",
"640.333 117 OFFCURVE",
"626.333 156 OFFCURVE",
"623 208 CURVE SMOOTH",
"621.667 241.333 OFFCURVE",
"605 257 OFFCURVE",
"581 257 CURVE SMOOTH",
"557 257 OFFCURVE",
"539 239.333 OFFCURVE",
"539 210 CURVE SMOOTH",
"539 68.667 OFFCURVE",
"634.333 -33 OFFCURVE",
"757 -33 CURVE SMOOTH",
"901 -33 OFFCURVE",
"1031 106.333 OFFCURVE",
"1031 333 CURVE SMOOTH",
"1031 470.333 OFFCURVE",
"978 579.667 OFFCURVE",
"882 661 CURVE SMOOTH",
"846.667 691 OFFCURVE",
"798 719 OFFCURVE",
"736 745 CURVE",
"816 799.667 OFFCURVE",
"856 868.667 OFFCURVE",
"856 952 CURVE SMOOTH",
"856 1120 OFFCURVE",
"722.333 1255 OFFCURVE",
"553 1255 CURVE SMOOTH",
"385 1255 OFFCURVE",
"258 1131.333 OFFCURVE",
"258 990 CURVE SMOOTH",
"258 84 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
96 23 1 98 20 187 31 187 52 207 31 207 52 5 53 8 71 65 68 47 0 0 34 65 58 64 61 153 57 57 34 64 45 43 40 47 20 48 38 37 27 9 5 50 26 25 27 30 37 23 9 39 48 53 46 33 39 39 64 53 33 4 0 23 
PUSHW[ ]\011/* 1 value pushed */
355 
NPUSHB[ ]\011/* 26 values pushed */
30 65 64 10 30 33 17 11 26 33 43 93 20 7 33 50 162 33 33 15 14 1 14 26 73 20 
PUSHW[ ]\011/* 1 value pushed */
404 
NPUSHB[ ]\011/* 10 values pushed */
56 57 32 1 0 25 72 71 128 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00110]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 38 values pushed */
51 55 31 32 15 16 2 6 54 3 56 31 0 52 5 50 31 1 31 16 33 31 1 55 2 53 31 1 51 6 53 31 1 32 15 30 31 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1223 922.667 OFFCURVE",
"949.667 1196 OFFCURVE",
"611 1196 CURVE SMOOTH",
"273.667 1196 OFFCURVE",
"0 922.667 OFFCURVE",
"0 584 CURVE SMOOTH",
"0 246.667 OFFCURVE",
"273.667 -27 OFFCURVE",
"611 -27 CURVE SMOOTH",
"949.667 -27 OFFCURVE",
"1223 246.667 OFFCURVE",
"1223 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1155 284 OFFCURVE",
"912.333 41 OFFCURVE",
"611 41 CURVE SMOOTH",
"311 41 OFFCURVE",
"67 284 OFFCURVE",
"67 584 CURVE SMOOTH",
"67 885.333 OFFCURVE",
"311 1128 OFFCURVE",
"611 1128 CURVE SMOOTH",
"912.333 1128 OFFCURVE",
"1155 885.333 OFFCURVE",
"1155 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"612 549 LINE",
"654.667 528.333 OFFCURVE",
"692.167 500 OFFCURVE",
"724.5 464 CURVE SMOOTH",
"756.833 428 OFFCURVE",
"802 357.667 OFFCURVE",
"860 253 CURVE",
"924 253 LINE SMOOTH",
"943.707 253 OFFCURVE",
"956 260.169 OFFCURVE",
"956 277 CURVE SMOOTH",
"956 291.008 OFFCURVE",
"944.469 301 OFFCURVE",
"924 301 CURVE SMOOTH",
"887 301 LINE",
"834.333 392.333 OFFCURVE",
"795.833 452.833 OFFCURVE",
"771.5 482.5 CURVE SMOOTH",
"747.167 512.167 OFFCURVE",
"718 538.333 OFFCURVE",
"684 561 CURVE",
"801.333 601 OFFCURVE",
"848 664 OFFCURVE",
"848 732 CURVE SMOOTH",
"848 826.667 OFFCURVE",
"755.667 916 OFFCURVE",
"637 916 CURVE SMOOTH",
"349 916 LINE SMOOTH",
"329.293 916 OFFCURVE",
"317 908.831 OFFCURVE",
"317 892 CURVE SMOOTH",
"317 877.992 OFFCURVE",
"328.531 868 OFFCURVE",
"349 868 CURVE SMOOTH",
"413 868 LINE",
"413 301 LINE",
"349 301 LINE SMOOTH",
"327.445 301 OFFCURVE",
"317 291.687 OFFCURVE",
"317 277 CURVE SMOOTH",
"317 260.169 OFFCURVE",
"329.293 253 OFFCURVE",
"349 253 CURVE SMOOTH",
"549 253 LINE SMOOTH",
"568.707 253 OFFCURVE",
"581 260.169 OFFCURVE",
"581 277 CURVE SMOOTH",
"581 291.965 OFFCURVE",
"568.694 301 OFFCURVE",
"549 301 CURVE SMOOTH",
"461 301 LINE",
"461 549 LINE"
);
},
{
closed = 1;
nodes = (
"461 868 LINE",
"636 868 LINE SMOOTH",
"728 868 OFFCURVE",
"800 799 OFFCURVE",
"800 735 CURVE SMOOTH",
"800 668.333 OFFCURVE",
"722 596 OFFCURVE",
"590 596 CURVE SMOOTH",
"461 596 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 91 values pushed */
60 34 12 16 63 60 34 11 15 63 16 34 11 15 63 14 34 11 15 63 12 60 80 53 80 54 80 55 80 56 83 78 83 79 83 80 8 35 78 35 79 35 80 51 78 51 79 51 80 67 78 67 79 67 80 9 0 61 35 63 51 63 67 63 92 60 83 63 92 80 7 55 8 61 24 78 45 96 54 54 55 78 96 24 24 86 25 86 85 96 55 
PUSHW[ ]\011/* 1 value pushed */
628 
PUSHB[ ]\011/* 7 values pushed */
74 15 90 15 9 1 9 
PUSHW[ ]\011/* 1 value pushed */
648 
NPUSHB[ ]\011/* 14 values pushed */
3 44 96 35 35 25 96 34 34 64 96 74 74 73 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
12 16 63 73 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
11 15 63 73 
PUSHW[ ]\011/* 1 value pushed */
276 
NPUSHB[ ]\011/* 9 values pushed */
21 90 3 77 38 61 61 24 82 
PUSHW[ ]\011/* 1 value pushed */
474 
PUSHB[ ]\011/* 3 values pushed */
58 65 64 
PUSHW[ ]\011/* 1 value pushed */
699 
PUSHB[ ]\011/* 3 values pushed */
12 90 0 
PUSHW[ ]\011/* 1 value pushed */
556 
PUSHB[ ]\011/* 7 values pushed */
6 86 25 78 24 24 25 
PUSHW[ ]\011/* 1 value pushed */
474 
PUSHB[ ]\011/* 5 values pushed */
45 48 44 1 44 
PUSHW[ ]\011/* 1 value pushed */
367 
NPUSHB[ ]\011/* 10 values pushed */
18 90 6 25 87 3 9 69 108 24 
PUSHW[ ]\011/* 1 value pushed */
356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
1 23 16 8 18 46 0 14 10 12 46 1 20 4 18 46 0 22 2 12 46 1 17 7 15 46 1 13 11 15 46 1 19 5 21 46 0 23 1 21 46 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1223 922.667 OFFCURVE",
"949.667 1196 OFFCURVE",
"611 1196 CURVE SMOOTH",
"273.667 1196 OFFCURVE",
"0 922.667 OFFCURVE",
"0 584 CURVE SMOOTH",
"0 246.667 OFFCURVE",
"273.667 -27 OFFCURVE",
"611 -27 CURVE SMOOTH",
"949.667 -27 OFFCURVE",
"1223 246.667 OFFCURVE",
"1223 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1155 284 OFFCURVE",
"912.333 41 OFFCURVE",
"611 41 CURVE SMOOTH",
"311 41 OFFCURVE",
"67 284 OFFCURVE",
"67 584 CURVE SMOOTH",
"67 885.333 OFFCURVE",
"311 1128 OFFCURVE",
"611 1128 CURVE SMOOTH",
"912.333 1128 OFFCURVE",
"1155 885.333 OFFCURVE",
"1155 584 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"754 916 OFFCURVE",
"686.333 943 OFFCURVE",
"607 943 CURVE SMOOTH",
"433.667 943 OFFCURVE",
"325 788.333 OFFCURVE",
"325 647 CURVE SMOOTH",
"325 550 LINE SMOOTH",
"325 501.333 OFFCURVE",
"335 459.333 OFFCURVE",
"355 424 CURVE SMOOTH",
"427 300 OFFCURVE",
"516.667 246 OFFCURVE",
"630 246 CURVE SMOOTH",
"758 246 OFFCURVE",
"876 352.667 OFFCURVE",
"876 390 CURVE SMOOTH",
"876 403.333 OFFCURVE",
"867.667 412 OFFCURVE",
"853 412 CURVE SMOOTH",
"845.667 412 OFFCURVE",
"838.667 408 OFFCURVE",
"832 400 CURVE SMOOTH",
"773.333 328.667 OFFCURVE",
"705.333 293 OFFCURVE",
"628 293 CURVE SMOOTH",
"493.333 293 OFFCURVE",
"373 414.333 OFFCURVE",
"373 557 CURVE SMOOTH",
"373 640 LINE SMOOTH",
"373 710.667 OFFCURVE",
"399 774.667 OFFCURVE",
"451 832 CURVE SMOOTH",
"489.667 874 OFFCURVE",
"542.333 895 OFFCURVE",
"609 895 CURVE SMOOTH",
"665 895 OFFCURVE",
"715 878.333 OFFCURVE",
"759 845 CURVE SMOOTH",
"791 821 OFFCURVE",
"808 792.667 OFFCURVE",
"810 760 CURVE",
"812.667 740 OFFCURVE",
"822 732 OFFCURVE",
"834 732 CURVE SMOOTH",
"851.226 732 OFFCURVE",
"858 742.602 OFFCURVE",
"858 764 CURVE SMOOTH",
"858 896 LINE SMOOTH",
"858 918.667 OFFCURVE",
"848.333 928 OFFCURVE",
"835 928 CURVE SMOOTH",
"820.333 928 OFFCURVE",
"810 918.667 OFFCURVE",
"810 896 CURVE SMOOTH",
"810 862 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
98 8 111 14 98 16 96 20 110 22 126 14 113 16 113 20 127 22 9 96 1 96 5 107 7 111 11 111 13 111 17 96 19 96 23 112 1 112 5 127 7 127 11 127 13 127 17 112 19 112 23 16 3 69 3 71 2 55 8 21 90 3 36 138 28 49 
NPUSHW[ ]\011/* 10 values pushed */
664 43 474 28 771 70 55 399 51 474 
PUSHB[ ]\011/* 6 values pushed */
32 70 48 70 2 70 
PUSHW[ ]\011/* 1 value pushed */
533 
NPUSHB[ ]\011/* 9 values pushed */
61 243 3 15 90 15 9 1 9 
PUSHW[ ]\011/* 4 values pushed */
259 3 53 474 
PUSHB[ ]\011/* 3 values pushed */
58 52 40 
PUSHW[ ]\011/* 5 values pushed */
474 24 474 32 415 
PUSHB[ ]\011/* 6 values pushed */
12 90 0 110 6 47 
PUSHW[ ]\011/* 1 value pushed */
474 
NPUSHB[ ]\011/* 12 values pushed */
67 218 18 90 6 25 72 3 11 75 68 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
1 23 16 8 18 201 0 14 10 12 201 1 20 4 18 201 0 22 2 12 201 1 17 7 15 201 1 13 11 15 201 1 19 5 21 201 0 23 1 21 201 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"459 1105 LINE",
"459 962 LINE SMOOTH",
"459 934.667 OFFCURVE",
"470 921 OFFCURVE",
"492 921 CURVE SMOOTH",
"513.333 921 OFFCURVE",
"524 934.667 OFFCURVE",
"524 962 CURVE SMOOTH",
"524 1170 LINE",
"4 1170 LINE",
"4 962 LINE SMOOTH",
"4 934.667 OFFCURVE",
"15 921 OFFCURVE",
"37 921 CURVE SMOOTH",
"58.333 921 OFFCURVE",
"69 934.667 OFFCURVE",
"69 962 CURVE SMOOTH",
"69 1105 LINE",
"232 1105 LINE",
"232 673 LINE",
"138 673 LINE SMOOTH",
"110.667 673 OFFCURVE",
"97 662 OFFCURVE",
"97 640 CURVE SMOOTH",
"97 618.667 OFFCURVE",
"110.667 608 OFFCURVE",
"138 608 CURVE SMOOTH",
"390 608 LINE SMOOTH",
"417.333 608 OFFCURVE",
"431 618.667 OFFCURVE",
"431 640 CURVE SMOOTH",
"431 662 OFFCURVE",
"417.333 673 OFFCURVE",
"390 673 CURVE SMOOTH",
"297 673 LINE",
"297 1105 LINE"
);
},
{
closed = 1;
nodes = (
"1080 1103 LINE",
"1080 673 LINE",
"1022 673 LINE SMOOTH",
"994 673 OFFCURVE",
"980 662 OFFCURVE",
"980 640 CURVE SMOOTH",
"980 618.667 OFFCURVE",
"994 608 OFFCURVE",
"1022 608 CURVE SMOOTH",
"1183 608 LINE SMOOTH",
"1211 608 OFFCURVE",
"1225 618.667 OFFCURVE",
"1225 640 CURVE SMOOTH",
"1225 662 OFFCURVE",
"1211 673 OFFCURVE",
"1183 673 CURVE SMOOTH",
"1147 673 LINE",
"1147 1170 LINE",
"1040 1170 LINE",
"880 858 LINE",
"720 1170 LINE",
"613 1170 LINE",
"613 673 LINE",
"577 673 LINE SMOOTH",
"549 673 OFFCURVE",
"535 662 OFFCURVE",
"535 640 CURVE SMOOTH",
"535 618.667 OFFCURVE",
"549 608 OFFCURVE",
"577 608 CURVE SMOOTH",
"738 608 LINE SMOOTH",
"766 608 OFFCURVE",
"780 618.667 OFFCURVE",
"780 640 CURVE SMOOTH",
"780 662 OFFCURVE",
"766 673 OFFCURVE",
"738 673 CURVE SMOOTH",
"680 673 LINE",
"680 1101 LINE",
"846 776 LINE",
"914 776 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 74 values pushed */
86 28 86 44 2 185 30 186 45 217 30 233 30 4 121 60 1 87 45 1 8 44 5 46 8 60 187 44 185 45 5 102 28 170 44 187 29 3 57 29 50 44 55 45 87 28 4 122 28 155 28 150 44 3 88 29 88 45 101 44 3 42 29 42 45 60 44 73 44 4 46 60 28 28 
PUSHW[ ]\011/* 1 value pushed */
640 
NPUSHB[ ]\011/* 10 values pushed */
45 46 20 45 45 46 44 30 29 29 
PUSHW[ ]\011/* 1 value pushed */
640 
NPUSHB[ ]\011/* 67 values pushed */
45 44 20 45 45 44 24 79 17 95 17 127 17 3 17 17 45 30 60 3 29 29 20 53 54 54 36 36 37 37 6 6 7 58 32 32 31 31 42 42 41 41 2 2 1 1 12 12 48 59 58 32 31 42 2 1 12 11 54 36 37 6 7 49 11 53 11 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 26 values pushed */
48 7 1 0 7 32 7 2 7 7 47 46 46 44 44 43 43 21 21 20 27 0 0 13 13 14 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 10 values pushed */
20 2 46 28 59 44 29 31 45 22 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 12 values pushed */
31 26 1 160 26 176 26 2 26 26 1 19 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 33 values pushed */
16 15 1 175 15 191 15 2 47 15 63 15 127 15 3 15 64 9 14 52 15 15 12 4 4 47 9 63 9 2 9 9 1 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 50 values pushed */
0 12 1 32 12 48 12 239 12 3 12 12 45 0 51 112 51 2 208 51 240 51 2 128 51 160 51 192 51 3 64 51 80 51 96 51 3 51 51 56 56 59 34 34 31 39 39 42 47 48 
PUSHW[ ]\011/* 1 value pushed */
639 
PUSHB[ ]\011/* 4 values pushed */
60 59 43 42 
PUSHW[ ]\011/* 1 value pushed */
639 
NPUSHB[ ]\011/* 14 values pushed */
31 59 31 15 45 127 45 2 48 45 80 45 2 45 
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
RTG[ ]\011/* RoundToGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP3[ ]\011/* DeltaExceptionP3 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP3[ ]\011/* DeltaExceptionP3 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SDPVTL[1]\011/* SetDualPVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */";
};
width = 1229;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"781.333 1263.667 OFFCURVE",
"785 1272.667 OFFCURVE",
"785 1286 CURVE SMOOTH",
"785 1310 OFFCURVE",
"765.667 1329 OFFCURVE",
"743 1329 CURVE SMOOTH",
"732.333 1329 OFFCURVE",
"719.333 1322.333 OFFCURVE",
"704 1309 CURVE SMOOTH",
"468 1105 LINE",
"446.667 1085 OFFCURVE",
"443 1077.333 OFFCURVE",
"443 1064 CURVE SMOOTH",
"443 1040 OFFCURVE",
"462.333 1021 OFFCURVE",
"485 1021 CURVE SMOOTH",
"495.667 1021 OFFCURVE",
"508.333 1027.667 OFFCURVE",
"523 1041 CURVE SMOOTH",
"760 1245 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
0 3 16 3 96 3 112 3 128 3 5 3 
PUSHW[ ]\011/* 5 values pushed */
498 12 15 503 6 
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"482 1192.333 OFFCURVE",
"445.333 1229 OFFCURVE",
"400 1229 CURVE SMOOTH",
"356 1229 OFFCURVE",
"319 1192.333 OFFCURVE",
"319 1147 CURVE SMOOTH",
"319 1103 OFFCURVE",
"356 1066 OFFCURVE",
"400 1066 CURVE SMOOTH",
"445.333 1066 OFFCURVE",
"482 1101.667 OFFCURVE",
"482 1147 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"911 1192.333 OFFCURVE",
"874.333 1229 OFFCURVE",
"829 1229 CURVE SMOOTH",
"783.667 1229 OFFCURVE",
"748 1192.333 OFFCURVE",
"748 1147 CURVE SMOOTH",
"748 1103 OFFCURVE",
"783.667 1066 OFFCURVE",
"829 1066 CURVE SMOOTH",
"874.333 1066 OFFCURVE",
"911 1101.667 OFFCURVE",
"911 1147 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
3 112 9 15 112 21 21 9 18 112 48 12 112 12 2 12 203 0 112 6 25 24 9 0 113 170 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = notequal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1073 695 LINE SMOOTH",
"1113 695 OFFCURVE",
"1129 713 OFFCURVE",
"1129 737 CURVE SMOOTH",
"1129 762.333 OFFCURVE",
"1113 780 OFFCURVE",
"1073 780 CURVE SMOOTH",
"750 780 LINE",
"931 1171 LINE",
"937 1185.667 OFFCURVE",
"940 1196.667 OFFCURVE",
"940 1204 CURVE SMOOTH",
"940 1224 OFFCURVE",
"922 1244 OFFCURVE",
"898 1244 CURVE SMOOTH",
"880 1244 OFFCURVE",
"865.333 1231.667 OFFCURVE",
"854 1207 CURVE SMOOTH",
"657 780 LINE",
"157 780 LINE SMOOTH",
"117 780 OFFCURVE",
"101 762 OFFCURVE",
"101 738 CURVE SMOOTH",
"101 712.667 OFFCURVE",
"117 695 OFFCURVE",
"157 695 CURVE SMOOTH",
"619 695 LINE",
"519 478 LINE",
"157 478 LINE SMOOTH",
"117 478 OFFCURVE",
"101 461.333 OFFCURVE",
"101 436 CURVE SMOOTH",
"101 410.667 OFFCURVE",
"117 394 OFFCURVE",
"157 394 CURVE SMOOTH",
"480 394 LINE",
"299 0 LINE SMOOTH",
"292.333 -14 OFFCURVE",
"289 -24.667 OFFCURVE",
"289 -32 CURVE SMOOTH",
"289 -53.333 OFFCURVE",
"308.333 -72 OFFCURVE",
"331 -72 CURVE SMOOTH",
"349.667 -72 OFFCURVE",
"364.667 -59.667 OFFCURVE",
"376 -35 CURVE SMOOTH",
"573 394 LINE",
"1073 394 LINE SMOOTH",
"1113 394 OFFCURVE",
"1129 410.667 OFFCURVE",
"1129 436 CURVE SMOOTH",
"1129 461.333 OFFCURVE",
"1113 478 OFFCURVE",
"1073 478 CURVE SMOOTH",
"612 478 LINE",
"712 695 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
8 36 72 36 135 1 134 9 136 36 5 44 0 1 9 10 10 43 35 27 26 18 17 17 36 14 15 16 17 10 36 43 42 41 40 10 38 12 43 10 10 36 17 36 20 17 17 36 38 38 12 45 44 44 35 35 34 0 27 27 51 34 36 28 
PUSHW[ ]\011/* 1 value pushed */
760 
NPUSHB[ ]\011/* 19 values pushed */
25 2 1 1 26 26 25 36 19 8 9 9 18 18 19 48 5 31 22 
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SPVTL[1]\011/* SetPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = AE;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"614 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67.333 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"1212 0 LINE",
"1212 278 LINE SMOOTH",
"1212 311.333 OFFCURVE",
"1207.333 319 OFFCURVE",
"1186 331 CURVE",
"1166 334 LINE",
"1156.667 334 OFFCURVE",
"1137 320 OFFCURVE",
"1133 312 CURVE",
"1129.667 304.667 OFFCURVE",
"1128 293.333 OFFCURVE",
"1128 278 CURVE SMOOTH",
"1128 84 LINE",
"698 84 LINE",
"698 567 LINE",
"861 567 LINE",
"861 510 LINE SMOOTH",
"861 468.667 OFFCURVE",
"877.667 453 OFFCURVE",
"903 453 CURVE SMOOTH",
"928.333 453 OFFCURVE",
"945 468.667 OFFCURVE",
"945 510 CURVE SMOOTH",
"945 708 LINE SMOOTH",
"946.333 749.333 OFFCURVE",
"928.333 765 OFFCURVE",
"903 765 CURVE SMOOTH",
"877.667 765 OFFCURVE",
"861 749.333 OFFCURVE",
"861 708 CURVE SMOOTH",
"861 650 LINE",
"698 650 LINE",
"698 1086 LINE",
"1085 1086 LINE",
"1085 854 LINE SMOOTH",
"1085 814 OFFCURVE",
"1102.667 798 OFFCURVE",
"1128 798 CURVE SMOOTH",
"1152 798 OFFCURVE",
"1170 814 OFFCURVE",
"1170 854 CURVE SMOOTH",
"1170 1170 LINE",
"296 1170 LINE SMOOTH",
"254.667 1170 OFFCURVE",
"240 1153.333 OFFCURVE",
"240 1128 CURVE SMOOTH",
"240 1102.667 OFFCURVE",
"256 1086 OFFCURVE",
"296 1086 CURVE SMOOTH",
"427 1086 LINE",
"151 84 LINE",
"74 84 LINE SMOOTH",
"34 84 OFFCURVE",
"18 67.333 OFFCURVE",
"18 42 CURVE SMOOTH",
"18 18 OFFCURVE",
"34 0 OFFCURVE",
"74 0 CURVE SMOOTH",
"290 0 LINE SMOOTH",
"330 0 OFFCURVE",
"346 18 OFFCURVE",
"346 42 CURVE SMOOTH",
"346 67.333 OFFCURVE",
"330 84 OFFCURVE",
"290 84 CURVE SMOOTH",
"236 84 LINE",
"321 394 LINE",
"614 394 LINE"
);
},
{
closed = 1;
nodes = (
"344 475 LINE",
"510 1086 LINE",
"614 1086 LINE",
"614 475 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
40 78 51 35 48 36 51 76 4 143 31 143 32 2 1 78 77 77 2 65 56 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
0 61 1 61 53 55 61 61 56 55 29 65 10 16 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 24 values pushed */
15 13 1 63 13 95 13 191 13 3 13 13 43 17 13 13 16 17 29 10 17 18 27 33 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
15 30 1 30 86 34 30 30 33 34 29 27 45 51 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 20 values pushed */
15 48 31 48 47 48 63 48 4 48 41 52 48 48 51 52 29 45 67 73 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
63 70 1 70 43 74 70 70 73 74 29 67 9 3 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 14 values pushed */
6 6 41 2 6 6 3 2 29 9 2 77 25 19 
PUSHW[ ]\011/* 4 values pushed */
676 22 22 354 
NPUSHB[ ]\011/* 11 values pushed */
18 22 22 19 18 29 25 18 17 44 38 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 74 values pushed */
0 41 16 41 32 41 48 41 4 41 41 37 41 41 38 37 29 44 18 17 17 30 2 77 20 2 2 77 2 17 38 10 77 18 38 25 75 30 0 37 36 38 53 53 52 0 0 35 52 52 54 35 76 35 35 34 38 26 26 25 68 67 55 54 38 67 67 10 9 25 2 9 8 78 
PUSHW[ ]\011/* 1 value pushed */
672 
NPUSHB[ ]\011/* 38 values pushed */
75 75 74 30 48 54 1 54 44 63 45 1 45 240 54 54 144 35 1 35 30 76 76 80 79 55 56 30 65 65 240 66 1 66 65 27 27 26 
PUSHW[ ]\011/* 1 value pushed */
707 
PUSHB[ ]\011/* 7 values pushed */
77 2 38 17 77 38 18 
PUSHW[ ]\011/* 1 value pushed */
310 
NPUSHB[ ]\011/* 16 values pushed */
0 17 1 48 17 80 17 176 17 3 17 233 79 69 108 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTCA[1]\011/* SetFVectorToAxis */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Oslash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"385 12.667 OFFCURVE",
"493.333 -33 OFFCURVE",
"616 -33 CURVE SMOOTH",
"885.333 -33 OFFCURVE",
"1128 222 OFFCURVE",
"1128 582 CURVE SMOOTH",
"1128 742 OFFCURVE",
"1083.667 881 OFFCURVE",
"995 999 CURVE",
"1132 1173 LINE SMOOTH",
"1143.333 1187.667 OFFCURVE",
"1149 1199.667 OFFCURVE",
"1149 1209 CURVE SMOOTH",
"1149 1233 OFFCURVE",
"1131 1252 OFFCURVE",
"1107 1252 CURVE SMOOTH",
"1092.333 1252 OFFCURVE",
"1083.667 1247.667 OFFCURVE",
"1065 1225 CURVE SMOOTH",
"938 1063 LINE",
"845.333 1152.333 OFFCURVE",
"738 1197 OFFCURVE",
"616 1197 CURVE SMOOTH",
"345.333 1197 OFFCURVE",
"104 943.667 OFFCURVE",
"104 581 CURVE SMOOTH",
"104 427 OFFCURVE",
"147.667 289.667 OFFCURVE",
"235 169 CURVE",
"98 -5 LINE SMOOTH",
"86 -19.667 OFFCURVE",
"80 -31.667 OFFCURVE",
"80 -41 CURVE SMOOTH",
"80 -65 OFFCURVE",
"99 -84 OFFCURVE",
"123 -84 CURVE SMOOTH",
"136.333 -84 OFFCURVE",
"145.333 -81 OFFCURVE",
"164 -57 CURVE SMOOTH",
"291 104 LINE"
);
},
{
closed = 1;
nodes = (
"290 239 LINE",
"222 340.333 OFFCURVE",
"188 454.667 OFFCURVE",
"188 582 CURVE SMOOTH",
"188 874 OFFCURVE",
"380 1113 OFFCURVE",
"616 1113 CURVE SMOOTH",
"714 1113 OFFCURVE",
"803.333 1073.667 OFFCURVE",
"884 995 CURVE"
);
},
{
closed = 1;
nodes = (
"940 929 LINE",
"1008.667 828.333 OFFCURVE",
"1043 712.667 OFFCURVE",
"1043 582 CURVE SMOOTH",
"1043 287.333 OFFCURVE",
"849.333 51 OFFCURVE",
"616 51 CURVE SMOOTH",
"515.333 51 OFFCURVE",
"424.667 91.333 OFFCURVE",
"344 172 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 144 values pushed */
31 24 31 25 63 18 3 34 37 47 45 136 17 168 46 4 13 17 43 18 52 16 62 17 58 18 58 38 50 46 7 47 13 39 17 32 30 47 38 32 46 63 13 50 30 63 38 50 46 153 0 148 14 157 31 153 42 13 41 8 10 10 11 17 34 41 41 40 18 18 9 0 42 49 49 48 27 27 28 26 1 0 10 41 42 4 17 27 34 49 4 29 12 3 1 20 18 0 10 41 42 4 17 27 34 49 4 32 15 26 1 1 30 9 18 20 9 9 18 0 10 41 42 4 17 27 34 49 4 29 12 0 10 41 42 4 17 27 34 49 4 32 15 26 
PUSHW[ ]\011/* 1 value pushed */
344 
NPUSHB[ ]\011/* 21 values pushed */
18 44 37 32 36 37 15 25 102 47 37 0 29 16 29 32 29 48 29 4 29 
PUSHW[ ]\011/* 1 value pushed */
636 
NPUSHB[ ]\011/* 10 values pushed */
39 37 12 25 50 32 9 15 3 67 
PUSHW[ ]\011/* 3 values pushed */
264 24 287 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SPVTL[1]\011/* SetPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTL[0]\011/* SetFVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
45 46 37 38 30 31 13 14 37 14 39 46 0 45 31 47 46 1 38 13 36 46 1 46 30 44 46 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = infinity;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"526.333 789.333 OFFCURVE",
"432.333 845 OFFCURVE",
"333 845 CURVE SMOOTH",
"205 845 OFFCURVE",
"109 750.667 OFFCURVE",
"109 620 CURVE SMOOTH",
"109 489.333 OFFCURVE",
"201.667 399 OFFCURVE",
"327 399 CURVE SMOOTH",
"423 399 OFFCURVE",
"503 434.667 OFFCURVE",
"615 568 CURVE",
"708.333 454.667 OFFCURVE",
"804.333 398 OFFCURVE",
"903 398 CURVE SMOOTH",
"1031 398 OFFCURVE",
"1120 489.333 OFFCURVE",
"1120 624 CURVE SMOOTH",
"1120 757.333 OFFCURVE",
"1029.333 846 OFFCURVE",
"896 846 CURVE SMOOTH",
"792.667 846 OFFCURVE",
"699 790 OFFCURVE",
"615 678 CURVE"
);
},
{
closed = 1;
nodes = (
"735.667 722 OFFCURVE",
"825.667 770 OFFCURVE",
"899 770 CURVE SMOOTH",
"984.333 770 OFFCURVE",
"1046 708.333 OFFCURVE",
"1046 623 CURVE SMOOTH",
"1046 533.667 OFFCURVE",
"991 477 OFFCURVE",
"903 477 CURVE SMOOTH",
"869 477 OFFCURVE",
"835.5 485.5 OFFCURVE",
"802.5 502.5 CURVE SMOOTH",
"769.5 519.5 OFFCURVE",
"723.667 559.333 OFFCURVE",
"665 622 CURVE"
);
},
{
closed = 1;
nodes = (
"500.333 538.667 OFFCURVE",
"407 476 OFFCURVE",
"323 476 CURVE SMOOTH",
"240.333 476 OFFCURVE",
"182 532.333 OFFCURVE",
"182 623 CURVE SMOOTH",
"182 711 OFFCURVE",
"242 769 OFFCURVE",
"326 769 CURVE SMOOTH",
"395.333 769 OFFCURVE",
"451 746.667 OFFCURVE",
"567 624 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
23 11 23 20 2 64 8 10 
NPUSHW[ ]\011/* 14 values pushed */
767 13 771 8 42 771 24 36 771 30 0 767 19 771 
PUSHB[ ]\011/* 4 values pushed */
2 8 44 24 
PUSHW[ ]\011/* 1 value pushed */
757 
NPUSHB[ ]\011/* 10 values pushed */
30 44 2 6 5 44 0 27 1 27 
PUSHW[ ]\011/* 1 value pushed */
418 
NPUSHB[ ]\011/* 10 values pushed */
21 91 0 33 16 33 80 33 3 33 
PUSHW[ ]\011/* 1 value pushed */
418 
NPUSHB[ ]\011/* 22 values pushed */
39 44 176 16 1 160 16 1 128 16 1 16 16 112 16 2 16 25 45 79 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 48 values pushed */
37 41 25 29 14 18 3 7 37 18 39 39 0 29 3 27 39 1 41 14 39 39 0 25 7 27 39 1 38 17 36 39 1 28 4 30 39 1 40 15 42 39 0 26 6 24 39 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = plusminus;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1029 676 LINE SMOOTH",
"1069 676 OFFCURVE",
"1085 692.667 OFFCURVE",
"1085 718 CURVE SMOOTH",
"1085 743.333 OFFCURVE",
"1069 760 OFFCURVE",
"1029 760 CURVE SMOOTH",
"657 760 LINE",
"657 1178 LINE SMOOTH",
"657 1218 OFFCURVE",
"639 1234 OFFCURVE",
"615 1234 CURVE SMOOTH",
"589.667 1234 OFFCURVE",
"572 1218 OFFCURVE",
"572 1178 CURVE SMOOTH",
"572 760 LINE",
"200 760 LINE SMOOTH",
"160 760 OFFCURVE",
"144 743.333 OFFCURVE",
"144 718 CURVE SMOOTH",
"144 692.667 OFFCURVE",
"160 676 OFFCURVE",
"200 676 CURVE SMOOTH",
"572 676 LINE",
"572 256 LINE SMOOTH",
"572 216 OFFCURVE",
"590 200 OFFCURVE",
"614 200 CURVE SMOOTH",
"639.333 200 OFFCURVE",
"657 216 OFFCURVE",
"657 256 CURVE SMOOTH",
"657 676 LINE"
);
},
{
closed = 1;
nodes = (
"1020.667 0 OFFCURVE",
"1049.667 0.667 OFFCURVE",
"1055 2 CURVE SMOOTH",
"1072.333 6 OFFCURVE",
"1085 23.333 OFFCURVE",
"1085 42 CURVE SMOOTH",
"1085 60.667 OFFCURVE",
"1072.333 78 OFFCURVE",
"1055 82 CURVE SMOOTH",
"1049.667 83.333 OFFCURVE",
"1020.667 84 OFFCURVE",
"968 84 CURVE SMOOTH",
"261 85 LINE SMOOTH",
"208.333 85 OFFCURVE",
"179.333 84 OFFCURVE",
"174 82 CURVE",
"156.667 78 OFFCURVE",
"144 60.667 OFFCURVE",
"144 42 CURVE SMOOTH",
"144 23.333 OFFCURVE",
"156.667 6 OFFCURVE",
"174 2 CURVE SMOOTH",
"179.333 0.667 OFFCURVE",
"208.333 0 OFFCURVE",
"261 0 CURVE SMOOTH",
"968 0 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
8 167 4 167 0 0 31 91 25 25 24 167 20 9 91 15 15 16 167 20 44 91 32 32 43 91 33 23 17 17 24 91 16 16 8 49 28 220 0 91 8 1 91 7 7 8 220 12 12 48 38 1 38 25 54 20 33 10 80 129 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = lessequal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1005 379 LINE SMOOTH",
"1019.667 371 OFFCURVE",
"1030.667 367 OFFCURVE",
"1038 367 CURVE SMOOTH",
"1060.667 367 OFFCURVE",
"1080 386.333 OFFCURVE",
"1080 409 CURVE SMOOTH",
"1080 425.667 OFFCURVE",
"1068.667 440.333 OFFCURVE",
"1046 453 CURVE SMOOTH",
"269 885 LINE",
"1047 1317 LINE SMOOTH",
"1069.667 1329 OFFCURVE",
"1081 1343.667 OFFCURVE",
"1081 1361 CURVE SMOOTH",
"1081 1383.667 OFFCURVE",
"1061.667 1403 OFFCURVE",
"1039 1403 CURVE SMOOTH",
"1031.667 1403 OFFCURVE",
"1020.667 1398.667 OFFCURVE",
"1006 1390 CURVE SMOOTH",
"98 884 LINE"
);
},
{
closed = 1;
nodes = (
"1013.667 181 OFFCURVE",
"1042.667 181.667 OFFCURVE",
"1048 183 CURVE SMOOTH",
"1065.333 187 OFFCURVE",
"1078 204.333 OFFCURVE",
"1078 223 CURVE SMOOTH",
"1078 241.667 OFFCURVE",
"1065.333 259 OFFCURVE",
"1048 263 CURVE SMOOTH",
"1042.667 264.333 OFFCURVE",
"1013.667 265 OFFCURVE",
"961 265 CURVE SMOOTH",
"217 265 LINE SMOOTH",
"165 265 OFFCURVE",
"136 264.333 OFFCURVE",
"130 263 CURVE SMOOTH",
"114 259 OFFCURVE",
"101 241.667 OFFCURVE",
"101 223 CURVE SMOOTH",
"101 204.333 OFFCURVE",
"113.667 187 OFFCURVE",
"131 183 CURVE SMOOTH",
"136.333 181.667 OFFCURVE",
"165 181 OFFCURVE",
"217 181 CURVE SMOOTH",
"961 181 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
10 9 9 36 0 17 20 0 9 8 0 17 8 9 9 36 0 1 20 0 9 10 0 1 30 36 18 18 29 36 19 10 91 17 
PUSHW[ ]\011/* 3 values pushed */
426 9 766 
PUSHB[ ]\011/* 4 values pushed */
0 8 91 1 
PUSHW[ ]\011/* 1 value pushed */
426 
PUSHB[ ]\011/* 6 values pushed */
0 19 0 24 52 10 
PUSHW[ ]\011/* 1 value pushed */
444 
PUSHB[ ]\011/* 4 values pushed */
0 35 52 12 
NPUSHW[ ]\011/* 9 values pushed */
662 17 683 8 444 6 662 1 683 
PUSHB[ ]\011/* 6 values pushed */
0 25 40 79 129 24 
PUSHW[ ]\011/* 1 value pushed */
289 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"224 1390 LINE SMOOTH",
"209.333 1398.667 OFFCURVE",
"198.333 1403 OFFCURVE",
"191 1403 CURVE SMOOTH",
"168.333 1403 OFFCURVE",
"149 1383.667 OFFCURVE",
"149 1361 CURVE SMOOTH",
"149 1343.667 OFFCURVE",
"160.333 1328.667 OFFCURVE",
"183 1316 CURVE SMOOTH",
"960 885 LINE",
"182 453 LINE SMOOTH",
"159.333 440.333 OFFCURVE",
"148 425.667 OFFCURVE",
"148 409 CURVE SMOOTH",
"148 385 OFFCURVE",
"167.333 367 OFFCURVE",
"190 367 CURVE SMOOTH",
"197.333 367 OFFCURVE",
"208.333 371 OFFCURVE",
"223 379 CURVE SMOOTH",
"1131 885 LINE"
);
},
{
closed = 1;
nodes = (
"1064 181 OFFCURVE",
"1093 181.667 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1115 187 OFFCURVE",
"1128 204.333 OFFCURVE",
"1128 223 CURVE SMOOTH",
"1128 241.667 OFFCURVE",
"1115 259 OFFCURVE",
"1099 263 CURVE SMOOTH",
"1093.667 264.333 OFFCURVE",
"1064.667 265 OFFCURVE",
"1012 265 CURVE SMOOTH",
"268 265 LINE SMOOTH",
"215.333 265 OFFCURVE",
"186.333 264.333 OFFCURVE",
"181 263 CURVE SMOOTH",
"163.667 259 OFFCURVE",
"151 241.667 OFFCURVE",
"151 223 CURVE SMOOTH",
"151 204.333 OFFCURVE",
"163.667 187 OFFCURVE",
"181 183 CURVE SMOOTH",
"186.333 181.667 OFFCURVE",
"215.333 181 OFFCURVE",
"268 181 CURVE SMOOTH",
"1012 181 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
9 8 9 10 8 36 1 0 20 1 1 0 9 10 9 8 10 36 17 0 20 17 17 0 30 36 18 18 29 36 19 10 91 17 
PUSHW[ ]\011/* 1 value pushed */
426 
PUSHB[ ]\011/* 5 values pushed */
9 0 8 91 1 
PUSHW[ ]\011/* 1 value pushed */
426 
NPUSHB[ ]\011/* 12 values pushed */
0 19 0 35 52 0 24 25 12 25 40 10 
NPUSHW[ ]\011/* 9 values pushed */
444 17 683 9 399 8 444 1 683 
PUSHB[ ]\011/* 8 values pushed */
0 185 6 25 40 80 123 24 
PUSHW[ ]\011/* 1 value pushed */
291 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = yen;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"928 511 LINE SMOOTH",
"957.333 511 OFFCURVE",
"969 522.333 OFFCURVE",
"969 541 CURVE SMOOTH",
"969 558.333 OFFCURVE",
"957.333 571 OFFCURVE",
"928 571 CURVE SMOOTH",
"683 571 LINE",
"1023 1086 LINE",
"1071 1086 LINE SMOOTH",
"1112.333 1086 OFFCURVE",
"1128 1102.667 OFFCURVE",
"1128 1128 CURVE SMOOTH",
"1128 1153.333 OFFCURVE",
"1112.333 1170 OFFCURVE",
"1071 1170 CURVE SMOOTH",
"843 1170 LINE SMOOTH",
"803 1170 OFFCURVE",
"787 1153.333 OFFCURVE",
"787 1128 CURVE SMOOTH",
"787 1102.667 OFFCURVE",
"803 1086 OFFCURVE",
"843 1086 CURVE SMOOTH",
"925 1086 LINE",
"614 614 LINE",
"303 1086 LINE",
"384 1086 LINE SMOOTH",
"424 1086 OFFCURVE",
"440 1102.667 OFFCURVE",
"440 1128 CURVE SMOOTH",
"440 1153.333 OFFCURVE",
"424 1170 OFFCURVE",
"384 1170 CURVE SMOOTH",
"154 1170 LINE SMOOTH",
"114 1170 OFFCURVE",
"98 1153.333 OFFCURVE",
"98 1128 CURVE SMOOTH",
"98 1102.667 OFFCURVE",
"114 1086 OFFCURVE",
"154 1086 CURVE SMOOTH",
"204 1086 LINE",
"543 571 LINE",
"301 571 LINE SMOOTH",
"273 571 OFFCURVE",
"261 558.333 OFFCURVE",
"261 541 CURVE SMOOTH",
"261 523.667 OFFCURVE",
"273 511 OFFCURVE",
"301 511 CURVE SMOOTH",
"572 511 LINE",
"572 353 LINE",
"301 353 LINE SMOOTH",
"273 353 OFFCURVE",
"261 341.667 OFFCURVE",
"261 323 CURVE SMOOTH",
"261 305.667 OFFCURVE",
"273 293 OFFCURVE",
"301 293 CURVE SMOOTH",
"572 293 LINE",
"572 84 LINE",
"393 84 LINE SMOOTH",
"353 84 OFFCURVE",
"337 67.333 OFFCURVE",
"337 42 CURVE SMOOTH",
"337 18 OFFCURVE",
"353 0 OFFCURVE",
"393 0 CURVE SMOOTH",
"836 0 LINE SMOOTH",
"876 0 OFFCURVE",
"892 18 OFFCURVE",
"892 42 CURVE SMOOTH",
"892 67.333 OFFCURVE",
"876 84 OFFCURVE",
"836 84 CURVE SMOOTH",
"657 84 LINE",
"657 293 LINE",
"928 293 LINE SMOOTH",
"957.333 293 OFFCURVE",
"969 305.667 OFFCURVE",
"969 323 CURVE SMOOTH",
"969 341.667 OFFCURVE",
"957.333 353 OFFCURVE",
"928 353 CURVE SMOOTH",
"657 353 LINE",
"657 511 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
0 60 1 18 24 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 11 values pushed */
21 214 25 21 21 24 25 50 18 52 58 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 14 values pushed */
55 55 155 59 55 55 58 59 50 52 59 60 69 75 
PUSHW[ ]\011/* 4 values pushed */
696 72 72 273 
NPUSHB[ ]\011/* 11 values pushed */
76 72 72 75 76 50 69 76 77 17 11 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 11 values pushed */
14 214 10 14 14 11 10 50 17 51 45 
PUSHW[ ]\011/* 4 values pushed */
696 48 48 273 
NPUSHB[ ]\011/* 11 values pushed */
44 48 48 45 44 50 51 44 43 68 62 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 101 values pushed */
65 65 155 61 65 65 62 61 50 68 61 60 61 60 60 36 77 76 20 77 60 59 77 76 59 60 60 36 43 44 20 43 60 61 43 44 59 44 43 3 34 48 77 76 61 3 72 10 60 52 84 77 78 2 77 8 8 33 77 16 27 32 27 2 27 27 17 36 78 77 84 84 42 77 43 77 36 36 17 18 17 69 68 52 51 2 17 10 81 218 0 5 218 9 30 218 26 39 218 35 61 
PUSHW[ ]\011/* 1 value pushed */
692 
PUSHB[ ]\011/* 3 values pushed */
72 132 76 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 6 values pushed */
32 53 48 76 1 76 
PUSHW[ ]\011/* 1 value pushed */
415 
NPUSHB[ ]\011/* 12 values pushed */
0 10 10 9 9 10 36 35 26 25 25 34 
PUSHW[ ]\011/* 1 value pushed */
415 
PUSHB[ ]\011/* 5 values pushed */
59 64 32 53 59 
PUSHW[ ]\011/* 1 value pushed */
692 
NPUSHB[ ]\011/* 25 values pushed */
48 44 1 44 132 63 48 79 48 95 48 111 48 4 63 48 79 48 2 48 25 85 79 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SFVTL[0]\011/* SetFVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10001]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = mu1;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"393 -10.667 OFFCURVE",
"454.333 -33 OFFCURVE",
"527 -33 CURVE SMOOTH",
"661.667 -33 OFFCURVE",
"786.333 19 OFFCURVE",
"901 123 CURVE",
"901 0 LINE",
"1056 0 LINE SMOOTH",
"1096 0 OFFCURVE",
"1112 18 OFFCURVE",
"1112 42 CURVE SMOOTH",
"1112 67.333 OFFCURVE",
"1096 84 OFFCURVE",
"1056 84 CURVE SMOOTH",
"985 84 LINE",
"985 866 LINE",
"746 866 LINE SMOOTH",
"706 866 OFFCURVE",
"690 848 OFFCURVE",
"690 824 CURVE SMOOTH",
"690 798.667 OFFCURVE",
"706 781 OFFCURVE",
"746 781 CURVE SMOOTH",
"901 781 LINE",
"901 239 LINE",
"787 113.667 OFFCURVE",
"661.667 51 OFFCURVE",
"525 51 CURVE SMOOTH",
"421 51 OFFCURVE",
"343 129.667 OFFCURVE",
"343 239 CURVE SMOOTH",
"343 866 LINE",
"146 866 LINE SMOOTH",
"106 866 OFFCURVE",
"90 848 OFFCURVE",
"90 824 CURVE SMOOTH",
"90 798.667 OFFCURVE",
"106 781 OFFCURVE",
"146 781 CURVE SMOOTH",
"259 781 LINE",
"259 -330 LINE SMOOTH",
"259 -370 OFFCURVE",
"275.667 -386 OFFCURVE",
"301 -386 CURVE SMOOTH",
"326.333 -386 OFFCURVE",
"343 -370 OFFCURVE",
"343 -330 CURVE SMOOTH",
"343 34 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
9 15 12 47 8 8 34 15 24 30 27 78 23 23 34 30 33 39 0 36 1 36 70 32 32 34 39 0 39 22 41 30 15 6 39 10 20 33 43 11 4 14 23 40 32 31 15 32 1 32 26 46 16 1 32 7 7 64 8 160 8 2 8 25 45 71 97 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = mu1;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649.333 760.667 OFFCURVE",
"480.833 710 OFFCURVE",
"365.5 626 CURVE SMOOTH",
"250.167 542 OFFCURVE",
"176 408 OFFCURVE",
"176 256 CURVE SMOOTH",
"176 78.667 OFFCURVE",
"284 -30 OFFCURVE",
"448 -30 CURVE SMOOTH",
"621.333 -30 OFFCURVE",
"818.167 91.667 OFFCURVE",
"921.5 345 CURVE SMOOTH",
"973.167 471.667 OFFCURVE",
"999 618.667 OFFCURVE",
"999 786 CURVE SMOOTH",
"999 972 OFFCURVE",
"963.333 1102.333 OFFCURVE",
"892 1177 CURVE SMOOTH",
"843.333 1229 OFFCURVE",
"783.667 1255 OFFCURVE",
"713 1255 CURVE SMOOTH",
"617 1255 OFFCURVE",
"506.833 1194.167 OFFCURVE",
"439.5 1093.5 CURVE SMOOTH",
"405.833 1043.167 OFFCURVE",
"389 1008.667 OFFCURVE",
"389 990 CURVE SMOOTH",
"389 968.667 OFFCURVE",
"407.333 950 OFFCURVE",
"434 950 CURVE SMOOTH",
"442 950 OFFCURVE",
"449 952.167 OFFCURVE",
"455 956.5 CURVE SMOOTH",
"461 960.833 OFFCURVE",
"468.667 972 OFFCURVE",
"478 990 CURVE SMOOTH",
"551.333 1123.333 OFFCURVE",
"628.667 1169 OFFCURVE",
"714 1169 CURVE SMOOTH",
"788.667 1169 OFFCURVE",
"848.833 1127.833 OFFCURVE",
"885.5 1028.5 CURVE",
"843.333 1114 OFFCURVE",
"867.167 1078.167 OFFCURVE",
"885.5 1028.5 CURVE SMOOTH",
"903.833 978.833 OFFCURVE",
"914 891.333 OFFCURVE",
"916 766 CURVE"
);
},
{
closed = 1;
nodes = (
"902.667 580 OFFCURVE",
"887 498.667 OFFCURVE",
"867 436 CURVE SMOOTH",
"809.667 257.333 OFFCURVE",
"727.833 161.167 OFFCURVE",
"616.5 100.5 CURVE SMOOTH",
"560.833 70.167 OFFCURVE",
"506.333 55 OFFCURVE",
"453 55 CURVE SMOOTH",
"342.333 55 OFFCURVE",
"259 135.333 OFFCURVE",
"259 254 CURVE SMOOTH",
"259 383.333 OFFCURVE",
"330.5 513.333 OFFCURVE",
"452.5 584 CURVE SMOOTH",
"513.5 619.333 OFFCURVE",
"588.333 645 OFFCURVE",
"677 661 CURVE SMOOTH",
"731.667 671 OFFCURVE",
"810.667 677.333 OFFCURVE",
"914 680 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
73 27 1 42 91 25 3 0 91 33 33 25 10 118 4 91 17 2 7 91 13 160 28 33 52 0 91 21 26 49 39 91 28 25 48 99 188 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = summation;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"140 -302 LINE",
"663 456 LINE",
"156 1170 LINE",
"1011 1170 LINE",
"1011 936 LINE SMOOTH",
"1011 896 OFFCURVE",
"1027.667 880 OFFCURVE",
"1053 880 CURVE SMOOTH",
"1078.333 880 OFFCURVE",
"1095 896 OFFCURVE",
"1095 936 CURVE SMOOTH",
"1095 1255 LINE",
"60 1255 LINE",
"60 1176 LINE",
"566 448 LINE",
"43 -296 LINE",
"43 -386 LINE",
"1101 -386 LINE",
"1101 -37 LINE SMOOTH",
"1101 3 OFFCURVE",
"1083 19 OFFCURVE",
"1059 19 CURVE SMOOTH",
"1033.667 19 OFFCURVE",
"1016 3 OFFCURVE",
"1016 -37 CURVE SMOOTH",
"1016 -302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
24 25 24 23 25 30 10 11 20 10 10 11 11 12 11 10 12 30 23 24 20 23 23 24 24 
PUSHW[ ]\011/* 1 value pushed */
342 
PUSHB[ ]\011/* 5 values pushed */
11 11 9 13 4 
PUSHW[ ]\011/* 1 value pushed */
420 
NPUSHB[ ]\011/* 11 values pushed */
0 38 8 25 38 10 207 8 9 14 18 
PUSHW[ ]\011/* 1 value pushed */
414 
NPUSHB[ ]\011/* 29 values pushed */
22 38 14 23 38 14 12 207 13 2 22 21 0 1 38 7 7 8 102 21 38 15 15 14 26 27 24 38 11 
PUSHW[ ]\011/* 1 value pushed */
736 
NPUSHB[ ]\011/* 15 values pushed */
9 13 12 25 38 10 23 38 12 102 10 10 9 25 26 
PUSHW[ ]\011/* 4 values pushed */
294 121 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
MIRP[00101]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = product;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"906 -302 LINE SMOOTH",
"864.667 -302 OFFCURVE",
"849 -318.667 OFFCURVE",
"849 -344 CURVE SMOOTH",
"849 -369.333 OFFCURVE",
"864.667 -386 OFFCURVE",
"906 -386 CURVE SMOOTH",
"1119 -386 LINE SMOOTH",
"1159 -386 OFFCURVE",
"1175 -368 OFFCURVE",
"1175 -344 CURVE SMOOTH",
"1175 -318.667 OFFCURVE",
"1159 -302 OFFCURVE",
"1119 -302 CURVE SMOOTH",
"1055 -302 LINE",
"1055 1170 LINE",
"1119 1170 LINE SMOOTH",
"1159 1170 OFFCURVE",
"1175 1188 OFFCURVE",
"1175 1212 CURVE SMOOTH",
"1175 1237.333 OFFCURVE",
"1159 1255 OFFCURVE",
"1119 1255 CURVE SMOOTH",
"110 1255 LINE SMOOTH",
"73.273 1255 OFFCURVE",
"54 1242.165 OFFCURVE",
"54 1213 CURVE SMOOTH",
"54 1187.667 OFFCURVE",
"70 1170 OFFCURVE",
"110 1170 CURVE SMOOTH",
"175 1170 LINE",
"175 -302 LINE",
"110 -302 LINE SMOOTH",
"70 -302 OFFCURVE",
"54 -318.667 OFFCURVE",
"54 -344 CURVE SMOOTH",
"54 -369.333 OFFCURVE",
"70 -386 OFFCURVE",
"110 -386 CURVE SMOOTH",
"324 -386 LINE SMOOTH",
"364 -386 OFFCURVE",
"380 -368 OFFCURVE",
"380 -344 CURVE SMOOTH",
"380 -318.667 OFFCURVE",
"364 -302 OFFCURVE",
"324 -302 CURVE SMOOTH",
"259 -302 LINE",
"259 1170 LINE",
"970 1170 LINE",
"970 -302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
38 36 36 50 91 44 44 4 91 10 17 91 10 11 14 1 91 34 91 28 2 91 20 91 28 27 2 40 177 36 47 177 0 0 1 91 31 177 35 35 36 212 52 7 177 2 3 14 177 3 91 18 23 177 19 19 18 232 51 
PUSHW[ ]\011/* 3 values pushed */
740 341 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = product;
unicode = 220F;
},
{
glyphname = pi1;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"826 84 LINE",
"777 84 LINE",
"750 85 LINE",
"736 85 OFFCURVE",
"722.667 80 OFFCURVE",
"710 70 CURVE SMOOTH",
"701.333 62.667 OFFCURVE",
"697 54.667 OFFCURVE",
"697 46 CURVE SMOOTH",
"697 37.333 OFFCURVE",
"700 28.333 OFFCURVE",
"706 19 CURVE SMOOTH",
"710 12.333 OFFCURVE",
"716 7.5 OFFCURVE",
"724 4.5 CURVE SMOOTH",
"732 1.5 OFFCURVE",
"749.667 0 OFFCURVE",
"777 0 CURVE SMOOTH",
"1025 0 LINE",
"1042.333 2.667 OFFCURVE",
"1061 24 OFFCURVE",
"1061 44 CURVE SMOOTH",
"1061 78.924 OFFCURVE",
"1033.214 84 OFFCURVE",
"984 84 CURVE SMOOTH",
"910 84 LINE",
"910 782 LINE",
"970 782 LINE SMOOTH",
"1027.563 782 OFFCURVE",
"1060 784.332 OFFCURVE",
"1060 824 CURVE SMOOTH",
"1060 833.333 OFFCURVE",
"1057.333 842.333 OFFCURVE",
"1052 851 CURVE",
"1048 856.333 OFFCURVE",
"1042.5 860.167 OFFCURVE",
"1035.5 862.5 CURVE SMOOTH",
"1028.5 864.833 OFFCURVE",
"1006.667 866 OFFCURVE",
"970 866 CURVE SMOOTH",
"256 866 LINE SMOOTH",
"224.667 866 OFFCURVE",
"205.333 864.667 OFFCURVE",
"198 862 CURVE SMOOTH",
"179.333 855.333 OFFCURVE",
"168 839.667 OFFCURVE",
"168 825 CURVE SMOOTH",
"168 810.333 OFFCURVE",
"179.333 794 OFFCURVE",
"202 786 CURVE SMOOTH",
"209.333 783.333 OFFCURVE",
"230 782 OFFCURVE",
"264 782 CURVE SMOOTH",
"319 782 LINE",
"319 84 LINE",
"247 84 LINE SMOOTH",
"196.873 84 OFFCURVE",
"167 76.329 OFFCURVE",
"167 40 CURVE SMOOTH",
"167 24 OFFCURVE",
"177.333 8.333 OFFCURVE",
"192 3 CURVE",
"196.667 1 OFFCURVE",
"212.333 0 OFFCURVE",
"239 0 CURVE SMOOTH",
"453 0 LINE SMOOTH",
"481 0 OFFCURVE",
"497 1 OFFCURVE",
"501 3 CURVE",
"518.333 9.667 OFFCURVE",
"529 25.333 OFFCURVE",
"529 44 CURVE SMOOTH",
"529 61.333 OFFCURVE",
"519 76.667 OFFCURVE",
"503 82 CURVE SMOOTH",
"499 83.333 OFFCURVE",
"482.333 84 OFFCURVE",
"453 84 CURVE SMOOTH",
"403 84 LINE",
"403 782 LINE",
"826 782 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
55 53 48 52 54 55 48 49 1 67 46 59 37 26 59 36 1 59 37 37 36 67 59 55 84 57 3 59 13 57 14 24 23 22 59 22 59 14 14 13 42 195 47 47 53 195 48 32 0 68 136 62 31 195 25 25 24 1 2 32 62 48 62 2 62 
PUSHW[ ]\011/* 1 value pushed */
485 
PUSHB[ ]\011/* 7 values pushed */
8 136 2 32 24 195 19 
PUSHW[ ]\011/* 1 value pushed */
485 
PUSHB[ ]\011/* 8 values pushed */
69 36 6 13 10 244 172 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = pi1;
},
{
glyphname = integral;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"638.667 544.333 OFFCURVE",
"638 579.667 OFFCURVE",
"638 615 CURVE SMOOTH",
"638 759 OFFCURVE",
"645.5 863 OFFCURVE",
"660.5 927 CURVE SMOOTH",
"675.5 991 OFFCURVE",
"696 1036.333 OFFCURVE",
"722 1063 CURVE SMOOTH",
"756.667 1098.333 OFFCURVE",
"793.333 1116 OFFCURVE",
"832 1116 CURVE SMOOTH",
"849.333 1116 OFFCURVE",
"864 1111 OFFCURVE",
"876 1101 CURVE SMOOTH",
"885.333 1093.667 OFFCURVE",
"892 1079 OFFCURVE",
"896 1057 CURVE SMOOTH",
"906.667 995.667 OFFCURVE",
"929 979 OFFCURVE",
"957 979 CURVE SMOOTH",
"983.667 979 OFFCURVE",
"1004 1000 OFFCURVE",
"1004 1036 CURVE SMOOTH",
"1004 1105.333 OFFCURVE",
"935.333 1173 OFFCURVE",
"854 1173 CURVE SMOOTH",
"758 1173 OFFCURVE",
"660 1109.667 OFFCURVE",
"616 971 CURVE",
"671.167 1091.333 OFFCURVE",
"638 1040.333 OFFCURVE",
"616 971 CURVE SMOOTH",
"594 901.667 OFFCURVE",
"583 783 OFFCURVE",
"583 615 CURVE SMOOTH",
"583 585 OFFCURVE",
"583.667 554.667 OFFCURVE",
"585 524 CURVE SMOOTH",
"589 402 LINE SMOOTH",
"590.333 366.667 OFFCURVE",
"591 331.667 OFFCURVE",
"591 297 CURVE SMOOTH",
"591 151 OFFCURVE",
"583.333 46.167 OFFCURVE",
"568 -17.5 CURVE SMOOTH",
"552.667 -81.167 OFFCURVE",
"532.333 -126 OFFCURVE",
"507 -152 CURVE SMOOTH",
"472.333 -187.333 OFFCURVE",
"435.667 -205 OFFCURVE",
"397 -205 CURVE SMOOTH",
"379.667 -205 OFFCURVE",
"365 -200 OFFCURVE",
"353 -190 CURVE SMOOTH",
"344.333 -182.667 OFFCURVE",
"337.667 -168.333 OFFCURVE",
"333 -147 CURVE SMOOTH",
"321 -84.333 OFFCURVE",
"300 -68 OFFCURVE",
"272 -68 CURVE SMOOTH",
"244 -68 OFFCURVE",
"225 -87.333 OFFCURVE",
"225 -126 CURVE SMOOTH",
"225 -194 OFFCURVE",
"294 -262 OFFCURVE",
"374 -262 CURVE SMOOTH",
"470 -262 OFFCURVE",
"567.833 -199.833 OFFCURVE",
"612.5 -60.5 CURVE",
"556.833 -181.167 OFFCURVE",
"590.167 -130.167 OFFCURVE",
"612.5 -60.5 CURVE SMOOTH",
"634.833 9.167 OFFCURVE",
"646 128 OFFCURVE",
"646 296 CURVE SMOOTH",
"646 326 OFFCURVE",
"645.333 356 OFFCURVE",
"644 386 CURVE SMOOTH",
"640 509 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
62 8 15 17 10 27 28 25 30 0 1 52 42 44 37 3 15 17 20 24 31 13 42 44 40 47 55 79 34 1 34 19 77 7 43 193 37 
PUSHW[ ]\011/* 1 value pushed */
415 
PUSHB[ ]\011/* 8 values pushed */
3 52 52 55 30 16 193 10 
PUSHW[ ]\011/* 1 value pushed */
415 
NPUSHB[ ]\011/* 13 values pushed */
25 52 0 30 1 30 25 54 15 34 1 34 7 
PUSHW[ ]\011/* 1 value pushed */
306 
PUSHB[ ]\011/* 3 values pushed */
101 188 24 
CALL[ ]\011/* CallFunction */
SCANCTRL[ ]\011/* ScanConversionControl */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
48 51 31 33 21 24 4 6 50 51 49 51 2 6 5 38 22 37 48 33 52 95 0 32 31 21 6 24 40 1 23 24 51 32 47 95 1 23 4 20 40 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1229;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = ordfeminine;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"900 747 LINE SMOOTH",
"934.667 747 OFFCURVE",
"950 764.667 OFFCURVE",
"950 786 CURVE SMOOTH",
"950 807.333 OFFCURVE",
"934.667 824 OFFCURVE",
"900 824 CURVE SMOOTH",
"840 824 LINE",
"840 1145 LINE SMOOTH",
"840 1229 OFFCURVE",
"756 1311 OFFCURVE",
"608 1311 CURVE SMOOTH",
"570 1311 OFFCURVE",
"514 1301.667 OFFCURVE",
"440 1283 CURVE SMOOTH",
"400.667 1273 OFFCURVE",
"377.667 1264.5 OFFCURVE",
"371 1257.5 CURVE SMOOTH",
"364.333 1250.5 OFFCURVE",
"361 1242.333 OFFCURVE",
"361 1233 CURVE SMOOTH",
"361 1210.333 OFFCURVE",
"378.667 1194 OFFCURVE",
"400 1194 CURVE SMOOTH",
"405.333 1194 OFFCURVE",
"415.333 1196 OFFCURVE",
"430 1200 CURVE SMOOTH",
"506 1222.667 OFFCURVE",
"564.333 1234 OFFCURVE",
"605 1234 CURVE SMOOTH",
"658.333 1234 OFFCURVE",
"699 1223.667 OFFCURVE",
"727 1203 CURVE SMOOTH",
"748.333 1187 OFFCURVE",
"759 1167.667 OFFCURVE",
"759 1145 CURVE SMOOTH",
"759 1079 LINE",
"695 1089.667 OFFCURVE",
"639.667 1095 OFFCURVE",
"593 1095 CURVE SMOOTH",
"395.667 1095 OFFCURVE",
"296 1001.333 OFFCURVE",
"296 900 CURVE SMOOTH",
"296 805.333 OFFCURVE",
"376.333 727 OFFCURVE",
"519 727 CURVE SMOOTH",
"602.333 727 OFFCURVE",
"682.333 753.667 OFFCURVE",
"759 807 CURVE",
"759 747 LINE"
);
},
{
closed = 1;
nodes = (
"681.667 838 OFFCURVE",
"600.667 804 OFFCURVE",
"516 804 CURVE SMOOTH",
"421.333 804 OFFCURVE",
"377 848 OFFCURVE",
"377 900 CURVE SMOOTH",
"377 927.333 OFFCURVE",
"392 951.667 OFFCURVE",
"422 973 CURVE SMOOTH",
"464 1003 OFFCURVE",
"523.667 1018 OFFCURVE",
"601 1018 CURVE SMOOTH",
"661 1018 OFFCURVE",
"712.667 1013 OFFCURVE",
"758 1001 CURVE",
"759 906 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
40 34 
PUSHW[ ]\011/* 3 values pushed */
696 37 273 
NPUSHB[ ]\011/* 24 values pushed */
33 37 37 34 33 50 40 0 33 41 12 9 45 40 0 41 44 0 174 1 174 52 44 3 
PUSHW[ ]\011/* 1 value pushed */
698 
NPUSHB[ ]\011/* 28 values pushed */
45 44 0 9 16 9 2 9 9 52 17 44 29 32 36 13 13 41 12 52 42 52 41 91 15 33 1 33 
PUSHW[ ]\011/* 1 value pushed */
323 
NPUSHB[ ]\011/* 10 values pushed */
24 174 49 44 6 25 54 164 120 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"930 1176.333 OFFCURVE",
"792 1311 OFFCURVE",
"612 1311 CURVE SMOOTH",
"432 1311 OFFCURVE",
"294 1176.333 OFFCURVE",
"294 1019 CURVE SMOOTH",
"294 863 OFFCURVE",
"432 727 OFFCURVE",
"612 727 CURVE SMOOTH",
"792 727 OFFCURVE",
"930 861.667 OFFCURVE",
"930 1019 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"849 904.333 OFFCURVE",
"746.667 804 OFFCURVE",
"612 804 CURVE SMOOTH",
"477.333 804 OFFCURVE",
"375 904.333 OFFCURVE",
"375 1019 CURVE SMOOTH",
"375 1133.667 OFFCURVE",
"477.333 1234 OFFCURVE",
"612 1234 CURVE SMOOTH",
"746.667 1234 OFFCURVE",
"849 1135 OFFCURVE",
"849 1019 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
213 2 213 4 220 8 220 10 223 13 223 17 208 19 208 23 8 22 40 28 30 52 14 40 28 30 52 20 
PUSHW[ ]\011/* 1 value pushed */
-40 
PUSHB[ ]\011/* 4 values pushed */
28 30 52 16 
PUSHW[ ]\011/* 1 value pushed */
-40 
NPUSHB[ ]\011/* 14 values pushed */
28 30 52 13 40 18 21 52 22 40 18 21 52 19 
PUSHW[ ]\011/* 1 value pushed */
-40 
PUSHB[ ]\011/* 4 values pushed */
18 21 52 17 
PUSHW[ ]\011/* 1 value pushed */
-40 
NPUSHB[ ]\011/* 29 values pushed */
18 21 52 55 8 21 44 3 182 15 44 9 12 44 208 0 1 0 221 18 44 223 6 1 6 25 24 9 164 
PUSHW[ ]\011/* 2 values pushed */
261 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 42 values pushed */
1 23 16 8 18 40 0 14 10 12 40 1 20 4 18 40 0 22 2 12 40 1 17 7 15 40 1 13 11 15 40 1 19 5 21 40 0 23 1 21 40 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = Ohm;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"146 134 LINE SMOOTH",
"146 160 OFFCURVE",
"144.667 176.5 OFFCURVE",
"142 183.5 CURVE SMOOTH",
"139.333 190.5 OFFCURVE",
"134 196.667 OFFCURVE",
"126 202 CURVE",
"120.667 206 OFFCURVE",
"114 208 OFFCURVE",
"106 208 CURVE SMOOTH",
"90 208 OFFCURVE",
"74.333 197.667 OFFCURVE",
"69 183 CURVE SMOOTH",
"67 177 OFFCURVE",
"66 160.667 OFFCURVE",
"66 134 CURVE SMOOTH",
"66 0 LINE",
"509 0 LINE",
"509 245 LINE",
"278.333 273 OFFCURVE",
"145 416.333 OFFCURVE",
"145 647 CURVE SMOOTH",
"145 799 OFFCURVE",
"203.333 919.667 OFFCURVE",
"320 1009 CURVE SMOOTH",
"410.667 1078.333 OFFCURVE",
"511 1113 OFFCURVE",
"621 1113 CURVE SMOOTH",
"850.333 1113 OFFCURVE",
"1086 942.333 OFFCURVE",
"1086 653 CURVE SMOOTH",
"1086 435.667 OFFCURVE",
"957.333 283.667 OFFCURVE",
"716 245 CURVE",
"716 0 LINE",
"1161 0 LINE",
"1161 134 LINE SMOOTH",
"1162.165 180.61 OFFCURVE",
"1159.387 207 OFFCURVE",
"1122 207 CURVE SMOOTH",
"1108 207 OFFCURVE",
"1097.333 202.667 OFFCURVE",
"1090 194 CURVE SMOOTH",
"1082.667 185.333 OFFCURVE",
"1079 165.333 OFFCURVE",
"1079 134 CURVE SMOOTH",
"1079 84 LINE",
"798 84 LINE",
"798 179 LINE",
"1044.667 247 OFFCURVE",
"1168 410.667 OFFCURVE",
"1168 640 CURVE SMOOTH",
"1168 836 OFFCURVE",
"1067.333 1024.333 OFFCURVE",
"894 1119 CURVE SMOOTH",
"807.333 1166.333 OFFCURVE",
"714.667 1190 OFFCURVE",
"616 1190 CURVE SMOOTH",
"326.667 1190 OFFCURVE",
"61 972.667 OFFCURVE",
"61 642 CURVE SMOOTH",
"61 402 OFFCURVE",
"191 233.667 OFFCURVE",
"427 179 CURVE",
"427 84 LINE",
"146 84 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
41 32 36 36 123 32 113 37 155 32 148 37 189 29 176 40 8 2 15 16 28 41 34 37 8 2 90 41 
PUSHW[ ]\011/* 1 value pushed */
400 
PUSHB[ ]\011/* 4 values pushed */
1 15 90 28 
PUSHW[ ]\011/* 1 value pushed */
400 
NPUSHB[ ]\011/* 26 values pushed */
16 0 1 30 42 17 16 30 27 21 237 26 26 27 49 237 43 43 27 42 31 37 112 12 1 12 
PUSHW[ ]\011/* 1 value pushed */
737 
NPUSHB[ ]\011/* 9 values pushed */
28 15 16 38 37 127 5 1 5 
PUSHW[ ]\011/* 1 value pushed */
737 
NPUSHB[ ]\011/* 11 values pushed */
41 2 1 38 42 17 38 26 16 38 26 
PUSHW[ ]\011/* 4 values pushed */
598 28 27 724 
PUSHB[ ]\011/* 5 values pushed */
42 0 38 44 43 
PUSHW[ ]\011/* 4 values pushed */
598 41 42 736 
PUSHB[ ]\011/* 6 values pushed */
55 42 8 3 42 8 
PUSHW[ ]\011/* 3 values pushed */
294 340 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Ohm;
unicode = 2126;
},
{
glyphname = ae;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1190.667 720 OFFCURVE",
"1028.333 896 OFFCURVE",
"883 896 CURVE SMOOTH",
"835.667 896 OFFCURVE",
"790.333 879.333 OFFCURVE",
"747 846 CURVE SMOOTH",
"713.667 821.333 OFFCURVE",
"678.667 778.667 OFFCURVE",
"642 718 CURVE",
"600.667 828.667 OFFCURVE",
"504 896 OFFCURVE",
"412 896 CURVE SMOOTH",
"302.598 896 OFFCURVE",
"140 869.495 OFFCURVE",
"140 784 CURVE SMOOTH",
"140 762.667 OFFCURVE",
"159.667 743 OFFCURVE",
"181 743 CURVE SMOOTH",
"188.333 743 OFFCURVE",
"200.667 747.333 OFFCURVE",
"218 756 CURVE SMOOTH",
"284.667 790.667 OFFCURVE",
"363 811 OFFCURVE",
"407 811 CURVE SMOOTH",
"488.333 811 OFFCURVE",
"574 726.333 OFFCURVE",
"574 633 CURVE SMOOTH",
"574 508 LINE",
"515.333 525.333 OFFCURVE",
"455 534 OFFCURVE",
"395 534 CURVE SMOOTH",
"322.333 534 OFFCURVE",
"244.333 514.667 OFFCURVE",
"161 476 CURVE SMOOTH",
"46.333 422.667 OFFCURVE",
"16 373.333 OFFCURVE",
"16 300 CURVE SMOOTH",
"16 189.333 OFFCURVE",
"75.333 67.333 OFFCURVE",
"174 10 CURVE SMOOTH",
"223.333 -18.667 OFFCURVE",
"274.667 -33 OFFCURVE",
"328 -33 CURVE SMOOTH",
"412 -33 OFFCURVE",
"479.333 -0.333 OFFCURVE",
"574 101 CURVE",
"574 56 LINE SMOOTH",
"574 16 OFFCURVE",
"590.667 0 OFFCURVE",
"616 0 CURVE SMOOTH",
"641.333 0 OFFCURVE",
"658 16 OFFCURVE",
"658 56 CURVE SMOOTH",
"658 126 LINE",
"720.667 19.333 OFFCURVE",
"806.667 -33 OFFCURVE",
"888 -33 CURVE SMOOTH",
"928 -33 OFFCURVE",
"974.333 -20 OFFCURVE",
"1027 6 CURVE SMOOTH",
"1096.333 40.667 OFFCURVE",
"1147 75 OFFCURVE",
"1179 109 CURVE",
"1187.667 119 OFFCURVE",
"1192 129.333 OFFCURVE",
"1192 140 CURVE SMOOTH",
"1192 164 OFFCURVE",
"1175 182 OFFCURVE",
"1151 182 CURVE SMOOTH",
"1141 182 OFFCURVE",
"1130 177 OFFCURVE",
"1118 167 CURVE SMOOTH",
"1023.333 89.667 OFFCURVE",
"946.333 51 OFFCURVE",
"887 51 CURVE SMOOTH",
"841.667 51 OFFCURVE",
"798.667 76 OFFCURVE",
"758 126 CURVE SMOOTH",
"701.333 196 OFFCURVE",
"668 291.333 OFFCURVE",
"658 412 CURVE",
"1192 412 LINE"
);
},
{
closed = 1;
nodes = (
"658 496 LINE",
"672 600 OFFCURVE",
"705.667 682.667 OFFCURVE",
"759 744 CURVE SMOOTH",
"797.667 788.667 OFFCURVE",
"838 811 OFFCURVE",
"880 811 CURVE SMOOTH",
"924.667 811 OFFCURVE",
"966.333 789 OFFCURVE",
"1005 745 CURVE SMOOTH",
"1059.667 683 OFFCURVE",
"1093.667 600 OFFCURVE",
"1107 496 CURVE"
);
},
{
closed = 1;
nodes = (
"574 229 LINE",
"518 157 OFFCURVE",
"468.667 107.667 OFFCURVE",
"426 81 CURVE SMOOTH",
"394.667 61 OFFCURVE",
"361.333 51 OFFCURVE",
"326 51 CURVE SMOOTH",
"248.667 51 OFFCURVE",
"171.167 92.833 OFFCURVE",
"130.5 173.5 CURVE SMOOTH",
"110.167 213.833 OFFCURVE",
"100 253.667 OFFCURVE",
"100 293 CURVE SMOOTH",
"100 327 OFFCURVE",
"117.667 355.333 OFFCURVE",
"153 378 CURVE SMOOTH",
"225 426 OFFCURVE",
"308 450 OFFCURVE",
"402 450 CURVE SMOOTH",
"456.667 450 OFFCURVE",
"514 440 OFFCURVE",
"574 420 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 101 values pushed */
20 50 34 3 34 50 52 3 52 50 65 3 75 6 67 50 76 69 64 77 122 46 117 77 148 15 156 46 144 76 15 153 69 173 69 2 43 50 53 6 79 29 149 6 156 14 157 29 157 46 150 92 162 6 175 14 171 46 181 6 185 14 189 29 187 50 189 77 182 92 17 148 58 164 58 2 50 8 29 94 93 92 4 22 21 20 3 2 5 60 25 70 78 32 0 1 89 41 33 82 56 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 10 values pushed */
48 33 60 74 33 67 67 60 7 29 
PUSHW[ ]\011/* 1 value pushed */
763 
NPUSHB[ ]\011/* 29 values pushed */
21 136 25 10 10 197 5 33 18 90 33 32 32 18 11 92 156 29 29 28 3 59 94 59 21 64 21 22 76 
PUSHW[ ]\011/* 1 value pushed */
480 
NPUSHB[ ]\011/* 36 values pushed */
63 59 45 32 45 28 1 59 78 59 79 79 28 59 22 22 95 96 70 59 0 0 255 12 1 12 26 96 56 136 86 33 36 25 95 152 
PUSHW[ ]\011/* 3 values pushed */
290 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
RTG[ ]\011/* RoundToGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 36 values pushed */
83 89 33 40 84 37 38 37 39 37 2 6 88 38 34 37 83 40 86 31 0 89 33 86 31 0 85 37 82 31 1 87 35 90 31 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
52 20 65 
PUSHW[ ]\011/* 3 values pushed */
-20 61 -20 
PUSHB[ ]\011/* 5 values pushed */
84 25 2 30 88 
PUSHW[ ]\011/* 1 value pushed */
-25 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
7 20 2 
PUSHW[ ]\011/* 1 value pushed */
-20 
PUSHB[ ]\011/* 7 values pushed */
73 20 71 25 72 30 76 
PUSHW[ ]\011/* 1 value pushed */
-25 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = oslash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"410 0 OFFCURVE",
"509 -33 OFFCURVE",
"617 -33 CURVE SMOOTH",
"886.333 -33 OFFCURVE",
"1100 177.667 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 549 OFFCURVE",
"1059.333 652 OFFCURVE",
"978 740 CURVE",
"1100 865 LINE SMOOTH",
"1114.667 880.333 OFFCURVE",
"1122 893.333 OFFCURVE",
"1122 904 CURVE SMOOTH",
"1122 929.333 OFFCURVE",
"1102.667 947 OFFCURVE",
"1080 947 CURVE SMOOTH",
"1068 947 OFFCURVE",
"1054.667 939.667 OFFCURVE",
"1040 925 CURVE SMOOTH",
"915 797 LINE",
"827.667 863 OFFCURVE",
"728.333 896 OFFCURVE",
"617 896 CURVE SMOOTH",
"347.667 896 OFFCURVE",
"134 684 OFFCURVE",
"134 432 CURVE SMOOTH",
"134 314 OFFCURVE",
"175 210.667 OFFCURVE",
"257 122 CURVE",
"134 -4 LINE SMOOTH",
"119.333 -18.667 OFFCURVE",
"112 -31.333 OFFCURVE",
"112 -42 CURVE SMOOTH",
"112 -67.333 OFFCURVE",
"130 -86 OFFCURVE",
"154 -86 CURVE SMOOTH",
"166 -86 OFFCURVE",
"179.333 -78.333 OFFCURVE",
"194 -63 CURVE SMOOTH",
"320 66 LINE"
);
},
{
closed = 1;
nodes = (
"316 183 LINE",
"251.333 257 OFFCURVE",
"219 339.667 OFFCURVE",
"219 431 CURVE SMOOTH",
"219 637.667 OFFCURVE",
"394.333 811 OFFCURVE",
"617 811 CURVE SMOOTH",
"705 811 OFFCURVE",
"784.333 786 OFFCURVE",
"855 736 CURVE"
);
},
{
closed = 1;
nodes = (
"919 680 LINE",
"983 608 OFFCURVE",
"1015 525 OFFCURVE",
"1015 431 CURVE SMOOTH",
"1015 224.333 OFFCURVE",
"840.667 51 OFFCURVE",
"618 51 CURVE SMOOTH",
"529.333 51 OFFCURVE",
"449.667 76.333 OFFCURVE",
"379 127 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 98 values pushed */
41 8 32 39 16 16 9 9 16 32 39 17 17 8 0 25 40 47 24 24 1 40 47 25 25 0 47 40 39 32 25 16 9 0 8 45 37 47 40 39 32 25 16 9 0 8 34 42 24 1 1 32 8 17 20 8 8 17 1 8 37 11 17 45 24 23 27 8 42 30 24 14 17 7 34 33 14 7 42 33 30 11 1 11 23 93 27 33 32 45 48 45 64 45 80 45 4 45 
PUSHW[ ]\011/* 1 value pushed */
544 
NPUSHB[ ]\011/* 15 values pushed */
37 33 0 11 111 11 223 11 224 11 4 11 25 48 42 
PUSHW[ ]\011/* 3 values pushed */
263 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTPV[ ]\011/* SetFVectorToPVector */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RTG[ ]\011/* RoundToGrid */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
43 44 35 36 28 29 12 13 35 13 37 35 0 43 29 45 35 1 36 12 34 35 1 44 28 42 35 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1229;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = questiondown;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"715 679 OFFCURVE",
"763 723 OFFCURVE",
"763 783 CURVE SMOOTH",
"763 840.333 OFFCURVE",
"716.333 887 OFFCURVE",
"659 887 CURVE SMOOTH",
"575 887 LINE SMOOTH",
"519 887 OFFCURVE",
"471 842 OFFCURVE",
"471 782 CURVE SMOOTH",
"471 726 OFFCURVE",
"517.667 679 OFFCURVE",
"575 679 CURVE SMOOTH",
"659 679 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"425 231.333 OFFCURVE",
"330.833 176 OFFCURVE",
"290.5 128 CURVE SMOOTH",
"250.167 80 OFFCURVE",
"230 24.667 OFFCURVE",
"230 -38 CURVE SMOOTH",
"230 -242 OFFCURVE",
"378.667 -392 OFFCURVE",
"600 -392 CURVE SMOOTH",
"652 -392 OFFCURVE",
"704 -385.333 OFFCURVE",
"756 -372 CURVE SMOOTH",
"786.667 -364.667 OFFCURVE",
"854 -337.667 OFFCURVE",
"958 -291 CURVE",
"958 -169 LINE SMOOTH",
"958 -127.667 OFFCURVE",
"941.333 -112 OFFCURVE",
"916 -112 CURVE SMOOTH",
"890.667 -112 OFFCURVE",
"874 -127.667 OFFCURVE",
"874 -169 CURVE SMOOTH",
"874 -237 LINE",
"762 -290.333 OFFCURVE",
"695 -308 OFFCURVE",
"607 -308 CURVE SMOOTH",
"433.667 -308 OFFCURVE",
"314 -185 OFFCURVE",
"314 -37 CURVE SMOOTH",
"314 8.333 OFFCURVE",
"329 46.333 OFFCURVE",
"359 77 CURVE SMOOTH",
"412.333 131 OFFCURVE",
"512 184.667 OFFCURVE",
"658 238 CURVE",
"658 379 LINE SMOOTH",
"658 420.333 OFFCURVE",
"640 436 OFFCURVE",
"616 436 CURVE SMOOTH",
"590.667 436 OFFCURVE",
"573 420.333 OFFCURVE",
"573 379 CURVE SMOOTH",
"573 294 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
129 28 143 49 146 28 160 28 4 16 24 16 28 16 45 3 74 22 91 22 106 22 102 28 115 28 194 32 213 32 229 32 243 32 9 28 23 27 45 155 23 3 22 14 49 3 18 32 40 111 36 1 36 
PUSHW[ ]\011/* 1 value pushed */
355 
NPUSHB[ ]\011/* 45 values pushed */
29 33 44 14 1 197 8 7 79 18 159 18 2 18 18 44 8 15 59 21 21 32 22 95 22 2 22 4 179 11 154 22 22 50 51 26 33 64 47 144 47 208 47 3 47 
PUSHW[ ]\011/* 1 value pushed */
491 
PUSHB[ ]\011/* 7 values pushed */
50 33 59 95 38 1 38 
PUSHW[ ]\011/* 5 values pushed */
497 51 742 743 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"690 670 OFFCURVE",
"738 715 OFFCURVE",
"738 775 CURVE SMOOTH",
"738 831 OFFCURVE",
"691.333 878 OFFCURVE",
"634 878 CURVE SMOOTH",
"595 878 LINE SMOOTH",
"539 878 OFFCURVE",
"491 834 OFFCURVE",
"491 774 CURVE SMOOTH",
"491 716.667 OFFCURVE",
"537.667 670 OFFCURVE",
"595 670 CURVE SMOOTH",
"634 670 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"533.667 -289.333 OFFCURVE",
"533 -300.333 OFFCURVE",
"533 -307 CURVE SMOOTH",
"533 -356.333 OFFCURVE",
"568.333 -389 OFFCURVE",
"615 -389 CURVE SMOOTH",
"661.667 -389 OFFCURVE",
"696 -354.333 OFFCURVE",
"696 -309 CURVE SMOOTH",
"696 -301 OFFCURVE",
"695.667 -289.333 OFFCURVE",
"695 -274 CURVE SMOOTH",
"657 371 LINE SMOOTH",
"654.333 413.667 OFFCURVE",
"638 429 OFFCURVE",
"614 429 CURVE SMOOTH",
"591.333 429 OFFCURVE",
"574.667 413.667 OFFCURVE",
"572 371 CURVE SMOOTH",
"535 -274 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
198 25 1 14 15 30 22 24 21 27 
PUSHW[ ]\011/* 1 value pushed */
540 
NPUSHB[ ]\011/* 21 values pushed */
18 167 1 116 7 24 62 11 174 21 91 30 62 4 174 0 15 16 15 2 15 
PUSHW[ ]\011/* 1 value pushed */
585 
PUSHB[ ]\011/* 4 values pushed */
32 7 6 254 
PUSHW[ ]\011/* 2 values pushed */
334 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1000 543 LINE",
"1000 123 LINE SMOOTH",
"1000 83 OFFCURVE",
"1017.667 67 OFFCURVE",
"1043 67 CURVE SMOOTH",
"1067 67 OFFCURVE",
"1085 83 OFFCURVE",
"1085 123 CURVE SMOOTH",
"1085 627 LINE",
"80 627 LINE SMOOTH",
"40 627 OFFCURVE",
"24 610.333 OFFCURVE",
"24 585 CURVE SMOOTH",
"24 556.534 OFFCURVE",
"42.833 543 OFFCURVE",
"80 543 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
0 7 4 
PUSHW[ ]\011/* 1 value pushed */
445 
PUSHB[ ]\011/* 5 values pushed */
16 16 50 7 7 
PUSHW[ ]\011/* 1 value pushed */
281 
NPUSHB[ ]\011/* 12 values pushed */
47 12 1 12 8 9 36 15 15 16 25 17 
PUSHW[ ]\011/* 1 value pushed */
446 
PUSHB[ ]\011/* 2 values pushed */
129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = radical;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1060 1603 LINE",
"843 244 LINE",
"438 1067 LINE",
"137 916 LINE",
"171 852 LINE",
"369 943 LINE",
"865 -78 LINE",
"1135 1603 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
34 3 1 2 1 1 192 6 5 20 6 1 0 6 5 1 0 1 2 0 36 7 6 20 7 7 6 6 1 2 4 3 3 5 5 7 1 0 7 0 7 7 6 3 32 4 1 4 4 2 2 5 5 6 1 1 0 6 16 6 2 6 
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
RTG[ ]\011/* RoundToGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SLOOP[ ]\011/* SetLoopVariable */
SHP[1]\011/* ShiftPointByLastPoint */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTL[0]\011/* SetFVectorToLine */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTL[0]\011/* SetFVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = florin;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"658 960 LINE SMOOTH",
"658 1029.333 OFFCURVE",
"682.667 1090.667 OFFCURVE",
"732 1144 CURVE SMOOTH",
"768.667 1183.333 OFFCURVE",
"822 1203 OFFCURVE",
"892 1203 CURVE SMOOTH",
"922 1203 OFFCURVE",
"952 1198 OFFCURVE",
"982 1188 CURVE SMOOTH",
"1004 1181.333 OFFCURVE",
"1017 1178 OFFCURVE",
"1021 1178 CURVE SMOOTH",
"1043.667 1178 OFFCURVE",
"1062 1195 OFFCURVE",
"1062 1219 CURVE SMOOTH",
"1062 1238.333 OFFCURVE",
"1048.667 1253 OFFCURVE",
"1022 1263 CURVE SMOOTH",
"979.333 1279 OFFCURVE",
"933.333 1287 OFFCURVE",
"884 1287 CURVE SMOOTH",
"713.333 1287 OFFCURVE",
"573 1145.333 OFFCURVE",
"573 960 CURVE SMOOTH",
"573 780 LINE",
"373 780 LINE SMOOTH",
"333 780 OFFCURVE",
"317 762 OFFCURVE",
"317 738 CURVE SMOOTH",
"317 712.667 OFFCURVE",
"333 695 OFFCURVE",
"373 695 CURVE SMOOTH",
"573 695 LINE",
"573 134 LINE SMOOTH",
"573 63.333 OFFCURVE",
"549.667 2.333 OFFCURVE",
"503 -49 CURVE SMOOTH",
"467.667 -89 OFFCURVE",
"420 -109 OFFCURVE",
"360 -109 CURVE SMOOTH",
"326 -109 OFFCURVE",
"288 -101.667 OFFCURVE",
"246 -87 CURVE SMOOTH",
"232 -82.333 OFFCURVE",
"221.667 -80 OFFCURVE",
"215 -80 CURVE SMOOTH",
"193.667 -80 OFFCURVE",
"177 -97 OFFCURVE",
"177 -121 CURVE SMOOTH",
"177 -141 OFFCURVE",
"191.667 -156.667 OFFCURVE",
"221 -168 CURVE SMOOTH",
"265 -184.667 OFFCURVE",
"309.667 -193 OFFCURVE",
"355 -193 CURVE SMOOTH",
"521.667 -193 OFFCURVE",
"658 -53.667 OFFCURVE",
"658 121 CURVE SMOOTH",
"658 695 LINE",
"858 695 LINE SMOOTH",
"898 695 OFFCURVE",
"914 713 OFFCURVE",
"914 737 CURVE SMOOTH",
"914 762.333 OFFCURVE",
"898 780 OFFCURVE",
"858 780 CURVE SMOOTH",
"658 780 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
121 25 1 35 53 58 10 58 25 52 39 4 20 32 16 48 44 8 29 59 7 59 35 1 19 33 14 93 23 33 12 47 33 42 93 37 
PUSHW[ ]\011/* 1 value pushed */
409 
PUSHB[ ]\011/* 4 values pushed */
51 33 40 9 
PUSHW[ ]\011/* 3 values pushed */
409 40 562 
PUSHB[ ]\011/* 4 values pushed */
12 16 252 32 
PUSHW[ ]\011/* 4 values pushed */
360 28 4 360 
NPUSHB[ ]\011/* 11 values pushed */
44 252 8 0 59 36 36 0 28 1 28 
PUSHW[ ]\011/* 1 value pushed */
596 
PUSHB[ ]\011/* 4 values pushed */
56 244 127 24 
PUSHW[ ]\011/* 1 value pushed */
296 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = approxequal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"994.333 837 OFFCURVE",
"986.667 835 OFFCURVE",
"980 831 CURVE SMOOTH",
"973.333 827 OFFCURVE",
"960.333 812.667 OFFCURVE",
"941 788 CURVE SMOOTH",
"887.667 720 OFFCURVE",
"837.333 686 OFFCURVE",
"790 686 CURVE SMOOTH",
"774 686 OFFCURVE",
"757.833 690.833 OFFCURVE",
"741.5 700.5 CURVE SMOOTH",
"725.167 710.167 OFFCURVE",
"683.333 746 OFFCURVE",
"616 808 CURVE SMOOTH",
"532 884 OFFCURVE",
"486.667 904 OFFCURVE",
"432 904 CURVE SMOOTH",
"366.667 904 OFFCURVE",
"301 868.333 OFFCURVE",
"213 759 CURVE SMOOTH",
"195.667 737 OFFCURVE",
"187 720.667 OFFCURVE",
"187 710 CURVE SMOOTH",
"187 687.333 OFFCURVE",
"204.333 669 OFFCURVE",
"227 669 CURVE SMOOTH",
"233.667 669 OFFCURVE",
"239.833 670.833 OFFCURVE",
"245.5 674.5 CURVE SMOOTH",
"251.167 678.167 OFFCURVE",
"263.667 691 OFFCURVE",
"283 713 CURVE SMOOTH",
"323.667 760.333 OFFCURVE",
"355.667 790.667 OFFCURVE",
"379 804 CURVE SMOOTH",
"396.333 814.667 OFFCURVE",
"414.667 820 OFFCURVE",
"434 820 CURVE SMOOTH",
"450 820 OFFCURVE",
"467.833 814.333 OFFCURVE",
"487.5 803 CURVE SMOOTH",
"507.167 791.667 OFFCURVE",
"536 768 OFFCURVE",
"574 732 CURVE SMOOTH",
"630.667 678.667 OFFCURVE",
"674.333 643.5 OFFCURVE",
"705 626.5 CURVE SMOOTH",
"735.667 609.5 OFFCURVE",
"766 601 OFFCURVE",
"796 601 CURVE SMOOTH",
"893.333 601 OFFCURVE",
"1043 750.333 OFFCURVE",
"1043 797 CURVE SMOOTH",
"1043 818.333 OFFCURVE",
"1024.333 837 OFFCURVE",
"1003 837 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"994.333 499 OFFCURVE",
"986.667 497 OFFCURVE",
"980 493 CURVE SMOOTH",
"973.333 489 OFFCURVE",
"960.333 474.667 OFFCURVE",
"941 450 CURVE SMOOTH",
"887.667 382 OFFCURVE",
"837.333 348 OFFCURVE",
"790 348 CURVE SMOOTH",
"774 348 OFFCURVE",
"757.833 352.833 OFFCURVE",
"741.5 362.5 CURVE SMOOTH",
"725.167 372.167 OFFCURVE",
"683.333 408 OFFCURVE",
"616 470 CURVE SMOOTH",
"532 546 OFFCURVE",
"486.667 566 OFFCURVE",
"432 566 CURVE SMOOTH",
"366.667 566 OFFCURVE",
"301 530.333 OFFCURVE",
"213 421 CURVE SMOOTH",
"195.667 399 OFFCURVE",
"187 382.667 OFFCURVE",
"187 372 CURVE SMOOTH",
"187 349.333 OFFCURVE",
"204.333 332 OFFCURVE",
"227 332 CURVE SMOOTH",
"233.667 332 OFFCURVE",
"239.833 333.667 OFFCURVE",
"245.5 337 CURVE SMOOTH",
"251.167 340.333 OFFCURVE",
"263.667 353 OFFCURVE",
"283 375 CURVE SMOOTH",
"323.667 422.333 OFFCURVE",
"355.667 452.667 OFFCURVE",
"379 466 CURVE SMOOTH",
"396.333 476.667 OFFCURVE",
"414.667 482 OFFCURVE",
"434 482 CURVE SMOOTH",
"450 482 OFFCURVE",
"467.833 476.333 OFFCURVE",
"487.5 465 CURVE SMOOTH",
"507.167 453.667 OFFCURVE",
"536 430 OFFCURVE",
"574 394 CURVE SMOOTH",
"630.667 340.667 OFFCURVE",
"674.333 305.5 OFFCURVE",
"705 288.5 CURVE SMOOTH",
"735.667 271.5 OFFCURVE",
"766 263 OFFCURVE",
"796 263 CURVE SMOOTH",
"893.333 263 OFFCURVE",
"1043 412.333 OFFCURVE",
"1043 459 CURVE SMOOTH",
"1043 480.333 OFFCURVE",
"1024.333 499 OFFCURVE",
"1003 499 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 147 values pushed */
36 9 42 30 35 47 42 68 4 89 67 106 54 152 54 185 74 4 89 29 106 16 152 16 185 36 4 8 25 8 63 24 25 24 63 205 3 204 8 202 9 202 10 206 25 206 35 205 41 207 46 202 47 202 48 206 63 207 73 220 3 223 8 220 9 218 10 218 25 222 35 220 41 220 46 217 47 217 48 220 63 222 73 28 48 46 67 69 4 41 60 10 8 29 31 4 3 22 67 65 50 46 44 48 69 50 71 29 27 12 8 6 10 31 12 33 31 29 29 91 10 8 20 10 10 8 69 67 67 91 48 46 20 48 48 46 39 210 71 91 44 174 57 210 50 91 65 
PUSHW[ ]\011/* 1 value pushed */
267 
NPUSHB[ ]\011/* 33 values pushed */
6 0 210 33 91 6 174 19 210 12 91 27 41 3 60 22 111 3 1 15 3 111 3 2 3 26 77 22 25 76 99 171 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = uni2206;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1137 0 LINE",
"681 1153 LINE",
"527 1153 LINE",
"83 0 LINE"
);
},
{
closed = 1;
nodes = (
"575 1097 LINE",
"633 1097 LINE",
"1031 71 LINE",
"187 71 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
7 3 1 1 0 0 48 4 7 20 4 4 7 2 3 3 48 5 6 20 5 5 6 7 6 77 1 2 5 4 48 3 0 3 167 2 77 0 5 1 5 248 6 
PUSHW[ ]\011/* 1 value pushed */
271 
NPUSHB[ ]\011/* 11 values pushed */
7 0 220 1 77 4 248 15 7 1 7 
PUSHW[ ]\011/* 1 value pushed */
770 
PUSHB[ ]\011/* 7 values pushed */
8 2 0 10 176 123 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SFVTCA[1]\011/* SetFVectorToAxis */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = uni2206;
unicode = 2206;
},
{
glyphname = guillemotleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"547 24 LINE SMOOTH",
"564.333 8.667 OFFCURVE",
"579 1 OFFCURVE",
"591 1 CURVE SMOOTH",
"615 1 OFFCURVE",
"633 19 OFFCURVE",
"633 43 CURVE SMOOTH",
"633 54.333 OFFCURVE",
"625.333 68.333 OFFCURVE",
"610 85 CURVE SMOOTH",
"297 434 LINE",
"610 784 LINE SMOOTH",
"625.333 800.667 OFFCURVE",
"633 814.333 OFFCURVE",
"633 825 CURVE SMOOTH",
"633 850.333 OFFCURVE",
"615 868 OFFCURVE",
"591 868 CURVE SMOOTH",
"579 868 OFFCURVE",
"564.333 860 OFFCURVE",
"547 844 CURVE SMOOTH",
"99 434 LINE"
);
},
{
closed = 1;
nodes = (
"1016 24 LINE SMOOTH",
"1033.333 8.667 OFFCURVE",
"1048 1 OFFCURVE",
"1060 1 CURVE SMOOTH",
"1084 1 OFFCURVE",
"1102 19 OFFCURVE",
"1102 43 CURVE SMOOTH",
"1102 54.333 OFFCURVE",
"1094.667 68.333 OFFCURVE",
"1080 85 CURVE SMOOTH",
"767 434 LINE",
"1080 784 LINE SMOOTH",
"1094.667 800.667 OFFCURVE",
"1102 814.333 OFFCURVE",
"1102 825 CURVE SMOOTH",
"1102 850.333 OFFCURVE",
"1084 868 OFFCURVE",
"1060 868 CURVE SMOOTH",
"1048 868 OFFCURVE",
"1033.333 860 OFFCURVE",
"1016 844 CURVE SMOOTH",
"568 434 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 106 values pushed */
26 64 39 53 28 64 39 53 10 64 39 53 8 64 39 53 26 64 44 53 28 64 44 53 10 64 44 53 8 64 44 53 28 64 34 36 52 26 64 34 36 52 10 64 34 36 52 8 64 34 36 52 80 8 80 10 80 26 80 28 4 79 8 64 10 79 26 64 28 4 33 28 35 15 10 17 23 26 19 5 8 1 28 77 35 220 18 26 77 19 220 18 10 77 17 220 0 8 77 1 220 0 0 28 1 28 
PUSHW[ ]\011/* 3 values pushed */
346 35 697 
PUSHB[ ]\011/* 5 values pushed */
27 0 26 1 26 
PUSHW[ ]\011/* 3 values pushed */
346 19 697 
PUSHB[ ]\011/* 6 values pushed */
27 171 15 18 1 18 
NPUSHW[ ]\011/* 11 values pushed */
495 9 10 346 17 697 9 8 346 1 697 
NPUSHB[ ]\011/* 9 values pushed */
0 9 1 9 171 0 25 36 79 
PUSHW[ ]\011/* 2 values pushed */
288 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"212 844 LINE SMOOTH",
"195.333 860 OFFCURVE",
"181 868 OFFCURVE",
"169 868 CURVE SMOOTH",
"145 868 OFFCURVE",
"127 850 OFFCURVE",
"127 826 CURVE SMOOTH",
"127 814.667 OFFCURVE",
"134.333 800.667 OFFCURVE",
"149 784 CURVE SMOOTH",
"462 434 LINE",
"149 85 LINE SMOOTH",
"134.333 68.333 OFFCURVE",
"127 54.333 OFFCURVE",
"127 43 CURVE SMOOTH",
"127 19 OFFCURVE",
"145 1 OFFCURVE",
"169 1 CURVE SMOOTH",
"181 1 OFFCURVE",
"195.333 8.667 OFFCURVE",
"212 24 CURVE SMOOTH",
"661 434 LINE"
);
},
{
closed = 1;
nodes = (
"682 844 LINE SMOOTH",
"664.667 860 OFFCURVE",
"650 868 OFFCURVE",
"638 868 CURVE SMOOTH",
"614 868 OFFCURVE",
"596 850 OFFCURVE",
"596 826 CURVE SMOOTH",
"596 814.667 OFFCURVE",
"603.333 800.667 OFFCURVE",
"618 784 CURVE SMOOTH",
"931 434 LINE",
"618 85 LINE SMOOTH",
"603.333 68.333 OFFCURVE",
"596 54.333 OFFCURVE",
"596 43 CURVE SMOOTH",
"596 19 OFFCURVE",
"614 1 OFFCURVE",
"638 1 CURVE SMOOTH",
"650 1 OFFCURVE",
"664.667 8.667 OFFCURVE",
"682 24 CURVE SMOOTH",
"1130 434 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 90 values pushed */
73 8 70 10 73 26 70 28 4 94 8 95 10 94 26 95 28 132 6 132 12 130 24 130 30 8 64 6 65 8 65 10 66 12 64 24 65 26 65 28 66 30 209 0 211 9 214 10 209 18 211 26 211 27 214 28 15 33 35 28 23 19 26 13 17 10 5 1 8 26 77 19 220 18 28 77 35 220 18 10 77 17 220 0 8 77 1 220 0 1 
PUSHW[ ]\011/* 1 value pushed */
346 
PUSHB[ ]\011/* 4 values pushed */
8 255 0 17 
PUSHW[ ]\011/* 1 value pushed */
346 
PUSHB[ ]\011/* 5 values pushed */
10 255 9 171 0 
PUSHW[ ]\011/* 4 values pushed */
495 27 19 346 
PUSHB[ ]\011/* 4 values pushed */
26 255 18 35 
PUSHW[ ]\011/* 1 value pushed */
346 
NPUSHB[ ]\011/* 10 values pushed */
28 255 27 171 18 26 37 134 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"306 129 OFFCURVE",
"260 175 OFFCURVE",
"204 175 CURVE SMOOTH",
"146.667 175 OFFCURVE",
"101 129 OFFCURVE",
"101 73 CURVE SMOOTH",
"101 15.667 OFFCURVE",
"146.667 -30 OFFCURVE",
"204 -30 CURVE SMOOTH",
"260 -30 OFFCURVE",
"306 15.667 OFFCURVE",
"306 73 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"716 129 OFFCURVE",
"670.333 175 OFFCURVE",
"613 175 CURVE SMOOTH",
"557 175 OFFCURVE",
"511 129 OFFCURVE",
"511 73 CURVE SMOOTH",
"511 15.667 OFFCURVE",
"557 -30 OFFCURVE",
"613 -30 CURVE SMOOTH",
"670.333 -30 OFFCURVE",
"716 15.667 OFFCURVE",
"716 73 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 129 OFFCURVE",
"1082.333 175 OFFCURVE",
"1025 175 CURVE SMOOTH",
"967.667 175 OFFCURVE",
"923 129 OFFCURVE",
"923 73 CURVE SMOOTH",
"923 15.667 OFFCURVE",
"969 -30 OFFCURVE",
"1025 -30 CURVE SMOOTH",
"1082.333 -30 OFFCURVE",
"1128 15.667 OFFCURVE",
"1128 73 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
9 138 3 21 138 15 33 138 27 27 15 15 3 11 24 138 32 30 1 48 30 64 30 80 30 128 30 160 30 208 30 6 30 220 12 138 32 18 1 48 18 64 18 80 18 128 18 160 18 208 18 6 18 220 0 138 47 6 63 6 79 6 128 6 160 6 5 6 25 36 79 123 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, -73, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -92, 268}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -1, 268}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"861 566 LINE",
"861 508 LINE SMOOTH",
"861 468 OFFCURVE",
"879 452 OFFCURVE",
"903 452 CURVE SMOOTH",
"928.333 452 OFFCURVE",
"945 468 OFFCURVE",
"945 508 CURVE SMOOTH",
"946 707 LINE SMOOTH",
"946 748.333 OFFCURVE",
"928.333 764 OFFCURVE",
"903 764 CURVE SMOOTH",
"879 764 OFFCURVE",
"861 748.333 OFFCURVE",
"861 707 CURVE SMOOTH",
"861 650 LINE",
"698 650 LINE",
"698 1086 LINE",
"1086 1086 LINE",
"1086 850 LINE SMOOTH",
"1086 810 OFFCURVE",
"1104 794 OFFCURVE",
"1128 794 CURVE SMOOTH",
"1153.333 794 OFFCURVE",
"1171 810 OFFCURVE",
"1171 850 CURVE SMOOTH",
"1171 1170 LINE",
"527 1170 LINE SMOOTH",
"400.333 1170 OFFCURVE",
"325.667 1141 OFFCURVE",
"243 1081 CURVE SMOOTH",
"133.667 1001 OFFCURVE",
"82.333 931.5 OFFCURVE",
"45 793.5 CURVE SMOOTH",
"26.333 724.5 OFFCURVE",
"17 654 OFFCURVE",
"17 582 CURVE SMOOTH",
"17 226 OFFCURVE",
"236.333 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"1212 0 LINE",
"1212 277 LINE SMOOTH",
"1212 317 OFFCURVE",
"1195.333 333 OFFCURVE",
"1170 333 CURVE SMOOTH",
"1144.667 333 OFFCURVE",
"1128 317 OFFCURVE",
"1128 277 CURVE SMOOTH",
"1128 84 LINE",
"698 84 LINE",
"698 566 LINE"
);
},
{
closed = 1;
nodes = (
"613 84 LINE",
"546 84 LINE SMOOTH",
"279.333 84 OFFCURVE",
"101 270.333 OFFCURVE",
"101 581 CURVE SMOOTH",
"101 738.333 OFFCURVE",
"145.167 869 OFFCURVE",
"224.5 953 CURVE SMOOTH",
"303.833 1037 OFFCURVE",
"383.333 1086 OFFCURVE",
"546 1086 CURVE SMOOTH",
"613 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 103 values pushed */
52 8 29 23 15 26 1 26 86 30 30 29 23 47 41 15 44 31 44 2 44 41 48 48 29 41 3 9 6 53 2 2 29 9 34 40 0 37 16 37 2 37 41 33 33 29 40 33 38 48 48 11 30 50 30 22 21 2 58 30 10 11 41 38 48 40 38 48 33 233 32 32 31 1 49 59 30 1 1 0 0 60 61 207 23 1 23 65 9 26 61 55 37 14 25 60 21 2 11 8 69 108 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 40 values pushed */
51 57 12 20 53 54 52 54 2 6 16 15 17 15 18 15 19 15 4 6 51 20 55 46 0 57 12 55 46 0 54 15 50 46 1 56 13 58 46 0 
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1229;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 727.667 OFFCURVE",
"1029.667 897 OFFCURVE",
"883 897 CURVE SMOOTH",
"773 897 OFFCURVE",
"683.667 817.667 OFFCURVE",
"615 659 CURVE",
"553.667 816.333 OFFCURVE",
"437.667 897 OFFCURVE",
"335 897 CURVE SMOOTH",
"259.667 897 OFFCURVE",
"191.667 860 OFFCURVE",
"131 786 CURVE SMOOTH",
"55.667 693.333 OFFCURVE",
"18 577.667 OFFCURVE",
"18 439 CURVE SMOOTH",
"18 295.667 OFFCURVE",
"57 175.667 OFFCURVE",
"135 79 CURVE SMOOTH",
"194.333 4.333 OFFCURVE",
"262.333 -33 OFFCURVE",
"339 -33 CURVE SMOOTH",
"440.333 -33 OFFCURVE",
"548.333 42 OFFCURVE",
"615 214 CURVE",
"676.333 47.333 OFFCURVE",
"787.667 -33 OFFCURVE",
"889 -33 CURVE SMOOTH",
"935.667 -33 OFFCURVE",
"989.667 -16 OFFCURVE",
"1051 18 CURVE SMOOTH",
"1095 42 OFFCURVE",
"1132.667 67.333 OFFCURVE",
"1164 94 CURVE SMOOTH",
"1184 110.667 OFFCURVE",
"1194 125.333 OFFCURVE",
"1194 138 CURVE SMOOTH",
"1194 160.667 OFFCURVE",
"1174.333 180 OFFCURVE",
"1153 180 CURVE SMOOTH",
"1146.333 180 OFFCURVE",
"1139.833 178.333 OFFCURVE",
"1133.5 175 CURVE SMOOTH",
"1127.167 171.667 OFFCURVE",
"1108.667 158.333 OFFCURVE",
"1078 135 CURVE SMOOTH",
"1004 79 OFFCURVE",
"941.667 51 OFFCURVE",
"891 51 CURVE SMOOTH",
"828.333 51 OFFCURVE",
"763 90.333 OFFCURVE",
"707 209 CURVE SMOOTH",
"679 268.333 OFFCURVE",
"662.333 336.333 OFFCURVE",
"657 413 CURVE",
"1193 413 LINE"
);
},
{
closed = 1;
nodes = (
"574 194.667 OFFCURVE",
"443.333 51 OFFCURVE",
"338 51 CURVE SMOOTH",
"234 51 OFFCURVE",
"102 194.667 OFFCURVE",
"102 432 CURVE SMOOTH",
"102 669.333 OFFCURVE",
"232.667 813 OFFCURVE",
"338 813 CURVE SMOOTH",
"442 813 OFFCURVE",
"574 669.333 OFFCURVE",
"574 432 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 498 LINE",
"674.667 606.667 OFFCURVE",
"708.667 690 OFFCURVE",
"760 748 CURVE SMOOTH",
"798.667 791.333 OFFCURVE",
"839.333 813 OFFCURVE",
"882 813 CURVE SMOOTH",
"924.667 813 OFFCURVE",
"965.667 791 OFFCURVE",
"1005 747 CURVE SMOOTH",
"1056.333 689 OFFCURVE",
"1090.333 606 OFFCURVE",
"1107 498 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
2 -12 
NPUSHB[ ]\011/* 255 values pushed */
111 23 96 26 96 32 96 45 101 46 100 48 96 49 111 52 185 39 215 48 10 30 54 27 55 42 54 42 55 54 2 54 6 59 54 133 2 143 53 138 54 140 55 150 2 145 14 156 53 156 54 155 55 149 59 150 60 164 3 164 28 170 42 164 43 164 45 164 48 175 53 175 54 173 55 163 59 180 2 179 15 181 28 178 48 187 53 190 54 181 55 181 59 181 60 37 234 43 233 45 230 49 228 51 249 43 251 45 245 49 7 6 24 10 43 10 45 5 49 6 51 15 59 22 6 26 43 26 45 19 49 26 56 37 6 44 43 44 45 34 49 46 55 50 6 61 55 133 7 134 49 146 3 149 6 158 43 158 45 148 49 148 51 156 56 165 6 169 15 172 43 172 45 164 49 164 51 169 56 179 3 176 6 180 7 181 26 188 43 188 45 181 49 179 51 188 55 188 59 44 41 8 22 36 41 61 60 53 9 6 2 0 7 13 2 22 1 10 36 60 57 61 10 197 19 53 61 32 0 1 1 19 44 33 33 57 33 38 38 33 5 33 19 50 33 25 25 19 1 59 41 41 62 143 13 
NPUSHB[ ]\011/* 21 values pushed */
175 13 191 13 3 13 26 63 47 33 191 29 1 29 25 62 33 7 19 11 152 
PUSHW[ ]\011/* 3 values pushed */
290 24 300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
45 49 26 32 31 38 27 37 45 32 47 35 0 49 26 47 35 0 46 30 44 35 1 48 28 50 35 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 5 values pushed */
46 16 20 16 37 
PUSHW[ ]\011/* 3 values pushed */
-16 52 -22 
PUSHB[ ]\011/* 2 values pushed */
42 22 
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHPIX[ ]\011/* ShiftZoneByPixel */";
};
width = 1229;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = endash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1068 543 OFFCURVE",
"1084 559.667 OFFCURVE",
"1084 585 CURVE SMOOTH",
"1084 610.333 OFFCURVE",
"1068 627 OFFCURVE",
"1028 627 CURVE SMOOTH",
"201 627 LINE SMOOTH",
"161 627 OFFCURVE",
"145 610.333 OFFCURVE",
"145 585 CURVE SMOOTH",
"145 559.667 OFFCURVE",
"161 543 OFFCURVE",
"201 543 CURVE SMOOTH",
"1028 543 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
7 36 0 11 26 15 4 25 14 80 129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1227 544 OFFCURVE",
"1243 562 OFFCURVE",
"1243 586 CURVE SMOOTH",
"1243 611.333 OFFCURVE",
"1227 629 OFFCURVE",
"1187 629 CURVE SMOOTH",
"41 629 LINE SMOOTH",
"1 629 OFFCURVE",
"-15 611.333 OFFCURVE",
"-15 586 CURVE SMOOTH",
"-15 562 OFFCURVE",
"1 544 OFFCURVE",
"41 544 CURVE SMOOTH",
"1187 544 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
7 36 0 11 26 15 4 25 14 60 49 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"472 778 LINE SMOOTH",
"488.667 751.333 OFFCURVE",
"506.333 738 OFFCURVE",
"525 738 CURVE SMOOTH",
"554.333 738 OFFCURVE",
"577 761 OFFCURVE",
"577 789 CURVE SMOOTH",
"577 797 OFFCURVE",
"574 808.667 OFFCURVE",
"568 824 CURVE SMOOTH",
"397 1255 LINE",
"179 1255 LINE"
);
},
{
closed = 1;
nodes = (
"904 778 LINE SMOOTH",
"920.667 751.333 OFFCURVE",
"938.667 738 OFFCURVE",
"958 738 CURVE SMOOTH",
"987.333 738 OFFCURVE",
"1009 761 OFFCURVE",
"1009 789 CURVE SMOOTH",
"1009 797 OFFCURVE",
"1006 808.667 OFFCURVE",
"1000 824 CURVE SMOOTH",
"829 1255 LINE",
"611 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
11 2 27 2 2 3 13 1 7 17 255 10 10 1 12 91 19 11 116 10 243 19 218 21 1 116 0 243 9 
PUSHW[ ]\011/* 1 value pushed */
755 
PUSHB[ ]\011/* 6 values pushed */
20 1 0 99 188 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"228 824 LINE SMOOTH",
"222 808.667 OFFCURVE",
"219 796.667 OFFCURVE",
"219 788 CURVE SMOOTH",
"219 761.333 OFFCURVE",
"242 738 OFFCURVE",
"270 738 CURVE SMOOTH",
"290 738 OFFCURVE",
"308 751.333 OFFCURVE",
"324 778 CURVE SMOOTH",
"617 1255 LINE",
"400 1255 LINE"
);
},
{
closed = 1;
nodes = (
"661 824 LINE SMOOTH",
"654.333 808.667 OFFCURVE",
"651 796.667 OFFCURVE",
"651 788 CURVE SMOOTH",
"651 761.333 OFFCURVE",
"673.667 738 OFFCURVE",
"703 738 CURVE SMOOTH",
"722.333 738 OFFCURVE",
"740.333 751.333 OFFCURVE",
"757 778 CURVE SMOOTH",
"1049 1255 LINE",
"832 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
8 18 1 4 14 255 10 10 1 10 116 11 243 17 193 12 
PUSHW[ ]\011/* 1 value pushed */
755 
NPUSHB[ ]\011/* 15 values pushed */
21 0 116 1 243 7 193 2 218 20 1 0 199 171 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"807 703 LINE SMOOTH",
"825 669.667 OFFCURVE",
"846 653 OFFCURVE",
"870 653 CURVE SMOOTH",
"904.667 653 OFFCURVE",
"931 680 OFFCURVE",
"931 712 CURVE SMOOTH",
"931 719.333 OFFCURVE",
"930 727 OFFCURVE",
"928 735 CURVE SMOOTH",
"783 1255 LINE",
"509 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
38 1 1 132 1 1 1 4 7 182 0 1 210 2 193 0 243 0 9 1 9 
PUSHW[ ]\011/* 1 value pushed */
766 
PUSHB[ ]\011/* 3 values pushed */
10 0 0 
PUSHW[ ]\011/* 3 values pushed */
322 261 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"296 735 LINE SMOOTH",
"294 727 OFFCURVE",
"293 719.667 OFFCURVE",
"293 713 CURVE SMOOTH",
"293 679.667 OFFCURVE",
"319.667 653 OFFCURVE",
"353 653 CURVE SMOOTH",
"378.333 653 OFFCURVE",
"400 669.667 OFFCURVE",
"418 703 CURVE SMOOTH",
"715 1255 LINE",
"442 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
44 0 124 0 2 0 7 4 182 1 9 193 2 0 178 1 243 15 2 31 2 2 2 
PUSHW[ ]\011/* 1 value pushed */
366 
PUSHB[ ]\011/* 4 values pushed */
10 1 0 164 
PUSHW[ ]\011/* 2 values pushed */
285 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = divide;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"696 1023.333 OFFCURVE",
"659 1059 OFFCURVE",
"615 1059 CURVE SMOOTH",
"569.667 1059 OFFCURVE",
"533 1022 OFFCURVE",
"533 978 CURVE SMOOTH",
"533 932.667 OFFCURVE",
"569.667 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"659 896 OFFCURVE",
"696 932.667 OFFCURVE",
"696 978 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1020.667 543 OFFCURVE",
"1049.667 543.667 OFFCURVE",
"1055 545 CURVE SMOOTH",
"1072.333 549 OFFCURVE",
"1085 566.333 OFFCURVE",
"1085 585 CURVE SMOOTH",
"1085 603.667 OFFCURVE",
"1072.333 621 OFFCURVE",
"1055 625 CURVE SMOOTH",
"1049.667 626.333 OFFCURVE",
"1020.667 627 OFFCURVE",
"968 627 CURVE SMOOTH",
"261 627 LINE SMOOTH",
"208.333 627 OFFCURVE",
"179.333 626.333 OFFCURVE",
"174 625 CURVE SMOOTH",
"156.667 621 OFFCURVE",
"144 603.667 OFFCURVE",
"144 585 CURVE SMOOTH",
"144 566.333 OFFCURVE",
"156.667 549 OFFCURVE",
"174 545 CURVE SMOOTH",
"179.333 543.667 OFFCURVE",
"208.333 543 OFFCURVE",
"261 543 CURVE SMOOTH",
"968 543 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"696 237.333 OFFCURVE",
"659.333 273 OFFCURVE",
"614 273 CURVE SMOOTH",
"570 273 OFFCURVE",
"533 237.333 OFFCURVE",
"533 192 CURVE SMOOTH",
"533 146.667 OFFCURVE",
"570 111 OFFCURVE",
"614 111 CURVE SMOOTH",
"659.333 111 OFFCURVE",
"696 146.667 OFFCURVE",
"696 192 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
48 29 65 29 94 18 128 29 144 29 175 18 190 18 255 18 8 15 18 49 29 2 37 112 43 
PUSHW[ ]\011/* 1 value pushed */
308 
PUSHB[ ]\011/* 4 values pushed */
13 9 112 3 
PUSHW[ ]\011/* 1 value pushed */
308 
NPUSHB[ ]\011/* 22 values pushed */
24 23 12 23 91 13 34 112 40 40 0 112 6 248 29 204 18 25 46 80 129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = lozenge;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"546 1422 LINE",
"155 709 LINE",
"546 0 LINE",
"657 0 LINE",
"1075 709 LINE",
"657 1422 LINE"
);
},
{
closed = 1;
nodes = (
"962 709 LINE",
"603 94 LINE",
"263 709 LINE",
"603 1325 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
41 6 37 8 2 9 7 1 1 4 4 3 6 
PUSHW[ ]\011/* 1 value pushed */
692 
PUSHB[ ]\011/* 4 values pushed */
0 5 0 8 
PUSHW[ ]\011/* 1 value pushed */
692 
NPUSHB[ ]\011/* 17 values pushed */
64 2 3 8 3 77 2 77 8 8 0 77 5 77 6 32 1 
PUSHW[ ]\011/* 7 values pushed */
692 9 317 6 317 7 692 
PUSHB[ ]\011/* 6 values pushed */
4 25 10 80 129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = fraction;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1116.333 906.333 OFFCURVE",
"1127 920.667 OFFCURVE",
"1127 936 CURVE SMOOTH",
"1127 958.667 OFFCURVE",
"1106.667 978 OFFCURVE",
"1084 978 CURVE SMOOTH",
"1076 978 OFFCURVE",
"1064.667 973.333 OFFCURVE",
"1050 964 CURVE SMOOTH",
"134 374 LINE SMOOTH",
"113.333 360.667 OFFCURVE",
"103 346.333 OFFCURVE",
"103 331 CURVE SMOOTH",
"103 307 OFFCURVE",
"122 289 OFFCURVE",
"146 289 CURVE SMOOTH",
"154 289 OFFCURVE",
"165.333 293.667 OFFCURVE",
"180 303 CURVE SMOOTH",
"1095 893 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
3 3 11 14 14 6 
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = fraction;
unicode = "2044,2215";
},
{
glyphname = Euro;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"132.667 288 OFFCURVE",
"242.333 128 OFFCURVE",
"401 36 CURVE SMOOTH",
"480.333 -10 OFFCURVE",
"569.333 -33 OFFCURVE",
"668 -33 CURVE SMOOTH",
"780 -33 OFFCURVE",
"882.333 1.333 OFFCURVE",
"969 68 CURVE SMOOTH",
"1037.5 120.692 OFFCURVE",
"1103 192.205 OFFCURVE",
"1103 222 CURVE SMOOTH",
"1103 248 OFFCURVE",
"1089.667 261 OFFCURVE",
"1063 261 CURVE SMOOTH",
"1049.667 261 OFFCURVE",
"1037 254 OFFCURVE",
"1025 240 CURVE SMOOTH",
"919.667 114 OFFCURVE",
"800 51 OFFCURVE",
"666 51 CURVE SMOOTH",
"426 51 OFFCURVE",
"225.667 252 OFFCURVE",
"215 488 CURVE",
"769 488 LINE SMOOTH",
"797 488 OFFCURVE",
"811 498 OFFCURVE",
"811 518 CURVE SMOOTH",
"811 538 OFFCURVE",
"797 548 OFFCURVE",
"769 548 CURVE SMOOTH",
"212 548 LINE",
"212 638 LINE",
"798 638 LINE SMOOTH",
"826 638 OFFCURVE",
"840 648 OFFCURVE",
"840 668 CURVE SMOOTH",
"840 688 OFFCURVE",
"826 698 OFFCURVE",
"798 698 CURVE SMOOTH",
"215 698 LINE",
"229.667 864.667 OFFCURVE",
"316.833 991.667 OFFCURVE",
"433.5 1061 CURVE SMOOTH",
"491.833 1095.667 OFFCURVE",
"558 1113 OFFCURVE",
"632 1113 CURVE SMOOTH",
"806.667 1113 OFFCURVE",
"979 1000.333 OFFCURVE",
"987 875 CURVE SMOOTH",
"989 841 OFFCURVE",
"1003 824 OFFCURVE",
"1029 824 CURVE SMOOTH",
"1057 824 OFFCURVE",
"1071 843 OFFCURVE",
"1071 881 CURVE SMOOTH",
"1071 1114 LINE SMOOTH",
"1071 1151.333 OFFCURVE",
"1057 1170 OFFCURVE",
"1029 1170 CURVE SMOOTH",
"1001 1170 OFFCURVE",
"987 1151.333 OFFCURVE",
"987 1114 CURVE SMOOTH",
"987 1055 LINE",
"887 1149.667 OFFCURVE",
"767.667 1197 OFFCURVE",
"629 1197 CURVE SMOOTH",
"362.333 1197 OFFCURVE",
"144.333 976.667 OFFCURVE",
"131 698 CURVE",
"47 698 LINE SMOOTH",
"20.333 698 OFFCURVE",
"7 688 OFFCURVE",
"7 668 CURVE SMOOTH",
"7 648 OFFCURVE",
"20.333 638 OFFCURVE",
"47 638 CURVE SMOOTH",
"127 638 LINE",
"127 548 LINE",
"47 548 LINE SMOOTH",
"20.333 548 OFFCURVE",
"7 538 OFFCURVE",
"7 518 CURVE SMOOTH",
"7 498 OFFCURVE",
"20.333 488 OFFCURVE",
"47 488 CURVE SMOOTH",
"130 488 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 83 values pushed */
148 64 164 64 2 47 33 57 65 73 65 3 82 49 116 49 116 50 3 122 33 122 34 2 117 52 181 52 181 53 3 38 14 54 14 57 30 54 52 4 100 52 107 64 105 65 164 52 4 237 30 228 50 228 52 3 138 59 138 60 2 251 30 249 33 2 201 30 217 30 233 33 3 175 33 175 34 176 14 192 14 4 49 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
17 19 52 49 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 21 values pushed */
9 11 52 244 49 1 35 13 41 13 159 7 223 7 2 7 64 25 33 52 7 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 36 values pushed */
9 11 52 7 42 6 48 0 6 64 9 11 52 6 6 16 62 111 26 1 15 26 31 26 111 26 3 26 21 2 112 55 176 55 2 55 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 48 values pushed */
24 28 52 55 51 37 62 9 31 37 16 3 45 38 42 18 38 24 57 6 10 3 6 35 48 41 13 0 42 38 31 6 1 127 6 143 6 223 6 3 207 6 239 6 255 6 3 6 
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP3[ ]\011/* DeltaExceptionP3 */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[0]\011/* ShiftPointByLastPoint */
SHP[0]\011/* ShiftPointByLastPoint */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[11101]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[10100]\011/* MoveDirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[10100]\011/* MoveDirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIAP[1]\011/* MoveIndirectAbsPt */
MDRP[01101]\011/* MoveDirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
MDRP[11101]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDRP[10110]\011/* MoveDirectRelPt */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP3[ ]\011/* DeltaExceptionP3 */
MDRP[01101]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = guilsinglleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"555 24 LINE SMOOTH",
"572.333 8.667 OFFCURVE",
"587 1 OFFCURVE",
"599 1 CURVE SMOOTH",
"623 1 OFFCURVE",
"641 19 OFFCURVE",
"641 43 CURVE SMOOTH",
"641 54.333 OFFCURVE",
"633.333 68.333 OFFCURVE",
"618 85 CURVE SMOOTH",
"305 434 LINE",
"618 784 LINE SMOOTH",
"633.333 800.667 OFFCURVE",
"641 814.333 OFFCURVE",
"641 825 CURVE SMOOTH",
"641 850.333 OFFCURVE",
"623 868 OFFCURVE",
"599 868 CURVE SMOOTH",
"587 868 OFFCURVE",
"572.333 860 OFFCURVE",
"555 844 CURVE SMOOTH",
"107 434 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
127 0 132 9 2 6 9 1 9 6 0 0 9 3 15 10 3 6 15 0 31 0 2 0 25 18 6 15 12 31 12 2 12 26 19 79 
PUSHW[ ]\011/* 2 values pushed */
333 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"681 844 LINE SMOOTH",
"664.333 860 OFFCURVE",
"650 868 OFFCURVE",
"638 868 CURVE SMOOTH",
"614 868 OFFCURVE",
"596 850 OFFCURVE",
"596 826 CURVE SMOOTH",
"596 814.667 OFFCURVE",
"603.333 800.667 OFFCURVE",
"618 784 CURVE SMOOTH",
"931 434 LINE",
"618 85 LINE SMOOTH",
"603.333 68.333 OFFCURVE",
"596 54.333 OFFCURVE",
"596 43 CURVE SMOOTH",
"596 19 OFFCURVE",
"614 1 OFFCURVE",
"638 1 CURVE SMOOTH",
"650 1 OFFCURVE",
"664.333 8.667 OFFCURVE",
"681 24 CURVE SMOOTH",
"1130 434 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
112 0 1 139 9 1 9 0 12 0 9 3 15 6 3 10 0 0 16 0 2 0 26 19 12 0 6 16 6 2 6 
PUSHW[ ]\011/* 1 value pushed */
595 
PUSHB[ ]\011/* 4 values pushed */
18 202 123 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fi;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"871 1297 LINE",
"871 1080 LINE",
"995 1080 LINE",
"995 1297 LINE"
);
},
{
closed = 1;
nodes = (
"477 781 LINE SMOOTH",
"517 781 OFFCURVE",
"533 799 OFFCURVE",
"533 823 CURVE SMOOTH",
"533 848.333 OFFCURVE",
"517 866 OFFCURVE",
"477 866 CURVE SMOOTH",
"328 866 LINE",
"328 990 LINE SMOOTH",
"328 1045.333 OFFCURVE",
"343.667 1091.667 OFFCURVE",
"375 1129 CURVE SMOOTH",
"398.333 1156.333 OFFCURVE",
"429 1170 OFFCURVE",
"467 1170 CURVE SMOOTH",
"497.667 1170 OFFCURVE",
"540 1161.667 OFFCURVE",
"594 1145 CURVE SMOOTH",
"604 1141.667 OFFCURVE",
"611.333 1140 OFFCURVE",
"616 1140 CURVE SMOOTH",
"637.333 1140 OFFCURVE",
"654 1157 OFFCURVE",
"654 1181 CURVE SMOOTH",
"654 1201.667 OFFCURVE",
"640 1217 OFFCURVE",
"612 1227 CURVE SMOOTH",
"559.333 1245.667 OFFCURVE",
"510.333 1255 OFFCURVE",
"465 1255 CURVE SMOOTH",
"349 1255 OFFCURVE",
"243 1146 OFFCURVE",
"243 990 CURVE SMOOTH",
"243 866 LINE",
"82 866 LINE SMOOTH",
"42 866 OFFCURVE",
"26 848 OFFCURVE",
"26 824 CURVE SMOOTH",
"26 798.667 OFFCURVE",
"42 781 OFFCURVE",
"82 781 CURVE SMOOTH",
"243 781 LINE",
"243 84 LINE",
"70 84 LINE SMOOTH",
"30 84 OFFCURVE",
"14 67.333 OFFCURVE",
"14 42 CURVE SMOOTH",
"14 18 OFFCURVE",
"30 0 OFFCURVE",
"70 0 CURVE SMOOTH",
"477 0 LINE SMOOTH",
"517 0 OFFCURVE",
"533 18 OFFCURVE",
"533 42 CURVE SMOOTH",
"533 67.333 OFFCURVE",
"517 84 OFFCURVE",
"477 84 CURVE SMOOTH",
"328 84 LINE",
"328 781 LINE"
);
},
{
closed = 1;
nodes = (
"793 866 LINE SMOOTH",
"753 866 OFFCURVE",
"737 848 OFFCURVE",
"737 824 CURVE SMOOTH",
"737 798.667 OFFCURVE",
"753 781 OFFCURVE",
"793 781 CURVE SMOOTH",
"912 781 LINE",
"912 84 LINE",
"751 84 LINE SMOOTH",
"709.667 84 OFFCURVE",
"695 67.333 OFFCURVE",
"695 42 CURVE SMOOTH",
"695 18 OFFCURVE",
"711 0 OFFCURVE",
"751 0 CURVE SMOOTH",
"1151 0 LINE SMOOTH",
"1192.333 0 OFFCURVE",
"1208 18 OFFCURVE",
"1208 42 CURVE SMOOTH",
"1208 67.333 OFFCURVE",
"1192.333 84 OFFCURVE",
"1151 84 CURVE SMOOTH",
"996 84 LINE",
"996 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 98 values pushed */
41 25 1 28 22 25 78 29 29 34 22 19 13 16 78 20 20 34 13 56 50 53 78 4 4 34 50 72 66 69 78 73 73 34 66 6 12 9 78 5 5 34 12 59 65 0 62 1 62 78 58 58 34 65 75 81 78 47 74 74 34 81 41 37 5 3 197 2 89 35 59 40 93 44 33 33 0 22 59 50 81 50 49 28 6 66 65 13 12 10 37 37 82 83 74 73 3 2 
PUSHW[ ]\011/* 1 value pushed */
351 
PUSHB[ ]\011/* 8 values pushed */
0 1 84 57 58 48 5 78 
PUSHW[ ]\011/* 3 values pushed */
404 53 355 
PUSHB[ ]\011/* 6 values pushed */
4 4 5 58 32 73 
PUSHW[ ]\011/* 1 value pushed */
432 
NPUSHB[ ]\011/* 9 values pushed */
5 32 30 25 198 47 20 1 20 
PUSHW[ ]\011/* 1 value pushed */
491 
PUSHB[ ]\011/* 4 values pushed */
82 152 97 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"482 781 LINE SMOOTH",
"522 781 OFFCURVE",
"538 799 OFFCURVE",
"538 823 CURVE SMOOTH",
"538 848.333 OFFCURVE",
"522 866 OFFCURVE",
"482 866 CURVE SMOOTH",
"333 866 LINE",
"333 990 LINE SMOOTH",
"333 1045.333 OFFCURVE",
"348.667 1091.667 OFFCURVE",
"380 1129 CURVE SMOOTH",
"403.333 1156.333 OFFCURVE",
"434 1170 OFFCURVE",
"472 1170 CURVE SMOOTH",
"502.667 1170 OFFCURVE",
"545 1161.667 OFFCURVE",
"599 1145 CURVE SMOOTH",
"609 1141.667 OFFCURVE",
"616.333 1140 OFFCURVE",
"621 1140 CURVE SMOOTH",
"642.333 1140 OFFCURVE",
"659 1157 OFFCURVE",
"659 1181 CURVE SMOOTH",
"659 1201.667 OFFCURVE",
"645 1217 OFFCURVE",
"617 1227 CURVE SMOOTH",
"564.333 1245.667 OFFCURVE",
"515.333 1255 OFFCURVE",
"470 1255 CURVE SMOOTH",
"354 1255 OFFCURVE",
"248 1146 OFFCURVE",
"248 990 CURVE SMOOTH",
"248 866 LINE",
"87 866 LINE SMOOTH",
"47 866 OFFCURVE",
"31 848 OFFCURVE",
"31 824 CURVE SMOOTH",
"31 798.667 OFFCURVE",
"47 781 OFFCURVE",
"87 781 CURVE SMOOTH",
"248 781 LINE",
"248 84 LINE",
"75 84 LINE SMOOTH",
"35 84 OFFCURVE",
"19 67.333 OFFCURVE",
"19 42 CURVE SMOOTH",
"19 18 OFFCURVE",
"35 0 OFFCURVE",
"75 0 CURVE SMOOTH",
"482 0 LINE SMOOTH",
"522 0 OFFCURVE",
"538 18 OFFCURVE",
"538 42 CURVE SMOOTH",
"538 67.333 OFFCURVE",
"522 84 OFFCURVE",
"482 84 CURVE SMOOTH",
"333 84 LINE",
"333 781 LINE"
);
},
{
closed = 1;
nodes = (
"797 1255 LINE SMOOTH",
"757 1255 OFFCURVE",
"741 1237 OFFCURVE",
"741 1213 CURVE SMOOTH",
"741 1187.667 OFFCURVE",
"757 1170 OFFCURVE",
"797 1170 CURVE SMOOTH",
"916 1170 LINE",
"916 84 LINE",
"755 84 LINE SMOOTH",
"713.667 84 OFFCURVE",
"699 67.333 OFFCURVE",
"699 42 CURVE SMOOTH",
"699 18 OFFCURVE",
"715 0 OFFCURVE",
"755 0 CURVE SMOOTH",
"1161 0 LINE SMOOTH",
"1202.333 0 OFFCURVE",
"1218 18 OFFCURVE",
"1218 42 CURVE SMOOTH",
"1218 67.333 OFFCURVE",
"1202.333 84 OFFCURVE",
"1161 84 CURVE SMOOTH",
"1000 84 LINE",
"1000 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 95 values pushed */
41 21 1 24 18 21 78 25 25 34 18 15 9 12 78 16 16 34 9 52 46 49 78 0 0 34 46 68 62 65 78 69 69 34 62 2 8 5 78 1 1 34 8 55 61 0 58 1 58 78 54 54 34 61 71 77 74 47 70 70 34 77 37 33 1 31 59 36 93 40 33 77 29 0 18 59 46 46 45 24 6 62 61 9 8 10 33 33 78 79 70 69 53 54 74 
PUSHW[ ]\011/* 3 values pushed */
395 33 362 
NPUSHB[ ]\011/* 9 values pushed */
44 44 0 1 26 16 54 32 69 
PUSHW[ ]\011/* 1 value pushed */
432 
PUSHB[ ]\011/* 8 values pushed */
21 198 1 32 47 16 1 16 
PUSHW[ ]\011/* 1 value pushed */
491 
PUSHB[ ]\011/* 4 values pushed */
78 152 97 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = daggerdbl;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"921 784 LINE SMOOTH",
"962.333 784 OFFCURVE",
"978 802 OFFCURVE",
"978 826 CURVE SMOOTH",
"978 851.333 OFFCURVE",
"962.333 869 OFFCURVE",
"921 869 CURVE SMOOTH",
"656 869 LINE",
"657 1198 LINE SMOOTH",
"657 1239.333 OFFCURVE",
"639.333 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239.333 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 869 LINE",
"307 869 LINE SMOOTH",
"267 869 OFFCURVE",
"251 851 OFFCURVE",
"251 827 CURVE SMOOTH",
"251 801.667 OFFCURVE",
"267 784 OFFCURVE",
"307 784 CURVE SMOOTH",
"572 784 LINE",
"572 349 LINE",
"307 349 LINE SMOOTH",
"267 349 OFFCURVE",
"251 331 OFFCURVE",
"251 307 CURVE SMOOTH",
"251 281.667 OFFCURVE",
"267 264 OFFCURVE",
"307 264 CURVE SMOOTH",
"572 264 LINE",
"572 -73 LINE SMOOTH",
"572 -114.333 OFFCURVE",
"590 -130 OFFCURVE",
"614 -130 CURVE SMOOTH",
"639.333 -130 OFFCURVE",
"656 -114.333 OFFCURVE",
"656 -73 CURVE SMOOTH",
"656 264 LINE",
"921 264 LINE SMOOTH",
"962.333 264 OFFCURVE",
"978 282 OFFCURVE",
"978 306 CURVE SMOOTH",
"978 331.333 OFFCURVE",
"962.333 349 OFFCURVE",
"921 349 CURVE SMOOTH",
"656 349 LINE",
"656 784 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
8 2 5 181 9 9 50 2 24 18 21 181 25 25 50 18 33 27 30 181 34 34 50 27 49 43 46 181 0 0 50 43 38 0 13 
PUSHW[ ]\011/* 1 value pushed */
368 
PUSHB[ ]\011/* 3 values pushed */
18 91 2 
PUSHW[ ]\011/* 1 value pushed */
371 
NPUSHB[ ]\011/* 25 values pushed */
27 91 43 43 42 34 6 9 52 10 52 0 52 41 36 35 16 35 34 25 25 50 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = periodcentered;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"523.667 772 OFFCURVE",
"461 713.333 OFFCURVE",
"461 636 CURVE SMOOTH",
"461 561.333 OFFCURVE",
"522.333 501 OFFCURVE",
"597 501 CURVE SMOOTH",
"633 501 LINE SMOOTH",
"706.333 501 OFFCURVE",
"769 559.667 OFFCURVE",
"769 637 CURVE SMOOTH",
"769 711.667 OFFCURVE",
"707.667 772 OFFCURVE",
"633 772 CURVE SMOOTH",
"597 772 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 5 values pushed */
0 315 8 4 315 
PUSHB[ ]\011/* 4 values pushed */
11 25 14 109 
PUSHW[ ]\011/* 2 values pushed */
286 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = periodcentered;
unicode = 2219;
},
{
glyphname = quotesinglbase;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"302 -242 LINE SMOOTH",
"300 -250 OFFCURVE",
"299 -257.333 OFFCURVE",
"299 -264 CURVE SMOOTH",
"299 -297.333 OFFCURVE",
"325.667 -325 OFFCURVE",
"359 -325 CURVE SMOOTH",
"384.333 -325 OFFCURVE",
"406 -308 OFFCURVE",
"424 -274 CURVE SMOOTH",
"721 277 LINE",
"448 277 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
4 182 1 9 193 2 243 0 178 1 
PUSHW[ ]\011/* 1 value pushed */
535 
PUSHB[ ]\011/* 3 values pushed */
10 1 109 
PUSHW[ ]\011/* 2 values pushed */
285 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"233 -174 LINE SMOOTH",
"227 -189.333 OFFCURVE",
"224 -201.333 OFFCURVE",
"224 -210 CURVE SMOOTH",
"224 -236.667 OFFCURVE",
"247 -260 OFFCURVE",
"275 -260 CURVE SMOOTH",
"295 -260 OFFCURVE",
"313 -246.667 OFFCURVE",
"329 -220 CURVE SMOOTH",
"622 256 LINE",
"405 256 LINE"
);
},
{
closed = 1;
nodes = (
"666 -174 LINE SMOOTH",
"659.333 -189.333 OFFCURVE",
"656 -201.333 OFFCURVE",
"656 -210 CURVE SMOOTH",
"656 -236.667 OFFCURVE",
"678.667 -260 OFFCURVE",
"708 -260 CURVE SMOOTH",
"727.333 -260 OFFCURVE",
"745.333 -246.667 OFFCURVE",
"762 -220 CURVE SMOOTH",
"1054 256 LINE",
"837 256 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
8 18 11 4 14 255 10 10 1 19 91 12 10 116 11 243 32 12 1 12 
PUSHW[ ]\011/* 1 value pushed */
755 
NPUSHB[ ]\011/* 18 values pushed */
21 9 91 2 0 116 1 243 32 2 1 2 218 20 1 250 171 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"431 1104 OFFCURVE",
"415.333 1147.667 OFFCURVE",
"384 1191 CURVE SMOOTH",
"342 1249.667 OFFCURVE",
"296 1279 OFFCURVE",
"246 1279 CURVE SMOOTH",
"147.333 1279 OFFCURVE",
"61 1149.333 OFFCURVE",
"61 1060 CURVE SMOOTH",
"61 1016 OFFCURVE",
"76.667 972.333 OFFCURVE",
"108 929 CURVE SMOOTH",
"150 870.333 OFFCURVE",
"196 841 OFFCURVE",
"246 841 CURVE SMOOTH",
"296 841 OFFCURVE",
"342 870.667 OFFCURVE",
"384 930 CURVE SMOOTH",
"415.333 972.667 OFFCURVE",
"431 1016 OFFCURVE",
"431 1060 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"369 986.667 OFFCURVE",
"290 902 OFFCURVE",
"246 902 CURVE SMOOTH",
"202 902 OFFCURVE",
"123 988 OFFCURVE",
"123 1060 CURVE SMOOTH",
"123 1133.333 OFFCURVE",
"200.667 1218 OFFCURVE",
"246 1218 CURVE SMOOTH",
"291.333 1218 OFFCURVE",
"369 1133.333 OFFCURVE",
"369 1060 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1027.667 814 OFFCURVE",
"1035.333 818 OFFCURVE",
"1038 822 CURVE",
"1043.333 828 OFFCURVE",
"1046 834.667 OFFCURVE",
"1046 842 CURVE SMOOTH",
"1046 858 OFFCURVE",
"1031.333 872 OFFCURVE",
"1018 872 CURVE SMOOTH",
"1012.667 872 OFFCURVE",
"1005.667 870.333 OFFCURVE",
"997 867 CURVE",
"219 614 LINE SMOOTH",
"206.333 610 OFFCURVE",
"198.667 606 OFFCURVE",
"196 602 CURVE",
"190.667 596 OFFCURVE",
"188 589.333 OFFCURVE",
"188 582 CURVE SMOOTH",
"188 566 OFFCURVE",
"202.667 552 OFFCURVE",
"216 552 CURVE SMOOTH",
"221.333 552 OFFCURVE",
"228.333 553.667 OFFCURVE",
"237 557 CURVE",
"1015 810 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"624 242 OFFCURVE",
"608.667 285.333 OFFCURVE",
"578 328 CURVE SMOOTH",
"535.333 386.667 OFFCURVE",
"489 416 OFFCURVE",
"439 416 CURVE SMOOTH",
"340.333 416 OFFCURVE",
"254 286 OFFCURVE",
"254 198 CURVE SMOOTH",
"254 154 OFFCURVE",
"270 110 OFFCURVE",
"302 66 CURVE SMOOTH",
"343.333 8 OFFCURVE",
"389 -21 OFFCURVE",
"439 -21 CURVE SMOOTH",
"489 -21 OFFCURVE",
"535.333 8.333 OFFCURVE",
"578 67 CURVE SMOOTH",
"608.667 110.333 OFFCURVE",
"624 154 OFFCURVE",
"624 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"563 124.667 OFFCURVE",
"484 39 OFFCURVE",
"440 39 CURVE SMOOTH",
"394.667 39 OFFCURVE",
"316 124.667 OFFCURVE",
"316 198 CURVE SMOOTH",
"316 270 OFFCURVE",
"394.667 356 OFFCURVE",
"440 356 CURVE SMOOTH",
"484 356 OFFCURVE",
"563 270 OFFCURVE",
"563 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1162 242 OFFCURVE",
"1146.333 285.333 OFFCURVE",
"1115 328 CURVE SMOOTH",
"1073 386.667 OFFCURVE",
"1027 416 OFFCURVE",
"977 416 CURVE SMOOTH",
"878.333 416 OFFCURVE",
"792 286 OFFCURVE",
"792 198 CURVE SMOOTH",
"792 154 OFFCURVE",
"807.667 110 OFFCURVE",
"839 66 CURVE SMOOTH",
"881 8 OFFCURVE",
"927 -21 OFFCURVE",
"977 -21 CURVE SMOOTH",
"1027 -21 OFFCURVE",
"1073 8.333 OFFCURVE",
"1115 67 CURVE SMOOTH",
"1146.333 110.333 OFFCURVE",
"1162 154 OFFCURVE",
"1162 198 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1100 124.667 OFFCURVE",
"1021 39 OFFCURVE",
"977 39 CURVE SMOOTH",
"931.667 39 OFFCURVE",
"854 124.667 OFFCURVE",
"854 198 CURVE SMOOTH",
"854 270 OFFCURVE",
"931.667 356 OFFCURVE",
"977 356 CURVE SMOOTH",
"1022.333 356 OFFCURVE",
"1100 270 OFFCURVE",
"1100 198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
99 64 25 29 52 91 64 25 29 52 72 64 25 29 52 64 64 25 29 52 25 64 25 29 52 17 64 25 29 52 97 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 93 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 70 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 67 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 66 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 23 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
25 29 52 19 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 84 values pushed */
25 29 52 79 80 79 83 79 89 3 78 0 74 6 76 9 78 15 77 47 76 53 76 56 77 62 79 74 9 104 10 104 57 104 79 104 84 4 63 80 63 83 63 89 90 9 92 56 90 80 92 83 7 62 0 58 6 60 9 62 15 61 47 60 53 60 56 61 62 63 74 9 72 10 72 57 72 79 72 84 4 29 77 37 
PUSHW[ ]\011/* 1 value pushed */
775 
PUSHB[ ]\011/* 4 values pushed */
33 45 77 40 
PUSHW[ ]\011/* 1 value pushed */
775 
NPUSHB[ ]\011/* 11 values pushed */
43 33 33 58 43 43 4 58 92 55 85 
PUSHW[ ]\011/* 1 value pushed */
515 
PUSHB[ ]\011/* 6 values pushed */
98 55 78 65 55 58 
PUSHW[ ]\011/* 1 value pushed */
515 
PUSHB[ ]\011/* 6 values pushed */
71 55 51 24 55 4 
PUSHW[ ]\011/* 1 value pushed */
515 
PUSHB[ ]\011/* 6 values pushed */
18 55 11 15 55 0 
PUSHW[ ]\011/* 1 value pushed */
698 
PUSHB[ ]\011/* 5 values pushed */
21 55 8 25 33 
PUSHW[ ]\011/* 1 value pushed */
303 
PUSHB[ ]\011/* 6 values pushed */
101 43 177 89 55 74 
PUSHW[ ]\011/* 1 value pushed */
698 
NPUSHB[ ]\011/* 10 values pushed */
95 55 0 82 1 82 232 62 55 47 
PUSHW[ ]\011/* 1 value pushed */
698 
PUSHB[ ]\011/* 3 values pushed */
68 55 55 
PUSHW[ ]\011/* 1 value pushed */
697 
PUSHB[ ]\011/* 8 values pushed */
101 78 11 51 11 11 0 176 
PUSHW[ ]\011/* 2 values pushed */
339 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -61, 270}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 39, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 3, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, -4, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, 3, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 0, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 0, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 22, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 1, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, -29, 267}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = dotlessi;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"331 866 LINE SMOOTH",
"289.667 866 OFFCURVE",
"274 848.333 OFFCURVE",
"274 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"291 781 OFFCURVE",
"331 781 CURVE SMOOTH",
"576 781 LINE",
"576 84 LINE",
"246 84 LINE SMOOTH",
"206 84 OFFCURVE",
"191.333 66.667 OFFCURVE",
"186 44 CURVE",
"191.333 17.333 OFFCURVE",
"206 0 OFFCURVE",
"246 0 CURVE SMOOTH",
"990 0 LINE SMOOTH",
"1031.333 0 OFFCURVE",
"1047 18 OFFCURVE",
"1047 42 CURVE SMOOTH",
"1047 67.333 OFFCURVE",
"1031.333 84 OFFCURVE",
"990 84 CURVE SMOOTH",
"660 84 LINE",
"660 866 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
35 21 50 21 64 21 80 21 99 21 113 21 128 21 7 15 9 12 88 16 16 34 9 2 8 5 88 1 1 34 8 18 24 21 149 17 17 34 24 6 9 8 10 0 1 32 17 79 16 1 16 25 25 81 127 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = circumflex;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"344 1104 LINE SMOOTH",
"325.333 1090 OFFCURVE",
"316 1076 OFFCURVE",
"316 1062 CURVE SMOOTH",
"316 1039.333 OFFCURVE",
"335.333 1020 OFFCURVE",
"358 1020 CURVE SMOOTH",
"367.333 1020 OFFCURVE",
"379.333 1025.667 OFFCURVE",
"394 1037 CURVE SMOOTH",
"614 1206 LINE",
"835 1037 LINE SMOOTH",
"849.667 1025.667 OFFCURVE",
"861.333 1020 OFFCURVE",
"870 1020 CURVE SMOOTH",
"894 1020 OFFCURVE",
"913 1038 OFFCURVE",
"913 1062 CURVE SMOOTH",
"913 1076.667 OFFCURVE",
"909 1085.333 OFFCURVE",
"885 1104 CURVE SMOOTH",
"614 1310 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
12 10 134 1 134 18 3 10 193 96 13 112 13 128 13 3 0 13 16 13 2 13 118 96 7 112 7 128 7 3 0 7 16 7 2 7 118 64 10 4 243 0 243 32 16 25 19 10 0 111 0 127 0 143 0 3 0 113 170 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"882.667 1167 OFFCURVE",
"872.667 1162.667 OFFCURVE",
"862 1154 CURVE",
"810.667 1108.667 OFFCURVE",
"772.333 1086 OFFCURVE",
"747 1086 CURVE SMOOTH",
"660.201 1086 OFFCURVE",
"572.782 1207 OFFCURVE",
"483 1207 CURVE SMOOTH",
"444.333 1207 OFFCURVE",
"399 1187.333 OFFCURVE",
"347 1148 CURVE SMOOTH",
"313 1121.333 OFFCURVE",
"296 1099.333 OFFCURVE",
"296 1082 CURVE SMOOTH",
"296 1060.667 OFFCURVE",
"313 1042 OFFCURVE",
"337 1042 CURVE SMOOTH",
"349.667 1042 OFFCURVE",
"365 1050.333 OFFCURVE",
"383 1067 CURVE SMOOTH",
"423.667 1104.333 OFFCURVE",
"457.333 1123 OFFCURVE",
"484 1123 CURVE SMOOTH",
"505.333 1123 OFFCURVE",
"535.333 1108.667 OFFCURVE",
"574 1080 CURVE SMOOTH",
"646.667 1027.333 OFFCURVE",
"704.333 1001 OFFCURVE",
"747 1001 CURVE SMOOTH",
"774.333 1001 OFFCURVE",
"800.667 1008 OFFCURVE",
"826 1022 CURVE SMOOTH",
"862.667 1041.333 OFFCURVE",
"894.333 1066 OFFCURVE",
"921 1096 CURVE SMOOTH",
"929.667 1106 OFFCURVE",
"934 1116.667 OFFCURVE",
"934 1128 CURVE SMOOTH",
"934 1148 OFFCURVE",
"914.667 1167 OFFCURVE",
"892 1167 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
37 26 1 11 15 136 22 2 9 10 6 26 11 29 3 31 27 26 16 14 12 10 7 3 20 9 44 28 177 143 0 1 0 
PUSHW[ ]\011/* 1 value pushed */
765 
PUSHB[ ]\011/* 8 values pushed */
24 44 13 177 128 17 1 17 
PUSHW[ ]\011/* 1 value pushed */
765 
NPUSHB[ ]\011/* 15 values pushed */
9 15 3 31 3 47 3 3 3 221 20 25 32 9 164 
PUSHW[ ]\011/* 2 values pushed */
261 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"898.333 1076 OFFCURVE",
"914 1092.667 OFFCURVE",
"914 1118 CURVE SMOOTH",
"914 1143.333 OFFCURVE",
"899 1159.667 OFFCURVE",
"855 1161 CURVE SMOOTH",
"372 1161 LINE SMOOTH",
"332 1161 OFFCURVE",
"316 1143.333 OFFCURVE",
"316 1118 CURVE SMOOTH",
"316 1094 OFFCURVE",
"332 1076 OFFCURVE",
"372 1076 CURVE SMOOTH",
"857 1076 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
7 36 0 15 11 1 11 26 15 4 25 14 113 170 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = macron;
unicode = 02C9;
},
{
glyphname = breve;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"332 1298 OFFCURVE",
"314 1280 OFFCURVE",
"314 1252 CURVE SMOOTH",
"314 1132 OFFCURVE",
"431 1018 OFFCURVE",
"615 1018 CURVE SMOOTH",
"799 1018 OFFCURVE",
"916 1132 OFFCURVE",
"916 1252 CURVE SMOOTH",
"916 1280 OFFCURVE",
"897 1298 OFFCURVE",
"873 1298 CURVE SMOOTH",
"861.667 1298 OFFCURVE",
"851.667 1294 OFFCURVE",
"843 1286 CURVE",
"837 1280 OFFCURVE",
"833 1268 OFFCURVE",
"831 1250 CURVE SMOOTH",
"823 1174 OFFCURVE",
"739 1103 OFFCURVE",
"615 1103 CURVE SMOOTH",
"552.333 1103 OFFCURVE",
"501.667 1118 OFFCURVE",
"463 1148 CURVE SMOOTH",
"423.667 1178 OFFCURVE",
"402 1212 OFFCURVE",
"398 1250 CURVE SMOOTH",
"395.333 1286 OFFCURVE",
"380 1298 OFFCURVE",
"356 1298 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
20 44 7 213 0 14 10 91 17 203 3 91 23 25 26 113 170 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"717 1204.333 OFFCURVE",
"671 1250 OFFCURVE",
"615 1250 CURVE SMOOTH",
"557.667 1250 OFFCURVE",
"512 1204.333 OFFCURVE",
"512 1147 CURVE SMOOTH",
"512 1091 OFFCURVE",
"557.667 1045 OFFCURVE",
"615 1045 CURVE SMOOTH",
"671 1045 OFFCURVE",
"717 1091 OFFCURVE",
"717 1147 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
3 138 9 0 0 
PUSHW[ ]\011/* 1 value pushed */
305 
PUSHB[ ]\011/* 3 values pushed */
6 25 12 
PUSHW[ ]\011/* 3 values pushed */
322 285 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"795 1283.333 OFFCURVE",
"714 1364 OFFCURVE",
"614 1364 CURVE SMOOTH",
"514 1364 OFFCURVE",
"433 1283.333 OFFCURVE",
"433 1186 CURVE SMOOTH",
"433 1088.667 OFFCURVE",
"514 1008 OFFCURVE",
"614 1008 CURVE SMOOTH",
"714 1008 OFFCURVE",
"795 1088.667 OFFCURVE",
"795 1186 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"735 1120.667 OFFCURVE",
"680.667 1068 OFFCURVE",
"614 1068 CURVE SMOOTH",
"547.333 1068 OFFCURVE",
"493 1122 OFFCURVE",
"493 1186 CURVE SMOOTH",
"493 1250 OFFCURVE",
"546 1304 OFFCURVE",
"614 1304 CURVE SMOOTH",
"680.667 1304 OFFCURVE",
"735 1251.333 OFFCURVE",
"735 1186 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
22 64 32 40 52 14 64 32 40 52 20 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 4 values pushed */
32 40 52 17 
PUSHW[ ]\011/* 1 value pushed */
-64 
PUSHB[ ]\011/* 6 values pushed */
32 40 52 3 55 21 
PUSHW[ ]\011/* 1 value pushed */
760 
PUSHB[ ]\011/* 6 values pushed */
15 55 9 0 55 12 
PUSHW[ ]\011/* 1 value pushed */
487 
NPUSHB[ ]\011/* 9 values pushed */
18 55 0 6 1 6 25 24 109 
PUSHW[ ]\011/* 2 values pushed */
380 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = cedilla;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"627 -163 LINE SMOOTH",
"651 -163 OFFCURVE",
"670.667 -169 OFFCURVE",
"686 -181 CURVE SMOOTH",
"697.333 -190.333 OFFCURVE",
"703 -201.333 OFFCURVE",
"703 -214 CURVE SMOOTH",
"703 -243.333 OFFCURVE",
"672 -273 OFFCURVE",
"620 -273 CURVE SMOOTH",
"582 -273 OFFCURVE",
"540.333 -260.333 OFFCURVE",
"495 -235 CURVE SMOOTH",
"486.333 -230.333 OFFCURVE",
"478.667 -228 OFFCURVE",
"472 -228 CURVE SMOOTH",
"454.667 -228 OFFCURVE",
"442 -240.667 OFFCURVE",
"442 -258 CURVE SMOOTH",
"442 -266 OFFCURVE",
"445.333 -273.667 OFFCURVE",
"452 -281 CURVE SMOOTH",
"469.333 -301 OFFCURVE",
"557.333 -333 OFFCURVE",
"620 -333 CURVE SMOOTH",
"712 -333 OFFCURVE",
"764 -281.333 OFFCURVE",
"764 -216 CURVE SMOOTH",
"764 -161.333 OFFCURVE",
"720.667 -116.667 OFFCURVE",
"646 -106 CURVE",
"646 -10 LINE SMOOTH",
"646 18 OFFCURVE",
"634.667 30 OFFCURVE",
"616 30 CURVE SMOOTH",
"598.667 30 OFFCURVE",
"586 19.333 OFFCURVE",
"586 -10 CURVE SMOOTH",
"586 -163 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
21 23 19 3 5 1 31 33 29 7 22 
PUSHW[ ]\011/* 1 value pushed */
765 
PUSHB[ ]\011/* 6 values pushed */
14 55 95 26 1 26 
PUSHW[ ]\011/* 1 value pushed */
348 
NPUSHB[ ]\011/* 39 values pushed */
47 33 63 33 79 33 3 33 55 8 177 47 4 63 4 79 4 95 4 4 4 10 19 210 0 29 55 11 177 8 8 7 0 7 55 0 1 1 1 
PUSHW[ ]\011/* 5 values pushed */
595 34 202 333 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = hungarumlaut;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"605 1261.667 OFFCURVE",
"612 1274.333 OFFCURVE",
"612 1285 CURVE SMOOTH",
"612 1309 OFFCURVE",
"594 1328 OFFCURVE",
"570 1328 CURVE SMOOTH",
"558 1328 OFFCURVE",
"544.333 1320.333 OFFCURVE",
"529 1305 CURVE SMOOTH",
"336 1101 LINE SMOOTH",
"322 1086.333 OFFCURVE",
"315 1073.667 OFFCURVE",
"315 1063 CURVE SMOOTH",
"315 1037.667 OFFCURVE",
"334.333 1020 OFFCURVE",
"357 1020 CURVE SMOOTH",
"369 1020 OFFCURVE",
"382.667 1027.667 OFFCURVE",
"398 1043 CURVE SMOOTH",
"591 1247 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"908 1261.667 OFFCURVE",
"915 1274.333 OFFCURVE",
"915 1285 CURVE SMOOTH",
"915 1309 OFFCURVE",
"897 1328 OFFCURVE",
"873 1328 CURVE SMOOTH",
"861 1328 OFFCURVE",
"847.667 1320.333 OFFCURVE",
"833 1305 CURVE SMOOTH",
"639 1101 LINE SMOOTH",
"625 1086.333 OFFCURVE",
"618 1073.667 OFFCURVE",
"618 1063 CURVE SMOOTH",
"618 1037.667 OFFCURVE",
"637.333 1020 OFFCURVE",
"660 1020 CURVE SMOOTH",
"672.667 1020 OFFCURVE",
"686.333 1027.667 OFFCURVE",
"701 1043 CURVE SMOOTH",
"894 1247 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 92 values pushed */
31 18 20 21 4 23 26 28 29 4 30 22 15 2 4 5 4 8 10 11 12 13 5 14 6 22 23 26 3 28 29 30 31 18 5 19 27 4 5 7 10 4 13 14 15 2 4 3 11 0 19 16 19 2 19 118 27 27 0 3 16 3 2 3 118 11 0 22 16 22 2 22 118 15 30 1 30 218 15 14 31 14 2 14 118 6 25 32 11 113 170 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 14.667 OFFCURVE",
"647.667 27 OFFCURVE",
"629 27 CURVE SMOOTH",
"547.667 27 OFFCURVE",
"468 -52.667 OFFCURVE",
"468 -146 CURVE SMOOTH",
"468 -234 OFFCURVE",
"529.667 -294 OFFCURVE",
"627 -294 CURVE SMOOTH",
"668.333 -294 OFFCURVE",
"704 -283.333 OFFCURVE",
"734 -262 CURVE",
"753.333 -249.333 OFFCURVE",
"763 -236.333 OFFCURVE",
"763 -223 CURVE SMOOTH",
"763 -204.333 OFFCURVE",
"749 -192 OFFCURVE",
"733 -192 CURVE SMOOTH",
"725.667 -192 OFFCURVE",
"717 -196.667 OFFCURVE",
"707 -206 CURVE SMOOTH",
"685.667 -224.667 OFFCURVE",
"659.667 -234 OFFCURVE",
"629 -234 CURVE SMOOTH",
"565 -234 OFFCURVE",
"528 -198.667 OFFCURVE",
"528 -152 CURVE SMOOTH",
"528 -92 OFFCURVE",
"574 -40.333 OFFCURVE",
"622 -35 CURVE SMOOTH",
"637.333 -33.667 OFFCURVE",
"647.333 -30.667 OFFCURVE",
"652 -26 CURVE SMOOTH",
"658 -20 OFFCURVE",
"661 -12.667 OFFCURVE",
"661 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
14 15 16 3 8 9 11 13 15 5 17 7 19 20 21 11 12 13 3 14 
PUSHW[ ]\011/* 1 value pushed */
344 
PUSHB[ ]\011/* 3 values pushed */
21 55 10 
PUSHW[ ]\011/* 1 value pushed */
764 
PUSHB[ ]\011/* 7 values pushed */
4 55 27 10 17 77 12 
PUSHW[ ]\011/* 1 value pushed */
271 
PUSHB[ ]\011/* 5 values pushed */
0 177 7 55 24 
PUSHW[ ]\011/* 1 value pushed */
755 
PUSHB[ ]\011/* 4 values pushed */
30 101 169 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"885 1214 LINE SMOOTH",
"903.667 1228 OFFCURVE",
"913 1242 OFFCURVE",
"913 1256 CURVE SMOOTH",
"913 1278.667 OFFCURVE",
"893.667 1298 OFFCURVE",
"871 1298 CURVE SMOOTH",
"861.667 1298 OFFCURVE",
"849.667 1292.333 OFFCURVE",
"835 1281 CURVE SMOOTH",
"615 1112 LINE",
"394 1282 LINE SMOOTH",
"379.333 1293.333 OFFCURVE",
"367.667 1299 OFFCURVE",
"359 1299 CURVE SMOOTH",
"335 1299 OFFCURVE",
"316 1280 OFFCURVE",
"316 1256 CURVE SMOOTH",
"316 1241.333 OFFCURVE",
"320 1232.667 OFFCURVE",
"344 1214 CURVE SMOOTH",
"615 1008 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
73 0 137 1 137 18 3 3 10 70 10 2 104 9 104 11 120 10 136 10 4 111 13 127 13 2 15 13 31 13 143 13 3 13 118 111 7 127 7 2 15 7 31 7 143 7 3 7 118 10 193 64 10 16 118 0 118 32 4 25 19 0 0 113 170 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
RTHG[ ]\011/* RoundToHalfGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = Lslash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"667 1086 LINE SMOOTH",
"707 1086 OFFCURVE",
"723 1102.667 OFFCURVE",
"723 1128 CURVE SMOOTH",
"723 1153.333 OFFCURVE",
"707 1170 OFFCURVE",
"667 1170 CURVE SMOOTH",
"182 1170 LINE SMOOTH",
"140.667 1170 OFFCURVE",
"126 1153.333 OFFCURVE",
"126 1128 CURVE SMOOTH",
"126 1102.667 OFFCURVE",
"142 1086 OFFCURVE",
"182 1086 CURVE SMOOTH",
"382 1086 LINE",
"382 609 LINE",
"119 455 LINE SMOOTH",
"91 439 OFFCURVE",
"86 429.333 OFFCURVE",
"86 412 CURVE SMOOTH",
"86 389.333 OFFCURVE",
"105.333 369 OFFCURVE",
"128 369 CURVE SMOOTH",
"135.333 369 OFFCURVE",
"146.667 373.333 OFFCURVE",
"162 382 CURVE SMOOTH",
"382 511 LINE",
"382 84 LINE",
"182 84 LINE SMOOTH",
"140.667 84 OFFCURVE",
"126 67.333 OFFCURVE",
"126 42 CURVE SMOOTH",
"126 18 OFFCURVE",
"142 0 OFFCURVE",
"182 0 CURVE SMOOTH",
"1111 0 LINE",
"1111 420 LINE SMOOTH",
"1111 460 OFFCURVE",
"1094.333 476 OFFCURVE",
"1069 476 CURVE SMOOTH",
"1043.667 476 OFFCURVE",
"1027 460 OFFCURVE",
"1027 420 CURVE SMOOTH",
"1027 84 LINE",
"466 84 LINE",
"466 560 LINE",
"732 716 LINE SMOOTH",
"760 732 OFFCURVE",
"765 743 OFFCURVE",
"765 759 CURVE SMOOTH",
"765 783 OFFCURVE",
"746.667 802 OFFCURVE",
"724 802 CURVE SMOOTH",
"716 802 OFFCURVE",
"704.667 797.667 OFFCURVE",
"690 789 CURVE SMOOTH",
"466 658 LINE",
"466 1086 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
38 3 38 5 61 4 51 31 53 39 5 37 4 37 5 94 7 3 11 30 31 31 10 1 40 39 39 2 30 29 41 31 10 40 29 41 39 2 11 12 0 31 10 1 12 0 39 2 22 28 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
25 53 29 25 25 28 29 29 22 49 55 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
52 53 0 52 52 55 0 29 49 20 14 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
17 219 13 17 17 14 13 29 20 48 42 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 66 values pushed */
45 53 41 45 45 42 41 29 48 32 29 36 3 8 20 12 40 37 32 30 11 8 3 1 8 41 13 2 39 39 30 31 10 20 31 31 10 31 39 29 36 2 10 20 12 39 31 10 2 4 41 13 38 22 41 38 49 49 48 15 20 1 20 26 57 7 
PUSHW[ ]\011/* 1 value pushed */
276 
PUSHB[ ]\011/* 5 values pushed */
0 12 30 41 29 
PUSHW[ ]\011/* 1 value pushed */
276 
NPUSHB[ ]\011/* 19 values pushed */
32 36 48 36 64 36 80 36 4 36 25 56 48 2 22 8 67 121 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTCA[0]\011/* SetFVectorToAxis */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = lslash;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"331 1255 LINE SMOOTH",
"289.667 1255 OFFCURVE",
"274 1237 OFFCURVE",
"274 1213 CURVE SMOOTH",
"274 1187.667 OFFCURVE",
"291 1170 OFFCURVE",
"331 1170 CURVE SMOOTH",
"573 1170 LINE",
"573 651 LINE",
"350 524 LINE SMOOTH",
"322 508 OFFCURVE",
"317 497.333 OFFCURVE",
"317 480 CURVE SMOOTH",
"317 457.333 OFFCURVE",
"335.333 438 OFFCURVE",
"358 438 CURVE SMOOTH",
"366.667 438 OFFCURVE",
"378 442 OFFCURVE",
"392 450 CURVE SMOOTH",
"573 554 LINE",
"573 84 LINE",
"243 84 LINE SMOOTH",
"203 84 OFFCURVE",
"187 67.333 OFFCURVE",
"187 42 CURVE SMOOTH",
"187 18 OFFCURVE",
"203 0 OFFCURVE",
"243 0 CURVE SMOOTH",
"987 0 LINE SMOOTH",
"1028.333 0 OFFCURVE",
"1044 18 OFFCURVE",
"1044 42 CURVE SMOOTH",
"1044 67.333 OFFCURVE",
"1028.333 84 OFFCURVE",
"987 84 CURVE SMOOTH",
"657 84 LINE",
"657 602 LINE",
"882 731 LINE SMOOTH",
"910 747 OFFCURVE",
"916 757.667 OFFCURVE",
"916 775 CURVE SMOOTH",
"916 799 OFFCURVE",
"898 817 OFFCURVE",
"874 817 CURVE SMOOTH",
"866.667 817 OFFCURVE",
"855.333 812.667 OFFCURVE",
"840 804 CURVE SMOOTH",
"658 700 LINE",
"657 1255 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 122 values pushed */
52 35 55 36 2 60 5 50 32 56 37 79 5 111 4 111 10 6 11 28 29 29 10 1 38 37 37 2 28 27 39 29 10 38 27 39 27 2 11 12 0 29 10 1 12 0 27 2 26 20 23 88 27 27 34 20 13 19 16 88 12 12 34 19 40 46 43 149 39 39 34 46 30 35 27 47 3 8 48 12 38 35 30 28 11 8 3 1 8 46 20 2 37 37 32 29 10 20 29 29 10 29 37 27 47 2 10 48 12 37 29 10 2 4 46 0 46 13 59 20 0 7 
PUSHW[ ]\011/* 1 value pushed */
360 
PUSHB[ ]\011/* 4 values pushed */
12 32 39 27 
PUSHW[ ]\011/* 1 value pushed */
360 
PUSHB[ ]\011/* 4 values pushed */
48 34 1 34 
PUSHW[ ]\011/* 1 value pushed */
497 
PUSHB[ ]\011/* 8 values pushed */
47 46 0 20 10 81 127 24 
PUSHW[ ]\011/* 1 value pushed */
291 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
SFVTCA[0]\011/* SetFVectorToAxis */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 258}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 3, 258}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caron;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = brokenbar;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1190 OFFCURVE",
"656 1219 OFFCURVE",
"654 1225 CURVE",
"650 1241 OFFCURVE",
"632.667 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"595.333 1255 OFFCURVE",
"578 1241 OFFCURVE",
"574 1225 CURVE SMOOTH",
"572.667 1219.667 OFFCURVE",
"572 1190.667 OFFCURVE",
"572 1138 CURVE SMOOTH",
"572 762 LINE SMOOTH",
"572 710 OFFCURVE",
"572.667 681 OFFCURVE",
"574 675 CURVE SMOOTH",
"578 659 OFFCURVE",
"595.333 645 OFFCURVE",
"614 645 CURVE SMOOTH",
"628.667 645 OFFCURVE",
"640.667 651.333 OFFCURVE",
"650 664 CURVE",
"654 670.667 OFFCURVE",
"656 703.333 OFFCURVE",
"656 762 CURVE SMOOTH",
"657 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 285.667 OFFCURVE",
"656 314.667 OFFCURVE",
"654 320 CURVE",
"650 337.333 OFFCURVE",
"632.667 350 OFFCURVE",
"614 350 CURVE SMOOTH",
"595.333 350 OFFCURVE",
"578 337.333 OFFCURVE",
"574 320 CURVE SMOOTH",
"572.667 314.667 OFFCURVE",
"572 285.667 OFFCURVE",
"572 233 CURVE SMOOTH",
"572 -143 LINE SMOOTH",
"572 -195 OFFCURVE",
"572.667 -224 OFFCURVE",
"574 -230 CURVE SMOOTH",
"578 -246 OFFCURVE",
"595.333 -259 OFFCURVE",
"614 -259 CURVE SMOOTH",
"628.667 -259 OFFCURVE",
"640.667 -252.667 OFFCURVE",
"650 -240 CURVE",
"654 -234 OFFCURVE",
"656 -201.667 OFFCURVE",
"656 -143 CURVE SMOOTH",
"657 233 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
39 38 36 35 28 27 18 17 15 14 7 6 12 22 9 41 39 35 28 23 5 37 26 20 18 14 7 2 5 15 5 26 182 37 
PUSHW[ ]\011/* 1 value pushed */
757 
NPUSHB[ ]\011/* 27 values pushed */
5 182 17 17 16 15 0 22 52 21 1 52 0 0 21 36 32 10 11 31 32 9 25 42 101 169 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = Eth;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"213 84 LINE",
"143 84 LINE SMOOTH",
"101.667 84 OFFCURVE",
"86 67.333 OFFCURVE",
"86 42 CURVE SMOOTH",
"86 18 OFFCURVE",
"101.667 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"594 0 LINE SMOOTH",
"680.667 0 OFFCURVE",
"757 22 OFFCURVE",
"823 66 CURVE SMOOTH",
"1000.333 186 OFFCURVE",
"1071 355 OFFCURVE",
"1071 527 CURVE SMOOTH",
"1071 643 LINE SMOOTH",
"1071 713 OFFCURVE",
"1061 773.667 OFFCURVE",
"1041 825 CURVE SMOOTH",
"1013.667 895.667 OFFCURVE",
"973.667 962.667 OFFCURVE",
"921 1026 CURVE SMOOTH",
"859.667 1100.667 OFFCURVE",
"735.333 1170 OFFCURVE",
"594 1170 CURVE SMOOTH",
"143 1170 LINE SMOOTH",
"101.667 1170 OFFCURVE",
"86 1153.333 OFFCURVE",
"86 1128 CURVE SMOOTH",
"86 1102.667 OFFCURVE",
"101.667 1086 OFFCURVE",
"143 1086 CURVE SMOOTH",
"213 1086 LINE",
"213 649 LINE",
"114 649 LINE SMOOTH",
"61.333 649 OFFCURVE",
"32.333 648.333 OFFCURVE",
"27 647 CURVE",
"9.667 641.667 OFFCURVE",
"-3 625.667 OFFCURVE",
"-3 607 CURVE SMOOTH",
"-3 587 OFFCURVE",
"9.667 571.333 OFFCURVE",
"27 566 CURVE",
"32.333 564.667 OFFCURVE",
"61.333 564 OFFCURVE",
"114 564 CURVE SMOOTH",
"213 564 LINE"
);
},
{
closed = 1;
nodes = (
"532 564 LINE SMOOTH",
"584.667 564 OFFCURVE",
"613.667 564.667 OFFCURVE",
"619 566 CURVE",
"635 571.333 OFFCURVE",
"649 587 OFFCURVE",
"649 607 CURVE SMOOTH",
"649 625.667 OFFCURVE",
"635 641.667 OFFCURVE",
"619 647 CURVE",
"613.667 648.333 OFFCURVE",
"584.667 649 OFFCURVE",
"532 649 CURVE SMOOTH",
"298 649 LINE",
"298 1086 LINE",
"603 1086 LINE SMOOTH",
"709.667 1086 OFFCURVE",
"812 1027.667 OFFCURVE",
"860 969 CURVE SMOOTH",
"903.333 915.667 OFFCURVE",
"937.333 859.333 OFFCURVE",
"962 800 CURVE SMOOTH",
"978 759.333 OFFCURVE",
"986 713 OFFCURVE",
"986 661 CURVE SMOOTH",
"986 509 LINE SMOOTH",
"986 383.667 OFFCURVE",
"925 245 OFFCURVE",
"801 153 CURVE SMOOTH",
"739 107 OFFCURVE",
"673 84 OFFCURVE",
"603 84 CURVE SMOOTH",
"298 84 LINE",
"298 564 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 143 values pushed */
40 31 1 12 46 30 47 28 54 42 52 74 46 90 47 106 47 7 34 23 36 25 37 32 51 23 50 25 53 32 137 47 137 53 156 46 154 47 155 54 155 55 175 46 175 56 191 46 191 56 218 47 218 53 235 46 235 56 251 56 21 11 1 6 51 12 12 29 1 41 35 38 41 42 42 29 35 14 20 17 41 13 13 29 20 60 70 65 54 59 59 29 70 29 72 27 45 38 35 58 38 20 70 1 1 35 20 2 35 8 50 38 15 27 175 27 2 15 27 32 27 2 27 26 72 58 59 44 30 42 13 42 175 12 1 32 12 79 12 2 12 25 71 
PUSHW[ ]\011/* 3 values pushed */
313 264 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = eth;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"642.333 1224.333 OFFCURVE",
"557.667 1250 OFFCURVE",
"471 1250 CURVE SMOOTH",
"435 1250 OFFCURVE",
"416 1231.333 OFFCURVE",
"416 1210 CURVE SMOOTH",
"416 1199.333 OFFCURVE",
"420.667 1189.833 OFFCURVE",
"430 1181.5 CURVE SMOOTH",
"439.333 1173.167 OFFCURVE",
"457 1167.333 OFFCURVE",
"483 1164 CURVE SMOOTH",
"530.333 1158 OFFCURVE",
"576.333 1148.333 OFFCURVE",
"621 1135 CURVE",
"594.333 1129 OFFCURVE",
"534.333 1112 OFFCURVE",
"441 1084 CURVE SMOOTH",
"381.667 1066 OFFCURVE",
"347 1052.5 OFFCURVE",
"337 1043.5 CURVE SMOOTH",
"327 1034.5 OFFCURVE",
"322 1025 OFFCURVE",
"322 1015 CURVE SMOOTH",
"322 993.667 OFFCURVE",
"339.667 977 OFFCURVE",
"365 977 CURVE SMOOTH",
"378.333 977 OFFCURVE",
"492 1014.333 OFFCURVE",
"706 1089 CURVE",
"882 933 OFFCURVE",
"924.333 864 OFFCURVE",
"975 664 CURVE",
"949 705.333 OFFCURVE",
"924 737 OFFCURVE",
"900 759 CURVE SMOOTH",
"829.333 820.333 OFFCURVE",
"714.667 873 OFFCURVE",
"588 873 CURVE SMOOTH",
"328 873 OFFCURVE",
"129 674 OFFCURVE",
"129 430 CURVE SMOOTH",
"129 175.333 OFFCURVE",
"329.333 -31 OFFCURVE",
"596 -31 CURVE SMOOTH",
"877.333 -31 OFFCURVE",
"1070 152 OFFCURVE",
"1070 496 CURVE SMOOTH",
"1070 774.667 OFFCURVE",
"979.667 955 OFFCURVE",
"797 1123 CURVE",
"882.333 1141 OFFCURVE",
"934 1156.667 OFFCURVE",
"952 1170 CURVE",
"962.667 1177.333 OFFCURVE",
"968 1187.333 OFFCURVE",
"968 1200 CURVE SMOOTH",
"968 1224 OFFCURVE",
"952.333 1240 OFFCURVE",
"931 1240 CURVE SMOOTH",
"918.333 1240 OFFCURVE",
"902.667 1237 OFFCURVE",
"884 1231 CURVE",
"725 1173 LINE"
);
},
{
closed = 1;
nodes = (
"474.667 48 OFFCURVE",
"333.5 117.667 OFFCURVE",
"263.5 239 CURVE SMOOTH",
"228.5 299.667 OFFCURVE",
"211 361.333 OFFCURVE",
"211 424 CURVE SMOOTH",
"211 622.667 OFFCURVE",
"374.333 788 OFFCURVE",
"597 788 CURVE SMOOTH",
"815.667 788 OFFCURVE",
"978 627.333 OFFCURVE",
"978 418 CURVE SMOOTH",
"978 279.333 OFFCURVE",
"911 157.667 OFFCURVE",
"787 95 CURVE SMOOTH",
"725 63.667 OFFCURVE",
"662.667 48 OFFCURVE",
"600 48 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 145 values pushed */
14 6 6 30 29 6 22 30 24 32 39 30 156 21 154 52 148 62 172 21 173 52 160 62 188 52 178 58 178 62 195 59 16 11 11 13 29 3 62 3 15 31 15 32 15 33 15 34 24 21 31 31 29 32 30 33 28 34 36 0 42 25 32 30 101 38 13 56 8 43 40 30 10 0 5 45 27 54 6 27 57 50 36 30 40 10 0 5 3 37 43 33 48 0 32 59 47 37 1 37 37 57 9 59 3 0 57 33 32 22 48 22 64 22 3 22 6 50 33 16 11 35 154 45 45 64 65 6 143 54 33 15 13 1 13 26 65 60 33 19 25 64 42 172 24 
PUSHW[ ]\011/* 1 value pushed */
289 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 40 values pushed */
58 63 51 53 14 21 62 38 52 37 58 21 60 35 0 63 17 60 35 0 51 15 54 35 1 59 20 57 35 1 61 18 50 35 0 53 14 50 35 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 0, 258}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = Thorn;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"207.552 1170 OFFCURVE",
"179 1167.705 OFFCURVE",
"179 1128 CURVE SMOOTH",
"179 1102.667 OFFCURVE",
"195 1086 OFFCURVE",
"235 1086 CURVE SMOOTH",
"348 1086 LINE",
"348 84 LINE",
"235 84 LINE SMOOTH",
"195 84 OFFCURVE",
"179 67.333 OFFCURVE",
"179 42 CURVE SMOOTH",
"179 18 OFFCURVE",
"195 0 OFFCURVE",
"235 0 CURVE SMOOTH",
"720 0 LINE SMOOTH",
"760 0 OFFCURVE",
"776 18 OFFCURVE",
"776 42 CURVE SMOOTH",
"776 67.333 OFFCURVE",
"760 84 OFFCURVE",
"720 84 CURVE SMOOTH",
"432 84 LINE",
"432 238 LINE",
"695 238 LINE SMOOTH",
"752.333 238 OFFCURVE",
"800.333 244.667 OFFCURVE",
"839 258 CURVE SMOOTH",
"892.333 275.333 OFFCURVE",
"944 302.667 OFFCURVE",
"994 340 CURVE SMOOTH",
"1060.667 389.333 OFFCURVE",
"1115 480.333 OFFCURVE",
"1115 587 CURVE SMOOTH",
"1115 769.667 OFFCURVE",
"953.667 929 OFFCURVE",
"723 929 CURVE SMOOTH",
"432 929 LINE",
"432 1086 LINE",
"720 1086 LINE SMOOTH",
"760 1086 OFFCURVE",
"776 1102.667 OFFCURVE",
"776 1128 CURVE SMOOTH",
"776 1153.333 OFFCURVE",
"760 1170 OFFCURVE",
"720 1170 CURVE SMOOTH",
"259 1170 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"432 844 LINE",
"731 844 LINE SMOOTH",
"904.333 844 OFFCURVE",
"1031 719 OFFCURVE",
"1031 587 CURVE SMOOTH",
"1031 504.333 OFFCURVE",
"983.167 418.667 OFFCURVE",
"874.5 364 CURVE SMOOTH",
"820.167 336.667 OFFCURVE",
"762 323 OFFCURVE",
"700 323 CURVE SMOOTH",
"432 323 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
172 17 170 49 173 53 188 17 191 49 191 53 6 49 8 7 1 4 54 8 8 29 1 36 30 33 43 37 37 29 30 23 29 26 54 22 22 29 29 39 0 42 43 38 38 29 0 46 55 51 22 54 55 30 10 64 9 1 15 9 31 9 2 9 
PUSHW[ ]\011/* 1 value pushed */
761 
NPUSHB[ ]\011/* 14 values pushed */
8 38 1 1 0 2 47 46 30 20 79 21 1 21 
PUSHW[ ]\011/* 1 value pushed */
761 
NPUSHB[ ]\011/* 26 values pushed */
22 38 30 30 29 8 51 37 15 13 31 13 2 13 26 57 8 22 30 38 37 25 56 246 121 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 36 values pushed */
48 53 11 19 15 14 16 14 17 14 18 14 4 6 49 37 53 11 51 45 1 48 19 51 45 1 52 12 54 45 1 50 14 47 45 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
LOOPCALL[ ]\011/* LoopAndCallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = thorn;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"101 1255 LINE SMOOTH",
"61 1255 OFFCURVE",
"45 1237 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1187.667 OFFCURVE",
"61 1170 OFFCURVE",
"101 1170 CURVE SMOOTH",
"214 1170 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -318.667 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369.333 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -318.667 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 204 LINE",
"391.333 82 OFFCURVE",
"513 21 OFFCURVE",
"663 21 CURVE SMOOTH",
"915 21 OFFCURVE",
"1111 217.667 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 760.667 OFFCURVE",
"891 838 CURVE SMOOTH",
"821 876.667 OFFCURVE",
"744.667 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834.333 OFFCURVE",
"298 713 CURVE",
"298 1255 LINE"
);
},
{
closed = 1;
nodes = (
"1026 264.333 OFFCURVE",
"864.333 106 OFFCURVE",
"663 106 CURVE SMOOTH",
"459 106 OFFCURVE",
"298 265.667 OFFCURVE",
"298 459 CURVE SMOOTH",
"298 651 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"865.667 811 OFFCURVE",
"1026 652.333 OFFCURVE",
"1026 459 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
168 39 168 43 166 45 166 49 4 41 8 28 22 25 47 29 29 34 22 15 21 18 200 14 14 34 21 31 37 34 47 30 30 34 1 13 47 37 0 41 33 4 7 47 33 11 10 22 21 14 8 33 0 38 16 38 48 38 128 38 160 38 5 38 
PUSHW[ ]\011/* 1 value pushed */
539 
NPUSHB[ ]\011/* 17 values pushed */
29 0 44 14 32 30 15 29 111 29 2 29 25 50 94 142 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
48 49 39 40 5 10 6 37 40 5 38 35 1 48 10 38 35 1 39 7 41 35 1 49 9 47 35 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = minus;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1020.667 543 OFFCURVE",
"1049.667 543.667 OFFCURVE",
"1055 545 CURVE SMOOTH",
"1072.333 549 OFFCURVE",
"1085 566.333 OFFCURVE",
"1085 585 CURVE SMOOTH",
"1085 603.667 OFFCURVE",
"1072.333 621 OFFCURVE",
"1055 625 CURVE SMOOTH",
"1049.667 626.333 OFFCURVE",
"1020.667 627 OFFCURVE",
"968 627 CURVE SMOOTH",
"261 627 LINE SMOOTH",
"208.333 627 OFFCURVE",
"179.333 626.333 OFFCURVE",
"174 625 CURVE SMOOTH",
"156.667 621 OFFCURVE",
"144 603.667 OFFCURVE",
"144 585 CURVE SMOOTH",
"144 566.333 OFFCURVE",
"156.667 549 OFFCURVE",
"174 545 CURVE SMOOTH",
"179.333 543.667 OFFCURVE",
"208.333 543 OFFCURVE",
"261 543 CURVE SMOOTH",
"968 543 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
19 15 8 4 4 17 6 19 18 16 15 8 7 5 4 8 1 11 36 0 17 26 23 6 25 22 80 129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"878 262 LINE SMOOTH",
"887.333 252 OFFCURVE",
"895.333 245.667 OFFCURVE",
"902 243 CURVE",
"906 240.333 OFFCURVE",
"911 239 OFFCURVE",
"917 239 CURVE SMOOTH",
"941 239 OFFCURVE",
"960 258 OFFCURVE",
"960 282 CURVE SMOOTH",
"960 293.333 OFFCURVE",
"952.667 306.667 OFFCURVE",
"938 322 CURVE SMOOTH",
"675 585 LINE",
"936 846 LINE SMOOTH",
"950.667 860.667 OFFCURVE",
"958 873.667 OFFCURVE",
"958 885 CURVE SMOOTH",
"958 909 OFFCURVE",
"940 928 OFFCURVE",
"916 928 CURVE SMOOTH",
"904.667 928 OFFCURVE",
"891.333 920.667 OFFCURVE",
"876 906 CURVE SMOOTH",
"615 644 LINE",
"352 907 LINE SMOOTH",
"337.333 922.333 OFFCURVE",
"324.333 930 OFFCURVE",
"313 930 CURVE SMOOTH",
"289 930 OFFCURVE",
"270 911 OFFCURVE",
"270 887 CURVE SMOOTH",
"270 875.667 OFFCURVE",
"277.333 862.667 OFFCURVE",
"292 848 CURVE SMOOTH",
"555 585 LINE",
"293 322 LINE SMOOTH",
"277.667 307.333 OFFCURVE",
"270 294.333 OFFCURVE",
"270 283 CURVE SMOOTH",
"270 259 OFFCURVE",
"289 240 OFFCURVE",
"313 240 CURVE SMOOTH",
"326.333 240 OFFCURVE",
"332 242 OFFCURVE",
"352 262 CURVE SMOOTH",
"615 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
28 -4 
NPUSHB[ ]\011/* 9 values pushed */
92 110 52 19 4 92 110 52 27 
PUSHW[ ]\011/* 8 values pushed */
726 20 758 19 11 726 18 758 
PUSHB[ ]\011/* 4 values pushed */
19 193 0 29 
NPUSHW[ ]\011/* 11 values pushed */
726 38 758 0 9 726 1 758 0 38 726 
PUSHB[ ]\011/* 4 values pushed */
29 215 28 20 
PUSHW[ ]\011/* 1 value pushed */
726 
PUSHB[ ]\011/* 6 values pushed */
27 215 28 193 10 1 
PUSHW[ ]\011/* 1 value pushed */
726 
PUSHB[ ]\011/* 4 values pushed */
9 215 10 18 
PUSHW[ ]\011/* 1 value pushed */
726 
PUSHB[ ]\011/* 3 values pushed */
11 215 10 
PUSHW[ ]\011/* 1 value pushed */
589 
PUSHB[ ]\011/* 3 values pushed */
39 0 163 
PUSHW[ ]\011/* 2 values pushed */
336 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
RTHG[ ]\011/* RoundToHalfGrid */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHB[ ]\011/* 3 values pushed */
10 2 28 
PUSHW[ ]\011/* 1 value pushed */
-2 
PUSHB[ ]\011/* 3 values pushed */
0 2 19 
PUSHW[ ]\011/* 1 value pushed */
-2 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
GTEQ[ ]\011/* GreaterThanOrEqual */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
96 
LTEQ[ ]\011/* LessThenOrEqual */
AND[ ]\011/* LogicalAnd */
IF[ ]\011/* If */
PUSHW[ ]\011/* 2 values pushed */
28 -1 
PUSHB[ ]\011/* 4 values pushed */
19 1 18 19 
SFVTL[0]\011/* SetFVectorToLine */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
EIF[ ]\011/* EndIf */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = onesuperior;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"410 1216 LINE SMOOTH",
"395.333 1212 OFFCURVE",
"385.833 1207.667 OFFCURVE",
"381.5 1203 CURVE SMOOTH",
"377.167 1198.333 OFFCURVE",
"375 1193 OFFCURVE",
"375 1187 CURVE SMOOTH",
"375 1172.333 OFFCURVE",
"390 1159 OFFCURVE",
"410 1159 CURVE SMOOTH",
"415.333 1159 OFFCURVE",
"421.667 1160 OFFCURVE",
"429 1162 CURVE SMOOTH",
"577 1202 LINE",
"577 673 LINE",
"419 673 LINE SMOOTH",
"387 673 OFFCURVE",
"374 659.667 OFFCURVE",
"374 645 CURVE SMOOTH",
"374 629 OFFCURVE",
"387 616 OFFCURVE",
"419 616 CURVE SMOOTH",
"808 616 LINE SMOOTH",
"841.333 616 OFFCURVE",
"854 629.333 OFFCURVE",
"854 644 CURVE SMOOTH",
"854 660 OFFCURVE",
"841.333 673 OFFCURVE",
"808 673 CURVE SMOOTH",
"651 673 LINE",
"651 1282 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
18 9 15 
PUSHW[ ]\011/* 1 value pushed */
670 
NPUSHB[ ]\011/* 11 values pushed */
12 148 16 12 12 15 16 66 9 8 2 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 13 values pushed */
5 148 1 5 5 2 1 66 8 21 16 23 1 
PUSHW[ ]\011/* 4 values pushed */
778 0 16 756 
PUSHB[ ]\011/* 6 values pushed */
17 8 79 9 1 9 
PUSHW[ ]\011/* 1 value pushed */
684 
NPUSHB[ ]\011/* 21 values pushed */
17 91 0 18 77 26 174 0 0 23 116 0 91 17 1 91 17 0 16 1 16 
PUSHW[ ]\011/* 1 value pushed */
595 
PUSHB[ ]\011/* 4 values pushed */
27 72 169 24 
PUSHW[ ]\011/* 1 value pushed */
300 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
RS[ ]\011/* ReadStore */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 13 values pushed */
127 1 127 2 127 8 127 9 127 15 127 16 6 
DELTAP1[ ]\011/* DeltaExceptionP1 */
EIF[ ]\011/* EndIf */";
};
width = 1229;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"472.667 711 OFFCURVE",
"554 776.333 OFFCURVE",
"664 869 CURVE SMOOTH",
"752.667 943.667 OFFCURVE",
"806.667 997 OFFCURVE",
"826 1029 CURVE SMOOTH",
"838 1049 OFFCURVE",
"844 1071.667 OFFCURVE",
"844 1097 CURVE SMOOTH",
"844 1187.667 OFFCURVE",
"742 1285 OFFCURVE",
"606 1285 CURVE SMOOTH",
"464.667 1285 OFFCURVE",
"365 1183.333 OFFCURVE",
"365 1122 CURVE SMOOTH",
"365 1115.333 OFFCURVE",
"367.667 1109.667 OFFCURVE",
"373 1105 CURVE SMOOTH",
"380.333 1099 OFFCURVE",
"389.667 1096 OFFCURVE",
"401 1096 CURVE SMOOTH",
"410.333 1096 OFFCURVE",
"419 1098.333 OFFCURVE",
"427 1103 CURVE",
"431 1105.667 OFFCURVE",
"434.333 1111.333 OFFCURVE",
"437 1120 CURVE",
"461 1185.333 OFFCURVE",
"524.667 1229 OFFCURVE",
"606 1229 CURVE SMOOTH",
"700.667 1229 OFFCURVE",
"770 1162.667 OFFCURVE",
"770 1096 CURVE SMOOTH",
"770 1074 OFFCURVE",
"760.667 1051 OFFCURVE",
"742 1027 CURVE SMOOTH",
"710 985.667 OFFCURVE",
"576.333 872.667 OFFCURVE",
"341 688 CURVE",
"341 616 LINE",
"844 616 LINE",
"844 683 LINE SMOOTH",
"844 694.333 OFFCURVE",
"841.667 702.333 OFFCURVE",
"837 707 CURVE",
"829 714.333 OFFCURVE",
"819 718 OFFCURVE",
"807 718 CURVE SMOOTH",
"794.333 718 OFFCURVE",
"784.333 714 OFFCURVE",
"777 706 CURVE",
"772.333 702 OFFCURVE",
"770 691 OFFCURVE",
"770 673 CURVE",
"420 673 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
40 -64 
PUSHB[ ]\011/* 4 values pushed */
13 22 63 40 
PUSHW[ ]\011/* 1 value pushed */
-24 
PUSHB[ ]\011/* 4 values pushed */
12 20 63 40 
PUSHW[ ]\011/* 1 value pushed */
-24 
NPUSHB[ ]\011/* 45 values pushed */
11 18 63 9 40 25 40 101 35 254 31 250 32 5 10 13 23 0 23 40 21 41 81 39 107 14 107 38 7 14 32 24 31 44 31 206 14 204 38 204 39 229 0 7 5 
PUSHW[ ]\011/* 1 value pushed */
765 
PUSHB[ ]\011/* 3 values pushed */
1 1 12 
PUSHW[ ]\011/* 1 value pushed */
775 
NPUSHB[ ]\011/* 9 values pushed */
0 55 10 0 11 16 11 2 11 
PUSHW[ ]\011/* 1 value pushed */
531 
NPUSHB[ ]\011/* 34 values pushed */
33 15 24 31 24 2 24 177 19 55 33 0 1 91 9 9 10 38 91 14 62 16 44 64 36 1 36 36 15 10 31 10 2 10 
PUSHW[ ]\011/* 1 value pushed */
418 
NPUSHB[ ]\011/* 16 values pushed */
43 22 91 30 62 11 0 91 12 12 11 25 42 245 120 24 
PUSHW[ ]\011/* 1 value pushed */
356 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP3[ ]\011/* DeltaExceptionP3 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"768.667 985.333 OFFCURVE",
"796 1007 OFFCURVE",
"818 1037 CURVE SMOOTH",
"834 1059 OFFCURVE",
"842 1084.667 OFFCURVE",
"842 1114 CURVE SMOOTH",
"842 1202 OFFCURVE",
"753.333 1285 OFFCURVE",
"616 1285 CURVE SMOOTH",
"528 1285 OFFCURVE",
"445 1252 OFFCURVE",
"401 1204 CURVE SMOOTH",
"393.667 1196 OFFCURVE",
"390 1189 OFFCURVE",
"390 1183 CURVE SMOOTH",
"390 1169.667 OFFCURVE",
"404.667 1157 OFFCURVE",
"426 1157 CURVE SMOOTH",
"439.333 1157 OFFCURVE",
"450.333 1162 OFFCURVE",
"459 1172 CURVE",
"495 1210 OFFCURVE",
"547.333 1229 OFFCURVE",
"616 1229 CURVE SMOOTH",
"710.667 1229 OFFCURVE",
"768 1172.667 OFFCURVE",
"768 1114 CURVE SMOOTH",
"768 1067.38 OFFCURVE",
"675.876 1004 OFFCURVE",
"585 1004 CURVE SMOOTH",
"555.667 1004 OFFCURVE",
"542 991.667 OFFCURVE",
"542 977 CURVE SMOOTH",
"542 961 OFFCURVE",
"553.667 949.333 OFFCURVE",
"587 948 CURVE SMOOTH",
"720.333 945.333 OFFCURVE",
"795 873 OFFCURVE",
"795 801 CURVE SMOOTH",
"795 730.333 OFFCURVE",
"717.333 657 OFFCURVE",
"604 657 CURVE SMOOTH",
"542 657 OFFCURVE",
"485 673.333 OFFCURVE",
"433 706 CURVE SMOOTH",
"413.667 717.333 OFFCURVE",
"399 723 OFFCURVE",
"389 723 CURVE SMOOTH",
"369 723 OFFCURVE",
"355 710.667 OFFCURVE",
"355 696 CURVE SMOOTH",
"355 690 OFFCURVE",
"357.333 684.333 OFFCURVE",
"362 679 CURVE",
"395.333 645.667 OFFCURVE",
"509.333 601 OFFCURVE",
"604 601 CURVE SMOOTH",
"762.667 601 OFFCURVE",
"869 702 OFFCURVE",
"869 802 CURVE SMOOTH",
"869 867.333 OFFCURVE",
"820 936 OFFCURVE",
"736 972 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
15 19 1 100 16 111 39 2 0 30 0 
PUSHW[ ]\011/* 1 value pushed */
775 
PUSHB[ ]\011/* 7 values pushed */
32 80 30 1 30 55 24 
PUSHW[ ]\011/* 1 value pushed */
410 
NPUSHB[ ]\011/* 44 values pushed */
49 41 174 37 55 49 14 174 18 30 55 24 18 55 15 6 1 0 6 16 6 2 6 34 44 52 62 21 44 15 3 1 3 26 57 44 62 11 25 56 49 0 6 245 
PUSHW[ ]\011/* 3 values pushed */
382 24 289 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
RTHG[ ]\011/* RoundToHalfGrid */
SMD[ ]\011/* SetMinimumDistance */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = onehalf;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"36 1216 LINE SMOOTH",
"21.333 1212 OFFCURVE",
"11.833 1207.667 OFFCURVE",
"7.5 1203 CURVE SMOOTH",
"3.167 1198.333 OFFCURVE",
"1 1193 OFFCURVE",
"1 1187 CURVE SMOOTH",
"1 1172.333 OFFCURVE",
"16 1159 OFFCURVE",
"36 1159 CURVE SMOOTH",
"41.333 1159 OFFCURVE",
"47.667 1160 OFFCURVE",
"55 1162 CURVE SMOOTH",
"203 1202 LINE",
"203 673 LINE",
"45 673 LINE SMOOTH",
"13 673 OFFCURVE",
"0 659.667 OFFCURVE",
"0 645 CURVE SMOOTH",
"0 629 OFFCURVE",
"13 616 OFFCURVE",
"45 616 CURVE SMOOTH",
"434 616 LINE SMOOTH",
"467.333 616 OFFCURVE",
"480 629.333 OFFCURVE",
"480 644 CURVE SMOOTH",
"480 660 OFFCURVE",
"467.333 673 OFFCURVE",
"434 673 CURVE SMOOTH",
"277 673 LINE",
"277 1282 LINE"
);
},
{
closed = 1;
nodes = (
"1175.667 906.333 OFFCURVE",
"1186 920.667 OFFCURVE",
"1186 936 CURVE SMOOTH",
"1186 958.667 OFFCURVE",
"1167 978 OFFCURVE",
"1143 978 CURVE SMOOTH",
"1135 978 OFFCURVE",
"1123.667 973.333 OFFCURVE",
"1109 964 CURVE SMOOTH",
"194 374 LINE SMOOTH",
"172.667 360.667 OFFCURVE",
"162 346.333 OFFCURVE",
"162 331 CURVE SMOOTH",
"162 307 OFFCURVE",
"181 289 OFFCURVE",
"205 289 CURVE SMOOTH",
"213 289 OFFCURVE",
"224.333 293.667 OFFCURVE",
"239 303 CURVE SMOOTH",
"1155 893 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"870.667 94 OFFCURVE",
"952 159.667 OFFCURVE",
"1062 253 CURVE SMOOTH",
"1150.667 327.667 OFFCURVE",
"1204.667 381 OFFCURVE",
"1224 413 CURVE SMOOTH",
"1236 433 OFFCURVE",
"1242 455.667 OFFCURVE",
"1242 481 CURVE SMOOTH",
"1242 571.667 OFFCURVE",
"1140 668 OFFCURVE",
"1004 668 CURVE SMOOTH",
"862.667 668 OFFCURVE",
"763 566.333 OFFCURVE",
"763 505 CURVE SMOOTH",
"763 498.333 OFFCURVE",
"766 493 OFFCURVE",
"772 489 CURVE",
"779.333 482.333 OFFCURVE",
"788.333 479 OFFCURVE",
"799 479 CURVE SMOOTH",
"809 479 OFFCURVE",
"817.667 481.667 OFFCURVE",
"825 487 CURVE",
"829 489 OFFCURVE",
"832.667 494.333 OFFCURVE",
"836 503 CURVE",
"858.667 569.667 OFFCURVE",
"922.667 612 OFFCURVE",
"1004 612 CURVE SMOOTH",
"1098.667 612 OFFCURVE",
"1168 547 OFFCURVE",
"1168 479 CURVE SMOOTH",
"1168 457 OFFCURVE",
"1158.667 434.333 OFFCURVE",
"1140 411 CURVE SMOOTH",
"1108 369 OFFCURVE",
"974.333 255.667 OFFCURVE",
"739 71 CURVE",
"739 0 LINE",
"1242 0 LINE",
"1242 66 LINE SMOOTH",
"1242 78 OFFCURVE",
"1239.667 86.333 OFFCURVE",
"1235 91 CURVE",
"1227 97.667 OFFCURVE",
"1217 101 OFFCURVE",
"1205 101 CURVE SMOOTH",
"1192.333 101 OFFCURVE",
"1182.333 97.333 OFFCURVE",
"1175 90 CURVE SMOOTH",
"1170.333 85.333 OFFCURVE",
"1168 74 OFFCURVE",
"1168 56 CURVE",
"818 56 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
127 27 127 28 127 35 127 36 4 36 35 35 36 28 27 20 28 28 27 35 28 36 3 27 85 79 43 62 28 35 54 27 36 1 0 44 43 98 55 55 54 52 77 53 53 54 62 55 69 116 76 16 98 9 9 1 98 8 
PUSHW[ ]\011/* 1 value pushed */
531 
NPUSHB[ ]\011/* 15 values pushed */
17 91 0 18 77 26 174 0 73 62 43 91 54 255 52 
PUSHW[ ]\011/* 1 value pushed */
388 
NPUSHB[ ]\011/* 19 values pushed */
86 59 44 79 26 86 23 213 17 5 213 0 1 91 12 213 16 16 17 
PUSHW[ ]\011/* 1 value pushed */
303 
NPUSHB[ ]\011/* 9 values pushed */
85 0 0 76 54 10 60 68 24 
PUSHW[ ]\011/* 1 value pushed */
291 
SCANCTRL[ ]\011/* ScanConversionControl */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"36 1216 LINE SMOOTH",
"21.333 1212 OFFCURVE",
"11.833 1207.667 OFFCURVE",
"7.5 1203 CURVE SMOOTH",
"3.167 1198.333 OFFCURVE",
"1 1193 OFFCURVE",
"1 1187 CURVE SMOOTH",
"1 1172.333 OFFCURVE",
"16 1159 OFFCURVE",
"36 1159 CURVE SMOOTH",
"41.333 1159 OFFCURVE",
"47.667 1160 OFFCURVE",
"55 1162 CURVE SMOOTH",
"203 1202 LINE",
"203 673 LINE",
"45 673 LINE SMOOTH",
"13 673 OFFCURVE",
"0 659.667 OFFCURVE",
"0 645 CURVE SMOOTH",
"0 629 OFFCURVE",
"13 616 OFFCURVE",
"45 616 CURVE SMOOTH",
"434 616 LINE SMOOTH",
"467.333 616 OFFCURVE",
"480 629.333 OFFCURVE",
"480 644 CURVE SMOOTH",
"480 660 OFFCURVE",
"467.333 673 OFFCURVE",
"434 673 CURVE SMOOTH",
"277 673 LINE",
"277 1282 LINE"
);
},
{
closed = 1;
nodes = (
"1205.667 906.333 OFFCURVE",
"1216 920.667 OFFCURVE",
"1216 936 CURVE SMOOTH",
"1216 958.667 OFFCURVE",
"1196.667 978 OFFCURVE",
"1174 978 CURVE SMOOTH",
"1166 978 OFFCURVE",
"1154.333 973.333 OFFCURVE",
"1139 964 CURVE SMOOTH",
"224 374 LINE SMOOTH",
"203.333 360.667 OFFCURVE",
"193 346.333 OFFCURVE",
"193 331 CURVE SMOOTH",
"193 307 OFFCURVE",
"211 289 OFFCURVE",
"235 289 CURVE SMOOTH",
"243 289 OFFCURVE",
"254.667 293.667 OFFCURVE",
"270 303 CURVE SMOOTH",
"1185 893 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1069 56 LINE",
"988 56 LINE SMOOTH",
"954.667 56 OFFCURVE",
"942 44 OFFCURVE",
"942 28 CURVE SMOOTH",
"942 13.333 OFFCURVE",
"954.667 0 OFFCURVE",
"988 0 CURVE SMOOTH",
"1172 0 LINE SMOOTH",
"1205.333 0 OFFCURVE",
"1218 13.333 OFFCURVE",
"1218 28 CURVE SMOOTH",
"1218 42.667 OFFCURVE",
"1205.333 56 OFFCURVE",
"1172 56 CURVE SMOOTH",
"1143 56 LINE",
"1143 179 LINE",
"1172 179 LINE SMOOTH",
"1202.146 179 OFFCURVE",
"1218 189.518 OFFCURVE",
"1218 207 CURVE SMOOTH",
"1218 221.667 OFFCURVE",
"1205.333 235 OFFCURVE",
"1172 235 CURVE SMOOTH",
"1143 235 LINE",
"1143 653 LINE",
"1019 653 LINE",
"740 236 LINE",
"740 179 LINE",
"1069 179 LINE"
);
},
{
closed = 1;
nodes = (
"820 235 LINE",
"1063 597 LINE",
"1069 597 LINE",
"1069 235 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
31 44 31 45 65 44 65 77 81 44 81 77 6 9 15 
PUSHW[ ]\011/* 1 value pushed */
670 
NPUSHB[ ]\011/* 11 values pushed */
12 148 16 12 12 15 16 66 9 8 2 
PUSHW[ ]\011/* 1 value pushed */
696 
NPUSHB[ ]\011/* 25 values pushed */
5 148 1 5 5 2 1 66 8 21 16 23 27 28 28 36 35 36 20 35 35 36 76 77 77 
PUSHW[ ]\011/* 1 value pushed */
295 
NPUSHB[ ]\011/* 56 values pushed */
45 46 20 45 45 46 35 28 36 27 4 52 78 28 35 74 75 27 36 8 0 48 77 45 206 77 98 57 47 44 63 44 79 44 3 111 44 127 44 143 44 3 44 44 65 76 75 85 46 58 73 77 66 66 65 1 
PUSHW[ ]\011/* 4 values pushed */
778 0 16 756 
PUSHB[ ]\011/* 8 values pushed */
17 8 15 9 31 9 2 9 
PUSHW[ ]\011/* 1 value pushed */
684 
NPUSHB[ ]\011/* 20 values pushed */
17 91 0 18 77 26 174 0 0 79 46 95 46 2 46 65 10 76 85 46 
PUSHW[ ]\011/* 1 value pushed */
396 
NPUSHB[ ]\011/* 13 values pushed */
47 47 48 48 57 57 58 75 74 45 77 59 44 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 29 values pushed */
74 43 43 15 69 31 69 2 69 136 73 52 154 62 154 73 59 58 154 79 23 116 0 91 17 1 91 17 16 
PUSHW[ ]\011/* 1 value pushed */
-192 
PUSHB[ ]\011/* 4 values pushed */
9 10 52 16 
PUSHW[ ]\011/* 5 values pushed */
662 78 76 341 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"413.667 985.333 OFFCURVE",
"441 1007 OFFCURVE",
"463 1037 CURVE SMOOTH",
"479 1059 OFFCURVE",
"487 1084.667 OFFCURVE",
"487 1114 CURVE SMOOTH",
"487 1202 OFFCURVE",
"398.333 1285 OFFCURVE",
"261 1285 CURVE SMOOTH",
"173 1285 OFFCURVE",
"90 1252 OFFCURVE",
"46 1204 CURVE SMOOTH",
"38.667 1196 OFFCURVE",
"35 1189 OFFCURVE",
"35 1183 CURVE SMOOTH",
"35 1169.667 OFFCURVE",
"49.667 1157 OFFCURVE",
"71 1157 CURVE SMOOTH",
"84.333 1157 OFFCURVE",
"95.333 1162 OFFCURVE",
"104 1172 CURVE",
"140 1210 OFFCURVE",
"192.333 1229 OFFCURVE",
"261 1229 CURVE SMOOTH",
"355.667 1229 OFFCURVE",
"413 1172.667 OFFCURVE",
"413 1114 CURVE SMOOTH",
"413 1067.38 OFFCURVE",
"320.876 1004 OFFCURVE",
"230 1004 CURVE SMOOTH",
"200.667 1004 OFFCURVE",
"187 991.667 OFFCURVE",
"187 977 CURVE SMOOTH",
"187 961 OFFCURVE",
"198.667 949.333 OFFCURVE",
"232 948 CURVE SMOOTH",
"365.333 945.333 OFFCURVE",
"440 873 OFFCURVE",
"440 801 CURVE SMOOTH",
"440 730.333 OFFCURVE",
"362.333 657 OFFCURVE",
"249 657 CURVE SMOOTH",
"187 657 OFFCURVE",
"130 673.333 OFFCURVE",
"78 706 CURVE SMOOTH",
"58.667 717.333 OFFCURVE",
"44 723 OFFCURVE",
"34 723 CURVE SMOOTH",
"14 723 OFFCURVE",
"0 710.667 OFFCURVE",
"0 696 CURVE SMOOTH",
"0 690 OFFCURVE",
"2.333 684.333 OFFCURVE",
"7 679 CURVE",
"40.333 645.667 OFFCURVE",
"154.333 601 OFFCURVE",
"249 601 CURVE SMOOTH",
"407.667 601 OFFCURVE",
"514 702 OFFCURVE",
"514 802 CURVE SMOOTH",
"514 867.333 OFFCURVE",
"465 936 OFFCURVE",
"381 972 CURVE"
);
},
{
closed = 1;
nodes = (
"1192.333 906.333 OFFCURVE",
"1203 920.667 OFFCURVE",
"1203 936 CURVE SMOOTH",
"1203 958.667 OFFCURVE",
"1184 978 OFFCURVE",
"1160 978 CURVE SMOOTH",
"1152 978 OFFCURVE",
"1140.667 973.333 OFFCURVE",
"1126 964 CURVE SMOOTH",
"210 374 LINE SMOOTH",
"189.333 360.667 OFFCURVE",
"179 346.333 OFFCURVE",
"179 331 CURVE SMOOTH",
"179 307 OFFCURVE",
"198 289 OFFCURVE",
"222 289 CURVE SMOOTH",
"230 289 OFFCURVE",
"241.333 293.667 OFFCURVE",
"256 303 CURVE SMOOTH",
"1171 893 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1064 56 LINE",
"983 56 LINE SMOOTH",
"949.667 56 OFFCURVE",
"938 44 OFFCURVE",
"938 28 CURVE SMOOTH",
"938 13.333 OFFCURVE",
"949.667 0 OFFCURVE",
"983 0 CURVE SMOOTH",
"1167 0 LINE SMOOTH",
"1200.333 0 OFFCURVE",
"1213 13.333 OFFCURVE",
"1213 28 CURVE SMOOTH",
"1213 42.667 OFFCURVE",
"1200.333 56 OFFCURVE",
"1167 56 CURVE SMOOTH",
"1138 56 LINE",
"1138 179 LINE",
"1167 179 LINE SMOOTH",
"1197.146 179 OFFCURVE",
"1213 189.518 OFFCURVE",
"1213 207 CURVE SMOOTH",
"1213 221.667 OFFCURVE",
"1200.333 235 OFFCURVE",
"1167 235 CURVE SMOOTH",
"1138 235 LINE",
"1138 653 LINE",
"1014 653 LINE",
"735 236 LINE",
"735 179 LINE",
"1064 179 LINE"
);
},
{
closed = 1;
nodes = (
"816 235 LINE",
"1058 597 LINE",
"1064 597 LINE",
"1064 235 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
31 73 31 74 2 64 73 64 75 64 105 64 106 80 73 80 74 80 105 80 106 96 74 96 105 96 106 11 56 57 57 32 64 65 20 64 64 65 105 106 106 
PUSHW[ ]\011/* 1 value pushed */
295 
NPUSHB[ ]\011/* 50 values pushed */
74 75 20 74 74 75 64 57 65 56 4 81 107 0 30 24 57 64 103 104 56 65 18 30 77 106 74 206 106 98 86 73 73 102 105 104 85 75 87 102 98 95 95 94 30 98 24 24 37 14 
PUSHW[ ]\011/* 1 value pushed */
483 
PUSHB[ ]\011/* 4 values pushed */
18 98 6 41 
PUSHW[ ]\011/* 1 value pushed */
483 
NPUSHB[ ]\011/* 15 values pushed */
37 98 49 6 49 0 95 75 1 75 94 10 105 85 75 
PUSHW[ ]\011/* 1 value pushed */
396 
NPUSHB[ ]\011/* 13 values pushed */
76 76 77 77 86 86 87 104 103 74 106 59 73 
PUSHW[ ]\011/* 1 value pushed */
675 
NPUSHB[ ]\011/* 28 values pushed */
103 72 72 15 98 31 98 2 98 136 102 81 154 91 154 102 59 87 154 108 34 33 52 21 33 52 93 3 
PUSHW[ ]\011/* 1 value pushed */
605 
PUSHB[ ]\011/* 8 values pushed */
27 147 44 89 11 25 107 152 
PUSHW[ ]\011/* 2 values pushed */
290 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00110]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
CALL[ ]\011/* CallFunction */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = franc;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 565 LINE",
"714 565 LINE",
"714 470 LINE SMOOTH",
"714 430 OFFCURVE",
"730.667 414 OFFCURVE",
"756 414 CURVE SMOOTH",
"781.333 414 OFFCURVE",
"798 430 OFFCURVE",
"798 470 CURVE SMOOTH",
"798 744 LINE SMOOTH",
"798 784 OFFCURVE",
"781.333 800 OFFCURVE",
"756 800 CURVE SMOOTH",
"730.667 800 OFFCURVE",
"714 784 OFFCURVE",
"714 744 CURVE SMOOTH",
"714 649 LINE",
"412 649 LINE",
"412 1086 LINE",
"1055 1086 LINE",
"1055 881 LINE SMOOTH",
"1055 841 OFFCURVE",
"1072.667 825 OFFCURVE",
"1098 825 CURVE SMOOTH",
"1123.333 825 OFFCURVE",
"1140 841 OFFCURVE",
"1140 881 CURVE SMOOTH",
"1140 1170 LINE",
"215 1170 LINE SMOOTH",
"195 1170 OFFCURVE",
"181.333 1166.667 OFFCURVE",
"174 1160 CURVE SMOOTH",
"164 1151.333 OFFCURVE",
"159 1140.667 OFFCURVE",
"159 1128 CURVE SMOOTH",
"159 1102.667 OFFCURVE",
"175 1086 OFFCURVE",
"215 1086 CURVE SMOOTH",
"328 1086 LINE",
"328 322 LINE",
"215 322 LINE SMOOTH",
"175 322 OFFCURVE",
"159 305.333 OFFCURVE",
"159 280 CURVE SMOOTH",
"159 256 OFFCURVE",
"175 238 OFFCURVE",
"215 238 CURVE SMOOTH",
"328 238 LINE",
"328 84 LINE",
"215 84 LINE SMOOTH",
"175 84 OFFCURVE",
"159 67.333 OFFCURVE",
"159 42 CURVE SMOOTH",
"159 18 OFFCURVE",
"175 0 OFFCURVE",
"215 0 CURVE SMOOTH",
"700 0 LINE SMOOTH",
"740 0 OFFCURVE",
"756 18 OFFCURVE",
"756 42 CURVE SMOOTH",
"756 67.333 OFFCURVE",
"740 84 OFFCURVE",
"700 84 CURVE SMOOTH",
"412 84 LINE",
"412 238 LINE",
"628 238 LINE SMOOTH",
"668 238 OFFCURVE",
"684 256 OFFCURVE",
"684 280 CURVE SMOOTH",
"684 305.333 OFFCURVE",
"668 322 OFFCURVE",
"628 322 CURVE SMOOTH",
"412 322 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
53 36 70 70 42 17 1 36 7 7 25 32 36 26 26 25 25 42 17 10 91 16 23 91 16 17 8 47 
PUSHW[ ]\011/* 1 value pushed */
410 
NPUSHB[ ]\011/* 14 values pushed */
51 36 43 35 36 43 42 2 62 61 68 61 36 55 
PUSHW[ ]\011/* 1 value pushed */
408 
NPUSHB[ ]\011/* 14 values pushed */
9 43 44 51 44 91 50 212 72 52 0 4 215 13 
PUSHW[ ]\011/* 1 value pushed */
317 
NPUSHB[ ]\011/* 13 values pushed */
9 20 212 29 212 9 36 24 38 212 34 34 24 
PUSHW[ ]\011/* 5 values pushed */
665 71 80 339 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = franc;
unicode = 20A3;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = breve;
transform = "{1, 0, 0, 1, 52, 265}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = breve;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 0, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = scedilla;
unicode = 015F;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acute;
transform = "{1, 0, 0, 1, 72, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acute;
transform = "{1, 0, 0, 1, 70, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 47, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 57, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = dmacron;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1026 1255 LINE",
"829 1255 LINE SMOOTH",
"787.667 1255 OFFCURVE",
"772 1237 OFFCURVE",
"772 1213 CURVE SMOOTH",
"772 1187.667 OFFCURVE",
"787.667 1170 OFFCURVE",
"829 1170 CURVE SMOOTH",
"941 1170 LINE",
"941 1075 LINE",
"691 1075 LINE SMOOTH",
"643.667 1075 OFFCURVE",
"617 1074.333 OFFCURVE",
"611 1073 CURVE",
"596.333 1069 OFFCURVE",
"583 1051.667 OFFCURVE",
"583 1033 CURVE SMOOTH",
"583 1014.333 OFFCURVE",
"596 998.333 OFFCURVE",
"612 993 CURVE",
"617.333 991.667 OFFCURVE",
"643.667 991 OFFCURVE",
"691 991 CURVE SMOOTH",
"941 991 LINE",
"941 696 LINE",
"841 829.333 OFFCURVE",
"717.667 896 OFFCURVE",
"571 896 CURVE SMOOTH",
"417.667 896 OFFCURVE",
"267.167 811.167 OFFCURVE",
"186.5 662.5 CURVE SMOOTH",
"146.167 588.167 OFFCURVE",
"126 511 OFFCURVE",
"126 431 CURVE SMOOTH",
"126 272.333 OFFCURVE",
"212.167 108.167 OFFCURVE",
"351.5 27.5 CURVE SMOOTH",
"421.167 -12.833 OFFCURVE",
"494 -33 OFFCURVE",
"570 -33 CURVE SMOOTH",
"720 -33 OFFCURVE",
"843.667 33.667 OFFCURVE",
"941 167 CURVE",
"941 0 LINE",
"1138 0 LINE SMOOTH",
"1179.333 0 OFFCURVE",
"1195 18 OFFCURVE",
"1195 42 CURVE SMOOTH",
"1195 67.333 OFFCURVE",
"1179.333 84 OFFCURVE",
"1138 84 CURVE SMOOTH",
"1026 84 LINE",
"1026 991 LINE",
"1129 991 LINE SMOOTH",
"1170.471 991 OFFCURVE",
"1195 999.848 OFFCURVE",
"1195 1033 CURVE SMOOTH",
"1195 1062.325 OFFCURVE",
"1173.9 1075 OFFCURVE",
"1136 1075 CURVE SMOOTH",
"1026 1075 LINE"
);
},
{
closed = 1;
nodes = (
"941 219 OFFCURVE",
"774.667 51 OFFCURVE",
"576 51 CURVE SMOOTH",
"376 51 OFFCURVE",
"210 219 OFFCURVE",
"210 431 CURVE SMOOTH",
"210 644.333 OFFCURVE",
"376 811 OFFCURVE",
"576 811 CURVE SMOOTH",
"774.667 811 OFFCURVE",
"941 644.333 OFFCURVE",
"941 431 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
168 20 166 32 185 20 183 32 4 79 20 64 32 2 161 59 161 63 181 59 183 60 180 63 192 60 193 63 7 41 8 5 15 18 12 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 14 values pushed */
0 15 1 15 47 11 15 15 12 11 34 18 53 47 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 53 values pushed */
50 47 46 50 50 47 46 34 53 32 33 10 19 20 32 58 64 1 59 9 9 34 59 15 44 31 44 47 44 63 44 79 44 143 44 159 44 175 44 8 79 44 1 44 147 53 58 33 30 64 33 22 12 
PUSHW[ ]\011/* 4 values pushed */
396 11 18 302 
PUSHB[ ]\011/* 5 values pushed */
33 19 9 224 1 
PUSHW[ ]\011/* 1 value pushed */
396 
NPUSHB[ ]\011/* 27 values pushed */
0 59 45 45 19 54 11 32 46 19 19 64 55 1 48 55 80 55 128 55 3 0 55 16 55 2 55 
PUSHW[ ]\011/* 1 value pushed */
539 
NPUSHB[ ]\011/* 22 values pushed */
61 33 0 26 1 240 26 1 26 25 67 53 0 30 7 18 10 22 11 42 128 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[00101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 28 values pushed */
59 63 23 29 28 38 24 37 59 29 61 35 0 63 23 61 35 0 60 27 58 35 1 62 25 64 35 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = dmacron;
unicode = 0111;
},
{
glyphname = overscore;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1241.333 1340 OFFCURVE",
"1256 1358 OFFCURVE",
"1256 1382 CURVE SMOOTH",
"1256 1407.333 OFFCURVE",
"1241.333 1425 OFFCURVE",
"1200 1425 CURVE SMOOTH",
"29 1425 LINE SMOOTH",
"-11 1425 OFFCURVE",
"-27 1407 OFFCURVE",
"-27 1383 CURVE SMOOTH",
"-27 1357.667 OFFCURVE",
"-11 1340 OFFCURVE",
"29 1340 CURVE SMOOTH",
"1200 1340 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
7 30 0 11 26 15 4 25 14 
PUSHW[ ]\011/* 1 value pushed */
472 
PUSHB[ ]\011/* 2 values pushed */
124 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = overscore;
unicode = 00AF;
},
{
glyphname = middot;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"913 740.333 OFFCURVE",
"867 786 OFFCURVE",
"811 786 CURVE SMOOTH",
"753.667 786 OFFCURVE",
"708 740.333 OFFCURVE",
"708 683 CURVE SMOOTH",
"708 627 OFFCURVE",
"753.667 581 OFFCURVE",
"811 581 CURVE SMOOTH",
"867 581 OFFCURVE",
"913 627 OFFCURVE",
"913 683 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
9 138 3 0 
PUSHW[ ]\011/* 1 value pushed */
305 
PUSHB[ ]\011/* 3 values pushed */
6 25 12 
PUSHW[ ]\011/* 1 value pushed */
435 
PUSHB[ ]\011/* 2 values pushed */
170 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = middot;
unicode = 00B7;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 1, 265}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = Aogonek;
layers = (
{
components = (
{
name = A;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 512, 33}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = aogonek;
layers = (
{
components = (
{
name = a;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 434, 34}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 11, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = dcaron;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"684 1255 LINE SMOOTH",
"646.667 1255 OFFCURVE",
"628 1240.667 OFFCURVE",
"628 1212 CURVE SMOOTH",
"628 1184 OFFCURVE",
"646.667 1170 OFFCURVE",
"684 1170 CURVE SMOOTH",
"796 1170 LINE",
"797 714 LINE",
"715.667 835.333 OFFCURVE",
"616.333 896 OFFCURVE",
"499 896 CURVE SMOOTH",
"296.333 896 OFFCURVE",
"126 689.667 OFFCURVE",
"126 431 CURVE SMOOTH",
"126 180.333 OFFCURVE",
"290 -33 OFFCURVE",
"498 -33 CURVE SMOOTH",
"618.667 -33 OFFCURVE",
"718.333 29.667 OFFCURVE",
"797 155 CURVE",
"796 0 LINE",
"994 0 LINE SMOOTH",
"1031.333 0 OFFCURVE",
"1050 14 OFFCURVE",
"1050 42 CURVE SMOOTH",
"1050 70 OFFCURVE",
"1031.333 84 OFFCURVE",
"994 84 CURVE SMOOTH",
"881 84 LINE",
"881 1255 LINE"
);
},
{
closed = 1;
nodes = (
"796 220.333 OFFCURVE",
"663 51 OFFCURVE",
"503 51 CURVE SMOOTH",
"339 51 OFFCURVE",
"210 225.667 OFFCURVE",
"210 431 CURVE SMOOTH",
"210 640.333 OFFCURVE",
"341.667 811 OFFCURVE",
"503 811 CURVE SMOOTH",
"664.333 811 OFFCURVE",
"796 641.667 OFFCURVE",
"796 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1137 1072.667 OFFCURVE",
"1114.333 1040.333 OFFCURVE",
"1075 999 CURVE SMOOTH",
"1055 978.333 OFFCURVE",
"1045 962.667 OFFCURVE",
"1045 952 CURVE SMOOTH",
"1045 932 OFFCURVE",
"1057 922 OFFCURVE",
"1081 922 CURVE SMOOTH",
"1115.667 922 OFFCURVE",
"1229 1070 OFFCURVE",
"1229 1170 CURVE SMOOTH",
"1229 1226.667 OFFCURVE",
"1202.333 1255 OFFCURVE",
"1149 1255 CURVE SMOOTH",
"1119 1255 LINE SMOOTH",
"1069.667 1255 OFFCURVE",
"1040 1217 OFFCURVE",
"1040 1173 CURVE SMOOTH",
"1040 1121.667 OFFCURVE",
"1066.333 1096 OFFCURVE",
"1119 1096 CURVE SMOOTH",
"1143 1096 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
122 11 122 15 137 11 137 15 214 29 5 138 54 1 53 64 9 16 52 47 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 18 values pushed */
9 16 52 170 26 170 30 2 143 8 134 17 129 18 3 26 16 36 
PUSHW[ ]\011/* 3 values pushed */
-23 32 -16 
PUSHB[ ]\011/* 3 values pushed */
30 16 18 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 4 values pushed */
8 16 6 2 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 11 values pushed */
4 47 1 4 4 2 1 34 6 24 20 
PUSHW[ ]\011/* 1 value pushed */
686 
NPUSHB[ ]\011/* 26 values pushed */
22 47 19 22 22 20 19 34 24 8 18 28 34 128 49 1 49 49 143 38 1 38 38 43 0 8 
PUSHW[ ]\011/* 1 value pushed */
302 
PUSHB[ ]\011/* 4 values pushed */
34 33 10 18 
PUSHW[ ]\011/* 1 value pushed */
302 
NPUSHB[ ]\011/* 17 values pushed */
28 33 16 24 0 7 10 10 11 16 7 0 0 37 46 40 51 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 25 values pushed */
9 16 52 51 51 40 40 46 0 1 19 25 7 32 64 1 1 1 1 31 33 128 13 1 13 
PUSHW[ ]\011/* 5 values pushed */
396 55 42 383 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
SHPIX[ ]\011/* ShiftZoneByPixel */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = Dslash;
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Dslash;
unicode = 0110;
},
{
glyphname = Eogonek;
layers = (
{
components = (
{
name = E;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 403, 27}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = eogonek;
layers = (
{
components = (
{
name = e;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 33, 3}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 25, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 33, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acute;
transform = "{1, 0, 0, 1, 6, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acute;
transform = "{1, 0, 0, 1, 2, 308}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 323, 1239}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = lcaron;
layers = (
{
components = (
{
name = l;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 273, 1364}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = Ldot;
layers = (
{
components = (
{
name = L;
},
{
name = middot;
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ldot;
unicode = 013F;
},
{
glyphname = ldot;
layers = (
{
components = (
{
name = l;
},
{
name = middot;
transform = "{1, 0, 0, 1, 47, -56}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ldot;
unicode = 0140;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acute;
transform = "{1, 0, 0, 1, 34, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acute;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 9, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = Odblacute;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 0, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Odblacute;
unicode = 0150;
},
{
glyphname = odblacute;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 108, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = odblacute;
unicode = 0151;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acute;
transform = "{1, 0, 0, 1, 38, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = racute;
layers = (
{
components = (
{
name = r;
},
{
name = acute;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = racute;
unicode = 0155;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, -24, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = rcaron;
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, 29, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = rcaron;
unicode = 0159;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acute;
transform = "{1, 0, 0, 1, 73, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = Tcedilla;
layers = (
{
components = (
{
name = T;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 0, 10}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Tcedilla;
unicode = 0162;
},
{
glyphname = tcedilla;
layers = (
{
components = (
{
name = t;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = tcedilla;
unicode = 0163;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 1, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = tcaron;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1073.333 1230 OFFCURVE",
"1045.333 1255 OFFCURVE",
"996 1255 CURVE SMOOTH",
"964 1255 LINE SMOOTH",
"913.333 1255 OFFCURVE",
"880 1220.667 OFFCURVE",
"880 1178 CURVE SMOOTH",
"880 1129.333 OFFCURVE",
"908 1105 OFFCURVE",
"964 1105 CURVE SMOOTH",
"989 1105 LINE",
"982.333 1083 OFFCURVE",
"958.333 1052.667 OFFCURVE",
"917 1014 CURVE SMOOTH",
"895.667 994.667 OFFCURVE",
"885 980 OFFCURVE",
"885 970 CURVE SMOOTH",
"885 951.333 OFFCURVE",
"897.333 942 OFFCURVE",
"922 942 CURVE SMOOTH",
"962 942 OFFCURVE",
"1080 1078.667 OFFCURVE",
"1080 1180 CURVE"
);
},
{
closed = 1;
nodes = (
"442 1114 LINE SMOOTH",
"442 1151.333 OFFCURVE",
"427.667 1170 OFFCURVE",
"399 1170 CURVE SMOOTH",
"371 1170 OFFCURVE",
"357 1151.333 OFFCURVE",
"357 1114 CURVE SMOOTH",
"357 866 LINE",
"202 866 LINE SMOOTH",
"164.667 866 OFFCURVE",
"146 851.667 OFFCURVE",
"146 823 CURVE SMOOTH",
"146 795 OFFCURVE",
"164.667 781 OFFCURVE",
"202 781 CURVE SMOOTH",
"357 781 LINE",
"357 222 LINE SMOOTH",
"357 66 OFFCURVE",
"482 -33 OFFCURVE",
"678 -33 CURVE SMOOTH",
"859.333 -33 OFFCURVE",
"1083 51.667 OFFCURVE",
"1083 105 CURVE SMOOTH",
"1083 133 OFFCURVE",
"1069.667 147 OFFCURVE",
"1043 147 CURVE SMOOTH",
"1034.333 147 OFFCURVE",
"1023.333 142.667 OFFCURVE",
"1010 134 CURVE",
"935.333 90 OFFCURVE",
"784.333 51 OFFCURVE",
"667 51 CURVE SMOOTH",
"544.333 51 OFFCURVE",
"442 106 OFFCURVE",
"442 222 CURVE SMOOTH",
"442 781 LINE",
"898 781 LINE SMOOTH",
"935.333 781 OFFCURVE",
"954 795 OFFCURVE",
"954 823 CURVE SMOOTH",
"954 851.667 OFFCURVE",
"935.333 866 OFFCURVE",
"898 866 CURVE SMOOTH",
"442 866 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
7 64 9 15 52 1 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 62 values pushed */
9 15 52 79 12 251 40 2 13 40 26 40 137 8 3 116 1 119 7 146 1 151 7 211 26 228 26 6 164 26 181 26 194 26 3 166 30 198 27 214 27 3 118 30 134 30 149 30 3 128 3 1 3 3 10 10 15 0 9 0 12 5 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 23 values pushed */
9 15 52 5 5 12 0 0 47 12 63 12 79 12 3 12 12 21 25 23 8 19 23 
PUSHW[ ]\011/* 3 values pushed */
686 21 370 
NPUSHB[ ]\011/* 28 values pushed */
24 21 21 23 24 34 19 51 2 43 59 47 47 23 59 19 19 18 6 33 33 28 33 38 11 35 136 21 
PUSHW[ ]\011/* 1 value pushed */
425 
NPUSHB[ ]\011/* 24 values pushed */
53 53 24 25 32 49 45 198 112 41 191 41 2 32 41 48 41 2 0 41 16 41 2 41 
PUSHW[ ]\011/* 1 value pushed */
741 
PUSHB[ ]\011/* 4 values pushed */
54 42 173 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 14 values pushed */
39 40 26 27 27 39 25 31 0 26 40 28 31 0 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ring;
transform = "{1, 0, 0, 1, 2, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Uring;
unicode = 016E;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ring;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = Udblacute;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 97, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Udblacute;
unicode = 0170;
},
{
glyphname = udblacute;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = udblacute;
unicode = 0171;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 76, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 80, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = Zdot;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 3, 264}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = Zdot;
unicode = 017B;
},
{
glyphname = zdot;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 9, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = zdot;
unicode = 017C;
},
{
glyphname = Gamma;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"468 1086 LINE",
"1026 1086 LINE",
"1026 752 LINE SMOOTH",
"1026 714.667 OFFCURVE",
"1040.333 696 OFFCURVE",
"1069 696 CURVE SMOOTH",
"1097 696 OFFCURVE",
"1111 714.667 OFFCURVE",
"1111 752 CURVE SMOOTH",
"1111 1170 LINE",
"183 1170 LINE SMOOTH",
"145.667 1170 OFFCURVE",
"127 1156 OFFCURVE",
"127 1128 CURVE SMOOTH",
"127 1100 OFFCURVE",
"145.667 1086 OFFCURVE",
"183 1086 CURVE SMOOTH",
"383 1086 LINE",
"383 84 LINE",
"183 84 LINE SMOOTH",
"145.667 84 OFFCURVE",
"127 70 OFFCURVE",
"127 42 CURVE SMOOTH",
"127 14 OFFCURVE",
"145.667 0 OFFCURVE",
"183 0 CURVE SMOOTH",
"668 0 LINE SMOOTH",
"705.333 0 OFFCURVE",
"724 14 OFFCURVE",
"724 42 CURVE SMOOTH",
"724 70 OFFCURVE",
"705.333 84 OFFCURVE",
"668 84 CURVE SMOOTH",
"468 84 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
19 23 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
21 219 24 21 21 23 24 29 19 17 13 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
15 53 12 15 15 13 12 29 17 5 1 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 11 values pushed */
3 53 0 3 3 1 0 29 5 6 10 
PUSHW[ ]\011/* 1 value pushed */
676 
NPUSHB[ ]\011/* 43 values pushed */
8 53 11 8 8 10 11 29 6 13 12 25 25 24 38 18 18 17 2 5 6 8 24 23 38 18 160 19 1 19 19 25 0 12 160 0 1 0 30 11 165 121 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = Gamma;
unicode = 0393;
},
{
glyphname = Theta;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1127 791.333 OFFCURVE",
"1045.833 983.5 OFFCURVE",
"886.5 1105.5 CURVE SMOOTH",
"806.833 1166.5 OFFCURVE",
"716.333 1197 OFFCURVE",
"615 1197 CURVE SMOOTH",
"327 1197 OFFCURVE",
"103 922 OFFCURVE",
"103 582 CURVE SMOOTH",
"103 239.333 OFFCURVE",
"329.667 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"901.667 -33 OFFCURVE",
"1127 240.667 OFFCURVE",
"1127 582 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1042 299.333 OFFCURVE",
"859 51 OFFCURVE",
"615 51 CURVE SMOOTH",
"376.333 51 OFFCURVE",
"187 292.667 OFFCURVE",
"187 582 CURVE SMOOTH",
"187 872.667 OFFCURVE",
"380.333 1113 OFFCURVE",
"615 1113 CURVE SMOOTH",
"859 1113 OFFCURVE",
"1042 866 OFFCURVE",
"1042 582 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"423 711 LINE SMOOTH",
"423 748.333 OFFCURVE",
"408.667 767 OFFCURVE",
"380 767 CURVE SMOOTH",
"352 767 OFFCURVE",
"338 748.333 OFFCURVE",
"338 711 CURVE SMOOTH",
"338 453 LINE SMOOTH",
"338 415.667 OFFCURVE",
"352 397 OFFCURVE",
"380 397 CURVE SMOOTH",
"408.667 397 OFFCURVE",
"423 415.667 OFFCURVE",
"423 453 CURVE SMOOTH",
"423 540 LINE",
"807 540 LINE",
"807 453 LINE SMOOTH",
"807 415.667 OFFCURVE",
"821 397 OFFCURVE",
"849 397 CURVE SMOOTH",
"877.667 397 OFFCURVE",
"892 415.667 OFFCURVE",
"892 453 CURVE SMOOTH",
"892 711 LINE SMOOTH",
"892 748.333 OFFCURVE",
"877.667 767 OFFCURVE",
"849 767 CURVE SMOOTH",
"821 767 OFFCURVE",
"807 748.333 OFFCURVE",
"807 711 CURVE SMOOTH",
"807 624 LINE",
"423 624 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
15 16 9 36 52 17 16 9 36 52 23 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 4 values pushed */
9 36 52 21 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 4 values pushed */
9 36 52 2 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
17 19 52 11 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 29 values pushed */
17 19 52 4 32 17 19 52 21 32 17 19 52 8 32 17 19 52 24 16 9 35 52 14 16 9 35 52 20 
PUSHW[ ]\011/* 1 value pushed */
-16 
PUSHB[ ]\011/* 4 values pushed */
9 35 52 18 
PUSHW[ ]\011/* 1 value pushed */
-16 
NPUSHB[ ]\011/* 129 values pushed */
9 35 52 103 17 104 18 105 20 102 21 4 86 17 89 18 89 20 86 21 4 9 18 9 20 25 18 25 20 4 170 2 165 4 171 11 166 17 201 11 246 17 6 26 37 36 25 38 39 29 0 46 16 46 32 46 48 46 4 46 46 34 15 41 31 41 47 41 3 41 41 26 25 38 37 38 38 16 22 37 3 9 16 37 9 3 27 36 30 31 15 32 31 32 2 32 233 13 37 16 0 79 0 111 0 143 0 4 0 48 39 30 44 0 43 16 43 2 43 233 19 37 15 6 1 6 67 122 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTCA[1]\011/* SetFVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Theta;
unicode = 0398;
},
{
glyphname = Phi;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"778 1086 LINE SMOOTH",
"816 1086 OFFCURVE",
"835 1100 OFFCURVE",
"835 1128 CURVE SMOOTH",
"835 1156 OFFCURVE",
"816 1170 OFFCURVE",
"778 1170 CURVE SMOOTH",
"450 1170 LINE SMOOTH",
"412 1170 OFFCURVE",
"393 1156 OFFCURVE",
"393 1128 CURVE SMOOTH",
"393 1100 OFFCURVE",
"412 1086 OFFCURVE",
"450 1086 CURVE SMOOTH",
"572 1086 LINE",
"572 983 LINE",
"368 981.667 OFFCURVE",
"227.667 918.5 OFFCURVE",
"149 796.5 CURVE SMOOTH",
"109.667 735.5 OFFCURVE",
"90 665 OFFCURVE",
"90 585 CURVE SMOOTH",
"90 354.333 OFFCURVE",
"256 189.667 OFFCURVE",
"572 187 CURVE",
"572 84 LINE",
"450 84 LINE SMOOTH",
"412 84 OFFCURVE",
"393 70 OFFCURVE",
"393 42 CURVE SMOOTH",
"393 14 OFFCURVE",
"412 0 OFFCURVE",
"450 0 CURVE SMOOTH",
"778 0 LINE SMOOTH",
"816 0 OFFCURVE",
"835 14 OFFCURVE",
"835 42 CURVE SMOOTH",
"835 70 OFFCURVE",
"816 84 OFFCURVE",
"778 84 CURVE SMOOTH",
"656 84 LINE",
"656 187 LINE",
"972 189.667 OFFCURVE",
"1138 353 OFFCURVE",
"1138 585 CURVE SMOOTH",
"1138 817 OFFCURVE",
"972 980.333 OFFCURVE",
"656 983 CURVE",
"656 1086 LINE"
);
},
{
closed = 1;
nodes = (
"572 272 LINE",
"306.667 278 OFFCURVE",
"174 382.333 OFFCURVE",
"174 585 CURVE SMOOTH",
"174 785 OFFCURVE",
"305.333 892.667 OFFCURVE",
"572 898 CURVE"
);
},
{
closed = 1;
nodes = (
"920.667 892 OFFCURVE",
"1053 787.667 OFFCURVE",
"1053 585 CURVE SMOOTH",
"1053 405 OFFCURVE",
"940 273.333 OFFCURVE",
"656 272 CURVE",
"656 898 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
47 32 20 23 52 50 32 20 23 52 40 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
20 23 52 43 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 24 values pushed */
20 23 52 116 40 116 43 123 47 123 50 4 1 45 46 7 8 27 39 44 20 19 34 38 
PUSHW[ ]\011/* 3 values pushed */
676 36 354 
NPUSHB[ ]\011/* 9 values pushed */
0 36 36 38 0 29 34 33 29 
PUSHW[ ]\011/* 3 values pushed */
676 31 354 
NPUSHB[ ]\011/* 9 values pushed */
28 31 31 29 28 29 33 13 9 
PUSHW[ ]\011/* 3 values pushed */
676 11 354 
NPUSHB[ ]\011/* 9 values pushed */
8 11 11 9 8 29 13 14 18 
PUSHW[ ]\011/* 3 values pushed */
676 16 354 
NPUSHB[ ]\011/* 62 values pushed */
19 16 16 18 19 29 14 45 39 37 64 1 192 27 1 27 158 128 34 33 2 46 44 37 64 7 207 20 1 20 158 128 13 14 8 49 37 0 4 1 4 4 8 42 37 15 23 1 23 23 0 8 30 28 143 19 1 0 19 1 19 67 
PUSHW[ ]\011/* 2 values pushed */
264 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11100]\011/* MoveIndirectRelPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
SMD[ ]\011/* SetMinimumDistance */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
RTDG[ ]\011/* RoundToDoubleGrid */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
RTG[ ]\011/* RoundToGrid */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MDRP[00100]\011/* MoveDirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Phi;
unicode = 03A6;
},
{
glyphname = alpha;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"997.667 109.333 OFFCURVE",
"978 204.667 OFFCURVE",
"942 370 CURVE",
"1072 628 OFFCURVE",
"1137 790 OFFCURVE",
"1137 856 CURVE SMOOTH",
"1137 882.667 OFFCURVE",
"1123 896 OFFCURVE",
"1095 896 CURVE SMOOTH",
"1073 896 OFFCURVE",
"1057.333 878 OFFCURVE",
"1048 842 CURVE SMOOTH",
"1022.667 747.333 OFFCURVE",
"975.667 633 OFFCURVE",
"907 499 CURVE",
"829.667 757.667 OFFCURVE",
"665.667 896 OFFCURVE",
"487 896 CURVE SMOOTH",
"260.333 896 OFFCURVE",
"98 693.667 OFFCURVE",
"98 435 CURVE SMOOTH",
"98 160.333 OFFCURVE",
"272.333 -33 OFFCURVE",
"475 -33 CURVE SMOOTH",
"612.333 -33 OFFCURVE",
"723 30.667 OFFCURVE",
"879 268 CURVE",
"930 0 LINE",
"1079 0 LINE SMOOTH",
"1116.333 0 OFFCURVE",
"1135 14 OFFCURVE",
"1135 42 CURVE SMOOTH",
"1135 70 OFFCURVE",
"1116.333 84 OFFCURVE",
"1079 84 CURVE SMOOTH",
"1001 84 LINE"
);
},
{
closed = 1;
nodes = (
"728.667 162.333 OFFCURVE",
"605.667 51 OFFCURVE",
"479 51 CURVE SMOOTH",
"321.667 51 OFFCURVE",
"182 204.333 OFFCURVE",
"182 435 CURVE SMOOTH",
"182 656.333 OFFCURVE",
"313 811 OFFCURVE",
"481 811 CURVE SMOOTH",
"657 811 OFFCURVE",
"806.667 615.667 OFFCURVE",
"848 385 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
13 27 1 8 7 5 26 50 18 50 19 52 27 80 18 80 19 87 27 119 19 119 27 229 19 232 20 12 11 11 15 15 7 27 3 39 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 9 values pushed */
35 36 52 33 32 22 23 52 36 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 24 values pushed */
21 23 52 8 32 20 36 52 30 32 20 29 52 31 64 17 18 52 34 32 15 16 52 36 
PUSHW[ ]\011/* 1 value pushed */
-42 
NPUSHB[ ]\011/* 105 values pushed */
14 16 52 10 11 7 15 57 7 63 19 203 8 5 25 30 41 30 89 30 171 30 4 27 8 26 0 18 7 8 26 6 30 19 39 20 0 18 29 39 20 6 30 30 6 6 32 0 18 20 0 0 18 7 27 29 19 4 32 1 0 32 5 6 38 33 10 11 32 33 23 16 7 19 7 29 33 27 15 3 1 3 3 0 6 21 33 25 25 6 27 27 6 35 33 15 13 1 15 13 31 13 2 13 230 
PUSHW[ ]\011/* 2 values pushed */
338 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTCA[1]\011/* SetFVectorToAxis */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTPV[ ]\011/* SetFVectorToPVector */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
ISECT[ ]\011/* MovePtToIntersect */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = alpha;
unicode = 03B1;
},
{
glyphname = delta;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"899 1170 LINE SMOOTH",
"936.333 1170 OFFCURVE",
"955 1184 OFFCURVE",
"955 1212 CURVE SMOOTH",
"955 1240.667 OFFCURVE",
"936.333 1255 OFFCURVE",
"899 1255 CURVE SMOOTH",
"285 1255 LINE",
"285 1131 LINE",
"316.333 1095.667 OFFCURVE",
"350.333 1064.667 OFFCURVE",
"387 1038 CURVE SMOOTH",
"655 842 LINE",
"327 842 OFFCURVE",
"181 620.333 OFFCURVE",
"181 407 CURVE SMOOTH",
"181 237.667 OFFCURVE",
"271.667 97.667 OFFCURVE",
"405 23 CURVE SMOOTH",
"471.667 -14.333 OFFCURVE",
"541.667 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"853.667 -33 OFFCURVE",
"1052 168.667 OFFCURVE",
"1052 414 CURVE SMOOTH",
"1052 603.333 OFFCURVE",
"976.667 703.333 OFFCURVE",
"762 866 CURVE SMOOTH",
"360 1170 LINE"
);
},
{
closed = 1;
nodes = (
"824 757 OFFCURVE",
"967 614.333 OFFCURVE",
"967 413 CURVE SMOOTH",
"967 207.667 OFFCURVE",
"813.667 51 OFFCURVE",
"615 51 CURVE SMOOTH",
"416.333 51 OFFCURVE",
"265 208.333 OFFCURVE",
"265 407 CURVE SMOOTH",
"265 605.667 OFFCURVE",
"410.667 757 OFFCURVE",
"616 757 CURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
25 13 47 0 47 17 105 2 105 6 100 9 98 29 111 31 114 1 123 13 213 13 213 25 230 0 246 0 246 2 15 7 0 1 34 32 21 24 52 26 32 21 22 52 34 32 14 15 52 26 32 14 15 52 32 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
13 14 52 28 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 69 values pushed */
13 14 52 17 16 0 14 15 15 32 0 1 20 0 0 1 1 15 16 17 4 0 14 30 32 7 11 24 33 14 23 0 32 19 18 1 15 0 31 0 2 16 0 14 1 4 17 21 21 33 33 4 18 16 17 32 17 2 17 17 27 33 111 11 1 11 196 172 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
SLOOP[ ]\011/* SetLoopVariable */
IP[ ]\011/* InterpolatePts */
SDPVTL[1]\011/* SetDualPVectorToLine */
SFVTPV[ ]\011/* SetFVectorToPVector */
MDAP[0]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
SFVTCA[1]\011/* SetFVectorToAxis */
RDTG[ ]\011/* RoundDownToGrid */
SRP0[ ]\011/* SetRefPoint0 */
MDRP[00100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = delta;
unicode = 03B4;
},
{
glyphname = epsilon;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"368.667 430.667 OFFCURVE",
"283 335.667 OFFCURVE",
"283 217 CURVE SMOOTH",
"283 67.667 OFFCURVE",
"418.333 -33 OFFCURVE",
"629 -33 CURVE SMOOTH",
"711.667 -33 OFFCURVE",
"783.667 -22.333 OFFCURVE",
"845 -1 CURVE SMOOTH",
"906.333 20.333 OFFCURVE",
"937 41.667 OFFCURVE",
"937 63 CURVE SMOOTH",
"937 85.667 OFFCURVE",
"917.333 107 OFFCURVE",
"896 107 CURVE SMOOTH",
"890.667 107 OFFCURVE",
"881.333 104.333 OFFCURVE",
"868 99 CURVE SMOOTH",
"788.667 67 OFFCURVE",
"711 51 OFFCURVE",
"635 51 CURVE SMOOTH",
"456.333 51 OFFCURVE",
"367 134.333 OFFCURVE",
"367 225 CURVE SMOOTH",
"367 335.667 OFFCURVE",
"507 412 OFFCURVE",
"723 412 CURVE",
"723 496 LINE",
"511 506 OFFCURVE",
"405 565.333 OFFCURVE",
"405 674 CURVE SMOOTH",
"405 752.667 OFFCURVE",
"473 811 OFFCURVE",
"621 811 CURVE SMOOTH",
"725 811 OFFCURVE",
"808.833 783.5 OFFCURVE",
"845.5 741.5 CURVE SMOOTH",
"863.833 720.5 OFFCURVE",
"880.333 686.667 OFFCURVE",
"895 640 CURVE SMOOTH",
"903 614.667 OFFCURVE",
"917.333 602 OFFCURVE",
"938 602 CURVE SMOOTH",
"963.333 602 OFFCURVE",
"976 611.667 OFFCURVE",
"976 631 CURVE SMOOTH",
"976 633.667 OFFCURVE",
"975 645 OFFCURVE",
"973 665 CURVE SMOOTH",
"971 683 OFFCURVE",
"970 706 OFFCURVE",
"970 734 CURVE SMOOTH",
"970 753.333 OFFCURVE",
"971.333 775.333 OFFCURVE",
"974 800 CURVE SMOOTH",
"976.667 822.667 OFFCURVE",
"978 839.333 OFFCURVE",
"978 850 CURVE SMOOTH",
"978 880.667 OFFCURVE",
"963.667 896 OFFCURVE",
"935 896 CURVE SMOOTH",
"913 896 OFFCURVE",
"899 884.333 OFFCURVE",
"893 861 CURVE SMOOTH",
"883 820 LINE",
"810.333 870.667 OFFCURVE",
"726 896 OFFCURVE",
"630 896 CURVE SMOOTH",
"424.667 896 OFFCURVE",
"321 790 OFFCURVE",
"321 674 CURVE SMOOTH",
"321 575.333 OFFCURVE",
"395.333 486.667 OFFCURVE",
"522 456 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
73 8 1 5 4 6 31 71 33 70 43 4 42 32 23 36 52 6 0 22 0 234 53 249 53 4 10 42 9 53 134 40 136 56 4 2 32 19 36 52 55 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 9 values pushed */
19 36 52 31 32 23 28 52 39 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 81 values pushed */
17 22 52 37 42 17 18 52 56 32 12 18 52 8 6 29 0 34 33 35 35 41 23 23 11 7 29 33 6 7 45 45 41 33 51 11 17 20 8 25 9 0 32 34 35 35 20 32 79 48 1 48 48 20 9 33 13 84 15 20 47 20 79 20 3 20 32 33 3 3 38 33 32 54 48 54 160 54 3 54 244 
PUSHW[ ]\011/* 2 values pushed */
789 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = epsilon;
unicode = 03B5;
},
{
glyphname = sigma;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1144 811 LINE SMOOTH",
"1181.333 811 OFFCURVE",
"1200 825.333 OFFCURVE",
"1200 854 CURVE SMOOTH",
"1200 882 OFFCURVE",
"1181.333 896 OFFCURVE",
"1144 896 CURVE SMOOTH",
"769 896 LINE SMOOTH",
"503.667 896 OFFCURVE",
"356.167 859.667 OFFCURVE",
"239.5 701 CURVE SMOOTH",
"181.167 621.667 OFFCURVE",
"152 532.667 OFFCURVE",
"152 434 CURVE SMOOTH",
"152 184.667 OFFCURVE",
"357 -33 OFFCURVE",
"617 -33 CURVE SMOOTH",
"871.667 -33 OFFCURVE",
"1077 181.667 OFFCURVE",
"1077 419 CURVE SMOOTH",
"1077 575 OFFCURVE",
"997.667 732.333 OFFCURVE",
"855 811 CURVE"
);
},
{
closed = 1;
nodes = (
"815.667 811 OFFCURVE",
"993 650 OFFCURVE",
"993 430 CURVE SMOOTH",
"993 222 OFFCURVE",
"820 51 OFFCURVE",
"616 51 CURVE SMOOTH",
"402.667 51 OFFCURVE",
"236 221.667 OFFCURVE",
"236 427 CURVE SMOOTH",
"236 569.667 OFFCURVE",
"319.5 714.167 OFFCURVE",
"453.5 769.5 CURVE SMOOTH",
"520.5 797.167 OFFCURVE",
"575 811 OFFCURVE",
"617 811 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
1 -32 
PUSHB[ ]\011/* 4 values pushed */
30 36 52 25 
PUSHW[ ]\011/* 1 value pushed */
-42 
NPUSHB[ ]\011/* 14 values pushed */
12 36 52 27 64 12 36 52 31 32 12 36 52 21 
PUSHW[ ]\011/* 1 value pushed */
-14 
NPUSHB[ ]\011/* 57 values pushed */
12 36 52 1 1 1 30 73 11 87 21 96 5 96 27 214 27 229 27 8 19 33 13 18 0 32 14 13 6 26 33 6 11 0 23 0 16 1 16 16 29 33 240 3 1 3 23 33 191 9 240 9 2 9 42 172 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = sigma;
unicode = 03C3;
},
{
glyphname = tau;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"874 781 LINE SMOOTH",
"911.333 781 OFFCURVE",
"930 795 OFFCURVE",
"930 823 CURVE SMOOTH",
"930 851.667 OFFCURVE",
"911.333 866 OFFCURVE",
"874 866 CURVE SMOOTH",
"378 866 LINE SMOOTH",
"310 866 OFFCURVE",
"264.667 862.5 OFFCURVE",
"242 855.5 CURVE SMOOTH",
"219.333 848.5 OFFCURVE",
"208 834.667 OFFCURVE",
"208 814 CURVE SMOOTH",
"208 786 OFFCURVE",
"224 772 OFFCURVE",
"256 772 CURVE SMOOTH",
"263.333 772 OFFCURVE",
"273 772.667 OFFCURVE",
"285 774 CURVE SMOOTH",
"337.667 778.667 OFFCURVE",
"375 781 OFFCURVE",
"397 781 CURVE SMOOTH",
"533 781 LINE",
"533 113 LINE SMOOTH",
"533 15.667 OFFCURVE",
"584.333 -33 OFFCURVE",
"687 -33 CURVE SMOOTH",
"776.333 -33 OFFCURVE",
"885 -4 OFFCURVE",
"885 48 CURVE SMOOTH",
"885 76.667 OFFCURVE",
"872.333 91 OFFCURVE",
"847 91 CURVE SMOOTH",
"839.667 91 OFFCURVE",
"825.667 86.333 OFFCURVE",
"805 77 CURVE SMOOTH",
"765.667 59.667 OFFCURVE",
"730 51 OFFCURVE",
"698 51 CURVE SMOOTH",
"644.667 51 OFFCURVE",
"618 78.667 OFFCURVE",
"618 134 CURVE SMOOTH",
"618 781 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
0 15 16 20 16 7 7 3 33 12 11 30 16 32 26 25 6 47 28 1 28 28 9 31 22 1 22 22 14 9 9 0 1 32 15 16 14 80 14 144 14 224 14 4 14 
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[0]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = tau;
unicode = 03C4;
},
{
glyphname = phi;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"516 -316 LINE SMOOTH",
"516 -362.667 OFFCURVE",
"530 -386 OFFCURVE",
"558 -386 CURVE SMOOTH",
"586 -386 OFFCURVE",
"600 -362.667 OFFCURVE",
"600 -316 CURVE SMOOTH",
"600 -32 LINE",
"621.333 -32.667 OFFCURVE",
"638.667 -33 OFFCURVE",
"652 -33 CURVE SMOOTH",
"898.667 -33 OFFCURVE",
"1112 154.333 OFFCURVE",
"1112 441 CURVE SMOOTH",
"1112 689 OFFCURVE",
"949.667 896 OFFCURVE",
"751 896 CURVE SMOOTH",
"643 896 OFFCURVE",
"565 827.5 OFFCURVE",
"537 733.5 CURVE SMOOTH",
"523 686.5 OFFCURVE",
"516 610.667 OFFCURVE",
"516 506 CURVE SMOOTH",
"516 59 LINE",
"310 115 OFFCURVE",
"207 246.667 OFFCURVE",
"207 454 CURVE SMOOTH",
"207 612.667 OFFCURVE",
"276.333 742.667 OFFCURVE",
"387 800 CURVE SMOOTH",
"422.333 818.667 OFFCURVE",
"440 835.667 OFFCURVE",
"440 851 CURVE SMOOTH",
"440 881 OFFCURVE",
"428 896 OFFCURVE",
"404 896 CURVE SMOOTH",
"350.667 896 OFFCURVE",
"226.833 799.5 OFFCURVE",
"167.5 673.5 CURVE SMOOTH",
"137.833 610.5 OFFCURVE",
"123 539 OFFCURVE",
"123 459 CURVE SMOOTH",
"123 195 OFFCURVE",
"269.333 15.333 OFFCURVE",
"516 -26 CURVE"
);
},
{
closed = 1;
nodes = (
"600 507 LINE SMOOTH",
"600 624.333 OFFCURVE",
"611.667 704.333 OFFCURVE",
"635 747 CURVE SMOOTH",
"658.333 789.667 OFFCURVE",
"698 811 OFFCURVE",
"754 811 CURVE SMOOTH",
"894 811 OFFCURVE",
"1027 649.333 OFFCURVE",
"1027 440 CURVE SMOOTH",
"1027 218.667 OFFCURVE",
"877.333 51 OFFCURVE",
"600 51 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
16 -32 
NPUSHB[ ]\011/* 15 values pushed */
24 36 52 86 1 83 15 100 1 98 15 198 15 5 42 
PUSHW[ ]\011/* 1 value pushed */
-32 
NPUSHB[ ]\011/* 9 values pushed */
22 25 52 40 32 22 36 52 12 
PUSHW[ ]\011/* 1 value pushed */
-32 
PUSHB[ ]\011/* 4 values pushed */
22 30 52 15 
PUSHW[ ]\011/* 1 value pushed */
-64 
NPUSHB[ ]\011/* 141 values pushed */
19 36 52 40 32 15 16 52 36 64 12 36 52 96 8 101 10 105 19 120 23 112 26 112 36 120 40 164 1 164 15 180 1 180 15 198 1 198 15 212 9 218 15 212 26 210 36 236 15 228 36 19 84 9 84 11 100 9 100 12 4 35 29 30 16 0 34 16 41 0 35 29 11 84 41 33 21 21 7 7 35 33 29 11 32 15 9 9 34 14 38 33 79 24 1 16 24 32 24 48 24 80 24 96 24 112 24 144 24 160 24 208 24 224 24 10 24 24 30 14 33 3 3 44 30 32 17 15 34 1 16 34 144 34 191 34 3 34 94 142 24 
CALL[ ]\011/* CallFunction */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SHP[1]\011/* ShiftPointByLastPoint */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
SPVTCA[1]\011/* SetPVectorToAxis */
SFVTPV[ ]\011/* SetFVectorToPVector */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = phi;
unicode = 03C6;
},
{
glyphname = underscoredbl;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1241.333 -380 OFFCURVE",
"1256 -363.333 OFFCURVE",
"1256 -338 CURVE SMOOTH",
"1256 -312.667 OFFCURVE",
"1241.333 -296 OFFCURVE",
"1200 -296 CURVE SMOOTH",
"29 -296 LINE SMOOTH",
"-11 -296 OFFCURVE",
"-27 -312.667 OFFCURVE",
"-27 -338 CURVE SMOOTH",
"-27 -363.333 OFFCURVE",
"-11 -380 OFFCURVE",
"29 -380 CURVE SMOOTH",
"1200 -380 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1241.333 -561 OFFCURVE",
"1256 -544.333 OFFCURVE",
"1256 -519 CURVE SMOOTH",
"1256 -493.667 OFFCURVE",
"1241.333 -477 OFFCURVE",
"1200 -477 CURVE SMOOTH",
"29 -477 LINE SMOOTH",
"-11 -477 OFFCURVE",
"-27 -493.667 OFFCURVE",
"-27 -519 CURVE SMOOTH",
"-27 -544.333 OFFCURVE",
"-11 -561 OFFCURVE",
"29 -561 CURVE SMOOTH",
"1200 -561 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
7 36 15 1 31 1 2 1 
PUSHW[ ]\011/* 1 value pushed */
348 
NPUSHB[ ]\011/* 12 values pushed */
21 36 15 25 11 62 29 18 4 62 28 60 
PUSHW[ ]\011/* 2 values pushed */
266 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = underscoredbl;
unicode = 2017;
},
{
glyphname = exclamdbl;
layers = (
{
components = (
{
name = exclam;
transform = "{1, 0, 0, 1, -217, 0}";
},
{
name = exclam;
transform = "{1, 0, 0, 1, 218, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = exclamdbl;
unicode = 203C;
},
{
glyphname = nsuperior;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"339 1050 LINE SMOOTH",
"297.667 1050 OFFCURVE",
"283 1035 OFFCURVE",
"283 1011 CURVE SMOOTH",
"283 987 OFFCURVE",
"297.667 972 OFFCURVE",
"339 972 CURVE SMOOTH",
"369 972 LINE",
"369 580 LINE",
"339 580 LINE SMOOTH",
"297.667 580 OFFCURVE",
"283 564.667 OFFCURVE",
"283 542 CURVE SMOOTH",
"283 516.667 OFFCURVE",
"297.667 502 OFFCURVE",
"339 502 CURVE SMOOTH",
"478 502 LINE SMOOTH",
"519.333 502 OFFCURVE",
"534 516.667 OFFCURVE",
"534 542 CURVE SMOOTH",
"534 564.667 OFFCURVE",
"519.333 580 OFFCURVE",
"478 580 CURVE SMOOTH",
"448 580 LINE",
"448 862 LINE",
"533.333 967.333 OFFCURVE",
"590.333 992 OFFCURVE",
"653 992 CURVE SMOOTH",
"707.667 992 OFFCURVE",
"748.333 965.5 OFFCURVE",
"763 931.5 CURVE SMOOTH",
"770.333 914.5 OFFCURVE",
"774 880 OFFCURVE",
"774 828 CURVE SMOOTH",
"774 580 LINE",
"733.214 581.36 OFFCURVE",
"709 573.21 OFFCURVE",
"709 541 CURVE SMOOTH",
"709 509.076 OFFCURVE",
"732.508 502 OFFCURVE",
"774 502 CURVE SMOOTH",
"853 502 LINE SMOOTH",
"894.732 502 OFFCURVE",
"918 509.055 OFFCURVE",
"918 541 CURVE SMOOTH",
"918 573.131 OFFCURVE",
"893.999 581.323 OFFCURVE",
"853 580 CURVE",
"853 823 LINE SMOOTH",
"853 964.333 OFFCURVE",
"827.667 1004.667 OFFCURVE",
"765 1042 CURVE SMOOTH",
"733.667 1060.667 OFFCURVE",
"697.333 1070 OFFCURVE",
"656 1070 CURVE SMOOTH",
"577.333 1070 OFFCURVE",
"522.667 1044.333 OFFCURVE",
"448 971 CURVE",
"448 1050 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
29 8 18 26 22 175 26 26 50 18 49 43 46 175 50 50 50 43 17 9 13 175 9 9 50 17 36 42 39 175 35 35 50 42 52 58 55 175 51 51 50 58 1 34 31 43 58 0 
PUSHW[ ]\011/* 1 value pushed */
765 
NPUSHB[ ]\011/* 12 values pushed */
31 44 4 43 42 18 17 8 9 36 27 26 
PUSHW[ ]\011/* 1 value pushed */
408 
NPUSHB[ ]\011/* 13 values pushed */
0 35 36 51 50 25 59 4 58 17 72 170 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
RS[ ]\011/* ReadStore */
JROF[ ]\011/* JumpRelativeOnFalse */
NPUSHB[ ]\011/* 18 values pushed */
28 30 5 7 6 37 29 38 30 5 27 39 1 28 7 31 39 1 
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
CALL[ ]\011/* CallFunction */
FLIPRGON[ ]\011/* FlipRangeOn */
FLIPRGON[ ]\011/* FlipRangeOn */";
};
width = 1229;
}
);
note = nsuperior;
unicode = 207F;
},
{
glyphname = peseta;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"536 642 LINE SMOOTH",
"738.667 642 OFFCURVE",
"822.333 686.167 OFFCURVE",
"877 769.5 CURVE SMOOTH",
"904.333 811.167 OFFCURVE",
"918 856.667 OFFCURVE",
"918 906 CURVE SMOOTH",
"918 1004.667 OFFCURVE",
"859.833 1093 OFFCURVE",
"748.5 1137 CURVE",
"846.333 1083.333 OFFCURVE",
"804.167 1115 OFFCURVE",
"748.5 1137 CURVE SMOOTH",
"692.833 1159 OFFCURVE",
"598.333 1170 OFFCURVE",
"465 1170 CURVE SMOOTH",
"70 1170 LINE SMOOTH",
"30 1170 OFFCURVE",
"14 1153.333 OFFCURVE",
"14 1128 CURVE SMOOTH",
"14 1102.667 OFFCURVE",
"30 1086 OFFCURVE",
"70 1086 CURVE SMOOTH",
"146 1086 LINE",
"146 85 LINE",
"70 84 LINE SMOOTH",
"33.273 84 OFFCURVE",
"14 71.165 OFFCURVE",
"14 42 CURVE SMOOTH",
"14 16.667 OFFCURVE",
"30 0 OFFCURVE",
"70 0 CURVE SMOOTH",
"320 0 LINE SMOOTH",
"360 0 OFFCURVE",
"376 16.667 OFFCURVE",
"376 42 CURVE SMOOTH",
"376 67.333 OFFCURVE",
"360 84 OFFCURVE",
"320 84 CURVE SMOOTH",
"230 84 LINE",
"230 642 LINE"
);
},
{
closed = 1;
nodes = (
"230 1086 LINE",
"473 1086 LINE SMOOTH",
"585 1086 OFFCURVE",
"663 1078.333 OFFCURVE",
"707 1063 CURVE SMOOTH",
"751 1047.667 OFFCURVE",
"783.167 1026.167 OFFCURVE",
"803.5 998.5 CURVE",
"795 1032.333 OFFCURVE",
"834 973.667 OFFCURVE",
"834 907 CURVE SMOOTH",
"834 841.667 OFFCURVE",
"790.5 775 OFFCURVE",
"712.5 747 CURVE",
"781.5 783 OFFCURVE",
"751.5 761 OFFCURVE",
"712.5 747 CURVE SMOOTH",
"673.5 733 OFFCURVE",
"602.667 726 OFFCURVE",
"500 726 CURVE SMOOTH",
"230 726 LINE"
);
},
{
closed = 1;
nodes = (
"490 530 LINE SMOOTH",
"490 571.333 OFFCURVE",
"472 586 OFFCURVE",
"448 586 CURVE SMOOTH",
"422.667 586 OFFCURVE",
"405 570 OFFCURVE",
"405 530 CURVE SMOOTH",
"405 445 LINE",
"350.457 445 OFFCURVE",
"316 445.37 OFFCURVE",
"316 403 CURVE SMOOTH",
"316 377.667 OFFCURVE",
"331.667 361 OFFCURVE",
"373 361 CURVE SMOOTH",
"405 361 LINE",
"405 159 LINE SMOOTH",
"405 75 OFFCURVE",
"430 35 OFFCURVE",
"478 7 CURVE SMOOTH",
"502 -7 OFFCURVE",
"530.667 -14 OFFCURVE",
"564 -14 CURVE SMOOTH",
"616 -14 OFFCURVE",
"664 -5.333 OFFCURVE",
"708 12 CURVE SMOOTH",
"740.667 24.667 OFFCURVE",
"757 40.667 OFFCURVE",
"757 60 CURVE SMOOTH",
"757 72.667 OFFCURVE",
"753 83.667 OFFCURVE",
"745 93 CURVE SMOOTH",
"738.333 100.333 OFFCURVE",
"731 104 OFFCURVE",
"723 104 CURVE SMOOTH",
"716.333 104 OFFCURVE",
"708.333 102.333 OFFCURVE",
"699 99 CURVE SMOOTH",
"645 79.667 OFFCURVE",
"602.333 70 OFFCURVE",
"571 70 CURVE SMOOTH",
"526.331 70 OFFCURVE",
"490 140.202 OFFCURVE",
"490 210 CURVE SMOOTH",
"490 361 LINE",
"719 361 LINE SMOOTH",
"759 361 OFFCURVE",
"775 377.667 OFFCURVE",
"775 403 CURVE SMOOTH",
"775 428.333 OFFCURVE",
"759 445 OFFCURVE",
"719 445 CURVE SMOOTH",
"490 445 LINE"
);
},
{
closed = 1;
nodes = (
"1061.333 447.667 OFFCURVE",
"1023.333 455 OFFCURVE",
"994 455 CURVE SMOOTH",
"875.333 455 OFFCURVE",
"808 393 OFFCURVE",
"808 317 CURVE SMOOTH",
"808 267 OFFCURVE",
"830.667 228.667 OFFCURVE",
"876 202 CURVE SMOOTH",
"900.667 188 OFFCURVE",
"959.667 176.667 OFFCURVE",
"1053 168 CURVE SMOOTH",
"1085 164.667 OFFCURVE",
"1105.833 159.333 OFFCURVE",
"1115.5 152 CURVE SMOOTH",
"1125.167 144.667 OFFCURVE",
"1130 136.333 OFFCURVE",
"1130 127 CURVE SMOOTH",
"1130 115 OFFCURVE",
"1121.667 103 OFFCURVE",
"1105 91 CURVE SMOOTH",
"1088.333 79 OFFCURVE",
"1062 73 OFFCURVE",
"1026 73 CURVE SMOOTH",
"975.333 73 OFFCURVE",
"934.667 81.667 OFFCURVE",
"904 99 CURVE SMOOTH",
"889.333 107.667 OFFCURVE",
"879 123.333 OFFCURVE",
"873 146 CURVE SMOOTH",
"866.333 170 OFFCURVE",
"853 179 OFFCURVE",
"833 179 CURVE SMOOTH",
"810.333 179 OFFCURVE",
"790 158.667 OFFCURVE",
"790 120 CURVE SMOOTH",
"790 66 OFFCURVE",
"797.333 27.333 OFFCURVE",
"812 4 CURVE SMOOTH",
"819.333 -8 OFFCURVE",
"830.667 -14 OFFCURVE",
"846 -14 CURVE SMOOTH",
"856.667 -14 OFFCURVE",
"865.667 -11.333 OFFCURVE",
"873 -6 CURVE",
"878.333 -1.333 OFFCURVE",
"883 7.333 OFFCURVE",
"887 20 CURVE",
"929.667 0 OFFCURVE",
"975.667 -11 OFFCURVE",
"1025 -11 CURVE SMOOTH",
"1147.667 -11 OFFCURVE",
"1214 52.333 OFFCURVE",
"1214 135 CURVE SMOOTH",
"1214 176.333 OFFCURVE",
"1198 207.333 OFFCURVE",
"1166 228 CURVE",
"1144.667 240.667 OFFCURVE",
"1095.333 251.667 OFFCURVE",
"1018 261 CURVE SMOOTH",
"959.333 267.667 OFFCURVE",
"924 275.667 OFFCURVE",
"912 285 CURVE",
"899.333 293.667 OFFCURVE",
"893 304.667 OFFCURVE",
"893 318 CURVE SMOOTH",
"893 330 OFFCURVE",
"900 341 OFFCURVE",
"914 351 CURVE SMOOTH",
"932.667 365 OFFCURVE",
"958.333 372 OFFCURVE",
"991 372 CURVE SMOOTH",
"1023.667 372 OFFCURVE",
"1051 365.333 OFFCURVE",
"1073 352 CURVE",
"1085 345.333 OFFCURVE",
"1093.333 334.333 OFFCURVE",
"1098 319 CURVE SMOOTH",
"1102.667 303.667 OFFCURVE",
"1107.333 294 OFFCURVE",
"1112 290 CURVE",
"1119.333 284.667 OFFCURVE",
"1127.667 282 OFFCURVE",
"1137 282 CURVE SMOOTH",
"1158.333 282 OFFCURVE",
"1172 293 OFFCURVE",
"1176 313 CURVE SMOOTH",
"1182 343.667 OFFCURVE",
"1185 381 OFFCURVE",
"1185 425 CURVE SMOOTH",
"1185 458.333 OFFCURVE",
"1172.333 470 OFFCURVE",
"1151 470 CURVE SMOOTH",
"1131 470 OFFCURVE",
"1117.333 462.333 OFFCURVE",
"1108 433 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
11 106 11 107 2 119 154 135 154 2 155 124 155 154 2 16 9 12 155 17 17 50 9 2 8 5 155 1 1 50 8 19 25 22 155 18 18 50 25 144 153 30 114 154 156 152 34 96 0 1 0 36 96 35 1 35 36 0 44 45 36 26 2 25 2 152 91 118 118 146 110 44 159 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 19 values pushed */
47 53 77 91 46 88 210 47 83 64 18 58 52 83 9 8 139 116 133 
PUSHW[ ]\011/* 1 value pushed */
771 
PUSHB[ ]\011/* 6 values pushed */
146 44 125 59 44 71 
PUSHW[ ]\011/* 3 values pushed */
771 125 771 
NPUSHB[ ]\011/* 12 values pushed */
8 10 149 44 122 26 163 92 91 108 193 98 
PUSHW[ ]\011/* 1 value pushed */
271 
NPUSHB[ ]\011/* 9 values pushed */
163 114 44 156 142 91 156 52 136 
PUSHW[ ]\011/* 1 value pushed */
267 
NPUSHB[ ]\011/* 33 values pushed */
67 142 132 50 40 44 67 212 50 210 30 30 163 55 36 75 55 91 36 85 85 75 232 45 1 36 18 17 25 162 80 68 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
CALL[ ]\011/* CallFunction */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[00100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP1[ ]\011/* SetRefPoint1 */
IP[ ]\011/* InterpolatePts */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10101]\011/* MoveIndirectRelPt */
MDRP[10100]\011/* MoveDirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP2[ ]\011/* DeltaExceptionP2 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP2[ ]\011/* DeltaExceptionP2 */";
};
width = 1229;
}
);
note = peseta;
unicode = 20A7;
},
{
glyphname = arrowleft;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"169.333 457.333 OFFCURVE",
"80 385.333 OFFCURVE",
"2 352 CURVE",
"2 322 LINE",
"87.333 282 OFFCURVE",
"160.333 226 OFFCURVE",
"271 102 CURVE",
"321 102 LINE",
"280.333 188 OFFCURVE",
"237.667 254.667 OFFCURVE",
"193 302 CURVE",
"1227 302 LINE",
"1227 368 LINE",
"193 368 LINE",
"259.667 452 OFFCURVE",
"268.333 465.333 OFFCURVE",
"319 568 CURVE",
"270 568 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
231 10 1 167 10 183 10 198 10 3 103 10 119 10 135 10 3 1 0 160 4 9 10 160 4 48 7 7 5 48 6 5 6 
PUSHW[ ]\011/* 1 value pushed */
388 
NPUSHB[ ]\011/* 9 values pushed */
17 9 52 1 10 52 1 77 0 
PUSHW[ ]\011/* 1 value pushed */
774 
NPUSHB[ ]\011/* 14 values pushed */
4 7 116 13 4 116 14 14 13 25 16 75 68 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = arrowleft;
unicode = 2190;
},
{
glyphname = arrowup;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"381 551 LINE",
"483.667 601.667 OFFCURVE",
"501 612.667 OFFCURVE",
"581 678 CURVE",
"581 -278 LINE",
"647 -278 LINE",
"647 677 LINE",
"693 633 OFFCURVE",
"759.667 590.333 OFFCURVE",
"847 549 CURVE",
"847 600 LINE",
"723 710.667 OFFCURVE",
"668.333 782.667 OFFCURVE",
"627 868 CURVE",
"597 868 LINE",
"563.667 791.333 OFFCURVE",
"491.667 702 OFFCURVE",
"381 600 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 6 values pushed */
659 16 0 650 17 649 
PUSHB[ ]\011/* 7 values pushed */
16 8 9 1 10 11 15 
PUSHW[ ]\011/* 1 value pushed */
771 
PUSHB[ ]\011/* 5 values pushed */
7 0 7 77 6 
PUSHW[ ]\011/* 3 values pushed */
272 12 771 
NPUSHB[ ]\011/* 28 values pushed */
9 116 3 3 2 11 2 6 10 9 11 12 9 52 3 12 52 2 15 0 160 2 7 6 160 3 48 2 
PUSHW[ ]\011/* 1 value pushed */
595 
PUSHB[ ]\011/* 4 values pushed */
16 72 120 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
GC[0]\011/* GetCoordOnPVector */
WCVTP[ ]\011/* WriteCVTInPixels */
GC[0]\011/* GetCoordOnPVector */
WCVTP[ ]\011/* WriteCVTInPixels */
MD[0]\011/* MeasureDistance */
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 1229;
}
);
note = arrowup;
unicode = 2191;
},
{
glyphname = arrowright;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"909 568 LINE",
"961 466.667 OFFCURVE",
"970.667 449.333 OFFCURVE",
"1036 368 CURVE",
"2 368 LINE",
"2 302 LINE",
"1036 302 LINE",
"991.333 255.333 OFFCURVE",
"948.667 188.667 OFFCURVE",
"908 102 CURVE",
"958 102 LINE",
"1068.667 226 OFFCURVE",
"1140.333 282 OFFCURVE",
"1227 322 CURVE",
"1227 352 LINE",
"1148.333 385.333 OFFCURVE",
"1059 457.333 OFFCURVE",
"959 568 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
233 6 1 168 6 185 6 201 6 3 104 6 120 6 136 6 3 15 0 160 12 7 6 160 12 48 9 9 11 48 10 11 10 25 16 15 52 7 0 52 7 77 6 
PUSHW[ ]\011/* 1 value pushed */
774 
NPUSHB[ ]\011/* 13 values pushed */
9 12 116 2 9 116 2 3 26 17 75 68 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = arrowright;
unicode = 2192;
},
{
glyphname = arrowdown;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"491 -110.333 OFFCURVE",
"563 -199.333 OFFCURVE",
"597 -278 CURVE",
"627 -278 LINE",
"668.333 -192.667 OFFCURVE",
"723 -120.667 OFFCURVE",
"847 -10 CURVE",
"847 41 LINE",
"759.667 -0.333 OFFCURVE",
"693 -43 OFFCURVE",
"647 -87 CURVE",
"647 868 LINE",
"581 868 LINE",
"581 -88 LINE",
"501 -22.667 OFFCURVE",
"483.667 -11.667 OFFCURVE",
"381 39 CURVE",
"381 -11 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
6 5 1 
PUSHW[ ]\011/* 4 values pushed */
771 9 0 771 
PUSHB[ ]\011/* 3 values pushed */
9 77 10 
PUSHW[ ]\011/* 3 values pushed */
272 4 771 
NPUSHB[ ]\011/* 27 values pushed */
7 116 13 13 14 13 14 6 7 5 4 7 52 13 4 52 14 9 10 160 13 1 0 160 13 48 14 
PUSHW[ ]\011/* 1 value pushed */
595 
PUSHB[ ]\011/* 8 values pushed */
16 6 6 5 6 72 120 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = arrowdown;
unicode = 2193;
},
{
glyphname = arrowboth;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1145.667 387.333 OFFCURVE",
"1079 438.333 OFFCURVE",
"963 569 CURVE",
"912 569 LINE",
"942 494.333 OFFCURVE",
"983.667 427 OFFCURVE",
"1037 367 CURVE",
"191 367 LINE",
"245 427 OFFCURVE",
"287 494.333 OFFCURVE",
"317 569 CURVE",
"265 569 LINE",
"150.333 438.333 OFFCURVE",
"83.333 387.333 OFFCURVE",
"2 350 CURVE",
"2 321 LINE",
"82 283.667 OFFCURVE",
"153 229.667 OFFCURVE",
"265 103 CURVE",
"317 103 LINE",
"287.667 177 OFFCURVE",
"245.667 244 OFFCURVE",
"191 304 CURVE",
"1037 304 LINE",
"983 244 OFFCURVE",
"941.333 177 OFFCURVE",
"912 103 CURVE",
"963 103 LINE",
"1075 229.667 OFFCURVE",
"1147 283.667 OFFCURVE",
"1227 321 CURVE",
"1227 350 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
5 4 160 7 48 22 24 25 160 22 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 13 values pushed */
1 48 0 19 18 10 11 160 8 48 18 160 21 
PUSHW[ ]\011/* 1 value pushed */
771 
NPUSHB[ ]\011/* 47 values pushed */
14 48 15 22 116 0 5 77 4 215 7 116 1 1 0 24 77 25 215 0 26 29 8 116 14 21 116 15 10 77 11 215 14 19 77 18 215 15 15 14 25 28 15 0 75 68 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = arrowboth;
unicode = 2194;
},
{
glyphname = arrowupdn;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"561.667 866.667 OFFCURVE",
"509 797 OFFCURVE",
"381 685 CURVE",
"381 633 LINE",
"454.333 662.333 OFFCURVE",
"521.333 704.333 OFFCURVE",
"582 759 CURVE",
"582 -87 LINE",
"522.667 -33.667 OFFCURVE",
"455.667 8 OFFCURVE",
"381 38 CURVE",
"381 -13 LINE",
"507.667 -125 OFFCURVE",
"561.667 -194.333 OFFCURVE",
"599 -277 CURVE",
"629 -277 LINE",
"667 -195 OFFCURVE",
"739.667 -107 OFFCURVE",
"847 -13 CURVE",
"847 38 LINE",
"773 8.667 OFFCURVE",
"706 -33 OFFCURVE",
"646 -87 CURVE",
"646 759 LINE",
"706.667 704.333 OFFCURVE",
"773.667 662.333 OFFCURVE",
"847 633 CURVE",
"847 685 LINE",
"739 779 OFFCURVE",
"666.333 866.667 OFFCURVE",
"629 948 CURVE",
"599 948 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
4 77 3 
PUSHW[ ]\011/* 1 value pushed */
272 
PUSHB[ ]\011/* 6 values pushed */
6 6 20 22 77 23 
PUSHW[ ]\011/* 1 value pushed */
272 
PUSHB[ ]\011/* 7 values pushed */
20 116 1 0 9 77 10 
PUSHW[ ]\011/* 1 value pushed */
272 
PUSHB[ ]\011/* 6 values pushed */
7 7 19 17 77 16 
PUSHW[ ]\011/* 1 value pushed */
272 
NPUSHB[ ]\011/* 45 values pushed */
19 116 12 13 6 52 1 20 52 0 4 3 160 1 22 23 160 1 48 0 7 52 12 19 52 13 9 10 160 10 160 12 17 16 160 12 48 13 0 13 13 0 72 120 24 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = arrowupdn;
unicode = 2195;
},
{
glyphname = arrowupdnbse;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"561.667 866.667 OFFCURVE",
"509 797 OFFCURVE",
"381 685 CURVE",
"381 633 LINE",
"454.333 662.333 OFFCURVE",
"521.333 704.333 OFFCURVE",
"582 759 CURVE",
"582 -87 LINE",
"522.667 -33.667 OFFCURVE",
"455.667 8 OFFCURVE",
"381 38 CURVE",
"381 -13 LINE",
"507.667 -125 OFFCURVE",
"561.667 -194.333 OFFCURVE",
"599 -277 CURVE",
"629 -277 LINE",
"667 -195 OFFCURVE",
"739.667 -107 OFFCURVE",
"847 -13 CURVE",
"847 38 LINE",
"773 8.667 OFFCURVE",
"706 -33 OFFCURVE",
"646 -87 CURVE",
"646 759 LINE",
"706.667 704.333 OFFCURVE",
"773.667 662.333 OFFCURVE",
"847 633 CURVE",
"847 685 LINE",
"739 779 OFFCURVE",
"666.333 866.667 OFFCURVE",
"629 948 CURVE",
"599 948 LINE"
);
},
{
closed = 1;
nodes = (
"382 -402 LINE",
"847 -402 LINE",
"847 -339 LINE",
"382 -339 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
7 6 1 4 22 77 3 23 
PUSHW[ ]\011/* 1 value pushed */
272 
NPUSHB[ ]\011/* 11 values pushed */
6 20 116 1 0 9 17 10 17 77 16 
PUSHW[ ]\011/* 1 value pushed */
272 
PUSHB[ ]\011/* 5 values pushed */
7 19 116 12 13 
PUSHW[ ]\011/* 1 value pushed */
768 
NPUSHB[ ]\011/* 50 values pushed */
27 26 48 28 29 0 4 3 160 1 22 23 160 0 1 52 6 0 52 20 6 7 20 19 7 52 12 19 52 13 9 10 17 16 10 160 12 16 160 13 28 27 160 12 29 26 160 12 48 13 
PUSHW[ ]\011/* 1 value pushed */
326 
PUSHB[ ]\011/* 4 values pushed */
30 72 120 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MDAP[1]\011/* MoveDirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[1]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP3[ ]\011/* DeltaExceptionP3 */";
};
width = 1229;
}
);
note = arrowupdnbse;
unicode = 21A8;
},
{
glyphname = orthogonal;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"2 0 LINE",
"1227 0 LINE",
"1227 95 LINE",
"97 95 LINE",
"97 1223 LINE",
"2 1223 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 2 values pushed */
1 259 
NPUSHB[ ]\011/* 20 values pushed */
5 3 2 36 4 5 10 3 26 7 1 2 36 0 5 52 6 75 68 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00110]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = orthogonal;
unicode = 221F;
},
{
glyphname = intersection;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"169 -17 OFFCURVE",
"185.667 -33 OFFCURVE",
"211 -33 CURVE SMOOTH",
"236.333 -33 OFFCURVE",
"253 -17 OFFCURVE",
"253 23 CURVE SMOOTH",
"253 682 LINE SMOOTH",
"253 911.333 OFFCURVE",
"306.833 998.667 OFFCURVE",
"415.5 1064 CURVE SMOOTH",
"469.833 1096.667 OFFCURVE",
"535.667 1113 OFFCURVE",
"613 1113 CURVE SMOOTH",
"771.667 1113 OFFCURVE",
"878.167 1044.333 OFFCURVE",
"933.5 935 CURVE SMOOTH",
"961.167 880.333 OFFCURVE",
"975 796 OFFCURVE",
"975 682 CURVE SMOOTH",
"975 23 LINE SMOOTH",
"975 -17 OFFCURVE",
"993 -33 OFFCURVE",
"1017 -33 CURVE SMOOTH",
"1042.333 -33 OFFCURVE",
"1060 -17 OFFCURVE",
"1060 23 CURVE SMOOTH",
"1060 721 LINE SMOOTH",
"1060 947.667 OFFCURVE",
"992.833 1059.333 OFFCURVE",
"857.5 1138 CURVE SMOOTH",
"789.833 1177.333 OFFCURVE",
"709.333 1197 OFFCURVE",
"616 1197 CURVE SMOOTH",
"422.667 1197 OFFCURVE",
"291.5 1116.167 OFFCURVE",
"221.5 987.5 CURVE SMOOTH",
"186.5 923.167 OFFCURVE",
"169 834.333 OFFCURVE",
"169 721 CURVE SMOOTH",
"169 23 LINE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
123 19 123 23 2 105 19 105 23 2 21 37 5 3 29 9 13 9 17 16 30 9 160 10 1 10 25 26 30 1 127 0 143 0 159 0 3 79 0 95 0 111 0 3 0 
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
DELTAP1[ ]\011/* DeltaExceptionP1 */
DELTAP1[ ]\011/* DeltaExceptionP1 */";
};
width = 1229;
}
);
note = intersection;
unicode = 2229;
},
{
glyphname = equivalence;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1113 846 OFFCURVE",
"1129 864 OFFCURVE",
"1129 888 CURVE SMOOTH",
"1129 913.333 OFFCURVE",
"1113 929.667 OFFCURVE",
"1073 931 CURVE SMOOTH",
"157 931 LINE SMOOTH",
"117 931 OFFCURVE",
"101 913.333 OFFCURVE",
"101 888 CURVE SMOOTH",
"101 864 OFFCURVE",
"117 846 OFFCURVE",
"157 846 CURVE SMOOTH",
"1073 846 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1113 544 OFFCURVE",
"1129 561.667 OFFCURVE",
"1129 587 CURVE SMOOTH",
"1129 611 OFFCURVE",
"1113 629 OFFCURVE",
"1073 629 CURVE SMOOTH",
"157 629 LINE SMOOTH",
"117 629 OFFCURVE",
"101 611 OFFCURVE",
"101 587 CURVE SMOOTH",
"101 561.667 OFFCURVE",
"117 544 OFFCURVE",
"157 544 CURVE SMOOTH",
"1073 544 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1113 243 OFFCURVE",
"1129 259.667 OFFCURVE",
"1129 285 CURVE SMOOTH",
"1129 310.333 OFFCURVE",
"1113 327 OFFCURVE",
"1073 327 CURVE SMOOTH",
"157 327 LINE SMOOTH",
"117 327 OFFCURVE",
"101 310.333 OFFCURVE",
"101 285 CURVE SMOOTH",
"101 259.667 OFFCURVE",
"117 243 OFFCURVE",
"157 243 CURVE SMOOTH",
"1073 243 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
29 36 0 35 1 35 
PUSHW[ ]\011/* 1 value pushed */
759 
PUSHB[ ]\011/* 6 values pushed */
15 36 0 21 1 21 
PUSHW[ ]\011/* 1 value pushed */
759 
PUSHB[ ]\011/* 6 values pushed */
1 36 15 7 1 7 
PUSHW[ ]\011/* 1 value pushed */
533 
NPUSHB[ ]\011/* 14 values pushed */
31 29 47 29 2 29 25 11 39 132 43 18 4 32 
PUSHW[ ]\011/* 1 value pushed */
772 
PUSHB[ ]\011/* 4 values pushed */
42 79 123 24 
CALL[ ]\011/* CallFunction */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[11101]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[10100]\011/* MoveIndirectRelPt */
DELTAP1[ ]\011/* DeltaExceptionP1 */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = equivalence;
unicode = 2261;
},
{
glyphname = house;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1076 0 LINE",
"1076 634 LINE",
"614 1153 LINE",
"153 634 LINE",
"153 0 LINE"
);
},
{
closed = 1;
nodes = (
"234 600 LINE",
"614 1027 LINE",
"995 600 LINE",
"995 81 LINE",
"234 81 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
7 2 3 9 1 2 8 1 166 3 166 2 5 91 2 
PUSHW[ ]\011/* 1 value pushed */
453 
NPUSHB[ ]\011/* 19 values pushed */
0 10 7 91 64 3 166 8 2 166 32 9 91 1 25 10 80 129 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[01101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTHG[ ]\011/* RoundToHalfGrid */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
MIRP[11101]\011/* MoveIndirectRelPt */
SMD[ ]\011/* SetMinimumDistance */
RTG[ ]\011/* RoundToGrid */
MIRP[01101]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MIAP[1]\011/* MoveIndirectAbsPt */
MIRP[01101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[00100]\011/* MoveIndirectRelPt */
MIRP[00100]\011/* MoveIndirectRelPt */
MDRP[11101]\011/* MoveDirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
SPVTL[1]\011/* SetPVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */
SPVTL[1]\011/* SetPVectorToLine */
ALIGNRP[ ]\011/* AlignRelativePt */";
};
width = 1229;
}
);
note = house;
unicode = 2302;
},
{
glyphname = revlogicalnot;
lastChange = "2018-11-25 06:09:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189.333 543 OFFCURVE",
"1205 559.667 OFFCURVE",
"1205 585 CURVE SMOOTH",
"1205 610.333 OFFCURVE",
"1189.333 627 OFFCURVE",
"1148 627 CURVE SMOOTH",
"144 627 LINE",
"144 123 LINE SMOOTH",
"144 81.667 OFFCURVE",
"160.667 67 OFFCURVE",
"186 67 CURVE SMOOTH",
"211.333 67 OFFCURVE",
"228 83 OFFCURVE",
"228 123 CURVE SMOOTH",
"228 543 LINE",
"1148 543 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 3 values pushed */
1 91 9 
PUSHW[ ]\011/* 1 value pushed */
281 
PUSHB[ ]\011/* 3 values pushed */
5 10 0 
PUSHW[ ]\011/* 1 value pushed */
774 
NPUSHB[ ]\011/* 9 values pushed */
17 1 2 91 9 8 25 16 80 
PUSHW[ ]\011/* 2 values pushed */
458 24 
CALL[ ]\011/* CallFunction */
FLIPOFF[ ]\011/* SetAutoFlipOff */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10100]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
FLIPON[ ]\011/* SetAutoFlipOn */
MIRP[11101]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SRP0[ ]\011/* SetRefPoint0 */
MIRP[10110]\011/* MoveIndirectRelPt */
ALIGNRP[ ]\011/* AlignRelativePt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
MDAP[1]\011/* MoveDirectAbsPt */
MIRP[11101]\011/* MoveIndirectRelPt */
MIRP[01101]\011/* MoveIndirectRelPt */
IUP[1]\011/* InterpolateUntPts */
IUP[0]\011/* InterpolateUntPts */";
};
width = 1229;
}
);
note = revlogicalnot;
unicode = 2310;
},
{
glyphname = iacute.locl;
layers = (
{
components = (
{
name = i;
},
{
name = uniF006;
transform = "{1, 0, 0, 1, -60, 0}";
}
);
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 1229;
}
);
note = glyph3150;
},
{
glyphname = "ha-ethiopic";
lastChange = "2018-11-25 06:10:54 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 781 LINE",
"1086 781 LINE SMOOTH",
"1123 781 OFFCURVE",
"1142 795 OFFCURVE",
"1142 823 CURVE SMOOTH",
"1142 852 OFFCURVE",
"1123 866 OFFCURVE",
"1086 866 CURVE SMOOTH",
"890 866 LINE"
);
}
);
width = 1229;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2018-11-25 09:19:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"974 866 LINE",
"890 866 LINE",
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"968 304 LINE",
"968 514 LINE",
"1027 515 OFFCURVE",
"1073 529 OFFCURVE",
"1107 556 CURVE",
"1141 587 OFFCURVE",
"1158 631 OFFCURVE",
"1158 687 CURVE SMOOTH",
"1158 727 OFFCURVE",
"1138 749 OFFCURVE",
"1115 749 CURVE SMOOTH",
"1091 749 OFFCURVE",
"1072 735 OFFCURVE",
"1072 686 CURVE SMOOTH",
"1072 649 OFFCURVE",
"1066 626 OFFCURVE",
"1053 615 CURVE SMOOTH",
"1032 597 OFFCURVE",
"1003 588 OFFCURVE",
"968 589 CURVE",
"968 721 LINE",
"917 721 LINE"
);
}
);
width = 1229;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2018-11-26 08:31:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 781 LINE",
"1086 781 LINE SMOOTH",
"1123 781 OFFCURVE",
"1142 795 OFFCURVE",
"1142 823 CURVE SMOOTH",
"1142 852 OFFCURVE",
"1123 866 OFFCURVE",
"1086 866 CURVE SMOOTH",
"890 866 LINE"
);
},
{
closed = 1;
nodes = (
"975 826 OFFCURVE",
"957 842 OFFCURVE",
"932 842 CURVE SMOOTH",
"908 842 OFFCURVE",
"890 826 OFFCURVE",
"890 785 CURVE SMOOTH",
"890 -384 LINE",
"974 -384 LINE",
"975 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 -384 OFFCURVE",
"1139 -370 OFFCURVE",
"1173 -343 CURVE",
"1207 -312 OFFCURVE",
"1224 -268 OFFCURVE",
"1224 -212 CURVE SMOOTH",
"1224 -172 OFFCURVE",
"1204 -150 OFFCURVE",
"1181 -150 CURVE",
"1157 -150 OFFCURVE",
"1138 -164 OFFCURVE",
"1138 -213 CURVE SMOOTH",
"1138 -250 OFFCURVE",
"1132 -273 OFFCURVE",
"1119 -284 CURVE",
"1098 -302 OFFCURVE",
"1069 -311 OFFCURVE",
"1034 -310 CURVE",
"1034 -385 LINE"
);
},
{
closed = 1;
nodes = (
"893 -385 LINE",
"1034 -385 LINE",
"1034 -310 LINE",
"893 -310 LINE"
);
}
);
width = 1229;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2018-11-25 23:50:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 781 LINE",
"1086 781 LINE SMOOTH",
"1123 781 OFFCURVE",
"1142 795 OFFCURVE",
"1142 823 CURVE SMOOTH",
"1142 852 OFFCURVE",
"1123 866 OFFCURVE",
"1086 866 CURVE SMOOTH",
"890 866 LINE"
);
},
{
closed = 1;
nodes = (
"975 826 OFFCURVE",
"957 842 OFFCURVE",
"932 842 CURVE SMOOTH",
"908 842 OFFCURVE",
"890 826 OFFCURVE",
"890 785 CURVE SMOOTH",
"890 -336 LINE SMOOTH",
"890 -376 OFFCURVE",
"908 -392 OFFCURVE",
"932 -392 CURVE SMOOTH",
"957 -392 OFFCURVE",
"974 -376 OFFCURVE",
"974 -336 CURVE SMOOTH",
"975 785 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2018-11-25 23:51:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 781 LINE",
"1086 781 LINE SMOOTH",
"1123 781 OFFCURVE",
"1142 795 OFFCURVE",
"1142 823 CURVE SMOOTH",
"1142 852 OFFCURVE",
"1123 866 OFFCURVE",
"1086 866 CURVE SMOOTH",
"890 866 LINE"
);
},
{
closed = 1;
nodes = (
"975 826 OFFCURVE",
"957 842 OFFCURVE",
"932 842 CURVE SMOOTH",
"908 842 OFFCURVE",
"890 826 OFFCURVE",
"890 785 CURVE SMOOTH",
"890 -336 LINE SMOOTH",
"890 -376 OFFCURVE",
"908 -392 OFFCURVE",
"932 -392 CURVE SMOOTH",
"957 -392 OFFCURVE",
"974 -376 OFFCURVE",
"974 -336 CURVE SMOOTH",
"975 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1167 -187 OFFCURVE",
"1107 -125 OFFCURVE",
"1033 -125 CURVE SMOOTH",
"960 -125 OFFCURVE",
"900 -187 OFFCURVE",
"900 -260 CURVE SMOOTH",
"900 -333 OFFCURVE",
"960 -394 OFFCURVE",
"1033 -394 CURVE SMOOTH",
"1107 -394 OFFCURVE",
"1167 -333 OFFCURVE",
"1167 -260 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1123 -309 OFFCURVE",
"1083 -349 OFFCURVE",
"1033 -349 CURVE SMOOTH",
"984 -349 OFFCURVE",
"944 -308 OFFCURVE",
"944 -260 CURVE SMOOTH",
"944 -211 OFFCURVE",
"983 -171 OFFCURVE",
"1033 -171 CURVE SMOOTH",
"1083 -171 OFFCURVE",
"1123 -211 OFFCURVE",
"1123 -260 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2018-11-25 23:55:27 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"327 706 LINE",
"306 616 OFFCURVE",
"264 537 OFFCURVE",
"264 436 CURVE SMOOTH",
"264 214 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 781 LINE",
"1086 781 LINE SMOOTH",
"1123 781 OFFCURVE",
"1142 795 OFFCURVE",
"1142 823 CURVE SMOOTH",
"1142 852 OFFCURVE",
"1123 866 OFFCURVE",
"1086 866 CURVE SMOOTH",
"890 866 LINE",
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 361 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 531 OFFCURVE",
"383 604 OFFCURVE",
"404 676 CURVE SMOOTH",
"409 691 OFFCURVE",
"398 706 OFFCURVE",
"382 706 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340 666 LINE",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 686 LINE SMOOTH",
"255 675 OFFCURVE",
"264 666 OFFCURVE",
"275 666 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2018-11-25 23:57:34 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1185 807 OFFCURVE",
"1125 869 OFFCURVE",
"1051 869 CURVE SMOOTH",
"978 869 OFFCURVE",
"918 807 OFFCURVE",
"918 734 CURVE SMOOTH",
"918 661 OFFCURVE",
"978 600 OFFCURVE",
"1051 600 CURVE SMOOTH",
"1125 600 OFFCURVE",
"1185 661 OFFCURVE",
"1185 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1141 685 OFFCURVE",
"1101 645 OFFCURVE",
"1051 645 CURVE SMOOTH",
"1002 645 OFFCURVE",
"962 686 OFFCURVE",
"962 734 CURVE SMOOTH",
"962 783 OFFCURVE",
"1001 823 OFFCURVE",
"1051 823 CURVE SMOOTH",
"1101 823 OFFCURVE",
"1141 783 OFFCURVE",
"1141 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 780 LINE",
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 777 LINE"
);
},
{
closed = 1;
nodes = (
"974 832 LINE SMOOTH",
"974 869 OFFCURVE",
"960 888 OFFCURVE",
"932 888 CURVE SMOOTH",
"903 888 OFFCURVE",
"889 869 OFFCURVE",
"889 832 CURVE SMOOTH",
"890 636 LINE",
"974 636 LINE"
);
}
);
width = 1229;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2018-11-25 23:58:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1185 807 OFFCURVE",
"1125 869 OFFCURVE",
"1051 869 CURVE SMOOTH",
"978 869 OFFCURVE",
"918 807 OFFCURVE",
"918 734 CURVE SMOOTH",
"918 661 OFFCURVE",
"978 600 OFFCURVE",
"1051 600 CURVE SMOOTH",
"1125 600 OFFCURVE",
"1185 661 OFFCURVE",
"1185 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1141 685 OFFCURVE",
"1101 645 OFFCURVE",
"1051 645 CURVE SMOOTH",
"1002 645 OFFCURVE",
"962 686 OFFCURVE",
"962 734 CURVE SMOOTH",
"962 783 OFFCURVE",
"1001 823 OFFCURVE",
"1051 823 CURVE SMOOTH",
"1101 823 OFFCURVE",
"1141 783 OFFCURVE",
"1141 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 780 LINE",
"890 459 LINE SMOOTH",
"890 254 OFFCURVE",
"860 163 OFFCURVE",
"773 99 CURVE SMOOTH",
"730 67 OFFCURVE",
"677 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"493 51 OFFCURVE",
"396 126 OFFCURVE",
"364 232 CURVE SMOOTH",
"348 285 OFFCURVE",
"340 360 OFFCURVE",
"340 459 CURVE SMOOTH",
"340 866 LINE",
"143 866 LINE SMOOTH",
"106 866 OFFCURVE",
"87 852 OFFCURVE",
"87 823 CURVE SMOOTH",
"87 795 OFFCURVE",
"106 781 OFFCURVE",
"143 781 CURVE SMOOTH",
"255 781 LINE",
"255 449 LINE SMOOTH",
"255 222 OFFCURVE",
"292 111 OFFCURVE",
"401 29 CURVE SMOOTH",
"455 -13 OFFCURVE",
"525 -33 OFFCURVE",
"611 -33 CURVE SMOOTH",
"776 -33 OFFCURVE",
"894 49 OFFCURVE",
"940 177 CURVE SMOOTH",
"963 241 OFFCURVE",
"974 335 OFFCURVE",
"974 459 CURVE SMOOTH",
"974 777 LINE"
);
},
{
closed = 1;
nodes = (
"974 832 LINE SMOOTH",
"974 869 OFFCURVE",
"960 888 OFFCURVE",
"932 888 CURVE SMOOTH",
"903 888 OFFCURVE",
"889 869 OFFCURVE",
"889 832 CURVE SMOOTH",
"890 636 LINE",
"974 636 LINE"
);
},
{
closed = 1;
nodes = (
"264 676 LINE",
"264 544 LINE",
"229 543 OFFCURVE",
"200 552 OFFCURVE",
"179 570 CURVE SMOOTH",
"166 581 OFFCURVE",
"160 604 OFFCURVE",
"160 641 CURVE SMOOTH",
"160 690 OFFCURVE",
"141 704 OFFCURVE",
"117 704 CURVE SMOOTH",
"94 704 OFFCURVE",
"74 682 OFFCURVE",
"74 642 CURVE SMOOTH",
"74 586 OFFCURVE",
"91 542 OFFCURVE",
"125 511 CURVE",
"159 484 OFFCURVE",
"205 470 OFFCURVE",
"264 469 CURVE",
"264 259 LINE",
"315 676 LINE"
);
}
);
width = 1229;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2018-11-25 06:18:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2018-11-26 00:07:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"980 211 LINE",
"980 421 LINE",
"1039 422 OFFCURVE",
"1085 436 OFFCURVE",
"1119 463 CURVE",
"1153 494 OFFCURVE",
"1170 538 OFFCURVE",
"1170 594 CURVE SMOOTH",
"1170 634 OFFCURVE",
"1150 656 OFFCURVE",
"1127 656 CURVE SMOOTH",
"1103 656 OFFCURVE",
"1084 642 OFFCURVE",
"1084 593 CURVE SMOOTH",
"1084 556 OFFCURVE",
"1078 533 OFFCURVE",
"1065 522 CURVE SMOOTH",
"1044 504 OFFCURVE",
"1015 495 OFFCURVE",
"980 496 CURVE",
"980 628 LINE",
"929 628 LINE"
);
}
);
width = 1229;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2018-11-26 08:56:20 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"938 605 LINE SMOOTH",
"938 710 OFFCURVE",
"869 816 OFFCURVE",
"778 862 CURVE SMOOTH",
"732 885 OFFCURVE",
"676 896 OFFCURVE",
"611 896 CURVE SMOOTH",
"490 896 OFFCURVE",
"400 854 OFFCURVE",
"293 738 CURVE",
"293 1255 LINE",
"96 1255 LINE SMOOTH",
"56 1255 OFFCURVE",
"40 1237 OFFCURVE",
"40 1213 CURVE SMOOTH",
"40 1188 OFFCURVE",
"56 1170 OFFCURVE",
"96 1170 CURVE SMOOTH",
"209 1170 LINE",
"209 0 LINE",
"388 0 LINE",
"428 0 OFFCURVE",
"444 18 OFFCURVE",
"444 42 CURVE SMOOTH",
"444 67 OFFCURVE",
"428 84 OFFCURVE",
"388 84 CURVE SMOOTH",
"293 84 LINE",
"293 616 LINE",
"365 695 OFFCURVE",
"417 746 OFFCURVE",
"448 767 CURVE SMOOTH",
"491 797 OFFCURVE",
"544 812 OFFCURVE",
"605 812 CURVE SMOOTH",
"761 812 OFFCURVE",
"853 720 OFFCURVE",
"853 599 CURVE SMOOTH",
"853 0 LINE",
"937 0 LINE"
);
},
{
closed = 1;
nodes = (
"854 267 LINE",
"854 -14 LINE",
"938 -14 LINE",
"938 269 LINE"
);
},
{
closed = 1;
nodes = (
"1121 220 OFFCURVE",
"1102 206 OFFCURVE",
"1102 157 CURVE SMOOTH",
"1102 120 OFFCURVE",
"1096 97 OFFCURVE",
"1083 86 CURVE SMOOTH",
"1062 68 OFFCURVE",
"1033 59 OFFCURVE",
"998 60 CURVE SMOOTH",
"854 60 LINE",
"854 -16 LINE",
"998 -16 LINE",
"1057 -14 OFFCURVE",
"1103 0 OFFCURVE",
"1137 27 CURVE",
"1171 58 OFFCURVE",
"1188 102 OFFCURVE",
"1188 158 CURVE SMOOTH",
"1188 198 OFFCURVE",
"1168 220 OFFCURVE",
"1145 220 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2018-11-26 00:10:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 -302 LINE",
"804 -302 LINE SMOOTH",
"763 -302 OFFCURVE",
"747 -319 OFFCURVE",
"747 -344 CURVE SMOOTH",
"747 -368 OFFCURVE",
"763 -386 OFFCURVE",
"804 -386 CURVE SMOOTH",
"1077 -386 LINE SMOOTH",
"1118 -386 OFFCURVE",
"1133 -368 OFFCURVE",
"1133 -344 CURVE SMOOTH",
"1133 -319 OFFCURVE",
"1118 -302 OFFCURVE",
"1077 -302 CURVE SMOOTH",
"983 -302 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2018-11-26 00:12:44 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"983 59 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE",
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 57 LINE"
);
},
{
closed = 1;
nodes = (
"899 147 LINE",
"899 37 LINE SMOOTH",
"899 -4 OFFCURVE",
"917 -19 OFFCURVE",
"941 -19 CURVE SMOOTH",
"966 -19 OFFCURVE",
"983 -4 OFFCURVE",
"983 37 CURVE SMOOTH",
"983 131 LINE"
);
},
{
closed = 1;
nodes = (
"1172 203 OFFCURVE",
"1112 265 OFFCURVE",
"1038 265 CURVE SMOOTH",
"965 265 OFFCURVE",
"905 203 OFFCURVE",
"905 130 CURVE SMOOTH",
"905 57 OFFCURVE",
"965 -4 OFFCURVE",
"1038 -4 CURVE SMOOTH",
"1112 -4 OFFCURVE",
"1172 57 OFFCURVE",
"1172 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 81 OFFCURVE",
"1088 41 OFFCURVE",
"1038 41 CURVE SMOOTH",
"989 41 OFFCURVE",
"949 82 OFFCURVE",
"949 130 CURVE SMOOTH",
"949 179 OFFCURVE",
"988 219 OFFCURVE",
"1038 219 CURVE SMOOTH",
"1088 219 OFFCURVE",
"1128 179 OFFCURVE",
"1128 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2018-11-26 00:14:38 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"899 254 LINE",
"899 84 LINE",
"804 84 LINE SMOOTH",
"764 84 OFFCURVE",
"748 67 OFFCURVE",
"748 42 CURVE SMOOTH",
"748 18 OFFCURVE",
"764 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1078 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1134 18 OFFCURVE",
"1134 42 CURVE SMOOTH",
"1134 67 OFFCURVE",
"1118 84 OFFCURVE",
"1078 84 CURVE SMOOTH",
"983 84 LINE",
"983 295 LINE"
);
},
{
closed = 1;
nodes = (
"253 147 LINE",
"253 37 LINE SMOOTH",
"253 -4 OFFCURVE",
"271 -19 OFFCURVE",
"295 -19 CURVE SMOOTH",
"320 -19 OFFCURVE",
"337 -4 OFFCURVE",
"337 37 CURVE SMOOTH",
"337 131 LINE"
);
},
{
closed = 1;
nodes = (
"536 203 OFFCURVE",
"476 265 OFFCURVE",
"402 265 CURVE SMOOTH",
"329 265 OFFCURVE",
"269 203 OFFCURVE",
"269 130 CURVE SMOOTH",
"269 57 OFFCURVE",
"329 -4 OFFCURVE",
"402 -4 CURVE SMOOTH",
"476 -4 OFFCURVE",
"536 57 OFFCURVE",
"536 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"492 81 OFFCURVE",
"452 41 OFFCURVE",
"402 41 CURVE SMOOTH",
"353 41 OFFCURVE",
"313 82 OFFCURVE",
"313 130 CURVE SMOOTH",
"313 179 OFFCURVE",
"352 219 OFFCURVE",
"402 219 CURVE SMOOTH",
"452 219 OFFCURVE",
"492 179 OFFCURVE",
"492 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 95 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 57 LINE",
"983 59 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE",
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 54 LINE"
);
}
);
width = 1229;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2018-11-26 00:15:38 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1176 523 OFFCURVE",
"1116 585 OFFCURVE",
"1042 585 CURVE SMOOTH",
"969 585 OFFCURVE",
"909 523 OFFCURVE",
"909 450 CURVE SMOOTH",
"909 377 OFFCURVE",
"969 316 OFFCURVE",
"1042 316 CURVE SMOOTH",
"1116 316 OFFCURVE",
"1176 377 OFFCURVE",
"1176 450 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1132 401 OFFCURVE",
"1092 361 OFFCURVE",
"1042 361 CURVE SMOOTH",
"993 361 OFFCURVE",
"953 402 OFFCURVE",
"953 450 CURVE SMOOTH",
"953 499 OFFCURVE",
"992 539 OFFCURVE",
"1042 539 CURVE SMOOTH",
"1092 539 OFFCURVE",
"1132 499 OFFCURVE",
"1132 450 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2018-11-26 00:19:27 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"986 -118 LINE",
"983 602 LINE SMOOTH",
"983 707 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE",
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"897 -120 LINE"
);
},
{
closed = 1;
nodes = (
"897 -93 LINE",
"898 -143 LINE",
"804 -143 LINE SMOOTH",
"763 -143 OFFCURVE",
"747 -160 OFFCURVE",
"747 -185 CURVE SMOOTH",
"747 -209 OFFCURVE",
"763 -227 OFFCURVE",
"804 -227 CURVE SMOOTH",
"986 -227 LINE",
"986 -96 LINE"
);
},
{
closed = 1;
nodes = (
"979 -227 LINE",
"1014 -226 OFFCURVE",
"1043 -235 OFFCURVE",
"1064 -253 CURVE SMOOTH",
"1077 -264 OFFCURVE",
"1083 -287 OFFCURVE",
"1083 -324 CURVE SMOOTH",
"1083 -373 OFFCURVE",
"1102 -387 OFFCURVE",
"1126 -387 CURVE SMOOTH",
"1149 -387 OFFCURVE",
"1169 -365 OFFCURVE",
"1169 -325 CURVE SMOOTH",
"1169 -269 OFFCURVE",
"1152 -225 OFFCURVE",
"1118 -194 CURVE",
"1084 -167 OFFCURVE",
"1038 -153 OFFCURVE",
"979 -152 CURVE"
);
}
);
width = 1229;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2018-11-25 08:57:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"576 648 LINE",
"576 0 LINE",
"731 0 LINE SMOOTH",
"771 0 OFFCURVE",
"787 18 OFFCURVE",
"787 42 CURVE SMOOTH",
"787 67 OFFCURVE",
"771 84 OFFCURVE",
"731 84 CURVE SMOOTH",
"661 84 LINE",
"661 641 LINE",
"704 708 OFFCURVE",
"743 754 OFFCURVE",
"777 777 CURVE SMOOTH",
"811 800 OFFCURVE",
"843 811 OFFCURVE",
"874 811 CURVE SMOOTH",
"942 811 OFFCURVE",
"1003 748 OFFCURVE",
"1003 663 CURVE SMOOTH",
"1003 0 LINE",
"1158 0 LINE SMOOTH",
"1198 0 OFFCURVE",
"1214 18 OFFCURVE",
"1214 42 CURVE SMOOTH",
"1214 67 OFFCURVE",
"1198 84 OFFCURVE",
"1158 84 CURVE SMOOTH",
"1087 84 LINE",
"1087 671 LINE SMOOTH",
"1087 731 OFFCURVE",
"1063 786 OFFCURVE",
"1016 837 CURVE SMOOTH",
"980 876 OFFCURVE",
"932 896 OFFCURVE",
"871 896 CURVE SMOOTH",
"794 896 OFFCURVE",
"717 850 OFFCURVE",
"642 757 CURVE",
"639 763 OFFCURVE",
"637 768 OFFCURVE",
"634 773 CURVE"
);
},
{
closed = 1;
nodes = (
"660 488 LINE",
"660 1255 LINE",
"463 1255 LINE SMOOTH",
"423 1255 OFFCURVE",
"407 1237 OFFCURVE",
"407 1213 CURVE SMOOTH",
"407 1188 OFFCURVE",
"423 1170 OFFCURVE",
"463 1170 CURVE SMOOTH",
"576 1170 LINE",
"576 475 LINE"
);
},
{
closed = 1;
nodes = (
"600 768 OFFCURVE",
"598 763 OFFCURVE",
"595 757 CURVE",
"520 850 OFFCURVE",
"443 896 OFFCURVE",
"366 896 CURVE SMOOTH",
"305 896 OFFCURVE",
"257 876 OFFCURVE",
"221 837 CURVE SMOOTH",
"174 786 OFFCURVE",
"150 731 OFFCURVE",
"150 671 CURVE SMOOTH",
"150 84 LINE",
"79 84 LINE SMOOTH",
"39 84 OFFCURVE",
"23 67 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 18 OFFCURVE",
"39 0 OFFCURVE",
"79 0 CURVE SMOOTH",
"234 0 LINE",
"234 663 LINE SMOOTH",
"234 748 OFFCURVE",
"295 811 OFFCURVE",
"363 811 CURVE SMOOTH",
"394 811 OFFCURVE",
"426 800 OFFCURVE",
"460 777 CURVE SMOOTH",
"494 754 OFFCURVE",
"533 708 OFFCURVE",
"576 641 CURVE",
"576 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"661 0 LINE",
"661 648 LINE",
"603 773 LINE"
);
}
);
width = 1229;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2018-11-26 00:25:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"555 648 LINE",
"555 0 LINE",
"710 0 LINE SMOOTH",
"750 0 OFFCURVE",
"766 18 OFFCURVE",
"766 42 CURVE SMOOTH",
"766 67 OFFCURVE",
"750 84 OFFCURVE",
"710 84 CURVE SMOOTH",
"640 84 LINE",
"640 641 LINE",
"683 708 OFFCURVE",
"722 754 OFFCURVE",
"756 777 CURVE SMOOTH",
"790 800 OFFCURVE",
"822 811 OFFCURVE",
"853 811 CURVE SMOOTH",
"921 811 OFFCURVE",
"982 748 OFFCURVE",
"982 663 CURVE SMOOTH",
"982 0 LINE",
"1137 0 LINE SMOOTH",
"1177 0 OFFCURVE",
"1193 18 OFFCURVE",
"1193 42 CURVE SMOOTH",
"1193 67 OFFCURVE",
"1177 84 OFFCURVE",
"1137 84 CURVE SMOOTH",
"1066 84 LINE",
"1066 671 LINE SMOOTH",
"1066 731 OFFCURVE",
"1042 786 OFFCURVE",
"995 837 CURVE SMOOTH",
"959 876 OFFCURVE",
"911 896 OFFCURVE",
"850 896 CURVE SMOOTH",
"773 896 OFFCURVE",
"696 850 OFFCURVE",
"621 757 CURVE",
"618 763 OFFCURVE",
"616 768 OFFCURVE",
"613 773 CURVE"
);
},
{
closed = 1;
nodes = (
"639 488 LINE",
"639 1255 LINE",
"442 1255 LINE SMOOTH",
"402 1255 OFFCURVE",
"386 1237 OFFCURVE",
"386 1213 CURVE SMOOTH",
"386 1188 OFFCURVE",
"402 1170 OFFCURVE",
"442 1170 CURVE SMOOTH",
"555 1170 LINE",
"555 475 LINE"
);
},
{
closed = 1;
nodes = (
"579 768 OFFCURVE",
"577 763 OFFCURVE",
"574 757 CURVE",
"499 850 OFFCURVE",
"422 896 OFFCURVE",
"345 896 CURVE SMOOTH",
"284 896 OFFCURVE",
"236 876 OFFCURVE",
"200 837 CURVE SMOOTH",
"153 786 OFFCURVE",
"129 731 OFFCURVE",
"129 671 CURVE SMOOTH",
"129 84 LINE",
"58 84 LINE SMOOTH",
"18 84 OFFCURVE",
"2 67 OFFCURVE",
"2 42 CURVE SMOOTH",
"2 18 OFFCURVE",
"18 0 OFFCURVE",
"58 0 CURVE SMOOTH",
"213 0 LINE",
"213 663 LINE SMOOTH",
"213 748 OFFCURVE",
"274 811 OFFCURVE",
"342 811 CURVE SMOOTH",
"373 811 OFFCURVE",
"405 800 OFFCURVE",
"439 777 CURVE SMOOTH",
"473 754 OFFCURVE",
"512 708 OFFCURVE",
"555 641 CURVE",
"555 84 LINE",
"485 84 LINE SMOOTH",
"445 84 OFFCURVE",
"429 67 OFFCURVE",
"429 42 CURVE SMOOTH",
"429 18 OFFCURVE",
"445 0 OFFCURVE",
"485 0 CURVE SMOOTH",
"640 0 LINE",
"640 648 LINE",
"582 773 LINE"
);
},
{
closed = 1;
nodes = (
"1023 255 LINE",
"1023 465 LINE",
"1082 466 OFFCURVE",
"1128 480 OFFCURVE",
"1162 507 CURVE",
"1196 538 OFFCURVE",
"1213 582 OFFCURVE",
"1213 638 CURVE SMOOTH",
"1213 678 OFFCURVE",
"1193 700 OFFCURVE",
"1170 700 CURVE SMOOTH",
"1146 700 OFFCURVE",
"1127 686 OFFCURVE",
"1127 637 CURVE",
"1127 600 OFFCURVE",
"1121 577 OFFCURVE",
"1108 566 CURVE SMOOTH",
"1087 548 OFFCURVE",
"1058 539 OFFCURVE",
"1023 540 CURVE SMOOTH",
"1023 672 LINE",
"999 672 LINE"
);
}
);
width = 1229;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2018-11-26 08:57:38 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1159 234 OFFCURVE",
"1140 220 OFFCURVE",
"1140 171 CURVE SMOOTH",
"1140 134 OFFCURVE",
"1134 111 OFFCURVE",
"1121 100 CURVE SMOOTH",
"1100 82 OFFCURVE",
"1071 74 OFFCURVE",
"1036 74 CURVE SMOOTH",
"923 74 LINE",
"923 -2 LINE",
"1036 -2 LINE",
"1095 0 OFFCURVE",
"1141 14 OFFCURVE",
"1175 41 CURVE",
"1209 72 OFFCURVE",
"1226 116 OFFCURVE",
"1226 172 CURVE SMOOTH",
"1226 212 OFFCURVE",
"1206 234 OFFCURVE",
"1183 234 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"637 488 LINE",
"640 1255 LINE",
"443 1255 LINE SMOOTH",
"403 1255 OFFCURVE",
"387 1237 OFFCURVE",
"387 1213 CURVE SMOOTH",
"387 1188 OFFCURVE",
"403 1170 OFFCURVE",
"443 1170 CURVE SMOOTH",
"556 1170 LINE",
"556 475 LINE"
);
},
{
closed = 1;
nodes = (
"580 768 OFFCURVE",
"578 763 OFFCURVE",
"575 757 CURVE",
"500 850 OFFCURVE",
"423 896 OFFCURVE",
"346 896 CURVE SMOOTH",
"285 896 OFFCURVE",
"237 876 OFFCURVE",
"201 837 CURVE SMOOTH",
"154 786 OFFCURVE",
"130 731 OFFCURVE",
"130 671 CURVE SMOOTH",
"130 0 LINE",
"214 0 LINE",
"214 663 LINE SMOOTH",
"214 748 OFFCURVE",
"275 811 OFFCURVE",
"343 811 CURVE SMOOTH",
"374 811 OFFCURVE",
"406 800 OFFCURVE",
"440 777 CURVE SMOOTH",
"474 754 OFFCURVE",
"513 708 OFFCURVE",
"556 641 CURVE",
"556 -2 LINE",
"641 0 LINE",
"638 648 LINE",
"583 773 LINE"
);
},
{
closed = 1;
nodes = (
"629 689 LINE",
"653 720 OFFCURVE",
"679 759 OFFCURVE",
"697 777 CURVE SMOOTH",
"731 812 OFFCURVE",
"763 812 OFFCURVE",
"794 811 CURVE SMOOTH",
"862 808 OFFCURVE",
"923 748 OFFCURVE",
"923 663 CURVE SMOOTH",
"923 0 LINE",
"1007 0 LINE",
"1007 671 LINE SMOOTH",
"1007 731 OFFCURVE",
"983 786 OFFCURVE",
"936 837 CURVE SMOOTH",
"900 876 OFFCURVE",
"852 896 OFFCURVE",
"791 896 CURVE SMOOTH",
"721 896 OFFCURVE",
"651 848 OFFCURVE",
"583 772 CURVE"
);
},
{
closed = 1;
nodes = (
"584 0 LINE",
"678 0 LINE SMOOTH",
"719 0 OFFCURVE",
"734 17 OFFCURVE",
"734 42 CURVE SMOOTH",
"734 66 OFFCURVE",
"719 84 OFFCURVE",
"678 84 CURVE SMOOTH",
"568 84 LINE",
"578 0 LINE"
);
},
{
closed = 1;
nodes = (
"154 0 LINE",
"248 0 LINE SMOOTH",
"289 0 OFFCURVE",
"304 17 OFFCURVE",
"304 42 CURVE SMOOTH",
"304 66 OFFCURVE",
"289 84 OFFCURVE",
"248 84 CURVE SMOOTH",
"138 84 LINE",
"148 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2018-11-26 08:42:37 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"576 648 LINE",
"576 0 LINE",
"731 0 LINE SMOOTH",
"771 0 OFFCURVE",
"787 18 OFFCURVE",
"787 42 CURVE SMOOTH",
"787 67 OFFCURVE",
"771 84 OFFCURVE",
"731 84 CURVE SMOOTH",
"661 84 LINE",
"661 641 LINE",
"704 708 OFFCURVE",
"743 754 OFFCURVE",
"777 777 CURVE SMOOTH",
"811 800 OFFCURVE",
"843 811 OFFCURVE",
"874 811 CURVE SMOOTH",
"942 811 OFFCURVE",
"1003 748 OFFCURVE",
"1003 663 CURVE SMOOTH",
"1003 -386 LINE",
"1158 -386 LINE SMOOTH",
"1198 -386 OFFCURVE",
"1214 -368 OFFCURVE",
"1214 -344 CURVE SMOOTH",
"1214 -319 OFFCURVE",
"1198 -302 OFFCURVE",
"1158 -302 CURVE SMOOTH",
"1087 -302 LINE",
"1087 671 LINE SMOOTH",
"1087 731 OFFCURVE",
"1063 786 OFFCURVE",
"1016 837 CURVE SMOOTH",
"980 876 OFFCURVE",
"932 896 OFFCURVE",
"871 896 CURVE SMOOTH",
"794 896 OFFCURVE",
"717 850 OFFCURVE",
"642 757 CURVE",
"639 763 OFFCURVE",
"637 768 OFFCURVE",
"634 773 CURVE"
);
},
{
closed = 1;
nodes = (
"660 488 LINE",
"660 1255 LINE",
"463 1255 LINE SMOOTH",
"423 1255 OFFCURVE",
"407 1237 OFFCURVE",
"407 1213 CURVE SMOOTH",
"407 1188 OFFCURVE",
"423 1170 OFFCURVE",
"463 1170 CURVE SMOOTH",
"576 1170 LINE",
"576 475 LINE"
);
},
{
closed = 1;
nodes = (
"600 768 OFFCURVE",
"598 763 OFFCURVE",
"595 757 CURVE",
"520 850 OFFCURVE",
"443 896 OFFCURVE",
"366 896 CURVE SMOOTH",
"305 896 OFFCURVE",
"257 876 OFFCURVE",
"221 837 CURVE SMOOTH",
"174 786 OFFCURVE",
"150 731 OFFCURVE",
"150 671 CURVE SMOOTH",
"150 84 LINE",
"79 84 LINE SMOOTH",
"39 84 OFFCURVE",
"23 67 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 18 OFFCURVE",
"39 0 OFFCURVE",
"79 0 CURVE SMOOTH",
"234 0 LINE",
"234 663 LINE SMOOTH",
"234 748 OFFCURVE",
"295 811 OFFCURVE",
"363 811 CURVE SMOOTH",
"394 811 OFFCURVE",
"426 800 OFFCURVE",
"460 777 CURVE SMOOTH",
"494 754 OFFCURVE",
"533 708 OFFCURVE",
"576 641 CURVE",
"576 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"661 0 LINE",
"661 648 LINE",
"603 773 LINE"
);
},
{
closed = 1;
nodes = (
"1044 -302 LINE",
"934 -302 LINE SMOOTH",
"893 -302 OFFCURVE",
"878 -320 OFFCURVE",
"878 -344 CURVE SMOOTH",
"878 -369 OFFCURVE",
"893 -386 OFFCURVE",
"934 -386 CURVE SMOOTH",
"1028 -386 LINE",
"1034 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2018-11-26 00:34:41 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"637 488 LINE",
"640 1255 LINE",
"443 1255 LINE SMOOTH",
"403 1255 OFFCURVE",
"387 1237 OFFCURVE",
"387 1213 CURVE SMOOTH",
"387 1188 OFFCURVE",
"403 1170 OFFCURVE",
"443 1170 CURVE SMOOTH",
"556 1170 LINE",
"556 475 LINE"
);
},
{
closed = 1;
nodes = (
"580 768 OFFCURVE",
"578 763 OFFCURVE",
"575 757 CURVE",
"500 850 OFFCURVE",
"423 896 OFFCURVE",
"346 896 CURVE SMOOTH",
"285 896 OFFCURVE",
"237 876 OFFCURVE",
"201 837 CURVE SMOOTH",
"154 786 OFFCURVE",
"130 731 OFFCURVE",
"130 671 CURVE SMOOTH",
"130 84 LINE",
"59 84 LINE SMOOTH",
"19 84 OFFCURVE",
"3 67 OFFCURVE",
"3 42 CURVE SMOOTH",
"3 18 OFFCURVE",
"19 0 OFFCURVE",
"59 0 CURVE SMOOTH",
"214 0 LINE",
"214 663 LINE SMOOTH",
"214 748 OFFCURVE",
"275 811 OFFCURVE",
"343 811 CURVE SMOOTH",
"374 811 OFFCURVE",
"406 800 OFFCURVE",
"440 777 CURVE SMOOTH",
"474 754 OFFCURVE",
"513 708 OFFCURVE",
"556 641 CURVE",
"556 84 LINE",
"486 84 LINE SMOOTH",
"446 84 OFFCURVE",
"430 67 OFFCURVE",
"430 42 CURVE SMOOTH",
"430 18 OFFCURVE",
"446 0 OFFCURVE",
"486 0 CURVE SMOOTH",
"641 0 LINE",
"638 648 LINE",
"583 773 LINE"
);
},
{
closed = 1;
nodes = (
"1202 203 OFFCURVE",
"1142 265 OFFCURVE",
"1068 265 CURVE SMOOTH",
"995 265 OFFCURVE",
"935 203 OFFCURVE",
"935 130 CURVE SMOOTH",
"935 57 OFFCURVE",
"995 -4 OFFCURVE",
"1068 -4 CURVE SMOOTH",
"1142 -4 OFFCURVE",
"1202 57 OFFCURVE",
"1202 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1158 81 OFFCURVE",
"1118 41 OFFCURVE",
"1068 41 CURVE SMOOTH",
"1019 41 OFFCURVE",
"979 82 OFFCURVE",
"979 130 CURVE SMOOTH",
"979 179 OFFCURVE",
"1018 219 OFFCURVE",
"1068 219 CURVE SMOOTH",
"1118 219 OFFCURVE",
"1158 179 OFFCURVE",
"1158 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"923 156 LINE",
"923 46 LINE SMOOTH",
"923 5 OFFCURVE",
"941 -10 OFFCURVE",
"965 -10 CURVE SMOOTH",
"990 -10 OFFCURVE",
"1007 5 OFFCURVE",
"1007 46 CURVE SMOOTH",
"1007 140 LINE",
"1007 146 LINE"
);
},
{
closed = 1;
nodes = (
"629 689 LINE",
"653 720 OFFCURVE",
"679 759 OFFCURVE",
"697 777 CURVE SMOOTH",
"731 812 OFFCURVE",
"763 812 OFFCURVE",
"794 811 CURVE SMOOTH",
"862 808 OFFCURVE",
"923 748 OFFCURVE",
"923 663 CURVE SMOOTH",
"923 140 LINE",
"1007 140 LINE",
"1007 84 LINE",
"1007 671 LINE SMOOTH",
"1007 731 OFFCURVE",
"983 786 OFFCURVE",
"936 837 CURVE SMOOTH",
"900 876 OFFCURVE",
"852 896 OFFCURVE",
"791 896 CURVE SMOOTH",
"721 896 OFFCURVE",
"651 848 OFFCURVE",
"583 772 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2018-11-26 03:27:21 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"576 648 LINE",
"576 0 LINE",
"731 0 LINE SMOOTH",
"771 0 OFFCURVE",
"787 18 OFFCURVE",
"787 42 CURVE SMOOTH",
"787 67 OFFCURVE",
"771 84 OFFCURVE",
"731 84 CURVE SMOOTH",
"661 84 LINE",
"661 641 LINE",
"704 708 OFFCURVE",
"743 754 OFFCURVE",
"777 777 CURVE SMOOTH",
"811 800 OFFCURVE",
"843 811 OFFCURVE",
"874 811 CURVE SMOOTH",
"942 811 OFFCURVE",
"1003 748 OFFCURVE",
"1003 663 CURVE SMOOTH",
"1003 0 LINE",
"1158 0 LINE SMOOTH",
"1198 0 OFFCURVE",
"1214 18 OFFCURVE",
"1214 42 CURVE SMOOTH",
"1214 67 OFFCURVE",
"1198 84 OFFCURVE",
"1158 84 CURVE SMOOTH",
"1087 84 LINE",
"1087 671 LINE SMOOTH",
"1087 731 OFFCURVE",
"1063 786 OFFCURVE",
"1016 837 CURVE SMOOTH",
"980 876 OFFCURVE",
"932 896 OFFCURVE",
"871 896 CURVE SMOOTH",
"794 896 OFFCURVE",
"717 850 OFFCURVE",
"642 757 CURVE",
"639 763 OFFCURVE",
"637 768 OFFCURVE",
"634 773 CURVE"
);
},
{
closed = 1;
nodes = (
"600 768 OFFCURVE",
"598 763 OFFCURVE",
"595 757 CURVE",
"520 850 OFFCURVE",
"443 896 OFFCURVE",
"366 896 CURVE SMOOTH",
"305 896 OFFCURVE",
"257 876 OFFCURVE",
"221 837 CURVE SMOOTH",
"174 786 OFFCURVE",
"150 731 OFFCURVE",
"150 671 CURVE SMOOTH",
"150 84 LINE",
"79 84 LINE SMOOTH",
"39 84 OFFCURVE",
"23 67 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 18 OFFCURVE",
"39 0 OFFCURVE",
"79 0 CURVE SMOOTH",
"234 0 LINE",
"234 663 LINE SMOOTH",
"234 748 OFFCURVE",
"295 811 OFFCURVE",
"363 811 CURVE SMOOTH",
"394 811 OFFCURVE",
"426 800 OFFCURVE",
"460 777 CURVE SMOOTH",
"494 754 OFFCURVE",
"533 708 OFFCURVE",
"576 641 CURVE",
"576 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"661 0 LINE",
"661 648 LINE",
"603 773 LINE"
);
},
{
closed = 1;
nodes = (
"520 1255 LINE",
"323 1255 LINE SMOOTH",
"283 1255 OFFCURVE",
"267 1237 OFFCURVE",
"267 1213 CURVE SMOOTH",
"267 1188 OFFCURVE",
"283 1170 OFFCURVE",
"323 1170 CURVE SMOOTH",
"436 1170 LINE",
"437 1024 LINE SMOOTH",
"437 1013 OFFCURVE",
"446 1004 OFFCURVE",
"457 1004 CURVE SMOOTH",
"576 1004 LINE",
"576 475 LINE",
"660 488 LINE",
"660 1048 LINE SMOOTH",
"660 1059 OFFCURVE",
"651 1068 OFFCURVE",
"640 1068 CURVE SMOOTH",
"520 1068 LINE"
);
}
);
width = 1229;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2018-11-26 00:37:18 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"576 648 LINE",
"576 0 LINE",
"731 0 LINE SMOOTH",
"771 0 OFFCURVE",
"787 18 OFFCURVE",
"787 42 CURVE SMOOTH",
"787 67 OFFCURVE",
"771 84 OFFCURVE",
"731 84 CURVE SMOOTH",
"661 84 LINE",
"661 641 LINE",
"704 708 OFFCURVE",
"743 754 OFFCURVE",
"777 777 CURVE SMOOTH",
"811 800 OFFCURVE",
"843 811 OFFCURVE",
"874 811 CURVE SMOOTH",
"942 811 OFFCURVE",
"1003 748 OFFCURVE",
"1003 663 CURVE SMOOTH",
"1003 0 LINE",
"1158 0 LINE SMOOTH",
"1198 0 OFFCURVE",
"1214 18 OFFCURVE",
"1214 42 CURVE SMOOTH",
"1214 67 OFFCURVE",
"1198 84 OFFCURVE",
"1158 84 CURVE SMOOTH",
"1087 84 LINE",
"1087 671 LINE SMOOTH",
"1087 731 OFFCURVE",
"1063 786 OFFCURVE",
"1016 837 CURVE SMOOTH",
"980 876 OFFCURVE",
"932 896 OFFCURVE",
"871 896 CURVE SMOOTH",
"794 896 OFFCURVE",
"717 850 OFFCURVE",
"642 757 CURVE",
"639 763 OFFCURVE",
"637 768 OFFCURVE",
"634 773 CURVE"
);
},
{
closed = 1;
nodes = (
"660 488 LINE",
"660 1255 LINE",
"463 1255 LINE SMOOTH",
"423 1255 OFFCURVE",
"407 1237 OFFCURVE",
"407 1213 CURVE SMOOTH",
"407 1188 OFFCURVE",
"423 1170 OFFCURVE",
"463 1170 CURVE SMOOTH",
"576 1170 LINE",
"576 475 LINE"
);
},
{
closed = 1;
nodes = (
"600 768 OFFCURVE",
"598 763 OFFCURVE",
"595 757 CURVE",
"520 850 OFFCURVE",
"443 896 OFFCURVE",
"366 896 CURVE SMOOTH",
"305 896 OFFCURVE",
"257 876 OFFCURVE",
"221 837 CURVE SMOOTH",
"174 786 OFFCURVE",
"150 731 OFFCURVE",
"150 671 CURVE SMOOTH",
"150 -302 LINE",
"79 -302 LINE SMOOTH",
"39 -302 OFFCURVE",
"23 -319 OFFCURVE",
"23 -344 CURVE SMOOTH",
"23 -368 OFFCURVE",
"39 -386 OFFCURVE",
"79 -386 CURVE SMOOTH",
"234 -386 LINE",
"234 663 LINE SMOOTH",
"234 748 OFFCURVE",
"295 811 OFFCURVE",
"363 811 CURVE SMOOTH",
"394 811 OFFCURVE",
"426 800 OFFCURVE",
"460 777 CURVE SMOOTH",
"494 754 OFFCURVE",
"533 708 OFFCURVE",
"576 641 CURVE",
"576 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"661 0 LINE",
"661 648 LINE",
"603 773 LINE"
);
}
);
width = 1229;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2018-11-26 00:38:43 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"660 488 LINE",
"660 1255 LINE",
"463 1255 LINE SMOOTH",
"423 1255 OFFCURVE",
"407 1237 OFFCURVE",
"407 1213 CURVE SMOOTH",
"407 1188 OFFCURVE",
"423 1170 OFFCURVE",
"463 1170 CURVE SMOOTH",
"576 1170 LINE",
"576 475 LINE"
);
},
{
closed = 1;
nodes = (
"600 768 OFFCURVE",
"598 763 OFFCURVE",
"595 757 CURVE",
"520 850 OFFCURVE",
"443 896 OFFCURVE",
"366 896 CURVE SMOOTH",
"305 896 OFFCURVE",
"257 876 OFFCURVE",
"221 837 CURVE SMOOTH",
"174 786 OFFCURVE",
"150 731 OFFCURVE",
"150 671 CURVE SMOOTH",
"150 84 LINE",
"79 84 LINE SMOOTH",
"39 84 OFFCURVE",
"23 67 OFFCURVE",
"23 42 CURVE SMOOTH",
"23 18 OFFCURVE",
"39 0 OFFCURVE",
"79 0 CURVE SMOOTH",
"234 0 LINE",
"234 663 LINE SMOOTH",
"234 748 OFFCURVE",
"295 811 OFFCURVE",
"363 811 CURVE SMOOTH",
"394 811 OFFCURVE",
"426 800 OFFCURVE",
"460 777 CURVE SMOOTH",
"494 754 OFFCURVE",
"533 708 OFFCURVE",
"576 641 CURVE",
"576 84 LINE",
"506 84 LINE SMOOTH",
"466 84 OFFCURVE",
"450 67 OFFCURVE",
"450 42 CURVE SMOOTH",
"450 18 OFFCURVE",
"466 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"661 0 LINE",
"661 648 LINE",
"603 773 LINE"
);
},
{
closed = 1;
nodes = (
"1087 -120 LINE",
"1087 671 LINE SMOOTH",
"1087 731 OFFCURVE",
"1063 786 OFFCURVE",
"1016 837 CURVE SMOOTH",
"980 876 OFFCURVE",
"932 896 OFFCURVE",
"871 896 CURVE SMOOTH",
"794 896 OFFCURVE",
"717 850 OFFCURVE",
"642 757 CURVE",
"639 763 OFFCURVE",
"637 768 OFFCURVE",
"634 773 CURVE",
"576 648 LINE",
"576 0 LINE",
"731 0 LINE SMOOTH",
"771 0 OFFCURVE",
"787 18 OFFCURVE",
"787 42 CURVE SMOOTH",
"787 67 OFFCURVE",
"771 84 OFFCURVE",
"731 84 CURVE SMOOTH",
"661 84 LINE",
"661 641 LINE",
"704 708 OFFCURVE",
"743 754 OFFCURVE",
"777 777 CURVE SMOOTH",
"811 800 OFFCURVE",
"843 811 OFFCURVE",
"874 811 CURVE SMOOTH",
"942 811 OFFCURVE",
"1003 748 OFFCURVE",
"1003 663 CURVE SMOOTH",
"1003 -120 LINE"
);
},
{
closed = 1;
nodes = (
"1003 -112 LINE",
"1003 -162 LINE",
"906 -162 LINE SMOOTH",
"865 -162 OFFCURVE",
"849 -179 OFFCURVE",
"849 -204 CURVE SMOOTH",
"849 -228 OFFCURVE",
"865 -246 OFFCURVE",
"906 -246 CURVE SMOOTH",
"1087 -246 LINE",
"1087 -115 LINE"
);
},
{
closed = 1;
nodes = (
"1081 -246 LINE",
"1116 -245 OFFCURVE",
"1145 -254 OFFCURVE",
"1166 -272 CURVE SMOOTH",
"1179 -283 OFFCURVE",
"1185 -306 OFFCURVE",
"1185 -343 CURVE SMOOTH",
"1185 -392 OFFCURVE",
"1204 -406 OFFCURVE",
"1228 -406 CURVE SMOOTH",
"1251 -406 OFFCURVE",
"1271 -384 OFFCURVE",
"1271 -344 CURVE SMOOTH",
"1271 -288 OFFCURVE",
"1254 -244 OFFCURVE",
"1220 -213 CURVE",
"1186 -186 OFFCURVE",
"1140 -172 OFFCURVE",
"1081 -171 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2018-11-25 09:19:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
}
);
width = 1229;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2018-11-26 00:40:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"187 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"788 88 OFFCURVE",
"747 153 OFFCURVE",
"740 195 CURVE SMOOTH",
"727 275 OFFCURVE",
"723 347 OFFCURVE",
"723 459 CURVE SMOOTH",
"722 781 LINE",
"992 781 LINE",
"993 459 LINE SMOOTH",
"993 387 OFFCURVE",
"993 253 OFFCURVE",
"976 195 CURVE SMOOTH",
"966 160 OFFCURVE",
"936 88 OFFCURVE",
"859 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"638 781 LINE",
"639 459 LINE SMOOTH",
"639 383 OFFCURVE",
"641 259 OFFCURVE",
"672 149 CURVE SMOOTH",
"697 60 OFFCURVE",
"759 0 OFFCURVE",
"850 0 CURVE",
"960 0 OFFCURVE",
"1020 65 OFFCURVE",
"1047 154 CURVE SMOOTH",
"1078 257 OFFCURVE",
"1078 380 OFFCURVE",
"1078 449 CURVE SMOOTH",
"1079 781 LINE",
"1140 781 LINE SMOOTH",
"1177 781 OFFCURVE",
"1196 795 OFFCURVE",
"1196 823 CURVE SMOOTH",
"1196 852 OFFCURVE",
"1177 866 OFFCURVE",
"1140 866 CURVE SMOOTH",
"581 866 LINE",
"581 781 LINE"
);
},
{
closed = 1;
nodes = (
"1026 209 LINE",
"1026 419 LINE",
"1085 420 OFFCURVE",
"1131 434 OFFCURVE",
"1165 461 CURVE",
"1199 492 OFFCURVE",
"1216 536 OFFCURVE",
"1216 592 CURVE SMOOTH",
"1216 632 OFFCURVE",
"1196 654 OFFCURVE",
"1173 654 CURVE SMOOTH",
"1149 654 OFFCURVE",
"1130 640 OFFCURVE",
"1130 591 CURVE SMOOTH",
"1130 554 OFFCURVE",
"1124 531 OFFCURVE",
"1111 520 CURVE SMOOTH",
"1090 502 OFFCURVE",
"1061 493 OFFCURVE",
"1026 494 CURVE",
"1026 626 LINE",
"1001 626 LINE"
);
}
);
width = 1229;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2018-11-26 08:41:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"1012 814 LINE",
"1013 -341 LINE",
"1096 -342 LINE",
"1097 806 LINE"
);
},
{
closed = 1;
nodes = (
"1280 -150 OFFCURVE",
"1261 -164 OFFCURVE",
"1261 -213 CURVE SMOOTH",
"1261 -250 OFFCURVE",
"1255 -273 OFFCURVE",
"1242 -284 CURVE SMOOTH",
"1221 -302 OFFCURVE",
"1192 -311 OFFCURVE",
"1157 -310 CURVE SMOOTH",
"1013 -310 LINE",
"1013 -386 LINE",
"1157 -386 LINE",
"1216 -384 OFFCURVE",
"1262 -370 OFFCURVE",
"1296 -343 CURVE",
"1330 -312 OFFCURVE",
"1347 -268 OFFCURVE",
"1347 -212 CURVE SMOOTH",
"1347 -172 OFFCURVE",
"1327 -150 OFFCURVE",
"1304 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2018-11-26 08:42:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1012 814 LINE",
"1012 -387 LINE",
"1096 -387 LINE",
"1097 806 LINE"
);
},
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"1028 -387 LINE",
"1122 -387 LINE SMOOTH",
"1163 -387 OFFCURVE",
"1178 -370 OFFCURVE",
"1178 -345 CURVE SMOOTH",
"1178 -321 OFFCURVE",
"1163 -303 OFFCURVE",
"1122 -303 CURVE SMOOTH",
"1012 -303 LINE",
"1022 -387 LINE"
);
},
{
closed = 1;
nodes = (
"1068 -302 LINE",
"958 -302 LINE SMOOTH",
"917 -302 OFFCURVE",
"902 -320 OFFCURVE",
"902 -344 CURVE SMOOTH",
"902 -369 OFFCURVE",
"917 -386 OFFCURVE",
"958 -386 CURVE SMOOTH",
"1052 -386 LINE",
"1058 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2018-11-26 02:27:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"985 814 LINE",
"985 -343 LINE SMOOTH",
"985 -383 OFFCURVE",
"1003 -399 OFFCURVE",
"1027 -399 CURVE SMOOTH",
"1052 -399 OFFCURVE",
"1069 -383 OFFCURVE",
"1069 -343 CURVE SMOOTH",
"1070 806 LINE"
);
},
{
closed = 1;
nodes = (
"263 88 OFFCURVE",
"233 160 OFFCURVE",
"223 195 CURVE SMOOTH",
"206 253 OFFCURVE",
"206 387 OFFCURVE",
"206 459 CURVE SMOOTH",
"207 781 LINE",
"477 781 LINE",
"476 459 LINE SMOOTH",
"476 347 OFFCURVE",
"476 275 OFFCURVE",
"459 195 CURVE SMOOTH",
"450 152 OFFCURVE",
"411 88 OFFCURVE",
"340 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"618 866 LINE",
"59 866 LINE SMOOTH",
"22 866 OFFCURVE",
"3 852 OFFCURVE",
"3 823 CURVE SMOOTH",
"3 795 OFFCURVE",
"22 781 OFFCURVE",
"59 781 CURVE SMOOTH",
"120 781 LINE",
"121 449 LINE SMOOTH",
"121 380 OFFCURVE",
"120 257 OFFCURVE",
"152 154 CURVE SMOOTH",
"180 65 OFFCURVE",
"239 0 OFFCURVE",
"349 0 CURVE",
"440 0 OFFCURVE",
"502 60 OFFCURVE",
"527 149 CURVE SMOOTH",
"558 259 OFFCURVE",
"560 383 OFFCURVE",
"560 459 CURVE SMOOTH",
"561 781 LINE",
"618 781 LINE"
);
},
{
closed = 1;
nodes = (
"781 88 OFFCURVE",
"740 153 OFFCURVE",
"733 195 CURVE SMOOTH",
"720 275 OFFCURVE",
"716 347 OFFCURVE",
"716 459 CURVE SMOOTH",
"715 781 LINE",
"985 781 LINE",
"986 459 LINE SMOOTH",
"986 387 OFFCURVE",
"986 253 OFFCURVE",
"969 195 CURVE SMOOTH",
"959 160 OFFCURVE",
"929 88 OFFCURVE",
"852 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"631 781 LINE",
"632 459 LINE SMOOTH",
"632 383 OFFCURVE",
"634 259 OFFCURVE",
"665 149 CURVE SMOOTH",
"690 60 OFFCURVE",
"752 0 OFFCURVE",
"843 0 CURVE",
"953 0 OFFCURVE",
"1013 65 OFFCURVE",
"1040 154 CURVE SMOOTH",
"1071 257 OFFCURVE",
"1071 380 OFFCURVE",
"1071 449 CURVE SMOOTH",
"1072 781 LINE",
"1133 781 LINE SMOOTH",
"1170 781 OFFCURVE",
"1189 795 OFFCURVE",
"1189 823 CURVE SMOOTH",
"1189 852 OFFCURVE",
"1170 866 OFFCURVE",
"1133 866 CURVE SMOOTH",
"574 866 LINE",
"574 781 LINE"
);
},
{
closed = 1;
nodes = (
"1262 -172 OFFCURVE",
"1202 -110 OFFCURVE",
"1128 -110 CURVE SMOOTH",
"1055 -110 OFFCURVE",
"995 -172 OFFCURVE",
"995 -245 CURVE SMOOTH",
"995 -318 OFFCURVE",
"1055 -379 OFFCURVE",
"1128 -379 CURVE SMOOTH",
"1202 -379 OFFCURVE",
"1262 -318 OFFCURVE",
"1262 -245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1218 -294 OFFCURVE",
"1178 -334 OFFCURVE",
"1128 -334 CURVE SMOOTH",
"1079 -334 OFFCURVE",
"1039 -293 OFFCURVE",
"1039 -245 CURVE SMOOTH",
"1039 -196 OFFCURVE",
"1078 -156 OFFCURVE",
"1128 -156 CURVE",
"1178 -156 OFFCURVE",
"1218 -196 OFFCURVE",
"1218 -245 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2018-11-26 03:24:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"269 781 LINE",
"483 781 LINE",
"483 -59 LINE SMOOTH",
"483 -196 OFFCURVE",
"387 -302 OFFCURVE",
"244 -302 CURVE SMOOTH",
"203 -302 LINE",
"197 -386 LINE",
"246 -386 LINE SMOOTH",
"302 -386 OFFCURVE",
"350 -376 OFFCURVE",
"391 -355 CURVE SMOOTH",
"508 -295 OFFCURVE",
"567 -202 OFFCURVE",
"567 -59 CURVE SMOOTH",
"567 866 LINE",
"274 866 LINE"
);
},
{
closed = 1;
nodes = (
"206 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -320 OFFCURVE",
"45 -345 CURVE SMOOTH",
"45 -370 OFFCURVE",
"61 -387 OFFCURVE",
"101 -387 CURVE SMOOTH",
"206 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2018-11-26 02:20:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"483 385 LINE",
"483 -312 LINE",
"153 -312 LINE SMOOTH",
"113 -312 OFFCURVE",
"97 -329 OFFCURVE",
"97 -354 CURVE SMOOTH",
"97 -378 OFFCURVE",
"113 -396 OFFCURVE",
"153 -396 CURVE SMOOTH",
"897 -396 LINE SMOOTH",
"938 -396 OFFCURVE",
"954 -378 OFFCURVE",
"954 -354 CURVE SMOOTH",
"954 -329 OFFCURVE",
"938 -312 OFFCURVE",
"897 -312 CURVE SMOOTH",
"567 -312 LINE",
"567 470 LINE"
);
}
);
width = 1229;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2018-11-26 02:22:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1012 814 LINE",
"1011 -197 LINE",
"1095 -197 LINE",
"1097 806 LINE"
);
},
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"1012 -95 LINE",
"1012 -145 LINE",
"916 -145 LINE SMOOTH",
"875 -145 OFFCURVE",
"859 -162 OFFCURVE",
"859 -187 CURVE SMOOTH",
"859 -211 OFFCURVE",
"875 -229 OFFCURVE",
"916 -229 CURVE SMOOTH",
"1095 -229 LINE",
"1095 -98 LINE"
);
},
{
closed = 1;
nodes = (
"1091 -229 LINE",
"1126 -228 OFFCURVE",
"1155 -237 OFFCURVE",
"1176 -255 CURVE SMOOTH",
"1189 -266 OFFCURVE",
"1195 -289 OFFCURVE",
"1195 -326 CURVE SMOOTH",
"1195 -375 OFFCURVE",
"1214 -389 OFFCURVE",
"1238 -389 CURVE SMOOTH",
"1261 -389 OFFCURVE",
"1281 -367 OFFCURVE",
"1281 -327 CURVE SMOOTH",
"1281 -271 OFFCURVE",
"1264 -227 OFFCURVE",
"1230 -196 CURVE",
"1196 -169 OFFCURVE",
"1150 -155 OFFCURVE",
"1091 -154 CURVE"
);
}
);
width = 1229;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2018-11-25 09:30:12 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2018-11-26 02:25:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"572 168 LINE",
"573 170 OFFCURVE",
"573 171 OFFCURVE",
"574 173 CURVE",
"587 139 OFFCURVE",
"614 84 OFFCURVE",
"653 48 CURVE SMOOTH",
"684 20 OFFCURVE",
"747 -5 OFFCURVE",
"820 -5 CURVE SMOOTH",
"905 -5 OFFCURVE",
"988 68 OFFCURVE",
"1026 177 CURVE SMOOTH",
"1046 234 OFFCURVE",
"1060 347 OFFCURVE",
"1060 459 CURVE SMOOTH",
"1060 781 LINE",
"1112 781 LINE SMOOTH",
"1149 781 OFFCURVE",
"1168 795 OFFCURVE",
"1168 823 CURVE SMOOTH",
"1168 852 OFFCURVE",
"1149 866 OFFCURVE",
"1112 866 CURVE SMOOTH",
"976 866 LINE",
"976 459 LINE SMOOTH",
"976 322 OFFCURVE",
"956 203 OFFCURVE",
"927 161 CURVE SMOOTH",
"892 110 OFFCURVE",
"861 76 OFFCURVE",
"809 76 CURVE SMOOTH",
"738 76 OFFCURVE",
"672 138 OFFCURVE",
"644 232 CURVE SMOOTH",
"636 259 OFFCURVE",
"630 299 OFFCURVE",
"625 345 CURVE"
);
},
{
closed = 1;
nodes = (
"1032 269 LINE",
"1032 479 LINE",
"1091 480 OFFCURVE",
"1137 494 OFFCURVE",
"1171 521 CURVE",
"1205 552 OFFCURVE",
"1222 596 OFFCURVE",
"1222 652 CURVE SMOOTH",
"1222 692 OFFCURVE",
"1202 714 OFFCURVE",
"1179 714 CURVE SMOOTH",
"1155 714 OFFCURVE",
"1136 700 OFFCURVE",
"1136 651 CURVE",
"1136 614 OFFCURVE",
"1130 591 OFFCURVE",
"1117 580 CURVE SMOOTH",
"1096 562 OFFCURVE",
"1067 553 OFFCURVE",
"1032 554 CURVE",
"1032 686 LINE",
"981 686 LINE"
);
},
{
closed = 1;
nodes = (
"634 221 CURVE SMOOTH",
"644 257 OFFCURVE",
"660 420 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"603 110 OFFCURVE",
"618 165 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2018-11-26 08:43:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1016 814 LINE",
"1016 -221 LINE",
"1100 -221 LINE",
"1101 806 LINE"
);
},
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1016 -103 LINE",
"1016 -384 LINE",
"1100 -384 LINE",
"1100 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1283 -150 OFFCURVE",
"1264 -164 OFFCURVE",
"1264 -213 CURVE SMOOTH",
"1264 -250 OFFCURVE",
"1258 -273 OFFCURVE",
"1245 -284 CURVE SMOOTH",
"1224 -302 OFFCURVE",
"1195 -311 OFFCURVE",
"1160 -310 CURVE SMOOTH",
"1016 -310 LINE",
"1016 -386 LINE",
"1160 -386 LINE",
"1219 -384 OFFCURVE",
"1265 -370 OFFCURVE",
"1299 -343 CURVE",
"1333 -312 OFFCURVE",
"1350 -268 OFFCURVE",
"1350 -212 CURVE SMOOTH",
"1350 -172 OFFCURVE",
"1330 -150 OFFCURVE",
"1307 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2018-11-26 08:43:06 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1016 814 LINE",
"1016 -387 LINE",
"1100 -387 LINE",
"1101 806 LINE"
);
},
{
closed = 1;
nodes = (
"1032 -387 LINE",
"1126 -387 LINE SMOOTH",
"1167 -387 OFFCURVE",
"1182 -370 OFFCURVE",
"1182 -345 CURVE SMOOTH",
"1182 -321 OFFCURVE",
"1167 -303 OFFCURVE",
"1126 -303 CURVE SMOOTH",
"1016 -303 LINE",
"1026 -387 LINE"
);
},
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1069 -302 LINE",
"959 -302 LINE SMOOTH",
"918 -302 OFFCURVE",
"903 -320 OFFCURVE",
"903 -344 CURVE SMOOTH",
"903 -369 OFFCURVE",
"918 -386 OFFCURVE",
"959 -386 CURVE SMOOTH",
"1053 -386 LINE",
"1059 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2018-11-26 02:27:57 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1017 814 LINE",
"1017 -343 LINE SMOOTH",
"1017 -383 OFFCURVE",
"1035 -399 OFFCURVE",
"1059 -399 CURVE SMOOTH",
"1084 -399 OFFCURVE",
"1101 -383 OFFCURVE",
"1101 -343 CURVE SMOOTH",
"1102 806 LINE"
);
},
{
closed = 1;
nodes = (
"1294 -172 OFFCURVE",
"1234 -110 OFFCURVE",
"1160 -110 CURVE SMOOTH",
"1087 -110 OFFCURVE",
"1027 -172 OFFCURVE",
"1027 -245 CURVE SMOOTH",
"1027 -318 OFFCURVE",
"1087 -379 OFFCURVE",
"1160 -379 CURVE SMOOTH",
"1234 -379 OFFCURVE",
"1294 -318 OFFCURVE",
"1294 -245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1250 -294 OFFCURVE",
"1210 -334 OFFCURVE",
"1160 -334 CURVE SMOOTH",
"1111 -334 OFFCURVE",
"1071 -293 OFFCURVE",
"1071 -245 CURVE SMOOTH",
"1071 -196 OFFCURVE",
"1110 -156 OFFCURVE",
"1160 -156 CURVE",
"1210 -156 OFFCURVE",
"1250 -196 OFFCURVE",
"1250 -245 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2018-11-26 08:43:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"129 -387 LINE",
"213 -387 LINE",
"213 814 LINE",
"128 806 LINE"
);
},
{
closed = 1;
nodes = (
"213 -303 LINE",
"103 -303 LINE SMOOTH",
"62 -303 OFFCURVE",
"47 -321 OFFCURVE",
"47 -345 CURVE SMOOTH",
"47 -370 OFFCURVE",
"62 -387 OFFCURVE",
"103 -387 CURVE SMOOTH",
"197 -387 LINE",
"203 -387 LINE"
);
},
{
closed = 1;
nodes = (
"40 866 OFFCURVE",
"21 852 OFFCURVE",
"21 823 CURVE SMOOTH",
"21 795 OFFCURVE",
"40 781 OFFCURVE",
"77 781 CURVE SMOOTH",
"129 781 LINE",
"129 459 LINE SMOOTH",
"129 347 OFFCURVE",
"143 234 OFFCURVE",
"163 177 CURVE SMOOTH",
"202 68 OFFCURVE",
"284 -5 OFFCURVE",
"369 -5 CURVE SMOOTH",
"442 -5 OFFCURVE",
"505 20 OFFCURVE",
"536 48 CURVE SMOOTH",
"575 84 OFFCURVE",
"602 139 OFFCURVE",
"615 173 CURVE",
"634 125 OFFCURVE",
"671 74 OFFCURVE",
"707 45 CURVE SMOOTH",
"740 18 OFFCURVE",
"789 0 OFFCURVE",
"828 0 CURVE SMOOTH",
"889 0 OFFCURVE",
"957 25 OFFCURVE",
"999 62 CURVE SMOOTH",
"1064 120 OFFCURVE",
"1108 274 OFFCURVE",
"1108 449 CURVE SMOOTH",
"1108 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"1023 866 LINE",
"1023 459 LINE SMOOTH",
"1023 370 OFFCURVE",
"1013 280 OFFCURVE",
"999 232 CURVE SMOOTH",
"971 141 OFFCURVE",
"911 80 OFFCURVE",
"849 80 CURVE SMOOTH",
"778 80 OFFCURVE",
"713 140 OFFCURVE",
"686 231 CURVE SMOOTH",
"672 279 OFFCURVE",
"662 369 OFFCURVE",
"662 458 CURVE SMOOTH",
"662 781 LINE",
"686 781 LINE SMOOTH",
"723 781 OFFCURVE",
"742 795 OFFCURVE",
"742 823 CURVE SMOOTH",
"742 852 OFFCURVE",
"723 866 OFFCURVE",
"686 866 CURVE SMOOTH",
"569 866 LINE",
"569 865 LINE",
"545 865 LINE SMOOTH",
"508 865 OFFCURVE",
"489 851 OFFCURVE",
"489 822 CURVE SMOOTH",
"489 794 OFFCURVE",
"508 780 OFFCURVE",
"545 780 CURVE SMOOTH",
"569 780 LINE",
"569 459 LINE SMOOTH",
"569 370 OFFCURVE",
"559 280 OFFCURVE",
"545 232 CURVE SMOOTH",
"517 138 OFFCURVE",
"451 76 OFFCURVE",
"380 76 CURVE SMOOTH",
"328 76 OFFCURVE",
"297 110 OFFCURVE",
"262 161 CURVE SMOOTH",
"233 203 OFFCURVE",
"213 322 OFFCURVE",
"213 459 CURVE SMOOTH",
"213 866 LINE",
"77 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164 -386 LINE",
"258 -386 LINE SMOOTH",
"299 -386 OFFCURVE",
"314 -369 OFFCURVE",
"314 -344 CURVE SMOOTH",
"314 -320 OFFCURVE",
"299 -302 OFFCURVE",
"258 -302 CURVE SMOOTH",
"148 -302 LINE",
"158 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2018-11-26 02:30:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"574 385 LINE",
"574 -312 LINE",
"244 -312 LINE SMOOTH",
"204 -312 OFFCURVE",
"188 -329 OFFCURVE",
"188 -354 CURVE SMOOTH",
"188 -378 OFFCURVE",
"204 -396 OFFCURVE",
"244 -396 CURVE SMOOTH",
"988 -396 LINE SMOOTH",
"1029 -396 OFFCURVE",
"1045 -378 OFFCURVE",
"1045 -354 CURVE SMOOTH",
"1045 -329 OFFCURVE",
"1029 -312 OFFCURVE",
"988 -312 CURVE SMOOTH",
"658 -312 LINE",
"658 470 LINE"
);
},
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2018-11-26 02:31:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1016 814 LINE",
"1016 -237 LINE",
"1100 -237 LINE",
"1101 806 LINE"
);
},
{
closed = 1;
nodes = (
"1016 866 LINE",
"1016 459 LINE SMOOTH",
"1016 322 OFFCURVE",
"996 203 OFFCURVE",
"967 161 CURVE SMOOTH",
"932 110 OFFCURVE",
"901 76 OFFCURVE",
"849 76 CURVE SMOOTH",
"778 76 OFFCURVE",
"712 138 OFFCURVE",
"684 232 CURVE SMOOTH",
"670 280 OFFCURVE",
"660 370 OFFCURVE",
"660 459 CURVE SMOOTH",
"660 780 LINE",
"684 780 LINE SMOOTH",
"721 780 OFFCURVE",
"740 794 OFFCURVE",
"740 822 CURVE SMOOTH",
"740 851 OFFCURVE",
"721 865 OFFCURVE",
"684 865 CURVE SMOOTH",
"660 865 LINE",
"660 866 LINE",
"543 866 LINE SMOOTH",
"506 866 OFFCURVE",
"487 852 OFFCURVE",
"487 823 CURVE SMOOTH",
"487 795 OFFCURVE",
"506 781 OFFCURVE",
"543 781 CURVE SMOOTH",
"567 781 LINE",
"567 458 LINE SMOOTH",
"567 369 OFFCURVE",
"557 279 OFFCURVE",
"543 231 CURVE SMOOTH",
"516 140 OFFCURVE",
"451 80 OFFCURVE",
"380 80 CURVE SMOOTH",
"318 80 OFFCURVE",
"258 141 OFFCURVE",
"230 232 CURVE SMOOTH",
"216 280 OFFCURVE",
"206 370 OFFCURVE",
"206 459 CURVE SMOOTH",
"206 866 LINE",
"69 866 LINE SMOOTH",
"32 866 OFFCURVE",
"13 852 OFFCURVE",
"13 823 CURVE SMOOTH",
"13 795 OFFCURVE",
"32 781 OFFCURVE",
"69 781 CURVE SMOOTH",
"121 781 LINE",
"121 449 LINE SMOOTH",
"121 274 OFFCURVE",
"165 120 OFFCURVE",
"230 62 CURVE SMOOTH",
"272 25 OFFCURVE",
"340 0 OFFCURVE",
"401 0 CURVE SMOOTH",
"440 0 OFFCURVE",
"489 18 OFFCURVE",
"522 45 CURVE SMOOTH",
"558 74 OFFCURVE",
"595 125 OFFCURVE",
"614 173 CURVE",
"627 139 OFFCURVE",
"654 84 OFFCURVE",
"693 48 CURVE SMOOTH",
"724 20 OFFCURVE",
"787 -5 OFFCURVE",
"860 -5 CURVE SMOOTH",
"945 -5 OFFCURVE",
"1027 68 OFFCURVE",
"1066 177 CURVE SMOOTH",
"1086 234 OFFCURVE",
"1100 347 OFFCURVE",
"1100 459 CURVE SMOOTH",
"1100 781 LINE",
"1152 781 LINE SMOOTH",
"1189 781 OFFCURVE",
"1208 795 OFFCURVE",
"1208 823 CURVE SMOOTH",
"1208 852 OFFCURVE",
"1189 866 OFFCURVE",
"1152 866 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1018 -112 LINE",
"1018 -162 LINE",
"921 -162 LINE SMOOTH",
"880 -162 OFFCURVE",
"864 -179 OFFCURVE",
"864 -204 CURVE SMOOTH",
"864 -228 OFFCURVE",
"880 -246 OFFCURVE",
"921 -246 CURVE SMOOTH",
"1103 -246 LINE",
"1093 -115 LINE"
);
},
{
closed = 1;
nodes = (
"1096 -246 LINE",
"1131 -245 OFFCURVE",
"1160 -254 OFFCURVE",
"1181 -272 CURVE SMOOTH",
"1194 -283 OFFCURVE",
"1200 -306 OFFCURVE",
"1200 -343 CURVE SMOOTH",
"1200 -392 OFFCURVE",
"1219 -406 OFFCURVE",
"1243 -406 CURVE SMOOTH",
"1266 -406 OFFCURVE",
"1286 -384 OFFCURVE",
"1286 -344 CURVE SMOOTH",
"1286 -288 OFFCURVE",
"1269 -244 OFFCURVE",
"1235 -213 CURVE",
"1201 -186 OFFCURVE",
"1155 -172 OFFCURVE",
"1096 -171 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2018-11-25 09:31:58 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"1044 134 LINE",
"1044 84 LINE",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"1129 0 LINE",
"1129 136 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"1129 91 LINE",
"1129 228 LINE SMOOTH",
"1129 269 OFFCURVE",
"1111 284 OFFCURVE",
"1087 284 CURVE SMOOTH",
"1062 284 OFFCURVE",
"1044 268 OFFCURVE",
"1044 228 CURVE SMOOTH",
"1044 89 LINE"
);
}
);
width = 1229;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2018-11-26 02:32:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"1044 134 LINE",
"1044 84 LINE",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"1129 0 LINE",
"1129 136 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"1129 91 LINE",
"1129 228 LINE SMOOTH",
"1129 269 OFFCURVE",
"1111 284 OFFCURVE",
"1087 284 CURVE SMOOTH",
"1062 284 OFFCURVE",
"1044 268 OFFCURVE",
"1044 228 CURVE SMOOTH",
"1044 89 LINE"
);
},
{
closed = 1;
nodes = (
"657 -5 OFFCURVE",
"656 24 OFFCURVE",
"654 29 CURVE",
"650 46 OFFCURVE",
"633 59 OFFCURVE",
"614 59 CURVE SMOOTH",
"595 59 OFFCURVE",
"577 46 OFFCURVE",
"574 29 CURVE SMOOTH",
"573 24 OFFCURVE",
"572 -5 OFFCURVE",
"572 -58 CURVE SMOOTH",
"572 -274 LINE SMOOTH",
"572 -326 OFFCURVE",
"573 -355 OFFCURVE",
"574 -361 CURVE SMOOTH",
"578 -377 OFFCURVE",
"595 -390 OFFCURVE",
"614 -390 CURVE SMOOTH",
"629 -390 OFFCURVE",
"641 -384 OFFCURVE",
"650 -371 CURVE",
"654 -365 OFFCURVE",
"656 -333 OFFCURVE",
"656 -274 CURVE SMOOTH",
"657 -58 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2018-11-26 08:46:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"977 655 OFFCURVE",
"942 632 OFFCURVE",
"942 607 CURVE SMOOTH",
"942 582 OFFCURVE",
"965 560 OFFCURVE",
"984 569 CURVE SMOOTH",
"1039 595 OFFCURVE",
"1065 520 OFFCURVE",
"1065 487 CURVE SMOOTH",
"1065 450 OFFCURVE",
"1050 406 OFFCURVE",
"1021 355 CURVE SMOOTH",
"998 313 OFFCURVE",
"969 265 OFFCURVE",
"900 191 CURVE SMOOTH",
"846 134 OFFCURVE",
"799 86 OFFCURVE",
"743 86 CURVE SMOOTH",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"751 1 LINE SMOOTH",
"809 1 OFFCURVE",
"831 9 OFFCURVE",
"916 86 CURVE SMOOTH",
"1025 185 OFFCURVE",
"1078 277 OFFCURVE",
"1107 332 CURVE SMOOTH",
"1135 386 OFFCURVE",
"1149 436 OFFCURVE",
"1149 482 CURVE SMOOTH",
"1149 582 OFFCURVE",
"1055 659 OFFCURVE",
"1002 656 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2018-11-26 03:02:35 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"859 674 OFFCURVE",
"770 570 OFFCURVE",
"738 443 CURVE SMOOTH",
"702 299 OFFCURVE",
"729 86 OFFCURVE",
"594 85 CURVE SMOOTH",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"662 0 LINE SMOOTH",
"787 0 OFFCURVE",
"769 212 OFFCURVE",
"809 397 CURVE SMOOTH",
"842 550 OFFCURVE",
"901 604 OFFCURVE",
"974 582 CURVE SMOOTH",
"1023 567 OFFCURVE",
"1029 562 OFFCURVE",
"1018 529 CURVE SMOOTH",
"1002 481 OFFCURVE",
"1051 451 OFFCURVE",
"1079 451 CURVE SMOOTH",
"1107 451 OFFCURVE",
"1123 474 OFFCURVE",
"1126 508 CURVE SMOOTH",
"1133 586 OFFCURVE",
"1066 623 OFFCURVE",
"976 645 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2018-11-26 03:04:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"1044 84 LINE",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"1129 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"991 0 LINE",
"1128 0 LINE SMOOTH",
"1169 0 OFFCURVE",
"1184 18 OFFCURVE",
"1184 42 CURVE SMOOTH",
"1184 67 OFFCURVE",
"1168 85 OFFCURVE",
"1128 85 CURVE SMOOTH",
"989 85 LINE"
);
},
{
closed = 1;
nodes = (
"1184.42 275.666 OFFCURVE",
"1108.922 353.14 OFFCURVE",
"1015.808 353.14 CURVE SMOOTH",
"923.952 353.14 OFFCURVE",
"848.454 275.666 OFFCURVE",
"848.454 184.446 CURVE SMOOTH",
"848.454 93.226 OFFCURVE",
"923.952 17.002 OFFCURVE",
"1015.808 17.002 CURVE SMOOTH",
"1108.922 17.002 OFFCURVE",
"1184.42 93.226 OFFCURVE",
"1184.42 184.446 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1129.055 123.216 OFFCURVE",
"1078.723 73.233 OFFCURVE",
"1015.808 73.233 CURVE SMOOTH",
"954.151 73.233 OFFCURVE",
"903.819 124.466 OFFCURVE",
"903.819 184.446 CURVE SMOOTH",
"903.819 245.676 OFFCURVE",
"952.893 295.659 OFFCURVE",
"1015.808 295.659 CURVE SMOOTH",
"1078.723 295.659 OFFCURVE",
"1129.055 245.676 OFFCURVE",
"1129.055 184.446 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2018-11-26 03:04:32 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"878 858 OFFCURVE",
"770 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"768 -33 OFFCURVE",
"889 3 OFFCURVE",
"998 74 CURVE SMOOTH",
"1065 118 OFFCURVE",
"1099 154 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1099 206 OFFCURVE",
"1082 223 OFFCURVE",
"1059 223 CURVE SMOOTH",
"1048 223 OFFCURVE",
"1036 216 OFFCURVE",
"1022 203 CURVE SMOOTH",
"913 96 OFFCURVE",
"770 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"957 707 OFFCURVE",
"965 612 CURVE SMOOTH",
"968 576 OFFCURVE",
"984 562 OFFCURVE",
"1007 562 CURVE SMOOTH",
"1032 562 OFFCURVE",
"1049 578 OFFCURVE",
"1050 619 CURVE SMOOTH",
"1050 809 LINE SMOOTH",
"1050 850 OFFCURVE",
"1032 866 OFFCURVE",
"1007 866 CURVE SMOOTH",
"983 866 OFFCURVE",
"965 850 OFFCURVE",
"965 809 CURVE SMOOTH",
"965 781 LINE"
);
}
);
width = 1229;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2018-11-26 04:40:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"768 -33 OFFCURVE",
"889 3 OFFCURVE",
"998 74 CURVE SMOOTH",
"1065 118 OFFCURVE",
"1099 154 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1099 206 OFFCURVE",
"1082 223 OFFCURVE",
"1059 223 CURVE SMOOTH",
"1048 223 OFFCURVE",
"1036 216 OFFCURVE",
"1022 203 CURVE SMOOTH",
"913 96 OFFCURVE",
"770 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2018-11-26 03:07:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"859 674 OFFCURVE",
"770 570 OFFCURVE",
"738 443 CURVE SMOOTH",
"702 299 OFFCURVE",
"729 86 OFFCURVE",
"594 85 CURVE SMOOTH",
"354 84 LINE",
"354 779 LINE",
"371 775 OFFCURVE",
"386 767 OFFCURVE",
"398 757 CURVE SMOOTH",
"411 746 OFFCURVE",
"417 723 OFFCURVE",
"417 686 CURVE SMOOTH",
"417 637 OFFCURVE",
"436 623 OFFCURVE",
"460 623 CURVE SMOOTH",
"483 623 OFFCURVE",
"503 645 OFFCURVE",
"503 685 CURVE SMOOTH",
"503 741 OFFCURVE",
"486 785 OFFCURVE",
"452 816 CURVE",
"426 836 OFFCURVE",
"394 844 OFFCURVE",
"354 851 CURVE SMOOTH",
"343 853 OFFCURVE",
"328 854 OFFCURVE",
"320 854 CURVE SMOOTH",
"232 856 LINE",
"138 867 LINE SMOOTH",
"111 870 OFFCURVE",
"95 862 OFFCURVE",
"87 848 CURVE",
"82 841 OFFCURVE",
"80 833 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"662 0 LINE SMOOTH",
"787 0 OFFCURVE",
"769 212 OFFCURVE",
"809 397 CURVE SMOOTH",
"842 550 OFFCURVE",
"901 604 OFFCURVE",
"974 582 CURVE SMOOTH",
"1023 567 OFFCURVE",
"1029 562 OFFCURVE",
"1018 529 CURVE SMOOTH",
"1002 481 OFFCURVE",
"1051 451 OFFCURVE",
"1079 451 CURVE SMOOTH",
"1107 451 OFFCURVE",
"1123 474 OFFCURVE",
"1126 508 CURVE SMOOTH",
"1133 586 OFFCURVE",
"1066 623 OFFCURVE",
"976 645 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2018-11-25 07:40:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
}
);
width = 1229;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2018-11-26 03:08:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"956 198 LINE",
"956 408 LINE",
"1015 409 OFFCURVE",
"1061 423 OFFCURVE",
"1095 450 CURVE",
"1129 481 OFFCURVE",
"1146 525 OFFCURVE",
"1146 581 CURVE SMOOTH",
"1146 621 OFFCURVE",
"1126 643 OFFCURVE",
"1103 643 CURVE SMOOTH",
"1079 643 OFFCURVE",
"1060 629 OFFCURVE",
"1060 580 CURVE SMOOTH",
"1060 543 OFFCURVE",
"1054 520 OFFCURVE",
"1041 509 CURVE SMOOTH",
"1020 491 OFFCURVE",
"991 482 OFFCURVE",
"956 483 CURVE",
"956 615 LINE",
"905 615 LINE"
);
}
);
width = 1229;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2018-11-26 08:55:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"931 -2 LINE",
"931 407 LINE SMOOTH",
"931 531 OFFCURVE",
"920 625 OFFCURVE",
"897 689 CURVE SMOOTH",
"851 817 OFFCURVE",
"733 899 OFFCURVE",
"568 899 CURVE SMOOTH",
"482 899 OFFCURVE",
"412 879 OFFCURVE",
"358 837 CURVE SMOOTH",
"250 753 OFFCURVE",
"212 644 OFFCURVE",
"212 417 CURVE SMOOTH",
"212 0 LINE",
"297 0 LINE",
"297 407 LINE SMOOTH",
"297 506 OFFCURVE",
"305 581 OFFCURVE",
"321 634 CURVE SMOOTH",
"353 740 OFFCURVE",
"450 815 OFFCURVE",
"571 815 CURVE SMOOTH",
"634 815 OFFCURVE",
"687 799 OFFCURVE",
"730 767 CURVE SMOOTH",
"817 703 OFFCURVE",
"847 612 OFFCURVE",
"847 407 CURVE SMOOTH",
"847 0 LINE"
);
},
{
closed = 1;
nodes = (
"595 833 LINE",
"595 1255 LINE",
"398 1255 LINE SMOOTH",
"358 1255 OFFCURVE",
"342 1237 OFFCURVE",
"342 1213 CURVE SMOOTH",
"342 1188 OFFCURVE",
"358 1170 OFFCURVE",
"398 1170 CURVE SMOOTH",
"511 1170 LINE",
"511 814 LINE"
);
},
{
closed = 1;
nodes = (
"847 280 LINE",
"847 -1 LINE",
"931 -1 LINE",
"931 282 LINE"
);
},
{
closed = 1;
nodes = (
"1114 233 OFFCURVE",
"1095 219 OFFCURVE",
"1095 170 CURVE SMOOTH",
"1095 133 OFFCURVE",
"1089 110 OFFCURVE",
"1076 99 CURVE SMOOTH",
"1055 81 OFFCURVE",
"1026 72 OFFCURVE",
"991 73 CURVE SMOOTH",
"847 73 LINE",
"847 -3 LINE",
"991 -3 LINE",
"1050 -1 OFFCURVE",
"1096 13 OFFCURVE",
"1130 40 CURVE",
"1164 71 OFFCURVE",
"1181 115 OFFCURVE",
"1181 171 CURVE SMOOTH",
"1181 211 OFFCURVE",
"1161 233 OFFCURVE",
"1138 233 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"271 0 LINE",
"365 0 LINE SMOOTH",
"406 0 OFFCURVE",
"421 17 OFFCURVE",
"421 42 CURVE SMOOTH",
"421 66 OFFCURVE",
"406 84 OFFCURVE",
"365 84 CURVE SMOOTH",
"255 84 LINE",
"265 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2018-11-26 08:51:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 -386 LINE SMOOTH",
"1123 -386 OFFCURVE",
"1142 -372 OFFCURVE",
"1142 -343 CURVE SMOOTH",
"1142 -315 OFFCURVE",
"1123 -301 OFFCURVE",
"1086 -301 CURVE SMOOTH",
"974 -301 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -386 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"954 -302 LINE",
"844 -302 LINE SMOOTH",
"803 -302 OFFCURVE",
"788 -320 OFFCURVE",
"788 -344 CURVE SMOOTH",
"788 -369 OFFCURVE",
"803 -386 OFFCURVE",
"844 -386 CURVE SMOOTH",
"938 -386 LINE",
"944 -386 LINE"
);
},
{
closed = 1;
nodes = (
"288 0 LINE",
"382 0 LINE SMOOTH",
"423 0 OFFCURVE",
"438 17 OFFCURVE",
"438 42 CURVE SMOOTH",
"438 66 OFFCURVE",
"423 84 OFFCURVE",
"382 84 CURVE SMOOTH",
"272 84 LINE",
"282 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2018-11-26 03:11:20 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 64 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"1172 203 OFFCURVE",
"1112 265 OFFCURVE",
"1038 265 CURVE SMOOTH",
"965 265 OFFCURVE",
"905 203 OFFCURVE",
"905 130 CURVE SMOOTH",
"905 57 OFFCURVE",
"965 -4 OFFCURVE",
"1038 -4 CURVE SMOOTH",
"1112 -4 OFFCURVE",
"1172 57 OFFCURVE",
"1172 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 81 OFFCURVE",
"1088 41 OFFCURVE",
"1038 41 CURVE SMOOTH",
"989 41 OFFCURVE",
"949 82 OFFCURVE",
"949 130 CURVE SMOOTH",
"949 179 OFFCURVE",
"988 219 OFFCURVE",
"1038 219 CURVE SMOOTH",
"1088 219 OFFCURVE",
"1128 179 OFFCURVE",
"1128 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 156 LINE",
"890 46 LINE SMOOTH",
"890 5 OFFCURVE",
"908 -10 OFFCURVE",
"932 -10 CURVE SMOOTH",
"957 -10 OFFCURVE",
"974 5 OFFCURVE",
"974 46 CURVE SMOOTH",
"974 140 LINE",
"974 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2018-11-26 03:15:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"584 827 LINE",
"367 1240 LINE SMOOTH",
"364 1246 OFFCURVE",
"357 1249 OFFCURVE",
"351 1249 CURVE SMOOTH",
"257 1250 LINE SMOOTH",
"221 1250 OFFCURVE",
"201 1237 OFFCURVE",
"201 1207 CURVE SMOOTH",
"201 1183 OFFCURVE",
"217 1165 OFFCURVE",
"257 1165 CURVE SMOOTH",
"314 1165 LINE",
"496 820 LINE"
);
}
);
width = 1229;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2018-11-26 08:47:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1046 0 LINE SMOOTH",
"1083 0 OFFCURVE",
"1102 14 OFFCURVE",
"1102 43 CURVE SMOOTH",
"1102 71 OFFCURVE",
"1083 85 OFFCURVE",
"1046 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 -301 LINE",
"183 -301 LINE SMOOTH",
"146 -301 OFFCURVE",
"127 -315 OFFCURVE",
"127 -343 CURVE SMOOTH",
"127 -372 OFFCURVE",
"146 -386 OFFCURVE",
"183 -386 CURVE SMOOTH",
"340 -386 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"933 85 LINE",
"823 85 LINE SMOOTH",
"782 85 OFFCURVE",
"767 67 OFFCURVE",
"767 43 CURVE SMOOTH",
"767 18 OFFCURVE",
"782 1 OFFCURVE",
"823 1 CURVE SMOOTH",
"917 1 LINE",
"923 1 LINE"
);
},
{
closed = 1;
nodes = (
"340 -386 LINE",
"434 -386 LINE SMOOTH",
"475 -386 OFFCURVE",
"490 -369 OFFCURVE",
"490 -344 CURVE SMOOTH",
"490 -320 OFFCURVE",
"475 -302 OFFCURVE",
"434 -302 CURVE SMOOTH",
"324 -302 LINE",
"334 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2018-11-26 08:48:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"974 -180 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"193 85 LINE SMOOTH",
"156 85 OFFCURVE",
"137 71 OFFCURVE",
"137 43 CURVE SMOOTH",
"137 14 OFFCURVE",
"156 0 OFFCURVE",
"193 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -178 LINE"
);
},
{
closed = 1;
nodes = (
"899 -92 LINE",
"899 -142 LINE",
"795 -142 LINE SMOOTH",
"754 -142 OFFCURVE",
"738 -159 OFFCURVE",
"738 -184 CURVE SMOOTH",
"738 -208 OFFCURVE",
"754 -226 OFFCURVE",
"795 -226 CURVE",
"977 -226 LINE",
"971 -95 LINE"
);
},
{
closed = 1;
nodes = (
"970 -226 LINE",
"1005 -225 OFFCURVE",
"1034 -234 OFFCURVE",
"1055 -252 CURVE SMOOTH",
"1068 -263 OFFCURVE",
"1074 -286 OFFCURVE",
"1074 -323 CURVE SMOOTH",
"1074 -372 OFFCURVE",
"1093 -386 OFFCURVE",
"1117 -386 CURVE SMOOTH",
"1140 -386 OFFCURVE",
"1160 -364 OFFCURVE",
"1160 -324 CURVE SMOOTH",
"1160 -268 OFFCURVE",
"1143 -224 OFFCURVE",
"1109 -193 CURVE",
"1075 -166 OFFCURVE",
"1023 -152 OFFCURVE",
"964 -151 CURVE"
);
},
{
closed = 1;
nodes = (
"317 0 LINE",
"411 0 LINE SMOOTH",
"452 0 OFFCURVE",
"467 17 OFFCURVE",
"467 42 CURVE SMOOTH",
"467 66 OFFCURVE",
"452 84 OFFCURVE",
"411 84 CURVE SMOOTH",
"301 84 LINE",
"311 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2018-11-26 03:17:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"969 85 LINE",
"969 407 LINE SMOOTH",
"969 531 OFFCURVE",
"958 625 OFFCURVE",
"935 689 CURVE SMOOTH",
"892 809 OFFCURVE",
"785 889 OFFCURVE",
"636 898 CURVE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"549 1170 LINE",
"549 896 LINE",
"489 889 OFFCURVE",
"438 869 OFFCURVE",
"396 837 CURVE SMOOTH",
"288 753 OFFCURVE",
"250 644 OFFCURVE",
"250 417 CURVE SMOOTH",
"250 85 LINE",
"138 85 LINE SMOOTH",
"101 85 OFFCURVE",
"82 71 OFFCURVE",
"82 43 CURVE SMOOTH",
"82 14 OFFCURVE",
"101 0 OFFCURVE",
"138 0 CURVE SMOOTH",
"335 0 LINE",
"335 407 LINE SMOOTH",
"335 506 OFFCURVE",
"343 581 OFFCURVE",
"359 634 CURVE SMOOTH",
"391 740 OFFCURVE",
"488 815 OFFCURVE",
"609 815 CURVE SMOOTH",
"672 815 OFFCURVE",
"725 799 OFFCURVE",
"768 767 CURVE SMOOTH",
"855 703 OFFCURVE",
"885 612 OFFCURVE",
"885 407 CURVE SMOOTH",
"885 0 LINE",
"1081 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1137 14 OFFCURVE",
"1137 43 CURVE SMOOTH",
"1137 71 OFFCURVE",
"1118 85 OFFCURVE",
"1081 85 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2018-11-26 03:17:40 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1148 LINE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"559 1170 LINE",
"559 1148 LINE"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"956 198 LINE",
"956 408 LINE",
"1015 409 OFFCURVE",
"1061 423 OFFCURVE",
"1095 450 CURVE",
"1129 481 OFFCURVE",
"1146 525 OFFCURVE",
"1146 581 CURVE SMOOTH",
"1146 621 OFFCURVE",
"1126 643 OFFCURVE",
"1103 643 CURVE SMOOTH",
"1079 643 OFFCURVE",
"1060 629 OFFCURVE",
"1060 580 CURVE SMOOTH",
"1060 543 OFFCURVE",
"1054 520 OFFCURVE",
"1041 509 CURVE SMOOTH",
"1020 491 OFFCURVE",
"991 482 OFFCURVE",
"956 483 CURVE",
"956 615 LINE",
"905 615 LINE"
);
}
);
width = 1229;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2018-11-26 08:55:53 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"596 1148 LINE",
"596 1170 LINE",
"1039 1170 LINE SMOOTH",
"1079 1170 OFFCURVE",
"1095 1188 OFFCURVE",
"1095 1213 CURVE SMOOTH",
"1095 1237 OFFCURVE",
"1079 1255 OFFCURVE",
"1039 1255 CURVE SMOOTH",
"96 1255 LINE SMOOTH",
"56 1255 OFFCURVE",
"40 1237 OFFCURVE",
"40 1213 CURVE SMOOTH",
"40 1188 OFFCURVE",
"56 1170 OFFCURVE",
"96 1170 CURVE SMOOTH",
"519 1170 LINE",
"519 1148 LINE"
);
},
{
closed = 1;
nodes = (
"934 -2 LINE",
"934 407 LINE SMOOTH",
"934 531 OFFCURVE",
"923 625 OFFCURVE",
"900 689 CURVE SMOOTH",
"854 817 OFFCURVE",
"736 899 OFFCURVE",
"571 899 CURVE SMOOTH",
"485 899 OFFCURVE",
"415 879 OFFCURVE",
"361 837 CURVE SMOOTH",
"253 753 OFFCURVE",
"215 644 OFFCURVE",
"215 417 CURVE SMOOTH",
"215 0 LINE",
"300 0 LINE",
"300 407 LINE SMOOTH",
"300 506 OFFCURVE",
"308 581 OFFCURVE",
"324 634 CURVE SMOOTH",
"356 740 OFFCURVE",
"453 815 OFFCURVE",
"574 815 CURVE SMOOTH",
"637 815 OFFCURVE",
"690 799 OFFCURVE",
"733 767 CURVE SMOOTH",
"820 703 OFFCURVE",
"850 612 OFFCURVE",
"850 407 CURVE SMOOTH",
"850 0 LINE"
);
},
{
closed = 1;
nodes = (
"598 833 LINE",
"598 1255 LINE",
"401 1255 LINE SMOOTH",
"361 1255 OFFCURVE",
"345 1237 OFFCURVE",
"345 1213 CURVE SMOOTH",
"345 1188 OFFCURVE",
"361 1170 OFFCURVE",
"401 1170 CURVE SMOOTH",
"514 1170 LINE",
"514 814 LINE"
);
},
{
closed = 1;
nodes = (
"850 280 LINE",
"850 -1 LINE",
"934 -1 LINE",
"934 282 LINE"
);
},
{
closed = 1;
nodes = (
"1117 233 OFFCURVE",
"1098 219 OFFCURVE",
"1098 170 CURVE SMOOTH",
"1098 133 OFFCURVE",
"1092 110 OFFCURVE",
"1079 99 CURVE SMOOTH",
"1058 81 OFFCURVE",
"1029 72 OFFCURVE",
"994 73 CURVE SMOOTH",
"850 73 LINE",
"850 -3 LINE",
"994 -3 LINE",
"1053 -1 OFFCURVE",
"1099 13 OFFCURVE",
"1133 40 CURVE",
"1167 71 OFFCURVE",
"1184 115 OFFCURVE",
"1184 171 CURVE SMOOTH",
"1184 211 OFFCURVE",
"1164 233 OFFCURVE",
"1141 233 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"284 0 LINE",
"378 0 LINE SMOOTH",
"419 0 OFFCURVE",
"434 17 OFFCURVE",
"434 42 CURVE SMOOTH",
"434 66 OFFCURVE",
"419 84 OFFCURVE",
"378 84 CURVE SMOOTH",
"268 84 LINE",
"278 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2018-11-26 08:54:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1148 LINE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"559 1170 LINE",
"559 1148 LINE"
);
},
{
closed = 1;
nodes = (
"1086 -386 LINE SMOOTH",
"1123 -386 OFFCURVE",
"1142 -372 OFFCURVE",
"1142 -343 CURVE SMOOTH",
"1142 -315 OFFCURVE",
"1123 -301 OFFCURVE",
"1086 -301 CURVE SMOOTH",
"974 -301 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -386 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"934 -302 LINE",
"824 -302 LINE SMOOTH",
"783 -302 OFFCURVE",
"768 -320 OFFCURVE",
"768 -344 CURVE SMOOTH",
"768 -369 OFFCURVE",
"783 -386 OFFCURVE",
"824 -386 CURVE SMOOTH",
"918 -386 LINE",
"924 -386 LINE"
);
},
{
closed = 1;
nodes = (
"270 0 LINE",
"364 0 LINE SMOOTH",
"405 0 OFFCURVE",
"420 17 OFFCURVE",
"420 42 CURVE SMOOTH",
"420 66 OFFCURVE",
"405 84 OFFCURVE",
"364 84 CURVE SMOOTH",
"254 84 LINE",
"264 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2018-11-26 03:18:34 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1148 LINE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"559 1170 LINE",
"559 1148 LINE"
);
},
{
closed = 1;
nodes = (
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 64 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"1172 203 OFFCURVE",
"1112 265 OFFCURVE",
"1038 265 CURVE SMOOTH",
"965 265 OFFCURVE",
"905 203 OFFCURVE",
"905 130 CURVE SMOOTH",
"905 57 OFFCURVE",
"965 -4 OFFCURVE",
"1038 -4 CURVE SMOOTH",
"1112 -4 OFFCURVE",
"1172 57 OFFCURVE",
"1172 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 81 OFFCURVE",
"1088 41 OFFCURVE",
"1038 41 CURVE SMOOTH",
"989 41 OFFCURVE",
"949 82 OFFCURVE",
"949 130 CURVE SMOOTH",
"949 179 OFFCURVE",
"988 219 OFFCURVE",
"1038 219 CURVE SMOOTH",
"1088 219 OFFCURVE",
"1128 179 OFFCURVE",
"1128 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 156 LINE",
"890 46 LINE SMOOTH",
"890 5 OFFCURVE",
"908 -10 OFFCURVE",
"932 -10 CURVE SMOOTH",
"957 -10 OFFCURVE",
"974 5 OFFCURVE",
"974 46 CURVE SMOOTH",
"974 140 LINE",
"974 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2018-11-26 03:19:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1166 LINE",
"1079 1166 LINE SMOOTH",
"1119 1166 OFFCURVE",
"1135 1184 OFFCURVE",
"1135 1209 CURVE SMOOTH",
"1135 1233 OFFCURVE",
"1119 1251 OFFCURVE",
"1079 1251 CURVE SMOOTH",
"136 1251 LINE SMOOTH",
"96 1251 OFFCURVE",
"80 1233 OFFCURVE",
"80 1209 CURVE SMOOTH",
"80 1184 OFFCURVE",
"96 1166 OFFCURVE",
"136 1166 CURVE SMOOTH",
"559 1166 LINE"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"584 827 LINE",
"367 1240 LINE SMOOTH",
"364 1246 OFFCURVE",
"357 1249 OFFCURVE",
"351 1249 CURVE SMOOTH",
"257 1250 LINE SMOOTH",
"221 1250 OFFCURVE",
"201 1237 OFFCURVE",
"201 1207 CURVE SMOOTH",
"201 1183 OFFCURVE",
"217 1165 OFFCURVE",
"257 1165 CURVE SMOOTH",
"314 1165 LINE",
"496 820 LINE"
);
}
);
width = 1229;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2018-11-26 08:54:41 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1148 LINE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"559 1170 LINE",
"559 1148 LINE"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 -301 LINE",
"143 -301 LINE SMOOTH",
"106 -301 OFFCURVE",
"87 -315 OFFCURVE",
"87 -343 CURVE SMOOTH",
"87 -372 OFFCURVE",
"106 -386 OFFCURVE",
"143 -386 CURVE SMOOTH",
"340 -386 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"920 85 LINE",
"810 85 LINE SMOOTH",
"769 85 OFFCURVE",
"754 67 OFFCURVE",
"754 43 CURVE SMOOTH",
"754 18 OFFCURVE",
"769 1 OFFCURVE",
"810 1 CURVE SMOOTH",
"904 1 LINE",
"910 1 LINE"
);
},
{
closed = 1;
nodes = (
"273 -386 LINE",
"367 -386 LINE SMOOTH",
"408 -386 OFFCURVE",
"423 -369 OFFCURVE",
"423 -344 CURVE SMOOTH",
"423 -320 OFFCURVE",
"408 -302 OFFCURVE",
"367 -302 CURVE SMOOTH",
"257 -302 LINE",
"267 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2018-11-26 03:19:36 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"636 1148 LINE",
"636 1170 LINE",
"1079 1170 LINE SMOOTH",
"1119 1170 OFFCURVE",
"1135 1188 OFFCURVE",
"1135 1213 CURVE SMOOTH",
"1135 1237 OFFCURVE",
"1119 1255 OFFCURVE",
"1079 1255 CURVE SMOOTH",
"136 1255 LINE SMOOTH",
"96 1255 OFFCURVE",
"80 1237 OFFCURVE",
"80 1213 CURVE SMOOTH",
"80 1188 OFFCURVE",
"96 1170 OFFCURVE",
"136 1170 CURVE SMOOTH",
"559 1170 LINE",
"559 1148 LINE"
);
},
{
closed = 1;
nodes = (
"638 833 LINE",
"638 1255 LINE",
"441 1255 LINE SMOOTH",
"401 1255 OFFCURVE",
"385 1237 OFFCURVE",
"385 1213 CURVE SMOOTH",
"385 1188 OFFCURVE",
"401 1170 OFFCURVE",
"441 1170 CURVE SMOOTH",
"554 1170 LINE",
"554 814 LINE"
);
},
{
closed = 1;
nodes = (
"974 -180 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -178 LINE"
);
},
{
closed = 1;
nodes = (
"899 -92 LINE",
"899 -142 LINE",
"795 -142 LINE SMOOTH",
"754 -142 OFFCURVE",
"738 -159 OFFCURVE",
"738 -184 CURVE SMOOTH",
"738 -208 OFFCURVE",
"754 -226 OFFCURVE",
"795 -226 CURVE SMOOTH",
"977 -226 LINE",
"971 -95 LINE"
);
},
{
closed = 1;
nodes = (
"970 -226 LINE",
"1005 -225 OFFCURVE",
"1034 -234 OFFCURVE",
"1055 -252 CURVE SMOOTH",
"1068 -263 OFFCURVE",
"1074 -286 OFFCURVE",
"1074 -323 CURVE SMOOTH",
"1074 -372 OFFCURVE",
"1093 -386 OFFCURVE",
"1117 -386 CURVE SMOOTH",
"1140 -386 OFFCURVE",
"1160 -364 OFFCURVE",
"1160 -324 CURVE SMOOTH",
"1160 -268 OFFCURVE",
"1143 -224 OFFCURVE",
"1109 -193 CURVE",
"1075 -166 OFFCURVE",
"1023 -152 OFFCURVE",
"964 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2018-11-25 09:49:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"393 -303 LINE SMOOTH",
"346 -303 OFFCURVE",
"323 -317 OFFCURVE",
"323 -345 CURVE SMOOTH",
"323 -372 OFFCURVE",
"346 -386 OFFCURVE",
"393 -386 CURVE SMOOTH",
"837 -386 LINE SMOOTH",
"883 -386 OFFCURVE",
"906 -372 OFFCURVE",
"906 -345 CURVE SMOOTH",
"906 -317 OFFCURVE",
"883 -303 OFFCURVE",
"837 -303 CURVE SMOOTH",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
}
);
width = 1229;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2018-11-26 03:20:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"393 -303 LINE SMOOTH",
"346 -303 OFFCURVE",
"323 -317 OFFCURVE",
"323 -345 CURVE SMOOTH",
"323 -372 OFFCURVE",
"346 -386 OFFCURVE",
"393 -386 CURVE SMOOTH",
"837 -386 LINE SMOOTH",
"883 -386 OFFCURVE",
"906 -372 OFFCURVE",
"906 -345 CURVE SMOOTH",
"906 -317 OFFCURVE",
"883 -303 OFFCURVE",
"837 -303 CURVE SMOOTH",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"657 -250 LINE",
"657 -118 LINE",
"692 -117 OFFCURVE",
"721 -126 OFFCURVE",
"742 -144 CURVE SMOOTH",
"755 -155 OFFCURVE",
"761 -178 OFFCURVE",
"761 -215 CURVE SMOOTH",
"761 -264 OFFCURVE",
"780 -278 OFFCURVE",
"804 -278 CURVE SMOOTH",
"827 -278 OFFCURVE",
"847 -256 OFFCURVE",
"847 -216 CURVE SMOOTH",
"847 -160 OFFCURVE",
"830 -116 OFFCURVE",
"796 -85 CURVE",
"762 -58 OFFCURVE",
"716 -44 OFFCURVE",
"657 -43 CURVE",
"606 -250 LINE"
);
}
);
width = 1229;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2018-11-26 03:22:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"938 -150 OFFCURVE",
"919 -164 OFFCURVE",
"919 -213 CURVE SMOOTH",
"919 -250 OFFCURVE",
"913 -273 OFFCURVE",
"900 -284 CURVE SMOOTH",
"885 -297 OFFCURVE",
"868 -303 OFFCURVE",
"837 -303 CURVE",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE",
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"452 1169 LINE",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"393 -303 LINE SMOOTH",
"346 -303 OFFCURVE",
"323 -317 OFFCURVE",
"323 -345 CURVE SMOOTH",
"323 -372 OFFCURVE",
"346 -386 OFFCURVE",
"393 -386 CURVE SMOOTH",
"835 -386 LINE",
"877 -386 OFFCURVE",
"917 -370 OFFCURVE",
"954 -343 CURVE SMOOTH",
"991 -315 OFFCURVE",
"1005 -268 OFFCURVE",
"1005 -212 CURVE SMOOTH",
"1005 -172 OFFCURVE",
"985 -150 OFFCURVE",
"962 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2018-11-26 03:25:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"583 -53 LINE",
"657 -13 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"576 781 LINE",
"576 -59 LINE SMOOTH",
"576 -196 OFFCURVE",
"480 -302 OFFCURVE",
"337 -302 CURVE SMOOTH",
"296 -302 LINE",
"290 -386 LINE",
"339 -386 LINE SMOOTH",
"395 -386 OFFCURVE",
"443 -376 OFFCURVE",
"484 -355 CURVE SMOOTH",
"601 -295 OFFCURVE",
"660 -202 OFFCURVE",
"660 -59 CURVE SMOOTH",
"660 866 LINE"
);
},
{
closed = 1;
nodes = (
"299 -302 LINE",
"194 -302 LINE SMOOTH",
"154 -302 OFFCURVE",
"138 -320 OFFCURVE",
"138 -345 CURVE SMOOTH",
"138 -370 OFFCURVE",
"154 -387 OFFCURVE",
"194 -387 CURVE SMOOTH",
"299 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2018-11-26 03:26:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"851 -185 OFFCURVE",
"791 -123 OFFCURVE",
"717 -123 CURVE SMOOTH",
"644 -123 OFFCURVE",
"584 -185 OFFCURVE",
"584 -258 CURVE SMOOTH",
"584 -331 OFFCURVE",
"644 -392 OFFCURVE",
"717 -392 CURVE SMOOTH",
"791 -392 OFFCURVE",
"851 -331 OFFCURVE",
"851 -258 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"807 -307 OFFCURVE",
"767 -347 OFFCURVE",
"717 -347 CURVE SMOOTH",
"668 -347 OFFCURVE",
"628 -306 OFFCURVE",
"628 -258 CURVE SMOOTH",
"628 -209 OFFCURVE",
"667 -169 OFFCURVE",
"717 -169 CURVE SMOOTH",
"767 -169 OFFCURVE",
"807 -209 OFFCURVE",
"807 -258 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"573 -221 LINE",
"573 -331 LINE SMOOTH",
"573 -372 OFFCURVE",
"591 -387 OFFCURVE",
"615 -387 CURVE SMOOTH",
"640 -387 OFFCURVE",
"657 -372 OFFCURVE",
"657 -331 CURVE SMOOTH",
"657 -237 LINE",
"657 -231 LINE"
);
}
);
width = 1229;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2018-11-26 03:28:02 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"573 947 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"393 -303 LINE SMOOTH",
"346 -303 OFFCURVE",
"323 -317 OFFCURVE",
"323 -345 CURVE SMOOTH",
"323 -372 OFFCURVE",
"346 -386 OFFCURVE",
"393 -386 CURVE SMOOTH",
"837 -386 LINE SMOOTH",
"883 -386 OFFCURVE",
"906 -372 OFFCURVE",
"906 -345 CURVE SMOOTH",
"906 -317 OFFCURVE",
"883 -303 OFFCURVE",
"837 -303 CURVE SMOOTH",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE",
"657 956 LINE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"516 1255 LINE",
"319 1255 LINE SMOOTH",
"279 1255 OFFCURVE",
"263 1237 OFFCURVE",
"263 1213 CURVE SMOOTH",
"263 1188 OFFCURVE",
"279 1170 OFFCURVE",
"319 1170 CURVE SMOOTH",
"432 1170 LINE",
"433 1024 LINE SMOOTH",
"433 1013 OFFCURVE",
"442 1004 OFFCURVE",
"453 1004 CURVE SMOOTH",
"572 1004 LINE",
"572 475 LINE",
"656 488 LINE",
"656 1048 LINE SMOOTH",
"656 1059 OFFCURVE",
"647 1068 OFFCURVE",
"636 1068 CURVE SMOOTH",
"516 1068 LINE"
);
}
);
width = 1229;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2018-11-26 03:28:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -303 LINE",
"393 -303 LINE SMOOTH",
"346 -303 OFFCURVE",
"323 -317 OFFCURVE",
"323 -345 CURVE SMOOTH",
"323 -372 OFFCURVE",
"346 -386 OFFCURVE",
"393 -386 CURVE SMOOTH",
"837 -386 LINE SMOOTH",
"883 -386 OFFCURVE",
"906 -372 OFFCURVE",
"906 -345 CURVE SMOOTH",
"906 -317 OFFCURVE",
"883 -303 OFFCURVE",
"837 -303 CURVE SMOOTH",
"657 -303 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"871 1200 OFFCURVE",
"811 1262 OFFCURVE",
"737 1262 CURVE SMOOTH",
"664 1262 OFFCURVE",
"604 1200 OFFCURVE",
"604 1127 CURVE SMOOTH",
"604 1054 OFFCURVE",
"664 993 OFFCURVE",
"737 993 CURVE SMOOTH",
"811 993 OFFCURVE",
"871 1054 OFFCURVE",
"871 1127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"827 1078 OFFCURVE",
"787 1038 OFFCURVE",
"737 1038 CURVE SMOOTH",
"688 1038 OFFCURVE",
"648 1079 OFFCURVE",
"648 1127 CURVE SMOOTH",
"648 1176 OFFCURVE",
"687 1216 OFFCURVE",
"737 1216 CURVE SMOOTH",
"787 1216 OFFCURVE",
"827 1176 OFFCURVE",
"827 1127 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2018-11-26 03:30:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"581 -92 LINE",
"581 -142 LINE",
"477 -142 LINE SMOOTH",
"436 -142 OFFCURVE",
"420 -159 OFFCURVE",
"420 -184 CURVE SMOOTH",
"420 -208 OFFCURVE",
"436 -226 OFFCURVE",
"477 -226 CURVE SMOOTH",
"659 -226 LINE",
"656 -95 LINE"
);
},
{
closed = 1;
nodes = (
"652 -226 LINE",
"687 -225 OFFCURVE",
"716 -234 OFFCURVE",
"737 -252 CURVE SMOOTH",
"750 -263 OFFCURVE",
"756 -286 OFFCURVE",
"756 -323 CURVE SMOOTH",
"756 -372 OFFCURVE",
"775 -386 OFFCURVE",
"799 -386 CURVE SMOOTH",
"822 -386 OFFCURVE",
"842 -364 OFFCURVE",
"842 -324 CURVE SMOOTH",
"842 -268 OFFCURVE",
"825 -224 OFFCURVE",
"791 -193 CURVE",
"757 -166 OFFCURVE",
"711 -152 OFFCURVE",
"652 -151 CURVE"
);
},
{
closed = 1;
nodes = (
"657 1161 LINE",
"656 1251 LINE",
"446 1251 LINE SMOOTH",
"399 1251 OFFCURVE",
"376 1232 OFFCURVE",
"376 1205 CURVE SMOOTH",
"376 1176 OFFCURVE",
"392 1169 OFFCURVE",
"423 1169 CURVE SMOOTH",
"427 1169 OFFCURVE",
"437 1169 OFFCURVE",
"452 1169 CURVE SMOOTH",
"573 1169 LINE",
"573 856 LINE",
"527 883 OFFCURVE",
"481 896 OFFCURVE",
"435 896 CURVE SMOOTH",
"250 896 OFFCURVE",
"119 694 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 156 OFFCURVE",
"253 -27 OFFCURVE",
"444 -27 CURVE SMOOTH",
"493 -27 OFFCURVE",
"536 -18 OFFCURVE",
"573 0 CURVE",
"573 -203 LINE",
"655 -203 LINE",
"657 0 LINE",
"696 -18 OFFCURVE",
"739 -27 OFFCURVE",
"787 -27 CURVE SMOOTH",
"996 -27 OFFCURVE",
"1110 188 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 692 OFFCURVE",
"977 896 OFFCURVE",
"796 896 CURVE SMOOTH",
"751 896 OFFCURVE",
"705 883 OFFCURVE",
"657 856 CURVE"
);
},
{
closed = 1;
nodes = (
"657 758 LINE",
"692 793 OFFCURVE",
"734 811 OFFCURVE",
"783 811 CURVE SMOOTH",
"931 811 OFFCURVE",
"1019 629 OFFCURVE",
"1019 429 CURVE SMOOTH",
"1019 234 OFFCURVE",
"932 57 OFFCURVE",
"781 57 CURVE SMOOTH",
"738 57 OFFCURVE",
"696 76 OFFCURVE",
"657 113 CURVE"
);
},
{
closed = 1;
nodes = (
"540 75 OFFCURVE",
"498 57 OFFCURVE",
"447 57 CURVE SMOOTH",
"298 57 OFFCURVE",
"210 233 OFFCURVE",
"210 430 CURVE SMOOTH",
"210 626 OFFCURVE",
"297 811 OFFCURVE",
"450 811 CURVE SMOOTH",
"501 811 OFFCURVE",
"542 793 OFFCURVE",
"573 758 CURVE",
"573 112 LINE"
);
},
{
closed = 1;
nodes = (
"871 1200 OFFCURVE",
"811 1262 OFFCURVE",
"737 1262 CURVE SMOOTH",
"664 1262 OFFCURVE",
"604 1200 OFFCURVE",
"604 1127 CURVE SMOOTH",
"604 1054 OFFCURVE",
"664 993 OFFCURVE",
"737 993 CURVE SMOOTH",
"811 993 OFFCURVE",
"871 1054 OFFCURVE",
"871 1127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"827 1078 OFFCURVE",
"787 1038 OFFCURVE",
"737 1038 CURVE SMOOTH",
"688 1038 OFFCURVE",
"648 1079 OFFCURVE",
"648 1127 CURVE SMOOTH",
"648 1176 OFFCURVE",
"687 1216 OFFCURVE",
"737 1216 CURVE SMOOTH",
"787 1216 OFFCURVE",
"827 1176 OFFCURVE",
"827 1127 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1247;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2018-11-26 03:31:08 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"570 -226 LINE",
"752 -226 LINE SMOOTH",
"793 -226 OFFCURVE",
"809 -208 OFFCURVE",
"809 -184 CURVE SMOOTH",
"809 -159 OFFCURVE",
"793 -142 OFFCURVE",
"752 -142 CURVE SMOOTH",
"648 -142 LINE",
"648 -92 LINE",
"573 -95 LINE"
);
},
{
closed = 1;
nodes = (
"518 -152 OFFCURVE",
"472 -166 OFFCURVE",
"438 -193 CURVE",
"404 -224 OFFCURVE",
"387 -268 OFFCURVE",
"387 -324 CURVE SMOOTH",
"387 -364 OFFCURVE",
"407 -386 OFFCURVE",
"430 -386 CURVE SMOOTH",
"454 -386 OFFCURVE",
"473 -372 OFFCURVE",
"473 -323 CURVE SMOOTH",
"473 -286 OFFCURVE",
"479 -263 OFFCURVE",
"492 -252 CURVE SMOOTH",
"513 -234 OFFCURVE",
"542 -225 OFFCURVE",
"577 -226 CURVE",
"577 -151 LINE"
);
},
{
closed = 1;
nodes = (
"524 883 OFFCURVE",
"478 896 OFFCURVE",
"433 896 CURVE SMOOTH",
"252 896 OFFCURVE",
"119 692 OFFCURVE",
"119 429 CURVE SMOOTH",
"119 188 OFFCURVE",
"233 -27 OFFCURVE",
"442 -27 CURVE SMOOTH",
"490 -27 OFFCURVE",
"533 -18 OFFCURVE",
"572 0 CURVE",
"574 -203 LINE",
"656 -203 LINE",
"656 0 LINE",
"693 -18 OFFCURVE",
"736 -27 OFFCURVE",
"785 -27 CURVE SMOOTH",
"976 -27 OFFCURVE",
"1110 156 OFFCURVE",
"1110 429 CURVE SMOOTH",
"1110 694 OFFCURVE",
"979 896 OFFCURVE",
"794 896 CURVE SMOOTH",
"748 896 OFFCURVE",
"702 883 OFFCURVE",
"656 856 CURVE",
"656 1169 LINE",
"777 1169 LINE SMOOTH",
"792 1169 OFFCURVE",
"802 1169 OFFCURVE",
"806 1169 CURVE SMOOTH",
"837 1169 OFFCURVE",
"853 1176 OFFCURVE",
"853 1205 CURVE SMOOTH",
"853 1232 OFFCURVE",
"830 1251 OFFCURVE",
"783 1251 CURVE SMOOTH",
"573 1251 LINE",
"572 1161 LINE",
"572 856 LINE"
);
},
{
closed = 1;
nodes = (
"533 76 OFFCURVE",
"491 57 OFFCURVE",
"448 57 CURVE SMOOTH",
"297 57 OFFCURVE",
"210 234 OFFCURVE",
"210 429 CURVE SMOOTH",
"210 629 OFFCURVE",
"298 811 OFFCURVE",
"446 811 CURVE SMOOTH",
"495 811 OFFCURVE",
"537 793 OFFCURVE",
"572 758 CURVE",
"572 113 LINE"
);
},
{
closed = 1;
nodes = (
"656 758 LINE",
"687 793 OFFCURVE",
"728 811 OFFCURVE",
"779 811 CURVE SMOOTH",
"932 811 OFFCURVE",
"1019 626 OFFCURVE",
"1019 430 CURVE SMOOTH",
"1019 233 OFFCURVE",
"931 57 OFFCURVE",
"782 57 CURVE SMOOTH",
"731 57 OFFCURVE",
"689 75 OFFCURVE",
"656 112 CURVE"
);
}
);
width = 1229;
}
);
unicode = 124B;
},
{
glyphname = "ba-ethiopic";
lastChange = "2018-11-25 08:16:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2018-11-26 03:31:36 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"956 198 LINE",
"956 408 LINE",
"1015 409 OFFCURVE",
"1061 423 OFFCURVE",
"1095 450 CURVE",
"1129 481 OFFCURVE",
"1146 525 OFFCURVE",
"1146 581 CURVE SMOOTH",
"1146 621 OFFCURVE",
"1126 643 OFFCURVE",
"1103 643 CURVE SMOOTH",
"1079 643 OFFCURVE",
"1060 629 OFFCURVE",
"1060 580 CURVE SMOOTH",
"1060 543 OFFCURVE",
"1054 520 OFFCURVE",
"1041 509 CURVE SMOOTH",
"1020 491 OFFCURVE",
"991 482 OFFCURVE",
"956 483 CURVE",
"956 615 LINE",
"905 615 LINE"
);
}
);
width = 1229;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2018-11-26 08:58:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"255 2 LINE",
"452 2 LINE SMOOTH",
"489 2 OFFCURVE",
"508 16 OFFCURVE",
"508 45 CURVE SMOOTH",
"508 73 OFFCURVE",
"489 87 OFFCURVE",
"452 87 CURVE SMOOTH",
"340 87 LINE",
"340 166 LINE",
"255 164 LINE"
);
},
{
closed = 1;
nodes = (
"340 162 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE",
"974 -2 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 164 LINE"
);
},
{
closed = 1;
nodes = (
"890 279 LINE",
"890 -2 LINE",
"974 -2 LINE",
"974 281 LINE"
);
},
{
closed = 1;
nodes = (
"1157 232 OFFCURVE",
"1138 218 OFFCURVE",
"1138 169 CURVE SMOOTH",
"1138 132 OFFCURVE",
"1132 109 OFFCURVE",
"1119 98 CURVE SMOOTH",
"1098 80 OFFCURVE",
"1069 71 OFFCURVE",
"1034 72 CURVE SMOOTH",
"890 72 LINE",
"890 -4 LINE",
"1034 -4 LINE",
"1093 -2 OFFCURVE",
"1139 12 OFFCURVE",
"1173 39 CURVE",
"1207 70 OFFCURVE",
"1224 114 OFFCURVE",
"1224 170 CURVE SMOOTH",
"1224 210 OFFCURVE",
"1204 232 OFFCURVE",
"1181 232 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2018-11-26 08:59:29 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 -386 LINE SMOOTH",
"1123 -386 OFFCURVE",
"1142 -372 OFFCURVE",
"1142 -343 CURVE SMOOTH",
"1142 -315 OFFCURVE",
"1123 -301 OFFCURVE",
"1086 -301 CURVE SMOOTH",
"974 -301 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -386 LINE"
);
},
{
closed = 1;
nodes = (
"294 0 LINE",
"388 0 LINE SMOOTH",
"429 0 OFFCURVE",
"444 17 OFFCURVE",
"444 42 CURVE SMOOTH",
"444 66 OFFCURVE",
"429 84 OFFCURVE",
"388 84 CURVE SMOOTH",
"278 84 LINE",
"288 0 LINE"
);
},
{
closed = 1;
nodes = (
"939 -302 LINE",
"829 -302 LINE SMOOTH",
"788 -302 OFFCURVE",
"773 -320 OFFCURVE",
"773 -344 CURVE SMOOTH",
"773 -369 OFFCURVE",
"788 -386 OFFCURVE",
"829 -386 CURVE SMOOTH",
"923 -386 LINE",
"929 -386 LINE"
);
}
);
width = 1229;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2018-11-26 03:32:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 64 LINE"
);
},
{
closed = 1;
nodes = (
"1172 203 OFFCURVE",
"1112 265 OFFCURVE",
"1038 265 CURVE SMOOTH",
"965 265 OFFCURVE",
"905 203 OFFCURVE",
"905 130 CURVE SMOOTH",
"905 57 OFFCURVE",
"965 -4 OFFCURVE",
"1038 -4 CURVE SMOOTH",
"1112 -4 OFFCURVE",
"1172 57 OFFCURVE",
"1172 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 81 OFFCURVE",
"1088 41 OFFCURVE",
"1038 41 CURVE SMOOTH",
"989 41 OFFCURVE",
"949 82 OFFCURVE",
"949 130 CURVE SMOOTH",
"949 179 OFFCURVE",
"988 219 OFFCURVE",
"1038 219 CURVE SMOOTH",
"1088 219 OFFCURVE",
"1128 179 OFFCURVE",
"1128 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 156 LINE",
"890 46 LINE SMOOTH",
"890 5 OFFCURVE",
"908 -10 OFFCURVE",
"932 -10 CURVE SMOOTH",
"957 -10 OFFCURVE",
"974 5 OFFCURVE",
"974 46 CURVE SMOOTH",
"974 140 LINE",
"974 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2018-11-26 03:32:54 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 556 LINE",
"261 424 LINE",
"226 423 OFFCURVE",
"197 432 OFFCURVE",
"176 450 CURVE SMOOTH",
"163 461 OFFCURVE",
"157 484 OFFCURVE",
"157 521 CURVE SMOOTH",
"157 570 OFFCURVE",
"138 584 OFFCURVE",
"114 584 CURVE SMOOTH",
"91 584 OFFCURVE",
"71 562 OFFCURVE",
"71 522 CURVE SMOOTH",
"71 466 OFFCURVE",
"88 422 OFFCURVE",
"122 391 CURVE",
"156 364 OFFCURVE",
"202 350 OFFCURVE",
"261 349 CURVE",
"261 139 LINE",
"312 556 LINE"
);
}
);
width = 1229;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2018-11-26 03:33:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 -301 LINE",
"143 -301 LINE SMOOTH",
"106 -301 OFFCURVE",
"87 -315 OFFCURVE",
"87 -343 CURVE SMOOTH",
"87 -372 OFFCURVE",
"106 -386 OFFCURVE",
"143 -386 CURVE SMOOTH",
"340 -386 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2018-11-26 03:33:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"974 -180 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -178 LINE"
);
},
{
closed = 1;
nodes = (
"899 -92 LINE",
"899 -142 LINE",
"795 -142 LINE SMOOTH",
"754 -142 OFFCURVE",
"738 -159 OFFCURVE",
"738 -184 CURVE SMOOTH",
"738 -208 OFFCURVE",
"754 -226 OFFCURVE",
"795 -226 CURVE SMOOTH",
"977 -226 LINE",
"971 -95 LINE"
);
},
{
closed = 1;
nodes = (
"970 -226 LINE",
"1005 -225 OFFCURVE",
"1034 -234 OFFCURVE",
"1055 -252 CURVE SMOOTH",
"1068 -263 OFFCURVE",
"1074 -286 OFFCURVE",
"1074 -323 CURVE SMOOTH",
"1074 -372 OFFCURVE",
"1093 -386 OFFCURVE",
"1117 -386 CURVE SMOOTH",
"1140 -386 OFFCURVE",
"1160 -364 OFFCURVE",
"1160 -324 CURVE SMOOTH",
"1160 -268 OFFCURVE",
"1143 -224 OFFCURVE",
"1109 -193 CURVE",
"1075 -166 OFFCURVE",
"1023 -152 OFFCURVE",
"964 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2018-11-26 03:33:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2018-11-26 03:34:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"956 198 LINE",
"956 408 LINE",
"1015 409 OFFCURVE",
"1061 423 OFFCURVE",
"1095 450 CURVE",
"1129 481 OFFCURVE",
"1146 525 OFFCURVE",
"1146 581 CURVE SMOOTH",
"1146 621 OFFCURVE",
"1126 643 OFFCURVE",
"1103 643 CURVE SMOOTH",
"1079 643 OFFCURVE",
"1060 629 OFFCURVE",
"1060 580 CURVE SMOOTH",
"1060 543 OFFCURVE",
"1054 520 OFFCURVE",
"1041 509 CURVE SMOOTH",
"1020 491 OFFCURVE",
"991 482 OFFCURVE",
"956 483 CURVE",
"956 615 LINE",
"905 615 LINE"
);
}
);
width = 1229;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2018-11-26 03:44:16 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"974 -2 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"974 -2 LINE",
"1009 -1 OFFCURVE",
"1038 -3 OFFCURVE",
"1059 -21 CURVE SMOOTH",
"1072 -32 OFFCURVE",
"1078 -55 OFFCURVE",
"1078 -92 CURVE SMOOTH",
"1078 -141 OFFCURVE",
"1097 -155 OFFCURVE",
"1121 -155 CURVE SMOOTH",
"1144 -155 OFFCURVE",
"1164 -133 OFFCURVE",
"1164 -93 CURVE SMOOTH",
"1164 -37 OFFCURVE",
"1147 7 OFFCURVE",
"1113 38 CURVE",
"1079 65 OFFCURVE",
"1033 79 OFFCURVE",
"974 80 CURVE"
);
}
);
width = 1229;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2018-11-26 08:59:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 -386 LINE SMOOTH",
"1123 -386 OFFCURVE",
"1142 -372 OFFCURVE",
"1142 -343 CURVE SMOOTH",
"1142 -315 OFFCURVE",
"1123 -301 OFFCURVE",
"1086 -301 CURVE SMOOTH",
"974 -301 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -386 LINE"
);
},
{
closed = 1;
nodes = (
"284 0 LINE",
"378 0 LINE SMOOTH",
"419 0 OFFCURVE",
"434 17 OFFCURVE",
"434 42 CURVE SMOOTH",
"434 66 OFFCURVE",
"419 84 OFFCURVE",
"378 84 CURVE SMOOTH",
"268 84 LINE",
"278 0 LINE"
);
},
{
closed = 1;
nodes = (
"925 -301 LINE",
"815 -301 LINE SMOOTH",
"774 -301 OFFCURVE",
"759 -319 OFFCURVE",
"759 -343 CURVE SMOOTH",
"759 -368 OFFCURVE",
"774 -385 OFFCURVE",
"815 -385 CURVE SMOOTH",
"909 -385 LINE",
"915 -385 LINE"
);
}
);
width = 1229;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2018-11-26 03:34:44 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 64 LINE"
);
},
{
closed = 1;
nodes = (
"1172 203 OFFCURVE",
"1112 265 OFFCURVE",
"1038 265 CURVE SMOOTH",
"965 265 OFFCURVE",
"905 203 OFFCURVE",
"905 130 CURVE SMOOTH",
"905 57 OFFCURVE",
"965 -4 OFFCURVE",
"1038 -4 CURVE SMOOTH",
"1112 -4 OFFCURVE",
"1172 57 OFFCURVE",
"1172 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1128 81 OFFCURVE",
"1088 41 OFFCURVE",
"1038 41 CURVE SMOOTH",
"989 41 OFFCURVE",
"949 82 OFFCURVE",
"949 130 CURVE SMOOTH",
"949 179 OFFCURVE",
"988 219 OFFCURVE",
"1038 219 CURVE SMOOTH",
"1088 219 OFFCURVE",
"1128 179 OFFCURVE",
"1128 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"890 156 LINE",
"890 46 LINE SMOOTH",
"890 5 OFFCURVE",
"908 -10 OFFCURVE",
"932 -10 CURVE SMOOTH",
"957 -10 OFFCURVE",
"974 5 OFFCURVE",
"974 46 CURVE SMOOTH",
"974 140 LINE",
"974 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2018-11-26 03:34:54 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
},
{
closed = 1;
nodes = (
"261 556 LINE",
"261 424 LINE",
"226 423 OFFCURVE",
"197 432 OFFCURVE",
"176 450 CURVE SMOOTH",
"163 461 OFFCURVE",
"157 484 OFFCURVE",
"157 521 CURVE SMOOTH",
"157 570 OFFCURVE",
"138 584 OFFCURVE",
"114 584 CURVE SMOOTH",
"91 584 OFFCURVE",
"71 562 OFFCURVE",
"71 522 CURVE SMOOTH",
"71 466 OFFCURVE",
"88 422 OFFCURVE",
"122 391 CURVE",
"156 364 OFFCURVE",
"202 350 OFFCURVE",
"261 349 CURVE",
"261 139 LINE",
"312 556 LINE"
);
}
);
width = 1229;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2018-11-26 03:44:54 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1086 0 LINE SMOOTH",
"1123 0 OFFCURVE",
"1142 14 OFFCURVE",
"1142 43 CURVE SMOOTH",
"1142 71 OFFCURVE",
"1123 85 OFFCURVE",
"1086 85 CURVE SMOOTH",
"974 85 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 -301 LINE",
"143 -301 LINE SMOOTH",
"106 -301 OFFCURVE",
"87 -315 OFFCURVE",
"87 -343 CURVE SMOOTH",
"87 -372 OFFCURVE",
"106 -386 OFFCURVE",
"143 -386 CURVE SMOOTH",
"340 -386 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2018-11-26 03:45:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"367 1255 OFFCURVE",
"338 1254 OFFCURVE",
"333 1252 CURVE",
"316 1248 OFFCURVE",
"303 1231 OFFCURVE",
"303 1212 CURVE SMOOTH",
"303 1193 OFFCURVE",
"316 1175 OFFCURVE",
"333 1172 CURVE SMOOTH",
"338 1171 OFFCURVE",
"367 1170 OFFCURVE",
"420 1170 CURVE SMOOTH",
"796 1170 LINE SMOOTH",
"848 1170 OFFCURVE",
"877 1171 OFFCURVE",
"883 1172 CURVE SMOOTH",
"899 1175 OFFCURVE",
"912 1193 OFFCURVE",
"912 1212 CURVE SMOOTH",
"912 1227 OFFCURVE",
"906 1239 OFFCURVE",
"893 1248 CURVE",
"887 1252 OFFCURVE",
"855 1254 OFFCURVE",
"796 1254 CURVE SMOOTH",
"420 1255 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"974 -180 LINE",
"974 407 LINE SMOOTH",
"974 531 OFFCURVE",
"963 625 OFFCURVE",
"940 689 CURVE SMOOTH",
"894 817 OFFCURVE",
"776 899 OFFCURVE",
"611 899 CURVE SMOOTH",
"525 899 OFFCURVE",
"455 879 OFFCURVE",
"401 837 CURVE SMOOTH",
"293 753 OFFCURVE",
"255 644 OFFCURVE",
"255 417 CURVE SMOOTH",
"255 85 LINE",
"143 85 LINE SMOOTH",
"106 85 OFFCURVE",
"87 71 OFFCURVE",
"87 43 CURVE SMOOTH",
"87 14 OFFCURVE",
"106 0 OFFCURVE",
"143 0 CURVE SMOOTH",
"340 0 LINE",
"340 407 LINE SMOOTH",
"340 506 OFFCURVE",
"348 581 OFFCURVE",
"364 634 CURVE SMOOTH",
"396 740 OFFCURVE",
"493 815 OFFCURVE",
"614 815 CURVE SMOOTH",
"677 815 OFFCURVE",
"730 799 OFFCURVE",
"773 767 CURVE SMOOTH",
"860 703 OFFCURVE",
"890 612 OFFCURVE",
"890 407 CURVE SMOOTH",
"890 -178 LINE"
);
},
{
closed = 1;
nodes = (
"899 -92 LINE",
"899 -142 LINE",
"795 -142 LINE SMOOTH",
"754 -142 OFFCURVE",
"738 -159 OFFCURVE",
"738 -184 CURVE SMOOTH",
"738 -208 OFFCURVE",
"754 -226 OFFCURVE",
"795 -226 CURVE SMOOTH",
"977 -226 LINE",
"971 -95 LINE"
);
},
{
closed = 1;
nodes = (
"970 -226 LINE",
"1005 -225 OFFCURVE",
"1034 -234 OFFCURVE",
"1055 -252 CURVE SMOOTH",
"1068 -263 OFFCURVE",
"1074 -286 OFFCURVE",
"1074 -323 CURVE SMOOTH",
"1074 -372 OFFCURVE",
"1093 -386 OFFCURVE",
"1117 -386 CURVE SMOOTH",
"1140 -386 OFFCURVE",
"1160 -364 OFFCURVE",
"1160 -324 CURVE SMOOTH",
"1160 -268 OFFCURVE",
"1143 -224 OFFCURVE",
"1109 -193 CURVE",
"1075 -166 OFFCURVE",
"1023 -152 OFFCURVE",
"964 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2018-11-25 09:53:27 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2018-11-26 03:46:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"669 231 LINE",
"669 363 LINE",
"704 364 OFFCURVE",
"733 355 OFFCURVE",
"754 337 CURVE SMOOTH",
"767 326 OFFCURVE",
"773 303 OFFCURVE",
"773 266 CURVE SMOOTH",
"773 217 OFFCURVE",
"792 203 OFFCURVE",
"816 203 CURVE SMOOTH",
"839 203 OFFCURVE",
"859 225 OFFCURVE",
"859 265 CURVE SMOOTH",
"859 321 OFFCURVE",
"842 365 OFFCURVE",
"808 396 CURVE",
"774 423 OFFCURVE",
"728 437 OFFCURVE",
"669 438 CURVE",
"669 648 LINE",
"618 231 LINE"
);
}
);
width = 1229;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2018-11-26 04:14:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"675 548 LINE",
"675 786 LINE",
"1009 786 LINE SMOOTH",
"1049 786 OFFCURVE",
"1066 804 OFFCURVE",
"1066 828 CURVE SMOOTH",
"1066 853 OFFCURVE",
"1050 871 OFFCURVE",
"1009 871 CURVE SMOOTH",
"675 871 LINE",
"674 1187 LINE",
"632 1175 LINE",
"608 1175 OFFCURVE",
"590 1159 OFFCURVE",
"590 1119 CURVE SMOOTH",
"590 871 LINE",
"234 871 LINE SMOOTH",
"193 871 OFFCURVE",
"177 853 OFFCURVE",
"177 828 CURVE SMOOTH",
"177 804 OFFCURVE",
"194 786 OFFCURVE",
"234 786 CURVE SMOOTH",
"589 786 LINE",
"589 89 LINE",
"546 89 LINE SMOOTH",
"506 89 OFFCURVE",
"490 72 OFFCURVE",
"490 47 CURVE SMOOTH",
"490 22 OFFCURVE",
"506 2 OFFCURVE",
"546 2 CURVE",
"673 1 LINE"
);
},
{
closed = 1;
nodes = (
"674 1182 LINE",
"674 1260 LINE",
"477 1260 LINE SMOOTH",
"437 1260 OFFCURVE",
"421 1242 OFFCURVE",
"421 1218 CURVE SMOOTH",
"421 1193 OFFCURVE",
"437 1175 OFFCURVE",
"477 1175 CURVE SMOOTH",
"590 1175 LINE",
"590 1119 LINE"
);
},
{
closed = 1;
nodes = (
"822 0 OFFCURVE",
"883 12 OFFCURVE",
"917 39 CURVE",
"951 70 OFFCURVE",
"968 114 OFFCURVE",
"968 170 CURVE SMOOTH",
"968 210 OFFCURVE",
"948 232 OFFCURVE",
"925 232 CURVE SMOOTH",
"901 232 OFFCURVE",
"882 218 OFFCURVE",
"882 169 CURVE SMOOTH",
"882 132 OFFCURVE",
"876 109 OFFCURVE",
"863 98 CURVE SMOOTH",
"842 80 OFFCURVE",
"703 83 OFFCURVE",
"668 83 CURVE",
"668 1 LINE"
);
}
);
width = 1229;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2018-11-26 03:50:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"593 781 LINE",
"593 84 LINE",
"676 84 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"378 781 LINE",
"592 781 LINE",
"592 -59 LINE SMOOTH",
"592 -196 OFFCURVE",
"496 -302 OFFCURVE",
"353 -302 CURVE SMOOTH",
"312 -302 LINE",
"306 -386 LINE",
"355 -386 LINE SMOOTH",
"411 -386 OFFCURVE",
"459 -376 OFFCURVE",
"500 -355 CURVE SMOOTH",
"617 -295 OFFCURVE",
"676 -202 OFFCURVE",
"676 -59 CURVE SMOOTH",
"676 866 LINE",
"383 866 LINE"
);
},
{
closed = 1;
nodes = (
"315 -302 LINE",
"210 -302 LINE SMOOTH",
"170 -302 OFFCURVE",
"154 -320 OFFCURVE",
"154 -345 CURVE SMOOTH",
"154 -370 OFFCURVE",
"170 -387 OFFCURVE",
"210 -387 CURVE SMOOTH",
"315 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2018-11-26 03:53:58 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"675 548 LINE",
"675 786 LINE",
"1009 786 LINE SMOOTH",
"1049 786 OFFCURVE",
"1066 804 OFFCURVE",
"1066 828 CURVE SMOOTH",
"1066 853 OFFCURVE",
"1050 871 OFFCURVE",
"1009 871 CURVE SMOOTH",
"675 871 LINE",
"674 1187 LINE",
"632 1175 LINE",
"608 1175 OFFCURVE",
"590 1159 OFFCURVE",
"590 1119 CURVE SMOOTH",
"590 871 LINE",
"234 871 LINE SMOOTH",
"193 871 OFFCURVE",
"177 853 OFFCURVE",
"177 828 CURVE SMOOTH",
"177 804 OFFCURVE",
"194 786 OFFCURVE",
"234 786 CURVE SMOOTH",
"589 786 LINE",
"589 89 LINE",
"546 89 LINE SMOOTH",
"506 89 OFFCURVE",
"490 72 OFFCURVE",
"490 47 CURVE SMOOTH",
"490 22 OFFCURVE",
"506 2 OFFCURVE",
"546 2 CURVE",
"673 1 LINE"
);
},
{
closed = 1;
nodes = (
"674 1182 LINE",
"674 1260 LINE",
"477 1260 LINE SMOOTH",
"437 1260 OFFCURVE",
"421 1242 OFFCURVE",
"421 1218 CURVE SMOOTH",
"421 1193 OFFCURVE",
"437 1175 OFFCURVE",
"477 1175 CURVE SMOOTH",
"590 1175 LINE",
"590 1119 LINE"
);
},
{
closed = 1;
nodes = (
"872 203 OFFCURVE",
"812 265 OFFCURVE",
"738 265 CURVE SMOOTH",
"665 265 OFFCURVE",
"605 203 OFFCURVE",
"605 130 CURVE SMOOTH",
"605 57 OFFCURVE",
"665 -4 OFFCURVE",
"738 -4 CURVE SMOOTH",
"812 -4 OFFCURVE",
"872 57 OFFCURVE",
"872 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"828 81 OFFCURVE",
"788 41 OFFCURVE",
"738 41 CURVE SMOOTH",
"689 41 OFFCURVE",
"649 82 OFFCURVE",
"649 130 CURVE SMOOTH",
"649 179 OFFCURVE",
"688 219 OFFCURVE",
"738 219 CURVE SMOOTH",
"788 219 OFFCURVE",
"828 179 OFFCURVE",
"828 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2018-11-26 03:56:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"590 946 LINE",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE",
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 960 LINE"
);
},
{
closed = 1;
nodes = (
"534 1255 LINE",
"337 1255 LINE SMOOTH",
"297 1255 OFFCURVE",
"281 1237 OFFCURVE",
"281 1213 CURVE SMOOTH",
"281 1188 OFFCURVE",
"297 1170 OFFCURVE",
"337 1170 CURVE SMOOTH",
"450 1170 LINE",
"451 1024 LINE SMOOTH",
"451 1013 OFFCURVE",
"460 1004 OFFCURVE",
"471 1004 CURVE SMOOTH",
"590 1004 LINE",
"590 475 LINE",
"674 488 LINE",
"674 1048 LINE SMOOTH",
"674 1059 OFFCURVE",
"665 1068 OFFCURVE",
"654 1068 CURVE SMOOTH",
"534 1068 LINE"
);
}
);
width = 1229;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2018-11-26 03:57:04 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"887 1202 OFFCURVE",
"827 1264 OFFCURVE",
"753 1264 CURVE SMOOTH",
"680 1264 OFFCURVE",
"620 1202 OFFCURVE",
"620 1129 CURVE SMOOTH",
"620 1056 OFFCURVE",
"680 995 OFFCURVE",
"753 995 CURVE SMOOTH",
"827 995 OFFCURVE",
"887 1056 OFFCURVE",
"887 1129 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"843 1080 OFFCURVE",
"803 1040 OFFCURVE",
"753 1040 CURVE SMOOTH",
"704 1040 OFFCURVE",
"664 1081 OFFCURVE",
"664 1129 CURVE SMOOTH",
"664 1178 OFFCURVE",
"703 1218 OFFCURVE",
"753 1218 CURVE SMOOTH",
"803 1218 OFFCURVE",
"843 1178 OFFCURVE",
"843 1129 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2018-11-26 03:58:40 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"588 -107 LINE",
"673 -106 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"588 -92 LINE",
"588 -142 LINE",
"492 -142 LINE SMOOTH",
"451 -142 OFFCURVE",
"435 -159 OFFCURVE",
"435 -184 CURVE SMOOTH",
"435 -208 OFFCURVE",
"451 -226 OFFCURVE",
"492 -226 CURVE SMOOTH",
"673 -226 LINE",
"673 -95 LINE"
);
},
{
closed = 1;
nodes = (
"667 -226 LINE",
"702 -225 OFFCURVE",
"731 -234 OFFCURVE",
"752 -252 CURVE SMOOTH",
"765 -263 OFFCURVE",
"771 -286 OFFCURVE",
"771 -323 CURVE SMOOTH",
"771 -372 OFFCURVE",
"790 -386 OFFCURVE",
"814 -386 CURVE SMOOTH",
"837 -386 OFFCURVE",
"857 -364 OFFCURVE",
"857 -324 CURVE SMOOTH",
"857 -268 OFFCURVE",
"840 -224 OFFCURVE",
"806 -193 CURVE",
"772 -166 OFFCURVE",
"726 -152 OFFCURVE",
"667 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2018-11-26 03:59:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1019 1170 LINE SMOOTH",
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE SMOOTH",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE",
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"676 1114 LINE",
"676 1170 LINE"
);
}
);
width = 1229;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2018-11-26 06:03:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE SMOOTH",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE",
"674 363 LINE",
"707 363 OFFCURVE",
"734 354 OFFCURVE",
"754 337 CURVE SMOOTH",
"767 326 OFFCURVE",
"773 303 OFFCURVE",
"773 266 CURVE SMOOTH",
"773 217 OFFCURVE",
"792 203 OFFCURVE",
"816 203 CURVE SMOOTH",
"839 203 OFFCURVE",
"859 225 OFFCURVE",
"859 265 CURVE SMOOTH",
"859 321 OFFCURVE",
"842 365 OFFCURVE",
"808 396 CURVE",
"775 422 OFFCURVE",
"731 436 OFFCURVE",
"675 438 CURVE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1170 LINE",
"1019 1170 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2018-11-26 04:17:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"676 1170 LINE",
"1019 1170 LINE SMOOTH",
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE"
);
},
{
closed = 1;
nodes = (
"675 542 LINE",
"675 780 LINE",
"1009 780 LINE SMOOTH",
"1049 780 OFFCURVE",
"1066 798 OFFCURVE",
"1066 822 CURVE SMOOTH",
"1066 847 OFFCURVE",
"1050 865 OFFCURVE",
"1009 865 CURVE SMOOTH",
"675 865 LINE",
"674 1181 LINE",
"590 1177 LINE",
"590 865 LINE",
"234 865 LINE SMOOTH",
"193 865 OFFCURVE",
"177 847 OFFCURVE",
"177 822 CURVE SMOOTH",
"177 798 OFFCURVE",
"194 780 OFFCURVE",
"234 780 CURVE SMOOTH",
"589 780 LINE",
"589 83 LINE",
"546 83 LINE SMOOTH",
"506 83 OFFCURVE",
"490 66 OFFCURVE",
"490 41 CURVE SMOOTH",
"490 16 OFFCURVE",
"506 -4 OFFCURVE",
"546 -4 CURVE",
"673 -5 LINE"
);
},
{
closed = 1;
nodes = (
"822 -6 OFFCURVE",
"883 6 OFFCURVE",
"917 33 CURVE",
"951 64 OFFCURVE",
"968 108 OFFCURVE",
"968 164 CURVE SMOOTH",
"968 204 OFFCURVE",
"948 226 OFFCURVE",
"925 226 CURVE SMOOTH",
"901 226 OFFCURVE",
"882 212 OFFCURVE",
"882 163 CURVE SMOOTH",
"882 126 OFFCURVE",
"876 103 OFFCURVE",
"863 92 CURVE SMOOTH",
"842 74 OFFCURVE",
"703 77 OFFCURVE",
"668 77 CURVE",
"668 -5 LINE"
);
}
);
width = 1229;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2018-11-26 04:02:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"676 1170 LINE",
"1019 1170 LINE SMOOTH",
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE"
);
},
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"593 781 LINE",
"593 84 LINE",
"676 84 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"378 781 LINE",
"592 781 LINE",
"592 -59 LINE SMOOTH",
"592 -196 OFFCURVE",
"496 -302 OFFCURVE",
"353 -302 CURVE SMOOTH",
"312 -302 LINE",
"306 -386 LINE",
"355 -386 LINE SMOOTH",
"411 -386 OFFCURVE",
"459 -376 OFFCURVE",
"500 -355 CURVE SMOOTH",
"617 -295 OFFCURVE",
"676 -202 OFFCURVE",
"676 -59 CURVE SMOOTH",
"676 866 LINE",
"383 866 LINE"
);
},
{
closed = 1;
nodes = (
"315 -302 LINE",
"210 -302 LINE SMOOTH",
"170 -302 OFFCURVE",
"154 -320 OFFCURVE",
"154 -345 CURVE SMOOTH",
"154 -370 OFFCURVE",
"170 -387 OFFCURVE",
"210 -387 CURVE SMOOTH",
"315 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2018-11-26 04:03:04 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"675 871 LINE",
"674 1175 LINE",
"1019 1175 LINE SMOOTH",
"1059 1175 OFFCURVE",
"1075 1193 OFFCURVE",
"1075 1218 CURVE SMOOTH",
"1075 1242 OFFCURVE",
"1059 1260 OFFCURVE",
"1019 1260 CURVE SMOOTH",
"247 1260 LINE SMOOTH",
"207 1260 OFFCURVE",
"191 1242 OFFCURVE",
"191 1218 CURVE SMOOTH",
"191 1193 OFFCURVE",
"207 1175 OFFCURVE",
"247 1175 CURVE SMOOTH",
"589 1175 LINE",
"590 871 LINE",
"234 871 LINE SMOOTH",
"193 871 OFFCURVE",
"177 853 OFFCURVE",
"177 828 CURVE SMOOTH",
"177 804 OFFCURVE",
"194 786 OFFCURVE",
"234 786 CURVE SMOOTH",
"589 786 LINE",
"589 89 LINE",
"546 89 LINE SMOOTH",
"506 89 OFFCURVE",
"490 72 OFFCURVE",
"490 47 CURVE SMOOTH",
"490 22 OFFCURVE",
"506 2 OFFCURVE",
"546 2 CURVE SMOOTH",
"673 1 LINE",
"673 13 LINE",
"692 2 OFFCURVE",
"714 -4 OFFCURVE",
"738 -4 CURVE SMOOTH",
"812 -4 OFFCURVE",
"872 57 OFFCURVE",
"872 130 CURVE SMOOTH",
"872 203 OFFCURVE",
"812 265 OFFCURVE",
"738 265 CURVE SMOOTH",
"715 265 OFFCURVE",
"693 259 OFFCURVE",
"674 248 CURVE",
"675 548 LINE",
"675 786 LINE",
"1009 786 LINE SMOOTH",
"1049 786 OFFCURVE",
"1066 804 OFFCURVE",
"1066 828 CURVE SMOOTH",
"1066 853 OFFCURVE",
"1050 871 OFFCURVE",
"1009 871 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"788 219 OFFCURVE",
"828 179 OFFCURVE",
"828 130 CURVE SMOOTH",
"828 81 OFFCURVE",
"788 41 OFFCURVE",
"738 41 CURVE SMOOTH",
"713 41 OFFCURVE",
"690 52 OFFCURVE",
"673 69 CURVE",
"674 192 LINE",
"690 209 OFFCURVE",
"712 219 OFFCURVE",
"738 219 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2018-11-26 04:03:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"676 1170 LINE",
"1019 1170 LINE SMOOTH",
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE"
);
},
{
closed = 1;
nodes = (
"590 946 LINE",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE",
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 960 LINE"
);
},
{
closed = 1;
nodes = (
"534 1255 LINE",
"337 1255 LINE SMOOTH",
"297 1255 OFFCURVE",
"281 1237 OFFCURVE",
"281 1213 CURVE SMOOTH",
"281 1188 OFFCURVE",
"297 1170 OFFCURVE",
"337 1170 CURVE SMOOTH",
"450 1170 LINE",
"451 1024 LINE SMOOTH",
"451 1013 OFFCURVE",
"460 1004 OFFCURVE",
"471 1004 CURVE SMOOTH",
"590 1004 LINE",
"590 475 LINE",
"674 488 LINE",
"674 1048 LINE SMOOTH",
"674 1059 OFFCURVE",
"665 1068 OFFCURVE",
"654 1068 CURVE SMOOTH",
"534 1068 LINE"
);
}
);
width = 1229;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2018-11-26 04:05:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"837 1170 LINE",
"851 1170 LINE",
"937 1170 LINE",
"940 1170 LINE SMOOTH",
"980 1170 OFFCURVE",
"996 1188 OFFCURVE",
"996 1213 CURVE SMOOTH",
"996 1237 OFFCURVE",
"980 1255 OFFCURVE",
"940 1255 CURVE SMOOTH",
"800 1255 LINE"
);
},
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"590 1170 LINE",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"589 84 LINE",
"226 84 LINE SMOOTH",
"186 84 OFFCURVE",
"170 67 OFFCURVE",
"170 42 CURVE SMOOTH",
"170 17 OFFCURVE",
"186 0 OFFCURVE",
"226 0 CURVE SMOOTH",
"1007 0 LINE SMOOTH",
"1047 0 OFFCURVE",
"1063 18 OFFCURVE",
"1063 42 CURVE SMOOTH",
"1063 67 OFFCURVE",
"1047 84 OFFCURVE",
"1007 84 CURVE SMOOTH",
"673 84 LINE"
);
},
{
closed = 1;
nodes = (
"887 1202 OFFCURVE",
"827 1264 OFFCURVE",
"753 1264 CURVE SMOOTH",
"680 1264 OFFCURVE",
"620 1202 OFFCURVE",
"620 1129 CURVE SMOOTH",
"620 1056 OFFCURVE",
"680 995 OFFCURVE",
"753 995 CURVE SMOOTH",
"827 995 OFFCURVE",
"887 1056 OFFCURVE",
"887 1129 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"843 1080 OFFCURVE",
"803 1040 OFFCURVE",
"753 1040 CURVE SMOOTH",
"704 1040 OFFCURVE",
"664 1081 OFFCURVE",
"664 1129 CURVE SMOOTH",
"664 1178 OFFCURVE",
"703 1218 OFFCURVE",
"753 1218 CURVE SMOOTH",
"803 1218 OFFCURVE",
"843 1178 OFFCURVE",
"843 1129 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"727 1255 LINE",
"247 1255 LINE",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"646 1170 LINE"
);
}
);
width = 1229;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2018-11-26 04:06:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"676 1170 LINE",
"1019 1170 LINE SMOOTH",
"1059 1170 OFFCURVE",
"1075 1188 OFFCURVE",
"1075 1213 CURVE SMOOTH",
"1075 1237 OFFCURVE",
"1059 1255 OFFCURVE",
"1019 1255 CURVE SMOOTH",
"247 1255 LINE",
"207 1255 OFFCURVE",
"191 1237 OFFCURVE",
"191 1213 CURVE SMOOTH",
"191 1188 OFFCURVE",
"207 1170 OFFCURVE",
"247 1170 CURVE SMOOTH",
"590 1170 LINE"
);
},
{
closed = 1;
nodes = (
"675 543 LINE",
"675 781 LINE",
"919 781 LINE SMOOTH",
"959 781 OFFCURVE",
"976 799 OFFCURVE",
"976 823 CURVE SMOOTH",
"976 848 OFFCURVE",
"960 866 OFFCURVE",
"919 866 CURVE SMOOTH",
"675 866 LINE",
"674 1182 LINE",
"632 1170 LINE",
"608 1170 OFFCURVE",
"590 1154 OFFCURVE",
"590 1114 CURVE SMOOTH",
"590 866 LINE",
"344 866 LINE SMOOTH",
"303 866 OFFCURVE",
"287 848 OFFCURVE",
"287 823 CURVE SMOOTH",
"287 799 OFFCURVE",
"304 781 OFFCURVE",
"344 781 CURVE SMOOTH",
"589 781 LINE",
"588 -107 LINE",
"673 -106 LINE"
);
},
{
closed = 1;
nodes = (
"674 1177 LINE",
"674 1255 LINE",
"477 1255 LINE SMOOTH",
"437 1255 OFFCURVE",
"421 1237 OFFCURVE",
"421 1213 CURVE SMOOTH",
"421 1188 OFFCURVE",
"437 1170 OFFCURVE",
"477 1170 CURVE SMOOTH",
"590 1170 LINE",
"590 1114 LINE"
);
},
{
closed = 1;
nodes = (
"588 -92 LINE",
"588 -142 LINE",
"492 -142 LINE SMOOTH",
"451 -142 OFFCURVE",
"435 -159 OFFCURVE",
"435 -184 CURVE SMOOTH",
"435 -208 OFFCURVE",
"451 -226 OFFCURVE",
"492 -226 CURVE SMOOTH",
"673 -226 LINE",
"673 -95 LINE"
);
},
{
closed = 1;
nodes = (
"667 -226 LINE",
"702 -225 OFFCURVE",
"731 -234 OFFCURVE",
"752 -252 CURVE SMOOTH",
"765 -263 OFFCURVE",
"771 -286 OFFCURVE",
"771 -323 CURVE SMOOTH",
"771 -372 OFFCURVE",
"790 -386 OFFCURVE",
"814 -386 CURVE SMOOTH",
"837 -386 OFFCURVE",
"857 -364 OFFCURVE",
"857 -324 CURVE SMOOTH",
"857 -268 OFFCURVE",
"840 -224 OFFCURVE",
"806 -193 CURVE",
"772 -166 OFFCURVE",
"726 -152 OFFCURVE",
"667 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2018-11-25 08:31:48 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"355 1007 LINE",
"355 1085 LINE",
"158 1085 LINE SMOOTH",
"118 1085 OFFCURVE",
"102 1067 OFFCURVE",
"102 1043 CURVE SMOOTH",
"102 1018 OFFCURVE",
"118 1000 OFFCURVE",
"158 1000 CURVE SMOOTH",
"271 1000 LINE",
"272 944 LINE"
);
}
);
width = 1229;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2018-11-26 04:11:04 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"355 1007 LINE",
"355 1085 LINE",
"158 1085 LINE SMOOTH",
"118 1085 OFFCURVE",
"102 1067 OFFCURVE",
"102 1043 CURVE SMOOTH",
"102 1018 OFFCURVE",
"118 1000 OFFCURVE",
"158 1000 CURVE SMOOTH",
"271 1000 LINE",
"272 944 LINE"
);
},
{
closed = 1;
nodes = (
"641 329 LINE",
"641 461 LINE",
"676 462 OFFCURVE",
"705 453 OFFCURVE",
"726 435 CURVE SMOOTH",
"739 424 OFFCURVE",
"745 401 OFFCURVE",
"745 364 CURVE SMOOTH",
"745 315 OFFCURVE",
"764 301 OFFCURVE",
"788 301 CURVE SMOOTH",
"811 301 OFFCURVE",
"831 323 OFFCURVE",
"831 363 CURVE SMOOTH",
"831 419 OFFCURVE",
"814 463 OFFCURVE",
"780 494 CURVE",
"746 521 OFFCURVE",
"700 535 OFFCURVE",
"641 536 CURVE",
"641 746 LINE",
"590 329 LINE"
);
}
);
width = 1229;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2018-11-26 04:18:18 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"531 84 LINE SMOOTH",
"491 84 OFFCURVE",
"475 67 OFFCURVE",
"475 42 CURVE SMOOTH",
"475 18 OFFCURVE",
"491 0 OFFCURVE",
"531 0 CURVE",
"658 4 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"355 1007 LINE",
"355 1085 LINE",
"158 1085 LINE SMOOTH",
"118 1085 OFFCURVE",
"102 1067 OFFCURVE",
"102 1043 CURVE SMOOTH",
"102 1018 OFFCURVE",
"118 1000 OFFCURVE",
"158 1000 CURVE SMOOTH",
"271 1000 LINE",
"272 944 LINE"
);
},
{
closed = 1;
nodes = (
"575 329 LINE",
"575 83 LINE",
"532 83 LINE SMOOTH",
"492 83 OFFCURVE",
"476 66 OFFCURVE",
"476 41 CURVE SMOOTH",
"476 16 OFFCURVE",
"492 -4 OFFCURVE",
"532 -4 CURVE",
"659 -5 LINE",
"659 350 LINE"
);
},
{
closed = 1;
nodes = (
"808 -6 OFFCURVE",
"869 6 OFFCURVE",
"903 33 CURVE",
"937 64 OFFCURVE",
"954 108 OFFCURVE",
"954 164 CURVE SMOOTH",
"954 204 OFFCURVE",
"934 226 OFFCURVE",
"911 226 CURVE SMOOTH",
"887 226 OFFCURVE",
"868 212 OFFCURVE",
"868 163 CURVE SMOOTH",
"868 126 OFFCURVE",
"862 103 OFFCURVE",
"849 92 CURVE SMOOTH",
"828 74 OFFCURVE",
"689 77 OFFCURVE",
"654 77 CURVE",
"654 -5 LINE"
);
}
);
width = 1229;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2018-11-26 04:36:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"355 1007 LINE",
"355 1085 LINE",
"158 1085 LINE SMOOTH",
"118 1085 OFFCURVE",
"102 1067 OFFCURVE",
"102 1043 CURVE SMOOTH",
"102 1018 OFFCURVE",
"118 1000 OFFCURVE",
"158 1000 CURVE SMOOTH",
"271 1000 LINE",
"272 944 LINE"
);
},
{
closed = 1;
nodes = (
"658 162 LINE",
"659 866 LINE",
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 151 LINE"
);
},
{
closed = 1;
nodes = (
"360 781 LINE",
"574 781 LINE",
"574 -59 LINE SMOOTH",
"574 -196 OFFCURVE",
"478 -302 OFFCURVE",
"335 -302 CURVE SMOOTH",
"294 -302 LINE",
"288 -386 LINE",
"337 -386 LINE SMOOTH",
"393 -386 OFFCURVE",
"441 -376 OFFCURVE",
"482 -355 CURVE SMOOTH",
"599 -295 OFFCURVE",
"658 -202 OFFCURVE",
"658 -59 CURVE SMOOTH",
"658 866 LINE",
"365 866 LINE"
);
},
{
closed = 1;
nodes = (
"297 -302 LINE",
"192 -302 LINE SMOOTH",
"152 -302 OFFCURVE",
"136 -320 OFFCURVE",
"136 -345 CURVE SMOOTH",
"136 -370 OFFCURVE",
"152 -387 OFFCURVE",
"192 -387 CURVE SMOOTH",
"297 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2018-11-26 04:37:20 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"355 1007 LINE",
"355 1085 LINE",
"158 1085 LINE SMOOTH",
"118 1085 OFFCURVE",
"102 1067 OFFCURVE",
"102 1043 CURVE SMOOTH",
"102 1018 OFFCURVE",
"118 1000 OFFCURVE",
"158 1000 CURVE SMOOTH",
"271 1000 LINE",
"272 944 LINE"
);
},
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"485 84 LINE SMOOTH",
"445 84 OFFCURVE",
"429 67 OFFCURVE",
"429 42 CURVE SMOOTH",
"429 18 OFFCURVE",
"445 0 OFFCURVE",
"485 0 CURVE",
"659 2 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"868 203 OFFCURVE",
"808 265 OFFCURVE",
"734 265 CURVE SMOOTH",
"661 265 OFFCURVE",
"601 203 OFFCURVE",
"601 130 CURVE SMOOTH",
"601 57 OFFCURVE",
"661 -4 OFFCURVE",
"734 -4 CURVE SMOOTH",
"808 -4 OFFCURVE",
"868 57 OFFCURVE",
"868 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"824 81 OFFCURVE",
"784 41 OFFCURVE",
"734 41 CURVE SMOOTH",
"685 41 OFFCURVE",
"645 82 OFFCURVE",
"645 130 CURVE SMOOTH",
"645 179 OFFCURVE",
"684 219 OFFCURVE",
"734 219 CURVE SMOOTH",
"784 219 OFFCURVE",
"824 179 OFFCURVE",
"824 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2018-11-26 04:39:02 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"55 965 LINE SMOOTH",
"55 924 OFFCURVE",
"73 909 OFFCURVE",
"97 909 CURVE SMOOTH",
"122 909 OFFCURVE",
"139 924 OFFCURVE",
"139 965 CURVE SMOOTH",
"139 1000 LINE",
"271 1000 LINE",
"272 944 LINE",
"355 1007 LINE",
"355 1085 LINE",
"75 1085 LINE SMOOTH",
"64 1085 OFFCURVE",
"55 1076 OFFCURVE",
"55 1065 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2018-11-26 04:45:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -305 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"916 33 OFFCURVE",
"925 37 CURVE",
"925 -305 LINE",
"595 -305 LINE SMOOTH",
"555 -305 OFFCURVE",
"539 -322 OFFCURVE",
"539 -347 CURVE SMOOTH",
"539 -371 OFFCURVE",
"555 -389 OFFCURVE",
"595 -389 CURVE SMOOTH",
"1049 -389 LINE SMOOTH",
"1090 -389 OFFCURVE",
"1106 -371 OFFCURVE",
"1106 -347 CURVE SMOOTH",
"1106 -322 OFFCURVE",
"1090 -305 OFFCURVE",
"1049 -305 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"196 521 LINE",
"137 520 OFFCURVE",
"91 506 OFFCURVE",
"57 479 CURVE",
"23 448 OFFCURVE",
"6 404 OFFCURVE",
"6 348 CURVE SMOOTH",
"6 308 OFFCURVE",
"26 286 OFFCURVE",
"49 286 CURVE SMOOTH",
"73 286 OFFCURVE",
"92 300 OFFCURVE",
"92 349 CURVE SMOOTH",
"92 386 OFFCURVE",
"98 409 OFFCURVE",
"111 420 CURVE SMOOTH",
"132 438 OFFCURVE",
"161 447 OFFCURVE",
"196 446 CURVE",
"196 314 LINE",
"247 314 LINE"
);
}
);
width = 1229;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2018-11-26 04:46:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -205 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"912 33 OFFCURVE",
"921 37 CURVE",
"921 -205 LINE"
);
},
{
closed = 1;
nodes = (
"196 521 LINE",
"137 520 OFFCURVE",
"91 506 OFFCURVE",
"57 479 CURVE",
"23 448 OFFCURVE",
"6 404 OFFCURVE",
"6 348 CURVE SMOOTH",
"6 308 OFFCURVE",
"26 286 OFFCURVE",
"49 286 CURVE SMOOTH",
"73 286 OFFCURVE",
"92 300 OFFCURVE",
"92 349 CURVE SMOOTH",
"92 386 OFFCURVE",
"98 409 OFFCURVE",
"111 420 CURVE SMOOTH",
"132 438 OFFCURVE",
"161 447 OFFCURVE",
"196 446 CURVE",
"196 314 LINE",
"247 314 LINE"
);
},
{
closed = 1;
nodes = (
"921 -92 LINE",
"921 -142 LINE",
"827 -142 LINE SMOOTH",
"786 -142 OFFCURVE",
"770 -159 OFFCURVE",
"770 -184 CURVE SMOOTH",
"770 -208 OFFCURVE",
"786 -226 OFFCURVE",
"827 -226 CURVE SMOOTH",
"1009 -226 LINE",
"1009 -95 LINE"
);
},
{
closed = 1;
nodes = (
"1002 -226 LINE",
"1037 -225 OFFCURVE",
"1066 -234 OFFCURVE",
"1087 -252 CURVE SMOOTH",
"1100 -263 OFFCURVE",
"1106 -286 OFFCURVE",
"1106 -323 CURVE SMOOTH",
"1106 -372 OFFCURVE",
"1125 -386 OFFCURVE",
"1149 -386 CURVE SMOOTH",
"1172 -386 OFFCURVE",
"1192 -364 OFFCURVE",
"1192 -324 CURVE SMOOTH",
"1192 -268 OFFCURVE",
"1175 -224 OFFCURVE",
"1141 -193 CURVE",
"1107 -166 OFFCURVE",
"1061 -152 OFFCURVE",
"1002 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1287;
},
{
glyphname = "na-ethiopic";
lastChange = "2018-11-25 08:32:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2018-11-26 04:18:54 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"641 329 LINE",
"641 461 LINE",
"676 462 OFFCURVE",
"705 453 OFFCURVE",
"726 435 CURVE SMOOTH",
"739 424 OFFCURVE",
"745 401 OFFCURVE",
"745 364 CURVE SMOOTH",
"745 315 OFFCURVE",
"764 301 OFFCURVE",
"788 301 CURVE SMOOTH",
"811 301 OFFCURVE",
"831 323 OFFCURVE",
"831 363 CURVE SMOOTH",
"831 419 OFFCURVE",
"814 463 OFFCURVE",
"780 494 CURVE",
"746 521 OFFCURVE",
"700 535 OFFCURVE",
"641 536 CURVE",
"641 746 LINE",
"590 329 LINE"
);
}
);
width = 1229;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2018-11-26 04:19:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"531 84 LINE SMOOTH",
"491 84 OFFCURVE",
"475 67 OFFCURVE",
"475 42 CURVE SMOOTH",
"475 18 OFFCURVE",
"491 0 OFFCURVE",
"531 0 CURVE",
"658 4 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"575 329 LINE",
"575 83 LINE",
"532 83 LINE SMOOTH",
"492 83 OFFCURVE",
"476 66 OFFCURVE",
"476 41 CURVE SMOOTH",
"476 16 OFFCURVE",
"492 -4 OFFCURVE",
"532 -4 CURVE",
"659 -5 LINE",
"659 350 LINE"
);
},
{
closed = 1;
nodes = (
"808 -6 OFFCURVE",
"869 6 OFFCURVE",
"903 33 CURVE",
"937 64 OFFCURVE",
"954 108 OFFCURVE",
"954 164 CURVE SMOOTH",
"954 204 OFFCURVE",
"934 226 OFFCURVE",
"911 226 CURVE SMOOTH",
"887 226 OFFCURVE",
"868 212 OFFCURVE",
"868 163 CURVE SMOOTH",
"868 126 OFFCURVE",
"862 103 OFFCURVE",
"849 92 CURVE SMOOTH",
"828 74 OFFCURVE",
"689 77 OFFCURVE",
"654 77 CURVE",
"654 -5 LINE"
);
}
);
width = 1229;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2018-11-26 04:22:58 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1009 -306 LINE",
"1009 83 LINE",
"1009 129 LINE SMOOTH",
"1009 155 OFFCURVE",
"983 167 OFFCURVE",
"962 150 CURVE SMOOTH",
"863 76 OFFCURVE",
"751 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"957 707 OFFCURVE",
"965 612 CURVE SMOOTH",
"968 576 OFFCURVE",
"984 562 OFFCURVE",
"1007 562 CURVE SMOOTH",
"1032 562 OFFCURVE",
"1049 578 OFFCURVE",
"1050 619 CURVE SMOOTH",
"1050 809 LINE SMOOTH",
"1050 850 OFFCURVE",
"1032 866 OFFCURVE",
"1007 866 CURVE SMOOTH",
"983 866 OFFCURVE",
"965 850 OFFCURVE",
"965 809 CURVE SMOOTH",
"965 781 LINE",
"878 858 OFFCURVE",
"770 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"735 -33 OFFCURVE",
"835 -7 OFFCURVE",
"925 36 CURVE",
"925 -306 LINE",
"595 -306 LINE SMOOTH",
"555 -306 OFFCURVE",
"539 -323 OFFCURVE",
"539 -348 CURVE SMOOTH",
"539 -372 OFFCURVE",
"555 -390 OFFCURVE",
"595 -390 CURVE SMOOTH",
"1049 -390 LINE SMOOTH",
"1090 -390 OFFCURVE",
"1106 -372 OFFCURVE",
"1106 -348 CURVE SMOOTH",
"1106 -323 OFFCURVE",
"1090 -306 OFFCURVE",
"1049 -306 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2018-11-26 04:24:08 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"485 84 LINE SMOOTH",
"445 84 OFFCURVE",
"429 67 OFFCURVE",
"429 42 CURVE SMOOTH",
"429 18 OFFCURVE",
"445 0 OFFCURVE",
"485 0 CURVE",
"659 2 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"868 203 OFFCURVE",
"808 265 OFFCURVE",
"734 265 CURVE SMOOTH",
"661 265 OFFCURVE",
"601 203 OFFCURVE",
"601 130 CURVE SMOOTH",
"601 57 OFFCURVE",
"661 -4 OFFCURVE",
"734 -4 CURVE SMOOTH",
"808 -4 OFFCURVE",
"868 57 OFFCURVE",
"868 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"824 81 OFFCURVE",
"784 41 OFFCURVE",
"734 41 CURVE SMOOTH",
"685 41 OFFCURVE",
"645 82 OFFCURVE",
"645 130 CURVE SMOOTH",
"645 179 OFFCURVE",
"684 219 OFFCURVE",
"734 219 CURVE SMOOTH",
"784 219 OFFCURVE",
"824 179 OFFCURVE",
"824 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2018-11-26 04:31:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"659 -302 LINE",
"659 480 LINE",
"374 480 LINE",
"718 1219 LINE SMOOTH",
"726 1237 OFFCURVE",
"715 1253 OFFCURVE",
"696 1253 CURVE SMOOTH",
"155 1253 LINE",
"155 1056 LINE SMOOTH",
"155 1016 OFFCURVE",
"173 1000 OFFCURVE",
"197 1000 CURVE SMOOTH",
"222 1000 OFFCURVE",
"240 1016 OFFCURVE",
"240 1056 CURVE SMOOTH",
"240 1169 LINE",
"617 1170 LINE",
"316 538 LINE SMOOTH",
"304 513 OFFCURVE",
"272 461 OFFCURVE",
"272 437 CURVE SMOOTH",
"272 413 OFFCURVE",
"290 395 OFFCURVE",
"330 395 CURVE SMOOTH",
"575 395 LINE",
"575 -302 LINE",
"256 -302 LINE SMOOTH",
"216 -302 OFFCURVE",
"200 -319 OFFCURVE",
"200 -344 CURVE SMOOTH",
"200 -368 OFFCURVE",
"216 -386 OFFCURVE",
"256 -386 CURVE SMOOTH",
"908 -386 LINE SMOOTH",
"949 -386 OFFCURVE",
"965 -368 OFFCURVE",
"965 -344 CURVE SMOOTH",
"965 -319 OFFCURVE",
"949 -302 OFFCURVE",
"908 -302 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2018-11-26 04:43:27 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -305 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"916 33 OFFCURVE",
"925 37 CURVE",
"925 -305 LINE",
"595 -305 LINE SMOOTH",
"555 -305 OFFCURVE",
"539 -322 OFFCURVE",
"539 -347 CURVE SMOOTH",
"539 -371 OFFCURVE",
"555 -389 OFFCURVE",
"595 -389 CURVE SMOOTH",
"1049 -389 LINE SMOOTH",
"1090 -389 OFFCURVE",
"1106 -371 OFFCURVE",
"1106 -347 CURVE SMOOTH",
"1106 -322 OFFCURVE",
"1090 -305 OFFCURVE",
"1049 -305 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2018-11-26 04:44:32 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"982 698 OFFCURVE",
"922 760 OFFCURVE",
"848 760 CURVE SMOOTH",
"775 760 OFFCURVE",
"715 698 OFFCURVE",
"715 625 CURVE SMOOTH",
"715 552 OFFCURVE",
"775 491 OFFCURVE",
"848 491 CURVE SMOOTH",
"922 491 OFFCURVE",
"982 552 OFFCURVE",
"982 625 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"938 576 OFFCURVE",
"898 536 OFFCURVE",
"848 536 CURVE SMOOTH",
"799 536 OFFCURVE",
"759 577 OFFCURVE",
"759 625 CURVE SMOOTH",
"759 674 OFFCURVE",
"798 714 OFFCURVE",
"848 714 CURVE SMOOTH",
"898 714 OFFCURVE",
"938 674 OFFCURVE",
"938 625 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"925 -99 LINE",
"925 -149 LINE",
"832 -149 LINE SMOOTH",
"791 -149 OFFCURVE",
"775 -166 OFFCURVE",
"775 -191 CURVE SMOOTH",
"775 -215 OFFCURVE",
"791 -233 OFFCURVE",
"832 -233 CURVE SMOOTH",
"1009 -233 LINE",
"1009 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1007 -233 LINE",
"1042 -232 OFFCURVE",
"1071 -241 OFFCURVE",
"1092 -259 CURVE SMOOTH",
"1105 -270 OFFCURVE",
"1111 -293 OFFCURVE",
"1111 -330 CURVE SMOOTH",
"1111 -379 OFFCURVE",
"1130 -393 OFFCURVE",
"1154 -393 CURVE SMOOTH",
"1177 -393 OFFCURVE",
"1197 -371 OFFCURVE",
"1197 -331 CURVE SMOOTH",
"1197 -275 OFFCURVE",
"1180 -231 OFFCURVE",
"1146 -200 CURVE",
"1112 -173 OFFCURVE",
"1066 -159 OFFCURVE",
"1007 -158 CURVE"
);
},
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -118 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"916 33 OFFCURVE",
"925 37 CURVE",
"925 -128 LINE"
);
}
);
width = 1229;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2018-11-25 09:55:31 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"282 830 LINE",
"363 823 LINE",
"366 1167 LINE",
"282 1255 LINE"
);
},
{
closed = 1;
nodes = (
"340 866 LINE SMOOTH",
"282 866 OFFCURVE",
"282 848 OFFCURVE",
"282 823 CURVE SMOOTH",
"284 799 OFFCURVE",
"300 781 OFFCURVE",
"340 781 CURVE SMOOTH",
"585 781 LINE",
"585 84 LINE",
"239 84 LINE SMOOTH",
"199 84 OFFCURVE",
"183 67 OFFCURVE",
"183 42 CURVE SMOOTH",
"183 18 OFFCURVE",
"199 0 OFFCURVE",
"239 0 CURVE SMOOTH",
"999 0 LINE SMOOTH",
"1040 0 OFFCURVE",
"1056 18 OFFCURVE",
"1056 42 CURVE SMOOTH",
"1056 67 OFFCURVE",
"1040 84 OFFCURVE",
"999 84 CURVE SMOOTH",
"669 84 LINE",
"669 866 LINE"
);
},
{
closed = 1;
nodes = (
"365 1177 LINE",
"365 1255 LINE",
"168 1255 LINE SMOOTH",
"128 1255 OFFCURVE",
"112 1237 OFFCURVE",
"112 1213 CURVE SMOOTH",
"112 1188 OFFCURVE",
"128 1170 OFFCURVE",
"168 1170 CURVE SMOOTH",
"281 1170 LINE",
"282 1114 LINE"
);
},
{
closed = 1;
nodes = (
"367 1170 LINE",
"866 1170 LINE SMOOTH",
"903 1170 OFFCURVE",
"922 1184 OFFCURVE",
"922 1212 CURVE SMOOTH",
"922 1241 OFFCURVE",
"903 1255 OFFCURVE",
"866 1255 CURVE SMOOTH",
"283 1255 LINE",
"283 1003 LINE",
"367 976 LINE"
);
}
);
width = 1229;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2018-11-26 04:47:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"245 84 LINE SMOOTH",
"205 84 OFFCURVE",
"189 67 OFFCURVE",
"189 42 CURVE SMOOTH",
"189 18 OFFCURVE",
"205 0 OFFCURVE",
"245 0 CURVE SMOOTH",
"989 0 LINE SMOOTH",
"1030 0 OFFCURVE",
"1046 18 OFFCURVE",
"1046 42 CURVE SMOOTH",
"1046 67 OFFCURVE",
"1030 84 OFFCURVE",
"989 84 CURVE SMOOTH",
"659 84 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1171 LINE SMOOTH",
"509 1171 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"641 329 LINE",
"641 461 LINE",
"676 462 OFFCURVE",
"705 453 OFFCURVE",
"726 435 CURVE SMOOTH",
"739 424 OFFCURVE",
"745 401 OFFCURVE",
"745 364 CURVE SMOOTH",
"745 315 OFFCURVE",
"764 301 OFFCURVE",
"788 301 CURVE SMOOTH",
"811 301 OFFCURVE",
"831 323 OFFCURVE",
"831 363 CURVE SMOOTH",
"831 419 OFFCURVE",
"814 463 OFFCURVE",
"780 494 CURVE",
"746 521 OFFCURVE",
"700 535 OFFCURVE",
"641 536 CURVE",
"641 746 LINE",
"590 329 LINE"
);
},
{
closed = 1;
nodes = (
"922 1171 OFFCURVE",
"951 1172 OFFCURVE",
"956 1173 CURVE SMOOTH",
"973 1177 OFFCURVE",
"986 1194 OFFCURVE",
"986 1213 CURVE SMOOTH",
"986 1232 OFFCURVE",
"973 1249 OFFCURVE",
"956 1253 CURVE SMOOTH",
"951 1254 OFFCURVE",
"922 1255 OFFCURVE",
"869 1255 CURVE SMOOTH",
"162 1255 LINE SMOOTH",
"109 1255 OFFCURVE",
"80 1254 OFFCURVE",
"75 1253 CURVE SMOOTH",
"58 1249 OFFCURVE",
"45 1232 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1194 OFFCURVE",
"58 1177 OFFCURVE",
"75 1173 CURVE SMOOTH",
"80 1172 OFFCURVE",
"109 1171 OFFCURVE",
"162 1171 CURVE SMOOTH",
"869 1171 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2018-11-26 04:48:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"922 1171 OFFCURVE",
"951 1172 OFFCURVE",
"956 1173 CURVE SMOOTH",
"973 1177 OFFCURVE",
"986 1194 OFFCURVE",
"986 1213 CURVE SMOOTH",
"986 1232 OFFCURVE",
"973 1249 OFFCURVE",
"956 1253 CURVE SMOOTH",
"951 1254 OFFCURVE",
"922 1255 OFFCURVE",
"869 1255 CURVE SMOOTH",
"162 1255 LINE SMOOTH",
"109 1255 OFFCURVE",
"80 1254 OFFCURVE",
"75 1253 CURVE SMOOTH",
"58 1249 OFFCURVE",
"45 1232 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1194 OFFCURVE",
"58 1177 OFFCURVE",
"75 1173 CURVE SMOOTH",
"80 1172 OFFCURVE",
"109 1171 OFFCURVE",
"162 1171 CURVE SMOOTH",
"869 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"531 84 LINE SMOOTH",
"491 84 OFFCURVE",
"475 67 OFFCURVE",
"475 42 CURVE SMOOTH",
"475 18 OFFCURVE",
"491 0 OFFCURVE",
"531 0 CURVE",
"658 4 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"575 329 LINE",
"575 83 LINE",
"532 83 LINE SMOOTH",
"492 83 OFFCURVE",
"476 66 OFFCURVE",
"476 41 CURVE SMOOTH",
"476 16 OFFCURVE",
"492 -4 OFFCURVE",
"532 -4 CURVE",
"659 -5 LINE",
"659 350 LINE"
);
},
{
closed = 1;
nodes = (
"808 -6 OFFCURVE",
"869 6 OFFCURVE",
"903 33 CURVE",
"937 64 OFFCURVE",
"954 108 OFFCURVE",
"954 164 CURVE SMOOTH",
"954 204 OFFCURVE",
"934 226 OFFCURVE",
"911 226 CURVE SMOOTH",
"887 226 OFFCURVE",
"868 212 OFFCURVE",
"868 163 CURVE SMOOTH",
"868 126 OFFCURVE",
"862 103 OFFCURVE",
"849 92 CURVE SMOOTH",
"828 74 OFFCURVE",
"689 77 OFFCURVE",
"654 77 CURVE",
"654 -5 LINE"
);
}
);
width = 1229;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2018-11-26 04:49:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"569 866 LINE",
"641 866 LINE",
"641 1191 LINE",
"569 1191 LINE"
);
},
{
closed = 1;
nodes = (
"1009 1171 OFFCURVE",
"1038 1172 OFFCURVE",
"1043 1173 CURVE SMOOTH",
"1060 1176 OFFCURVE",
"1073 1194 OFFCURVE",
"1073 1213 CURVE SMOOTH",
"1073 1232 OFFCURVE",
"1060 1250 OFFCURVE",
"1043 1253 CURVE SMOOTH",
"1038 1254 OFFCURVE",
"1009 1255 OFFCURVE",
"956 1255 CURVE SMOOTH",
"249 1255 LINE SMOOTH",
"196 1255 OFFCURVE",
"167 1254 OFFCURVE",
"162 1253 CURVE SMOOTH",
"145 1250 OFFCURVE",
"132 1232 OFFCURVE",
"132 1213 CURVE SMOOTH",
"132 1194 OFFCURVE",
"145 1176 OFFCURVE",
"162 1173 CURVE SMOOTH",
"167 1172 OFFCURVE",
"196 1171 OFFCURVE",
"249 1171 CURVE SMOOTH",
"956 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -306 LINE",
"1009 83 LINE",
"1009 129 LINE SMOOTH",
"1009 155 OFFCURVE",
"983 167 OFFCURVE",
"962 150 CURVE SMOOTH",
"863 76 OFFCURVE",
"751 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"957 707 OFFCURVE",
"965 612 CURVE SMOOTH",
"968 576 OFFCURVE",
"984 562 OFFCURVE",
"1007 562 CURVE SMOOTH",
"1032 562 OFFCURVE",
"1049 578 OFFCURVE",
"1050 619 CURVE SMOOTH",
"1050 809 LINE SMOOTH",
"1050 850 OFFCURVE",
"1032 866 OFFCURVE",
"1007 866 CURVE SMOOTH",
"983 866 OFFCURVE",
"965 850 OFFCURVE",
"965 809 CURVE SMOOTH",
"965 781 LINE",
"878 858 OFFCURVE",
"770 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"735 -33 OFFCURVE",
"835 -7 OFFCURVE",
"925 36 CURVE",
"925 -306 LINE",
"595 -306 LINE SMOOTH",
"555 -306 OFFCURVE",
"539 -323 OFFCURVE",
"539 -348 CURVE SMOOTH",
"539 -372 OFFCURVE",
"555 -390 OFFCURVE",
"595 -390 CURVE SMOOTH",
"1049 -390 LINE SMOOTH",
"1090 -390 OFFCURVE",
"1106 -372 OFFCURVE",
"1106 -348 CURVE SMOOTH",
"1106 -323 OFFCURVE",
"1090 -306 OFFCURVE",
"1049 -306 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2018-11-26 04:50:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"932 1171 OFFCURVE",
"961 1172 OFFCURVE",
"966 1173 CURVE SMOOTH",
"983 1176 OFFCURVE",
"996 1194 OFFCURVE",
"996 1213 CURVE SMOOTH",
"996 1232 OFFCURVE",
"983 1250 OFFCURVE",
"966 1253 CURVE SMOOTH",
"961 1254 OFFCURVE",
"932 1255 OFFCURVE",
"879 1255 CURVE SMOOTH",
"162 1255 LINE SMOOTH",
"109 1255 OFFCURVE",
"80 1254 OFFCURVE",
"75 1253 CURVE SMOOTH",
"58 1249 OFFCURVE",
"45 1232 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1194 OFFCURVE",
"58 1177 OFFCURVE",
"75 1173 CURVE SMOOTH",
"80 1172 OFFCURVE",
"109 1171 OFFCURVE",
"162 1171 CURVE SMOOTH",
"879 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 830 LINE",
"353 823 LINE",
"356 1167 LINE",
"272 1255 LINE"
);
},
{
closed = 1;
nodes = (
"330 866 LINE SMOOTH",
"272 866 OFFCURVE",
"272 848 OFFCURVE",
"272 823 CURVE SMOOTH",
"274 799 OFFCURVE",
"290 781 OFFCURVE",
"330 781 CURVE SMOOTH",
"575 781 LINE",
"575 84 LINE",
"485 84 LINE SMOOTH",
"445 84 OFFCURVE",
"429 67 OFFCURVE",
"429 42 CURVE SMOOTH",
"429 18 OFFCURVE",
"445 0 OFFCURVE",
"485 0 CURVE",
"659 2 LINE",
"659 866 LINE"
);
},
{
closed = 1;
nodes = (
"356 1170 LINE",
"469 1170 LINE SMOOTH",
"509 1170 OFFCURVE",
"525 1188 OFFCURVE",
"525 1213 CURVE SMOOTH",
"525 1237 OFFCURVE",
"509 1255 OFFCURVE",
"469 1255 CURVE SMOOTH",
"272 1255 LINE",
"272 1177 LINE",
"355 1114 LINE"
);
},
{
closed = 1;
nodes = (
"868 203 OFFCURVE",
"808 265 OFFCURVE",
"734 265 CURVE SMOOTH",
"661 265 OFFCURVE",
"601 203 OFFCURVE",
"601 130 CURVE SMOOTH",
"601 57 OFFCURVE",
"661 -4 OFFCURVE",
"734 -4 CURVE SMOOTH",
"808 -4 OFFCURVE",
"868 57 OFFCURVE",
"868 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"824 81 OFFCURVE",
"784 41 OFFCURVE",
"734 41 CURVE SMOOTH",
"685 41 OFFCURVE",
"645 82 OFFCURVE",
"645 130 CURVE SMOOTH",
"645 179 OFFCURVE",
"684 219 OFFCURVE",
"734 219 CURVE SMOOTH",
"784 219 OFFCURVE",
"824 179 OFFCURVE",
"824 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2018-11-26 04:51:32 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"809 -302 LINE",
"809 480 LINE",
"524 480 LINE",
"764 919 LINE SMOOTH",
"774 937 OFFCURVE",
"761 953 OFFCURVE",
"742 953 CURVE SMOOTH",
"201 953 LINE",
"201 756 LINE SMOOTH",
"201 716 OFFCURVE",
"219 700 OFFCURVE",
"243 700 CURVE SMOOTH",
"268 700 OFFCURVE",
"286 716 OFFCURVE",
"286 756 CURVE SMOOTH",
"286 869 LINE",
"647 870 LINE",
"466 538 LINE SMOOTH",
"452 512 OFFCURVE",
"422 461 OFFCURVE",
"422 437 CURVE SMOOTH",
"422 413 OFFCURVE",
"440 395 OFFCURVE",
"480 395 CURVE SMOOTH",
"725 395 LINE",
"725 -302 LINE",
"406 -302 LINE SMOOTH",
"366 -302 OFFCURVE",
"350 -319 OFFCURVE",
"350 -344 CURVE SMOOTH",
"350 -368 OFFCURVE",
"366 -386 OFFCURVE",
"406 -386 CURVE SMOOTH",
"1058 -386 LINE SMOOTH",
"1099 -386 OFFCURVE",
"1115 -368 OFFCURVE",
"1115 -344 CURVE SMOOTH",
"1115 -319 OFFCURVE",
"1099 -302 OFFCURVE",
"1058 -302 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"922 1171 OFFCURVE",
"951 1172 OFFCURVE",
"956 1173 CURVE SMOOTH",
"973 1177 OFFCURVE",
"986 1194 OFFCURVE",
"986 1213 CURVE SMOOTH",
"986 1232 OFFCURVE",
"973 1249 OFFCURVE",
"956 1253 CURVE SMOOTH",
"951 1254 OFFCURVE",
"922 1255 OFFCURVE",
"869 1255 CURVE SMOOTH",
"162 1255 LINE SMOOTH",
"109 1255 OFFCURVE",
"80 1254 OFFCURVE",
"75 1253 CURVE SMOOTH",
"58 1249 OFFCURVE",
"45 1232 OFFCURVE",
"45 1213 CURVE SMOOTH",
"45 1194 OFFCURVE",
"58 1177 OFFCURVE",
"75 1173 CURVE SMOOTH",
"80 1172 OFFCURVE",
"109 1171 OFFCURVE",
"162 1171 CURVE SMOOTH",
"869 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"439 903 LINE",
"507 903 LINE",
"507 1231 LINE",
"439 1231 LINE"
);
}
);
width = 1229;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2018-11-26 04:52:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1022 1171 OFFCURVE",
"1051 1172 OFFCURVE",
"1056 1173 CURVE SMOOTH",
"1073 1176 OFFCURVE",
"1086 1194 OFFCURVE",
"1086 1213 CURVE SMOOTH",
"1086 1232 OFFCURVE",
"1073 1250 OFFCURVE",
"1056 1253 CURVE SMOOTH",
"1051 1254 OFFCURVE",
"1022 1255 OFFCURVE",
"969 1255 CURVE SMOOTH",
"262 1255 LINE SMOOTH",
"209 1255 OFFCURVE",
"180 1254 OFFCURVE",
"175 1253 CURVE SMOOTH",
"158 1250 OFFCURVE",
"145 1232 OFFCURVE",
"145 1213 CURVE SMOOTH",
"145 1194 OFFCURVE",
"158 1176 OFFCURVE",
"175 1173 CURVE SMOOTH",
"180 1172 OFFCURVE",
"209 1171 OFFCURVE",
"262 1171 CURVE SMOOTH",
"969 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"559 866 LINE",
"631 866 LINE",
"631 1255 LINE",
"559 1255 LINE"
);
},
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -305 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"916 33 OFFCURVE",
"925 37 CURVE",
"925 -305 LINE",
"595 -305 LINE SMOOTH",
"555 -305 OFFCURVE",
"539 -322 OFFCURVE",
"539 -347 CURVE SMOOTH",
"539 -371 OFFCURVE",
"555 -389 OFFCURVE",
"595 -389 CURVE SMOOTH",
"1049 -389 LINE SMOOTH",
"1090 -389 OFFCURVE",
"1106 -371 OFFCURVE",
"1106 -347 CURVE SMOOTH",
"1106 -322 OFFCURVE",
"1090 -305 OFFCURVE",
"1049 -305 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2018-11-26 04:53:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1062 1171 OFFCURVE",
"1091 1172 OFFCURVE",
"1096 1173 CURVE SMOOTH",
"1113 1176 OFFCURVE",
"1126 1194 OFFCURVE",
"1126 1213 CURVE SMOOTH",
"1126 1232 OFFCURVE",
"1113 1250 OFFCURVE",
"1096 1253 CURVE SMOOTH",
"1091 1254 OFFCURVE",
"1062 1255 OFFCURVE",
"1009 1255 CURVE SMOOTH",
"302 1255 LINE SMOOTH",
"249 1255 OFFCURVE",
"220 1254 OFFCURVE",
"215 1253 CURVE SMOOTH",
"198 1250 OFFCURVE",
"185 1232 OFFCURVE",
"185 1213 CURVE SMOOTH",
"185 1194 OFFCURVE",
"198 1176 OFFCURVE",
"215 1173 CURVE SMOOTH",
"220 1172 OFFCURVE",
"249 1171 OFFCURVE",
"302 1171 CURVE SMOOTH",
"1009 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"588 811 LINE",
"665 811 LINE",
"665 1255 LINE",
"588 1255 LINE"
);
},
{
closed = 1;
nodes = (
"982 698 OFFCURVE",
"922 760 OFFCURVE",
"848 760 CURVE SMOOTH",
"775 760 OFFCURVE",
"715 698 OFFCURVE",
"715 625 CURVE SMOOTH",
"715 552 OFFCURVE",
"775 491 OFFCURVE",
"848 491 CURVE SMOOTH",
"922 491 OFFCURVE",
"982 552 OFFCURVE",
"982 625 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"938 576 OFFCURVE",
"898 536 OFFCURVE",
"848 536 CURVE SMOOTH",
"799 536 OFFCURVE",
"759 577 OFFCURVE",
"759 625 CURVE SMOOTH",
"759 674 OFFCURVE",
"798 714 OFFCURVE",
"848 714 CURVE SMOOTH",
"898 714 OFFCURVE",
"938 674 OFFCURVE",
"938 625 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"925 -99 LINE",
"925 -149 LINE",
"832 -149 LINE SMOOTH",
"791 -149 OFFCURVE",
"775 -166 OFFCURVE",
"775 -191 CURVE SMOOTH",
"775 -215 OFFCURVE",
"791 -233 OFFCURVE",
"832 -233 CURVE SMOOTH",
"1009 -233 LINE",
"1009 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1007 -233 LINE",
"1042 -232 OFFCURVE",
"1071 -241 OFFCURVE",
"1092 -259 CURVE SMOOTH",
"1105 -270 OFFCURVE",
"1111 -293 OFFCURVE",
"1111 -330 CURVE SMOOTH",
"1111 -379 OFFCURVE",
"1130 -393 OFFCURVE",
"1154 -393 CURVE SMOOTH",
"1177 -393 OFFCURVE",
"1197 -371 OFFCURVE",
"1197 -331 CURVE SMOOTH",
"1197 -275 OFFCURVE",
"1180 -231 OFFCURVE",
"1146 -200 CURVE",
"1112 -173 OFFCURVE",
"1066 -159 OFFCURVE",
"1007 -158 CURVE"
);
},
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1009 -118 LINE",
"1009 130 LINE SMOOTH",
"1009 156 OFFCURVE",
"985 164 OFFCURVE",
"962 151 CURVE SMOOTH",
"946 142 OFFCURVE",
"921 128 OFFCURVE",
"904 117 CURVE SMOOTH",
"820 71 OFFCURVE",
"727 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE",
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"725 -33 OFFCURVE",
"813 -22 OFFCURVE",
"889 16 CURVE SMOOTH",
"901 22 OFFCURVE",
"916 33 OFFCURVE",
"925 37 CURVE",
"925 -128 LINE"
);
}
);
width = 1229;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2018-11-25 06:39:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2018-11-26 05:08:13 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
},
{
closed = 1;
nodes = (
"979 177 LINE",
"979 387 LINE",
"1038 388 OFFCURVE",
"1084 402 OFFCURVE",
"1118 429 CURVE",
"1152 460 OFFCURVE",
"1169 504 OFFCURVE",
"1169 560 CURVE SMOOTH",
"1169 600 OFFCURVE",
"1149 622 OFFCURVE",
"1126 622 CURVE SMOOTH",
"1102 622 OFFCURVE",
"1083 608 OFFCURVE",
"1083 559 CURVE SMOOTH",
"1083 522 OFFCURVE",
"1077 499 OFFCURVE",
"1064 488 CURVE SMOOTH",
"1043 470 OFFCURVE",
"1014 461 OFFCURVE",
"979 462 CURVE",
"979 594 LINE",
"928 594 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2018-11-26 09:01:02 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"111 1255 LINE SMOOTH",
"71 1255 OFFCURVE",
"55 1237 OFFCURVE",
"55 1213 CURVE SMOOTH",
"55 1188 OFFCURVE",
"71 1170 OFFCURVE",
"111 1170 CURVE SMOOTH",
"224 1170 LINE",
"224 0 LINE",
"403 0 LINE",
"443 0 OFFCURVE",
"459 18 OFFCURVE",
"459 42 CURVE SMOOTH",
"459 67 OFFCURVE",
"443 84 OFFCURVE",
"403 84 CURVE SMOOTH",
"308 84 LINE",
"308 616 LINE",
"380 695 OFFCURVE",
"432 746 OFFCURVE",
"463 767 CURVE SMOOTH",
"506 797 OFFCURVE",
"559 812 OFFCURVE",
"620 812 CURVE SMOOTH",
"776 812 OFFCURVE",
"868 720 OFFCURVE",
"868 599 CURVE SMOOTH",
"868 4 LINE",
"951 2 LINE",
"953 605 LINE SMOOTH",
"953 710 OFFCURVE",
"884 816 OFFCURVE",
"793 862 CURVE SMOOTH",
"747 885 OFFCURVE",
"691 896 OFFCURVE",
"626 896 CURVE SMOOTH",
"505 896 OFFCURVE",
"415 854 OFFCURVE",
"308 738 CURVE",
"308 1255 LINE"
);
},
{
closed = 1;
nodes = (
"329 1255 LINE",
"144 1255 LINE",
"144 1380 LINE SMOOTH",
"144 1412 OFFCURVE",
"128 1428 OFFCURVE",
"96 1428 CURVE SMOOTH",
"63 1428 OFFCURVE",
"47 1412 OFFCURVE",
"47 1380 CURVE SMOOTH",
"47 1158 LINE",
"330 1158 LINE"
);
},
{
closed = 1;
nodes = (
"303 1158 LINE",
"327 1158 LINE SMOOTH",
"359 1158 OFFCURVE",
"375 1174 OFFCURVE",
"375 1206 CURVE SMOOTH",
"375 1239 OFFCURVE",
"359 1255 OFFCURVE",
"327 1255 CURVE SMOOTH",
"303 1255 LINE"
);
},
{
closed = 1;
nodes = (
"869 270 LINE",
"869 -11 LINE",
"953 -11 LINE",
"953 272 LINE"
);
},
{
closed = 1;
nodes = (
"1136 223 OFFCURVE",
"1117 209 OFFCURVE",
"1117 160 CURVE SMOOTH",
"1117 123 OFFCURVE",
"1111 100 OFFCURVE",
"1098 89 CURVE SMOOTH",
"1077 71 OFFCURVE",
"1048 62 OFFCURVE",
"1013 63 CURVE SMOOTH",
"869 63 LINE",
"869 -13 LINE",
"1013 -13 LINE",
"1072 -11 OFFCURVE",
"1118 3 OFFCURVE",
"1152 30 CURVE",
"1186 61 OFFCURVE",
"1203 105 OFFCURVE",
"1203 161 CURVE SMOOTH",
"1203 201 OFFCURVE",
"1183 223 OFFCURVE",
"1160 223 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2018-11-26 04:56:36 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 -302 LINE",
"804 -302 LINE SMOOTH",
"763 -302 OFFCURVE",
"747 -319 OFFCURVE",
"747 -344 CURVE SMOOTH",
"747 -368 OFFCURVE",
"763 -386 OFFCURVE",
"804 -386 CURVE SMOOTH",
"1077 -386 LINE SMOOTH",
"1118 -386 OFFCURVE",
"1133 -368 OFFCURVE",
"1133 -344 CURVE SMOOTH",
"1133 -319 OFFCURVE",
"1118 -302 OFFCURVE",
"1077 -302 CURVE SMOOTH",
"983 -302 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2018-11-26 04:58:20 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE",
"983 0 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
},
{
closed = 1;
nodes = (
"1181 203 OFFCURVE",
"1121 265 OFFCURVE",
"1047 265 CURVE SMOOTH",
"974 265 OFFCURVE",
"914 203 OFFCURVE",
"914 130 CURVE SMOOTH",
"914 57 OFFCURVE",
"974 -4 OFFCURVE",
"1047 -4 CURVE SMOOTH",
"1121 -4 OFFCURVE",
"1181 57 OFFCURVE",
"1181 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1137 81 OFFCURVE",
"1097 41 OFFCURVE",
"1047 41 CURVE SMOOTH",
"998 41 OFFCURVE",
"958 82 OFFCURVE",
"958 130 CURVE SMOOTH",
"958 179 OFFCURVE",
"997 219 OFFCURVE",
"1047 219 CURVE SMOOTH",
"1097 219 OFFCURVE",
"1137 179 OFFCURVE",
"1137 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2018-11-26 05:05:21 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"254 922 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 942 LINE"
);
},
{
closed = 1;
nodes = (
"199 1195 LINE",
"71 1195 LINE",
"114 1110 LINE",
"115 1110 LINE",
"116 964 LINE SMOOTH",
"116 953 OFFCURVE",
"125 944 OFFCURVE",
"136 944 CURVE SMOOTH",
"255 944 LINE",
"255 415 LINE",
"339 428 LINE",
"339 988 LINE SMOOTH",
"339 999 OFFCURVE",
"330 1008 OFFCURVE",
"319 1008 CURVE SMOOTH",
"199 1008 LINE"
);
},
{
closed = 1;
nodes = (
"152 1195 LINE",
"42 1195 LINE SMOOTH",
"1 1195 OFFCURVE",
"-14 1177 OFFCURVE",
"-14 1153 CURVE SMOOTH",
"-14 1128 OFFCURVE",
"1 1111 OFFCURVE",
"42 1111 CURVE SMOOTH",
"136 1111 LINE",
"142 1111 LINE"
);
},
{
closed = 1;
nodes = (
"103 1141 LINE",
"103 1251 LINE SMOOTH",
"103 1292 OFFCURVE",
"85 1307 OFFCURVE",
"61 1307 CURVE SMOOTH",
"36 1307 OFFCURVE",
"19 1292 OFFCURVE",
"19 1251 CURVE SMOOTH",
"19 1157 LINE",
"19 1151 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2018-11-26 05:05:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 -302 LINE",
"159 -302 LINE SMOOTH",
"119 -302 OFFCURVE",
"103 -319 OFFCURVE",
"103 -344 CURVE SMOOTH",
"103 -368 OFFCURVE",
"119 -386 OFFCURVE",
"159 -386 CURVE SMOOTH",
"433 -386 LINE SMOOTH",
"473 -386 OFFCURVE",
"489 -368 OFFCURVE",
"489 -344 CURVE SMOOTH",
"489 -319 OFFCURVE",
"473 -302 OFFCURVE",
"433 -302 CURVE SMOOTH",
"338 -302 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 84 LINE",
"804 84 LINE SMOOTH",
"763 84 OFFCURVE",
"747 67 OFFCURVE",
"747 42 CURVE SMOOTH",
"747 18 OFFCURVE",
"763 0 OFFCURVE",
"804 0 CURVE SMOOTH",
"1077 0 LINE SMOOTH",
"1118 0 OFFCURVE",
"1133 18 OFFCURVE",
"1133 42 CURVE SMOOTH",
"1133 67 OFFCURVE",
"1118 84 OFFCURVE",
"1077 84 CURVE SMOOTH",
"983 84 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE"
);
},
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2018-11-26 05:06:53 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"359 1255 LINE",
"174 1255 LINE",
"174 1380 LINE SMOOTH",
"174 1412 OFFCURVE",
"158 1428 OFFCURVE",
"126 1428 CURVE SMOOTH",
"93 1428 OFFCURVE",
"77 1412 OFFCURVE",
"77 1380 CURVE SMOOTH",
"77 1158 LINE",
"360 1158 LINE"
);
},
{
closed = 1;
nodes = (
"333 1158 LINE",
"357 1158 LINE SMOOTH",
"389 1158 OFFCURVE",
"405 1174 OFFCURVE",
"405 1206 CURVE SMOOTH",
"405 1239 OFFCURVE",
"389 1255 OFFCURVE",
"357 1255 CURVE SMOOTH",
"333 1255 LINE"
);
},
{
closed = 1;
nodes = (
"982 -133 LINE",
"983 605 LINE SMOOTH",
"983 710 OFFCURVE",
"914 816 OFFCURVE",
"823 862 CURVE SMOOTH",
"777 885 OFFCURVE",
"721 896 OFFCURVE",
"656 896 CURVE SMOOTH",
"535 896 OFFCURVE",
"445 854 OFFCURVE",
"338 738 CURVE",
"338 1255 LINE",
"141 1255 LINE SMOOTH",
"101 1255 OFFCURVE",
"85 1237 OFFCURVE",
"85 1213 CURVE SMOOTH",
"85 1188 OFFCURVE",
"101 1170 OFFCURVE",
"141 1170 CURVE SMOOTH",
"254 1170 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 616 LINE",
"410 695 OFFCURVE",
"462 746 OFFCURVE",
"493 767 CURVE SMOOTH",
"536 797 OFFCURVE",
"589 812 OFFCURVE",
"650 812 CURVE SMOOTH",
"806 812 OFFCURVE",
"898 720 OFFCURVE",
"898 599 CURVE SMOOTH",
"898 -164 LINE"
);
},
{
closed = 1;
nodes = (
"904 -92 LINE",
"904 -142 LINE",
"800 -142 LINE SMOOTH",
"759 -142 OFFCURVE",
"743 -159 OFFCURVE",
"743 -184 CURVE SMOOTH",
"743 -208 OFFCURVE",
"759 -226 OFFCURVE",
"800 -226 CURVE SMOOTH",
"984 -225 LINE",
"982 -95 LINE"
);
},
{
closed = 1;
nodes = (
"979 -226 LINE",
"1014 -225 OFFCURVE",
"1043 -234 OFFCURVE",
"1064 -252 CURVE SMOOTH",
"1077 -263 OFFCURVE",
"1083 -286 OFFCURVE",
"1083 -323 CURVE SMOOTH",
"1083 -372 OFFCURVE",
"1102 -386 OFFCURVE",
"1126 -386 CURVE SMOOTH",
"1149 -386 OFFCURVE",
"1169 -364 OFFCURVE",
"1169 -324 CURVE SMOOTH",
"1169 -268 OFFCURVE",
"1152 -224 OFFCURVE",
"1118 -193 CURVE",
"1084 -166 OFFCURVE",
"1038 -152 OFFCURVE",
"979 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2018-11-26 05:13:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"254 52 LINE SMOOTH",
"217 52 OFFCURVE",
"198 38 OFFCURVE",
"198 10 CURVE SMOOTH",
"198 -19 OFFCURVE",
"217 -33 OFFCURVE",
"254 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"254 52 LINE SMOOTH",
"217 52 OFFCURVE",
"198 38 OFFCURVE",
"198 10 CURVE SMOOTH",
"198 -19 OFFCURVE",
"217 -33 OFFCURVE",
"254 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"493 -33 LINE SMOOTH",
"530 -33 OFFCURVE",
"549 -19 OFFCURVE",
"549 10 CURVE SMOOTH",
"549 38 OFFCURVE",
"530 52 OFFCURVE",
"493 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2018-11-26 05:14:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1012 139 LINE",
"1012 349 LINE",
"1071 350 OFFCURVE",
"1117 364 OFFCURVE",
"1151 391 CURVE",
"1185 422 OFFCURVE",
"1202 466 OFFCURVE",
"1202 522 CURVE SMOOTH",
"1202 562 OFFCURVE",
"1182 584 OFFCURVE",
"1159 584 CURVE SMOOTH",
"1135 584 OFFCURVE",
"1116 570 OFFCURVE",
"1116 521 CURVE SMOOTH",
"1116 484 OFFCURVE",
"1110 461 OFFCURVE",
"1097 450 CURVE SMOOTH",
"1076 432 OFFCURVE",
"1047 423 OFFCURVE",
"1012 424 CURVE",
"1012 556 LINE",
"961 556 LINE"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"244 52 LINE SMOOTH",
"207 52 OFFCURVE",
"188 38 OFFCURVE",
"188 10 CURVE SMOOTH",
"188 -19 OFFCURVE",
"207 -33 OFFCURVE",
"244 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"244 52 LINE SMOOTH",
"207 52 OFFCURVE",
"188 38 OFFCURVE",
"188 10 CURVE SMOOTH",
"188 -19 OFFCURVE",
"207 -33 OFFCURVE",
"244 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"493 -33 LINE SMOOTH",
"530 -33 OFFCURVE",
"549 -19 OFFCURVE",
"549 10 CURVE SMOOTH",
"549 38 OFFCURVE",
"530 52 OFFCURVE",
"493 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2018-11-26 09:03:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"574 866 LINE",
"268 865 LINE",
"268 1200 LINE SMOOTH",
"268 1232 OFFCURVE",
"252 1248 OFFCURVE",
"220 1248 CURVE SMOOTH",
"187 1248 OFFCURVE",
"171 1232 OFFCURVE",
"171 1200 CURVE SMOOTH",
"171 788 LINE",
"554 788 LINE"
);
},
{
closed = 1;
nodes = (
"853 218 LINE",
"853 0 LINE",
"937 52 LINE",
"937 217 LINE"
);
},
{
closed = 1;
nodes = (
"937 217 LINE",
"937 374 LINE SMOOTH",
"937 498 OFFCURVE",
"926 592 OFFCURVE",
"903 656 CURVE SMOOTH",
"857 784 OFFCURVE",
"739 866 OFFCURVE",
"574 866 CURVE SMOOTH",
"488 866 OFFCURVE",
"418 846 OFFCURVE",
"364 804 CURVE SMOOTH",
"256 720 OFFCURVE",
"218 611 OFFCURVE",
"218 384 CURVE SMOOTH",
"218 225 LINE",
"303 224 LINE",
"303 374 LINE SMOOTH",
"303 473 OFFCURVE",
"311 548 OFFCURVE",
"327 601 CURVE SMOOTH",
"359 707 OFFCURVE",
"456 782 OFFCURVE",
"577 782 CURVE SMOOTH",
"640 782 OFFCURVE",
"693 766 OFFCURVE",
"736 734 CURVE SMOOTH",
"823 670 OFFCURVE",
"853 579 OFFCURVE",
"853 374 CURVE SMOOTH",
"853 218 LINE"
);
},
{
closed = 1;
nodes = (
"218 7 LINE",
"365 7 LINE SMOOTH",
"402 7 OFFCURVE",
"421 21 OFFCURVE",
"421 50 CURVE SMOOTH",
"421 78 OFFCURVE",
"402 92 OFFCURVE",
"365 92 CURVE SMOOTH",
"303 92 LINE",
"303 265 LINE",
"218 264 LINE"
);
},
{
closed = 1;
nodes = (
"268 1177 LINE",
"268 1255 LINE",
"66 1255 LINE SMOOTH",
"26 1255 OFFCURVE",
"10 1237 OFFCURVE",
"10 1213 CURVE SMOOTH",
"10 1188 OFFCURVE",
"26 1170 OFFCURVE",
"66 1170 CURVE SMOOTH",
"179 1170 LINE",
"180 1114 LINE"
);
},
{
closed = 1;
nodes = (
"1120 231 OFFCURVE",
"1101 217 OFFCURVE",
"1101 168 CURVE SMOOTH",
"1101 131 OFFCURVE",
"1095 108 OFFCURVE",
"1082 97 CURVE SMOOTH",
"1061 79 OFFCURVE",
"1032 71 OFFCURVE",
"997 71 CURVE SMOOTH",
"853 71 LINE",
"853 -5 LINE",
"997 -5 LINE",
"1056 -3 OFFCURVE",
"1102 11 OFFCURVE",
"1136 38 CURVE",
"1170 69 OFFCURVE",
"1187 113 OFFCURVE",
"1187 169 CURVE SMOOTH",
"1187 209 OFFCURVE",
"1167 231 OFFCURVE",
"1144 231 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2018-11-26 05:12:04 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 -133 LINE",
"961 -384 LINE",
"1157 -384 LINE SMOOTH",
"1194 -384 OFFCURVE",
"1213 -370 OFFCURVE",
"1213 -341 CURVE SMOOTH",
"1213 -313 OFFCURVE",
"1194 -299 OFFCURVE",
"1157 -299 CURVE SMOOTH",
"1045 -299 LINE",
"1045 -134 LINE"
);
},
{
closed = 1;
nodes = (
"1045 -134 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 -133 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"523 -33 LINE SMOOTH",
"560 -33 OFFCURVE",
"579 -19 OFFCURVE",
"579 10 CURVE SMOOTH",
"579 38 OFFCURVE",
"560 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 -126 LINE",
"961 -299 LINE",
"849 -299 LINE SMOOTH",
"812 -299 OFFCURVE",
"793 -313 OFFCURVE",
"793 -341 CURVE SMOOTH",
"793 -370 OFFCURVE",
"812 -384 OFFCURVE",
"849 -384 CURVE SMOOTH",
"1046 -384 LINE",
"1046 -127 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2018-11-26 05:13:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1242 182 OFFCURVE",
"1182 244 OFFCURVE",
"1108 244 CURVE SMOOTH",
"1035 244 OFFCURVE",
"975 182 OFFCURVE",
"975 109 CURVE SMOOTH",
"975 36 OFFCURVE",
"1035 -25 OFFCURVE",
"1108 -25 CURVE SMOOTH",
"1182 -25 OFFCURVE",
"1242 36 OFFCURVE",
"1242 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1198 60 OFFCURVE",
"1158 20 OFFCURVE",
"1108 20 CURVE SMOOTH",
"1059 20 OFFCURVE",
"1019 61 OFFCURVE",
"1019 109 CURVE SMOOTH",
"1019 158 OFFCURVE",
"1058 198 OFFCURVE",
"1108 198 CURVE SMOOTH",
"1158 198 OFFCURVE",
"1198 158 OFFCURVE",
"1198 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"284 52 LINE SMOOTH",
"247 52 OFFCURVE",
"228 38 OFFCURVE",
"228 10 CURVE SMOOTH",
"228 -19 OFFCURVE",
"247 -33 OFFCURVE",
"284 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"284 52 LINE SMOOTH",
"247 52 OFFCURVE",
"228 38 OFFCURVE",
"228 10 CURVE SMOOTH",
"228 -19 OFFCURVE",
"247 -33 OFFCURVE",
"284 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"483 -33 LINE SMOOTH",
"520 -33 OFFCURVE",
"539 -19 OFFCURVE",
"539 10 CURVE SMOOTH",
"539 38 OFFCURVE",
"520 52 OFFCURVE",
"483 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"909 52 LINE SMOOTH",
"872 52 OFFCURVE",
"853 38 OFFCURVE",
"853 10 CURVE SMOOTH",
"853 -19 OFFCURVE",
"872 -33 OFFCURVE",
"909 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2018-11-26 05:15:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
},
{
closed = 1;
nodes = (
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 325 LINE SMOOTH",
"326 296 OFFCURVE",
"347 274 OFFCURVE",
"376 274 CURVE SMOOTH",
"406 274 LINE",
"406 52 LINE",
"334 52 LINE SMOOTH",
"297 52 OFFCURVE",
"278 38 OFFCURVE",
"278 10 CURVE SMOOTH",
"278 -19 OFFCURVE",
"297 -33 OFFCURVE",
"334 -33 CURVE SMOOTH",
"573 -33 LINE SMOOTH",
"610 -33 OFFCURVE",
"629 -19 OFFCURVE",
"629 10 CURVE SMOOTH",
"629 38 OFFCURVE",
"610 52 OFFCURVE",
"573 52 CURVE SMOOTH",
"491 52 LINE",
"491 274 LINE SMOOTH",
"491 303 OFFCURVE",
"469 325 OFFCURVE",
"440 325 CURVE SMOOTH",
"411 325 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE",
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2018-11-26 05:16:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 -290 LINE",
"254 -290 LINE SMOOTH",
"217 -290 OFFCURVE",
"198 -304 OFFCURVE",
"198 -332 CURVE SMOOTH",
"198 -361 OFFCURVE",
"217 -375 OFFCURVE",
"254 -375 CURVE SMOOTH",
"411 -375 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 -290 LINE",
"254 -290 LINE SMOOTH",
"217 -290 OFFCURVE",
"198 -304 OFFCURVE",
"198 -332 CURVE SMOOTH",
"198 -361 OFFCURVE",
"217 -375 OFFCURVE",
"254 -375 CURVE SMOOTH",
"411 -375 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -375 LINE",
"493 -375 LINE SMOOTH",
"530 -375 OFFCURVE",
"549 -361 OFFCURVE",
"549 -332 CURVE SMOOTH",
"549 -304 OFFCURVE",
"530 -290 OFFCURVE",
"493 -290 CURVE SMOOTH",
"411 -290 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2018-11-26 05:16:55 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"254 52 LINE SMOOTH",
"217 52 OFFCURVE",
"198 38 OFFCURVE",
"198 10 CURVE SMOOTH",
"198 -19 OFFCURVE",
"217 -33 OFFCURVE",
"254 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"254 52 LINE SMOOTH",
"217 52 OFFCURVE",
"198 38 OFFCURVE",
"198 10 CURVE SMOOTH",
"198 -19 OFFCURVE",
"217 -33 OFFCURVE",
"254 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"493 -33 LINE SMOOTH",
"530 -33 OFFCURVE",
"549 -19 OFFCURVE",
"549 10 CURVE SMOOTH",
"549 38 OFFCURVE",
"530 52 OFFCURVE",
"493 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
},
{
closed = 1;
nodes = (
"346 500 LINE",
"346 368 LINE",
"311 367 OFFCURVE",
"282 376 OFFCURVE",
"261 394 CURVE SMOOTH",
"248 405 OFFCURVE",
"242 428 OFFCURVE",
"242 465 CURVE SMOOTH",
"242 514 OFFCURVE",
"223 528 OFFCURVE",
"199 528 CURVE SMOOTH",
"176 528 OFFCURVE",
"156 506 OFFCURVE",
"156 466 CURVE SMOOTH",
"156 410 OFFCURVE",
"173 366 OFFCURVE",
"207 335 CURVE",
"241 308 OFFCURVE",
"287 294 OFFCURVE",
"346 293 CURVE",
"346 83 LINE",
"397 500 LINE"
);
}
);
width = 1229;
}
);
unicode = 12AF;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2018-11-26 05:18:06 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"1045 -134 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 -133 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"523 -33 LINE SMOOTH",
"560 -33 OFFCURVE",
"579 -19 OFFCURVE",
"579 10 CURVE SMOOTH",
"579 38 OFFCURVE",
"560 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
},
{
closed = 1;
nodes = (
"961 -99 LINE",
"961 -149 LINE",
"865 -149 LINE SMOOTH",
"824 -149 OFFCURVE",
"808 -166 OFFCURVE",
"808 -191 CURVE SMOOTH",
"808 -215 OFFCURVE",
"824 -233 OFFCURVE",
"865 -233 CURVE SMOOTH",
"1045 -233 LINE",
"1045 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1040 -233 LINE",
"1075 -232 OFFCURVE",
"1104 -241 OFFCURVE",
"1125 -259 CURVE SMOOTH",
"1138 -270 OFFCURVE",
"1144 -293 OFFCURVE",
"1144 -330 CURVE SMOOTH",
"1144 -379 OFFCURVE",
"1163 -393 OFFCURVE",
"1187 -393 CURVE SMOOTH",
"1210 -393 OFFCURVE",
"1230 -371 OFFCURVE",
"1230 -331 CURVE SMOOTH",
"1230 -275 OFFCURVE",
"1213 -231 OFFCURVE",
"1179 -200 CURVE",
"1145 -173 OFFCURVE",
"1099 -159 OFFCURVE",
"1040 -158 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12B3;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2018-11-25 09:58:00 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"691 865 LINE",
"311 865 LINE",
"306 990 LINE SMOOTH",
"305 1022 OFFCURVE",
"290 1038 OFFCURVE",
"258 1038 CURVE SMOOTH",
"225 1038 OFFCURVE",
"219 1022 OFFCURVE",
"219 990 CURVE SMOOTH",
"219 768 LINE",
"592 768 LINE"
);
},
{
closed = 1;
nodes = (
"356 225 LINE",
"356 52 LINE",
"260 52 LINE SMOOTH",
"223 52 OFFCURVE",
"204 38 OFFCURVE",
"204 10 CURVE SMOOTH",
"204 -19 OFFCURVE",
"223 -33 OFFCURVE",
"260 -33 CURVE SMOOTH",
"441 -33 LINE",
"441 224 LINE"
);
},
{
closed = 1;
nodes = (
"991 218 LINE",
"991 -33 LINE",
"1148 -33 LINE SMOOTH",
"1185 -33 OFFCURVE",
"1204 -19 OFFCURVE",
"1204 10 CURVE SMOOTH",
"1204 38 OFFCURVE",
"1185 52 OFFCURVE",
"1148 52 CURVE SMOOTH",
"1075 52 LINE",
"1075 217 LINE"
);
},
{
closed = 1;
nodes = (
"1075 217 LINE",
"1075 374 LINE SMOOTH",
"1075 498 OFFCURVE",
"1064 592 OFFCURVE",
"1041 656 CURVE SMOOTH",
"995 784 OFFCURVE",
"877 866 OFFCURVE",
"712 866 CURVE SMOOTH",
"626 866 OFFCURVE",
"556 846 OFFCURVE",
"502 804 CURVE SMOOTH",
"393 722 OFFCURVE",
"356 611 OFFCURVE",
"356 384 CURVE SMOOTH",
"356 225 LINE",
"441 224 LINE",
"441 374 LINE SMOOTH",
"441 473 OFFCURVE",
"449 548 OFFCURVE",
"465 601 CURVE SMOOTH",
"497 707 OFFCURVE",
"594 782 OFFCURVE",
"715 782 CURVE SMOOTH",
"778 782 OFFCURVE",
"831 766 OFFCURVE",
"874 734 CURVE SMOOTH",
"961 670 OFFCURVE",
"991 579 OFFCURVE",
"991 374 CURVE SMOOTH",
"991 218 LINE"
);
},
{
closed = 1;
nodes = (
"356 225 LINE",
"356 52 LINE",
"260 52 LINE SMOOTH",
"223 52 OFFCURVE",
"204 38 OFFCURVE",
"204 10 CURVE SMOOTH",
"204 -19 OFFCURVE",
"223 -33 OFFCURVE",
"260 -33 CURVE SMOOTH",
"441 -33 LINE",
"441 224 LINE"
);
},
{
closed = 1;
nodes = (
"356 -33 LINE",
"553 -33 LINE SMOOTH",
"590 -33 OFFCURVE",
"609 -19 OFFCURVE",
"609 10 CURVE SMOOTH",
"609 38 OFFCURVE",
"590 52 OFFCURVE",
"553 52 CURVE SMOOTH",
"441 52 LINE",
"441 225 LINE",
"356 224 LINE"
);
},
{
closed = 1;
nodes = (
"991 225 LINE",
"991 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1076 -33 LINE",
"1076 224 LINE"
);
},
{
closed = 1;
nodes = (
"219 830 LINE",
"311 823 LINE",
"307 1167 LINE",
"218 1255 LINE"
);
},
{
closed = 1;
nodes = (
"306 1177 LINE",
"306 1255 LINE",
"104 1255 LINE SMOOTH",
"64 1255 OFFCURVE",
"48 1237 OFFCURVE",
"48 1213 CURVE SMOOTH",
"48 1188 OFFCURVE",
"64 1170 OFFCURVE",
"104 1170 CURVE SMOOTH",
"217 1170 LINE",
"218 1114 LINE"
);
},
{
closed = 1;
nodes = (
"308 1170 LINE",
"802 1170 LINE SMOOTH",
"839 1170 OFFCURVE",
"858 1184 OFFCURVE",
"858 1212 CURVE SMOOTH",
"858 1241 OFFCURVE",
"839 1255 OFFCURVE",
"802 1255 CURVE SMOOTH",
"219 1255 LINE",
"219 1003 LINE",
"303 976 LINE"
);
}
);
width = 1229;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2018-11-26 05:19:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1012 139 LINE",
"1012 349 LINE",
"1071 350 OFFCURVE",
"1117 364 OFFCURVE",
"1151 391 CURVE",
"1185 422 OFFCURVE",
"1202 466 OFFCURVE",
"1202 522 CURVE SMOOTH",
"1202 562 OFFCURVE",
"1182 584 OFFCURVE",
"1159 584 CURVE SMOOTH",
"1135 584 OFFCURVE",
"1116 570 OFFCURVE",
"1116 521 CURVE SMOOTH",
"1116 484 OFFCURVE",
"1110 461 OFFCURVE",
"1097 450 CURVE SMOOTH",
"1076 432 OFFCURVE",
"1047 423 OFFCURVE",
"1012 424 CURVE",
"1012 556 LINE",
"961 556 LINE"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"244 52 LINE SMOOTH",
"207 52 OFFCURVE",
"188 38 OFFCURVE",
"188 10 CURVE SMOOTH",
"188 -19 OFFCURVE",
"207 -33 OFFCURVE",
"244 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"244 52 LINE SMOOTH",
"207 52 OFFCURVE",
"188 38 OFFCURVE",
"188 10 CURVE SMOOTH",
"188 -19 OFFCURVE",
"207 -33 OFFCURVE",
"244 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"493 -33 LINE SMOOTH",
"530 -33 OFFCURVE",
"549 -19 OFFCURVE",
"549 10 CURVE SMOOTH",
"549 38 OFFCURVE",
"530 52 OFFCURVE",
"493 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2018-11-26 09:04:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"574 866 LINE",
"268 865 LINE",
"268 1200 LINE SMOOTH",
"268 1232 OFFCURVE",
"252 1248 OFFCURVE",
"220 1248 CURVE SMOOTH",
"187 1248 OFFCURVE",
"171 1232 OFFCURVE",
"171 1200 CURVE SMOOTH",
"171 788 LINE",
"554 788 LINE"
);
},
{
closed = 1;
nodes = (
"853 218 LINE",
"853 0 LINE",
"937 52 LINE",
"937 217 LINE"
);
},
{
closed = 1;
nodes = (
"937 217 LINE",
"937 374 LINE SMOOTH",
"937 498 OFFCURVE",
"926 592 OFFCURVE",
"903 656 CURVE SMOOTH",
"857 784 OFFCURVE",
"739 866 OFFCURVE",
"574 866 CURVE SMOOTH",
"488 866 OFFCURVE",
"418 846 OFFCURVE",
"364 804 CURVE SMOOTH",
"256 720 OFFCURVE",
"218 611 OFFCURVE",
"218 384 CURVE SMOOTH",
"218 225 LINE",
"303 224 LINE",
"303 374 LINE SMOOTH",
"303 473 OFFCURVE",
"311 548 OFFCURVE",
"327 601 CURVE SMOOTH",
"359 707 OFFCURVE",
"456 782 OFFCURVE",
"577 782 CURVE SMOOTH",
"640 782 OFFCURVE",
"693 766 OFFCURVE",
"736 734 CURVE SMOOTH",
"823 670 OFFCURVE",
"853 579 OFFCURVE",
"853 374 CURVE SMOOTH",
"853 218 LINE"
);
},
{
closed = 1;
nodes = (
"218 7 LINE",
"365 7 LINE SMOOTH",
"402 7 OFFCURVE",
"421 21 OFFCURVE",
"421 50 CURVE SMOOTH",
"421 78 OFFCURVE",
"402 92 OFFCURVE",
"365 92 CURVE SMOOTH",
"303 92 LINE",
"303 265 LINE",
"218 264 LINE"
);
},
{
closed = 1;
nodes = (
"268 1177 LINE",
"268 1255 LINE",
"66 1255 LINE SMOOTH",
"26 1255 OFFCURVE",
"10 1237 OFFCURVE",
"10 1213 CURVE SMOOTH",
"10 1188 OFFCURVE",
"26 1170 OFFCURVE",
"66 1170 CURVE SMOOTH",
"179 1170 LINE",
"180 1114 LINE"
);
},
{
closed = 1;
nodes = (
"1120 231 OFFCURVE",
"1101 217 OFFCURVE",
"1101 168 CURVE SMOOTH",
"1101 131 OFFCURVE",
"1095 108 OFFCURVE",
"1082 97 CURVE SMOOTH",
"1061 79 OFFCURVE",
"1032 71 OFFCURVE",
"997 71 CURVE SMOOTH",
"853 71 LINE",
"853 -5 LINE",
"997 -5 LINE",
"1056 -3 OFFCURVE",
"1102 11 OFFCURVE",
"1136 38 CURVE",
"1170 69 OFFCURVE",
"1187 113 OFFCURVE",
"1187 169 CURVE SMOOTH",
"1187 209 OFFCURVE",
"1167 231 OFFCURVE",
"1144 231 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2018-11-26 05:20:06 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 -133 LINE",
"961 -384 LINE",
"1157 -384 LINE SMOOTH",
"1194 -384 OFFCURVE",
"1213 -370 OFFCURVE",
"1213 -341 CURVE SMOOTH",
"1213 -313 OFFCURVE",
"1194 -299 OFFCURVE",
"1157 -299 CURVE SMOOTH",
"1045 -299 LINE",
"1045 -134 LINE"
);
},
{
closed = 1;
nodes = (
"1045 -134 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 -133 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"523 -33 LINE SMOOTH",
"560 -33 OFFCURVE",
"579 -19 OFFCURVE",
"579 10 CURVE SMOOTH",
"579 38 OFFCURVE",
"560 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 -126 LINE",
"961 -299 LINE",
"849 -299 LINE SMOOTH",
"812 -299 OFFCURVE",
"793 -313 OFFCURVE",
"793 -341 CURVE SMOOTH",
"793 -370 OFFCURVE",
"812 -384 OFFCURVE",
"849 -384 CURVE SMOOTH",
"1046 -384 LINE",
"1046 -127 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2018-11-26 05:20:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1242 182 OFFCURVE",
"1182 244 OFFCURVE",
"1108 244 CURVE SMOOTH",
"1035 244 OFFCURVE",
"975 182 OFFCURVE",
"975 109 CURVE SMOOTH",
"975 36 OFFCURVE",
"1035 -25 OFFCURVE",
"1108 -25 CURVE SMOOTH",
"1182 -25 OFFCURVE",
"1242 36 OFFCURVE",
"1242 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1198 60 OFFCURVE",
"1158 20 OFFCURVE",
"1108 20 CURVE SMOOTH",
"1059 20 OFFCURVE",
"1019 61 OFFCURVE",
"1019 109 CURVE SMOOTH",
"1019 158 OFFCURVE",
"1058 198 OFFCURVE",
"1108 198 CURVE SMOOTH",
"1158 198 OFFCURVE",
"1198 158 OFFCURVE",
"1198 109 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"284 52 LINE SMOOTH",
"247 52 OFFCURVE",
"228 38 OFFCURVE",
"228 10 CURVE SMOOTH",
"228 -19 OFFCURVE",
"247 -33 OFFCURVE",
"284 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"284 52 LINE SMOOTH",
"247 52 OFFCURVE",
"228 38 OFFCURVE",
"228 10 CURVE SMOOTH",
"228 -19 OFFCURVE",
"247 -33 OFFCURVE",
"284 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"483 -33 LINE SMOOTH",
"520 -33 OFFCURVE",
"539 -19 OFFCURVE",
"539 10 CURVE SMOOTH",
"539 38 OFFCURVE",
"520 52 OFFCURVE",
"483 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"909 52 LINE SMOOTH",
"872 52 OFFCURVE",
"853 38 OFFCURVE",
"853 10 CURVE SMOOTH",
"853 -19 OFFCURVE",
"872 -33 OFFCURVE",
"909 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2018-11-26 05:20:40 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
},
{
closed = 1;
nodes = (
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 325 LINE SMOOTH",
"326 296 OFFCURVE",
"347 274 OFFCURVE",
"376 274 CURVE SMOOTH",
"406 274 LINE",
"406 52 LINE",
"334 52 LINE SMOOTH",
"297 52 OFFCURVE",
"278 38 OFFCURVE",
"278 10 CURVE SMOOTH",
"278 -19 OFFCURVE",
"297 -33 OFFCURVE",
"334 -33 CURVE SMOOTH",
"573 -33 LINE SMOOTH",
"610 -33 OFFCURVE",
"629 -19 OFFCURVE",
"629 10 CURVE SMOOTH",
"629 38 OFFCURVE",
"610 52 OFFCURVE",
"573 52 CURVE SMOOTH",
"491 52 LINE",
"491 274 LINE SMOOTH",
"491 303 OFFCURVE",
"469 325 OFFCURVE",
"440 325 CURVE SMOOTH",
"411 325 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE",
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2018-11-26 05:20:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 -290 LINE",
"254 -290 LINE SMOOTH",
"217 -290 OFFCURVE",
"198 -304 OFFCURVE",
"198 -332 CURVE SMOOTH",
"198 -361 OFFCURVE",
"217 -375 OFFCURVE",
"254 -375 CURVE SMOOTH",
"411 -375 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 218 LINE",
"961 -33 LINE",
"1127 -33 LINE SMOOTH",
"1164 -33 OFFCURVE",
"1183 -19 OFFCURVE",
"1183 10 CURVE SMOOTH",
"1183 38 OFFCURVE",
"1164 52 OFFCURVE",
"1127 52 CURVE SMOOTH",
"1045 52 LINE",
"1045 217 LINE"
);
},
{
closed = 1;
nodes = (
"1045 217 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 218 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 -290 LINE",
"254 -290 LINE SMOOTH",
"217 -290 OFFCURVE",
"198 -304 OFFCURVE",
"198 -332 CURVE SMOOTH",
"198 -361 OFFCURVE",
"217 -375 OFFCURVE",
"254 -375 CURVE SMOOTH",
"411 -375 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -375 LINE",
"493 -375 LINE SMOOTH",
"530 -375 OFFCURVE",
"549 -361 OFFCURVE",
"549 -332 CURVE SMOOTH",
"549 -304 OFFCURVE",
"530 -290 OFFCURVE",
"493 -290 CURVE SMOOTH",
"411 -290 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"961 225 LINE",
"961 52 LINE",
"879 52 LINE SMOOTH",
"842 52 OFFCURVE",
"823 38 OFFCURVE",
"823 10 CURVE SMOOTH",
"823 -19 OFFCURVE",
"842 -33 OFFCURVE",
"879 -33 CURVE SMOOTH",
"1046 -33 LINE",
"1046 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
}
);
width = 1229;
}
);
unicode = 12BE;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2018-11-26 05:21:16 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"893 1171 OFFCURVE",
"922 1172 OFFCURVE",
"927 1173 CURVE SMOOTH",
"944 1177 OFFCURVE",
"957 1194 OFFCURVE",
"957 1213 CURVE SMOOTH",
"957 1232 OFFCURVE",
"944 1249 OFFCURVE",
"927 1253 CURVE SMOOTH",
"922 1254 OFFCURVE",
"893 1255 OFFCURVE",
"840 1255 CURVE SMOOTH",
"133 1255 LINE SMOOTH",
"80 1255 OFFCURVE",
"51 1254 OFFCURVE",
"46 1253 CURVE SMOOTH",
"29 1249 OFFCURVE",
"16 1232 OFFCURVE",
"16 1213 CURVE SMOOTH",
"16 1194 OFFCURVE",
"29 1177 OFFCURVE",
"46 1173 CURVE SMOOTH",
"51 1172 OFFCURVE",
"80 1171 OFFCURVE",
"133 1171 CURVE SMOOTH",
"840 1171 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 865 LINE",
"276 865 LINE",
"276 1200 LINE SMOOTH",
"276 1232 OFFCURVE",
"260 1248 OFFCURVE",
"228 1248 CURVE SMOOTH",
"195 1248 OFFCURVE",
"179 1232 OFFCURVE",
"179 1200 CURVE SMOOTH",
"179 768 LINE",
"562 768 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"1045 -134 LINE",
"1045 374 LINE SMOOTH",
"1045 498 OFFCURVE",
"1034 592 OFFCURVE",
"1011 656 CURVE SMOOTH",
"965 784 OFFCURVE",
"847 866 OFFCURVE",
"682 866 CURVE SMOOTH",
"596 866 OFFCURVE",
"526 846 OFFCURVE",
"472 804 CURVE SMOOTH",
"363 722 OFFCURVE",
"326 611 OFFCURVE",
"326 384 CURVE SMOOTH",
"326 225 LINE",
"411 224 LINE",
"411 374 LINE SMOOTH",
"411 473 OFFCURVE",
"419 548 OFFCURVE",
"435 601 CURVE SMOOTH",
"467 707 OFFCURVE",
"564 782 OFFCURVE",
"685 782 CURVE SMOOTH",
"748 782 OFFCURVE",
"801 766 OFFCURVE",
"844 734 CURVE SMOOTH",
"931 670 OFFCURVE",
"961 579 OFFCURVE",
"961 374 CURVE SMOOTH",
"961 -133 LINE"
);
},
{
closed = 1;
nodes = (
"326 225 LINE",
"326 52 LINE",
"214 52 LINE SMOOTH",
"177 52 OFFCURVE",
"158 38 OFFCURVE",
"158 10 CURVE SMOOTH",
"158 -19 OFFCURVE",
"177 -33 OFFCURVE",
"214 -33 CURVE SMOOTH",
"411 -33 LINE",
"411 224 LINE"
);
},
{
closed = 1;
nodes = (
"326 -33 LINE",
"523 -33 LINE SMOOTH",
"560 -33 OFFCURVE",
"579 -19 OFFCURVE",
"579 10 CURVE SMOOTH",
"579 38 OFFCURVE",
"560 52 OFFCURVE",
"523 52 CURVE SMOOTH",
"411 52 LINE",
"411 225 LINE",
"326 224 LINE"
);
},
{
closed = 1;
nodes = (
"276 1177 LINE",
"276 1255 LINE",
"74 1255 LINE SMOOTH",
"34 1255 OFFCURVE",
"18 1237 OFFCURVE",
"18 1213 CURVE SMOOTH",
"18 1188 OFFCURVE",
"34 1170 OFFCURVE",
"74 1170 CURVE SMOOTH",
"187 1170 LINE",
"188 1114 LINE"
);
},
{
closed = 1;
nodes = (
"961 -99 LINE",
"961 -149 LINE",
"865 -149 LINE SMOOTH",
"824 -149 OFFCURVE",
"808 -166 OFFCURVE",
"808 -191 CURVE SMOOTH",
"808 -215 OFFCURVE",
"824 -233 OFFCURVE",
"865 -233 CURVE SMOOTH",
"1045 -233 LINE",
"1045 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1040 -233 LINE",
"1075 -232 OFFCURVE",
"1104 -241 OFFCURVE",
"1125 -259 CURVE SMOOTH",
"1138 -270 OFFCURVE",
"1144 -293 OFFCURVE",
"1144 -330 CURVE SMOOTH",
"1144 -379 OFFCURVE",
"1163 -393 OFFCURVE",
"1187 -393 CURVE SMOOTH",
"1210 -393 OFFCURVE",
"1230 -371 OFFCURVE",
"1230 -331 CURVE SMOOTH",
"1230 -275 OFFCURVE",
"1213 -231 OFFCURVE",
"1179 -200 CURVE",
"1145 -173 OFFCURVE",
"1099 -159 OFFCURVE",
"1040 -158 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12C3;
},
{
glyphname = "wa-ethiopic";
lastChange = "2018-11-26 05:21:31 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2018-11-26 05:22:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"804 -2 LINE",
"839 -1 OFFCURVE",
"1038 -3 OFFCURVE",
"1059 -21 CURVE SMOOTH",
"1072 -32 OFFCURVE",
"1078 -55 OFFCURVE",
"1078 -92 CURVE SMOOTH",
"1078 -141 OFFCURVE",
"1097 -155 OFFCURVE",
"1121 -155 CURVE SMOOTH",
"1144 -155 OFFCURVE",
"1164 -133 OFFCURVE",
"1164 -93 CURVE SMOOTH",
"1164 -37 OFFCURVE",
"1147 7 OFFCURVE",
"1113 38 CURVE",
"1079 65 OFFCURVE",
"1033 79 OFFCURVE",
"974 80 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2018-11-26 09:05:06 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"648 826 OFFCURVE",
"630 842 OFFCURVE",
"605 842 CURVE SMOOTH",
"581 842 OFFCURVE",
"563 826 OFFCURVE",
"563 785 CURVE SMOOTH",
"563 -214 LINE",
"647 -214 LINE",
"648 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"562 -107 LINE",
"562 -388 LINE",
"646 -388 LINE",
"646 -105 LINE"
);
},
{
closed = 1;
nodes = (
"829 -154 OFFCURVE",
"810 -168 OFFCURVE",
"810 -217 CURVE SMOOTH",
"810 -254 OFFCURVE",
"804 -277 OFFCURVE",
"791 -288 CURVE SMOOTH",
"770 -306 OFFCURVE",
"741 -315 OFFCURVE",
"706 -314 CURVE SMOOTH",
"562 -314 LINE",
"562 -390 LINE",
"706 -390 LINE",
"765 -388 OFFCURVE",
"811 -374 OFFCURVE",
"845 -347 CURVE",
"879 -316 OFFCURVE",
"896 -272 OFFCURVE",
"896 -216 CURVE SMOOTH",
"896 -176 OFFCURVE",
"876 -154 OFFCURVE",
"853 -154 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2018-11-26 05:24:12 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"648 826 OFFCURVE",
"630 842 OFFCURVE",
"605 842 CURVE SMOOTH",
"581 842 OFFCURVE",
"563 826 OFFCURVE",
"563 785 CURVE SMOOTH",
"563 -386 LINE",
"647 -386 LINE",
"648 785 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2018-11-26 05:25:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"648 826 OFFCURVE",
"630 842 OFFCURVE",
"605 842 CURVE SMOOTH",
"581 842 OFFCURVE",
"563 826 OFFCURVE",
"563 785 CURVE SMOOTH",
"563 -236 LINE",
"647 -236 LINE",
"648 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"563 -217 LINE",
"563 -327 LINE SMOOTH",
"563 -368 OFFCURVE",
"581 -383 OFFCURVE",
"605 -383 CURVE SMOOTH",
"630 -383 OFFCURVE",
"647 -368 OFFCURVE",
"647 -327 CURVE SMOOTH",
"647 -233 LINE",
"647 -227 LINE"
);
},
{
closed = 1;
nodes = (
"884 -193 OFFCURVE",
"824 -131 OFFCURVE",
"750 -131 CURVE SMOOTH",
"677 -131 OFFCURVE",
"617 -193 OFFCURVE",
"617 -266 CURVE SMOOTH",
"617 -339 OFFCURVE",
"677 -400 OFFCURVE",
"750 -400 CURVE SMOOTH",
"824 -400 OFFCURVE",
"884 -339 OFFCURVE",
"884 -266 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"840 -315 OFFCURVE",
"800 -355 OFFCURVE",
"750 -355 CURVE SMOOTH",
"701 -355 OFFCURVE",
"661 -314 OFFCURVE",
"661 -266 CURVE SMOOTH",
"661 -217 OFFCURVE",
"700 -177 OFFCURVE",
"750 -177 CURVE SMOOTH",
"800 -177 OFFCURVE",
"840 -217 OFFCURVE",
"840 -266 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2018-11-26 05:28:16 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"569 -33 LINE SMOOTH",
"828 -33 OFFCURVE",
"1048 146 OFFCURVE",
"1048 434 CURVE SMOOTH",
"1048 655 OFFCURVE",
"849 866 OFFCURVE",
"554 866 CURVE SMOOTH",
"464 866 LINE SMOOTH",
"189 866 OFFCURVE",
"12 658 OFFCURVE",
"12 439 CURVE SMOOTH",
"12 153 OFFCURVE",
"207 -31 OFFCURVE",
"466 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 37 OFFCURVE",
"111 194 OFFCURVE",
"111 435 CURVE SMOOTH",
"111 620 OFFCURVE",
"243 796 OFFCURVE",
"475 796 CURVE SMOOTH",
"551 796 LINE SMOOTH",
"800 796 OFFCURVE",
"950 618 OFFCURVE",
"950 431 CURVE SMOOTH",
"950 188 OFFCURVE",
"783 37 OFFCURVE",
"564 37 CURVE SMOOTH",
"477 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"577 819 OFFCURVE",
"559 835 OFFCURVE",
"534 835 CURVE SMOOTH",
"510 835 OFFCURVE",
"492 819 OFFCURVE",
"492 778 CURVE SMOOTH",
"492 28 LINE SMOOTH",
"492 -12 OFFCURVE",
"510 -28 OFFCURVE",
"534 -28 CURVE SMOOTH",
"559 -28 OFFCURVE",
"576 -12 OFFCURVE",
"576 28 CURVE SMOOTH",
"577 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"987 502 LINE SMOOTH",
"980 468 OFFCURVE",
"1068 497 OFFCURVE",
"1089 479 CURVE SMOOTH",
"1102 468 OFFCURVE",
"1108 445 OFFCURVE",
"1108 408 CURVE SMOOTH",
"1108 359 OFFCURVE",
"1127 345 OFFCURVE",
"1151 345 CURVE SMOOTH",
"1174 345 OFFCURVE",
"1194 367 OFFCURVE",
"1194 407 CURVE SMOOTH",
"1194 463 OFFCURVE",
"1177 507 OFFCURVE",
"1143 538 CURVE",
"1109 565 OFFCURVE",
"1063 579 OFFCURVE",
"1004 580 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2018-11-26 05:29:06 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"649 -33 LINE SMOOTH",
"908 -33 OFFCURVE",
"1198 146 OFFCURVE",
"1198 434 CURVE SMOOTH",
"1198 655 OFFCURVE",
"929 866 OFFCURVE",
"634 866 CURVE SMOOTH",
"544 866 LINE SMOOTH",
"269 866 OFFCURVE",
"22 658 OFFCURVE",
"22 439 CURVE SMOOTH",
"22 153 OFFCURVE",
"287 -31 OFFCURVE",
"546 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"338 37 OFFCURVE",
"121 194 OFFCURVE",
"121 435 CURVE SMOOTH",
"121 620 OFFCURVE",
"323 796 OFFCURVE",
"555 796 CURVE SMOOTH",
"631 796 LINE SMOOTH",
"880 796 OFFCURVE",
"1100 618 OFFCURVE",
"1100 431 CURVE SMOOTH",
"1100 188 OFFCURVE",
"863 37 OFFCURVE",
"644 37 CURVE SMOOTH",
"557 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 819 OFFCURVE",
"639 835 OFFCURVE",
"614 835 CURVE SMOOTH",
"590 835 OFFCURVE",
"572 819 OFFCURVE",
"572 778 CURVE SMOOTH",
"572 28 LINE SMOOTH",
"572 -12 OFFCURVE",
"590 -28 OFFCURVE",
"614 -28 CURVE SMOOTH",
"639 -28 OFFCURVE",
"656 -12 OFFCURVE",
"656 28 CURVE SMOOTH",
"657 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"573 781 LINE",
"573 -59 LINE SMOOTH",
"573 -196 OFFCURVE",
"477 -302 OFFCURVE",
"334 -302 CURVE SMOOTH",
"293 -302 LINE",
"287 -386 LINE",
"336 -386 LINE SMOOTH",
"392 -386 OFFCURVE",
"440 -376 OFFCURVE",
"481 -355 CURVE SMOOTH",
"598 -295 OFFCURVE",
"657 -202 OFFCURVE",
"657 -59 CURVE SMOOTH",
"657 866 LINE"
);
},
{
closed = 1;
nodes = (
"296 -302 LINE",
"191 -302 LINE SMOOTH",
"151 -302 OFFCURVE",
"135 -320 OFFCURVE",
"135 -345 CURVE SMOOTH",
"135 -370 OFFCURVE",
"151 -387 OFFCURVE",
"191 -387 CURVE SMOOTH",
"296 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2018-11-26 05:30:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"705 -33 LINE SMOOTH",
"964 -33 OFFCURVE",
"1194 146 OFFCURVE",
"1194 434 CURVE SMOOTH",
"1194 655 OFFCURVE",
"985 866 OFFCURVE",
"690 866 CURVE SMOOTH",
"600 866 LINE SMOOTH",
"325 866 OFFCURVE",
"148 658 OFFCURVE",
"148 439 CURVE SMOOTH",
"148 153 OFFCURVE",
"343 -31 OFFCURVE",
"602 -33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"394 37 OFFCURVE",
"247 194 OFFCURVE",
"247 435 CURVE SMOOTH",
"247 620 OFFCURVE",
"379 796 OFFCURVE",
"611 796 CURVE SMOOTH",
"687 796 LINE SMOOTH",
"936 796 OFFCURVE",
"1096 618 OFFCURVE",
"1096 431 CURVE SMOOTH",
"1096 188 OFFCURVE",
"919 37 OFFCURVE",
"700 37 CURVE SMOOTH",
"613 37 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"713 819 OFFCURVE",
"695 835 OFFCURVE",
"670 835 CURVE SMOOTH",
"646 835 OFFCURVE",
"628 819 OFFCURVE",
"628 778 CURVE SMOOTH",
"628 28 LINE SMOOTH",
"628 -12 OFFCURVE",
"646 -28 OFFCURVE",
"670 -28 CURVE SMOOTH",
"695 -28 OFFCURVE",
"712 -12 OFFCURVE",
"712 28 CURVE SMOOTH",
"713 778 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"629 781 LINE",
"629 -59 LINE SMOOTH",
"629 -196 OFFCURVE",
"533 -302 OFFCURVE",
"390 -302 CURVE SMOOTH",
"349 -302 LINE",
"343 -386 LINE",
"392 -386 LINE SMOOTH",
"448 -386 OFFCURVE",
"496 -376 OFFCURVE",
"537 -355 CURVE SMOOTH",
"654 -295 OFFCURVE",
"713 -202 OFFCURVE",
"713 -59 CURVE SMOOTH",
"713 866 LINE"
);
},
{
closed = 1;
nodes = (
"352 -302 LINE",
"247 -302 LINE SMOOTH",
"207 -302 OFFCURVE",
"191 -320 OFFCURVE",
"191 -345 CURVE SMOOTH",
"191 -370 OFFCURVE",
"207 -387 OFFCURVE",
"247 -387 CURVE SMOOTH",
"352 -387 LINE"
);
},
{
closed = 1;
nodes = (
"139 481 OFFCURVE",
"93 467 OFFCURVE",
"59 440 CURVE",
"25 409 OFFCURVE",
"8 365 OFFCURVE",
"8 309 CURVE SMOOTH",
"8 269 OFFCURVE",
"28 247 OFFCURVE",
"51 247 CURVE SMOOTH",
"75 247 OFFCURVE",
"94 261 OFFCURVE",
"94 310 CURVE SMOOTH",
"94 347 OFFCURVE",
"100 370 OFFCURVE",
"113 381 CURVE SMOOTH",
"134 399 OFFCURVE",
"163 401 OFFCURVE",
"198 400 CURVE",
"198 482 LINE"
);
}
);
width = 1229;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2018-11-26 05:56:57 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2018-11-26 05:57:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 229 LINE",
"1026 439 LINE",
"1085 440 OFFCURVE",
"1131 454 OFFCURVE",
"1165 481 CURVE",
"1199 512 OFFCURVE",
"1216 556 OFFCURVE",
"1216 612 CURVE SMOOTH",
"1216 652 OFFCURVE",
"1196 674 OFFCURVE",
"1173 674 CURVE SMOOTH",
"1149 674 OFFCURVE",
"1130 660 OFFCURVE",
"1130 611 CURVE SMOOTH",
"1130 574 OFFCURVE",
"1124 551 OFFCURVE",
"1111 540 CURVE SMOOTH",
"1090 522 OFFCURVE",
"1061 513 OFFCURVE",
"1026 514 CURVE",
"1026 646 LINE",
"975 646 LINE"
);
}
);
width = 1229;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2018-11-26 09:05:57 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1039 688 OFFCURVE",
"829 896 OFFCURVE",
"570 896 CURVE SMOOTH",
"309 896 OFFCURVE",
"100 687 OFFCURVE",
"100 431 CURVE SMOOTH",
"100 176 OFFCURVE",
"309 -33 OFFCURVE",
"570 -33 CURVE SMOOTH",
"829 -33 OFFCURVE",
"1039 175 OFFCURVE",
"1039 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"954 222 OFFCURVE",
"782 51 OFFCURVE",
"569 51 CURVE SMOOTH",
"356 51 OFFCURVE",
"184 223 OFFCURVE",
"184 431 CURVE SMOOTH",
"184 640 OFFCURVE",
"356 811 OFFCURVE",
"569 811 CURVE SMOOTH",
"782 811 OFFCURVE",
"954 642 OFFCURVE",
"954 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1042 826 OFFCURVE",
"1024 842 OFFCURVE",
"999 842 CURVE SMOOTH",
"975 842 OFFCURVE",
"957 826 OFFCURVE",
"957 785 CURVE SMOOTH",
"957 -214 LINE",
"1041 -214 LINE",
"1042 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"958 -103 LINE",
"958 -384 LINE",
"1042 -384 LINE",
"1042 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1225 -150 OFFCURVE",
"1206 -164 OFFCURVE",
"1206 -213 CURVE SMOOTH",
"1206 -250 OFFCURVE",
"1200 -273 OFFCURVE",
"1187 -284 CURVE SMOOTH",
"1166 -302 OFFCURVE",
"1137 -311 OFFCURVE",
"1102 -310 CURVE SMOOTH",
"958 -310 LINE",
"958 -386 LINE",
"1102 -386 LINE",
"1161 -384 OFFCURVE",
"1207 -370 OFFCURVE",
"1241 -343 CURVE",
"1275 -312 OFFCURVE",
"1292 -268 OFFCURVE",
"1292 -212 CURVE SMOOTH",
"1292 -172 OFFCURVE",
"1272 -150 OFFCURVE",
"1249 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2018-11-26 05:59:31 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1087 826 OFFCURVE",
"1069 842 OFFCURVE",
"1044 842 CURVE SMOOTH",
"1020 842 OFFCURVE",
"1002 826 OFFCURVE",
"1002 785 CURVE SMOOTH",
"1002 -314 LINE",
"1086 -314 LINE",
"1087 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1003 -234 LINE",
"1003 -344 LINE SMOOTH",
"1003 -385 OFFCURVE",
"1021 -400 OFFCURVE",
"1045 -400 CURVE SMOOTH",
"1070 -400 OFFCURVE",
"1087 -385 OFFCURVE",
"1087 -344 CURVE SMOOTH",
"1087 -250 LINE",
"1087 -244 LINE"
);
}
);
width = 1229;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2018-11-26 06:00:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1087 826 OFFCURVE",
"1069 842 OFFCURVE",
"1044 842 CURVE SMOOTH",
"1020 842 OFFCURVE",
"1002 826 OFFCURVE",
"1002 785 CURVE SMOOTH",
"1002 -314 LINE",
"1086 -314 LINE",
"1087 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1003 -234 LINE",
"1003 -344 LINE SMOOTH",
"1003 -385 OFFCURVE",
"1021 -400 OFFCURVE",
"1045 -400 CURVE SMOOTH",
"1070 -400 OFFCURVE",
"1087 -385 OFFCURVE",
"1087 -344 CURVE SMOOTH",
"1087 -250 LINE",
"1087 -244 LINE"
);
},
{
closed = 1;
nodes = (
"1285 -196 OFFCURVE",
"1225 -134 OFFCURVE",
"1151 -134 CURVE SMOOTH",
"1078 -134 OFFCURVE",
"1018 -196 OFFCURVE",
"1018 -269 CURVE SMOOTH",
"1018 -342 OFFCURVE",
"1078 -403 OFFCURVE",
"1151 -403 CURVE SMOOTH",
"1225 -403 OFFCURVE",
"1285 -342 OFFCURVE",
"1285 -269 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1241 -318 OFFCURVE",
"1201 -358 OFFCURVE",
"1151 -358 CURVE SMOOTH",
"1102 -358 OFFCURVE",
"1062 -317 OFFCURVE",
"1062 -269 CURVE SMOOTH",
"1062 -220 OFFCURVE",
"1101 -180 OFFCURVE",
"1151 -180 CURVE SMOOTH",
"1201 -180 OFFCURVE",
"1241 -220 OFFCURVE",
"1241 -269 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2018-11-26 06:00:59 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"654 880 LINE",
"654 1204 LINE SMOOTH",
"654 1245 OFFCURVE",
"637 1260 OFFCURVE",
"612 1260 CURVE SMOOTH",
"588 1260 OFFCURVE",
"570 1245 OFFCURVE",
"570 1204 CURVE SMOOTH",
"570 864 LINE",
"654 874 LINE"
);
}
);
width = 1229;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2018-11-26 06:01:45 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"593 22 LINE",
"593 -59 LINE SMOOTH",
"593 -196 OFFCURVE",
"497 -302 OFFCURVE",
"354 -302 CURVE SMOOTH",
"313 -302 LINE",
"307 -386 LINE",
"356 -386 LINE SMOOTH",
"412 -386 OFFCURVE",
"460 -376 OFFCURVE",
"501 -355 CURVE SMOOTH",
"618 -295 OFFCURVE",
"677 -202 OFFCURVE",
"677 -59 CURVE SMOOTH",
"677 20 LINE"
);
},
{
closed = 1;
nodes = (
"316 -302 LINE",
"211 -302 LINE SMOOTH",
"171 -302 OFFCURVE",
"155 -320 OFFCURVE",
"155 -345 CURVE SMOOTH",
"155 -370 OFFCURVE",
"171 -387 OFFCURVE",
"211 -387 CURVE SMOOTH",
"316 -387 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2018-11-26 06:04:46 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"901 84 LINE",
"826 84 LINE SMOOTH",
"786 84 OFFCURVE",
"770 67 OFFCURVE",
"770 42 CURVE SMOOTH",
"770 18 OFFCURVE",
"786 0 OFFCURVE",
"826 0 CURVE SMOOTH",
"1050 0 LINE SMOOTH",
"1090 0 OFFCURVE",
"1106 18 OFFCURVE",
"1106 42 CURVE SMOOTH",
"1106 67 OFFCURVE",
"1090 84 OFFCURVE",
"1050 84 CURVE SMOOTH",
"985 84 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2018-11-26 06:05:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"901 84 LINE",
"826 84 LINE SMOOTH",
"786 84 OFFCURVE",
"770 67 OFFCURVE",
"770 42 CURVE SMOOTH",
"770 18 OFFCURVE",
"786 0 OFFCURVE",
"826 0 CURVE SMOOTH",
"1050 0 LINE SMOOTH",
"1090 0 OFFCURVE",
"1106 18 OFFCURVE",
"1106 42 CURVE SMOOTH",
"1106 67 OFFCURVE",
"1090 84 OFFCURVE",
"1050 84 CURVE SMOOTH",
"985 84 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
},
{
closed = 1;
nodes = (
"1024 414 OFFCURVE",
"1070 428 OFFCURVE",
"1104 455 CURVE",
"1138 486 OFFCURVE",
"1155 530 OFFCURVE",
"1155 586 CURVE SMOOTH",
"1155 626 OFFCURVE",
"1135 648 OFFCURVE",
"1112 648 CURVE SMOOTH",
"1088 648 OFFCURVE",
"1069 634 OFFCURVE",
"1069 585 CURVE SMOOTH",
"1069 548 OFFCURVE",
"1063 525 OFFCURVE",
"1050 514 CURVE SMOOTH",
"1029 496 OFFCURVE",
"1000 494 OFFCURVE",
"965 495 CURVE",
"965 413 LINE"
);
}
);
width = 1229;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2018-11-26 09:07:08 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"184 779 LINE",
"184 0 LINE",
"363 0 LINE",
"403 0 OFFCURVE",
"419 18 OFFCURVE",
"419 42 CURVE SMOOTH",
"419 67 OFFCURVE",
"403 84 OFFCURVE",
"363 84 CURVE SMOOTH",
"268 84 LINE",
"268 864 LINE"
);
},
{
closed = 1;
nodes = (
"831 84 LINE",
"831 0 LINE",
"1005 0 LINE",
"1021 81 LINE",
"915 81 LINE",
"915 779 LINE",
"1028 779 LINE SMOOTH",
"1068 779 OFFCURVE",
"1084 797 OFFCURVE",
"1084 822 CURVE SMOOTH",
"1084 846 OFFCURVE",
"1068 864 OFFCURVE",
"1028 864 CURVE SMOOTH",
"831 864 LINE"
);
},
{
closed = 1;
nodes = (
"258 492 LINE",
"258 407 LINE",
"867 407 LINE",
"867 492 LINE"
);
},
{
closed = 1;
nodes = (
"1064 1 OFFCURVE",
"1109 14 OFFCURVE",
"1143 41 CURVE",
"1177 72 OFFCURVE",
"1194 116 OFFCURVE",
"1194 172 CURVE SMOOTH",
"1194 212 OFFCURVE",
"1174 234 OFFCURVE",
"1151 234 CURVE SMOOTH",
"1127 234 OFFCURVE",
"1108 220 OFFCURVE",
"1108 171 CURVE SMOOTH",
"1108 134 OFFCURVE",
"1102 111 OFFCURVE",
"1089 100 CURVE SMOOTH",
"1068 82 OFFCURVE",
"1040 80 OFFCURVE",
"1005 81 CURVE",
"1005 0 LINE"
);
}
);
width = 1229;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2018-11-26 06:07:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"901 -302 LINE",
"826 -302 LINE SMOOTH",
"786 -302 OFFCURVE",
"770 -319 OFFCURVE",
"770 -344 CURVE SMOOTH",
"770 -368 OFFCURVE",
"786 -386 OFFCURVE",
"826 -386 CURVE SMOOTH",
"1050 -386 LINE SMOOTH",
"1090 -386 OFFCURVE",
"1106 -368 OFFCURVE",
"1106 -344 CURVE SMOOTH",
"1106 -319 OFFCURVE",
"1090 -302 OFFCURVE",
"1050 -302 CURVE SMOOTH",
"985 -302 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2018-11-26 06:08:31 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
},
{
closed = 1;
nodes = (
"985 105 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE",
"901 96 LINE"
);
},
{
closed = 1;
nodes = (
"901 156 LINE",
"901 46 LINE SMOOTH",
"901 5 OFFCURVE",
"919 -10 OFFCURVE",
"943 -10 CURVE SMOOTH",
"968 -10 OFFCURVE",
"985 5 OFFCURVE",
"985 46 CURVE SMOOTH",
"985 140 LINE",
"985 146 LINE"
);
},
{
closed = 1;
nodes = (
"1173 199 OFFCURVE",
"1113 261 OFFCURVE",
"1039 261 CURVE SMOOTH",
"966 261 OFFCURVE",
"906 199 OFFCURVE",
"906 126 CURVE SMOOTH",
"906 53 OFFCURVE",
"966 -8 OFFCURVE",
"1039 -8 CURVE SMOOTH",
"1113 -8 OFFCURVE",
"1173 53 OFFCURVE",
"1173 126 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1129 77 OFFCURVE",
"1089 37 OFFCURVE",
"1039 37 CURVE SMOOTH",
"990 37 OFFCURVE",
"950 78 OFFCURVE",
"950 126 CURVE SMOOTH",
"950 175 OFFCURVE",
"989 215 OFFCURVE",
"1039 215 CURVE SMOOTH",
"1089 215 OFFCURVE",
"1129 175 OFFCURVE",
"1129 126 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2018-11-26 06:10:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"101 864 LINE SMOOTH",
"61 864 OFFCURVE",
"45 846 OFFCURVE",
"45 822 CURVE SMOOTH",
"45 797 OFFCURVE",
"61 779 OFFCURVE",
"101 779 CURVE SMOOTH",
"374 779 LINE",
"374 84 LINE",
"326 84 LINE SMOOTH",
"286 84 OFFCURVE",
"270 67 OFFCURVE",
"270 42 CURVE SMOOTH",
"270 18 OFFCURVE",
"286 0 OFFCURVE",
"326 0 CURVE SMOOTH",
"521 0 LINE SMOOTH",
"561 0 OFFCURVE",
"577 18 OFFCURVE",
"577 42 CURVE SMOOTH",
"577 67 OFFCURVE",
"561 84 OFFCURVE",
"521 84 CURVE SMOOTH",
"458 84 LINE",
"458 864 LINE"
);
},
{
closed = 1;
nodes = (
"901 84 LINE",
"826 84 LINE SMOOTH",
"786 84 OFFCURVE",
"770 67 OFFCURVE",
"770 42 CURVE SMOOTH",
"770 18 OFFCURVE",
"786 0 OFFCURVE",
"826 0 CURVE SMOOTH",
"1050 0 LINE SMOOTH",
"1090 0 OFFCURVE",
"1106 18 OFFCURVE",
"1106 42 CURVE SMOOTH",
"1106 67 OFFCURVE",
"1090 84 OFFCURVE",
"1050 84 CURVE SMOOTH",
"985 84 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE"
);
},
{
closed = 1;
nodes = (
"448 492 LINE",
"448 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
},
{
closed = 1;
nodes = (
"42 864 LINE",
"42 760 LINE SMOOTH",
"42 719 OFFCURVE",
"60 704 OFFCURVE",
"84 704 CURVE SMOOTH",
"109 704 OFFCURVE",
"126 719 OFFCURVE",
"126 760 CURVE SMOOTH",
"126 864 LINE"
);
}
);
width = 1229;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2018-11-26 06:10:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 -302 LINE",
"159 -302 LINE SMOOTH",
"119 -302 OFFCURVE",
"103 -319 OFFCURVE",
"103 -344 CURVE SMOOTH",
"103 -368 OFFCURVE",
"119 -386 OFFCURVE",
"159 -386 CURVE SMOOTH",
"433 -386 LINE SMOOTH",
"473 -386 OFFCURVE",
"489 -368 OFFCURVE",
"489 -344 CURVE SMOOTH",
"489 -319 OFFCURVE",
"473 -302 OFFCURVE",
"433 -302 CURVE SMOOTH",
"338 -302 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"901 84 LINE",
"826 84 LINE SMOOTH",
"786 84 OFFCURVE",
"770 67 OFFCURVE",
"770 42 CURVE SMOOTH",
"770 18 OFFCURVE",
"786 0 OFFCURVE",
"826 0 CURVE SMOOTH",
"1050 0 LINE SMOOTH",
"1090 0 OFFCURVE",
"1106 18 OFFCURVE",
"1106 42 CURVE SMOOTH",
"1106 67 OFFCURVE",
"1090 84 OFFCURVE",
"1050 84 CURVE SMOOTH",
"985 84 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2018-11-26 06:11:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"141 864 LINE SMOOTH",
"101 864 OFFCURVE",
"85 846 OFFCURVE",
"85 822 CURVE SMOOTH",
"85 797 OFFCURVE",
"101 779 OFFCURVE",
"141 779 CURVE SMOOTH",
"254 779 LINE",
"254 84 LINE",
"159 84 LINE SMOOTH",
"119 84 OFFCURVE",
"103 67 OFFCURVE",
"103 42 CURVE SMOOTH",
"103 18 OFFCURVE",
"119 0 OFFCURVE",
"159 0 CURVE SMOOTH",
"433 0 LINE SMOOTH",
"473 0 OFFCURVE",
"489 18 OFFCURVE",
"489 42 CURVE SMOOTH",
"489 67 OFFCURVE",
"473 84 OFFCURVE",
"433 84 CURVE SMOOTH",
"338 84 LINE",
"338 864 LINE"
);
},
{
closed = 1;
nodes = (
"328 492 LINE",
"328 407 LINE",
"937 407 LINE",
"937 492 LINE"
);
},
{
closed = 1;
nodes = (
"985 -165 LINE",
"985 779 LINE",
"1098 779 LINE SMOOTH",
"1138 779 OFFCURVE",
"1154 797 OFFCURVE",
"1154 822 CURVE SMOOTH",
"1154 846 OFFCURVE",
"1138 864 OFFCURVE",
"1098 864 CURVE SMOOTH",
"901 864 LINE",
"901 -170 LINE"
);
},
{
closed = 1;
nodes = (
"901 -96 LINE",
"901 -146 LINE",
"804 -146 LINE SMOOTH",
"763 -146 OFFCURVE",
"747 -163 OFFCURVE",
"747 -188 CURVE SMOOTH",
"747 -212 OFFCURVE",
"763 -230 OFFCURVE",
"804 -230 CURVE SMOOTH",
"986 -230 LINE",
"985 -99 LINE"
);
},
{
closed = 1;
nodes = (
"979 -230 LINE",
"1014 -229 OFFCURVE",
"1043 -238 OFFCURVE",
"1064 -256 CURVE SMOOTH",
"1077 -267 OFFCURVE",
"1083 -290 OFFCURVE",
"1083 -327 CURVE SMOOTH",
"1083 -376 OFFCURVE",
"1102 -390 OFFCURVE",
"1126 -390 CURVE SMOOTH",
"1149 -390 OFFCURVE",
"1169 -368 OFFCURVE",
"1169 -328 CURVE SMOOTH",
"1169 -272 OFFCURVE",
"1152 -228 OFFCURVE",
"1118 -197 CURVE",
"1084 -170 OFFCURVE",
"1038 -156 OFFCURVE",
"979 -155 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2018-11-26 06:13:10 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"970 0 LINE SMOOTH",
"1010 0 OFFCURVE",
"1026 18 OFFCURVE",
"1026 42 CURVE SMOOTH",
"1026 67 OFFCURVE",
"1010 84 OFFCURVE",
"970 84 CURVE SMOOTH",
"905 84 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2018-11-26 06:14:43 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"970 0 LINE SMOOTH",
"1010 0 OFFCURVE",
"1026 18 OFFCURVE",
"1026 42 CURVE SMOOTH",
"1026 67 OFFCURVE",
"1010 84 OFFCURVE",
"970 84 CURVE SMOOTH",
"905 84 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
},
{
closed = 1;
nodes = (
"953 415 OFFCURVE",
"999 429 OFFCURVE",
"1033 456 CURVE",
"1067 487 OFFCURVE",
"1084 531 OFFCURVE",
"1084 587 CURVE SMOOTH",
"1084 627 OFFCURVE",
"1064 649 OFFCURVE",
"1041 649 CURVE SMOOTH",
"1017 649 OFFCURVE",
"998 635 OFFCURVE",
"998 586 CURVE SMOOTH",
"998 549 OFFCURVE",
"992 526 OFFCURVE",
"979 515 CURVE SMOOTH",
"958 497 OFFCURVE",
"929 495 OFFCURVE",
"894 496 CURVE",
"894 414 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2018-11-26 09:06:34 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 0 LINE",
"443 0 LINE",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"970 0 LINE SMOOTH",
"1010 0 OFFCURVE",
"1026 18 OFFCURVE",
"1026 42 CURVE SMOOTH",
"1026 67 OFFCURVE",
"1030 84 OFFCURVE",
"990 84 CURVE",
"905 84 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
},
{
closed = 1;
nodes = (
"1047 3 OFFCURVE",
"1093 17 OFFCURVE",
"1127 44 CURVE",
"1161 75 OFFCURVE",
"1178 119 OFFCURVE",
"1178 175 CURVE SMOOTH",
"1178 215 OFFCURVE",
"1158 237 OFFCURVE",
"1135 237 CURVE SMOOTH",
"1111 237 OFFCURVE",
"1092 223 OFFCURVE",
"1092 174 CURVE SMOOTH",
"1092 137 OFFCURVE",
"1086 114 OFFCURVE",
"1073 103 CURVE SMOOTH",
"1052 85 OFFCURVE",
"1023 83 OFFCURVE",
"988 84 CURVE",
"988 2 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2018-11-26 06:16:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 -302 LINE",
"816 -302 LINE SMOOTH",
"776 -302 OFFCURVE",
"760 -319 OFFCURVE",
"760 -344 CURVE SMOOTH",
"760 -368 OFFCURVE",
"776 -386 OFFCURVE",
"816 -386 CURVE SMOOTH",
"970 -386 LINE SMOOTH",
"1010 -386 OFFCURVE",
"1026 -368 OFFCURVE",
"1026 -344 CURVE SMOOTH",
"1026 -319 OFFCURVE",
"1010 -302 OFFCURVE",
"970 -302 CURVE SMOOTH",
"905 -302 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2018-11-26 06:17:37 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"913 0 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
},
{
closed = 1;
nodes = (
"1102 203 OFFCURVE",
"1042 265 OFFCURVE",
"968 265 CURVE SMOOTH",
"895 265 OFFCURVE",
"835 203 OFFCURVE",
"835 130 CURVE SMOOTH",
"835 57 OFFCURVE",
"895 -4 OFFCURVE",
"968 -4 CURVE SMOOTH",
"1042 -4 OFFCURVE",
"1102 57 OFFCURVE",
"1102 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1058 81 OFFCURVE",
"1018 41 OFFCURVE",
"968 41 CURVE SMOOTH",
"919 41 OFFCURVE",
"879 82 OFFCURVE",
"879 130 CURVE SMOOTH",
"879 179 OFFCURVE",
"918 219 OFFCURVE",
"968 219 CURVE SMOOTH",
"1018 219 OFFCURVE",
"1058 179 OFFCURVE",
"1058 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2018-11-26 06:19:37 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 858 LINE SMOOTH",
"31 858 OFFCURVE",
"15 840 OFFCURVE",
"15 816 CURVE SMOOTH",
"15 791 OFFCURVE",
"31 773 OFFCURVE",
"71 773 CURVE SMOOTH",
"344 773 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 858 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"970 0 LINE SMOOTH",
"1010 0 OFFCURVE",
"1026 18 OFFCURVE",
"1026 42 CURVE SMOOTH",
"1026 67 OFFCURVE",
"1010 84 OFFCURVE",
"970 84 CURVE SMOOTH",
"905 84 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
},
{
closed = 1;
nodes = (
"223 811 LINE",
"285 811 LINE",
"285 1208 LINE",
"223 1208 LINE"
);
},
{
closed = 1;
nodes = (
"401 1174 OFFCURVE",
"430 1175 OFFCURVE",
"435 1176 CURVE SMOOTH",
"452 1179 OFFCURVE",
"465 1197 OFFCURVE",
"465 1216 CURVE SMOOTH",
"465 1235 OFFCURVE",
"452 1253 OFFCURVE",
"435 1256 CURVE SMOOTH",
"430 1257 OFFCURVE",
"401 1258 OFFCURVE",
"348 1258 CURVE SMOOTH",
"114 1258 LINE SMOOTH",
"61 1258 OFFCURVE",
"32 1257 OFFCURVE",
"27 1256 CURVE SMOOTH",
"10 1252 OFFCURVE",
"-3 1235 OFFCURVE",
"-3 1216 CURVE SMOOTH",
"-3 1197 OFFCURVE",
"10 1180 OFFCURVE",
"27 1176 CURVE SMOOTH",
"32 1175 OFFCURVE",
"61 1174 OFFCURVE",
"114 1174 CURVE SMOOTH",
"348 1174 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2018-11-26 06:20:20 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 -302 LINE",
"249 -302 LINE SMOOTH",
"209 -302 OFFCURVE",
"193 -319 OFFCURVE",
"193 -344 CURVE SMOOTH",
"193 -368 OFFCURVE",
"209 -386 OFFCURVE",
"249 -386 CURVE SMOOTH",
"443 -386 LINE SMOOTH",
"483 -386 OFFCURVE",
"499 -368 OFFCURVE",
"499 -344 CURVE SMOOTH",
"499 -319 OFFCURVE",
"483 -302 OFFCURVE",
"443 -302 CURVE SMOOTH",
"428 -302 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"821 84 LINE",
"816 84 LINE SMOOTH",
"776 84 OFFCURVE",
"760 67 OFFCURVE",
"760 42 CURVE SMOOTH",
"760 18 OFFCURVE",
"776 0 OFFCURVE",
"816 0 CURVE SMOOTH",
"970 0 LINE SMOOTH",
"1010 0 OFFCURVE",
"1026 18 OFFCURVE",
"1026 42 CURVE SMOOTH",
"1026 67 OFFCURVE",
"1010 84 OFFCURVE",
"970 84 CURVE SMOOTH",
"905 84 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2018-11-26 06:21:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"71 864 LINE SMOOTH",
"31 864 OFFCURVE",
"15 846 OFFCURVE",
"15 822 CURVE SMOOTH",
"15 797 OFFCURVE",
"31 779 OFFCURVE",
"71 779 CURVE SMOOTH",
"344 779 LINE",
"344 84 LINE",
"249 84 LINE SMOOTH",
"209 84 OFFCURVE",
"193 67 OFFCURVE",
"193 42 CURVE SMOOTH",
"193 18 OFFCURVE",
"209 0 OFFCURVE",
"249 0 CURVE SMOOTH",
"443 0 LINE SMOOTH",
"483 0 OFFCURVE",
"499 18 OFFCURVE",
"499 42 CURVE SMOOTH",
"499 67 OFFCURVE",
"483 84 OFFCURVE",
"443 84 CURVE SMOOTH",
"428 84 LINE",
"428 864 LINE"
);
},
{
closed = 1;
nodes = (
"418 492 LINE",
"418 407 LINE",
"857 407 LINE",
"857 492 LINE"
);
},
{
closed = 1;
nodes = (
"905 -214 LINE",
"905 779 LINE",
"1148 779 LINE SMOOTH",
"1188 779 OFFCURVE",
"1204 797 OFFCURVE",
"1204 822 CURVE SMOOTH",
"1204 846 OFFCURVE",
"1188 864 OFFCURVE",
"1148 864 CURVE SMOOTH",
"821 864 LINE",
"821 -201 LINE"
);
},
{
closed = 1;
nodes = (
"821 -100 LINE",
"821 -150 LINE",
"724 -150 LINE SMOOTH",
"683 -150 OFFCURVE",
"667 -167 OFFCURVE",
"667 -192 CURVE SMOOTH",
"667 -216 OFFCURVE",
"683 -234 OFFCURVE",
"724 -234 CURVE SMOOTH",
"906 -234 LINE",
"905 -103 LINE"
);
},
{
closed = 1;
nodes = (
"899 -234 LINE",
"934 -233 OFFCURVE",
"963 -242 OFFCURVE",
"984 -260 CURVE SMOOTH",
"997 -271 OFFCURVE",
"1003 -294 OFFCURVE",
"1003 -331 CURVE SMOOTH",
"1003 -380 OFFCURVE",
"1022 -394 OFFCURVE",
"1046 -394 CURVE SMOOTH",
"1069 -394 OFFCURVE",
"1089 -372 OFFCURVE",
"1089 -332 CURVE SMOOTH",
"1089 -276 OFFCURVE",
"1072 -232 OFFCURVE",
"1038 -201 CURVE",
"1004 -174 OFFCURVE",
"958 -160 OFFCURVE",
"899 -159 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2018-11-26 09:31:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"821 877 OFFCURVE",
"745 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834 OFFCURVE",
"298 713 CURVE",
"298 866 LINE",
"214 866 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -319 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -319 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 208 LINE",
"997 208 LINE SMOOTH",
"1061 208 OFFCURVE",
"1111 351 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 761 OFFCURVE",
"891 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 464 LINE SMOOTH",
"296 656 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"866 811 OFFCURVE",
"1026 652 OFFCURVE",
"1026 459 CURVE SMOOTH",
"1026 395 OFFCURVE",
"999 289 OFFCURVE",
"958 289 CURVE SMOOTH",
"298 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2018-11-26 09:31:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"289 -187 LINE",
"289 -55 LINE",
"324 -54 OFFCURVE",
"353 -63 OFFCURVE",
"374 -81 CURVE SMOOTH",
"387 -92 OFFCURVE",
"393 -115 OFFCURVE",
"393 -152 CURVE SMOOTH",
"393 -201 OFFCURVE",
"412 -215 OFFCURVE",
"436 -215 CURVE SMOOTH",
"459 -215 OFFCURVE",
"479 -193 OFFCURVE",
"479 -153 CURVE SMOOTH",
"479 -97 OFFCURVE",
"462 -53 OFFCURVE",
"428 -22 CURVE",
"394 5 OFFCURVE",
"348 19 OFFCURVE",
"289 20 CURVE",
"289 230 LINE",
"238 -187 LINE"
);
},
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"821 877 OFFCURVE",
"745 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834 OFFCURVE",
"298 713 CURVE",
"298 866 LINE",
"214 866 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -319 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -319 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 208 LINE",
"997 208 LINE SMOOTH",
"1061 208 OFFCURVE",
"1111 351 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 761 OFFCURVE",
"891 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 464 LINE SMOOTH",
"296 656 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"866 811 OFFCURVE",
"1026 652 OFFCURVE",
"1026 459 CURVE SMOOTH",
"1026 395 OFFCURVE",
"999 289 OFFCURVE",
"958 289 CURVE SMOOTH",
"298 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2018-11-26 09:31:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"289 -187 LINE",
"289 -55 LINE",
"324 -54 OFFCURVE",
"353 -63 OFFCURVE",
"374 -81 CURVE SMOOTH",
"387 -92 OFFCURVE",
"393 -115 OFFCURVE",
"393 -152 CURVE SMOOTH",
"393 -201 OFFCURVE",
"412 -215 OFFCURVE",
"436 -215 CURVE SMOOTH",
"459 -215 OFFCURVE",
"479 -193 OFFCURVE",
"479 -153 CURVE SMOOTH",
"479 -97 OFFCURVE",
"462 -53 OFFCURVE",
"428 -22 CURVE",
"394 5 OFFCURVE",
"348 19 OFFCURVE",
"289 20 CURVE",
"289 230 LINE",
"238 -187 LINE"
);
},
{
closed = 1;
nodes = (
"393 -179 LINE SMOOTH",
"393 -208 OFFCURVE",
"415 -230 OFFCURVE",
"444 -230 CURVE SMOOTH",
"735 -230 LINE",
"735 -147 LINE",
"393 -145 LINE"
);
},
{
closed = 1;
nodes = (
"724 -231 LINE SMOOTH",
"765 -231 OFFCURVE",
"780 -214 OFFCURVE",
"780 -189 CURVE SMOOTH",
"780 -165 OFFCURVE",
"765 -147 OFFCURVE",
"724 -147 CURVE SMOOTH",
"614 -147 LINE",
"624 -231 LINE"
);
},
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"821 877 OFFCURVE",
"745 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834 OFFCURVE",
"298 713 CURVE",
"298 866 LINE",
"214 866 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -319 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -319 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 208 LINE",
"997 208 LINE SMOOTH",
"1061 208 OFFCURVE",
"1111 351 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 761 OFFCURVE",
"891 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 464 LINE SMOOTH",
"296 656 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"866 811 OFFCURVE",
"1026 652 OFFCURVE",
"1026 459 CURVE SMOOTH",
"1026 395 OFFCURVE",
"999 289 OFFCURVE",
"958 289 CURVE SMOOTH",
"298 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2018-11-26 09:32:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"398 744 LINE",
"398 857 LINE SMOOTH",
"398 897 OFFCURVE",
"380 913 OFFCURVE",
"356 913 CURVE SMOOTH",
"331 913 OFFCURVE",
"313 897 OFFCURVE",
"313 857 CURVE SMOOTH",
"313 751 LINE"
);
},
{
closed = 1;
nodes = (
"314 781 LINE",
"314 -59 LINE SMOOTH",
"314 -196 OFFCURVE",
"218 -302 OFFCURVE",
"75 -302 CURVE",
"77 -386 LINE",
"133 -386 OFFCURVE",
"181 -376 OFFCURVE",
"222 -355 CURVE SMOOTH",
"339 -295 OFFCURVE",
"398 -202 OFFCURVE",
"398 -59 CURVE SMOOTH",
"398 866 LINE"
);
},
{
closed = 1;
nodes = (
"169 -302 LINE",
"64 -302 LINE",
"24 -302 OFFCURVE",
"8 -320 OFFCURVE",
"8 -345 CURVE SMOOTH",
"8 -370 OFFCURVE",
"21 -390 OFFCURVE",
"64 -387 CURVE SMOOTH",
"79 -386 LINE"
);
},
{
closed = 1;
nodes = (
"399 744 LINE",
"399 857 LINE SMOOTH",
"399 897 OFFCURVE",
"381 913 OFFCURVE",
"357 913 CURVE SMOOTH",
"332 913 OFFCURVE",
"314 897 OFFCURVE",
"314 857 CURVE SMOOTH",
"314 751 LINE"
);
},
{
closed = 1;
nodes = (
"922 877 OFFCURVE",
"846 896 OFFCURVE",
"763 896 CURVE SMOOTH",
"607 896 OFFCURVE",
"499 834 OFFCURVE",
"399 713 CURVE",
"399 866 LINE",
"315 866 LINE",
"315 -302 LINE",
"202 -302 LINE",
"399 208 LINE",
"1098 208 LINE SMOOTH",
"1162 208 OFFCURVE",
"1212 351 OFFCURVE",
"1212 459 CURVE SMOOTH",
"1212 611 OFFCURVE",
"1132 760 OFFCURVE",
"992 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"398 464 LINE SMOOTH",
"397 656 OFFCURVE",
"560 811 OFFCURVE",
"764 811 CURVE SMOOTH",
"967 811 OFFCURVE",
"1127 652 OFFCURVE",
"1127 459 CURVE SMOOTH",
"1127 395 OFFCURVE",
"1100 289 OFFCURVE",
"1059 289 CURVE SMOOTH",
"399 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2018-11-26 09:33:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"289 -187 LINE",
"289 -55 LINE",
"324 -54 OFFCURVE",
"370 -78 OFFCURVE",
"391 -96 CURVE",
"404 -107 OFFCURVE",
"418 -53 OFFCURVE",
"418 -31 CURVE",
"289 20 LINE",
"289 230 LINE",
"238 -187 LINE"
);
},
{
closed = 1;
nodes = (
"645 -50 OFFCURVE",
"585 12 OFFCURVE",
"511 12 CURVE SMOOTH",
"438 12 OFFCURVE",
"378 -50 OFFCURVE",
"378 -123 CURVE SMOOTH",
"378 -196 OFFCURVE",
"438 -257 OFFCURVE",
"511 -257 CURVE SMOOTH",
"585 -257 OFFCURVE",
"645 -196 OFFCURVE",
"645 -123 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"601 -172 OFFCURVE",
"561 -212 OFFCURVE",
"511 -212 CURVE SMOOTH",
"462 -212 OFFCURVE",
"422 -171 OFFCURVE",
"422 -123 CURVE SMOOTH",
"422 -74 OFFCURVE",
"461 -34 OFFCURVE",
"511 -34 CURVE SMOOTH",
"561 -34 OFFCURVE",
"601 -74 OFFCURVE",
"601 -123 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"298 744 LINE",
"298 857 LINE SMOOTH",
"298 897 OFFCURVE",
"280 913 OFFCURVE",
"256 913 CURVE SMOOTH",
"231 913 OFFCURVE",
"213 897 OFFCURVE",
"213 857 CURVE SMOOTH",
"213 751 LINE"
);
},
{
closed = 1;
nodes = (
"821 877 OFFCURVE",
"745 896 OFFCURVE",
"662 896 CURVE SMOOTH",
"506 896 OFFCURVE",
"398 834 OFFCURVE",
"298 713 CURVE",
"298 866 LINE",
"214 866 LINE",
"214 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -319 OFFCURVE",
"45 -344 CURVE SMOOTH",
"45 -369 OFFCURVE",
"61 -386 OFFCURVE",
"101 -386 CURVE SMOOTH",
"502 -386 LINE SMOOTH",
"542 -386 OFFCURVE",
"558 -368 OFFCURVE",
"558 -344 CURVE SMOOTH",
"558 -319 OFFCURVE",
"542 -302 OFFCURVE",
"502 -302 CURVE SMOOTH",
"298 -302 LINE",
"298 208 LINE",
"997 208 LINE SMOOTH",
"1061 208 OFFCURVE",
"1111 351 OFFCURVE",
"1111 459 CURVE SMOOTH",
"1111 611 OFFCURVE",
"1031 761 OFFCURVE",
"891 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 464 LINE SMOOTH",
"296 656 OFFCURVE",
"459 811 OFFCURVE",
"663 811 CURVE SMOOTH",
"866 811 OFFCURVE",
"1026 652 OFFCURVE",
"1026 459 CURVE SMOOTH",
"1026 395 OFFCURVE",
"999 289 OFFCURVE",
"958 289 CURVE SMOOTH",
"298 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2018-11-26 18:08:03 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1127 544 OFFCURVE",
"1109 528 OFFCURVE",
"1109 488 CURVE SMOOTH",
"1110 223 LINE SMOOTH",
"1111 80 OFFCURVE",
"1004 -15 OFFCURVE",
"867 -16 CURVE SMOOTH",
"214 -22 LINE",
"214 -107 LINE",
"867 -100 LINE SMOOTH",
"1010 -98 OFFCURVE",
"1103 -41 OFFCURVE",
"1163 76 CURVE SMOOTH",
"1184 117 OFFCURVE",
"1194 165 OFFCURVE",
"1194 221 CURVE SMOOTH",
"1194 488 LINE SMOOTH",
"1194 528 OFFCURVE",
"1177 544 OFFCURVE",
"1152 544 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"258 744 LINE",
"258 857 LINE SMOOTH",
"258 897 OFFCURVE",
"240 913 OFFCURVE",
"216 913 CURVE SMOOTH",
"191 913 OFFCURVE",
"173 897 OFFCURVE",
"173 857 CURVE SMOOTH",
"173 751 LINE"
);
},
{
closed = 1;
nodes = (
"824 880 OFFCURVE",
"622 880 CURVE SMOOTH",
"466 880 OFFCURVE",
"358 834 OFFCURVE",
"258 713 CURVE",
"258 866 LINE",
"174 866 LINE",
"174 -302 LINE",
"61 -302 LINE SMOOTH",
"21 -302 OFFCURVE",
"5 -319 OFFCURVE",
"5 -344 CURVE SMOOTH",
"5 -369 OFFCURVE",
"21 -386 OFFCURVE",
"61 -386 CURVE SMOOTH",
"462 -386 LINE SMOOTH",
"502 -386 OFFCURVE",
"518 -368 OFFCURVE",
"518 -344 CURVE SMOOTH",
"518 -319 OFFCURVE",
"502 -302 OFFCURVE",
"462 -302 CURVE SMOOTH",
"258 -302 LINE",
"258 208 LINE",
"907 208 LINE SMOOTH",
"971 208 OFFCURVE",
"1021 351 OFFCURVE",
"1021 459 CURVE SMOOTH",
"1021 725 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"257 464 LINE SMOOTH",
"256 656 OFFCURVE",
"419 804 OFFCURVE",
"623 804 CURVE SMOOTH",
"826 804 OFFCURVE",
"936 652 OFFCURVE",
"936 459 CURVE SMOOTH",
"936 395 OFFCURVE",
"909 289 OFFCURVE",
"868 289 CURVE SMOOTH",
"258 289 LINE"
);
}
);
width = 1229;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2018-11-26 09:34:58 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"263 744 LINE",
"263 857 LINE SMOOTH",
"263 897 OFFCURVE",
"245 913 OFFCURVE",
"221 913 CURVE SMOOTH",
"196 913 OFFCURVE",
"178 897 OFFCURVE",
"178 857 CURVE SMOOTH",
"178 751 LINE"
);
},
{
closed = 1;
nodes = (
"786 877 OFFCURVE",
"710 896 OFFCURVE",
"627 896 CURVE SMOOTH",
"471 896 OFFCURVE",
"363 834 OFFCURVE",
"263 713 CURVE",
"263 866 LINE",
"179 866 LINE",
"179 -302 LINE",
"66 -302 LINE SMOOTH",
"26 -302 OFFCURVE",
"10 -319 OFFCURVE",
"10 -344 CURVE SMOOTH",
"10 -369 OFFCURVE",
"26 -386 OFFCURVE",
"66 -386 CURVE SMOOTH",
"467 -386 LINE SMOOTH",
"507 -386 OFFCURVE",
"523 -368 OFFCURVE",
"523 -344 CURVE SMOOTH",
"523 -319 OFFCURVE",
"507 -302 OFFCURVE",
"467 -302 CURVE SMOOTH",
"263 -302 LINE",
"263 208 LINE",
"962 208 LINE SMOOTH",
"1026 208 OFFCURVE",
"1076 351 OFFCURVE",
"1076 459 CURVE SMOOTH",
"1076 611 OFFCURVE",
"996 761 OFFCURVE",
"856 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"262 464 LINE SMOOTH",
"261 656 OFFCURVE",
"424 811 OFFCURVE",
"628 811 CURVE SMOOTH",
"831 811 OFFCURVE",
"991 652 OFFCURVE",
"991 459 CURVE SMOOTH",
"991 395 OFFCURVE",
"964 289 OFFCURVE",
"923 289 CURVE SMOOTH",
"263 289 LINE"
);
},
{
closed = 1;
nodes = (
"1015 500 LINE",
"1050 501 OFFCURVE",
"1079 499 OFFCURVE",
"1100 481 CURVE SMOOTH",
"1113 470 OFFCURVE",
"1119 447 OFFCURVE",
"1119 410 CURVE SMOOTH",
"1119 361 OFFCURVE",
"1138 347 OFFCURVE",
"1162 347 CURVE SMOOTH",
"1185 347 OFFCURVE",
"1205 369 OFFCURVE",
"1205 409 CURVE SMOOTH",
"1205 465 OFFCURVE",
"1188 509 OFFCURVE",
"1154 540 CURVE",
"1120 567 OFFCURVE",
"1074 581 OFFCURVE",
"1015 582 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2018-11-26 09:35:34 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"263 744 LINE",
"263 857 LINE SMOOTH",
"263 897 OFFCURVE",
"245 913 OFFCURVE",
"221 913 CURVE SMOOTH",
"196 913 OFFCURVE",
"178 897 OFFCURVE",
"178 857 CURVE SMOOTH",
"178 751 LINE"
);
},
{
closed = 1;
nodes = (
"786 877 OFFCURVE",
"710 896 OFFCURVE",
"627 896 CURVE SMOOTH",
"471 896 OFFCURVE",
"363 834 OFFCURVE",
"263 713 CURVE",
"263 866 LINE",
"179 866 LINE",
"179 -302 LINE",
"66 -302 LINE SMOOTH",
"26 -302 OFFCURVE",
"10 -319 OFFCURVE",
"10 -344 CURVE SMOOTH",
"10 -369 OFFCURVE",
"26 -386 OFFCURVE",
"66 -386 CURVE SMOOTH",
"467 -386 LINE SMOOTH",
"507 -386 OFFCURVE",
"523 -368 OFFCURVE",
"523 -344 CURVE SMOOTH",
"523 -319 OFFCURVE",
"507 -302 OFFCURVE",
"467 -302 CURVE SMOOTH",
"263 -302 LINE",
"263 208 LINE",
"962 208 LINE SMOOTH",
"1026 208 OFFCURVE",
"1076 351 OFFCURVE",
"1076 459 CURVE SMOOTH",
"1076 611 OFFCURVE",
"996 761 OFFCURVE",
"856 838 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"262 464 LINE SMOOTH",
"261 656 OFFCURVE",
"424 811 OFFCURVE",
"628 811 CURVE SMOOTH",
"831 811 OFFCURVE",
"991 652 OFFCURVE",
"991 459 CURVE SMOOTH",
"991 395 OFFCURVE",
"964 289 OFFCURVE",
"923 289 CURVE SMOOTH",
"263 289 LINE"
);
},
{
closed = 1;
nodes = (
"1015 500 LINE",
"1050 501 OFFCURVE",
"1079 499 OFFCURVE",
"1100 481 CURVE SMOOTH",
"1113 470 OFFCURVE",
"1119 447 OFFCURVE",
"1119 410 CURVE SMOOTH",
"1119 361 OFFCURVE",
"1138 347 OFFCURVE",
"1162 347 CURVE SMOOTH",
"1185 347 OFFCURVE",
"1205 369 OFFCURVE",
"1205 409 CURVE SMOOTH",
"1205 465 OFFCURVE",
"1188 509 OFFCURVE",
"1154 540 CURVE",
"1120 567 OFFCURVE",
"1074 581 OFFCURVE",
"1015 582 CURVE"
);
},
{
closed = 1;
nodes = (
"171 581 OFFCURVE",
"125 567 OFFCURVE",
"91 540 CURVE",
"57 509 OFFCURVE",
"40 465 OFFCURVE",
"40 409 CURVE SMOOTH",
"40 369 OFFCURVE",
"60 347 OFFCURVE",
"83 347 CURVE SMOOTH",
"107 347 OFFCURVE",
"126 361 OFFCURVE",
"126 410 CURVE SMOOTH",
"126 447 OFFCURVE",
"132 470 OFFCURVE",
"145 481 CURVE SMOOTH",
"166 499 OFFCURVE",
"195 501 OFFCURVE",
"230 500 CURVE",
"230 582 LINE"
);
}
);
width = 1229;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2018-11-26 09:52:00 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2018-11-26 09:52:44 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"940 -118 LINE",
"940 -302 LINE",
"850 -302 LINE SMOOTH",
"813 -302 OFFCURVE",
"794 -316 OFFCURVE",
"794 -344 CURVE SMOOTH",
"794 -372 OFFCURVE",
"813 -386 OFFCURVE",
"850 -386 CURVE SMOOTH",
"1025 -386 LINE",
"1025 -302 LINE",
"1025 -117 LINE"
);
},
{
closed = 1;
nodes = (
"218 -57 LINE",
"217 -142 LINE",
"940 -142 LINE",
"940 -230 LINE",
"1025 -229 LINE",
"1025 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1022 -264 LINE",
"1022 -132 LINE",
"1057 -131 OFFCURVE",
"1086 -140 OFFCURVE",
"1107 -158 CURVE SMOOTH",
"1120 -169 OFFCURVE",
"1126 -192 OFFCURVE",
"1126 -229 CURVE SMOOTH",
"1126 -278 OFFCURVE",
"1145 -292 OFFCURVE",
"1169 -292 CURVE SMOOTH",
"1192 -292 OFFCURVE",
"1212 -270 OFFCURVE",
"1212 -230 CURVE SMOOTH",
"1212 -174 OFFCURVE",
"1195 -130 OFFCURVE",
"1161 -99 CURVE",
"1127 -72 OFFCURVE",
"1081 -58 OFFCURVE",
"1022 -57 CURVE",
"971 -262 LINE"
);
},
{
closed = 1;
nodes = (
"423 127 OFFCURVE",
"277 253 OFFCURVE",
"277 442 CURVE",
"277 670 OFFCURVE",
"423 822 OFFCURVE",
"642 822 CURVE",
"843 822 OFFCURVE",
"977 670 OFFCURVE",
"977 442 CURVE",
"977 253 OFFCURVE",
"843 127 OFFCURVE",
"642 127 CURVE"
);
},
{
closed = 1;
nodes = (
"432 53 OFFCURVE",
"656 53 CURVE",
"899 53 OFFCURVE",
"1056 249 OFFCURVE",
"1056 438 CURVE",
"1056 666 OFFCURVE",
"978 759 OFFCURVE",
"860 841 CURVE",
"807 878 OFFCURVE",
"719 902 OFFCURVE",
"642 902 CURVE",
"507 902 OFFCURVE",
"347 851 OFFCURVE",
"271 702 CURVE SMOOTH",
"271 869 LINE",
"74 869 LINE",
"40 869 OFFCURVE",
"17 852 OFFCURVE",
"17 827 CURVE",
"17 802 OFFCURVE",
"40 785 OFFCURVE",
"74 785 CURVE",
"186 785 LINE",
"186 -386 LINE",
"383 -386 LINE",
"417 -386 OFFCURVE",
"440 -369 OFFCURVE",
"440 -344 CURVE",
"440 -318 OFFCURVE",
"417 -301 OFFCURVE",
"383 -301 CURVE",
"271 -301 LINE",
"271 173 LINE SMOOTH",
"323 140 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2018-11-26 09:53:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"1064 -103 LINE",
"1064 -384 LINE",
"1148 -384 LINE",
"1148 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1331 -150 OFFCURVE",
"1312 -164 OFFCURVE",
"1312 -213 CURVE SMOOTH",
"1312 -250 OFFCURVE",
"1306 -273 OFFCURVE",
"1293 -284 CURVE SMOOTH",
"1272 -302 OFFCURVE",
"1243 -311 OFFCURVE",
"1208 -310 CURVE SMOOTH",
"1064 -310 LINE",
"1064 -386 LINE",
"1208 -386 LINE",
"1267 -384 OFFCURVE",
"1313 -370 OFFCURVE",
"1347 -343 CURVE",
"1381 -312 OFFCURVE",
"1398 -268 OFFCURVE",
"1398 -212 CURVE SMOOTH",
"1398 -172 OFFCURVE",
"1378 -150 OFFCURVE",
"1355 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2018-11-26 09:55:02 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -142 LINE",
"341 -141 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"366 -57 LINE",
"182 -57 LINE",
"182 33 LINE SMOOTH",
"182 70 OFFCURVE",
"168 89 OFFCURVE",
"140 89 CURVE SMOOTH",
"112 89 OFFCURVE",
"98 70 OFFCURVE",
"98 33 CURVE SMOOTH",
"98 -142 LINE",
"182 -142 LINE",
"367 -142 LINE"
);
}
);
width = 1229;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2018-11-26 09:58:25 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"962 -142 LINE",
"963 -350 LINE",
"1038 -349 LINE",
"1038 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1273 -179 OFFCURVE",
"1213 -117 OFFCURVE",
"1139 -117 CURVE SMOOTH",
"1066 -117 OFFCURVE",
"1006 -179 OFFCURVE",
"1006 -252 CURVE SMOOTH",
"1006 -325 OFFCURVE",
"1066 -386 OFFCURVE",
"1139 -386 CURVE SMOOTH",
"1213 -386 OFFCURVE",
"1273 -325 OFFCURVE",
"1273 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1229 -301 OFFCURVE",
"1189 -341 OFFCURVE",
"1139 -341 CURVE SMOOTH",
"1090 -341 OFFCURVE",
"1050 -300 OFFCURVE",
"1050 -252 CURVE SMOOTH",
"1050 -203 OFFCURVE",
"1089 -163 OFFCURVE",
"1139 -163 CURVE SMOOTH",
"1189 -163 OFFCURVE",
"1229 -203 OFFCURVE",
"1229 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"962 -230 LINE",
"962 -340 LINE SMOOTH",
"962 -381 OFFCURVE",
"980 -396 OFFCURVE",
"1004 -396 CURVE SMOOTH",
"1029 -396 OFFCURVE",
"1046 -381 OFFCURVE",
"1046 -340 CURVE SMOOTH",
"1046 -246 LINE",
"1046 -240 LINE"
);
}
);
width = 1229;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2018-11-26 18:08:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"456 127 OFFCURVE",
"310 253 OFFCURVE",
"310 442 CURVE SMOOTH",
"310 670 OFFCURVE",
"456 822 OFFCURVE",
"675 822 CURVE SMOOTH",
"876 822 OFFCURVE",
"1010 670 OFFCURVE",
"1010 442 CURVE SMOOTH",
"1010 253 OFFCURVE",
"876 127 OFFCURVE",
"675 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 -118 LINE",
"1026 -302 LINE",
"936 -302 LINE SMOOTH",
"899 -302 OFFCURVE",
"880 -316 OFFCURVE",
"880 -344 CURVE SMOOTH",
"880 -372 OFFCURVE",
"899 -386 OFFCURVE",
"936 -386 CURVE SMOOTH",
"1111 -386 LINE",
"1111 -302 LINE",
"1111 -117 LINE"
);
},
{
closed = 1;
nodes = (
"304 -57 LINE",
"303 -142 LINE",
"1026 -142 LINE",
"1026 -230 LINE",
"1111 -229 LINE",
"1111 -57 LINE"
);
},
{
closed = 1;
nodes = (
"465 53 OFFCURVE",
"689 53 CURVE SMOOTH",
"932 53 OFFCURVE",
"1089 249 OFFCURVE",
"1089 438 CURVE SMOOTH",
"1089 666 OFFCURVE",
"1011 759 OFFCURVE",
"893 841 CURVE SMOOTH",
"840 878 OFFCURVE",
"752 902 OFFCURVE",
"675 902 CURVE SMOOTH",
"540 902 OFFCURVE",
"380 851 OFFCURVE",
"304 702 CURVE",
"304 869 LINE",
"107 869 LINE SMOOTH",
"73 869 OFFCURVE",
"50 852 OFFCURVE",
"50 827 CURVE SMOOTH",
"50 802 OFFCURVE",
"73 785 OFFCURVE",
"107 785 CURVE SMOOTH",
"219 785 LINE",
"219 -386 LINE",
"416 -386 LINE SMOOTH",
"450 -386 OFFCURVE",
"473 -369 OFFCURVE",
"473 -344 CURVE SMOOTH",
"473 -318 OFFCURVE",
"450 -301 OFFCURVE",
"416 -301 CURVE SMOOTH",
"304 -301 LINE",
"304 173 LINE",
"356 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1020 505 LINE",
"1055 506 OFFCURVE",
"1084 504 OFFCURVE",
"1105 486 CURVE SMOOTH",
"1118 475 OFFCURVE",
"1124 452 OFFCURVE",
"1124 415 CURVE SMOOTH",
"1124 366 OFFCURVE",
"1143 352 OFFCURVE",
"1167 352 CURVE SMOOTH",
"1190 352 OFFCURVE",
"1210 374 OFFCURVE",
"1210 414 CURVE SMOOTH",
"1210 470 OFFCURVE",
"1193 514 OFFCURVE",
"1159 545 CURVE",
"1125 572 OFFCURVE",
"1079 586 OFFCURVE",
"1020 587 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2018-11-26 18:11:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1147 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1064 -160 LINE",
"1147 -160 LINE",
"1147 -57 LINE",
"1062 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1063 -84 LINE",
"1063 -194 LINE SMOOTH",
"1063 -235 OFFCURVE",
"1081 -250 OFFCURVE",
"1105 -250 CURVE SMOOTH",
"1130 -250 OFFCURVE",
"1147 -235 OFFCURVE",
"1147 -194 CURVE SMOOTH",
"1147 -100 LINE",
"1147 -94 LINE"
);
}
);
width = 1229;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2018-11-26 18:12:46 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 3 LINE",
"338 -82 LINE",
"899 -82 LINE",
"899 -170 LINE",
"984 -169 LINE",
"984 3 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -82 LINE",
"341 -81 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"364 3 LINE",
"180 3 LINE",
"180 93 LINE SMOOTH",
"180 130 OFFCURVE",
"166 149 OFFCURVE",
"138 149 CURVE SMOOTH",
"110 149 OFFCURVE",
"96 130 OFFCURVE",
"96 93 CURVE SMOOTH",
"96 -82 LINE",
"180 -82 LINE",
"365 -82 LINE"
);
},
{
closed = 1;
nodes = (
"899 -102 LINE",
"899 -152 LINE",
"804 -152 LINE SMOOTH",
"763 -152 OFFCURVE",
"747 -169 OFFCURVE",
"747 -194 CURVE SMOOTH",
"747 -218 OFFCURVE",
"763 -236 OFFCURVE",
"804 -236 CURVE SMOOTH",
"983 -236 LINE",
"983 -105 LINE"
);
},
{
closed = 1;
nodes = (
"979 -236 LINE",
"1014 -235 OFFCURVE",
"1043 -244 OFFCURVE",
"1064 -262 CURVE SMOOTH",
"1077 -273 OFFCURVE",
"1083 -296 OFFCURVE",
"1083 -333 CURVE SMOOTH",
"1083 -382 OFFCURVE",
"1102 -396 OFFCURVE",
"1126 -396 CURVE SMOOTH",
"1149 -396 OFFCURVE",
"1169 -374 OFFCURVE",
"1169 -334 CURVE SMOOTH",
"1169 -278 OFFCURVE",
"1152 -234 OFFCURVE",
"1118 -203 CURVE",
"1084 -176 OFFCURVE",
"1038 -162 OFFCURVE",
"979 -161 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2018-11-26 18:16:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2018-11-26 18:14:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"940 -118 LINE",
"940 -302 LINE",
"850 -302 LINE SMOOTH",
"813 -302 OFFCURVE",
"794 -316 OFFCURVE",
"794 -344 CURVE SMOOTH",
"794 -372 OFFCURVE",
"813 -386 OFFCURVE",
"850 -386 CURVE SMOOTH",
"1025 -386 LINE",
"1025 -302 LINE",
"1025 -117 LINE"
);
},
{
closed = 1;
nodes = (
"218 -57 LINE",
"217 -142 LINE",
"940 -142 LINE",
"940 -230 LINE",
"1025 -229 LINE",
"1025 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1022 -264 LINE",
"1022 -132 LINE",
"1057 -131 OFFCURVE",
"1086 -140 OFFCURVE",
"1107 -158 CURVE SMOOTH",
"1120 -169 OFFCURVE",
"1126 -192 OFFCURVE",
"1126 -229 CURVE SMOOTH",
"1126 -278 OFFCURVE",
"1145 -292 OFFCURVE",
"1169 -292 CURVE SMOOTH",
"1192 -292 OFFCURVE",
"1212 -270 OFFCURVE",
"1212 -230 CURVE SMOOTH",
"1212 -174 OFFCURVE",
"1195 -130 OFFCURVE",
"1161 -99 CURVE",
"1127 -72 OFFCURVE",
"1081 -58 OFFCURVE",
"1022 -57 CURVE",
"971 -262 LINE"
);
},
{
closed = 1;
nodes = (
"423 127 OFFCURVE",
"277 253 OFFCURVE",
"277 442 CURVE",
"277 670 OFFCURVE",
"423 822 OFFCURVE",
"642 822 CURVE",
"843 822 OFFCURVE",
"977 670 OFFCURVE",
"977 442 CURVE",
"977 253 OFFCURVE",
"843 127 OFFCURVE",
"642 127 CURVE"
);
},
{
closed = 1;
nodes = (
"432 53 OFFCURVE",
"656 53 CURVE",
"899 53 OFFCURVE",
"1056 249 OFFCURVE",
"1056 438 CURVE",
"1056 666 OFFCURVE",
"978 759 OFFCURVE",
"860 841 CURVE",
"807 878 OFFCURVE",
"719 902 OFFCURVE",
"642 902 CURVE",
"507 902 OFFCURVE",
"347 851 OFFCURVE",
"271 702 CURVE SMOOTH",
"271 869 LINE",
"74 869 LINE",
"40 869 OFFCURVE",
"17 852 OFFCURVE",
"17 827 CURVE",
"17 802 OFFCURVE",
"40 785 OFFCURVE",
"74 785 CURVE",
"186 785 LINE",
"186 -386 LINE",
"383 -386 LINE",
"417 -386 OFFCURVE",
"440 -369 OFFCURVE",
"440 -344 CURVE",
"440 -318 OFFCURVE",
"417 -301 OFFCURVE",
"383 -301 CURVE",
"271 -301 LINE",
"271 173 LINE SMOOTH",
"323 140 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2018-11-26 18:14:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"1064 -103 LINE",
"1064 -384 LINE",
"1148 -384 LINE",
"1148 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1331 -150 OFFCURVE",
"1312 -164 OFFCURVE",
"1312 -213 CURVE SMOOTH",
"1312 -250 OFFCURVE",
"1306 -273 OFFCURVE",
"1293 -284 CURVE SMOOTH",
"1272 -302 OFFCURVE",
"1243 -311 OFFCURVE",
"1208 -310 CURVE SMOOTH",
"1064 -310 LINE",
"1064 -386 LINE",
"1208 -386 LINE",
"1267 -384 OFFCURVE",
"1313 -370 OFFCURVE",
"1347 -343 CURVE",
"1381 -312 OFFCURVE",
"1398 -268 OFFCURVE",
"1398 -212 CURVE SMOOTH",
"1398 -172 OFFCURVE",
"1378 -150 OFFCURVE",
"1355 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2018-11-26 18:14:35 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -142 LINE",
"341 -141 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"366 -57 LINE",
"182 -57 LINE",
"182 33 LINE SMOOTH",
"182 70 OFFCURVE",
"168 89 OFFCURVE",
"140 89 CURVE SMOOTH",
"112 89 OFFCURVE",
"98 70 OFFCURVE",
"98 33 CURVE SMOOTH",
"98 -142 LINE",
"182 -142 LINE",
"367 -142 LINE"
);
}
);
width = 1229;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2018-11-26 18:14:45 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"962 -142 LINE",
"963 -350 LINE",
"1038 -349 LINE",
"1038 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1273 -179 OFFCURVE",
"1213 -117 OFFCURVE",
"1139 -117 CURVE SMOOTH",
"1066 -117 OFFCURVE",
"1006 -179 OFFCURVE",
"1006 -252 CURVE SMOOTH",
"1006 -325 OFFCURVE",
"1066 -386 OFFCURVE",
"1139 -386 CURVE SMOOTH",
"1213 -386 OFFCURVE",
"1273 -325 OFFCURVE",
"1273 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1229 -301 OFFCURVE",
"1189 -341 OFFCURVE",
"1139 -341 CURVE SMOOTH",
"1090 -341 OFFCURVE",
"1050 -300 OFFCURVE",
"1050 -252 CURVE SMOOTH",
"1050 -203 OFFCURVE",
"1089 -163 OFFCURVE",
"1139 -163 CURVE SMOOTH",
"1189 -163 OFFCURVE",
"1229 -203 OFFCURVE",
"1229 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"962 -230 LINE",
"962 -340 LINE SMOOTH",
"962 -381 OFFCURVE",
"980 -396 OFFCURVE",
"1004 -396 CURVE SMOOTH",
"1029 -396 OFFCURVE",
"1046 -381 OFFCURVE",
"1046 -340 CURVE SMOOTH",
"1046 -246 LINE",
"1046 -240 LINE"
);
}
);
width = 1229;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2018-11-26 18:14:57 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"456 127 OFFCURVE",
"310 253 OFFCURVE",
"310 442 CURVE SMOOTH",
"310 670 OFFCURVE",
"456 822 OFFCURVE",
"675 822 CURVE SMOOTH",
"876 822 OFFCURVE",
"1010 670 OFFCURVE",
"1010 442 CURVE SMOOTH",
"1010 253 OFFCURVE",
"876 127 OFFCURVE",
"675 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 -118 LINE",
"1026 -302 LINE",
"936 -302 LINE SMOOTH",
"899 -302 OFFCURVE",
"880 -316 OFFCURVE",
"880 -344 CURVE SMOOTH",
"880 -372 OFFCURVE",
"899 -386 OFFCURVE",
"936 -386 CURVE SMOOTH",
"1111 -386 LINE",
"1111 -302 LINE",
"1111 -117 LINE"
);
},
{
closed = 1;
nodes = (
"304 -57 LINE",
"303 -142 LINE",
"1026 -142 LINE",
"1026 -230 LINE",
"1111 -229 LINE",
"1111 -57 LINE"
);
},
{
closed = 1;
nodes = (
"465 53 OFFCURVE",
"689 53 CURVE SMOOTH",
"932 53 OFFCURVE",
"1089 249 OFFCURVE",
"1089 438 CURVE SMOOTH",
"1089 666 OFFCURVE",
"1011 759 OFFCURVE",
"893 841 CURVE SMOOTH",
"840 878 OFFCURVE",
"752 902 OFFCURVE",
"675 902 CURVE SMOOTH",
"540 902 OFFCURVE",
"380 851 OFFCURVE",
"304 702 CURVE",
"304 869 LINE",
"107 869 LINE SMOOTH",
"73 869 OFFCURVE",
"50 852 OFFCURVE",
"50 827 CURVE SMOOTH",
"50 802 OFFCURVE",
"73 785 OFFCURVE",
"107 785 CURVE SMOOTH",
"219 785 LINE",
"219 -386 LINE",
"416 -386 LINE SMOOTH",
"450 -386 OFFCURVE",
"473 -369 OFFCURVE",
"473 -344 CURVE SMOOTH",
"473 -318 OFFCURVE",
"450 -301 OFFCURVE",
"416 -301 CURVE SMOOTH",
"304 -301 LINE",
"304 173 LINE",
"356 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1020 505 LINE",
"1055 506 OFFCURVE",
"1084 504 OFFCURVE",
"1105 486 CURVE SMOOTH",
"1118 475 OFFCURVE",
"1124 452 OFFCURVE",
"1124 415 CURVE SMOOTH",
"1124 366 OFFCURVE",
"1143 352 OFFCURVE",
"1167 352 CURVE SMOOTH",
"1190 352 OFFCURVE",
"1210 374 OFFCURVE",
"1210 414 CURVE SMOOTH",
"1210 470 OFFCURVE",
"1193 514 OFFCURVE",
"1159 545 CURVE",
"1125 572 OFFCURVE",
"1079 586 OFFCURVE",
"1020 587 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2018-11-26 18:15:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1147 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1064 -160 LINE",
"1147 -160 LINE",
"1147 -57 LINE",
"1062 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1063 -84 LINE",
"1063 -194 LINE SMOOTH",
"1063 -235 OFFCURVE",
"1081 -250 OFFCURVE",
"1105 -250 CURVE SMOOTH",
"1130 -250 OFFCURVE",
"1147 -235 OFFCURVE",
"1147 -194 CURVE SMOOTH",
"1147 -100 LINE",
"1147 -94 LINE"
);
}
);
width = 1229;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2018-11-26 18:15:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1190 OFFCURVE",
"729 1219 OFFCURVE",
"727 1225 CURVE",
"723 1241 OFFCURVE",
"706 1255 OFFCURVE",
"687 1255 CURVE SMOOTH",
"668 1255 OFFCURVE",
"651 1241 OFFCURVE",
"647 1225 CURVE SMOOTH",
"646 1220 OFFCURVE",
"645 1191 OFFCURVE",
"645 1138 CURVE SMOOTH",
"645 932 LINE SMOOTH",
"645 910 OFFCURVE",
"646 881 OFFCURVE",
"647 875 CURVE SMOOTH",
"650 859 OFFCURVE",
"668 845 OFFCURVE",
"687 845 CURVE SMOOTH",
"702 845 OFFCURVE",
"714 851 OFFCURVE",
"723 864 CURVE",
"727 871 OFFCURVE",
"729 903 OFFCURVE",
"729 932 CURVE SMOOTH",
"730 1138 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 3 LINE",
"338 -82 LINE",
"899 -82 LINE",
"899 -170 LINE",
"984 -169 LINE",
"984 3 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -82 LINE",
"341 -81 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"364 3 LINE",
"180 3 LINE",
"180 93 LINE SMOOTH",
"180 130 OFFCURVE",
"166 149 OFFCURVE",
"138 149 CURVE SMOOTH",
"110 149 OFFCURVE",
"96 130 OFFCURVE",
"96 93 CURVE SMOOTH",
"96 -82 LINE",
"180 -82 LINE",
"365 -82 LINE"
);
},
{
closed = 1;
nodes = (
"899 -102 LINE",
"899 -152 LINE",
"804 -152 LINE SMOOTH",
"763 -152 OFFCURVE",
"747 -169 OFFCURVE",
"747 -194 CURVE SMOOTH",
"747 -218 OFFCURVE",
"763 -236 OFFCURVE",
"804 -236 CURVE SMOOTH",
"983 -236 LINE",
"983 -105 LINE"
);
},
{
closed = 1;
nodes = (
"979 -236 LINE",
"1014 -235 OFFCURVE",
"1043 -244 OFFCURVE",
"1064 -262 CURVE SMOOTH",
"1077 -273 OFFCURVE",
"1083 -296 OFFCURVE",
"1083 -333 CURVE SMOOTH",
"1083 -382 OFFCURVE",
"1102 -396 OFFCURVE",
"1126 -396 CURVE SMOOTH",
"1149 -396 OFFCURVE",
"1169 -374 OFFCURVE",
"1169 -334 CURVE SMOOTH",
"1169 -278 OFFCURVE",
"1152 -234 OFFCURVE",
"1118 -203 CURVE",
"1084 -176 OFFCURVE",
"1038 -162 OFFCURVE",
"979 -161 CURVE"
);
}
);
width = 1229;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2018-11-26 18:16:18 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2018-11-26 18:16:32 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"940 -118 LINE",
"940 -302 LINE",
"850 -302 LINE SMOOTH",
"813 -302 OFFCURVE",
"794 -316 OFFCURVE",
"794 -344 CURVE SMOOTH",
"794 -372 OFFCURVE",
"813 -386 OFFCURVE",
"850 -386 CURVE SMOOTH",
"1025 -386 LINE",
"1025 -302 LINE",
"1025 -117 LINE"
);
},
{
closed = 1;
nodes = (
"218 -57 LINE",
"217 -142 LINE",
"940 -142 LINE",
"940 -230 LINE",
"1025 -229 LINE",
"1025 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1022 -264 LINE",
"1022 -132 LINE",
"1057 -131 OFFCURVE",
"1086 -140 OFFCURVE",
"1107 -158 CURVE SMOOTH",
"1120 -169 OFFCURVE",
"1126 -192 OFFCURVE",
"1126 -229 CURVE SMOOTH",
"1126 -278 OFFCURVE",
"1145 -292 OFFCURVE",
"1169 -292 CURVE SMOOTH",
"1192 -292 OFFCURVE",
"1212 -270 OFFCURVE",
"1212 -230 CURVE SMOOTH",
"1212 -174 OFFCURVE",
"1195 -130 OFFCURVE",
"1161 -99 CURVE",
"1127 -72 OFFCURVE",
"1081 -58 OFFCURVE",
"1022 -57 CURVE",
"971 -262 LINE"
);
},
{
closed = 1;
nodes = (
"423 127 OFFCURVE",
"277 253 OFFCURVE",
"277 442 CURVE",
"277 670 OFFCURVE",
"423 822 OFFCURVE",
"642 822 CURVE",
"843 822 OFFCURVE",
"977 670 OFFCURVE",
"977 442 CURVE",
"977 253 OFFCURVE",
"843 127 OFFCURVE",
"642 127 CURVE"
);
},
{
closed = 1;
nodes = (
"432 53 OFFCURVE",
"656 53 CURVE",
"899 53 OFFCURVE",
"1056 249 OFFCURVE",
"1056 438 CURVE",
"1056 666 OFFCURVE",
"978 759 OFFCURVE",
"860 841 CURVE",
"807 878 OFFCURVE",
"719 902 OFFCURVE",
"642 902 CURVE",
"507 902 OFFCURVE",
"347 851 OFFCURVE",
"271 702 CURVE SMOOTH",
"271 869 LINE",
"74 869 LINE",
"40 869 OFFCURVE",
"17 852 OFFCURVE",
"17 827 CURVE",
"17 802 OFFCURVE",
"40 785 OFFCURVE",
"74 785 CURVE",
"186 785 LINE",
"186 -386 LINE",
"383 -386 LINE",
"417 -386 OFFCURVE",
"440 -369 OFFCURVE",
"440 -344 CURVE",
"440 -318 OFFCURVE",
"417 -301 OFFCURVE",
"383 -301 CURVE",
"271 -301 LINE",
"271 173 LINE SMOOTH",
"323 140 OFFCURVE"
);
}
);
width = 1229;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2018-11-26 18:16:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"1064 -103 LINE",
"1064 -384 LINE",
"1148 -384 LINE",
"1148 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1331 -150 OFFCURVE",
"1312 -164 OFFCURVE",
"1312 -213 CURVE SMOOTH",
"1312 -250 OFFCURVE",
"1306 -273 OFFCURVE",
"1293 -284 CURVE SMOOTH",
"1272 -302 OFFCURVE",
"1243 -311 OFFCURVE",
"1208 -310 CURVE SMOOTH",
"1064 -310 LINE",
"1064 -386 LINE",
"1208 -386 LINE",
"1267 -384 OFFCURVE",
"1313 -370 OFFCURVE",
"1347 -343 CURVE",
"1381 -312 OFFCURVE",
"1398 -268 OFFCURVE",
"1398 -212 CURVE SMOOTH",
"1398 -172 OFFCURVE",
"1378 -150 OFFCURVE",
"1355 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2018-11-26 18:17:00 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1063 -118 LINE",
"1063 -302 LINE",
"973 -302 LINE SMOOTH",
"936 -302 OFFCURVE",
"917 -316 OFFCURVE",
"917 -344 CURVE SMOOTH",
"917 -372 OFFCURVE",
"936 -386 OFFCURVE",
"973 -386 CURVE SMOOTH",
"1148 -386 LINE",
"1148 -302 LINE",
"1148 -117 LINE"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1063 -230 LINE",
"1148 -229 LINE",
"1148 -57 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -142 LINE",
"341 -141 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"366 -57 LINE",
"182 -57 LINE",
"182 33 LINE SMOOTH",
"182 70 OFFCURVE",
"168 89 OFFCURVE",
"140 89 CURVE SMOOTH",
"112 89 OFFCURVE",
"98 70 OFFCURVE",
"98 33 CURVE SMOOTH",
"98 -142 LINE",
"182 -142 LINE",
"367 -142 LINE"
);
}
);
width = 1229;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2018-11-26 18:17:11 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"962 -142 LINE",
"963 -350 LINE",
"1038 -349 LINE",
"1038 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1273 -179 OFFCURVE",
"1213 -117 OFFCURVE",
"1139 -117 CURVE SMOOTH",
"1066 -117 OFFCURVE",
"1006 -179 OFFCURVE",
"1006 -252 CURVE SMOOTH",
"1006 -325 OFFCURVE",
"1066 -386 OFFCURVE",
"1139 -386 CURVE SMOOTH",
"1213 -386 OFFCURVE",
"1273 -325 OFFCURVE",
"1273 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1229 -301 OFFCURVE",
"1189 -341 OFFCURVE",
"1139 -341 CURVE SMOOTH",
"1090 -341 OFFCURVE",
"1050 -300 OFFCURVE",
"1050 -252 CURVE SMOOTH",
"1050 -203 OFFCURVE",
"1089 -163 OFFCURVE",
"1139 -163 CURVE SMOOTH",
"1189 -163 OFFCURVE",
"1229 -203 OFFCURVE",
"1229 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"962 -230 LINE",
"962 -340 LINE SMOOTH",
"962 -381 OFFCURVE",
"980 -396 OFFCURVE",
"1004 -396 CURVE SMOOTH",
"1029 -396 OFFCURVE",
"1046 -381 OFFCURVE",
"1046 -340 CURVE SMOOTH",
"1046 -246 LINE",
"1046 -240 LINE"
);
}
);
width = 1229;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2018-11-26 18:17:24 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"456 127 OFFCURVE",
"310 253 OFFCURVE",
"310 442 CURVE SMOOTH",
"310 670 OFFCURVE",
"456 822 OFFCURVE",
"675 822 CURVE SMOOTH",
"876 822 OFFCURVE",
"1010 670 OFFCURVE",
"1010 442 CURVE SMOOTH",
"1010 253 OFFCURVE",
"876 127 OFFCURVE",
"675 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 -118 LINE",
"1026 -302 LINE",
"936 -302 LINE SMOOTH",
"899 -302 OFFCURVE",
"880 -316 OFFCURVE",
"880 -344 CURVE SMOOTH",
"880 -372 OFFCURVE",
"899 -386 OFFCURVE",
"936 -386 CURVE SMOOTH",
"1111 -386 LINE",
"1111 -302 LINE",
"1111 -117 LINE"
);
},
{
closed = 1;
nodes = (
"304 -57 LINE",
"303 -142 LINE",
"1026 -142 LINE",
"1026 -230 LINE",
"1111 -229 LINE",
"1111 -57 LINE"
);
},
{
closed = 1;
nodes = (
"465 53 OFFCURVE",
"689 53 CURVE SMOOTH",
"932 53 OFFCURVE",
"1089 249 OFFCURVE",
"1089 438 CURVE SMOOTH",
"1089 666 OFFCURVE",
"1011 759 OFFCURVE",
"893 841 CURVE SMOOTH",
"840 878 OFFCURVE",
"752 902 OFFCURVE",
"675 902 CURVE SMOOTH",
"540 902 OFFCURVE",
"380 851 OFFCURVE",
"304 702 CURVE",
"304 869 LINE",
"107 869 LINE SMOOTH",
"73 869 OFFCURVE",
"50 852 OFFCURVE",
"50 827 CURVE SMOOTH",
"50 802 OFFCURVE",
"73 785 OFFCURVE",
"107 785 CURVE SMOOTH",
"219 785 LINE",
"219 -386 LINE",
"416 -386 LINE SMOOTH",
"450 -386 OFFCURVE",
"473 -369 OFFCURVE",
"473 -344 CURVE SMOOTH",
"473 -318 OFFCURVE",
"450 -301 OFFCURVE",
"416 -301 CURVE SMOOTH",
"304 -301 LINE",
"304 173 LINE",
"356 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1020 505 LINE",
"1055 506 OFFCURVE",
"1084 504 OFFCURVE",
"1105 486 CURVE SMOOTH",
"1118 475 OFFCURVE",
"1124 452 OFFCURVE",
"1124 415 CURVE SMOOTH",
"1124 366 OFFCURVE",
"1143 352 OFFCURVE",
"1167 352 CURVE SMOOTH",
"1190 352 OFFCURVE",
"1210 374 OFFCURVE",
"1210 414 CURVE SMOOTH",
"1210 470 OFFCURVE",
"1193 514 OFFCURVE",
"1159 545 CURVE",
"1125 572 OFFCURVE",
"1079 586 OFFCURVE",
"1020 587 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2018-11-26 18:17:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 -57 LINE",
"340 -142 LINE",
"1063 -142 LINE",
"1147 -57 LINE"
);
},
{
closed = 1;
nodes = (
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -386 LINE",
"453 -386 LINE SMOOTH",
"487 -386 OFFCURVE",
"510 -369 OFFCURVE",
"510 -344 CURVE SMOOTH",
"510 -318 OFFCURVE",
"487 -301 OFFCURVE",
"453 -301 CURVE SMOOTH",
"341 -301 LINE",
"341 173 LINE",
"393 140 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1064 -160 LINE",
"1147 -160 LINE",
"1147 -57 LINE",
"1062 -57 LINE"
);
},
{
closed = 1;
nodes = (
"1063 -84 LINE",
"1063 -194 LINE SMOOTH",
"1063 -235 OFFCURVE",
"1081 -250 OFFCURVE",
"1105 -250 CURVE SMOOTH",
"1130 -250 OFFCURVE",
"1147 -235 OFFCURVE",
"1147 -194 CURVE SMOOTH",
"1147 -100 LINE",
"1147 -94 LINE"
);
}
);
width = 1229;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2018-11-26 18:17:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"730 1184 OFFCURVE",
"729 1213 OFFCURVE",
"727 1219 CURVE",
"723 1235 OFFCURVE",
"706 1249 OFFCURVE",
"687 1249 CURVE SMOOTH",
"668 1249 OFFCURVE",
"650 1235 OFFCURVE",
"647 1219 CURVE SMOOTH",
"646 1214 OFFCURVE",
"645 1185 OFFCURVE",
"645 1132 CURVE SMOOTH",
"645 926 LINE SMOOTH",
"645 904 OFFCURVE",
"646 875 OFFCURVE",
"647 869 CURVE SMOOTH",
"650 853 OFFCURVE",
"668 839 OFFCURVE",
"687 839 CURVE SMOOTH",
"702 839 OFFCURVE",
"714 845 OFFCURVE",
"723 858 CURVE",
"727 865 OFFCURVE",
"729 897 OFFCURVE",
"729 926 CURVE SMOOTH",
"730 1132 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1093 1164 OFFCURVE",
"1122 1165 OFFCURVE",
"1127 1166 CURVE SMOOTH",
"1144 1170 OFFCURVE",
"1157 1187 OFFCURVE",
"1157 1206 CURVE SMOOTH",
"1157 1225 OFFCURVE",
"1144 1242 OFFCURVE",
"1127 1246 CURVE SMOOTH",
"1122 1247 OFFCURVE",
"1093 1248 OFFCURVE",
"1040 1248 CURVE SMOOTH",
"333 1248 LINE SMOOTH",
"280 1248 OFFCURVE",
"251 1247 OFFCURVE",
"246 1246 CURVE SMOOTH",
"229 1242 OFFCURVE",
"216 1225 OFFCURVE",
"216 1206 CURVE SMOOTH",
"216 1187 OFFCURVE",
"229 1170 OFFCURVE",
"246 1166 CURVE SMOOTH",
"251 1165 OFFCURVE",
"280 1164 OFFCURVE",
"333 1164 CURVE SMOOTH",
"1040 1164 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"493 127 OFFCURVE",
"347 253 OFFCURVE",
"347 442 CURVE SMOOTH",
"347 670 OFFCURVE",
"493 822 OFFCURVE",
"712 822 CURVE SMOOTH",
"913 822 OFFCURVE",
"1047 670 OFFCURVE",
"1047 442 CURVE SMOOTH",
"1047 253 OFFCURVE",
"913 127 OFFCURVE",
"712 127 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 3 LINE",
"338 -82 LINE",
"899 -82 LINE",
"899 -170 LINE",
"984 -169 LINE",
"984 3 LINE"
);
},
{
closed = 1;
nodes = (
"393 140 OFFCURVE",
"502 53 OFFCURVE",
"726 53 CURVE SMOOTH",
"969 53 OFFCURVE",
"1126 249 OFFCURVE",
"1126 438 CURVE SMOOTH",
"1126 666 OFFCURVE",
"1048 759 OFFCURVE",
"930 841 CURVE SMOOTH",
"877 878 OFFCURVE",
"789 902 OFFCURVE",
"712 902 CURVE SMOOTH",
"577 902 OFFCURVE",
"417 851 OFFCURVE",
"341 702 CURVE",
"341 869 LINE",
"144 869 LINE SMOOTH",
"110 869 OFFCURVE",
"87 852 OFFCURVE",
"87 827 CURVE SMOOTH",
"87 802 OFFCURVE",
"110 785 OFFCURVE",
"144 785 CURVE SMOOTH",
"256 785 LINE",
"256 -82 LINE",
"341 -81 LINE",
"341 173 LINE"
);
},
{
closed = 1;
nodes = (
"364 3 LINE",
"180 3 LINE",
"180 93 LINE SMOOTH",
"180 130 OFFCURVE",
"166 149 OFFCURVE",
"138 149 CURVE SMOOTH",
"110 149 OFFCURVE",
"96 130 OFFCURVE",
"96 93 CURVE SMOOTH",
"96 -82 LINE",
"180 -82 LINE",
"365 -82 LINE"
);
},
{
closed = 1;
nodes = (
"899 -102 LINE",
"899 -152 LINE",
"804 -152 LINE SMOOTH",
"763 -152 OFFCURVE",
"747 -169 OFFCURVE",
"747 -194 CURVE SMOOTH",
"747 -218 OFFCURVE",
"763 -236 OFFCURVE",
"804 -236 CURVE SMOOTH",
"983 -236 LINE",
"983 -105 LINE"
);
},
{
closed = 1;
nodes = (
"979 -236 LINE",
"1014 -235 OFFCURVE",
"1043 -244 OFFCURVE",
"1064 -262 CURVE SMOOTH",
"1077 -273 OFFCURVE",
"1083 -296 OFFCURVE",
"1083 -333 CURVE SMOOTH",
"1083 -382 OFFCURVE",
"1102 -396 OFFCURVE",
"1126 -396 CURVE SMOOTH",
"1149 -396 OFFCURVE",
"1169 -374 OFFCURVE",
"1169 -334 CURVE SMOOTH",
"1169 -278 OFFCURVE",
"1152 -234 OFFCURVE",
"1118 -203 CURVE",
"1084 -176 OFFCURVE",
"1038 -162 OFFCURVE",
"979 -161 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2018-11-25 23:39:59 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2018-11-26 18:18:12 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"769 378 LINE",
"804 379 OFFCURVE",
"833 377 OFFCURVE",
"854 359 CURVE SMOOTH",
"867 348 OFFCURVE",
"873 325 OFFCURVE",
"873 288 CURVE SMOOTH",
"873 239 OFFCURVE",
"892 225 OFFCURVE",
"916 225 CURVE SMOOTH",
"939 225 OFFCURVE",
"959 247 OFFCURVE",
"959 287 CURVE SMOOTH",
"959 343 OFFCURVE",
"942 387 OFFCURVE",
"908 418 CURVE",
"874 445 OFFCURVE",
"828 459 OFFCURVE",
"769 460 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2018-11-26 18:19:58 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1111 238 OFFCURVE",
"1092 224 OFFCURVE",
"1092 175 CURVE",
"1092 138 OFFCURVE",
"1086 115 OFFCURVE",
"1073 104 CURVE SMOOTH",
"1052 86 OFFCURVE",
"1023 78 OFFCURVE",
"988 78 CURVE SMOOTH",
"844 78 LINE",
"844 -2 LINE",
"988 -2 LINE",
"1047 0 OFFCURVE",
"1093 18 OFFCURVE",
"1127 45 CURVE",
"1161 76 OFFCURVE",
"1178 120 OFFCURVE",
"1178 176 CURVE SMOOTH",
"1178 216 OFFCURVE",
"1158 238 OFFCURVE",
"1135 238 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 78 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"623 84 LINE SMOOTH",
"582 84 OFFCURVE",
"566 67 OFFCURVE",
"566 42 CURVE SMOOTH",
"566 18 OFFCURVE",
"582 0 OFFCURVE",
"623 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 78 OFFCURVE",
"1002 78 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2018-11-26 18:21:37 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"815 336 LINE",
"815 782 LINE",
"970 782 LINE SMOOTH",
"1010 782 OFFCURVE",
"1026 800 OFFCURVE",
"1026 825 CURVE SMOOTH",
"1026 849 OFFCURVE",
"1011 867 OFFCURVE",
"970 867 CURVE SMOOTH",
"731 867 LINE",
"587 866 LINE",
"421 866 LINE",
"361 866 OFFCURVE",
"312 841 OFFCURVE",
"274 814 CURVE SMOOTH",
"193 756 OFFCURVE",
"160 622 OFFCURVE",
"180 593 CURVE SMOOTH",
"194 573 OFFCURVE",
"221 568 OFFCURVE",
"241 582 CURVE SMOOTH",
"247 586 OFFCURVE",
"251 590 OFFCURVE",
"253 595 CURVE SMOOTH",
"255 600 OFFCURVE",
"258 610 OFFCURVE",
"262 628 CURVE SMOOTH",
"276 693 OFFCURVE",
"291 724 OFFCURVE",
"318 743 CURVE SMOOTH",
"347 764 OFFCURVE",
"388 781 OFFCURVE",
"445 781 CURVE SMOOTH",
"731 782 LINE",
"731 305 LINE"
);
},
{
closed = 1;
nodes = (
"517 781 LINE",
"731 781 LINE",
"731 -59 LINE SMOOTH",
"731 -196 OFFCURVE",
"635 -302 OFFCURVE",
"492 -302 CURVE SMOOTH",
"451 -302 LINE",
"445 -386 LINE",
"494 -386 LINE SMOOTH",
"550 -386 OFFCURVE",
"598 -376 OFFCURVE",
"639 -355 CURVE SMOOTH",
"756 -295 OFFCURVE",
"815 -202 OFFCURVE",
"815 -59 CURVE SMOOTH",
"815 866 LINE",
"522 866 LINE"
);
},
{
closed = 1;
nodes = (
"454 -302 LINE",
"349 -302 LINE SMOOTH",
"309 -302 OFFCURVE",
"293 -320 OFFCURVE",
"293 -345 CURVE SMOOTH",
"293 -370 OFFCURVE",
"309 -387 OFFCURVE",
"349 -387 CURVE SMOOTH",
"454 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2018-11-26 18:22:45 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"668 84 LINE SMOOTH",
"627 84 OFFCURVE",
"611 67 OFFCURVE",
"611 42 CURVE SMOOTH",
"611 18 OFFCURVE",
"627 0 OFFCURVE",
"668 0 CURVE SMOOTH",
"799 0 LINE",
"799 81 LINE"
);
},
{
closed = 1;
nodes = (
"1002 203 OFFCURVE",
"942 265 OFFCURVE",
"868 265 CURVE SMOOTH",
"795 265 OFFCURVE",
"735 203 OFFCURVE",
"735 130 CURVE SMOOTH",
"735 57 OFFCURVE",
"795 -4 OFFCURVE",
"868 -4 CURVE SMOOTH",
"942 -4 OFFCURVE",
"1002 57 OFFCURVE",
"1002 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"958 81 OFFCURVE",
"918 41 OFFCURVE",
"868 41 CURVE SMOOTH",
"819 41 OFFCURVE",
"779 82 OFFCURVE",
"779 130 CURVE SMOOTH",
"779 179 OFFCURVE",
"818 219 OFFCURVE",
"868 219 CURVE SMOOTH",
"918 219 OFFCURVE",
"958 179 OFFCURVE",
"958 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2018-11-26 18:24:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"166 748 OFFCURVE",
"150 626 OFFCURVE",
"164 592 CURVE",
"222 698 LINE",
"285 753 LINE SMOOTH",
"298 764 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"426 701 OFFCURVE",
"366 763 OFFCURVE",
"292 763 CURVE SMOOTH",
"219 763 OFFCURVE",
"159 701 OFFCURVE",
"159 628 CURVE SMOOTH",
"159 555 OFFCURVE",
"219 494 OFFCURVE",
"292 494 CURVE SMOOTH",
"366 494 OFFCURVE",
"426 555 OFFCURVE",
"426 628 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 579 OFFCURVE",
"342 539 OFFCURVE",
"292 539 CURVE SMOOTH",
"243 539 OFFCURVE",
"203 580 OFFCURVE",
"203 628 CURVE SMOOTH",
"203 677 OFFCURVE",
"242 717 OFFCURVE",
"292 717 CURVE SMOOTH",
"342 717 OFFCURVE",
"382 677 OFFCURVE",
"382 628 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2018-11-26 18:25:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"656 827 LINE",
"657 1138 LINE SMOOTH",
"657 1190 OFFCURVE",
"656 1219 OFFCURVE",
"654 1225 CURVE",
"650 1241 OFFCURVE",
"633 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"595 1255 OFFCURVE",
"578 1241 OFFCURVE",
"574 1225 CURVE SMOOTH",
"573 1220 OFFCURVE",
"572 1191 OFFCURVE",
"572 1138 CURVE SMOOTH",
"572 822 LINE"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2018-11-26 18:26:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 816 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 813 LINE"
);
},
{
closed = 1;
nodes = (
"815 336 LINE",
"815 782 LINE",
"970 782 LINE SMOOTH",
"1010 782 OFFCURVE",
"1026 800 OFFCURVE",
"1026 825 CURVE SMOOTH",
"1026 849 OFFCURVE",
"1011 867 OFFCURVE",
"970 867 CURVE SMOOTH",
"731 867 LINE",
"587 866 LINE",
"421 866 LINE",
"361 866 OFFCURVE",
"312 841 OFFCURVE",
"274 814 CURVE SMOOTH",
"193 756 OFFCURVE",
"160 622 OFFCURVE",
"180 593 CURVE SMOOTH",
"194 573 OFFCURVE",
"221 568 OFFCURVE",
"241 582 CURVE SMOOTH",
"247 586 OFFCURVE",
"251 590 OFFCURVE",
"253 595 CURVE SMOOTH",
"255 600 OFFCURVE",
"258 610 OFFCURVE",
"262 628 CURVE SMOOTH",
"276 693 OFFCURVE",
"291 724 OFFCURVE",
"318 743 CURVE SMOOTH",
"347 764 OFFCURVE",
"388 781 OFFCURVE",
"445 781 CURVE SMOOTH",
"731 782 LINE",
"731 305 LINE"
);
},
{
closed = 1;
nodes = (
"780 -222 LINE",
"803 -177 OFFCURVE",
"815 -123 OFFCURVE",
"815 -59 CURVE SMOOTH",
"815 866 LINE",
"522 866 LINE",
"517 781 LINE",
"731 781 LINE",
"731 -59 LINE SMOOTH",
"731 -122 OFFCURVE",
"711 -178 OFFCURVE",
"675 -221 CURVE"
);
},
{
closed = 1;
nodes = (
"719 -129 LINE",
"719 -179 LINE",
"625 -179 LINE SMOOTH",
"584 -179 OFFCURVE",
"568 -196 OFFCURVE",
"568 -221 CURVE SMOOTH",
"568 -245 OFFCURVE",
"584 -263 OFFCURVE",
"625 -263 CURVE SMOOTH",
"807 -263 LINE",
"807 -132 LINE"
);
},
{
closed = 1;
nodes = (
"800 -263 LINE",
"835 -262 OFFCURVE",
"864 -271 OFFCURVE",
"885 -289 CURVE SMOOTH",
"898 -300 OFFCURVE",
"904 -323 OFFCURVE",
"904 -360 CURVE SMOOTH",
"904 -409 OFFCURVE",
"923 -423 OFFCURVE",
"947 -423 CURVE SMOOTH",
"970 -423 OFFCURVE",
"990 -401 OFFCURVE",
"990 -361 CURVE SMOOTH",
"990 -305 OFFCURVE",
"973 -261 OFFCURVE",
"939 -230 CURVE",
"905 -203 OFFCURVE",
"859 -189 OFFCURVE",
"800 -188 CURVE"
);
}
);
width = 1229;
}
);
unicode = 130F;
},
{
glyphname = "gga-ethiopic";
lastChange = "2018-11-26 18:27:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2018-11-26 18:27:38 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"769 378 LINE",
"804 379 OFFCURVE",
"833 377 OFFCURVE",
"854 359 CURVE SMOOTH",
"867 348 OFFCURVE",
"873 325 OFFCURVE",
"873 288 CURVE SMOOTH",
"873 239 OFFCURVE",
"892 225 OFFCURVE",
"916 225 CURVE SMOOTH",
"939 225 OFFCURVE",
"959 247 OFFCURVE",
"959 287 CURVE SMOOTH",
"959 343 OFFCURVE",
"942 387 OFFCURVE",
"908 418 CURVE",
"874 445 OFFCURVE",
"828 459 OFFCURVE",
"769 460 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2018-11-26 18:28:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1111 238 OFFCURVE",
"1092 224 OFFCURVE",
"1092 175 CURVE",
"1092 138 OFFCURVE",
"1086 115 OFFCURVE",
"1073 104 CURVE SMOOTH",
"1052 86 OFFCURVE",
"1023 78 OFFCURVE",
"988 78 CURVE SMOOTH",
"844 78 LINE",
"844 -2 LINE",
"988 -2 LINE",
"1047 0 OFFCURVE",
"1093 18 OFFCURVE",
"1127 45 CURVE",
"1161 76 OFFCURVE",
"1178 120 OFFCURVE",
"1178 176 CURVE SMOOTH",
"1178 216 OFFCURVE",
"1158 238 OFFCURVE",
"1135 238 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 78 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"623 84 LINE SMOOTH",
"582 84 OFFCURVE",
"566 67 OFFCURVE",
"566 42 CURVE SMOOTH",
"566 18 OFFCURVE",
"582 0 OFFCURVE",
"623 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 78 OFFCURVE",
"1002 78 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2018-11-26 18:28:18 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"815 336 LINE",
"815 782 LINE",
"970 782 LINE SMOOTH",
"1010 782 OFFCURVE",
"1026 800 OFFCURVE",
"1026 825 CURVE SMOOTH",
"1026 849 OFFCURVE",
"1011 867 OFFCURVE",
"970 867 CURVE SMOOTH",
"731 867 LINE",
"587 866 LINE",
"421 866 LINE",
"361 866 OFFCURVE",
"312 841 OFFCURVE",
"274 814 CURVE SMOOTH",
"193 756 OFFCURVE",
"160 622 OFFCURVE",
"180 593 CURVE SMOOTH",
"194 573 OFFCURVE",
"221 568 OFFCURVE",
"241 582 CURVE SMOOTH",
"247 586 OFFCURVE",
"251 590 OFFCURVE",
"253 595 CURVE SMOOTH",
"255 600 OFFCURVE",
"258 610 OFFCURVE",
"262 628 CURVE SMOOTH",
"276 693 OFFCURVE",
"291 724 OFFCURVE",
"318 743 CURVE SMOOTH",
"347 764 OFFCURVE",
"388 781 OFFCURVE",
"445 781 CURVE SMOOTH",
"731 782 LINE",
"731 305 LINE"
);
},
{
closed = 1;
nodes = (
"517 781 LINE",
"731 781 LINE",
"731 -59 LINE SMOOTH",
"731 -196 OFFCURVE",
"635 -302 OFFCURVE",
"492 -302 CURVE SMOOTH",
"451 -302 LINE",
"445 -386 LINE",
"494 -386 LINE SMOOTH",
"550 -386 OFFCURVE",
"598 -376 OFFCURVE",
"639 -355 CURVE SMOOTH",
"756 -295 OFFCURVE",
"815 -202 OFFCURVE",
"815 -59 CURVE SMOOTH",
"815 866 LINE",
"522 866 LINE"
);
},
{
closed = 1;
nodes = (
"454 -302 LINE",
"349 -302 LINE SMOOTH",
"309 -302 OFFCURVE",
"293 -320 OFFCURVE",
"293 -345 CURVE SMOOTH",
"293 -370 OFFCURVE",
"309 -387 OFFCURVE",
"349 -387 CURVE SMOOTH",
"454 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2018-11-26 18:28:29 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"668 84 LINE SMOOTH",
"627 84 OFFCURVE",
"611 67 OFFCURVE",
"611 42 CURVE SMOOTH",
"611 18 OFFCURVE",
"627 0 OFFCURVE",
"668 0 CURVE SMOOTH",
"799 0 LINE",
"799 81 LINE"
);
},
{
closed = 1;
nodes = (
"1002 203 OFFCURVE",
"942 265 OFFCURVE",
"868 265 CURVE SMOOTH",
"795 265 OFFCURVE",
"735 203 OFFCURVE",
"735 130 CURVE SMOOTH",
"735 57 OFFCURVE",
"795 -4 OFFCURVE",
"868 -4 CURVE SMOOTH",
"942 -4 OFFCURVE",
"1002 57 OFFCURVE",
"1002 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"958 81 OFFCURVE",
"918 41 OFFCURVE",
"868 41 CURVE SMOOTH",
"819 41 OFFCURVE",
"779 82 OFFCURVE",
"779 130 CURVE SMOOTH",
"779 179 OFFCURVE",
"818 219 OFFCURVE",
"868 219 CURVE SMOOTH",
"918 219 OFFCURVE",
"958 179 OFFCURVE",
"958 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2018-11-26 18:28:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 822 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 814 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"166 748 OFFCURVE",
"150 626 OFFCURVE",
"164 592 CURVE",
"222 698 LINE",
"285 753 LINE SMOOTH",
"298 764 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"426 701 OFFCURVE",
"366 763 OFFCURVE",
"292 763 CURVE SMOOTH",
"219 763 OFFCURVE",
"159 701 OFFCURVE",
"159 628 CURVE SMOOTH",
"159 555 OFFCURVE",
"219 494 OFFCURVE",
"292 494 CURVE SMOOTH",
"366 494 OFFCURVE",
"426 555 OFFCURVE",
"426 628 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 579 OFFCURVE",
"342 539 OFFCURVE",
"292 539 CURVE SMOOTH",
"243 539 OFFCURVE",
"203 580 OFFCURVE",
"203 628 CURVE SMOOTH",
"203 677 OFFCURVE",
"242 717 OFFCURVE",
"292 717 CURVE SMOOTH",
"342 717 OFFCURVE",
"382 677 OFFCURVE",
"382 628 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2018-11-26 18:29:25 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"572 904 LINE",
"572 814 LINE",
"657 822 LINE",
"657 904 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"657 1121 LINE",
"657 1171 LINE SMOOTH",
"657 1212 OFFCURVE",
"639 1228 OFFCURVE",
"614 1228 CURVE SMOOTH",
"590 1228 OFFCURVE",
"572 1212 OFFCURVE",
"572 1171 CURVE SMOOTH",
"572 1119 LINE"
);
},
{
closed = 1;
nodes = (
"740 1080 OFFCURVE",
"680 1142 OFFCURVE",
"606 1142 CURVE SMOOTH",
"533 1142 OFFCURVE",
"473 1080 OFFCURVE",
"473 1007 CURVE SMOOTH",
"473 934 OFFCURVE",
"533 873 OFFCURVE",
"606 873 CURVE SMOOTH",
"680 873 OFFCURVE",
"740 934 OFFCURVE",
"740 1007 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"696 958 OFFCURVE",
"656 918 OFFCURVE",
"606 918 CURVE SMOOTH",
"557 918 OFFCURVE",
"517 959 OFFCURVE",
"517 1007 CURVE SMOOTH",
"517 1056 OFFCURVE",
"556 1096 OFFCURVE",
"606 1096 CURVE SMOOTH",
"656 1096 OFFCURVE",
"696 1056 OFFCURVE",
"696 1007 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"799 81 LINE",
"799 781 LINE",
"954 781 LINE SMOOTH",
"994 781 OFFCURVE",
"1010 799 OFFCURVE",
"1010 824 CURVE SMOOTH",
"1010 848 OFFCURVE",
"995 866 OFFCURVE",
"954 866 CURVE SMOOTH",
"715 866 LINE",
"571 865 LINE",
"405 865 LINE SMOOTH",
"345 865 OFFCURVE",
"296 840 OFFCURVE",
"258 813 CURVE SMOOTH",
"177 755 OFFCURVE",
"144 621 OFFCURVE",
"164 592 CURVE SMOOTH",
"178 572 OFFCURVE",
"205 567 OFFCURVE",
"225 581 CURVE SMOOTH",
"231 585 OFFCURVE",
"235 589 OFFCURVE",
"237 594 CURVE SMOOTH",
"239 599 OFFCURVE",
"242 609 OFFCURVE",
"246 627 CURVE SMOOTH",
"260 692 OFFCURVE",
"275 723 OFFCURVE",
"302 742 CURVE SMOOTH",
"331 763 OFFCURVE",
"372 780 OFFCURVE",
"429 780 CURVE SMOOTH",
"715 781 LINE",
"715 84 LINE",
"343 84 LINE SMOOTH",
"302 84 OFFCURVE",
"286 67 OFFCURVE",
"286 42 CURVE SMOOTH",
"286 18 OFFCURVE",
"302 0 OFFCURVE",
"343 0 CURVE SMOOTH",
"1002 0 LINE SMOOTH",
"1042 0 OFFCURVE",
"1058 17 OFFCURVE",
"1058 41 CURVE SMOOTH",
"1058 64 OFFCURVE",
"1043 81 OFFCURVE",
"1002 81 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2018-11-26 18:30:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 815 LINE",
"657 1164 LINE SMOOTH",
"657 1205 OFFCURVE",
"639 1221 OFFCURVE",
"614 1221 CURVE SMOOTH",
"590 1221 OFFCURVE",
"572 1205 OFFCURVE",
"572 1164 CURVE SMOOTH",
"572 807 LINE"
);
},
{
closed = 1;
nodes = (
"1021 1162 OFFCURVE",
"1050 1163 OFFCURVE",
"1055 1164 CURVE SMOOTH",
"1072 1168 OFFCURVE",
"1085 1185 OFFCURVE",
"1085 1204 CURVE SMOOTH",
"1085 1223 OFFCURVE",
"1072 1240 OFFCURVE",
"1055 1244 CURVE SMOOTH",
"1050 1245 OFFCURVE",
"1021 1246 OFFCURVE",
"968 1246 CURVE SMOOTH",
"261 1246 LINE SMOOTH",
"208 1246 OFFCURVE",
"179 1245 OFFCURVE",
"174 1244 CURVE SMOOTH",
"157 1240 OFFCURVE",
"144 1223 OFFCURVE",
"144 1204 CURVE SMOOTH",
"144 1185 OFFCURVE",
"157 1168 OFFCURVE",
"174 1164 CURVE SMOOTH",
"179 1163 OFFCURVE",
"208 1162 OFFCURVE",
"261 1162 CURVE SMOOTH",
"968 1162 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"815 336 LINE",
"815 782 LINE",
"970 782 LINE SMOOTH",
"1010 782 OFFCURVE",
"1026 800 OFFCURVE",
"1026 825 CURVE SMOOTH",
"1026 849 OFFCURVE",
"1011 867 OFFCURVE",
"970 867 CURVE SMOOTH",
"731 867 LINE",
"587 866 LINE",
"421 866 LINE",
"361 866 OFFCURVE",
"312 841 OFFCURVE",
"274 814 CURVE SMOOTH",
"193 756 OFFCURVE",
"160 622 OFFCURVE",
"180 593 CURVE SMOOTH",
"194 573 OFFCURVE",
"221 568 OFFCURVE",
"241 582 CURVE SMOOTH",
"247 586 OFFCURVE",
"251 590 OFFCURVE",
"253 595 CURVE SMOOTH",
"255 600 OFFCURVE",
"258 610 OFFCURVE",
"262 628 CURVE SMOOTH",
"276 693 OFFCURVE",
"291 724 OFFCURVE",
"318 743 CURVE SMOOTH",
"347 764 OFFCURVE",
"388 781 OFFCURVE",
"445 781 CURVE SMOOTH",
"731 782 LINE",
"731 305 LINE"
);
},
{
closed = 1;
nodes = (
"780 -222 LINE",
"803 -177 OFFCURVE",
"815 -123 OFFCURVE",
"815 -59 CURVE SMOOTH",
"815 866 LINE",
"522 866 LINE",
"517 781 LINE",
"731 781 LINE",
"731 -59 LINE SMOOTH",
"731 -122 OFFCURVE",
"711 -178 OFFCURVE",
"675 -221 CURVE"
);
},
{
closed = 1;
nodes = (
"719 -129 LINE",
"719 -179 LINE",
"625 -179 LINE SMOOTH",
"584 -179 OFFCURVE",
"568 -196 OFFCURVE",
"568 -221 CURVE SMOOTH",
"568 -245 OFFCURVE",
"584 -263 OFFCURVE",
"625 -263 CURVE SMOOTH",
"807 -263 LINE",
"807 -132 LINE"
);
},
{
closed = 1;
nodes = (
"800 -263 LINE",
"835 -262 OFFCURVE",
"864 -271 OFFCURVE",
"885 -289 CURVE SMOOTH",
"898 -300 OFFCURVE",
"904 -323 OFFCURVE",
"904 -360 CURVE SMOOTH",
"904 -409 OFFCURVE",
"923 -423 OFFCURVE",
"947 -423 CURVE SMOOTH",
"970 -423 OFFCURVE",
"990 -401 OFFCURVE",
"990 -361 CURVE SMOOTH",
"990 -305 OFFCURVE",
"973 -261 OFFCURVE",
"939 -230 CURVE",
"905 -203 OFFCURVE",
"859 -189 OFFCURVE",
"800 -188 CURVE"
);
}
);
width = 1229;
}
);
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2018-11-25 23:40:45 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH",
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2018-11-26 18:33:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"674 798 LINE",
"645 764 OFFCURVE",
"625 721 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"694 669 OFFCURVE",
"710 700 OFFCURVE",
"729 725 CURVE"
);
},
{
closed = 1;
nodes = (
"964 72 LINE",
"964 282 LINE",
"1023 283 OFFCURVE",
"1069 297 OFFCURVE",
"1103 324 CURVE",
"1137 355 OFFCURVE",
"1154 399 OFFCURVE",
"1154 455 CURVE SMOOTH",
"1154 495 OFFCURVE",
"1134 517 OFFCURVE",
"1111 517 CURVE SMOOTH",
"1087 517 OFFCURVE",
"1068 503 OFFCURVE",
"1068 454 CURVE SMOOTH",
"1068 417 OFFCURVE",
"1062 394 OFFCURVE",
"1049 383 CURVE SMOOTH",
"1028 365 OFFCURVE",
"999 356 OFFCURVE",
"964 357 CURVE",
"964 489 LINE",
"913 489 LINE"
);
},
{
closed = 1;
nodes = (
"729 725 LINE",
"742 741 OFFCURVE",
"774 782 OFFCURVE",
"801 783 CURVE SMOOTH",
"819 784 OFFCURVE",
"848 768 OFFCURVE",
"867 705 CURVE SMOOTH",
"880 663 OFFCURVE",
"916 544 OFFCURVE",
"916 407 CURVE SMOOTH",
"916 0 LINE",
"1052 0 LINE SMOOTH",
"1089 0 OFFCURVE",
"1108 14 OFFCURVE",
"1108 43 CURVE SMOOTH",
"1108 71 OFFCURVE",
"1089 85 OFFCURVE",
"1052 85 CURVE SMOOTH",
"1000 85 LINE",
"1000 407 LINE SMOOTH",
"1000 519 OFFCURVE",
"986 632 OFFCURVE",
"966 689 CURVE SMOOTH",
"928 798 OFFCURVE",
"890 868 OFFCURVE",
"788 868 CURVE SMOOTH",
"738 868 OFFCURVE",
"704 833 OFFCURVE",
"674 798 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2018-11-26 18:35:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"661 798 LINE",
"632 764 OFFCURVE",
"612 721 OFFCURVE",
"601 693 CURVE",
"582 741 OFFCURVE",
"545 792 OFFCURVE",
"509 821 CURVE SMOOTH",
"476 848 OFFCURVE",
"427 866 OFFCURVE",
"388 866 CURVE SMOOTH",
"327 866 OFFCURVE",
"259 841 OFFCURVE",
"217 804 CURVE SMOOTH",
"152 746 OFFCURVE",
"108 592 OFFCURVE",
"108 417 CURVE SMOOTH",
"108 85 LINE",
"56 85 LINE SMOOTH",
"19 85 OFFCURVE",
"0 71 OFFCURVE",
"0 43 CURVE SMOOTH",
"0 14 OFFCURVE",
"19 0 OFFCURVE",
"56 0 CURVE SMOOTH",
"193 0 LINE",
"193 407 LINE SMOOTH",
"193 496 OFFCURVE",
"203 586 OFFCURVE",
"217 634 CURVE SMOOTH",
"244 725 OFFCURVE",
"305 786 OFFCURVE",
"367 786 CURVE SMOOTH",
"438 786 OFFCURVE",
"503 726 OFFCURVE",
"530 635 CURVE SMOOTH",
"544 587 OFFCURVE",
"554 497 OFFCURVE",
"554 408 CURVE SMOOTH",
"554 85 LINE",
"530 85 LINE SMOOTH",
"493 85 OFFCURVE",
"474 71 OFFCURVE",
"474 43 CURVE SMOOTH",
"474 14 OFFCURVE",
"493 0 OFFCURVE",
"530 0 CURVE SMOOTH",
"647 0 LINE",
"647 1 LINE",
"671 1 LINE SMOOTH",
"708 1 OFFCURVE",
"727 15 OFFCURVE",
"727 44 CURVE SMOOTH",
"727 72 OFFCURVE",
"708 86 OFFCURVE",
"671 86 CURVE SMOOTH",
"647 86 LINE",
"647 407 LINE SMOOTH",
"647 496 OFFCURVE",
"657 586 OFFCURVE",
"671 634 CURVE SMOOTH",
"681 669 OFFCURVE",
"697 700 OFFCURVE",
"716 725 CURVE"
);
},
{
closed = 1;
nodes = (
"1032 0 LINE SMOOTH",
"1091 1 OFFCURVE",
"1136 17 OFFCURVE",
"1170 44 CURVE",
"1204 75 OFFCURVE",
"1221 119 OFFCURVE",
"1221 175 CURVE SMOOTH",
"1221 215 OFFCURVE",
"1201 237 OFFCURVE",
"1178 237 CURVE SMOOTH",
"1154 237 OFFCURVE",
"1135 223 OFFCURVE",
"1135 174 CURVE SMOOTH",
"1135 137 OFFCURVE",
"1129 114 OFFCURVE",
"1116 103 CURVE SMOOTH",
"1095 85 OFFCURVE",
"1066 76 OFFCURVE",
"1031 77 CURVE"
);
},
{
closed = 1;
nodes = (
"716 725 LINE",
"729 741 OFFCURVE",
"761 782 OFFCURVE",
"788 783 CURVE SMOOTH",
"806 784 OFFCURVE",
"835 768 OFFCURVE",
"854 705 CURVE SMOOTH",
"867 663 OFFCURVE",
"903 544 OFFCURVE",
"903 407 CURVE SMOOTH",
"903 0 LINE",
"1039 0 LINE",
"1076 0 OFFCURVE",
"1095 14 OFFCURVE",
"1095 43 CURVE SMOOTH",
"1095 71 OFFCURVE",
"1076 77 OFFCURVE",
"1039 77 CURVE",
"987 77 LINE",
"987 407 LINE SMOOTH",
"987 519 OFFCURVE",
"973 632 OFFCURVE",
"953 689 CURVE SMOOTH",
"915 798 OFFCURVE",
"877 868 OFFCURVE",
"775 868 CURVE SMOOTH",
"725 868 OFFCURVE",
"691 833 OFFCURVE",
"661 798 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2018-11-26 18:35:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 -386 OFFCURVE",
"1208 -372 OFFCURVE",
"1208 -343 CURVE SMOOTH",
"1208 -315 OFFCURVE",
"1189 -301 OFFCURVE",
"1152 -301 CURVE SMOOTH",
"1100 -301 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 -386 LINE",
"1152 -386 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2018-11-26 18:36:47 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"674 798 LINE",
"645 764 OFFCURVE",
"625 721 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"694 669 OFFCURVE",
"710 700 OFFCURVE",
"729 725 CURVE"
);
},
{
closed = 1;
nodes = (
"729 725 LINE",
"742 741 OFFCURVE",
"774 782 OFFCURVE",
"801 783 CURVE SMOOTH",
"819 784 OFFCURVE",
"848 768 OFFCURVE",
"867 705 CURVE SMOOTH",
"880 663 OFFCURVE",
"916 544 OFFCURVE",
"916 407 CURVE SMOOTH",
"916 83 LINE",
"1000 85 LINE",
"1000 407 LINE SMOOTH",
"1000 519 OFFCURVE",
"986 632 OFFCURVE",
"966 689 CURVE SMOOTH",
"928 798 OFFCURVE",
"890 868 OFFCURVE",
"788 868 CURVE SMOOTH",
"738 868 OFFCURVE",
"704 833 OFFCURVE",
"674 798 CURVE"
);
},
{
closed = 1;
nodes = (
"1200 203 OFFCURVE",
"1140 265 OFFCURVE",
"1066 265 CURVE SMOOTH",
"993 265 OFFCURVE",
"933 203 OFFCURVE",
"933 130 CURVE SMOOTH",
"933 57 OFFCURVE",
"993 -4 OFFCURVE",
"1066 -4 CURVE SMOOTH",
"1140 -4 OFFCURVE",
"1200 57 OFFCURVE",
"1200 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1156 81 OFFCURVE",
"1116 41 OFFCURVE",
"1066 41 CURVE SMOOTH",
"1017 41 OFFCURVE",
"977 82 OFFCURVE",
"977 130 CURVE SMOOTH",
"977 179 OFFCURVE",
"1016 219 OFFCURVE",
"1066 219 CURVE SMOOTH",
"1116 219 OFFCURVE",
"1156 179 OFFCURVE",
"1156 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"916 156 LINE",
"916 46 LINE SMOOTH",
"916 5 OFFCURVE",
"934 -10 OFFCURVE",
"958 -10 CURVE SMOOTH",
"983 -10 OFFCURVE",
"1000 5 OFFCURVE",
"1000 46 CURVE SMOOTH",
"1000 140 LINE",
"1000 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2018-11-26 18:37:53 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 199 LINE SMOOTH",
"567 169 OFFCURVE",
"591 146 OFFCURVE",
"621 147 CURVE SMOOTH",
"647 148 LINE",
"647 -301 LINE",
"623 -301 LINE SMOOTH",
"586 -301 OFFCURVE",
"567 -315 OFFCURVE",
"567 -343 CURVE SMOOTH",
"567 -372 OFFCURVE",
"586 -386 OFFCURVE",
"623 -386 CURVE SMOOTH",
"740 -386 LINE",
"740 -385 LINE",
"764 -385 LINE SMOOTH",
"801 -385 OFFCURVE",
"820 -371 OFFCURVE",
"820 -342 CURVE SMOOTH",
"820 -314 OFFCURVE",
"801 -300 OFFCURVE",
"764 -300 CURVE SMOOTH",
"740 -300 LINE",
"740 154 LINE SMOOTH",
"740 184 OFFCURVE",
"716 207 OFFCURVE",
"686 206 CURVE SMOOTH",
"660 205 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH",
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2018-11-26 18:38:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH",
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 -301 LINE",
"69 -301 LINE SMOOTH",
"32 -301 OFFCURVE",
"13 -315 OFFCURVE",
"13 -343 CURVE SMOOTH",
"13 -372 OFFCURVE",
"32 -386 OFFCURVE",
"69 -386 CURVE SMOOTH",
"206 -386 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2018-11-26 18:39:36 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1100 -192 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 -190.008 LINE"
);
},
{
closed = 1;
nodes = (
"1016 -99 LINE",
"1016 -149 LINE",
"919 -149 LINE SMOOTH",
"878 -149 OFFCURVE",
"862 -166 OFFCURVE",
"862 -191 CURVE SMOOTH",
"862 -215 OFFCURVE",
"878 -233 OFFCURVE",
"919 -233 CURVE SMOOTH",
"1101 -233 LINE",
"1100 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1094 -233 LINE",
"1129 -232 OFFCURVE",
"1158 -241 OFFCURVE",
"1179 -259 CURVE SMOOTH",
"1192 -270 OFFCURVE",
"1198 -293 OFFCURVE",
"1198 -330 CURVE SMOOTH",
"1198 -379 OFFCURVE",
"1217 -393 OFFCURVE",
"1241 -393 CURVE SMOOTH",
"1264 -393 OFFCURVE",
"1284 -371 OFFCURVE",
"1284 -331 CURVE SMOOTH",
"1284 -275 OFFCURVE",
"1267 -231 OFFCURVE",
"1233 -200 CURVE",
"1199 -173 OFFCURVE",
"1153 -159 OFFCURVE",
"1094 -158 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2018-11-25 23:45:32 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH",
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1082 203 OFFCURVE",
"1022 265 OFFCURVE",
"948 265 CURVE SMOOTH",
"875 265 OFFCURVE",
"815 203 OFFCURVE",
"815 130 CURVE SMOOTH",
"815 57 OFFCURVE",
"875 -4 OFFCURVE",
"948 -4 CURVE SMOOTH",
"1022 -4 OFFCURVE",
"1082 57 OFFCURVE",
"1082 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1038 81 OFFCURVE",
"998 41 OFFCURVE",
"948 41 CURVE SMOOTH",
"899 41 OFFCURVE",
"859 82 OFFCURVE",
"859 130 CURVE SMOOTH",
"859 179 OFFCURVE",
"898 219 OFFCURVE",
"948 219 CURVE SMOOTH",
"998 219 OFFCURVE",
"1038 179 OFFCURVE",
"1038 130 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2018-11-26 18:40:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"996 203 OFFCURVE",
"936 265 OFFCURVE",
"862 265 CURVE SMOOTH",
"789 265 OFFCURVE",
"729 203 OFFCURVE",
"729 130 CURVE SMOOTH",
"729 57 OFFCURVE",
"789 -4 OFFCURVE",
"862 -4 CURVE SMOOTH",
"936 -4 OFFCURVE",
"996 57 OFFCURVE",
"996 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"952 81 OFFCURVE",
"912 41 OFFCURVE",
"862 41 CURVE SMOOTH",
"813 41 OFFCURVE",
"773 82 OFFCURVE",
"773 130 CURVE SMOOTH",
"773 179 OFFCURVE",
"812 219 OFFCURVE",
"862 219 CURVE SMOOTH",
"912 219 OFFCURVE",
"952 179 OFFCURVE",
"952 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"674 798 LINE",
"645 764 OFFCURVE",
"625 721 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"660 1 LINE",
"660 86 LINE",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"694 669 OFFCURVE",
"710 700 OFFCURVE",
"729 725 CURVE"
);
},
{
closed = 1;
nodes = (
"964 72 LINE",
"964 282 LINE",
"1023 283 OFFCURVE",
"1069 297 OFFCURVE",
"1103 324 CURVE",
"1137 355 OFFCURVE",
"1154 399 OFFCURVE",
"1154 455 CURVE SMOOTH",
"1154 495 OFFCURVE",
"1134 517 OFFCURVE",
"1111 517 CURVE SMOOTH",
"1087 517 OFFCURVE",
"1068 503 OFFCURVE",
"1068 454 CURVE SMOOTH",
"1068 417 OFFCURVE",
"1062 394 OFFCURVE",
"1049 383 CURVE SMOOTH",
"1028 365 OFFCURVE",
"999 356 OFFCURVE",
"964 357 CURVE",
"964 489 LINE",
"913 489 LINE"
);
},
{
closed = 1;
nodes = (
"729 725 LINE",
"742 741 OFFCURVE",
"774 782 OFFCURVE",
"801 783 CURVE SMOOTH",
"819 784 OFFCURVE",
"848 768 OFFCURVE",
"867 705 CURVE SMOOTH",
"880 663 OFFCURVE",
"916 544 OFFCURVE",
"916 407 CURVE SMOOTH",
"916 0 LINE",
"1052 0 LINE SMOOTH",
"1089 0 OFFCURVE",
"1108 14 OFFCURVE",
"1108 43 CURVE SMOOTH",
"1108 71 OFFCURVE",
"1089 85 OFFCURVE",
"1052 85 CURVE SMOOTH",
"1000 85 LINE",
"1000 407 LINE SMOOTH",
"1000 519 OFFCURVE",
"986 632 OFFCURVE",
"966 689 CURVE SMOOTH",
"928 798 OFFCURVE",
"890 868 OFFCURVE",
"788 868 CURVE SMOOTH",
"738 868 OFFCURVE",
"704 833 OFFCURVE",
"674 798 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2018-11-26 18:41:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"972 203 OFFCURVE",
"912 265 OFFCURVE",
"838 265 CURVE SMOOTH",
"765 265 OFFCURVE",
"705 203 OFFCURVE",
"705 130 CURVE SMOOTH",
"705 57 OFFCURVE",
"765 -4 OFFCURVE",
"838 -4 CURVE SMOOTH",
"912 -4 OFFCURVE",
"972 57 OFFCURVE",
"972 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"928 81 OFFCURVE",
"888 41 OFFCURVE",
"838 41 CURVE SMOOTH",
"789 41 OFFCURVE",
"749 82 OFFCURVE",
"749 130 CURVE SMOOTH",
"749 179 OFFCURVE",
"788 219 OFFCURVE",
"838 219 CURVE SMOOTH",
"888 219 OFFCURVE",
"928 179 OFFCURVE",
"928 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"661 798 LINE",
"632 764 OFFCURVE",
"612 721 OFFCURVE",
"601 693 CURVE",
"582 741 OFFCURVE",
"545 792 OFFCURVE",
"509 821 CURVE SMOOTH",
"476 848 OFFCURVE",
"427 866 OFFCURVE",
"388 866 CURVE SMOOTH",
"327 866 OFFCURVE",
"259 841 OFFCURVE",
"217 804 CURVE SMOOTH",
"152 746 OFFCURVE",
"108 592 OFFCURVE",
"108 417 CURVE SMOOTH",
"108 85 LINE",
"56 85 LINE SMOOTH",
"19 85 OFFCURVE",
"0 71 OFFCURVE",
"0 43 CURVE SMOOTH",
"0 14 OFFCURVE",
"19 0 OFFCURVE",
"56 0 CURVE SMOOTH",
"193 0 LINE",
"193 407 LINE SMOOTH",
"193 496 OFFCURVE",
"203 586 OFFCURVE",
"217 634 CURVE SMOOTH",
"244 725 OFFCURVE",
"305 786 OFFCURVE",
"367 786 CURVE SMOOTH",
"438 786 OFFCURVE",
"503 726 OFFCURVE",
"530 635 CURVE SMOOTH",
"544 587 OFFCURVE",
"554 497 OFFCURVE",
"554 408 CURVE SMOOTH",
"554 85 LINE",
"530 85 LINE SMOOTH",
"493 85 OFFCURVE",
"474 71 OFFCURVE",
"474 43 CURVE SMOOTH",
"474 14 OFFCURVE",
"493 0 OFFCURVE",
"530 0 CURVE SMOOTH",
"647 0 LINE",
"647 1 LINE",
"647 86 LINE",
"647 407 LINE SMOOTH",
"647 496 OFFCURVE",
"657 586 OFFCURVE",
"671 634 CURVE SMOOTH",
"681 669 OFFCURVE",
"697 700 OFFCURVE",
"716 725 CURVE"
);
},
{
closed = 1;
nodes = (
"1032 0 LINE SMOOTH",
"1091 1 OFFCURVE",
"1136 17 OFFCURVE",
"1170 44 CURVE",
"1204 75 OFFCURVE",
"1221 119 OFFCURVE",
"1221 175 CURVE SMOOTH",
"1221 215 OFFCURVE",
"1201 237 OFFCURVE",
"1178 237 CURVE SMOOTH",
"1154 237 OFFCURVE",
"1135 223 OFFCURVE",
"1135 174 CURVE SMOOTH",
"1135 137 OFFCURVE",
"1129 114 OFFCURVE",
"1116 103 CURVE SMOOTH",
"1095 85 OFFCURVE",
"1066 76 OFFCURVE",
"1031 77 CURVE"
);
},
{
closed = 1;
nodes = (
"716 725 LINE",
"729 741 OFFCURVE",
"761 782 OFFCURVE",
"788 783 CURVE SMOOTH",
"806 784 OFFCURVE",
"835 768 OFFCURVE",
"854 705 CURVE SMOOTH",
"867 663 OFFCURVE",
"903 544 OFFCURVE",
"903 407 CURVE SMOOTH",
"903 0 LINE",
"1039 0 LINE",
"1076 0 OFFCURVE",
"1095 14 OFFCURVE",
"1095 43 CURVE SMOOTH",
"1095 71 OFFCURVE",
"1076 77 OFFCURVE",
"1039 77 CURVE",
"987 77 LINE",
"987 407 LINE SMOOTH",
"987 519 OFFCURVE",
"973 632 OFFCURVE",
"953 689 CURVE SMOOTH",
"915 798 OFFCURVE",
"877 868 OFFCURVE",
"775 868 CURVE SMOOTH",
"725 868 OFFCURVE",
"691 833 OFFCURVE",
"661 798 CURVE"
);
}
);
width = 1229;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2018-11-26 18:41:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1189 -386 OFFCURVE",
"1208 -372 OFFCURVE",
"1208 -343 CURVE SMOOTH",
"1208 -315 OFFCURVE",
"1189 -301 OFFCURVE",
"1152 -301 CURVE SMOOTH",
"1100 -301 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 -386 LINE",
"1152 -386 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1082 -186 OFFCURVE",
"1022 -124 OFFCURVE",
"948 -124 CURVE SMOOTH",
"875 -124 OFFCURVE",
"815 -186 OFFCURVE",
"815 -259 CURVE SMOOTH",
"815 -332 OFFCURVE",
"875 -393 OFFCURVE",
"948 -393 CURVE SMOOTH",
"1022 -393 OFFCURVE",
"1082 -332 OFFCURVE",
"1082 -259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1038 -308 OFFCURVE",
"998 -348 OFFCURVE",
"948 -348 CURVE SMOOTH",
"899 -348 OFFCURVE",
"859 -307 OFFCURVE",
"859 -259 CURVE SMOOTH",
"859 -210 OFFCURVE",
"898 -170 OFFCURVE",
"948 -170 CURVE SMOOTH",
"998 -170 OFFCURVE",
"1038 -210 OFFCURVE",
"1038 -259 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2018-11-26 18:42:27 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"991 203 OFFCURVE",
"931 265 OFFCURVE",
"857 265 CURVE SMOOTH",
"784 265 OFFCURVE",
"724 203 OFFCURVE",
"724 130 CURVE SMOOTH",
"724 57 OFFCURVE",
"784 -4 OFFCURVE",
"857 -4 CURVE SMOOTH",
"931 -4 OFFCURVE",
"991 57 OFFCURVE",
"991 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 81 OFFCURVE",
"907 41 OFFCURVE",
"857 41 CURVE SMOOTH",
"808 41 OFFCURVE",
"768 82 OFFCURVE",
"768 130 CURVE SMOOTH",
"768 179 OFFCURVE",
"807 219 OFFCURVE",
"857 219 CURVE SMOOTH",
"907 219 OFFCURVE",
"947 179 OFFCURVE",
"947 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"674 798 LINE",
"645 764 OFFCURVE",
"625 721 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"694 669 OFFCURVE",
"710 700 OFFCURVE",
"729 725 CURVE"
);
},
{
closed = 1;
nodes = (
"729 725 LINE",
"742 741 OFFCURVE",
"774 782 OFFCURVE",
"801 783 CURVE SMOOTH",
"819 784 OFFCURVE",
"848 768 OFFCURVE",
"867 705 CURVE SMOOTH",
"880 663 OFFCURVE",
"916 544 OFFCURVE",
"916 407 CURVE SMOOTH",
"916 83 LINE",
"1000 85 LINE",
"1000 407 LINE SMOOTH",
"1000 519 OFFCURVE",
"986 632 OFFCURVE",
"966 689 CURVE SMOOTH",
"928 798 OFFCURVE",
"890 868 OFFCURVE",
"788 868 CURVE SMOOTH",
"738 868 OFFCURVE",
"704 833 OFFCURVE",
"674 798 CURVE"
);
},
{
closed = 1;
nodes = (
"1200 453 OFFCURVE",
"1140 515 OFFCURVE",
"1066 515 CURVE SMOOTH",
"993 515 OFFCURVE",
"933 453 OFFCURVE",
"933 380 CURVE SMOOTH",
"933 307 OFFCURVE",
"993 246 OFFCURVE",
"1066 246 CURVE SMOOTH",
"1140 246 OFFCURVE",
"1200 307 OFFCURVE",
"1200 380 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1156 331 OFFCURVE",
"1116 291 OFFCURVE",
"1066 291 CURVE SMOOTH",
"1017 291 OFFCURVE",
"977 332 OFFCURVE",
"977 380 CURVE SMOOTH",
"977 429 OFFCURVE",
"1016 469 OFFCURVE",
"1066 469 CURVE SMOOTH",
"1116 469 OFFCURVE",
"1156 429 OFFCURVE",
"1156 380 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"916 156 LINE",
"916 46 LINE SMOOTH",
"916 5 OFFCURVE",
"934 -10 OFFCURVE",
"958 -10 CURVE SMOOTH",
"983 -10 OFFCURVE",
"1000 5 OFFCURVE",
"1000 46 CURVE SMOOTH",
"1000 140 LINE",
"1000 146 LINE"
);
}
);
width = 1229;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2018-11-26 18:42:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1082 203 OFFCURVE",
"1022 265 OFFCURVE",
"948 265 CURVE SMOOTH",
"875 265 OFFCURVE",
"815 203 OFFCURVE",
"815 130 CURVE SMOOTH",
"815 57 OFFCURVE",
"875 -4 OFFCURVE",
"948 -4 CURVE SMOOTH",
"1022 -4 OFFCURVE",
"1082 57 OFFCURVE",
"1082 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1038 81 OFFCURVE",
"998 41 OFFCURVE",
"948 41 CURVE SMOOTH",
"899 41 OFFCURVE",
"859 82 OFFCURVE",
"859 130 CURVE SMOOTH",
"859 179 OFFCURVE",
"898 219 OFFCURVE",
"948 219 CURVE SMOOTH",
"998 219 OFFCURVE",
"1038 179 OFFCURVE",
"1038 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 199 LINE SMOOTH",
"567 169 OFFCURVE",
"591 146 OFFCURVE",
"621 147 CURVE SMOOTH",
"647 148 LINE",
"647 -301 LINE",
"623 -301 LINE SMOOTH",
"586 -301 OFFCURVE",
"567 -315 OFFCURVE",
"567 -343 CURVE SMOOTH",
"567 -372 OFFCURVE",
"586 -386 OFFCURVE",
"623 -386 CURVE SMOOTH",
"740 -386 LINE",
"740 -385 LINE",
"764 -385 LINE SMOOTH",
"801 -385 OFFCURVE",
"820 -371 OFFCURVE",
"820 -342 CURVE SMOOTH",
"820 -314 OFFCURVE",
"801 -300 OFFCURVE",
"764 -300 CURVE SMOOTH",
"740 -300 LINE",
"740 154 LINE SMOOTH",
"740 184 OFFCURVE",
"716 207 OFFCURVE",
"686 206 CURVE SMOOTH",
"660 205 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH",
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2018-11-26 18:43:25 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 -187 OFFCURVE",
"352 -125 OFFCURVE",
"278 -125 CURVE SMOOTH",
"205 -125 OFFCURVE",
"145 -187 OFFCURVE",
"145 -260 CURVE SMOOTH",
"145 -333 OFFCURVE",
"205 -394 OFFCURVE",
"278 -394 CURVE SMOOTH",
"352 -394 OFFCURVE",
"412 -333 OFFCURVE",
"412 -260 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 -309 OFFCURVE",
"328 -349 OFFCURVE",
"278 -349 CURVE SMOOTH",
"229 -349 OFFCURVE",
"189 -308 OFFCURVE",
"189 -260 CURVE SMOOTH",
"189 -211 OFFCURVE",
"228 -171 OFFCURVE",
"278 -171 CURVE SMOOTH",
"328 -171 OFFCURVE",
"368 -211 OFFCURVE",
"368 -260 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1082 203 OFFCURVE",
"1022 265 OFFCURVE",
"948 265 CURVE SMOOTH",
"875 265 OFFCURVE",
"815 203 OFFCURVE",
"815 130 CURVE SMOOTH",
"815 57 OFFCURVE",
"875 -4 OFFCURVE",
"948 -4 CURVE SMOOTH",
"1022 -4 OFFCURVE",
"1082 57 OFFCURVE",
"1082 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1038 81 OFFCURVE",
"998 41 OFFCURVE",
"948 41 CURVE SMOOTH",
"899 41 OFFCURVE",
"859 82 OFFCURVE",
"859 130 CURVE SMOOTH",
"859 179 OFFCURVE",
"898 219 OFFCURVE",
"948 219 CURVE SMOOTH",
"998 219 OFFCURVE",
"1038 179 OFFCURVE",
"1038 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1189 0 OFFCURVE",
"1208 14 OFFCURVE",
"1208 43 CURVE SMOOTH",
"1208 71 OFFCURVE",
"1189 85 OFFCURVE",
"1152 85 CURVE SMOOTH",
"1100 85 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 -301 LINE",
"69 -301 LINE SMOOTH",
"32 -301 OFFCURVE",
"13 -315 OFFCURVE",
"13 -343 CURVE SMOOTH",
"13 -372 OFFCURVE",
"32 -386 OFFCURVE",
"69 -386 CURVE SMOOTH",
"206 -386 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"684 1 LINE SMOOTH",
"721 1 OFFCURVE",
"740 15 OFFCURVE",
"740 44 CURVE SMOOTH",
"740 72 OFFCURVE",
"721 86 OFFCURVE",
"684 86 CURVE SMOOTH",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 0 LINE",
"1152 0 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2018-11-26 18:44:03 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412 203 OFFCURVE",
"352 265 OFFCURVE",
"278 265 CURVE SMOOTH",
"205 265 OFFCURVE",
"145 203 OFFCURVE",
"145 130 CURVE SMOOTH",
"145 57 OFFCURVE",
"205 -4 OFFCURVE",
"278 -4 CURVE SMOOTH",
"352 -4 OFFCURVE",
"412 57 OFFCURVE",
"412 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"368 81 OFFCURVE",
"328 41 OFFCURVE",
"278 41 CURVE SMOOTH",
"229 41 OFFCURVE",
"189 82 OFFCURVE",
"189 130 CURVE SMOOTH",
"189 179 OFFCURVE",
"228 219 OFFCURVE",
"278 219 CURVE SMOOTH",
"328 219 OFFCURVE",
"368 179 OFFCURVE",
"368 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"852 203 OFFCURVE",
"792 265 OFFCURVE",
"718 265 CURVE SMOOTH",
"645 265 OFFCURVE",
"585 203 OFFCURVE",
"585 130 CURVE SMOOTH",
"585 57 OFFCURVE",
"645 -4 OFFCURVE",
"718 -4 CURVE SMOOTH",
"792 -4 OFFCURVE",
"852 57 OFFCURVE",
"852 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"808 81 OFFCURVE",
"768 41 OFFCURVE",
"718 41 CURVE SMOOTH",
"669 41 OFFCURVE",
"629 82 OFFCURVE",
"629 130 CURVE SMOOTH",
"629 179 OFFCURVE",
"668 219 OFFCURVE",
"718 219 CURVE SMOOTH",
"768 219 OFFCURVE",
"808 179 OFFCURVE",
"808 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1100 -192 LINE",
"1100 407 LINE SMOOTH",
"1100 519 OFFCURVE",
"1086 632 OFFCURVE",
"1066 689 CURVE SMOOTH",
"1028 798 OFFCURVE",
"945 871 OFFCURVE",
"860 871 CURVE SMOOTH",
"787 871 OFFCURVE",
"724 846 OFFCURVE",
"693 818 CURVE SMOOTH",
"654 782 OFFCURVE",
"627 727 OFFCURVE",
"614 693 CURVE",
"595 741 OFFCURVE",
"558 792 OFFCURVE",
"522 821 CURVE SMOOTH",
"489 848 OFFCURVE",
"440 866 OFFCURVE",
"401 866 CURVE SMOOTH",
"340 866 OFFCURVE",
"272 841 OFFCURVE",
"230 804 CURVE SMOOTH",
"165 746 OFFCURVE",
"121 592 OFFCURVE",
"121 417 CURVE SMOOTH",
"121 85 LINE",
"69 85 LINE SMOOTH",
"32 85 OFFCURVE",
"13 71 OFFCURVE",
"13 43 CURVE SMOOTH",
"13 14 OFFCURVE",
"32 0 OFFCURVE",
"69 0 CURVE SMOOTH",
"206 0 LINE",
"206 407 LINE SMOOTH",
"206 496 OFFCURVE",
"216 586 OFFCURVE",
"230 634 CURVE SMOOTH",
"257 725 OFFCURVE",
"318 786 OFFCURVE",
"380 786 CURVE SMOOTH",
"451 786 OFFCURVE",
"516 726 OFFCURVE",
"543 635 CURVE SMOOTH",
"557 587 OFFCURVE",
"567 497 OFFCURVE",
"567 408 CURVE SMOOTH",
"567 85 LINE",
"543 85 LINE SMOOTH",
"506 85 OFFCURVE",
"487 71 OFFCURVE",
"487 43 CURVE SMOOTH",
"487 14 OFFCURVE",
"506 0 OFFCURVE",
"543 0 CURVE SMOOTH",
"660 0 LINE",
"660 1 LINE",
"660 86 LINE",
"660 407 LINE SMOOTH",
"660 496 OFFCURVE",
"670 586 OFFCURVE",
"684 634 CURVE SMOOTH",
"711 728 OFFCURVE",
"778 790 OFFCURVE",
"849 790 CURVE SMOOTH",
"901 790 OFFCURVE",
"932 756 OFFCURVE",
"967 705 CURVE SMOOTH",
"996 663 OFFCURVE",
"1016 544 OFFCURVE",
"1016 407 CURVE SMOOTH",
"1016 -190 LINE"
);
},
{
closed = 1;
nodes = (
"1016 -99 LINE",
"1016 -149 LINE",
"919 -149 LINE SMOOTH",
"878 -149 OFFCURVE",
"862 -166 OFFCURVE",
"862 -191 CURVE SMOOTH",
"862 -215 OFFCURVE",
"878 -233 OFFCURVE",
"919 -233 CURVE SMOOTH",
"1101 -233 LINE",
"1100 -102 LINE"
);
},
{
closed = 1;
nodes = (
"1094 -233 LINE",
"1129 -232 OFFCURVE",
"1158 -241 OFFCURVE",
"1179 -259 CURVE SMOOTH",
"1192 -270 OFFCURVE",
"1198 -293 OFFCURVE",
"1198 -330 CURVE SMOOTH",
"1198 -379 OFFCURVE",
"1217 -393 OFFCURVE",
"1241 -393 CURVE SMOOTH",
"1264 -393 OFFCURVE",
"1284 -371 OFFCURVE",
"1284 -331 CURVE SMOOTH",
"1284 -275 OFFCURVE",
"1267 -231 OFFCURVE",
"1233 -200 CURVE",
"1199 -173 OFFCURVE",
"1153 -159 OFFCURVE",
"1094 -158 CURVE"
);
}
);
width = 1229;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2018-11-26 18:53:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
},
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
}
);
width = 1229;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2018-11-26 18:53:29 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"914 -201 LINE",
"973 -200 OFFCURVE",
"1019 -186 OFFCURVE",
"1053 -159 CURVE",
"1087 -128 OFFCURVE",
"1104 -84 OFFCURVE",
"1104 -28 CURVE SMOOTH",
"1104 12 OFFCURVE",
"1084 34 OFFCURVE",
"1061 34 CURVE SMOOTH",
"1037 34 OFFCURVE",
"1018 20 OFFCURVE",
"1018 -29 CURVE SMOOTH",
"1018 -66 OFFCURVE",
"1012 -89 OFFCURVE",
"999 -100 CURVE SMOOTH",
"978 -118 OFFCURVE",
"949 -127 OFFCURVE",
"914 -126 CURVE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2018-11-26 18:53:41 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"248 -386 LINE",
"386 -386 LINE SMOOTH",
"426 -386 OFFCURVE",
"442 -368 OFFCURVE",
"442 -344 CURVE SMOOTH",
"442 -319 OFFCURVE",
"426 -302 OFFCURVE",
"386 -302 CURVE SMOOTH",
"361 -302 LINE",
"277 -302 LINE",
"261 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
},
{
closed = 1;
nodes = (
"890 -103 LINE",
"890 -384 LINE",
"974 -384 LINE"
);
},
{
closed = 1;
nodes = (
"1154 -150 OFFCURVE",
"1135 -164 OFFCURVE",
"1135 -213 CURVE SMOOTH",
"1135 -250 OFFCURVE",
"1129 -273 OFFCURVE",
"1116 -284 CURVE SMOOTH",
"1095 -302 OFFCURVE",
"1066 -310 OFFCURVE",
"1031 -310 CURVE SMOOTH",
"887 -310 LINE",
"887 -386 LINE",
"1031 -386 LINE",
"1090 -384 OFFCURVE",
"1136 -370 OFFCURVE",
"1170 -343 CURVE",
"1204 -312 OFFCURVE",
"1221 -268 OFFCURVE",
"1221 -212 CURVE SMOOTH",
"1221 -172 OFFCURVE",
"1201 -150 OFFCURVE",
"1178 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2018-11-26 18:53:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 -106 LINE",
"233 -106 LINE",
"193 -106 OFFCURVE",
"177 -123 OFFCURVE",
"177 -148 CURVE SMOOTH",
"177 -172 OFFCURVE",
"193 -190 OFFCURVE",
"233 -190 CURVE SMOOTH",
"507 -190 LINE SMOOTH",
"547 -190 OFFCURVE",
"563 -172 OFFCURVE",
"563 -148 CURVE SMOOTH",
"563 -123 OFFCURVE",
"547 -106 OFFCURVE",
"507 -106 CURVE SMOOTH",
"412 -106 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"435 -113 LINE",
"480 -67 OFFCURVE",
"541 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE",
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"362 -46 OFFCURVE",
"332 -77 OFFCURVE",
"310 -116 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2018-11-26 18:54:05 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -385 LINE",
"966 -311 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -251 OFFCURVE",
"887 -386 CURVE"
);
},
{
closed = 1;
nodes = (
"1149 -179 OFFCURVE",
"1089 -117 OFFCURVE",
"1015 -117 CURVE SMOOTH",
"942 -117 OFFCURVE",
"882 -179 OFFCURVE",
"882 -252 CURVE SMOOTH",
"882 -325 OFFCURVE",
"942 -386 OFFCURVE",
"1015 -386 CURVE SMOOTH",
"1089 -386 OFFCURVE",
"1149 -325 OFFCURVE",
"1149 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1105 -301 OFFCURVE",
"1065 -341 OFFCURVE",
"1015 -341 CURVE SMOOTH",
"966 -341 OFFCURVE",
"926 -300 OFFCURVE",
"926 -252 CURVE SMOOTH",
"926 -203 OFFCURVE",
"965 -163 OFFCURVE",
"1015 -163 CURVE SMOOTH",
"1065 -163 OFFCURVE",
"1105 -203 OFFCURVE",
"1105 -252 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2018-11-26 18:54:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"1018 370 LINE",
"1077 371 OFFCURVE",
"1123 385 OFFCURVE",
"1157 412 CURVE",
"1191 443 OFFCURVE",
"1208 487 OFFCURVE",
"1208 543 CURVE SMOOTH",
"1208 583 OFFCURVE",
"1188 605 OFFCURVE",
"1165 605 CURVE SMOOTH",
"1141 605 OFFCURVE",
"1122 591 OFFCURVE",
"1122 542 CURVE SMOOTH",
"1122 505 OFFCURVE",
"1116 482 OFFCURVE",
"1103 471 CURVE SMOOTH",
"1082 453 OFFCURVE",
"1053 444 OFFCURVE",
"1018 445 CURVE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2018-11-26 18:54:37 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"145 175 OFFCURVE",
"355 -33 OFFCURVE",
"614 -33 CURVE SMOOTH",
"875 -33 OFFCURVE",
"1084 176 OFFCURVE",
"1084 431 CURVE SMOOTH",
"1084 687 OFFCURVE",
"875 896 OFFCURVE",
"614 896 CURVE SMOOTH",
"355 896 OFFCURVE",
"145 688 OFFCURVE",
"145 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 642 OFFCURVE",
"402 811 OFFCURVE",
"615 811 CURVE SMOOTH",
"828 811 OFFCURVE",
"1000 640 OFFCURVE",
"1000 431 CURVE SMOOTH",
"1000 223 OFFCURVE",
"828 51 OFFCURVE",
"615 51 CURVE SMOOTH",
"402 51 OFFCURVE",
"230 222 OFFCURVE",
"230 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"752 -106 LINE SMOOTH",
"712 -106 OFFCURVE",
"696 -123 OFFCURVE",
"696 -148 CURVE SMOOTH",
"696 -172 OFFCURVE",
"712 -190 OFFCURVE",
"752 -190 CURVE SMOOTH",
"956 -190 LINE SMOOTH",
"996 -190 OFFCURVE",
"1012 -172 OFFCURVE",
"1012 -148 CURVE SMOOTH",
"1012 -123 OFFCURVE",
"996 -106 OFFCURVE",
"956 -106 CURVE",
"901 -106 LINE",
"817 -106 LINE"
);
},
{
closed = 1;
nodes = (
"192 -302 LINE SMOOTH",
"152 -302 OFFCURVE",
"136 -319 OFFCURVE",
"136 -344 CURVE SMOOTH",
"136 -368 OFFCURVE",
"152 -386 OFFCURVE",
"192 -386 CURVE SMOOTH",
"417 -386 LINE SMOOTH",
"458 -386 OFFCURVE",
"474 -368 OFFCURVE",
"474 -344 CURVE SMOOTH",
"474 -319 OFFCURVE",
"458 -302 OFFCURVE",
"417 -302 CURVE SMOOTH",
"347 -302 LINE",
"263 -302 LINE"
);
},
{
closed = 1;
nodes = (
"897 -77 OFFCURVE",
"867 -46 OFFCURVE",
"828 -16 CURVE SMOOTH",
"774 26 OFFCURVE",
"704 46 OFFCURVE",
"618 46 CURVE SMOOTH",
"453 46 OFFCURVE",
"335 -36 OFFCURVE",
"289 -164 CURVE SMOOTH",
"273 -209 OFFCURVE",
"263 -268 OFFCURVE",
"258 -342 CURVE",
"342 -343 LINE",
"352 -208 OFFCURVE",
"385 -138 OFFCURVE",
"456 -86 CURVE SMOOTH",
"499 -54 OFFCURVE",
"552 -38 OFFCURVE",
"615 -38 CURVE SMOOTH",
"688 -38 OFFCURVE",
"749 -67 OFFCURVE",
"794 -113 CURVE",
"919 -116 LINE"
);
}
);
width = 1229;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2018-11-26 18:55:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"657 834 LINE",
"657 1198 LINE SMOOTH",
"657 1239 OFFCURVE",
"639 1255 OFFCURVE",
"614 1255 CURVE SMOOTH",
"590 1255 OFFCURVE",
"572 1239 OFFCURVE",
"572 1198 CURVE SMOOTH",
"572 832 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 -106 LINE SMOOTH",
"253 -106 OFFCURVE",
"237 -123 OFFCURVE",
"237 -148 CURVE SMOOTH",
"237 -172 OFFCURVE",
"253 -190 OFFCURVE",
"293 -190 CURVE SMOOTH",
"467 -190 LINE SMOOTH",
"507 -190 OFFCURVE",
"523 -172 OFFCURVE",
"523 -148 CURVE SMOOTH",
"523 -123 OFFCURVE",
"507 -106 OFFCURVE",
"467 -106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"904 -227 LINE",
"939 -226 OFFCURVE",
"968 -235 OFFCURVE",
"989 -253 CURVE SMOOTH",
"1002 -264 OFFCURVE",
"1008 -287 OFFCURVE",
"1008 -324 CURVE SMOOTH",
"1008 -373 OFFCURVE",
"1027 -387 OFFCURVE",
"1051 -387 CURVE SMOOTH",
"1074 -387 OFFCURVE",
"1094 -365 OFFCURVE",
"1094 -325 CURVE SMOOTH",
"1094 -269 OFFCURVE",
"1077 -225 OFFCURVE",
"1043 -194 CURVE",
"1009 -167 OFFCURVE",
"963 -153 OFFCURVE",
"904 -152 CURVE"
);
},
{
closed = 1;
nodes = (
"790 26 OFFCURVE",
"720 46 OFFCURVE",
"634 46 CURVE SMOOTH",
"469 46 OFFCURVE",
"351 -36 OFFCURVE",
"305 -164 CURVE",
"304 -168 OFFCURVE",
"302 -172 OFFCURVE",
"301 -177 CURVE",
"397 -173 LINE",
"415 -138 OFFCURVE",
"440 -110 OFFCURVE",
"472 -86 CURVE SMOOTH",
"515 -54 OFFCURVE",
"568 -38 OFFCURVE",
"631 -38 CURVE SMOOTH",
"697 -38 OFFCURVE",
"754 -62 OFFCURVE",
"797 -101 CURVE SMOOTH",
"806 -109 OFFCURVE",
"810 -120 OFFCURVE",
"810 -131 CURVE SMOOTH",
"810 -143 LINE",
"729 -143 LINE SMOOTH",
"688 -143 OFFCURVE",
"672 -160 OFFCURVE",
"672 -185 CURVE SMOOTH",
"672 -209 OFFCURVE",
"688 -227 OFFCURVE",
"729 -227 CURVE SMOOTH",
"935 -227 LINE",
"935 -145 LINE SMOOTH",
"935 -138 OFFCURVE",
"931 -114 OFFCURVE",
"929 -107 CURVE SMOOTH",
"918 -68 OFFCURVE",
"880 -44 OFFCURVE",
"844 -16 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2018-11-26 18:44:51 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2018-11-26 18:45:56 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"914 -201 LINE",
"973 -200 OFFCURVE",
"1019 -186 OFFCURVE",
"1053 -159 CURVE",
"1087 -128 OFFCURVE",
"1104 -84 OFFCURVE",
"1104 -28 CURVE SMOOTH",
"1104 12 OFFCURVE",
"1084 34 OFFCURVE",
"1061 34 CURVE SMOOTH",
"1037 34 OFFCURVE",
"1018 20 OFFCURVE",
"1018 -29 CURVE SMOOTH",
"1018 -66 OFFCURVE",
"1012 -89 OFFCURVE",
"999 -100 CURVE SMOOTH",
"978 -118 OFFCURVE",
"949 -127 OFFCURVE",
"914 -126 CURVE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2018-11-26 18:47:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"248 -386 LINE",
"386 -386 LINE SMOOTH",
"426 -386 OFFCURVE",
"442 -368 OFFCURVE",
"442 -344 CURVE SMOOTH",
"442 -319 OFFCURVE",
"426 -302 OFFCURVE",
"386 -302 CURVE SMOOTH",
"361 -302 LINE",
"277 -302 LINE",
"261 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
},
{
closed = 1;
nodes = (
"890 -103 LINE",
"890 -384 LINE",
"974 -384 LINE"
);
},
{
closed = 1;
nodes = (
"1154 -150 OFFCURVE",
"1135 -164 OFFCURVE",
"1135 -213 CURVE SMOOTH",
"1135 -250 OFFCURVE",
"1129 -273 OFFCURVE",
"1116 -284 CURVE SMOOTH",
"1095 -302 OFFCURVE",
"1066 -310 OFFCURVE",
"1031 -310 CURVE SMOOTH",
"887 -310 LINE",
"887 -386 LINE",
"1031 -386 LINE",
"1090 -384 OFFCURVE",
"1136 -370 OFFCURVE",
"1170 -343 CURVE",
"1204 -312 OFFCURVE",
"1221 -268 OFFCURVE",
"1221 -212 CURVE SMOOTH",
"1221 -172 OFFCURVE",
"1201 -150 OFFCURVE",
"1178 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2018-11-26 18:48:35 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 -106 LINE",
"233 -106 LINE",
"193 -106 OFFCURVE",
"177 -123 OFFCURVE",
"177 -148 CURVE SMOOTH",
"177 -172 OFFCURVE",
"193 -190 OFFCURVE",
"233 -190 CURVE SMOOTH",
"507 -190 LINE SMOOTH",
"547 -190 OFFCURVE",
"563 -172 OFFCURVE",
"563 -148 CURVE SMOOTH",
"563 -123 OFFCURVE",
"547 -106 OFFCURVE",
"507 -106 CURVE SMOOTH",
"412 -106 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"435 -113 LINE",
"480 -67 OFFCURVE",
"541 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE",
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"362 -46 OFFCURVE",
"332 -77 OFFCURVE",
"310 -116 CURVE"
);
}
);
width = 1229;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2018-11-26 18:49:21 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -385 LINE",
"966 -311 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -251 OFFCURVE",
"887 -386 CURVE"
);
},
{
closed = 1;
nodes = (
"1149 -179 OFFCURVE",
"1089 -117 OFFCURVE",
"1015 -117 CURVE SMOOTH",
"942 -117 OFFCURVE",
"882 -179 OFFCURVE",
"882 -252 CURVE SMOOTH",
"882 -325 OFFCURVE",
"942 -386 OFFCURVE",
"1015 -386 CURVE SMOOTH",
"1089 -386 OFFCURVE",
"1149 -325 OFFCURVE",
"1149 -252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1105 -301 OFFCURVE",
"1065 -341 OFFCURVE",
"1015 -341 CURVE SMOOTH",
"966 -341 OFFCURVE",
"926 -300 OFFCURVE",
"926 -252 CURVE SMOOTH",
"926 -203 OFFCURVE",
"965 -163 OFFCURVE",
"1015 -163 CURVE SMOOTH",
"1065 -163 OFFCURVE",
"1105 -203 OFFCURVE",
"1105 -252 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2018-11-26 18:49:44 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1018 370 LINE",
"1077 371 OFFCURVE",
"1123 385 OFFCURVE",
"1157 412 CURVE",
"1191 443 OFFCURVE",
"1208 487 OFFCURVE",
"1208 543 CURVE SMOOTH",
"1208 583 OFFCURVE",
"1188 605 OFFCURVE",
"1165 605 CURVE SMOOTH",
"1141 605 OFFCURVE",
"1122 591 OFFCURVE",
"1122 542 CURVE SMOOTH",
"1122 505 OFFCURVE",
"1116 482 OFFCURVE",
"1103 471 CURVE SMOOTH",
"1082 453 OFFCURVE",
"1053 444 OFFCURVE",
"1018 445 CURVE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 -302 LINE",
"168 -302 LINE",
"128 -302 OFFCURVE",
"112 -319 OFFCURVE",
"112 -344 CURVE SMOOTH",
"112 -368 OFFCURVE",
"128 -386 OFFCURVE",
"168 -386 CURVE SMOOTH",
"442 -386 LINE SMOOTH",
"482 -386 OFFCURVE",
"498 -368 OFFCURVE",
"498 -344 CURVE SMOOTH",
"498 -319 OFFCURVE",
"482 -302 OFFCURVE",
"442 -302 CURVE SMOOTH",
"347 -302 LINE"
);
},
{
closed = 1;
nodes = (
"882 -302 LINE",
"812 -302 LINE SMOOTH",
"771 -302 OFFCURVE",
"755 -319 OFFCURVE",
"755 -344 CURVE SMOOTH",
"755 -368 OFFCURVE",
"771 -386 OFFCURVE",
"812 -386 CURVE SMOOTH",
"1037 -386 LINE SMOOTH",
"1077 -386 OFFCURVE",
"1093 -368 OFFCURVE",
"1093 -344 CURVE SMOOTH",
"1093 -319 OFFCURVE",
"1077 -302 OFFCURVE",
"1037 -302 CURVE SMOOTH",
"966 -302 LINE"
);
},
{
closed = 1;
nodes = (
"971 -342 LINE",
"966 -268 OFFCURVE",
"956 -209 OFFCURVE",
"940 -164 CURVE SMOOTH",
"894 -36 OFFCURVE",
"776 46 OFFCURVE",
"611 46 CURVE SMOOTH",
"525 46 OFFCURVE",
"455 26 OFFCURVE",
"401 -16 CURVE SMOOTH",
"308 -86 OFFCURVE",
"268 -177 OFFCURVE",
"258 -343 CURVE",
"344 -342 LINE",
"347 -293 OFFCURVE",
"354 -252 OFFCURVE",
"364 -219 CURVE SMOOTH",
"396 -113 OFFCURVE",
"493 -38 OFFCURVE",
"614 -38 CURVE SMOOTH",
"677 -38 OFFCURVE",
"730 -54 OFFCURVE",
"773 -86 CURVE SMOOTH",
"844 -138 OFFCURVE",
"877 -208 OFFCURVE",
"887 -343 CURVE"
);
}
);
width = 1229;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2018-11-26 18:54:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"145 175 OFFCURVE",
"355 -33 OFFCURVE",
"614 -33 CURVE SMOOTH",
"875 -33 OFFCURVE",
"1084 176 OFFCURVE",
"1084 431 CURVE SMOOTH",
"1084 687 OFFCURVE",
"875 896 OFFCURVE",
"614 896 CURVE SMOOTH",
"355 896 OFFCURVE",
"145 688 OFFCURVE",
"145 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 642 OFFCURVE",
"402 811 OFFCURVE",
"615 811 CURVE SMOOTH",
"828 811 OFFCURVE",
"1000 640 OFFCURVE",
"1000 431 CURVE SMOOTH",
"1000 223 OFFCURVE",
"828 51 OFFCURVE",
"615 51 CURVE SMOOTH",
"402 51 OFFCURVE",
"230 222 OFFCURVE",
"230 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"762 -106 LINE SMOOTH",
"722 -106 OFFCURVE",
"706 -123 OFFCURVE",
"706 -148 CURVE SMOOTH",
"706 -172 OFFCURVE",
"722 -190 OFFCURVE",
"762 -190 CURVE SMOOTH",
"956 -190 LINE SMOOTH",
"996 -190 OFFCURVE",
"1012 -172 OFFCURVE",
"1012 -148 CURVE SMOOTH",
"1012 -123 OFFCURVE",
"996 -106 OFFCURVE",
"956 -106 CURVE",
"901 -106 LINE",
"817 -106 LINE"
);
},
{
closed = 1;
nodes = (
"192 -302 LINE SMOOTH",
"152 -302 OFFCURVE",
"136 -319 OFFCURVE",
"136 -344 CURVE SMOOTH",
"136 -368 OFFCURVE",
"152 -386 OFFCURVE",
"192 -386 CURVE SMOOTH",
"417 -386 LINE SMOOTH",
"458 -386 OFFCURVE",
"474 -368 OFFCURVE",
"474 -344 CURVE SMOOTH",
"474 -319 OFFCURVE",
"458 -302 OFFCURVE",
"417 -302 CURVE SMOOTH",
"347 -302 LINE",
"263 -302 LINE"
);
},
{
closed = 1;
nodes = (
"897 -77 OFFCURVE",
"867 -46 OFFCURVE",
"828 -16 CURVE SMOOTH",
"774 26 OFFCURVE",
"704 46 OFFCURVE",
"618 46 CURVE SMOOTH",
"453 46 OFFCURVE",
"335 -36 OFFCURVE",
"289 -164 CURVE SMOOTH",
"273 -209 OFFCURVE",
"263 -268 OFFCURVE",
"258 -342 CURVE",
"342 -343 LINE",
"352 -208 OFFCURVE",
"385 -138 OFFCURVE",
"456 -86 CURVE SMOOTH",
"499 -54 OFFCURVE",
"552 -38 OFFCURVE",
"615 -38 CURVE SMOOTH",
"688 -38 OFFCURVE",
"749 -67 OFFCURVE",
"794 -113 CURVE",
"919 -116 LINE"
);
}
);
width = 1229;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2018-11-26 18:52:33 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"293 -106 LINE SMOOTH",
"253 -106 OFFCURVE",
"237 -123 OFFCURVE",
"237 -148 CURVE SMOOTH",
"237 -172 OFFCURVE",
"253 -190 OFFCURVE",
"293 -190 CURVE SMOOTH",
"467 -190 LINE SMOOTH",
"507 -190 OFFCURVE",
"523 -172 OFFCURVE",
"523 -148 CURVE SMOOTH",
"523 -123 OFFCURVE",
"507 -106 OFFCURVE",
"467 -106 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"904 -227 LINE",
"939 -226 OFFCURVE",
"968 -235 OFFCURVE",
"989 -253 CURVE SMOOTH",
"1002 -264 OFFCURVE",
"1008 -287 OFFCURVE",
"1008 -324 CURVE SMOOTH",
"1008 -373 OFFCURVE",
"1027 -387 OFFCURVE",
"1051 -387 CURVE SMOOTH",
"1074 -387 OFFCURVE",
"1094 -365 OFFCURVE",
"1094 -325 CURVE SMOOTH",
"1094 -269 OFFCURVE",
"1077 -225 OFFCURVE",
"1043 -194 CURVE",
"1009 -167 OFFCURVE",
"963 -153 OFFCURVE",
"904 -152 CURVE"
);
},
{
closed = 1;
nodes = (
"790 26 OFFCURVE",
"720 46 OFFCURVE",
"634 46 CURVE SMOOTH",
"469 46 OFFCURVE",
"351 -36 OFFCURVE",
"305 -164 CURVE",
"304 -168 OFFCURVE",
"302 -172 OFFCURVE",
"301 -177 CURVE",
"397 -173 LINE",
"415 -138 OFFCURVE",
"440 -110 OFFCURVE",
"472 -86 CURVE SMOOTH",
"515 -54 OFFCURVE",
"568 -38 OFFCURVE",
"631 -38 CURVE SMOOTH",
"697 -38 OFFCURVE",
"754 -62 OFFCURVE",
"797 -101 CURVE SMOOTH",
"806 -109 OFFCURVE",
"810 -120 OFFCURVE",
"810 -131 CURVE SMOOTH",
"810 -143 LINE",
"729 -143 LINE SMOOTH",
"688 -143 OFFCURVE",
"672 -160 OFFCURVE",
"672 -185 CURVE SMOOTH",
"672 -209 OFFCURVE",
"688 -227 OFFCURVE",
"729 -227 CURVE SMOOTH",
"935 -227 LINE",
"935 -145 LINE SMOOTH",
"935 -138 OFFCURVE",
"931 -114 OFFCURVE",
"929 -107 CURVE SMOOTH",
"918 -68 OFFCURVE",
"880 -44 OFFCURVE",
"844 -16 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2018-11-26 18:55:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 393 OFFCURVE",
"1050 394 OFFCURVE",
"1055 395 CURVE SMOOTH",
"1072 399 OFFCURVE",
"1085 416 OFFCURVE",
"1085 435 CURVE SMOOTH",
"1085 454 OFFCURVE",
"1072 471 OFFCURVE",
"1055 475 CURVE SMOOTH",
"1050 476 OFFCURVE",
"1021 477 OFFCURVE",
"968 477 CURVE SMOOTH",
"261 477 LINE SMOOTH",
"208 477 OFFCURVE",
"179 476 OFFCURVE",
"174 475 CURVE SMOOTH",
"157 471 OFFCURVE",
"144 454 OFFCURVE",
"144 435 CURVE SMOOTH",
"144 416 OFFCURVE",
"157 399 OFFCURVE",
"174 395 CURVE SMOOTH",
"179 394 OFFCURVE",
"208 393 OFFCURVE",
"261 393 CURVE SMOOTH",
"968 393 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2018-11-26 18:55:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1021 393 OFFCURVE",
"1050 394 OFFCURVE",
"1055 395 CURVE SMOOTH",
"1072 399 OFFCURVE",
"1085 416 OFFCURVE",
"1085 435 CURVE SMOOTH",
"1085 454 OFFCURVE",
"1072 471 OFFCURVE",
"1055 475 CURVE SMOOTH",
"1050 476 OFFCURVE",
"1021 477 OFFCURVE",
"968 477 CURVE SMOOTH",
"261 477 LINE SMOOTH",
"208 477 OFFCURVE",
"179 476 OFFCURVE",
"174 475 CURVE SMOOTH",
"157 471 OFFCURVE",
"144 454 OFFCURVE",
"144 435 CURVE SMOOTH",
"144 416 OFFCURVE",
"157 399 OFFCURVE",
"174 395 CURVE SMOOTH",
"179 394 OFFCURVE",
"208 393 OFFCURVE",
"261 393 CURVE SMOOTH",
"968 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1026 229 LINE",
"1026 439 LINE",
"1085 440 OFFCURVE",
"1131 454 OFFCURVE",
"1165 481 CURVE",
"1199 512 OFFCURVE",
"1216 556 OFFCURVE",
"1216 612 CURVE SMOOTH",
"1216 652 OFFCURVE",
"1196 674 OFFCURVE",
"1173 674 CURVE SMOOTH",
"1149 674 OFFCURVE",
"1130 660 OFFCURVE",
"1130 611 CURVE SMOOTH",
"1130 574 OFFCURVE",
"1124 551 OFFCURVE",
"1111 540 CURVE SMOOTH",
"1090 522 OFFCURVE",
"1061 513 OFFCURVE",
"1026 514 CURVE",
"1026 646 LINE",
"975 646 LINE"
);
}
);
width = 1229;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2018-11-26 18:56:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"973 393 OFFCURVE",
"1001 394 OFFCURVE",
"1006 395 CURVE SMOOTH",
"1022 398 OFFCURVE",
"1035 416 OFFCURVE",
"1035 435 CURVE SMOOTH",
"1035 454 OFFCURVE",
"1022 472 OFFCURVE",
"1006 475 CURVE SMOOTH",
"1001 476 OFFCURVE",
"973 477 OFFCURVE",
"921 477 CURVE SMOOTH",
"231 477 LINE SMOOTH",
"179 477 OFFCURVE",
"151 476 OFFCURVE",
"146 475 CURVE SMOOTH",
"129 472 OFFCURVE",
"117 454 OFFCURVE",
"117 435 CURVE SMOOTH",
"117 416 OFFCURVE",
"129 398 OFFCURVE",
"146 395 CURVE SMOOTH",
"151 394 OFFCURVE",
"179 393 OFFCURVE",
"231 393 CURVE SMOOTH",
"921 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1039 688 OFFCURVE",
"829 896 OFFCURVE",
"570 896 CURVE SMOOTH",
"309 896 OFFCURVE",
"100 687 OFFCURVE",
"100 431 CURVE SMOOTH",
"100 176 OFFCURVE",
"309 -33 OFFCURVE",
"570 -33 CURVE SMOOTH",
"829 -33 OFFCURVE",
"1039 175 OFFCURVE",
"1039 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"954 222 OFFCURVE",
"782 51 OFFCURVE",
"569 51 CURVE SMOOTH",
"356 51 OFFCURVE",
"184 223 OFFCURVE",
"184 431 CURVE SMOOTH",
"184 640 OFFCURVE",
"356 811 OFFCURVE",
"569 811 CURVE SMOOTH",
"782 811 OFFCURVE",
"954 642 OFFCURVE",
"954 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1042 826 OFFCURVE",
"1024 842 OFFCURVE",
"999 842 CURVE SMOOTH",
"975 842 OFFCURVE",
"957 826 OFFCURVE",
"957 785 CURVE SMOOTH",
"957 -214 LINE",
"1041 -214 LINE",
"1042 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"958 -103 LINE",
"958 -384 LINE",
"1042 -384 LINE",
"1042 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1225 -150 OFFCURVE",
"1206 -164 OFFCURVE",
"1206 -213 CURVE SMOOTH",
"1206 -250 OFFCURVE",
"1200 -273 OFFCURVE",
"1187 -284 CURVE SMOOTH",
"1166 -302 OFFCURVE",
"1137 -311 OFFCURVE",
"1102 -310 CURVE SMOOTH",
"958 -310 LINE",
"958 -386 LINE",
"1102 -386 LINE",
"1161 -384 OFFCURVE",
"1207 -370 OFFCURVE",
"1241 -343 CURVE",
"1275 -312 OFFCURVE",
"1292 -268 OFFCURVE",
"1292 -212 CURVE SMOOTH",
"1292 -172 OFFCURVE",
"1272 -150 OFFCURVE",
"1249 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2018-11-26 18:56:28 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1021 393 OFFCURVE",
"1050 394 OFFCURVE",
"1055 395 CURVE SMOOTH",
"1072 399 OFFCURVE",
"1085 416 OFFCURVE",
"1085 435 CURVE SMOOTH",
"1085 454 OFFCURVE",
"1072 471 OFFCURVE",
"1055 475 CURVE SMOOTH",
"1050 476 OFFCURVE",
"1021 477 OFFCURVE",
"968 477 CURVE SMOOTH",
"261 477 LINE SMOOTH",
"208 477 OFFCURVE",
"179 476 OFFCURVE",
"174 475 CURVE SMOOTH",
"157 471 OFFCURVE",
"144 454 OFFCURVE",
"144 435 CURVE SMOOTH",
"144 416 OFFCURVE",
"157 399 OFFCURVE",
"174 395 CURVE SMOOTH",
"179 394 OFFCURVE",
"208 393 OFFCURVE",
"261 393 CURVE SMOOTH",
"968 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1087 826 OFFCURVE",
"1069 842 OFFCURVE",
"1044 842 CURVE SMOOTH",
"1020 842 OFFCURVE",
"1002 826 OFFCURVE",
"1002 785 CURVE SMOOTH",
"1002 -314 LINE",
"1086 -314 LINE",
"1087 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1003 -234 LINE",
"1003 -344 LINE SMOOTH",
"1003 -385 OFFCURVE",
"1021 -400 OFFCURVE",
"1045 -400 CURVE SMOOTH",
"1070 -400 OFFCURVE",
"1087 -385 OFFCURVE",
"1087 -344 CURVE SMOOTH",
"1087 -250 LINE",
"1087 -244 LINE"
);
}
);
width = 1229;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2018-11-26 18:56:48 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1022 393 OFFCURVE",
"1051 394 OFFCURVE",
"1056 395 CURVE SMOOTH",
"1072 399 OFFCURVE",
"1085 416 OFFCURVE",
"1085 435 CURVE SMOOTH",
"1085 454 OFFCURVE",
"1072 471 OFFCURVE",
"1056 475 CURVE SMOOTH",
"1051 476 OFFCURVE",
"1022 477 OFFCURVE",
"971 477 CURVE SMOOTH",
"280 477 LINE SMOOTH",
"228 477 OFFCURVE",
"200 476 OFFCURVE",
"195 475 CURVE SMOOTH",
"178 471 OFFCURVE",
"165 454 OFFCURVE",
"165 435 CURVE SMOOTH",
"165 416 OFFCURVE",
"178 399 OFFCURVE",
"195 395 CURVE SMOOTH",
"200 394 OFFCURVE",
"228 393 OFFCURVE",
"280 393 CURVE SMOOTH",
"971 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1087 826 OFFCURVE",
"1069 842 OFFCURVE",
"1044 842 CURVE SMOOTH",
"1020 842 OFFCURVE",
"1002 826 OFFCURVE",
"1002 785 CURVE SMOOTH",
"1002 -314 LINE",
"1086 -314 LINE",
"1087 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1003 -234 LINE",
"1003 -344 LINE SMOOTH",
"1003 -385 OFFCURVE",
"1021 -400 OFFCURVE",
"1045 -400 CURVE SMOOTH",
"1070 -400 OFFCURVE",
"1087 -385 OFFCURVE",
"1087 -344 CURVE SMOOTH",
"1087 -250 LINE",
"1087 -244 LINE"
);
},
{
closed = 1;
nodes = (
"1285 -196 OFFCURVE",
"1225 -134 OFFCURVE",
"1151 -134 CURVE SMOOTH",
"1078 -134 OFFCURVE",
"1018 -196 OFFCURVE",
"1018 -269 CURVE SMOOTH",
"1018 -342 OFFCURVE",
"1078 -403 OFFCURVE",
"1151 -403 CURVE SMOOTH",
"1225 -403 OFFCURVE",
"1285 -342 OFFCURVE",
"1285 -269 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1241 -318 OFFCURVE",
"1201 -358 OFFCURVE",
"1151 -358 CURVE SMOOTH",
"1102 -358 OFFCURVE",
"1062 -317 OFFCURVE",
"1062 -269 CURVE SMOOTH",
"1062 -220 OFFCURVE",
"1101 -180 OFFCURVE",
"1151 -180 CURVE SMOOTH",
"1201 -180 OFFCURVE",
"1241 -220 OFFCURVE",
"1241 -269 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2018-11-26 18:57:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1019 393 OFFCURVE",
"1047 394 OFFCURVE",
"1051 395 CURVE SMOOTH",
"1068 399 OFFCURVE",
"1080 416 OFFCURVE",
"1080 435 CURVE SMOOTH",
"1080 454 OFFCURVE",
"1068 471 OFFCURVE",
"1051 475 CURVE SMOOTH",
"1047 476 OFFCURVE",
"1019 477 OFFCURVE",
"968 477 CURVE SMOOTH",
"293 477 LINE SMOOTH",
"242 477 OFFCURVE",
"215 476 OFFCURVE",
"210 475 CURVE SMOOTH",
"194 472 OFFCURVE",
"181 454 OFFCURVE",
"181 435 CURVE SMOOTH",
"181 416 OFFCURVE",
"194 398 OFFCURVE",
"210 395 CURVE SMOOTH",
"215 394 OFFCURVE",
"242 393 OFFCURVE",
"293 393 CURVE SMOOTH",
"968 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"654 880 LINE",
"654 1204 LINE SMOOTH",
"654 1245 OFFCURVE",
"637 1260 OFFCURVE",
"612 1260 CURVE SMOOTH",
"588 1260 OFFCURVE",
"570 1245 OFFCURVE",
"570 1204 CURVE SMOOTH",
"570 864 LINE",
"654 874 LINE"
);
}
);
width = 1229;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2018-11-26 18:57:31 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1013 393 OFFCURVE",
"1041 394 OFFCURVE",
"1046 395 CURVE SMOOTH",
"1062 398 OFFCURVE",
"1075 416 OFFCURVE",
"1075 435 CURVE SMOOTH",
"1075 454 OFFCURVE",
"1062 472 OFFCURVE",
"1046 475 CURVE SMOOTH",
"1041 476 OFFCURVE",
"1013 477 OFFCURVE",
"961 477 CURVE SMOOTH",
"272 477 LINE SMOOTH",
"220 477 OFFCURVE",
"192 476 OFFCURVE",
"187 475 CURVE SMOOTH",
"170 472 OFFCURVE",
"158 454 OFFCURVE",
"158 435 CURVE SMOOTH",
"158 416 OFFCURVE",
"170 398 OFFCURVE",
"187 395 CURVE SMOOTH",
"192 394 OFFCURVE",
"220 393 OFFCURVE",
"272 393 CURVE SMOOTH",
"961 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"593 22 LINE",
"593 -59 LINE SMOOTH",
"593 -196 OFFCURVE",
"497 -302 OFFCURVE",
"354 -302 CURVE SMOOTH",
"313 -302 LINE",
"307 -386 LINE",
"356 -386 LINE SMOOTH",
"412 -386 OFFCURVE",
"460 -376 OFFCURVE",
"501 -355 CURVE SMOOTH",
"618 -295 OFFCURVE",
"677 -202 OFFCURVE",
"677 -59 CURVE SMOOTH",
"677 20 LINE"
);
},
{
closed = 1;
nodes = (
"316 -302 LINE",
"211 -302 LINE SMOOTH",
"171 -302 OFFCURVE",
"155 -320 OFFCURVE",
"155 -345 CURVE SMOOTH",
"155 -370 OFFCURVE",
"171 -387 OFFCURVE",
"211 -387 CURVE SMOOTH",
"316 -387 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2018-11-26 18:57:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1014 393 OFFCURVE",
"1046 394 OFFCURVE",
"1052 395 CURVE SMOOTH",
"1071 399 OFFCURVE",
"1085 416 OFFCURVE",
"1085 435 CURVE SMOOTH",
"1085 454 OFFCURVE",
"1071 471 OFFCURVE",
"1052 475 CURVE SMOOTH",
"1046 476 OFFCURVE",
"1014 477 OFFCURVE",
"956 477 CURVE SMOOTH",
"177 477 LINE SMOOTH",
"118 477 OFFCURVE",
"86 476 OFFCURVE",
"81 475 CURVE SMOOTH",
"62 471 OFFCURVE",
"48 454 OFFCURVE",
"48 435 CURVE SMOOTH",
"48 416 OFFCURVE",
"62 399 OFFCURVE",
"81 395 CURVE SMOOTH",
"86 394 OFFCURVE",
"118 393 OFFCURVE",
"177 393 CURVE SMOOTH",
"956 393 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"593 22 LINE",
"593 -59 LINE SMOOTH",
"593 -196 OFFCURVE",
"497 -302 OFFCURVE",
"354 -302 CURVE SMOOTH",
"313 -302 LINE",
"307 -386 LINE",
"356 -386 LINE SMOOTH",
"412 -386 OFFCURVE",
"460 -376 OFFCURVE",
"501 -355 CURVE SMOOTH",
"618 -295 OFFCURVE",
"677 -202 OFFCURVE",
"677 -59 CURVE SMOOTH",
"677 20 LINE"
);
},
{
closed = 1;
nodes = (
"316 -302 LINE",
"211 -302 LINE SMOOTH",
"171 -302 OFFCURVE",
"155 -320 OFFCURVE",
"155 -345 CURVE SMOOTH",
"155 -370 OFFCURVE",
"171 -387 OFFCURVE",
"211 -387 CURVE SMOOTH",
"316 -387 LINE"
);
},
{
closed = 1;
nodes = (
"1084 688 OFFCURVE",
"874 896 OFFCURVE",
"615 896 CURVE SMOOTH",
"354 896 OFFCURVE",
"145 687 OFFCURVE",
"145 431 CURVE SMOOTH",
"145 176 OFFCURVE",
"354 -33 OFFCURVE",
"615 -33 CURVE SMOOTH",
"874 -33 OFFCURVE",
"1084 175 OFFCURVE",
"1084 431 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"999 222 OFFCURVE",
"827 51 OFFCURVE",
"614 51 CURVE SMOOTH",
"401 51 OFFCURVE",
"229 223 OFFCURVE",
"229 431 CURVE SMOOTH",
"229 640 OFFCURVE",
"401 811 OFFCURVE",
"614 811 CURVE SMOOTH",
"827 811 OFFCURVE",
"999 642 OFFCURVE",
"999 431 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2018-11-26 19:00:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"907 134 LINE",
"907 84 LINE",
"349 84 LINE",
"349 851 LINE",
"264 847 LINE",
"264 84 LINE",
"263 0 LINE",
"992 0 LINE",
"992 136 LINE"
);
},
{
closed = 1;
nodes = (
"348 469 LINE",
"348 866 LINE",
"151 866 LINE SMOOTH",
"111 866 OFFCURVE",
"95 848 OFFCURVE",
"95 824 CURVE SMOOTH",
"95 799 OFFCURVE",
"111 781 OFFCURVE",
"151 781 CURVE SMOOTH",
"264 781 LINE",
"264 482 LINE"
);
},
{
closed = 1;
nodes = (
"992 91 LINE",
"992 228 LINE SMOOTH",
"992 269 OFFCURVE",
"974 284 OFFCURVE",
"950 284 CURVE SMOOTH",
"925 284 OFFCURVE",
"907 268 OFFCURVE",
"907 228 CURVE SMOOTH",
"907 89 LINE"
);
},
{
closed = 1;
nodes = (
"789 28 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE",
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 35 LINE"
);
}
);
width = 1229;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2018-11-26 18:59:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"907 134 LINE",
"907 84 LINE",
"349 84 LINE",
"349 851 LINE",
"264 847 LINE",
"264 84 LINE",
"263 0 LINE",
"992 0 LINE",
"992 136 LINE"
);
},
{
closed = 1;
nodes = (
"348 469 LINE",
"348 866 LINE",
"151 866 LINE SMOOTH",
"111 866 OFFCURVE",
"95 848 OFFCURVE",
"95 824 CURVE SMOOTH",
"95 799 OFFCURVE",
"111 781 OFFCURVE",
"151 781 CURVE SMOOTH",
"264 781 LINE",
"264 482 LINE"
);
},
{
closed = 1;
nodes = (
"992 91 LINE",
"992 228 LINE SMOOTH",
"992 269 OFFCURVE",
"974 284 OFFCURVE",
"950 284 CURVE SMOOTH",
"925 284 OFFCURVE",
"907 268 OFFCURVE",
"907 228 CURVE SMOOTH",
"907 89 LINE"
);
},
{
closed = 1;
nodes = (
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -302 LINE",
"332 -302 LINE SMOOTH",
"294 -302 OFFCURVE",
"275 -316 OFFCURVE",
"275 -344 CURVE SMOOTH",
"275 -372 OFFCURVE",
"294 -386 OFFCURVE",
"332 -386 CURVE SMOOTH",
"875 -386 LINE SMOOTH",
"912 -386 OFFCURVE",
"931 -372 OFFCURVE",
"931 -345 CURVE SMOOTH",
"931 -322 OFFCURVE",
"912 -302 OFFCURVE",
"875 -302 CURVE SMOOTH",
"789 -302 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE"
);
},
{
closed = 1;
nodes = (
"786 -219 LINE",
"786 -87 LINE",
"821 -86 OFFCURVE",
"850 -95 OFFCURVE",
"871 -113 CURVE SMOOTH",
"884 -124 OFFCURVE",
"890 -147 OFFCURVE",
"890 -184 CURVE SMOOTH",
"890 -233 OFFCURVE",
"909 -247 OFFCURVE",
"933 -247 CURVE SMOOTH",
"956 -247 OFFCURVE",
"976 -225 OFFCURVE",
"976 -185 CURVE SMOOTH",
"976 -129 OFFCURVE",
"959 -85 OFFCURVE",
"925 -54 CURVE",
"891 -27 OFFCURVE",
"845 -13 OFFCURVE",
"786 -12 CURVE",
"786 198 LINE",
"735 -219 LINE"
);
}
);
width = 1229;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2018-11-26 18:59:42 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -302 LINE",
"332 -302 LINE SMOOTH",
"294 -302 OFFCURVE",
"275 -316 OFFCURVE",
"275 -344 CURVE SMOOTH",
"275 -372 OFFCURVE",
"294 -386 OFFCURVE",
"332 -386 CURVE SMOOTH",
"875 -386 LINE SMOOTH",
"912 -386 OFFCURVE",
"931 -372 OFFCURVE",
"931 -345 CURVE SMOOTH",
"931 -322 OFFCURVE",
"912 -302 OFFCURVE",
"875 -302 CURVE SMOOTH",
"789 -302 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE"
);
},
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"977 655 OFFCURVE",
"942 632 OFFCURVE",
"942 607 CURVE SMOOTH",
"942 582 OFFCURVE",
"965 560 OFFCURVE",
"984 569 CURVE SMOOTH",
"1039 595 OFFCURVE",
"1065 520 OFFCURVE",
"1065 487 CURVE SMOOTH",
"1065 450 OFFCURVE",
"1050 406 OFFCURVE",
"1021 355 CURVE SMOOTH",
"998 313 OFFCURVE",
"969 265 OFFCURVE",
"900 191 CURVE SMOOTH",
"846 134 OFFCURVE",
"799 86 OFFCURVE",
"743 86 CURVE SMOOTH",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"751 1 LINE SMOOTH",
"809 1 OFFCURVE",
"831 9 OFFCURVE",
"916 86 CURVE SMOOTH",
"1025 185 OFFCURVE",
"1078 277 OFFCURVE",
"1107 332 CURVE SMOOTH",
"1135 386 OFFCURVE",
"1149 436 OFFCURVE",
"1149 482 CURVE SMOOTH",
"1149 582 OFFCURVE",
"1055 659 OFFCURVE",
"1002 656 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2018-11-26 19:00:04 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"907 134 LINE",
"907 84 LINE",
"349 84 LINE",
"349 851 LINE",
"264 847 LINE",
"264 84 LINE",
"263 0 LINE",
"992 0 LINE",
"992 136 LINE"
);
},
{
closed = 1;
nodes = (
"348 469 LINE",
"348 866 LINE",
"151 866 LINE SMOOTH",
"111 866 OFFCURVE",
"95 848 OFFCURVE",
"95 824 CURVE SMOOTH",
"95 799 OFFCURVE",
"111 781 OFFCURVE",
"151 781 CURVE SMOOTH",
"264 781 LINE",
"264 482 LINE"
);
},
{
closed = 1;
nodes = (
"992 91 LINE",
"992 228 LINE SMOOTH",
"992 269 OFFCURVE",
"974 284 OFFCURVE",
"950 284 CURVE SMOOTH",
"925 284 OFFCURVE",
"907 268 OFFCURVE",
"907 228 CURVE SMOOTH",
"907 89 LINE"
);
},
{
closed = 1;
nodes = (
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -302 LINE",
"332 -302 LINE SMOOTH",
"294 -302 OFFCURVE",
"275 -316 OFFCURVE",
"275 -344 CURVE SMOOTH",
"275 -372 OFFCURVE",
"294 -386 OFFCURVE",
"332 -386 CURVE SMOOTH",
"875 -386 LINE SMOOTH",
"912 -386 OFFCURVE",
"931 -372 OFFCURVE",
"931 -345 CURVE SMOOTH",
"931 -322 OFFCURVE",
"912 -302 OFFCURVE",
"875 -302 CURVE SMOOTH",
"789 -302 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE"
);
}
);
width = 1229;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2018-11-26 19:01:25 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"907 134 LINE",
"907 84 LINE",
"349 84 LINE",
"349 851 LINE",
"264 847 LINE",
"264 84 LINE",
"263 0 LINE",
"992 0 LINE",
"992 136 LINE"
);
},
{
closed = 1;
nodes = (
"348 469 LINE",
"348 866 LINE",
"151 866 LINE SMOOTH",
"111 866 OFFCURVE",
"95 848 OFFCURVE",
"95 824 CURVE SMOOTH",
"95 799 OFFCURVE",
"111 781 OFFCURVE",
"151 781 CURVE SMOOTH",
"264 781 LINE",
"264 482 LINE"
);
},
{
closed = 1;
nodes = (
"992 91 LINE",
"992 228 LINE SMOOTH",
"992 269 OFFCURVE",
"974 284 OFFCURVE",
"950 284 CURVE SMOOTH",
"925 284 OFFCURVE",
"907 268 OFFCURVE",
"907 228 CURVE SMOOTH",
"907 89 LINE"
);
},
{
closed = 1;
nodes = (
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -383 LINE",
"789 -386 LINE",
"789 -302 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE"
);
},
{
closed = 1;
nodes = (
"995 -186 OFFCURVE",
"935 -124 OFFCURVE",
"861 -124 CURVE SMOOTH",
"788 -124 OFFCURVE",
"728 -186 OFFCURVE",
"728 -259 CURVE SMOOTH",
"728 -332 OFFCURVE",
"788 -393 OFFCURVE",
"861 -393 CURVE SMOOTH",
"935 -393 OFFCURVE",
"995 -332 OFFCURVE",
"995 -259 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"951 -308 OFFCURVE",
"911 -348 OFFCURVE",
"861 -348 CURVE SMOOTH",
"812 -348 OFFCURVE",
"772 -307 OFFCURVE",
"772 -259 CURVE SMOOTH",
"772 -210 OFFCURVE",
"811 -170 OFFCURVE",
"861 -170 CURVE SMOOTH",
"911 -170 OFFCURVE",
"951 -210 OFFCURVE",
"951 -259 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2018-11-26 19:01:52 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"241 412 LINE",
"287 421 OFFCURVE",
"326 425 OFFCURVE",
"358 425 CURVE SMOOTH",
"423 425 OFFCURVE",
"479 413 OFFCURVE",
"526 389 CURVE SMOOTH",
"585 359 OFFCURVE",
"614 313 OFFCURVE",
"614 254 CURVE SMOOTH",
"614 -302 LINE",
"242 -302 LINE SMOOTH",
"204 -302 OFFCURVE",
"185 -316 OFFCURVE",
"185 -344 CURVE SMOOTH",
"185 -372 OFFCURVE",
"204 -386 OFFCURVE",
"242 -386 CURVE SMOOTH",
"785 -386 LINE SMOOTH",
"822 -386 OFFCURVE",
"841 -372 OFFCURVE",
"841 -345 CURVE SMOOTH",
"841 -322 OFFCURVE",
"822 -302 OFFCURVE",
"785 -302 CURVE SMOOTH",
"699 -302 LINE",
"699 254 LINE SMOOTH",
"699 336 OFFCURVE",
"662 400 OFFCURVE",
"587 449 CURVE SMOOTH",
"524 490 OFFCURVE",
"449 510 OFFCURVE",
"362 510 CURVE SMOOTH",
"331 510 OFFCURVE",
"291 505 OFFCURVE",
"241 496 CURVE"
);
},
{
closed = 1;
nodes = (
"878 858 OFFCURVE",
"770 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"768 -33 OFFCURVE",
"889 3 OFFCURVE",
"998 74 CURVE SMOOTH",
"1065 118 OFFCURVE",
"1099 154 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1099 206 OFFCURVE",
"1082 223 OFFCURVE",
"1059 223 CURVE SMOOTH",
"1048 223 OFFCURVE",
"1036 216 OFFCURVE",
"1022 203 CURVE SMOOTH",
"913 96 OFFCURVE",
"770 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"957 707 OFFCURVE",
"965 612 CURVE SMOOTH",
"968 576 OFFCURVE",
"984 562 OFFCURVE",
"1007 562 CURVE SMOOTH",
"1032 562 OFFCURVE",
"1049 578 OFFCURVE",
"1050 619 CURVE SMOOTH",
"1050 809 LINE SMOOTH",
"1050 850 OFFCURVE",
"1032 866 OFFCURVE",
"1007 866 CURVE SMOOTH",
"983 866 OFFCURVE",
"965 850 OFFCURVE",
"965 809 CURVE SMOOTH",
"965 781 LINE"
);
}
);
width = 1229;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2018-11-26 19:02:15 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"251 412 LINE",
"297 421 OFFCURVE",
"336 425 OFFCURVE",
"368 425 CURVE SMOOTH",
"433 425 OFFCURVE",
"489 413 OFFCURVE",
"536 389 CURVE SMOOTH",
"595 359 OFFCURVE",
"624 313 OFFCURVE",
"624 254 CURVE SMOOTH",
"624 -302 LINE",
"252 -302 LINE SMOOTH",
"214 -302 OFFCURVE",
"195 -316 OFFCURVE",
"195 -344 CURVE SMOOTH",
"195 -372 OFFCURVE",
"214 -386 OFFCURVE",
"252 -386 CURVE SMOOTH",
"795 -386 LINE SMOOTH",
"832 -386 OFFCURVE",
"851 -372 OFFCURVE",
"851 -345 CURVE SMOOTH",
"851 -322 OFFCURVE",
"832 -302 OFFCURVE",
"795 -302 CURVE SMOOTH",
"709 -302 LINE",
"709 254 LINE SMOOTH",
"709 336 OFFCURVE",
"672 400 OFFCURVE",
"597 449 CURVE SMOOTH",
"534 490 OFFCURVE",
"459 510 OFFCURVE",
"372 510 CURVE SMOOTH",
"341 510 OFFCURVE",
"301 505 OFFCURVE",
"251 496 CURVE"
);
},
{
closed = 1;
nodes = (
"850 896 OFFCURVE",
"641 896 CURVE SMOOTH",
"370 896 OFFCURVE",
"171 696 OFFCURVE",
"171 425 CURVE SMOOTH",
"171 160 OFFCURVE",
"364 -33 OFFCURVE",
"635 -33 CURVE SMOOTH",
"768 -33 OFFCURVE",
"889 3 OFFCURVE",
"998 74 CURVE SMOOTH",
"1065 118 OFFCURVE",
"1099 154 OFFCURVE",
"1099 183 CURVE SMOOTH",
"1099 206 OFFCURVE",
"1082 223 OFFCURVE",
"1059 223 CURVE SMOOTH",
"1048 223 OFFCURVE",
"1036 216 OFFCURVE",
"1022 203 CURVE SMOOTH",
"913 96 OFFCURVE",
"770 51 OFFCURVE",
"639 51 CURVE SMOOTH",
"412 51 OFFCURVE",
"255 209 OFFCURVE",
"255 426 CURVE SMOOTH",
"255 627 OFFCURVE",
"387 811 OFFCURVE",
"636 811 CURVE SMOOTH",
"833 811 OFFCURVE",
"983 733 OFFCURVE",
"991 638 CURVE",
"993 805 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"991 711 OFFCURVE",
"931 773 OFFCURVE",
"857 773 CURVE SMOOTH",
"784 773 OFFCURVE",
"724 711 OFFCURVE",
"724 638 CURVE SMOOTH",
"724 565 OFFCURVE",
"784 504 OFFCURVE",
"857 504 CURVE SMOOTH",
"931 504 OFFCURVE",
"991 565 OFFCURVE",
"991 638 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"947 589 OFFCURVE",
"907 549 OFFCURVE",
"857 549 CURVE SMOOTH",
"808 549 OFFCURVE",
"768 590 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 687 OFFCURVE",
"807 727 OFFCURVE",
"857 727 CURVE SMOOTH",
"907 727 OFFCURVE",
"947 687 OFFCURVE",
"947 638 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2018-11-26 19:03:17 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"907 134 LINE",
"907 84 LINE",
"349 84 LINE",
"349 851 LINE",
"264 847 LINE",
"264 84 LINE",
"263 0 LINE",
"992 0 LINE",
"992 136 LINE"
);
},
{
closed = 1;
nodes = (
"348 469 LINE",
"348 866 LINE",
"151 866 LINE SMOOTH",
"111 866 OFFCURVE",
"95 848 OFFCURVE",
"95 824 CURVE SMOOTH",
"95 799 OFFCURVE",
"111 781 OFFCURVE",
"151 781 CURVE SMOOTH",
"264 781 LINE",
"264 482 LINE"
);
},
{
closed = 1;
nodes = (
"992 91 LINE",
"992 228 LINE SMOOTH",
"992 269 OFFCURVE",
"974 284 OFFCURVE",
"950 284 CURVE SMOOTH",
"925 284 OFFCURVE",
"907 268 OFFCURVE",
"907 228 CURVE SMOOTH",
"907 89 LINE"
);
},
{
closed = 1;
nodes = (
"789 -190 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE",
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -191 LINE"
);
},
{
closed = 1;
nodes = (
"704 -92 LINE",
"704 -142 LINE",
"609 -142 LINE SMOOTH",
"568 -142 OFFCURVE",
"552 -159 OFFCURVE",
"552 -184 CURVE SMOOTH",
"552 -208 OFFCURVE",
"568 -226 OFFCURVE",
"609 -226 CURVE SMOOTH",
"789 -226 LINE",
"789 -95 LINE"
);
},
{
closed = 1;
nodes = (
"784 -226 LINE",
"819 -225 OFFCURVE",
"848 -234 OFFCURVE",
"869 -252 CURVE SMOOTH",
"882 -263 OFFCURVE",
"888 -286 OFFCURVE",
"888 -323 CURVE SMOOTH",
"888 -372 OFFCURVE",
"907 -386 OFFCURVE",
"931 -386 CURVE SMOOTH",
"954 -386 OFFCURVE",
"974 -364 OFFCURVE",
"974 -324 CURVE SMOOTH",
"974 -268 OFFCURVE",
"957 -224 OFFCURVE",
"923 -193 CURVE",
"889 -166 OFFCURVE",
"843 -152 OFFCURVE",
"784 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2018-11-25 23:47:19 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 741 LINE",
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 741 LINE"
);
},
{
closed = 1;
nodes = (
"1000 716 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 716 LINE"
);
},
{
closed = 1;
nodes = (
"1084 696 LINE",
"1084 866 LINE",
"143 866 LINE",
"143 740 LINE",
"227 740 LINE",
"227 782 LINE",
"571 782 LINE",
"571 84 LINE",
"353 84 LINE SMOOTH",
"313 84 OFFCURVE",
"297 67 OFFCURVE",
"297 42 CURVE SMOOTH",
"297 18 OFFCURVE",
"313 0 OFFCURVE",
"353 0 CURVE SMOOTH",
"874 0 LINE SMOOTH",
"914 0 OFFCURVE",
"930 18 OFFCURVE",
"930 42 CURVE SMOOTH",
"930 67 OFFCURVE",
"914 84 OFFCURVE",
"874 84 CURVE SMOOTH",
"656 84 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 694 LINE"
);
}
);
width = 1229;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2018-11-26 19:04:02 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 741 LINE",
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 741 LINE"
);
},
{
closed = 1;
nodes = (
"1000 716 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 716 LINE"
);
},
{
closed = 1;
nodes = (
"1084 696 LINE",
"1084 866 LINE",
"143 866 LINE",
"143 740 LINE",
"227 740 LINE",
"227 782 LINE",
"571 782 LINE",
"571 84 LINE",
"353 84 LINE SMOOTH",
"313 84 OFFCURVE",
"297 67 OFFCURVE",
"297 42 CURVE SMOOTH",
"297 18 OFFCURVE",
"313 0 OFFCURVE",
"353 0 CURVE SMOOTH",
"874 0 LINE SMOOTH",
"914 0 OFFCURVE",
"930 18 OFFCURVE",
"930 42 CURVE SMOOTH",
"930 67 OFFCURVE",
"914 84 OFFCURVE",
"874 84 CURVE SMOOTH",
"656 84 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 694 LINE"
);
},
{
closed = 1;
nodes = (
"654 205 LINE",
"654 337 LINE",
"689 338 OFFCURVE",
"718 329 OFFCURVE",
"739 311 CURVE SMOOTH",
"752 300 OFFCURVE",
"758 277 OFFCURVE",
"758 240 CURVE SMOOTH",
"758 191 OFFCURVE",
"777 177 OFFCURVE",
"801 177 CURVE SMOOTH",
"824 177 OFFCURVE",
"844 199 OFFCURVE",
"844 239 CURVE SMOOTH",
"844 295 OFFCURVE",
"827 339 OFFCURVE",
"793 370 CURVE",
"759 397 OFFCURVE",
"713 411 OFFCURVE",
"654 412 CURVE",
"654 622 LINE",
"603 205 LINE"
);
}
);
width = 1229;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2018-11-26 19:05:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 741 LINE",
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 741 LINE"
);
},
{
closed = 1;
nodes = (
"1000 716 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 716 LINE"
);
},
{
closed = 1;
nodes = (
"571 84 LINE",
"523 84 LINE SMOOTH",
"483 84 OFFCURVE",
"467 67 OFFCURVE",
"467 42 CURVE SMOOTH",
"467 18 OFFCURVE",
"487 0 OFFCURVE",
"523 0 CURVE SMOOTH",
"676 0 LINE"
);
},
{
closed = 1;
nodes = (
"654 214 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 694 LINE",
"1084 696 LINE",
"1084 866 LINE",
"143 866 LINE",
"143 740 LINE",
"227 740 LINE",
"227 782 LINE",
"571 782 LINE",
"571 206 LINE"
);
},
{
closed = 1;
nodes = (
"572 283 LINE",
"570 2 LINE",
"654 2 LINE",
"654 285 LINE"
);
},
{
closed = 1;
nodes = (
"837 236 OFFCURVE",
"818 222 OFFCURVE",
"818 173 CURVE SMOOTH",
"818 136 OFFCURVE",
"812 113 OFFCURVE",
"799 102 CURVE SMOOTH",
"778 84 OFFCURVE",
"749 75 OFFCURVE",
"714 76 CURVE SMOOTH",
"570 76 LINE",
"572 0 LINE",
"714 0 LINE",
"773 2 OFFCURVE",
"819 16 OFFCURVE",
"853 43 CURVE",
"887 74 OFFCURVE",
"904 118 OFFCURVE",
"904 174 CURVE SMOOTH",
"904 214 OFFCURVE",
"884 236 OFFCURVE",
"861 236 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2018-11-26 19:06:29 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"54 741 LINE",
"54 675 LINE SMOOTH",
"54 634 OFFCURVE",
"72 618 OFFCURVE",
"96 618 CURVE SMOOTH",
"121 618 OFFCURVE",
"138 634 OFFCURVE",
"138 675 CURVE SMOOTH",
"138 741 LINE"
);
},
{
closed = 1;
nodes = (
"911 716 LINE",
"911 675 LINE SMOOTH",
"911 634 OFFCURVE",
"928 618 OFFCURVE",
"953 618 CURVE SMOOTH",
"978 618 OFFCURVE",
"995 634 OFFCURVE",
"995 675 CURVE SMOOTH",
"995 716 LINE"
);
},
{
closed = 1;
nodes = (
"567 434 LINE",
"567 782 LINE",
"911 782 LINE",
"911 694 LINE",
"995 696 LINE",
"995 866 LINE",
"54 866 LINE",
"54 740 LINE",
"138 740 LINE",
"138 782 LINE",
"482 782 LINE",
"482 420 LINE"
);
},
{
closed = 1;
nodes = (
"269 781 LINE",
"483 781 LINE",
"483 -59 LINE SMOOTH",
"483 -196 OFFCURVE",
"387 -302 OFFCURVE",
"244 -302 CURVE SMOOTH",
"203 -302 LINE",
"197 -386 LINE",
"246 -386 LINE SMOOTH",
"302 -386 OFFCURVE",
"350 -376 OFFCURVE",
"391 -355 CURVE SMOOTH",
"508 -295 OFFCURVE",
"567 -202 OFFCURVE",
"567 -59 CURVE SMOOTH",
"567 866 LINE",
"274 866 LINE"
);
},
{
closed = 1;
nodes = (
"206 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -320 OFFCURVE",
"45 -345 CURVE SMOOTH",
"45 -370 OFFCURVE",
"61 -387 OFFCURVE",
"101 -387 CURVE SMOOTH",
"206 -387 LINE"
);
}
);
width = 1229;
}
);
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2018-11-26 19:07:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"852 203 OFFCURVE",
"792 265 OFFCURVE",
"718 265 CURVE SMOOTH",
"645 265 OFFCURVE",
"585 203 OFFCURVE",
"585 130 CURVE SMOOTH",
"585 57 OFFCURVE",
"645 -4 OFFCURVE",
"718 -4 CURVE SMOOTH",
"792 -4 OFFCURVE",
"852 57 OFFCURVE",
"852 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"808 81 OFFCURVE",
"768 41 OFFCURVE",
"718 41 CURVE SMOOTH",
"669 41 OFFCURVE",
"629 82 OFFCURVE",
"629 130 CURVE SMOOTH",
"629 179 OFFCURVE",
"668 219 OFFCURVE",
"718 219 CURVE SMOOTH",
"768 219 OFFCURVE",
"808 179 OFFCURVE",
"808 130 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 741 LINE",
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 741 LINE"
);
},
{
closed = 1;
nodes = (
"1000 716 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 716 LINE"
);
},
{
closed = 1;
nodes = (
"1084 696 LINE",
"1084 866 LINE",
"143 866 LINE",
"143 740 LINE",
"227 740 LINE",
"227 782 LINE",
"571 782 LINE",
"571 84 LINE",
"562 84 LINE SMOOTH",
"522 84 OFFCURVE",
"506 67 OFFCURVE",
"506 42 CURVE SMOOTH",
"506 18 OFFCURVE",
"523 -2 OFFCURVE",
"562 0 CURVE SMOOTH",
"656 4 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 694 LINE"
);
}
);
width = 1229;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2018-11-26 19:08:41 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 782 LINE",
"571 782 LINE",
"571 324 LINE SMOOTH",
"571 293 OFFCURVE",
"595 270 OFFCURVE",
"626 272 CURVE SMOOTH",
"644 273 LINE",
"644 -302 LINE",
"426 -302 LINE SMOOTH",
"386 -302 OFFCURVE",
"370 -319 OFFCURVE",
"370 -344 CURVE SMOOTH",
"370 -368 OFFCURVE",
"386 -386 OFFCURVE",
"426 -386 CURVE SMOOTH",
"947 -386 LINE SMOOTH",
"987 -386 OFFCURVE",
"1003 -368 OFFCURVE",
"1003 -344 CURVE SMOOTH",
"1003 -319 OFFCURVE",
"987 -302 OFFCURVE",
"947 -302 CURVE SMOOTH",
"729 -302 LINE",
"729 293 LINE SMOOTH",
"729 324 OFFCURVE",
"705 347 OFFCURVE",
"674 345 CURVE SMOOTH",
"656 344 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 866 LINE",
"143 866 LINE"
);
}
);
width = 1229;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2018-11-26 19:10:26 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"154 741 LINE",
"154 675 LINE SMOOTH",
"154 634 OFFCURVE",
"172 618 OFFCURVE",
"196 618 CURVE SMOOTH",
"221 618 OFFCURVE",
"238 634 OFFCURVE",
"238 675 CURVE SMOOTH",
"238 741 LINE"
);
},
{
closed = 1;
nodes = (
"1011 716 LINE",
"1011 675 LINE SMOOTH",
"1011 634 OFFCURVE",
"1028 618 OFFCURVE",
"1053 618 CURVE SMOOTH",
"1078 618 OFFCURVE",
"1095 634 OFFCURVE",
"1095 675 CURVE SMOOTH",
"1095 716 LINE"
);
},
{
closed = 1;
nodes = (
"667 782 LINE",
"1011 782 LINE",
"1011 694 LINE",
"1095 696 LINE",
"1095 866 LINE",
"154 866 LINE",
"154 740 LINE",
"238 740 LINE",
"238 782 LINE",
"582 782 LINE"
);
},
{
closed = 1;
nodes = (
"516 -302 LINE",
"201 -302 LINE SMOOTH",
"161 -302 OFFCURVE",
"145 -320 OFFCURVE",
"145 -345 CURVE SMOOTH",
"145 -370 OFFCURVE",
"161 -387 OFFCURVE",
"201 -387 CURVE SMOOTH",
"516 -387 LINE"
);
},
{
closed = 1;
nodes = (
"81 -302 LINE",
"8 -302 LINE SMOOTH",
"-32 -302 OFFCURVE",
"-48 -319 OFFCURVE",
"-48 -344 CURVE SMOOTH",
"-48 -369 OFFCURVE",
"-32 -386 OFFCURVE",
"8 -386 CURVE SMOOTH",
"512 -386 LINE SMOOTH",
"552 -386 OFFCURVE",
"568 -368 OFFCURVE",
"568 -344 CURVE SMOOTH",
"568 -319 OFFCURVE",
"552 -302 OFFCURVE",
"512 -302 CURVE SMOOTH",
"171 -302 LINE",
"703 781 LINE",
"754 781 OFFCURVE",
"785 784 OFFCURVE",
"785 823 CURVE SMOOTH",
"785 848 OFFCURVE",
"769 866 OFFCURVE",
"728 866 CURVE SMOOTH",
"499 866 LINE SMOOTH",
"459 866 OFFCURVE",
"443 848 OFFCURVE",
"443 824 CURVE SMOOTH",
"443 799 OFFCURVE",
"459 781 OFFCURVE",
"499 781 CURVE SMOOTH",
"612 781 LINE",
"274 92 LINE"
);
}
);
width = 1229;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2018-11-26 19:12:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"143 741 LINE",
"143 675 LINE SMOOTH",
"143 634 OFFCURVE",
"161 618 OFFCURVE",
"185 618 CURVE SMOOTH",
"210 618 OFFCURVE",
"227 634 OFFCURVE",
"227 675 CURVE SMOOTH",
"227 741 LINE"
);
},
{
closed = 1;
nodes = (
"1000 716 LINE",
"1000 675 LINE SMOOTH",
"1000 634 OFFCURVE",
"1017 618 OFFCURVE",
"1042 618 CURVE SMOOTH",
"1067 618 OFFCURVE",
"1084 634 OFFCURVE",
"1084 675 CURVE SMOOTH",
"1084 716 LINE"
);
},
{
closed = 1;
nodes = (
"1084 696 LINE",
"1084 866 LINE",
"143 866 LINE",
"143 740 LINE",
"227 740 LINE",
"227 782 LINE",
"571 782 LINE",
"571 -116 LINE",
"656 -116 LINE",
"656 782 LINE",
"1000 782 LINE",
"1000 694 LINE"
);
},
{
closed = 1;
nodes = (
"571 -92 LINE",
"571 -142 LINE",
"476 -142 LINE SMOOTH",
"435 -142 OFFCURVE",
"419 -159 OFFCURVE",
"419 -184 CURVE SMOOTH",
"419 -208 OFFCURVE",
"435 -226 OFFCURVE",
"476 -226 CURVE SMOOTH",
"656 -226 LINE",
"656 -95 LINE"
);
},
{
closed = 1;
nodes = (
"651 -226 LINE",
"686 -225 OFFCURVE",
"715 -234 OFFCURVE",
"736 -252 CURVE SMOOTH",
"749 -263 OFFCURVE",
"755 -286 OFFCURVE",
"755 -323 CURVE SMOOTH",
"755 -372 OFFCURVE",
"774 -386 OFFCURVE",
"798 -386 CURVE SMOOTH",
"821 -386 OFFCURVE",
"841 -364 OFFCURVE",
"841 -324 CURVE SMOOTH",
"841 -268 OFFCURVE",
"824 -224 OFFCURVE",
"790 -193 CURVE",
"756 -166 OFFCURVE",
"710 -152 OFFCURVE",
"651 -151 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2018-11-26 19:13:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"977 655 OFFCURVE",
"942 632 OFFCURVE",
"942 607 CURVE SMOOTH",
"942 582 OFFCURVE",
"965 560 OFFCURVE",
"984 569 CURVE SMOOTH",
"1039 595 OFFCURVE",
"1065 520 OFFCURVE",
"1065 487 CURVE SMOOTH",
"1065 450 OFFCURVE",
"1050 406 OFFCURVE",
"1021 355 CURVE SMOOTH",
"998 313 OFFCURVE",
"969 265 OFFCURVE",
"900 191 CURVE SMOOTH",
"846 134 OFFCURVE",
"799 86 OFFCURVE",
"743 86 CURVE SMOOTH",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"751 1 LINE SMOOTH",
"809 1 OFFCURVE",
"831 9 OFFCURVE",
"916 86 CURVE SMOOTH",
"1025 185 OFFCURVE",
"1078 277 OFFCURVE",
"1107 332 CURVE SMOOTH",
"1135 386 OFFCURVE",
"1149 436 OFFCURVE",
"1149 482 CURVE SMOOTH",
"1149 582 OFFCURVE",
"1055 659 OFFCURVE",
"1002 656 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"344 791 LINE",
"379 792 OFFCURVE",
"408 783 OFFCURVE",
"429 765 CURVE SMOOTH",
"442 754 OFFCURVE",
"448 731 OFFCURVE",
"448 694 CURVE SMOOTH",
"448 645 OFFCURVE",
"467 631 OFFCURVE",
"491 631 CURVE SMOOTH",
"514 631 OFFCURVE",
"534 653 OFFCURVE",
"534 693 CURVE SMOOTH",
"534 749 OFFCURVE",
"517 793 OFFCURVE",
"483 824 CURVE",
"449 851 OFFCURVE",
"403 865 OFFCURVE",
"344 866 CURVE"
);
}
);
width = 1229;
}
);
unicode = 1358;
},
{
glyphname = "mya-ethiopic";
lastChange = "2018-11-26 19:14:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"552 810 LINE",
"620 810 LINE",
"620 1219 LINE",
"552 1219 LINE"
);
},
{
closed = 1;
nodes = (
"270 88 OFFCURVE",
"240 160 OFFCURVE",
"230 195 CURVE SMOOTH",
"213 253 OFFCURVE",
"213 387 OFFCURVE",
"213 459 CURVE SMOOTH",
"214 781 LINE",
"484 781 LINE",
"483 459 LINE SMOOTH",
"483 347 OFFCURVE",
"483 275 OFFCURVE",
"466 195 CURVE SMOOTH",
"457 152 OFFCURVE",
"418 88 OFFCURVE",
"347 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"625 866 LINE",
"66 866 LINE SMOOTH",
"29 866 OFFCURVE",
"10 852 OFFCURVE",
"10 823 CURVE SMOOTH",
"10 795 OFFCURVE",
"29 781 OFFCURVE",
"66 781 CURVE SMOOTH",
"127 781 LINE",
"128 449 LINE SMOOTH",
"128 380 OFFCURVE",
"127 257 OFFCURVE",
"159 154 CURVE SMOOTH",
"186 65 OFFCURVE",
"246 0 OFFCURVE",
"356 0 CURVE",
"447 0 OFFCURVE",
"509 60 OFFCURVE",
"534 149 CURVE SMOOTH",
"565 259 OFFCURVE",
"567 383 OFFCURVE",
"567 459 CURVE SMOOTH",
"568 781 LINE",
"625 781 LINE"
);
},
{
closed = 1;
nodes = (
"808 88 OFFCURVE",
"767 153 OFFCURVE",
"760 195 CURVE SMOOTH",
"747 275 OFFCURVE",
"743 347 OFFCURVE",
"743 459 CURVE SMOOTH",
"742 781 LINE",
"1012 781 LINE",
"1013 459 LINE SMOOTH",
"1013 387 OFFCURVE",
"1013 253 OFFCURVE",
"996 195 CURVE SMOOTH",
"986 160 OFFCURVE",
"956 88 OFFCURVE",
"879 88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"658 781 LINE",
"659 459 LINE SMOOTH",
"659 383 OFFCURVE",
"661 259 OFFCURVE",
"692 149 CURVE SMOOTH",
"717 60 OFFCURVE",
"779 0 OFFCURVE",
"870 0 CURVE",
"980 0 OFFCURVE",
"1040 65 OFFCURVE",
"1067 154 CURVE SMOOTH",
"1098 257 OFFCURVE",
"1098 380 OFFCURVE",
"1098 449 CURVE SMOOTH",
"1099 781 LINE",
"1160 781 LINE SMOOTH",
"1197 781 OFFCURVE",
"1216 795 OFFCURVE",
"1216 823 CURVE SMOOTH",
"1216 852 OFFCURVE",
"1197 866 OFFCURVE",
"1160 866 CURVE SMOOTH",
"601 866 LINE",
"601 781 LINE"
);
},
{
closed = 1;
nodes = (
"1012 814 LINE",
"1013 -341 LINE",
"1096 -342 LINE",
"1097 806 LINE"
);
},
{
closed = 1;
nodes = (
"1280 -150 OFFCURVE",
"1261 -164 OFFCURVE",
"1261 -213 CURVE SMOOTH",
"1261 -250 OFFCURVE",
"1255 -273 OFFCURVE",
"1242 -284 CURVE SMOOTH",
"1221 -302 OFFCURVE",
"1192 -311 OFFCURVE",
"1157 -310 CURVE SMOOTH",
"1013 -310 LINE",
"1013 -386 LINE",
"1157 -386 LINE",
"1216 -384 OFFCURVE",
"1262 -370 OFFCURVE",
"1296 -343 CURVE",
"1330 -312 OFFCURVE",
"1347 -268 OFFCURVE",
"1347 -212 CURVE SMOOTH",
"1347 -172 OFFCURVE",
"1327 -150 OFFCURVE",
"1304 -150 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1014 1169 OFFCURVE",
"1043 1170 OFFCURVE",
"1048 1171 CURVE SMOOTH",
"1065 1175 OFFCURVE",
"1078 1192 OFFCURVE",
"1078 1211 CURVE SMOOTH",
"1078 1230 OFFCURVE",
"1065 1247 OFFCURVE",
"1048 1251 CURVE SMOOTH",
"1043 1252 OFFCURVE",
"1014 1253 OFFCURVE",
"961 1253 CURVE SMOOTH",
"254 1253 LINE SMOOTH",
"201 1253 OFFCURVE",
"172 1252 OFFCURVE",
"167 1251 CURVE SMOOTH",
"150 1247 OFFCURVE",
"137 1230 OFFCURVE",
"137 1211 CURVE SMOOTH",
"137 1192 OFFCURVE",
"150 1175 OFFCURVE",
"167 1171 CURVE SMOOTH",
"172 1170 OFFCURVE",
"201 1169 OFFCURVE",
"254 1169 CURVE SMOOTH",
"961 1169 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1359;
},
{
glyphname = "fya-ethiopic";
lastChange = "2018-11-26 19:15:44 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"331 412 LINE",
"377 421 OFFCURVE",
"416 425 OFFCURVE",
"448 425 CURVE SMOOTH",
"513 425 OFFCURVE",
"569 413 OFFCURVE",
"616 389 CURVE SMOOTH",
"675 359 OFFCURVE",
"704 313 OFFCURVE",
"704 254 CURVE SMOOTH",
"704 -302 LINE",
"332 -302 LINE SMOOTH",
"294 -302 OFFCURVE",
"275 -316 OFFCURVE",
"275 -344 CURVE SMOOTH",
"275 -372 OFFCURVE",
"294 -386 OFFCURVE",
"332 -386 CURVE SMOOTH",
"875 -386 LINE SMOOTH",
"912 -386 OFFCURVE",
"931 -372 OFFCURVE",
"931 -345 CURVE SMOOTH",
"931 -322 OFFCURVE",
"912 -302 OFFCURVE",
"875 -302 CURVE SMOOTH",
"789 -302 LINE",
"789 254 LINE SMOOTH",
"789 336 OFFCURVE",
"752 400 OFFCURVE",
"677 449 CURVE SMOOTH",
"614 490 OFFCURVE",
"539 510 OFFCURVE",
"452 510 CURVE SMOOTH",
"421 510 OFFCURVE",
"381 505 OFFCURVE",
"331 496 CURVE"
);
},
{
closed = 1;
nodes = (
"272 84 LINE",
"148 84 LINE SMOOTH",
"108 84 OFFCURVE",
"92 67 OFFCURVE",
"92 42 CURVE SMOOTH",
"92 18 OFFCURVE",
"108 0 OFFCURVE",
"148 0 CURVE SMOOTH",
"272 0 LINE"
);
},
{
closed = 1;
nodes = (
"353 469 LINE",
"353 866 LINE",
"136 866 LINE SMOOTH",
"96 866 OFFCURVE",
"80 848 OFFCURVE",
"80 824 CURVE SMOOTH",
"80 799 OFFCURVE",
"96 781 OFFCURVE",
"136 781 CURVE SMOOTH",
"269 781 LINE",
"269 482 LINE"
);
},
{
closed = 1;
nodes = (
"977 655 OFFCURVE",
"942 632 OFFCURVE",
"942 607 CURVE SMOOTH",
"942 582 OFFCURVE",
"965 560 OFFCURVE",
"984 569 CURVE SMOOTH",
"1039 595 OFFCURVE",
"1065 520 OFFCURVE",
"1065 487 CURVE SMOOTH",
"1065 450 OFFCURVE",
"1050 406 OFFCURVE",
"1021 355 CURVE SMOOTH",
"998 313 OFFCURVE",
"969 265 OFFCURVE",
"900 191 CURVE SMOOTH",
"846 134 OFFCURVE",
"799 86 OFFCURVE",
"743 86 CURVE SMOOTH",
"354 84 LINE",
"354 851 LINE",
"269 847 LINE",
"269 84 LINE",
"190 84 LINE",
"190 0 LINE",
"751 1 LINE SMOOTH",
"809 1 OFFCURVE",
"831 9 OFFCURVE",
"916 86 CURVE SMOOTH",
"1025 185 OFFCURVE",
"1078 277 OFFCURVE",
"1107 332 CURVE SMOOTH",
"1135 386 OFFCURVE",
"1149 436 OFFCURVE",
"1149 482 CURVE SMOOTH",
"1149 582 OFFCURVE",
"1055 659 OFFCURVE",
"1002 656 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"449 866 LINE",
"274 866 LINE SMOOTH",
"233 866 OFFCURVE",
"217 849 OFFCURVE",
"217 824 CURVE SMOOTH",
"217 800 OFFCURVE",
"233 782 OFFCURVE",
"274 782 CURVE SMOOTH",
"456 782 LINE"
);
},
{
closed = 1;
nodes = (
"456 782 LINE",
"491 783 OFFCURVE",
"520 774 OFFCURVE",
"541 756 CURVE SMOOTH",
"554 745 OFFCURVE",
"560 722 OFFCURVE",
"560 685 CURVE SMOOTH",
"560 636 OFFCURVE",
"579 622 OFFCURVE",
"603 622 CURVE SMOOTH",
"626 622 OFFCURVE",
"646 644 OFFCURVE",
"646 684 CURVE SMOOTH",
"646 740 OFFCURVE",
"629 784 OFFCURVE",
"595 815 CURVE",
"561 842 OFFCURVE",
"505 865 OFFCURVE",
"446 866 CURVE"
);
}
);
width = 1229;
}
);
unicode = 135A;
},
{
glyphname = "colon-ethiopic";
lastChange = "2018-11-26 19:16:43 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 866 OFFCURVE",
"461 808 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 656 OFFCURVE",
"522 594 OFFCURVE",
"597 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706 594 OFFCURVE",
"769 652 OFFCURVE",
"769 731 CURVE SMOOTH",
"769 804 OFFCURVE",
"708 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"597 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 241 OFFCURVE",
"461 182 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30 OFFCURVE",
"522 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706 -30 OFFCURVE",
"769 29 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 181 OFFCURVE",
"708 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 405 OFFCURVE",
"1050 406 OFFCURVE",
"1055 407 CURVE SMOOTH",
"1072 411 OFFCURVE",
"1085 428 OFFCURVE",
"1085 447 CURVE SMOOTH",
"1085 466 OFFCURVE",
"1072 483 OFFCURVE",
"1055 487 CURVE SMOOTH",
"1050 488 OFFCURVE",
"1021 489 OFFCURVE",
"968 489 CURVE SMOOTH",
"261 489 LINE SMOOTH",
"208 489 OFFCURVE",
"179 488 OFFCURVE",
"174 487 CURVE SMOOTH",
"157 483 OFFCURVE",
"144 466 OFFCURVE",
"144 447 CURVE SMOOTH",
"144 428 OFFCURVE",
"157 411 OFFCURVE",
"174 407 CURVE SMOOTH",
"179 406 OFFCURVE",
"208 405 OFFCURVE",
"261 405 CURVE SMOOTH",
"968 405 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2018-11-26 19:17:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 866 OFFCURVE",
"461 808 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 656 OFFCURVE",
"522 594 OFFCURVE",
"597 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706 594 OFFCURVE",
"769 652 OFFCURVE",
"769 731 CURVE SMOOTH",
"769 804 OFFCURVE",
"708 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"597 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 241 OFFCURVE",
"461 182 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30 OFFCURVE",
"522 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706 -30 OFFCURVE",
"769 29 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 181 OFFCURVE",
"708 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 1076 OFFCURVE",
"1050 1077 OFFCURVE",
"1055 1078 CURVE SMOOTH",
"1072 1081 OFFCURVE",
"1085 1099 OFFCURVE",
"1085 1118 CURVE SMOOTH",
"1085 1137 OFFCURVE",
"1072 1155 OFFCURVE",
"1055 1158 CURVE SMOOTH",
"1050 1159 OFFCURVE",
"1021 1160 OFFCURVE",
"968 1160 CURVE SMOOTH",
"261 1160 LINE SMOOTH",
"208 1160 OFFCURVE",
"179 1159 OFFCURVE",
"174 1158 CURVE SMOOTH",
"157 1155 OFFCURVE",
"144 1137 OFFCURVE",
"144 1118 CURVE SMOOTH",
"144 1099 OFFCURVE",
"157 1081 OFFCURVE",
"174 1078 CURVE SMOOTH",
"179 1077 OFFCURVE",
"208 1076 OFFCURVE",
"261 1076 CURVE SMOOTH",
"968 1076 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2018-11-25 06:00:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 600;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2018-11-26 19:17:50 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 786 OFFCURVE",
"461 728 OFFCURVE",
"461 649 CURVE SMOOTH",
"461 576 OFFCURVE",
"522 514 OFFCURVE",
"597 514 CURVE SMOOTH",
"633 514 LINE SMOOTH",
"706 514 OFFCURVE",
"769 572 OFFCURVE",
"769 651 CURVE SMOOTH",
"769 724 OFFCURVE",
"708 786 OFFCURVE",
"633 786 CURVE SMOOTH",
"597 786 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 241 OFFCURVE",
"461 182 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30 OFFCURVE",
"522 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706 -30 OFFCURVE",
"769 29 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 181 OFFCURVE",
"708 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 786 OFFCURVE",
"41 728 OFFCURVE",
"41 649 CURVE SMOOTH",
"41 576 OFFCURVE",
"102 514 OFFCURVE",
"177 514 CURVE SMOOTH",
"213 514 LINE SMOOTH",
"286 514 OFFCURVE",
"349 572 OFFCURVE",
"349 651 CURVE SMOOTH",
"349 724 OFFCURVE",
"288 786 OFFCURVE",
"213 786 CURVE SMOOTH",
"177 786 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 241 OFFCURVE",
"41 182 OFFCURVE",
"41 105 CURVE SMOOTH",
"41 30 OFFCURVE",
"102 -30 OFFCURVE",
"177 -30 CURVE SMOOTH",
"213 -30 LINE SMOOTH",
"286 -30 OFFCURVE",
"349 29 OFFCURVE",
"349 106 CURVE SMOOTH",
"349 181 OFFCURVE",
"288 241 OFFCURVE",
"213 241 CURVE SMOOTH",
"177 241 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2018-11-26 19:18:55 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"209 866 OFFCURVE",
"146 808 OFFCURVE",
"146 729 CURVE SMOOTH",
"146 656 OFFCURVE",
"207 594 OFFCURVE",
"282 594 CURVE SMOOTH",
"318 594 LINE SMOOTH",
"391 594 OFFCURVE",
"454 652 OFFCURVE",
"454 731 CURVE SMOOTH",
"454 804 OFFCURVE",
"393 866 OFFCURVE",
"318 866 CURVE SMOOTH",
"282 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"209 241 OFFCURVE",
"146 182 OFFCURVE",
"146 105 CURVE SMOOTH",
"146 30 OFFCURVE",
"207 -30 OFFCURVE",
"282 -30 CURVE SMOOTH",
"318 -30 LINE SMOOTH",
"391 -30 OFFCURVE",
"454 29 OFFCURVE",
"454 106 CURVE SMOOTH",
"454 181 OFFCURVE",
"393 241 OFFCURVE",
"318 241 CURVE SMOOTH",
"282 241 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"706 405 OFFCURVE",
"735 406 OFFCURVE",
"740 407 CURVE SMOOTH",
"757 411 OFFCURVE",
"770 428 OFFCURVE",
"770 447 CURVE SMOOTH",
"770 466 OFFCURVE",
"757 483 OFFCURVE",
"740 487 CURVE SMOOTH",
"735 488 OFFCURVE",
"706 489 OFFCURVE",
"653 489 CURVE SMOOTH",
"296 489 LINE SMOOTH",
"243 489 OFFCURVE",
"214 488 OFFCURVE",
"209 487 CURVE SMOOTH",
"192 484 OFFCURVE",
"179 466 OFFCURVE",
"179 447 CURVE SMOOTH",
"179 428 OFFCURVE",
"192 410 OFFCURVE",
"209 407 CURVE SMOOTH",
"214 406 OFFCURVE",
"243 405 OFFCURVE",
"296 405 CURVE SMOOTH",
"653 405 LINE SMOOTH"
);
}
);
width = 914;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2018-11-26 19:19:22 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 866 OFFCURVE",
"461 808 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 656 OFFCURVE",
"522 594 OFFCURVE",
"597 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706 594 OFFCURVE",
"769 652 OFFCURVE",
"769 731 CURVE SMOOTH",
"769 804 OFFCURVE",
"708 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"597 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 241 OFFCURVE",
"461 182 OFFCURVE",
"461 105 CURVE SMOOTH",
"461 30 OFFCURVE",
"522 -30 OFFCURVE",
"597 -30 CURVE SMOOTH",
"633 -30 LINE SMOOTH",
"706 -30 OFFCURVE",
"769 29 OFFCURVE",
"769 106 CURVE SMOOTH",
"769 181 OFFCURVE",
"708 241 OFFCURVE",
"633 241 CURVE SMOOTH",
"597 241 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2018-11-25 06:00:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 600;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2018-11-26 19:19:53 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"524 866 OFFCURVE",
"461 808 OFFCURVE",
"461 729 CURVE SMOOTH",
"461 656 OFFCURVE",
"522 594 OFFCURVE",
"597 594 CURVE SMOOTH",
"633 594 LINE SMOOTH",
"706 594 OFFCURVE",
"769 652 OFFCURVE",
"769 731 CURVE SMOOTH",
"769 804 OFFCURVE",
"708 866 OFFCURVE",
"633 866 CURVE SMOOTH",
"597 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 401 OFFCURVE",
"461 342 OFFCURVE",
"461 265 CURVE SMOOTH",
"461 190 OFFCURVE",
"522 130 OFFCURVE",
"597 130 CURVE SMOOTH",
"633 130 LINE SMOOTH",
"706 130 OFFCURVE",
"769 189 OFFCURVE",
"769 266 CURVE SMOOTH",
"769 341 OFFCURVE",
"708 401 OFFCURVE",
"633 401 CURVE SMOOTH",
"597 401 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 1076 OFFCURVE",
"1050 1077 OFFCURVE",
"1055 1078 CURVE SMOOTH",
"1072 1081 OFFCURVE",
"1085 1099 OFFCURVE",
"1085 1118 CURVE SMOOTH",
"1085 1137 OFFCURVE",
"1072 1155 OFFCURVE",
"1055 1158 CURVE SMOOTH",
"1050 1159 OFFCURVE",
"1021 1160 OFFCURVE",
"968 1160 CURVE SMOOTH",
"261 1160 LINE SMOOTH",
"208 1160 OFFCURVE",
"179 1159 OFFCURVE",
"174 1158 CURVE SMOOTH",
"157 1155 OFFCURVE",
"144 1137 OFFCURVE",
"144 1118 CURVE SMOOTH",
"144 1099 OFFCURVE",
"157 1081 OFFCURVE",
"174 1078 CURVE SMOOTH",
"179 1077 OFFCURVE",
"208 1076 OFFCURVE",
"261 1076 CURVE SMOOTH",
"968 1076 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1021 -157 OFFCURVE",
"1050 -156 OFFCURVE",
"1055 -155 CURVE SMOOTH",
"1072 -152 OFFCURVE",
"1085 -134 OFFCURVE",
"1085 -115 CURVE SMOOTH",
"1085 -96 OFFCURVE",
"1072 -78 OFFCURVE",
"1055 -75 CURVE SMOOTH",
"1050 -74 OFFCURVE",
"1021 -73 OFFCURVE",
"968 -73 CURVE SMOOTH",
"261 -73 LINE SMOOTH",
"208 -73 OFFCURVE",
"179 -74 OFFCURVE",
"174 -75 CURVE SMOOTH",
"157 -78 OFFCURVE",
"144 -96 OFFCURVE",
"144 -115 CURVE SMOOTH",
"144 -134 OFFCURVE",
"157 -152 OFFCURVE",
"174 -155 CURVE SMOOTH",
"179 -156 OFFCURVE",
"208 -157 OFFCURVE",
"261 -157 CURVE SMOOTH",
"968 -157 LINE SMOOTH"
);
}
);
width = 1229;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2018-11-26 19:20:23 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"224 866 OFFCURVE",
"161 808 OFFCURVE",
"161 729 CURVE SMOOTH",
"161 656 OFFCURVE",
"222 594 OFFCURVE",
"297 594 CURVE SMOOTH",
"333 594 LINE SMOOTH",
"406 594 OFFCURVE",
"469 652 OFFCURVE",
"469 731 CURVE SMOOTH",
"469 804 OFFCURVE",
"408 866 OFFCURVE",
"333 866 CURVE SMOOTH",
"297 866 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"224 241 OFFCURVE",
"161 182 OFFCURVE",
"161 105 CURVE SMOOTH",
"161 30 OFFCURVE",
"222 -30 OFFCURVE",
"297 -30 CURVE SMOOTH",
"333 -30 LINE SMOOTH",
"406 -30 OFFCURVE",
"469 29 OFFCURVE",
"469 106 CURVE SMOOTH",
"469 181 OFFCURVE",
"408 241 OFFCURVE",
"333 241 CURVE SMOOTH",
"297 241 LINE SMOOTH"
);
}
);
width = 629;
}
);
unicode = 1361;
},
{
glyphname = "geminVowellengthcomb-ethiopic";
lastChange = "2018-11-25 06:00:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 600;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
lastChange = "2018-11-25 06:00:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 600;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
lastChange = "2018-11-25 06:00:30 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
width = 600;
}
);
unicode = 135E;
},
{
export = 0;
glyphname = _part.bi;
lastChange = "2018-11-26 03:44:09 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"974 -2 LINE",
"1009 -1 OFFCURVE",
"1038 -3 OFFCURVE",
"1059 -21 CURVE SMOOTH",
"1072 -32 OFFCURVE",
"1078 -55 OFFCURVE",
"1078 -92 CURVE SMOOTH",
"1078 -141 OFFCURVE",
"1097 -155 OFFCURVE",
"1121 -155 CURVE SMOOTH",
"1144 -155 OFFCURVE",
"1164 -133 OFFCURVE",
"1164 -93 CURVE SMOOTH",
"1164 -37 OFFCURVE",
"1147 7 OFFCURVE",
"1113 38 CURVE",
"1079 65 OFFCURVE",
"1033 79 OFFCURVE",
"974 80 CURVE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.h;
lastChange = "2018-11-26 03:27:14 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"520 1255 LINE",
"323 1255 LINE SMOOTH",
"283 1255 OFFCURVE",
"267 1237 OFFCURVE",
"267 1213 CURVE SMOOTH",
"267 1188 OFFCURVE",
"283 1170 OFFCURVE",
"323 1170 CURVE SMOOTH",
"436 1170 LINE",
"437 1024 LINE SMOOTH",
"437 1013 OFFCURVE",
"446 1004 OFFCURVE",
"457 1004 CURVE SMOOTH",
"576 1004 LINE",
"576 475 LINE",
"660 488 LINE",
"660 1048 LINE SMOOTH",
"660 1059 OFFCURVE",
"651 1068 OFFCURVE",
"640 1068 CURVE SMOOTH",
"520 1068 LINE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.hee;
lastChange = "2018-11-26 05:58:01 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"648 826 OFFCURVE",
"630 842 OFFCURVE",
"605 842 CURVE SMOOTH",
"581 842 OFFCURVE",
"563 826 OFFCURVE",
"563 785 CURVE SMOOTH",
"563 -214 LINE",
"647 -214 LINE",
"648 785 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"647 -214 LINE",
"682 -213 OFFCURVE",
"711 -222 OFFCURVE",
"732 -240 CURVE SMOOTH",
"745 -251 OFFCURVE",
"751 -274 OFFCURVE",
"751 -311 CURVE SMOOTH",
"751 -360 OFFCURVE",
"770 -374 OFFCURVE",
"794 -374 CURVE SMOOTH",
"817 -374 OFFCURVE",
"837 -352 OFFCURVE",
"837 -312 CURVE SMOOTH",
"837 -256 OFFCURVE",
"820 -212 OFFCURVE",
"786 -181 CURVE SMOOTH",
"752 -154 OFFCURVE",
"706 -140 OFFCURVE",
"647 -139 CURVE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.hu;
lastChange = "2018-11-25 06:16:07 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"986 449 LINE",
"986 659 LINE",
"1045 660 OFFCURVE",
"1091 674 OFFCURVE",
"1125 701 CURVE",
"1159 732 OFFCURVE",
"1176 776 OFFCURVE",
"1176 832 CURVE SMOOTH",
"1176 872 OFFCURVE",
"1156 894 OFFCURVE",
"1133 894 CURVE SMOOTH",
"1109 894 OFFCURVE",
"1090 880 OFFCURVE",
"1090 831 CURVE SMOOTH",
"1090 794 OFFCURVE",
"1084 771 OFFCURVE",
"1071 760 CURVE SMOOTH",
"1050 742 OFFCURVE",
"1021 733 OFFCURVE",
"986 734 CURVE",
"986 866 LINE",
"935 866 LINE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.hwo;
lastChange = "2018-11-26 00:18:39 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"898 -252 LINE",
"898 -302 LINE",
"804 -302 LINE SMOOTH",
"763 -302 OFFCURVE",
"747 -319 OFFCURVE",
"747 -344 CURVE SMOOTH",
"747 -368 OFFCURVE",
"763 -386 OFFCURVE",
"804 -386 CURVE SMOOTH",
"986 -386 LINE",
"986 -255 LINE"
);
},
{
closed = 1;
nodes = (
"979 -386 LINE",
"1014 -385 OFFCURVE",
"1043 -394 OFFCURVE",
"1064 -412 CURVE SMOOTH",
"1077 -423 OFFCURVE",
"1083 -446 OFFCURVE",
"1083 -483 CURVE SMOOTH",
"1083 -532 OFFCURVE",
"1102 -546 OFFCURVE",
"1126 -546 CURVE SMOOTH",
"1149 -546 OFFCURVE",
"1169 -524 OFFCURVE",
"1169 -484 CURVE SMOOTH",
"1169 -428 OFFCURVE",
"1152 -384 OFFCURVE",
"1118 -353 CURVE",
"1084 -326 OFFCURVE",
"1038 -312 OFFCURVE",
"979 -311 CURVE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.li;
lastChange = "2018-11-26 08:32:49 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"890 -103 LINE",
"890 -384 LINE",
"974 -384 LINE",
"974 -101 LINE"
);
},
{
closed = 1;
nodes = (
"1157 -150 OFFCURVE",
"1138 -164 OFFCURVE",
"1138 -213 CURVE SMOOTH",
"1138 -250 OFFCURVE",
"1132 -273 OFFCURVE",
"1119 -284 CURVE SMOOTH",
"1098 -302 OFFCURVE",
"1069 -311 OFFCURVE",
"1034 -310 CURVE SMOOTH",
"890 -310 LINE",
"890 -386 LINE",
"1034 -386 LINE",
"1093 -384 OFFCURVE",
"1139 -370 OFFCURVE",
"1173 -343 CURVE",
"1207 -312 OFFCURVE",
"1224 -268 OFFCURVE",
"1224 -212 CURVE SMOOTH",
"1224 -172 OFFCURVE",
"1204 -150 OFFCURVE",
"1181 -150 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.me;
lastChange = "2018-11-26 03:23:59 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"269 781 LINE",
"483 781 LINE",
"483 -59 LINE SMOOTH",
"483 -196 OFFCURVE",
"387 -302 OFFCURVE",
"244 -302 CURVE SMOOTH",
"203 -302 LINE",
"197 -386 LINE",
"246 -386 LINE SMOOTH",
"302 -386 OFFCURVE",
"350 -376 OFFCURVE",
"391 -355 CURVE SMOOTH",
"508 -295 OFFCURVE",
"567 -202 OFFCURVE",
"567 -59 CURVE SMOOTH",
"567 866 LINE",
"274 866 LINE"
);
},
{
closed = 1;
nodes = (
"206 -302 LINE",
"101 -302 LINE SMOOTH",
"61 -302 OFFCURVE",
"45 -320 OFFCURVE",
"45 -345 CURVE SMOOTH",
"45 -370 OFFCURVE",
"61 -387 OFFCURVE",
"101 -387 CURVE SMOOTH",
"206 -387 LINE"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.o;
lastChange = "2018-11-25 23:45:12 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"412.017 203.471 OFFCURVE",
"352.207 264.551 OFFCURVE",
"278.369 264.551 CURVE SMOOTH",
"204.53 264.551 OFFCURVE",
"144.721 203.471 OFFCURVE",
"144.721 130.327 CURVE SMOOTH",
"144.721 57.182 OFFCURVE",
"204.53 -3.898 OFFCURVE",
"278.369 -3.898 CURVE SMOOTH",
"352.207 -3.898 OFFCURVE",
"412.017 57.182 OFFCURVE",
"412.017 130.327 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"367.713 81.312 OFFCURVE",
"327.841 41.346 OFFCURVE",
"278.369 41.346 CURVE SMOOTH",
"228.897 41.346 OFFCURVE",
"189.024 82.066 OFFCURVE",
"189.024 130.327 CURVE SMOOTH",
"189.024 178.587 OFFCURVE",
"228.159 219.307 OFFCURVE",
"278.369 219.307 CURVE SMOOTH",
"327.841 219.307 OFFCURVE",
"367.713 179.341 OFFCURVE",
"367.713 130.327 CURVE SMOOTH"
);
}
);
width = 1229;
}
);
},
{
export = 0;
glyphname = _part.tip;
lastChange = "2018-11-26 00:31:48 +0000";
layers = (
{
layerId = "43C596A3-827A-4C98-B0F6-D1945E7BEF5E";
paths = (
{
closed = 1;
nodes = (
"1003 156 LINE",
"1003 46 LINE SMOOTH",
"1003 5 OFFCURVE",
"1021 -10 OFFCURVE",
"1045 -10 CURVE SMOOTH",
"1070 -10 OFFCURVE",
"1087 5 OFFCURVE",
"1087 46 CURVE SMOOTH",
"1087 140 LINE",
"1087 146 LINE"
);
}
);
width = 1229;
}
);
}
);
instances = (
{
customParameters = (
{
name = familyName;
value = "Abesha Kitfo";
}
);
instanceInterpolations = {
"43C596A3-827A-4C98-B0F6-D1945E7BEF5E" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturer = codeHabesha;
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 0;
}
